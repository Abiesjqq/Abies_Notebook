{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Abies's Notebook ~","text":"<ul> <li> <p>Bulletin board</p> <p>\u5e7f\u544a\u4f4d\u62db\u79df</p> <ul> <li>\u6216\u8bb8\u4f1a\u6709\u66f4\u65b0\u6216\u516c\u544a\u653e\u5728\u8fd9\u91cc</li> </ul> </li> </ul> <p>   \u603b\u8bbf\u95ee\u91cf\uff1a \u6b21 </p>"},{"location":"AbiesNotes/Abies_index/","title":"\u6249\u9875","text":"<ul> <li> <p>Frontispiece</p> </li> </ul>"},{"location":"AbiesNotes/Abies_index/#fear-the-science-my-friend","title":"Fear the science, my friend.","text":"<ul> <li>GAMES101  </li> <li>Tinyrenderer  </li> <li>Robot Control  </li> </ul>"},{"location":"AbiesNotes/CS61A/cs61a_lab0/","title":"Cs61a lab0","text":"<p>\u4e00\u4e9b\u547d\u4ee4\uff1als, pwd, cd, mkdir, mv, unzip</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2001%20Overview%20of%20Computer%20Graphics/","title":"Lec 01 Overview of Computer Graphics","text":"<p>Menu of this lecture</p> <ul> <li>Concepts of raterization, ray tracing etc.</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2001%20Overview%20of%20Computer%20Graphics/#basic-concepts","title":"Basic Concepts","text":"<p>Rasterization</p> <ol> <li>Project geometry primitives (3D triangles / polygons) onto the screen.</li> <li>Break projected primitives into fragments (pixels)</li> <li>Real-time applications is the gold standard in Video Games</li> </ol> translation <ol> <li>\u5c06\u51e0\u4f55\u5f62\u72b6\uff083D \u4e09\u89d2\u5f62/\u591a\u8fb9\u5f62\uff09\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a</li> <li>\u5c06\u6295\u5f71\u540e\u7684\u56fe\u5143\u5212\u5206\u4e3a\u7247\u6bb5\uff08\u50cf\u7d20\uff09</li> <li>\u5728\u89c6\u9891\u6e38\u620f\u4e2d\uff0c\u5b9e\u65f6\u5e94\u7528\u662f\u9ec4\u91d1\u6807\u51c6</li> </ol> <p>Curves and Meshes</p> <p>Ray Tracing</p> <p>Shoot rays from camera through each pixel Offline application is the gold standard in Animation / Movies</p> <p>Animation / Simulation</p> <p>Difference between Computer Graphics and Computer Vision?</p> <p></p> <p>Click here to jump to the course website</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2002%20Review%20of%20Linear%20Algebra/","title":"Lec 02 Review of Linear Algebra","text":"<p>Menu of this lecture</p> <ul> <li>Functions of dot product and cross product</li> <li>Dot product and cross product in matrix</li> </ul> <p>Unit vector: \\(\\hat{a}=\\vec{a}/|\\vec{a}|\\) Usually use unit vectors to present directions.</p> <p>Vectors are represented as column vectors by default.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2002%20Review%20of%20Linear%20Algebra/#functions-of-dot-product-and-cross-product","title":"Functions of dot product and cross product","text":"<p>Dot product:</p> <ol> <li>Find the angle between two vectors.    e.g cosine of angle bwtween light source and surface.</li> <li>Find projection of one vector on another.</li> </ol> <p>More specifically:</p> <ol> <li>Measure how close two directions are.</li> <li>Decompose a vector.</li> <li>Determine forward / backward.</li> </ol> <p>Cross product:</p> <ol> <li>Construction coordinate systems.</li> </ol> <p>Functions:</p> <ol> <li>Determine left / right. Given a plane and two vectors on this plane, determine the relative position of the two vectors.</li> <li>Determine in / out. Several vectors are connected head-to-tail to form a closed shape. Given another point, determine whether this point lies inside the closed shape.</li> </ol> <p>e.g.  Check: \\(\\vec{AB}\\times\\vec{AP}, \\vec{BC}\\times\\vec{BP}, \\vec{CA}\\times\\vec{CP}\\). If the signs of all three are the same, then point P is inside the shape.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2002%20Review%20of%20Linear%20Algebra/#dot-product-and-cross-product-in-matrix","title":"Dot product and cross product in matrix:","text":"<p>2D reflection about y-axis:</p> \\[ \\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix}= \\begin{pmatrix} -x \\\\ y \\end{pmatrix} \\] matrix in latex Text Only<pre><code>\\begin{pmatrix}\na &amp; b \\\\\nc &amp; d\n\\end{pmatrix}\n</code></pre> <p>Rendered output:</p> \\[ \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\] \\[ \\vec{a}\\cdot\\vec{b}=A^T\\cdot B =\\begin{pmatrix} x_a &amp; y_a &amp; z_a \\end{pmatrix} \\begin{pmatrix} x_b \\\\ y_b \\\\ z_b \\end{pmatrix} \\] \\[ \\vec{a}\\times\\vec{b}=A^*B =\\begin{pmatrix}  0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}  \\begin{pmatrix}  x_b \\\\ y_b \\\\ z_b  \\end{pmatrix} \\] <p>(\\(\\begin{pmatrix}   0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}\\) is the dual matrix of \\(\\vec{a}\\))</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/","title":"Lec 03 Transformation","text":"<p>Menu of this lecture</p> <ul> <li>2D transformations: rotation, scale, shear</li> <li>Homogeneous coordinates</li> <li>Composing transformation</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/#viewing-transformation","title":"Viewing transformation","text":"<p>Viewing transformation: 3D -&gt; 2D projection</p> <p>Scale</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} s_x &amp; 0 \\\\ 0 &amp; s_y \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Multiplying a matrix on the left corresponds to performing a row operation.</p> <p>Reflection</p> <p>E.g. reflection about the y-axis:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Sheer</p> <p>Illustration of sheer tranformation: </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} x+ay \\\\ y \\end{pmatrix} =\\begin{pmatrix} 1 &amp; a \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Rotation</p> <p>By default, the rotation is around the origin. \\(R_{45}\\) refers to rotatiing 45 degrees counterclockwose about the origin. </p> \\[ R_{\\theta}=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\ \\sin\\theta &amp; \\cos\\theta \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/#homogeneous-coordinates","title":"Homogeneous Coordinates","text":"<p>Translation is not linear transform, so it cannot be represented in matrix form.  But we don't want it to be a special case, so homogeneous coordinates are used to represent all transformations. </p> <p>Add a third coordinate (w-coordinate), to represent the translation characters of points or vectors.  </p> <p>Affine transformations: affine map = linear map + translation map  </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} +\\begin{pmatrix} t_x \\\\ t_y \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/#2d-version","title":"2D version","text":"<ul> <li>2D point: \\(\\begin{pmatrix}x , y , 1 \\end{pmatrix}^T\\)</li> <li>2D vector:\\(\\begin{pmatrix}x , y , 0 \\end{pmatrix}^T\\)</li> </ul> <p>When \\(w\\neq 0\\), 2D point \\(\\begin{pmatrix}x , y , w \\end{pmatrix}^T\\) means \\(\\begin{pmatrix}x/w , y/w , 1 \\end{pmatrix}^T\\)</p> <p>(The w-coordinate of vectors are 0, which means vectors are translation invariant. By comparison, w-coordinate of points are 1)</p> <p>Use homogeneous Coordinates to represent affine translations:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\\\ w' \\end{pmatrix} =\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ 1 \\end{pmatrix} =\\begin{pmatrix} x+t_x \\\\ y+t_y \\\\ 1 \\end{pmatrix} \\] <p>Properties:  1. The last row must be 0 0 1. 2. The top-left 2\u00d72 matrix represents a linear transformation. 3. The rightmost column represents translation. 4. Relations between points and vectors:    - vector + vector = vector    - point  - point  = vector    - point  + vector = point    - point  + point  = point</p> <p>Scale:</p> \\[ S(s_x, s_y)=\\begin{pmatrix} s_x &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Rotation:</p> \\[ R(\\alpha)=\\begin{pmatrix} \\cos\\alpha &amp; -\\sin\\alpha &amp; 0 \\\\ \\sin\\alpha &amp; \\cos\\alpha &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y)=\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\  0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Inverse transformations: \\(M^{-1}\\)</p> <p>Esp. matrix \\(R_{\\theta}\\) for rotation is orthogonal, so \\(R_{-\\theta}=R^{-1}=R^T\\).</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/#3d-version","title":"3D version","text":"<ul> <li>3D point: \\(\\begin{pmatrix}x , y , z, 1 \\end{pmatrix}^T\\)</li> <li>3D vector:\\(\\begin{pmatrix}x , y , z, 0 \\end{pmatrix}^T\\)</li> </ul> <p>Use 4\u00d74 matrix for affine transformations. </p>"},{"location":"AbiesNotes/GAMES101/Lecture%2003%20Transformation/#composing-transforms","title":"Composing Transforms","text":"<p>All matrices are left-multiplied to the original coordinates, and are composed in the order of transformations from right to left.</p> <p>Examples</p> <p>Transformations: A1 -&gt; A2 -&gt; ... -&gt; An Matrix: \\(A_n\\cdots A_2A_1\\begin{pmatrix}x \\\\ y \\\\ 1\\end{pmatrix}\\)</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/","title":"Lec 04 Transformations Cont.","text":"<p>Menu of this lecture</p> <ul> <li>3D transformations</li> <li>Viewing transformations</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#3d-transformations","title":"3D Transformations","text":"<p>Scale:</p> \\[ S(s_x, s_y, s_z)= \\begin{pmatrix} s_x &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; s_z &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y, t_z)= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; 0 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#3d-rotations","title":"3D Rotations","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#compose-from-r_x-r_y-r_z","title":"Compose from \\(R_x, R_y, R_z\\)","text":"\\[ R_x(\\theta)=\\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos\\theta &amp; -\\sin\\theta &amp; 0 \\\\ 0 &amp; \\sin\\theta &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] \\[ R_y(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; 0 &amp; \\sin\\theta &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ -\\sin\\theta &amp; 0 &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>The rotation part of \\(R_y(\\theta)\\) is different from common rotation matrix, because \\(\\vec{y}=\\vec{z}\\times\\vec{x}\\), which is not the common sequence xyzxyz.</p> \\[ R_z(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta &amp; 0 &amp; 0 \\\\ \\sin\\theta &amp; \\cos\\theta &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>When rotating around x-, y-, and z- axis with angle \\(\\alpha, \\beta, \\gamma\\) respectively (\\(\\alpha, \\beta, \\gamma\\) are called Euler angles), </p> \\[ R_{xyz}(\\alpha, \\beta, \\gamma)=R_x(\\alpha)R_y(\\beta)R_z(\\gamma) \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#rodrigues-rotation-formation","title":"Rodrigues' Rotation Formation","text":"<p>Rotation by angle \\(\\alpha\\) around axis n,</p> \\[ R(n, \\alpha)=\\cos(\\alpha)I+(1-\\cos(\\alpha))n n^T+\\sin(\\alpha)\\begin{pmatrix} 0 &amp; -n_z &amp; n_y \\\\ n_z &amp; 0 &amp; -n_x \\\\ -n_y &amp; n_x &amp; 0 \\end{pmatrix} \\] <p>If the axis of rotation does not pass through the origin, first translate the entire system so that the axis passes through the origin, perform the rotation, and then translate the entire system back to its original position.</p> <p>Quaternions can be used for interpolation between rotation angles.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#viewing-transformations","title":"Viewing transformations","text":"<p>MVP Transformations:</p> <ol> <li>Model transformations (arrange objects and places)</li> <li>View transformations (arrange angles)</li> <li>Projection transformations</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#define-camera","title":"Define camera","text":"<ul> <li>position: \\(\\hat{e}\\) (points from the origin to the camera)</li> <li>look-at / gaze direction: \\(\\hat{g}\\) (points from the camera to the object)</li> <li>up direction: \\(\\hat{t}\\)</li> </ul> <p>Usually we transform the camera to the origin, up at Y, look at -Z. And transform the objects along with the camera.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#transform-the-camera-mv-transformation","title":"Transform the camera (MV transformation)","text":"<p>Steps:</p> <ol> <li>Translate e to origin (\\(T_{view}\\))</li> <li>Rotate g to -Z, t to Y, (g, x, t) to x (\\(R_{view}\\))</li> </ol> <p>\\(T_{view}\\):</p> \\[ T_{view}= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -x_e \\\\ 0 &amp; 1 &amp; 0 &amp; -y_e \\\\ 0 &amp; 0 &amp; 1 &amp; -z_e \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\\(R_{view}\\): Consider its inverse rotation (X to (g, x, t), Y to t, Z to -g).</p> <p>comment</p> <p>Both the direction and order of rotation must be reversed.</p> \\[ R_{view}^{-1}=\\begin{pmatrix} x_{\\hat{g}\\times\\hat{t}} &amp; x_t &amp; x_{-g} &amp; 0 \\\\ y_{\\hat{g}\\times\\hat{t}} &amp; y_t &amp; y_{-g} &amp; 0 \\\\ z_{\\hat{g}\\times\\hat{t}} &amp; z_t &amp; z_{-g} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Since \\(R_{view}\\) is orthoganal, </p> \\[R_{view}=(R_{view}^{-1})^T\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#projection-transformation","title":"Projection transformation","text":"<p>Two 3D -&gt; 2D types:</p> <ol> <li>orthographic projection  </li> <li>perspective projection</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#orthographic-projection","title":"Orthographic projection","text":"<p>Consider a cuboid \\([l,r]\\times[b,t]\\times[f,n]\\), map it to the canonical cube \\([-1,1]^3\\), and drop Z coordinate to project.</p> Why we just need to drop Z coordinate? <p>In the \"Define camera\" part, we define the camera located at the origin, up at Y, look at -Z.</p> \\[ M_{ortho} = \\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\frac{r + l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t + b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n + f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2004%20Transformations%20Cont/#perspective-projection","title":"Perspective projection","text":"<p>Illustration:</p> <p></p> <p>Steps: 1. Squish the frustum into a cuboid, all points on the near plane remain unchanged, all points on the far plane undergo in-plane contraction, with the center point of the far plane remaining fixed. 2. Do orthographic projection.</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; n &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; n+f &amp; -nf\\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{pmatrix} \\] Derivation <p>Squish illustration: </p> \\[ M_{persp\\to ortho}\\begin{pmatrix}x\\\\y\\\\z\\\\1\\end{pmatrix} =\\begin{pmatrix}nx/z\\\\ny/z\\\\?\\\\1\\end{pmatrix} =\\begin{pmatrix}nx\\\\ny\\\\?\\\\z\\end{pmatrix} \\] <p>thus,</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n&amp;0&amp;0&amp;0\\\\ 0&amp;n&amp;0&amp;0\\\\ A&amp;B&amp;C&amp;D\\\\ 0&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>According to the properties of squishing, consider a point on the near plane and the middle point on the far plane to solve the third row.</p> <ol> <li>\\((x,y,n,1)\\to(x,y,n,1)=(nx,ny,n^2,n)\\) \\(n^2\\) is unrelated to x and y, thus \\(A=B=0, Cn+D=n^2\\) </li> <li>\\((0,0,f,1)\\to(0,0,f,1)=(0,0,f^2,f)\\) \\(Cf+D=f^2\\)</li> </ol> <p>Solve the equations above:</p> \\[C=n+f, D=-nf\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2005%20Rasterization%201%20%28Triangles%29/","title":"Lec 05 Rasterization 1 (Triangles)","text":"<p>Menu of this lecture</p> <ul> <li>Some basic concepts</li> <li>Rasterization process</li> <li>Different raster displays</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2005%20Rasterization%201%20%28Triangles%29/#some-basic-concepts","title":"Some basic concepts","text":"<ol> <li>Aspect radio: width / height</li> <li>Field of view</li> <li>Screen: an array of pixels</li> <li>Resolution: size of the array</li> <li>Rasterize: drawing onto the screen</li> <li>Pixel: (for now, ) a little square with uniform color</li> </ol> <p>\u4e0d\u60f3\u6253\u5b57\u4e86\uff0c\u5f85\u8865\u5145</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/","title":"Lec 06 Rasterization 2 (Antiliasing)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 698 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>Menu of this lecture</p> <ul> <li>Concepts</li> <li>Frequency Domain</li> <li>Filtering</li> <li>Convolution</li> <li>Sampling</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#concepts","title":"Concepts","text":"<p>Photograph: sample space Video: sample time</p> <p>Artifact: errors/mistakes/inaccuracies in CG e.g. jaggies, Moire patterns, Wagon wheel effect... Reason: signals are changing too fast, but sampled too slowly.</p> <p>Antialiasing idea: blurring (pre-filtering) before sampleing \u53cd\u8d70\u6837\u7684\u601d\u60f3\uff1a\u5728\u91c7\u6837\u4e4b\u524d\u505a\u6a21\u7cca\uff08\u6ee4\u6ce2\uff09  </p> Antialiasing and Blurred Aliasing <ul> <li>Anitialiasing: filter then sample</li> <li>Blurred Aliasing: sample then filter</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#frequency-domain","title":"Frequency Domain","text":"<p>Frequencies: \\(\\cos 2\\pi fx\\), \\(f=\\frac{1}{T}\\) Fourier transform decomposes a signal into frequencies.</p> <p></p> <p>Why frequency leads to aliasing? Higher frequencies need faster sampling. Otherwise, the reconstruction will be inaccurate. It will appear to be a lower-frequency signal. Two frequencies that are indistinguishable at a given sampling are called \"aliases\".</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#filtering","title":"Filtering","text":"<p>Filtering(\u6ee4\u6ce2): Getting rid of certain frequency contents.</p> <p></p> <p>\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u56fe\u50cf\u4ece\u65f6\u57df\u53d8\u4e3a\u9891\u57df\uff0c\u5373\u5c06\u6bcf\u4e2a\u70b9\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u4e0d\u540c\u9891\u7387\u7684\u4fe1\u606f\u3002 \u53f3\u8fb9\u56fe\u50cf\uff08\u9891\u8c31\uff09\u7684\u4e2d\u5fc3\u5b9a\u4e49\u4e3a\u4f4e\u9891\u9891\u7387\uff0c\u5468\u56f4\u5b9a\u4e49\u4e3a\u9ad8\u9891\u9891\u7387\uff0c\u4ece\u4e2d\u5fc3\u5230\u5468\u56f4\u9891\u7387\u9012\u589e\u3002\u7528\u56fe\u7247\u7684\u4eae\u5ea6\u8868\u793a\u4e0d\u540c\u9891\u7387\u4e0a\u4fe1\u606f\u7684\u91cf\u3002 \u81ea\u7136\u4e0b\u56fe\u7247\u4fe1\u606f\u57fa\u672c\u51e0\u79cd\u5728\u4f4e\u9891\u533a\u57df\u3002 \u6c34\u5e73\u548c\u7ad6\u76f4\u6709\u9ad8\u4eae\u5ea6\u7684\u5341\u5b57\u7ebf\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u65f6\u8ba4\u4e3a\u56fe\u7247\u5468\u671f\u6027\u91cd\u590d\uff0c\u5230\u8fbe\u4e00\u4e2a\u8fb9\u754c\u540e\u91cd\u590d\u76f8\u5bf9\u8fb9\u754c\u7684\u5185\u5bb9\u3002\u4ea4\u754c\u5904\u56fe\u7247\u5267\u70c8\u53d8\u5316\uff0c\u4ea7\u751f\u6781\u9ad8\u7684\u9ad8\u9891\u4fe1\u53f7\u3002</p> <p></p> <p>\u9ad8\u901a\u6ee4\u6ce2\uff08High-pass filter\uff09\uff1a\u53bb\u9664\u4f4e\u9891\u9891\u7387\uff0c\u4fdd\u7559\u9ad8\u9891\u9891\u7387\uff0c\u5bf9\u5e94\u4fdd\u7559\u56fe\u50cf\u7684\u8fb9\u754c\u3002 \u4e3a\u4ec0\u4e48\u4fdd\u7559\u8fb9\u754c\uff1f\u8fb9\u754c\u5904\u56fe\u50cf\u53d8\u5316\u5267\u70c8\uff0c\u9ad8\u9891\u4fe1\u53f7\u4fe1\u606f\u5927\u3002</p> <p></p> <p>\u4f4e\u901a\u6ee4\u6ce2\uff08low-pass filter\uff09\uff1a\u4fdd\u7559\u4f4e\u9891\u9891\u7387\uff0c\u53bb\u9664\u9ad8\u9891\u9891\u7387\uff0c\u5bf9\u5e94\u56fe\u50cf\u53d8\u6a21\u7cca\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#convolution","title":"Convolution","text":"<p>Filtering=Convolution=Averaging</p> <p>\u5377\u79ef\uff1a\u5728\u79fb\u52a8\u7a97\u53e3\u65f6\u5c06\u7a97\u53e3\u7684\u6570\u548c\u8986\u76d6\u7684\u4fe1\u53f7\u503c\u70b9\u4e58\uff0c\u5728\u4efb\u610f\u4f4d\u7f6e\u548c\u5468\u56f4\u7684\u6570\u505a\u52a0\u6743\u5e73\u5747\u3002 \u5b9a\u7406\uff1a\u65f6\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff0c\u5bf9\u5e94\u4e8e\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u4e58\u79ef\u3002\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff0c\u5bf9\u5e94\u4e8e\u65f6\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u4e58\u79ef\u3002  </p> <p>\u5377\u79ef\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u76f4\u63a5\u5728\u65f6\u57df\u4e0a\u70b9\u4e58</li> <li>\u53d8\u6362\u5230\u9891\u57df\u4e0a\uff0c\u5728\u9891\u57df\u4e0a\u4e58\u79ef\uff0c\u518d\u9006\u53d8\u6362\u4f1a\u65f6\u57df</li> </ol> <p>\u5377\u79ef\u6838\uff1a\u6240\u6709\u7cfb\u6570\u548c\u4e3a1\u3002 \u9891\u8c31\u7684\u4e58\u79ef\u76f8\u5f53\u4e8e\u7559\u4e0b\u5377\u79ef\u6838\u9891\u8c31\u4e2d\u6709\u4fe1\u606f\u7684\u90e8\u5206\u3002 \u5377\u79ef\u6838\u8d8a\u5927\uff0c\u9891\u8c31\u4e0a\u56fe\u50cf\u8d8a\u5c0f\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#sampling","title":"Sampling","text":"<p>Sampling=repeating frequency contents</p> <p>\u51b2\u6fc0\u51fd\u6570\uff1a\u6a21\u62df\u5355\u4f4d\u8109\u51b2\uff0c\u53ea\u5728\u4e00\u7cfb\u5217\u5468\u671f\u6027\u7684\u70b9\u4e0a\u6709\u503c\uff0c\u5176\u4f59\u70b9\u4e3a\u96f6\u3002\u51b2\u6fc0\u51fd\u6570\u8f6c\u5316\u5230\u9891\u57df\u540e\u4ecd\u4e3a\u51b2\u6fc0\u51fd\u6570\u3002 \u539f\u4fe1\u53f7\u548c\u51b2\u6fc0\u51fd\u6570\u76f8\u4e58\uff08\u6216\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff09\uff0c\u5f97\u5230\u91c7\u6837\u540e\u4fe1\u53f7\u3002  </p> <p>\u91c7\u6837\u662f\u91cd\u590d\u539f\u59cb\u4fe1\u53f7\u7684\u9891\u8c31\u3002 \u91c7\u6837\u95f4\u9694\u5f71\u54cd\u539f\u59cb\u4fe1\u53f7\u590d\u5236\u7684\u95f4\u9694\u3002 \u91c7\u6837\u7387\u4e0d\u8db3\uff0c\u91c7\u6837\u95f4\u9694\u5927\uff0c\u539f\u59cb\u4fe1\u53f7\u9891\u8c31\u590d\u5236\u7684\u95f4\u9694\u5c0f\uff0c\u590d\u5236\u642c\u79fb\u65f6\u9891\u8c31\u90e8\u5206\u6df7\u5408\uff0c\u53d1\u751f\u8d70\u6837\u3002</p> <p>\u51cf\u5c0f\u8d70\u6837\u9519\u8bef\uff1a 1. \u63d0\u9ad8\u91c7\u6837\u9891\u7387 2. \u53cd\u8d70\u6837\uff1a\u5148\u53bb\u9664\u9ad8\u9891\u4fe1\u53f7\uff0c\u518d\u91c7\u6837</p> <p>\u53bb\u9664\u9ad8\u9891\u4fe1\u53f7\u540e\uff0c\u6bcf\u4e2a\u5468\u671f\u4e24\u4fa7\u7684\u9891\u7387\u5f3a\u5ea6\u4e3a\u96f6\uff0c\u5728\u7a00\u758f\u91c7\u6837\u642c\u79fb\u95f4\u9694\u5c0f\u7684\u60c5\u51b5\u4e0b\u4e0d\u4ea7\u751f\u91cd\u53e0\u90e8\u5206\u3002</p> <p>Antialiasing by averaging values in pixel area: 1. Convolve f(x,y) by a 1-pixel box-blur 2. Then sample at every pixel's center</p> <p>f(x,y)=inside(triangle,x,y) is equal to the area of the pixel covered by the triangles. </p> <p>\u8ba1\u7b97\u50cf\u7d20\u88ab\u8986\u76d6\u7684\u9762\u79ef\uff1f Multisample Antialiasing(MSAA)\uff1a\u7528\u66f4\u591a\u91c7\u6837\u70b9\u8fdb\u884c\u53cd\u8d70\u6837\u6a21\u7cca\u7684\u8fd1\u4f3c   \u5c06\u50cf\u7d20\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u50cf\u7d20   MAAA\u89e3\u51b3\u201c\u6a21\u7cca\u201d\u7684\u64cd\u4f5c\uff0c\u6ca1\u6709\u6539\u53d8\u5c4f\u5e55\u7684\u50cf\u7d20\u503c\uff0c\u6ca1\u6709\u63d0\u9ad8\u5206\u8fa8\u7387\u3002  </p> <p>\u5176\u4ed6\u6297\u952f\u9f7f\u7684\u65b9\u6cd5\uff1aFXAA\uff0cTAA \u8d85\u5206\u8fa8\u7387\uff1a\u9632\u6b62\u56fe\u7247\u653e\u5927\u540e\u51fa\u73b0\u952f\u9f7f\uff0cDLSS</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2007%20Shading%201/","title":"Lec 07 Shading 1 (Illumination, Shading and Graphics Pipelines)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 137 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2007%20Shading%201/#z-buffer","title":"Z-Buffer","text":"<p>Painter's Algorithm: paint from back to front, overwrite in the framebuffer.</p> <p>\u5bf9\u4e09\u89d2\u5f62\u6392\u5e8f\uff0c\u5728\u76f8\u4e92\u906e\u6321\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u6392\u5e8f\u3002\u56e0\u6b64\u5bf9\u50cf\u7d20\u6392\u5e8f\uff08\u6bcf\u4e2a\u50cf\u7d20\u8bb0\u5f55\u6700\u8fd1\u7684\u8ddd\u79bb\uff09\u3002</p> <p>Z-Buffer: store current min. z-value for each sample (pixel). Needs an additional buffer for depth values. Frame buffer stores color values, depth buffer (z-buffer) stores depth. NOTE: For simplicity we suppose z is always positive.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2007%20Shading%201/#shading","title":"Shading","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2007%20Shading%201/#definition","title":"Definition","text":"<p>Shading: The darkening or coloring of an illustration or diagram with parallel lines or a block of color. In this course: The process of applying a material to an object.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2007%20Shading%201/#blinn-phong-reflectance-model","title":"Blinn-Phong Reflectance Model","text":"<p>Shading: specular highlight + diffuse reflection + ambient lighting</p> <p>Input:</p> <ol> <li>viewer direction: v</li> <li>surface normal: n</li> <li>light direction: l</li> <li>surface parameters</li> </ol> <p>Diffuse Reflection</p> <p>How much light (energy) is received? Lambert\u2019s cosine law: \\(\\cos\\theta=\\mathbb{i}\\cdot\\mathbb{n}\\)</p> <p>Light Falloff</p> <p>\u70b9\u5149\u6e90\uff0c\u80fd\u91cf\u96c6\u4e2d\u5728\u9760\u8fd1\u4e2d\u5fc3\u7684\u7403\u58f3\uff0c\u4f46\u662f\u8fdc\u8fd1\u7403\u58f3\u80fd\u91cf\u5b88\u6052\u3002 distance: r, intensity: I \u5e73\u65b9\u53cd\u6bd4\uff0c\u8ba1\u7b97\u6709\u591a\u5c11\u5149\u5230\u8fbe shading point</p> <p>**Lambertian (Diffuse) Shading. **</p> \\[L_d=k_d(I/r^2)max(0, \\mathbb{n}\\cdot\\mathbb{l})\\] <p>\\(L_d\\): diffusely reflected light \\(I/r^2\\): energy arrived at the shading point \\(k_d\\): diffuse coefficient \\(max(0, \\mathbb{n}\\cdot\\mathbb{l})\\): energy received by the shading point kd \u5b9a\u4e49\u4e0d\u540c\u6750\u8d28\u5bf9\u5149\u7684\u5438\u6536\uff0ckd \u8d8a\u5927\u7269\u4f53\u8d8a\u4eae</p> <p>\u516c\u5f0f\u4e2d\u4e0d\u542b v\uff1a\u6f2b\u53cd\u5c04\u7684\u53cd\u5c04\u5149\u7ebf\u5747\u5300\u5206\u5e03\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\uff0c\u548c\u89c2\u5bdf\u65b9\u5411\u65e0\u5173\u3002 \u5982\u679c\u533a\u5206 rgb\uff0c\u5219\u7ed9\u4e0d\u540c\u533a\u57df\u8d4b\u4e88\u4e0d\u540c\u989c\u8272\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/","title":"Lec 08 Shading 2 (Shading, Pipeline and Texture Mapping)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 416 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/#specular-term","title":"Specular Term","text":"<p>\u4ec0\u4e48\u65f6\u5019\u80fd\u770b\u5230\u9ad8\u5149\uff1f</p> <ol> <li>\u7269\u4f53\u5149\u6ed1\uff0c\u53cd\u5c04\u96c6\u4e2d\u5728\u955c\u9762\u53cd\u5c04</li> <li>\u89c6\u89d2\u4e0e\u955c\u9762\u53cd\u5c04\u65b9\u5411\u63a5\u8fd1</li> </ol> <p>\u534a\u7a0b\u5411\u91cf\uff1a\u5149\u7167\u65b9\u5411\u548c\u89c2\u5bdf\u65b9\u5411\u7684\u89d2\u5e73\u5206\u7ebf\uff0c\u7528\u4e8e\u5224\u65ad\u89c2\u5bdf\u65b9\u5411\u548c\u955c\u9762\u53cd\u5c04\u65b9\u5411\u63a5\u8fd1\u7684\u7a0b\u5ea6</p> <p>\u4e3a\u4ec0\u4e48\u7528\u534a\u7a0b\u5411\u91cf\u800c\u4e0d\u662f\u76f4\u63a5\u8ba1\u7b97\uff1f</p> <p>\u534a\u7a0b\u5411\u91cf\u53ea\u9700\u8981 v \u548c l\uff0c\u8ba1\u7b97\u7b80\u5355</p> \\[\\mathbb{h}=bisector(\\mathbb{v},\\ mathbb{l})=\\frac{\\mathbb{v}+\\mathbb{l}}{|| \\mathbb{v}+\\mathbb{l} ||}\\] <p>\u9ad8\u5149\u7684 Bliinn-Phone \u516c\u5f0f\uff1a</p> \\[L_s=k_s(I/r^2)max(0, \\mathbb{n}\\cdot\\mathbb{h})^P\\] <p>cosine power plots: increasing p narrows the reflection lobe</p> <p></p> <p>Influence of k and p:</p> <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/#ambient-term","title":"Ambient Term","text":"<p>\u73af\u5883\u5149\uff1a\u8ba4\u4e3a\u73af\u5883\u5149\u5f3a\u5ea6\u5904\u5904\u76f8\u540c</p> \\[L_a=k_aI_a\\] <p>\\(L_a\\): reflected ambient lignt \\(k_a\\): ambient coefficient This is approximate / fake</p> <p>\u4e09\u9879\u76f8\u52a0\uff1a</p> \\[L=L_a+L_d+L_s\\] <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/#shading-frequency","title":"Shading Frequency","text":"<ol> <li>\u786e\u5b9a shading point \u65f6\uff0c\u5bf9\u4e00\u4e2a\u5e73\u9762\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c</li> <li>\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8ba1\u7b97\u6cd5\u7ebf\u5e76\u7740\u8272\uff0c\u4e2d\u95f4\u7684\u70b9\u7528\u5e73\u6ed1\u63d2\u503c</li> <li>\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u5e94\u7528\u7740\u8272</li> <li>Flat shading: triangle face is flat (one normal vector) ,but is not good for smooth surfaces</li> <li>Gouraud shading: Interpolate colors from vertices across triangles, each vertex has a normal vector</li> <li>Phong shading: Interpolate colors from vertices across each triangle, compute full shading model at each pixel (Not the Blinn-Phong Reflectance Model)</li> </ol> <p>Shading frequency: face-&gt;vertex-&gt;pixel</p> <p>\u9876\u70b9\u7684\u6cd5\u7ebf\u600e\u4e48\u8ba1\u7b97\uff1f \u5468\u56f4\u6240\u6709\u4e09\u89d2\u5f62\u7684\u6cd5\u7ebf\u7684\u5e73\u5747</p> \\[N_v=\\frac{\\sum_iN_i}{||\\sum_iN_i||}\\] <p>\u6216\u8005\u518d\u6839\u636e\u4e09\u89d2\u5f62\u9762\u79ef\u52a0\u6743</p> <p>\u50cf\u7d20\u6cd5\u7ebf\u600e\u4e48\u8ba1\u7b97\uff1f</p> <p>\u6839\u636e\u9876\u70b9\u6cd5\u7ebf\u548c\u91cd\u5fc3\uff0c\u8ba1\u7b97\u5404\u4e2a\u70b9\u7684\u6cd5\u7ebf\uff0c\u518d\u5f52\u4e00\u5316</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/#graphics-pipeline","title":"Graphics Pipeline","text":"<p>Graphics Pipeline (Real-time Rendering Pipeline) \u56fe\u5f62\u7ba1\u7ebf\uff08\u5b9e\u65f6\u6e32\u67d3\u7ba1\u7ebf\uff09</p> <p>Shader(\u50cf\u7d20\u7740\u8272\u5668)\uff1a\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u50cf\u7d20\u6700\u540e\u7684\u989c\u8272\uff0c\u5e76\u8f93\u51fa\u3002\u53ef\u4ee5\u6307\u5b9a\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7684\u7740\u8272</p> <p>GLSL</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2008%20Shading%202/#texture-mapping","title":"Texture Mapping","text":"<p>\u5728\u7269\u4f53\u7684\u4e0d\u540c\u4f4d\u7f6e\u5b9a\u4e49\u4e0d\u540c\u7684\u5c5e\u6027\uff08\u5438\u6536\u5149\u4e0d\u540c\uff0c\u4ea7\u751f\u4e0d\u540c\u989c\u8272\uff09</p> <p>\u5b9a\u4e49\u5728\u7269\u4f53\u8868\u9762\uff1a Surface lives in 3D world space. Every 3D surface point alsohas a place where it goes in the 2D image. \u5373\u4e09\u7ef4\u7684\u7269\u4f53\u8868\u9762\u53ef\u4ee5\u4e0e\u4e00\u5f20\u4e8c\u7ef4\u7684\u56fe\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u5f20\u4e8c\u7ef4\u7684\u56fe\u5c31\u662f\u7eb9\u7406\u3002</p> <p>Parameterizarion\uff08\u53c2\u6570\u5316\uff09\uff1a\u5c06\u4e09\u7ef4\u7269\u4f53\u8868\u9762\u7684\u6240\u6709\u4e09\u89d2\u5f62\u6620\u5c04\u5230\u4e8c\u7ef4\uff0c\u4e14\u4e09\u89d2\u5f62\u5c3d\u53ef\u80fd\u5c11\u626d\u66f2\uff08\u4fdd\u6301\u5927\u5c0f\u5173\u7cfb\uff09\uff0c\u4e14\u5c3d\u53ef\u80fd\u4ecd\u6784\u6210\u5b8c\u6574\u7684\u56fe\u5f62\u3002</p> <p>Texture can be used multiple times. \u91cd\u590d\u4f7f\u7528\u7eb9\u7406\uff1aTile</p> <p>\u5df2\u77e5\u4e09\u89d2\u5f62\u9876\u70b9\u5750\u6807\uff0c\u600e\u4e48\u5f97\u5230\u4e09\u89d2\u5f62\u5185\u90e8\u67d0\u4e2a\u70b9\u7684\u5750\u6807\uff1f Barycentric Coordinates (\u4e0b\u4e00\u8bb2)</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2009%20Shading%203/","title":"Lec 09 Shading 3 (Texture Mapping cont.)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 651 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <ul> <li>Barycentric Coordinates</li> <li>Texture queries</li> <li>Application of textures</li> </ul> <p>Barycentric Coordinates: \u4e09\u89d2\u5f62\u4e2d\u4efb\u4f55\u4e00\u70b9\u90fd\u53ef\u8868\u793a\u4e3a\u4e09\u4e2a\u9876\u70b9\u5750\u6807\u7684\u7ebf\u6027\u7ec4\u5408</p> <p>A coordinate system for triangle \\((\\alpha, \\beta,\\gamma)\\):</p> \\[(x,y)=\\alpha A+\\beta B+\\gamma C\\] <p>\u5176\u4e2d\\(\\alpha+\\beta+\\gamma=1\\)\uff0c\u4e14\u90fd\u662f\u975e\u8d1f\u7684 \u6ee1\u8db3\u8fd9\u4e09\u4e2a\u6761\u4ef6\u5219\u70b9\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u662f\u91cd\u5fc3\u5750\u6807</p> <p>\u600e\u4e48\u6c42\u91cd\u5fc3\u5750\u6807\uff1f \u5954\u9a70\u5b9a\u7406\uff1a\u7528\u9762\u79ef\u6c42\u91cd\u5fc3\u5750\u6807 \\(A_A\\)\u8868\u793a A \u76f8\u5bf9\u7684\u5c0f\u4e09\u89d2\u5f62\u7684\u9762\u79ef</p> \\[\\alpha=\\frac{A_A}{A_A+A_B+A_C}\\] <p>\u6216\uff1a\u57fa\u4e8e\u70b9\u5750\u6807\u7684\u516c\u5f0f\u3002\u63a8\u5bfc\u53ef\u53c2\u8003\u6e32\u67d3\u5668 Tinyrenderer \u5185\u5bb9\u3002</p> <p></p> <p>Linearly interpolate values at vertices:</p> \\[V=\\alpha V_A+\\beta V_B+\\gamma V_C\\] <p>\u95ee\u9898\uff1a\u6295\u5f71\u4e0d\u80fd\u4fdd\u8bc1\u91cd\u5fc3\u5750\u6807\u4e0d\u53d8 \u89e3\u51b3\uff1a\u53d6\u4e09\u7ef4\u5750\u6807\u8ba1\u7b97\uff0c\u8fd0\u7b97\u540e\u518d\u6295\u5f71\u5230\u4e8c\u7ef4\u5e73\u9762</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2009%20Shading%203/#applying-texture","title":"Applying texture","text":"<p>for each rasterized screen sample (x,y):</p> <ol> <li>(u,v) = evaluate texture coordinate at (x,y)</li> <li>texcolor = texture.sample(u,v)</li> <li>set sample\u2019s color to texcolor</li> </ol> <p>\u7eb9\u7406\u5206\u8fa8\u7387\u4f4e\u4e8e\u56fe\u7247\u5206\u8fa8\u7387? \u9700\u8981\u7eb9\u7406\u653e\u5927 \uff08A pixel on a texture: texel\uff09</p> <ol> <li>\u975e\u6574\u6570\u7684\u5750\u6807 round \u6210\u6574\u6570</li> <li>\u53cc\u7ebf\u6027\u63d2\u503c\uff1a\u627e\u76f8\u90bb\u7684\u56db\u4e2a\u50cf\u7d20\uff0c\u548c\u5de6\u4e0b\u89d2\u7684\u6c34\u5e73\u7ad6\u76f4\u65b9\u5411\u8ddd\u79bb\u4e3a s \u548c t\uff0c\u7ebf\u6027\u63d2\u503c\uff08\u5148\u6c34\u5e73\u5f97\u5230\u4e24\u4e2a\u4e2d\u95f4\u70b9\uff0c\u518d\u5bf9\u7ad6\u76f4\u4e2d\u95f4\u70b9\u63d2\u503c\uff09</li> <li>Bicubic\uff1a\u53d6\u5468\u56f4 16 \u4e2a</li> </ol> <p>\u7eb9\u7406\u56fe\u7247\u592a\u5927\uff1f \u50cf\u7d20\u5728\u7eb9\u7406\u4e0a\u8986\u76d6\u5f88\u5927\u4e00\u7247\u533a\u57df \u7f51\u683c\u5e73\u9762\u900f\u89c6\uff1a\u8fd1\u5904\u952f\u9f7f\uff0c\u8fdc\u5904\u6469\u5c14\u7eb9</p> <ol> <li>\u8d85\u91c7\u6837\uff1a\u5728\u4e00\u4e2a\u50cf\u7d20\u5185\u90e8\u6709\u591a\u4e2a\u91c7\u6837\u70b9\u5e73\u5747</li> <li>\u8303\u56f4\u67e5\u8be2\u6c42\u5e73\u5747\u503c\uff1a\u53d6\u50cf\u7d20\u8986\u76d6\u7684\u4e00\u7247\u533a\u57df\u7684\u5e73\u5747\u503c</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2009%20Shading%203/#mipmap","title":"Mipmap","text":"<p>mipmap: Allowing (fast, approx., square) range queries \u7ed9\u5b9a\u4e00\u5757\u6b63\u65b9\u5f62\u533a\u57df\uff0c\u5feb\u901f\u67e5\u8be2\u5230\u8986\u76d6\u7684\u50cf\u7d20\u7684 rgb \u5e73\u5747\u503c\u3002</p> <p>1. \u751f\u6210\uff1a</p> <p>\u6bcf\u6b21\u5c06\u957f\u3001\u5bbd\u7684\u5206\u8fa8\u7387\u90fd\u51cf\u534a\uff0c\u76f4\u5230\u51cf\u4e3a 1*1\uff0c\u751f\u6210\u4e00\u7cfb\u5217 mipmap(mip hierarchy)\u3002 \u6bcf\u6b21\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u4e0a\u4e00\u6b21\u7684 \u00bc\uff0c\u989d\u5916\u5f15\u5165\u7684\u5b58\u50a8\u91cf\u4e3a\u539f\u56fe\u7684 \u2153\u3002</p> <p>2. \u67e5\u8be2\uff1a</p> <p>\u5bf9\u4efb\u610f\u50cf\u7d20\uff0c\u5047\u8bbe\u5728\u539f\u56fe\u4e2d\u5411\u4e0a\u3001\u5411\u53f3\u79fb\u52a8 1 \u4e2a\u50cf\u7d20\u65f6\uff0c\u5728\u7eb9\u7406\u56fe\u4e2d\u79fb\u52a8\u8ddd\u79bb\u662f<code>l1</code>\u3001<code>l2</code>\u3002 \u4ee4\u50cf\u7d20\u5728\u7eb9\u7406\u56fe\u4e0a\u8986\u76d6\u7684\u533a\u57df\u4e3a\u6b63\u65b9\u5f62\uff0c\u8fb9\u957f\u4e3a<code>max(l1,l2)</code>\u3002 \u7528 mipmap \u67e5\u8be2\u8fd9\u4e2a\u6b63\u65b9\u5f62\u8986\u76d6\u7684\u50cf\u7d20\u7684 rgb \u5e73\u5747\u503c\u3002</p> <p>\u8ddd\u79bb\u8fd1\u65f6\uff0c\u4e00\u4e2a\u50cf\u7d20\u8986\u76d6\u7684\u533a\u57df\u5c0f\uff0c\u5728\u4f4e\u5c42\u7684 mipmap\uff08\u63a5\u8fd1\u539f\u56fe\uff09\u4e0a\u67e5\u8be2\uff1b \u8ddd\u79bb\u8fdc\u65f6\uff0c\u4e00\u4e2a\u50cf\u7d20\u8986\u76d6\u7684\u533a\u57df\u5927\uff0c\u5728\u9ad8\u5c42\u7684 mipmap\uff08\u5206\u8fa8\u7387\u4f4e\uff09\u4e0a\u67e5\u8be2\u3002</p> <p>\u53d8\u5316\u4e0d\u8fde\u7eed\uff1f</p> <p>Trilinear Interpolation: \u5148\u5728\u76f8\u90bb\u7684\u4e24\u4e2a mipmap \u4e0a\u5173\u4e8e\u884c\u3001\u5217\u8fdb\u884c bilinear interpolation\uff0c\u518d\u5728\u4e24\u4e2a\u5c42\u4e4b\u95f4\u7ebf\u6027\u63d2\u503c\u3002</p> <p>\u7f3a\u70b9\uff1aOverblur\uff0c\u8fdc\u5904\u62b9\u53bb\u7ec6\u8282 \u90e8\u5206\u56e0\u4e3a mipmap \u53ea\u652f\u6301\u6b63\u65b9\u5f62\u67e5\u8be2\uff0c\u975e\u6b63\u65b9\u5f62\u8bef\u5dee\u5927 \u89e3\u51b3\uff1aAnisotropic Filtering</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2009%20Shading%203/#anisotropic-filtering","title":"Anisotropic Filtering","text":"<p>\u6bcf\u6b21\u53d8\u6362\u4ec5\u957f\u6216\u5bbd\u51cf\u5c0f\u4e00\u534a\uff0c\u4fdd\u7559\u751f\u6210\u7684\u6240\u6709\u56fe\uff08\u4e0d\u4e00\u5b9a\u662f\u6b63\u65b9\u5f62\uff09\u3002 \u989d\u5916\u5f00\u9500\u662f\u539f\u56fe\u7684 3 \u500d\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\uff1f \u539f\u56fe\u4e2d\u4e00\u4e2a\u50cf\u7d20\u6620\u5c04\u5230\u7eb9\u7406\u4e0a\u4e0d\u4e00\u5b9a\u662f\u6b63\u65b9\u5f62\uff0c\u5373\u539f\u56fe\u4e2d\u6c34\u5e73\u3001\u7ad6\u76f4\u65b9\u5411\u79fb\u52a8 1 \u4e2a\u50cf\u7d20\uff0c\u7eb9\u7406\u56fe\u4e2d\u79fb\u52a8\u8ddd\u79bb\u53ef\u80fd\u4e0d\u540c\u3002</p> <p>Can look up axis-aligned rectangular zones.</p> <p>But diagonal footprint still a problem.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2009%20Shading%203/#ewa-filtering","title":"EWA Filtering","text":"<p>Use multiple lookups, weighted average.</p> <p>\u5bf9\u4e8e\u4e0d\u89c4\u5219\u5f62\u72b6\uff0c\u5c06\u56fe\u5f62\u5206\u5272\u6210\u4e0d\u540c\u4e2a\u5706\u5f62\uff0c\u591a\u6b21\u67e5\u8be2\u5706\u5f62\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/","title":"Lec 10 Geomertry 1 (Introduction)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 408 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#application-of-texture","title":"Application of Texture","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#environmental-lighting","title":"Environmental Lighting","text":"<p>Environment map used to render realistic lighting.</p> <p>Spherical Environment Map: Store the environment map in the surface of a sphere. \u7f3a\u70b9\uff1a\u9760\u8fd1\u9876\u90e8\u548c\u5e95\u90e8\u7684\u56fe\u50cf\u626d\u66f2</p> <p>Cube Map: A vector maps to cube point along that direction. The cube is textured with 6 square texture maps. \u4f18\u70b9\uff1a\u626d\u66f2\u5c11 \u7f3a\u70b9\uff1a\u7ed9\u5b9a\u65b9\u5411\uff0c\u8981\u5148\u5224\u65ad\u8fd9\u4e2a\u65b9\u5411\u7684\u5149\u7167\u4fe1\u606f\u8bb0\u5f55\u5728\u54ea\u4e2a\u9762\u4e0a</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#bump-mapping","title":"Bump Mapping","text":"<p>Adding surface detail without adding more triangles. \u7528\u7eb9\u7406\u8d34\u56fe\u5b9a\u4e49\u7269\u4f53\u8868\u9762\u4e0a\u6bcf\u4e2a\u70b9\u7684\u76f8\u5bf9\u9ad8\u5ea6/\u6cd5\u7ebf, Perturb surface normal per pixel.</p> <p>\u600e\u4e48\u6270\u52a8\u6cd5\u7ebf\uff1f\uff08\u4ee5 flatland \u4e3a\u4f8b\uff09 \u4e8c\u7ef4\uff1a\u5b9a\u4e49\u6270\u52a8\u540e\u7684\u51fd\u6570\uff0c\u7528\u5dee\u5206\u6c42\u5207\u7ebf\uff0c\u4e0e\u5207\u7ebf\u5782\u76f4\u7684\u65b9\u5411\u4e3a\u6cd5\u7ebf\u3002 \u4e09\u7ef4\uff1a u\u3001v \u65b9\u5411\u7684\u5dee\u5206\u5206\u522b\u4e3a dp/du\u3001dp/dv\uff0c\u5219\u6cd5\u7ebf\u4e3a(-dp/du, -dp/dv, 1)\u3002</p> <p>Displacement mapping: \u51f9\u51f8\u8d34\u56fe\u53ea\u901a\u8fc7\u8d34\u56fe\u4fe1\u606f\u6539\u53d8\u6cd5\u7ebf\uff0c\u6ca1\u6709\u6539\u53d8\u70b9\u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u5728\u8fb9\u7f18\u5904\u548c\u9634\u5f71\u5904\u4e0d\u4f1a\u968f\u51f9\u51f8\u4f4d\u79fb\u53d8\u5316\u3002 \u800c\u4f4d\u79fb\u8d34\u56fe\u6539\u53d8\u70b9\u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u66f4\u771f\u5b9e\u3002</p> <p>\u4f4d\u79fb\u8d34\u56fe\u7684\u4ee3\u4ef7\uff1a\u8981\u6c42\u4e09\u89d2\u5f62\u672c\u8eab\u5212\u5206\u5f97\u8db3\u591f\u7ec6\uff0c\u4e09\u89d2\u5f62\u9876\u70b9\u95f4\u7684\u95f4\u9694\u5927\u4e8e\u7eb9\u7406\u70b9\u7684\u95f4\u9694</p> <p>\u52a8\u6001\u533a\u95f4\u7ec6\u5206\uff1a\u68c0\u6d4b\u662f\u5426\u9700\u8981\u5c06\u4e09\u89d2\u5f62\u7ec6\u5206</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#3d-texture","title":"3D Texture","text":"<p>3D procedual noise + solid modeling</p> <p>Can be used in volumn rendering.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#examples-of-geometry","title":"Examples of Geometry","text":"<ul> <li>Implicit: algebaraic surface, level sets, distance functions...</li> <li>Explicit: point cloud, polygon mesh, subdivision...</li> </ul> <p>Implicit:\u4e0d\u7ed9\u51fa\u70b9\u7684\u5177\u4f53\u5750\u6807\uff0c\u800c\u662f\u63cf\u8ff0\u54ea\u4e9b\u70b9\u5728\u4e00\u4e2a\u9762\u4e0a e.g. \\(x^2+y^2+z^2=1\\). More generally, f(z,y,z)=0 \u4f18\u70b9\uff1a\u5224\u5b9a\u7ed9\u5b9a\u70b9\u662f\u5426\u5728\u9762\u4e0a\u7b80\u5355 \u7f3a\u70b9\uff1a\u786e\u5b9a\u56fe\u5f62\u56f0\u96be</p> <p>Explicit:\u76f4\u63a5\u7ed9\u51fa\u70b9\u7684\u5750\u6807\uff0c\u6216\u901a\u8fc7\u53c2\u6570\u6620\u5c04\u5f97\u5230 e.g. \\(f:\\mathbb{R}\\to\\mathbb{R}; (u,v)\\mapsto(x,y,z)\\) \u4f18\u70b9\uff1a\u786e\u5b9a\u56fe\u5f62\u7b80\u5355 \u7f3a\u70b9\uff1a\u5224\u5b9a\u7ed9\u5b9a\u70b9\u662f\u5426\u5728\u9762\u4e0a\u56f0\u96be</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2010%20Geometry%201/#more-implicit-representation","title":"More Implicit Representation","text":"<ol> <li>Algebriac Surface: \u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u9762\u3002</li> <li>Constructed Solid Geometry (CSG): \u901a\u8fc7\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u7684\u5e03\u5c14\u8fd0\u7b97\uff0c\u5f97\u5230\u590d\u6742\u51e0\u4f55\u5f62\u4f53\u3002</li> <li>Distance Function: \u5b9a\u4e49\u7a7a\u95f4\u4e2d\u4efb\u4f55\u4e00\u70b9\u5230\u8868\u9762\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u8ddd\u79bb\u51fd\u6570\uff0c\u53ef\u6b63\u53ef\u8d1f\uff09\uff0c\u8ddd\u79bb\u51fd\u6570\u4e3a 0 \u7684\u4f4d\u7f6e\u4e3a\u8868\u9762\u3002\u53ef\u7528\u4e8e\u56fe\u5f62\u7684\u878d\u5408\u3002</li> <li>Level Set Methods: \u5c06\u8ddd\u79bb\u51fd\u6570\u6309\u683c\u5b58\u50a8\uff0c\u7528\u7ebf\u6027\u63d2\u503c\u5f97\u5230\u8ddd\u79bb\u4e3a 0 \u7684\u70b9\u3002</li> <li>Fractals: \u5206\u5f62\u3002</li> </ol> <p>Pros:</p> <ul> <li>compact description</li> <li>certain queries easy</li> <li>good for ray-to-surface intersection</li> <li>for simple shapes, exact description / no sampling error</li> <li>easy to handle changes in topology</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/","title":"Lec 11 Geomertry 2 (Curves and Surfaces)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 448 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#explicit-representations","title":"Explicit Representations","text":"<p>1. Point Cloud list of points (x,y,z) \u76f4\u63a5\u626b\u63cf\u5f97\u5230\u70b9\u4e91\uff0c\u9700\u8981\u901a\u8fc7\u7b97\u6cd5\u8f6c\u5316\u4e3a\u4e09\u89d2\u5f62\u9762 \u5982\u679c\u70b9\u4e91\u5bc6\u5ea6\u8fc7\u4f4e\uff0c\u5219\u4e0d\u80fd\u753b\u51fa\u56fe\u50cf</p> <p>2. Polygon Mesh \u4e09\u89d2\u5f62\u9762\u8868\u793a Wavefront Object File (.obj) Format: v \u8868\u793a\u70b9\u7684\u5750\u6807\uff0cvn \u8868\u793a\u6cd5\u7ebf\uff0cvt \u8868\u793a\u7eb9\u7406\u5750\u6807\uff0cf \u8868\u793a\u9762\u7684\u9876\u70b9\u7684\u7f16\u53f7</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#curves","title":"Curves","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#bezier-curves","title":"Bezier Curves","text":"<p>\u8d1d\u585e\u5c14\u66f2\u7ebf\uff1a\u7528\u4e00\u7cfb\u5217\u63a7\u5236\u70b9\u5b9a\u4e49\u66f2\u7ebf</p> <p>e.g.\u6ee1\u8db3\u6761\u4ef6\uff1a</p> <ol> <li>\u4ece P0 \u5f00\u59cb\uff0c\u4e14\u5207\u7ebf\u65b9\u5411\u4e3a P0P1</li> <li>\u4ece P3 \u7ed3\u675f\uff0c\u4e14\u5207\u7ebf\u65b9\u5411\u4e3a P2P3</li> </ol> <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#de-casteljiau-algorithm","title":"de Casteljiau Algorithm","text":"<p>Consider three points (quadratic Bezier):</p> <p>\u5c06\u8d77\u70b9\u5230\u7ec8\u70b9\u89c6\u4e3a 0~1\uff0c\u5bf9\u5176\u4e2d\u4efb\u4e00\u4e2a\u6bd4\u4f8b\u4e3a t \u7684\u70b9\uff0c\u6309\u4e0b\u56fe\u65b9\u6cd5\u786e\u5b9a\uff1a</p> <p></p> <p>\u56db\u70b9\uff1a</p> <p></p> <p>Bernstein form of a Bezier curve of order n:</p> \\[b^n(t)=\\sum_{j=0}^nb_jB_j^n(t)\\] <p>Bernstein polynomials:</p> \\[B_i^n(t)=\\begin{pmatrix}n \\\\ i\\end{pmatrix}t^i (1-t)^{n-i}\\] <p>e.g.</p> <p>2D:</p> \\[b^2(t)=b_0(1-t)^2+b_1 2t(1-t)+b_2 t^2\\] <p>3D:</p> \\[b^3(t)=b_0 (1-t)^3+b_1 3t(1-t)^2+b_2 3t^2(1-t)+b_3 t^3\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#properties-of-bezier-curves","title":"Properties of Bezier Curves","text":"<ol> <li> <p>Affine transformation property: transform curve by transforming control points.    \u5728\u4eff\u5c04\u53d8\u6362\u4e0b\uff0c\u53d8\u6362\u63a7\u5236\u70b9\u518d\u7528\u53d8\u6362\u540e\u7684\u70b9\u753b\u66f2\u7ebf\uff0c\u548c\u76f4\u63a5\u5bf9\u66f2\u7ebf\u4e0a\u70b9\u53d8\u6362\uff0c\u4e24\u8005\u7ed3\u679c\u76f8\u540c\u3002    \u4f46\u4ec5\u5bf9\u4eff\u5c04\u53d8\u6362\u6210\u7acb\uff0c\u6295\u5f71\u7b49\u53d8\u6362\u4e0d\u6210\u7acb\u3002</p> </li> <li> <p>Convec hull property: curve is within convex hull of control points.    \u7ed8\u5236\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u4e00\u5b9a\u5728\u6240\u6709\u63a7\u5236\u70b9\u5f62\u6210\u7684\u51f8\u5305\u5185\u3002    e.g. \u82e5\u63a7\u5236\u70b9\u5171\u7ebf\uff0c\u5219\u8d1d\u585e\u5c14\u66f2\u7ebf\u662f\u8fd9\u6761\u7ebf\u672c\u8eab</p> </li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#piecewise-bezier-curves","title":"Piecewise Bezier Curves","text":"<p>\u7528\u591a\u4e2a\u63a7\u5236\u70b9\u540c\u65f6\u63a7\u5236\u4e00\u6761\u66f2\u7ebf\uff0c\u4e2d\u95f4\u90e8\u5206\u4e0d\u80fd\u53cd\u6620\u8d8b\u52bf\u3002\u7528\u591a\u7ec4\u70b9\u9010\u6bb5\u63a7\u5236\uff0c\u4e00\u822c\u6bcf\u56db\u4e2a\u70b9\u63a7\u5236\u4e00\u6bb5\uff0c\u518d\u5c06\u6240\u6709\u66f2\u7ebf\u8fde\u63a5\u3002</p> <p>\u82e5\u63a7\u5236\u6746\u548c\u4e2d\u95f4\u70b9\u5171\u7ebf\uff0c\u4e14\u63a7=\u63a7\u5236\u6746\u5927\u5c0f\u76f8\u540c\uff0c\u5219\u8ba4\u4e3a\u8fde\u63a5\u70b9\u5904\u66f2\u7ebf\u8fde\u7eed\u3002</p> <p>Continuity:</p> <p>\\(C^0\\) continuity: \\(a_n=b_n\\)\uff0c\u51e0\u4f55\u4e0a\u4e0d\u95f4\u65ad</p> <p>\\(C^1\\) continuity: \\(a_n=b_0=\\frac{1}{2}(a_{n-1}+b_1)\\)\uff0c\u524d\u540e\u63a7\u5236\u6746\u957f\u5ea6\u76f8\u540c\uff0c\u5207\u7ebf\u8fde\u7eed</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#other-types-of-splines","title":"Other Types of Splines","text":"<p>Spline\uff08\u6837\u6761\uff09\uff1a\u7531\u4e00\u7cfb\u5217\u63a7\u5236\u70b9\u63a7\u5236\u7684\u66f2\u7ebf\uff0c\u6ee1\u8db3\u7279\u5b9a\u7684\u8fde\u7eed\u6027</p> <p>B-Spline\uff08\u57fa\u6837\u6761\uff09: \u5bf9\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u589e\u5f3a\uff0c\u589e\u52a0\u4e86\u5c40\u90e8\u6027\uff0c\u6539\u52a8\u4e00\u4e2a\u70b9\u5f71\u54cd\u66f2\u7ebf\u7684\u4e00\u4e2a\u8303\u56f4\u5185\u800c\u4e0d\u662f\u5f71\u54cd\u6574\u4e2a\u66f2\u7ebf</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#surfaces","title":"Surfaces","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#bezier-surfaces","title":"Bezier Surfaces","text":"<ol> <li>\u6cbf x \u65b9\u5411\u7684\u63a7\u5236\u70b9\uff0c\u7ed8\u5236\u6cbf x \u65b9\u5411\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff1b</li> <li>\u5728\u4e0a\u8ff0\u66f2\u7ebf\u6cbf y \u65b9\u5411\u53d6\u70b9\u4f5c\u4e3a\u63a7\u5236\u70b9\uff0c\u7ed8\u5236\u6cbf y \u65b9\u5411\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff1b</li> <li>y \u65b9\u5411\u66f2\u7ebf\u626b\u8fc7\u7684\u9762\u4e3a\u8d1d\u585e\u5c14\u66f2\u9762</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2011%20Geometry%202/#mesh-operations","title":"Mesh Operations","text":"<ul> <li>Mesh subdivision  </li> <li>Mesh simplification  </li> <li>Mesh regularization  </li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/","title":"Lec 12 Geometry 3","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 761 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#mesh-operation","title":"Mesh Operation","text":"<ul> <li>Mesh Subdivision\uff1a\u7c7b\u4f3c\u589e\u5927\u5206\u8fa8\u7387\uff0c\u5c55\u793a\u66f4\u591a\u7ec6\u8282\u3002</li> <li>Mesh Simplification\uff1a\u5220\u53bb\u67d0\u4e9b\u8fb9\u6216\u4e09\u89d2\u5f62\uff0c\u4f46\u7ef4\u6301\u8fde\u63a5\u5173\u7cfb\u3002</li> <li>Mesh Regularization\uff1a\u5c06\u4e09\u89d2\u5f62\u6b63\u5219\u5316\uff0c\u4f7f\u6bcf\u4e2a\u9762\u66f4\u63a5\u8fd1\u6b63\u4e09\u89d2\u5f62\uff0c\u4f46\u4e0d\u80fd\u4e22\u5931\u7ec6\u8282\u3002</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#mesh-subdivision","title":"Mesh Subdivision","text":"<p>\u4e09\u89d2\u5f62\u7ec6\u5206\uff1a\u5148\u589e\u52a0\u4e09\u89d2\u5f62\u6570\u91cf\uff0c\u518d\u7a0d\u5fae\u6539\u53d8\u5404\u4e2a\u4e09\u89d2\u5f62\u4f4d\u7f6e\uff0c\u4f7f\u5176\u6574\u4f53\u5f62\u6210\u4e0d\u540c\u7684\u5f62\u72b6\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#loop-subdivision","title":"Loop Subdivision","text":"<ul> <li>Split each triangle into four: \u8fde\u63a5\u4e09\u6761\u8fb9\u7684\u4e2d\u70b9\uff0c\u5c06\u539f\u4e09\u89d2\u5f62\u5206\u6210\u56db\u4e2a</li> <li>Assign new vertex positions according to weights: new and old vertices updated differently</li> </ul> <p>\u600e\u4e48 update\uff1f</p> <ol> <li>\u65b0\u70b9\uff1a    \u5f53\u524d\u70b9\u6240\u5728\u7684\u8fb9\u88ab\u4e24\u4e2a\u4e09\u89d2\u5f62\u5171\u7528\u3002\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u8bb0\u4e3a A\u3001B\uff0c\u4e24\u4e09\u89d2\u5f62\u7684\u5269\u4f59\u4e24\u4e2a\u9876\u70b9\u8bb0\u4e3a C\u3001D\uff0c\u5219\u5f53\u524d\u70b9\u53d8\u6362\u540e\u7684\u5750\u6807\u4e3a \u215c*(A+B)+\u215b*(C+D)    \uff08A \u548c B \u79bb\u65b0\u70b9\u66f4\u8fd1\uff0c\u5f71\u54cd\u5927\uff0c\u6743\u91cd\u5927\uff09</li> </ol> <p></p> <ol> <li>\u539f\u6709\u7684\u70b9\uff1a    \u548c\u5f53\u524d\u70b9\u76f8\u90bb\u7684\u539f\u6709\u7684\u70b9\u7684\u4e2a\u6570\u662f\u5f53\u524d\u70b9\u7684\u5ea6 n\u3002    u \u662f\u5e38\u6570\uff0cn=3 \u65f6 u=3/16\uff0c\u5426\u5219 u=3/(8n)\u3002    \u5f53\u524d\u70b9\u53d8\u6362\u540e\u7684\u5750\u6807\u4e3a\uff1a(1-n*u)*\u5f53\u524d\u70b9\u539f\u5148\u7684\u5750\u6807+u*\u6240\u6709\u76f8\u90bb\u70b9\u5750\u6807\u4e4b\u548c\u3002</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#catmull-clark-subdivision","title":"Catmull-Clark Subdivision","text":"<p>Loop Subdivision \u53ea\u80fd\u7528\u4e8e\u4e09\u89d2\u5f62\u9762\u7684\u7ec6\u5206\uff0c\u800c Catmull-Clark Subdivision \u53ef\u7528\u4e8e\u4efb\u610f\u5f62\u72b6\u9762\u7684\u7ec6\u5206\u3002</p> <p>\u5b9a\u4e49\uff1a</p> <ul> <li>\u56db\u8fb9\u5f62\u9762\uff08quad face\uff09\u548c\u975e\u56db\u8fb9\u5f62\u9762\uff08non-quad face\uff09</li> <li>\u5ea6\uff08degree\uff09\uff1a\u4e00\u4e2a\u9876\u70b9\u8fde\u63a5\u7684\u8fb9\u6570</li> <li>\u5947\u5f02\u70b9\uff08extraordinaty vertex\uff09\uff1a\u5ea6\u4e0d\u7b49\u4e8e\u56db\u7684\u9876\u70b9</li> </ul> <p>\u6b65\u9aa4\uff1a</p> <ol> <li>\u53d6\u6bcf\u6761\u8fb9\u7684\u4e2d\u70b9\u548c\u6bcf\u4e2a\u9762\u7684\u4e2d\u70b9</li> <li>\u8fde\u63a5\u6240\u6709\u4e2d\u70b9</li> <li>\u8c03\u6574\u9876\u70b9\u7684\u4f4d\u7f6e</li> </ol> <p>\u7ec6\u5206\u540e\u539f\u6709\u7684\u5947\u5f02\u70b9\u4ecd\u7136\u662f\u5947\u5f02\u70b9\uff0c\u539f\u6765\u975e\u56db\u8fb9\u5f62\u9762\u7684\u4e2d\u70b9\u6210\u4e3a\u65b0\u7684\u5947\u5f02\u70b9\u3002 \u975e\u56db\u8fb9\u5f62\u9762\u7ec6\u5206\u4e3a\u591a\u4e2a\u56db\u8fb9\u5f62\u9762\u3002 \u2014\u2014\u6709\u975e\u56db\u8fb9\u5f62\u9762\uff0c\u5219\u7ec6\u5206\u540e\u589e\u52a0\u76f8\u5e94\u6570\u91cf\u7684\u5947\u5f02\u70b9\uff1b\u4e00\u6b21\u7ec6\u5206\u540e\u4e0d\u5b58\u5728\u975e\u56db\u8fb9\u5f62\u9762\uff0c\u5947\u5f02\u70b9\u6570\u4e0d\u589e\u52a0\u3002</p> <p>\u600e\u4e48\u66f4\u65b0\uff1f\uff08\u7565\uff09</p> <ol> <li>\u65b0\u7684\u9762\u4e2d\u5fc3\u7684\u70b9\uff1a\u7528\u9762\u7684\u9876\u70b9\u76f4\u63a5\u5e73\u5747</li> <li>\u65b0\u7684\u8fb9\u4e2d\u5fc3\u7684\u70b9\uff1a\u7528\u8fb9\u7684\u9876\u70b9\u548c\u76f8\u90bb\u7684\u9762\u7684\u4e2d\u5fc3\u70b9\uff0c\u76f4\u63a5\u5e73\u5747</li> <li>\u539f\u5148\u7684\u70b9\uff1a\u7528\u76f8\u90bb\u7684\u8fb9\u4e2d\u5fc3\u70b9\u548c\u9762\u4e2d\u5fc3\u70b9\u52a0\u6743\u5e73\u5747</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#mesh-simplification","title":"Mesh Simplification","text":"<p>e.g. Edge Collapse\uff1a \u5c06\u67d0\u4e9b\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u91cd\u5408\u6210\u4e00\u4e2a\u3002</p> <p>\u600e\u4e48\u786e\u5b9a\u54ea\u4e9b\u8fb9\u574d\u7f29\uff1f</p> <p>Quadric Error Metrics: \u4e8c\u6b21\u8bef\u5dee\uff08Quadric Error\uff09\uff1a\u4e00\u4e2a\u70b9\u5230\u76f8\u5173\u7684\u51e0\u4e2a\u9762\u7684\u8ddd\u79bb\u5e73\u65b9\u548c \u8fb9\u574d\u7f29\u65f6\uff0c\u5c06\u65b0\u7684\u9876\u70b9\u653e\u5728\u67d0\u4e2a\u6700\u4f73\u4f4d\u7f6e\uff0c\u4f7f\u5176\u4e8c\u6b21\u8bef\u5dee\u6700\u5c0f</p> <p>\u5148\u8ba1\u7b97\u6240\u6709\u70b9\u7684\u6700\u5c0f\u4e8c\u6b21\u8bef\u5dee\uff0c\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u6309\u4e8c\u6b21\u8bef\u5dee\u7684\u5927\u5c0f\u574d\u7f29\u3002 \u6bcf\u6b21\u574d\u7f29\u540e\uff0c\u5468\u56f4\u70b9\u7684\u4e8c\u6b21\u8bef\u5dee\u4f1a\u88ab\u5f71\u54cd\uff0c\u8981\u66f4\u65b0\u5468\u56f4\u70b9\u3002</p> <p>\u6570\u636e\u7ed3\u6784\uff1a\u4f18\u5148\u961f\u5217/\u5806</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2012%20Geometry%203/#shadow-mapping-dot-light","title":"Shadow Mapping (dot light)","text":"<ul> <li>\u786c\u9634\u5f71\uff1a\u9634\u5f71\u8fb9\u7f18\u9510\u5229\uff0c\u6240\u6709\u50cf\u7d20\u8981\u4e48\u5728\u9634\u5f71\u8981\u4e48\u4e0d\u5728\u9634\u5f71  </li> <li>\u8f6f\u9634\u5f71\uff1a\u9634\u5f71\u5e73\u6ed1\u8fc7\u6e21</li> </ul> <p>\u8d8a\u9760\u8fd1\u7269\u4f53\u5e95\u90e8\uff0c\u9634\u5f71\u8d8a\u786c\uff08\u672c\u5f71\uff09\uff1b\u8d8a\u8fdc\u79bb\u7269\u4f53\u5e95\u90e8\uff0c\u9634\u5f71\u8d8a\u8f6f\uff08\u534a\u5f71\uff09</p> <p>Key idea: the point NOT in shadow must be seen both by the light and by the camera.</p> <p>\u6b65\u9aa4\uff1a</p> <ol> <li>\u4ece\u5149\u6e90\u770b\u5411\u573a\u666f\uff0c\u8bb0\u5f55\u80fd\u770b\u5230\u7684\u70b9\u7684\u6df1\u5ea6  </li> <li>\u4ece\u76f8\u673a\u770b\u5411\u573a\u666f\uff0c\u67e5\u770b\u770b\u5230\u7684\u70b9\u5728\u4e0a\u4e00\u6b65\u4e2d\u8bb0\u5f55\u7684\u6df1\u5ea6\uff0c\u6bd4\u8f83\u8bb0\u5f55\u7684\u6df1\u5ea6\u548c\u5b9e\u9645\u5230\u5149\u6e90\u7684\u6df1\u5ea6\u3002\u5982\u679c\u4e24\u6b21\u6df1\u5ea6\u4e00\u6837\uff0c\u5219\u8be5\u70b9\u80fd\u88ab\u770b\u5230</li> </ol> <p></p> <p>\u95ee\u9898\uff1a \u6d6e\u70b9\u6570\u7cbe\u5ea6\u95ee\u9898\uff0c\u76f8\u7b49\u6709\u504f\u5dee shadow map\u7684\u5206\u8fa8\u7387\u548c\u6574\u4e2a\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u5e94\u5bf9\u5e94\uff0c\u5f00\u9500\u5927</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/","title":"Lec 13 Ray Tracing 1 (Whitted-Style Ray Tracing)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 186 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>Why ray tracing?</p> <p>Rasterization couldn't handle global effects well. e.g. soft shadows, and especially when the light bounces more than once (glossy relection, indirect illumination).</p> <p>Rasterization is fast, but quality is relatively low. Ray tracing is accurate, but is very slow. Rasterization: real-time; ray tracing: offline</p> <p>Three ideas about light rays:</p> <ul> <li>Light travels in straight lines</li> <li>Light rays do not \"collide\" with each other if thay cross</li> <li>Light rays travel from the light sources to the eye (but the physics is invariant under path reversal - reviprocity)</li> </ul> <p>\u57fa\u672c\u65b9\u6cd5\uff1a</p> <p>\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff0c\u4ece\u76f8\u673a\u51fa\u53d1\u8fde\u7ebf\u7a7f\u8fc7\u50cf\u7d20\uff08eye ray\uff09\uff0c\u6253\u5230\u573a\u666f\u4e2d\u6700\u8fd1\u7684\u4ea4\u70b9\uff08closest scene\uff09\uff0c\u518d\u5c06\u8fd9\u4e2a\u70b9\u548c\u5149\u6e90\u8fde\u7ebf\uff08shadow ray\uff09\u3002\u5982\u679c\u80fd\u8fde\u7ebf\uff0c\u5219\u8fd9\u4e2a\u70b9\u80fd\u88ab\u5149\u6e90\u53ef\u89c1\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/#whitted-style-ray-tracing","title":"Whitted-Style Ray Tracing","text":"<p>Whitted \u98ce\u683c\uff1a\u5728\u4efb\u610f\u70b9\u5149\u7ebf\u53ef\u7ee7\u7eed\u4f20\u64ad\uff08\u53cd\u5c04\uff0c\u6298\u5c04...\uff09</p> <p>\u7740\u8272\u65f6\uff0c\u5728\u6bcf\u4e00\u4e2a\u5f39\u8df3\u7684\u70b9\u5224\u65ad\u80fd\u5426\u88ab\u5149\u6e90\u7167\u4eae\uff0c\u8003\u8651\u80fd\u91cf\u635f\u5931\u3002\u6700\u7ec8\u50cf\u7d20\u7684\u7740\u8272\u662f\u6240\u6709\u5f39\u8df3\u70b9\u7684\u7740\u8272\u4e4b\u548c\u3002</p> <p>\u4ece\u76f8\u673a\u548c\u50cf\u7d20\u8fde\u63a5\u7684\u5149\u7ebf\u662fprimary ray\uff0c\u5f39\u8df3\u540e\u5f62\u6210\u7684\u5149\u7ebf\u662fsecondary ray\uff0c\u548c\u5149\u6e90\u8fde\u63a5\u7684\u5149\u7ebf\u662fshadow ray\u3002</p> <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/#ray-surface-intersection","title":"Ray-Surface Intersection","text":"<p>Ray Equation:</p> <p>Ray is defined by its origin and a direction vector.</p> \\[\\mathbf{r}(t)=\\mathbf{o}+t\\mathbf{d}\\qquad 0\\le t&lt;\\infty\\] <p>(ray(time) = origin + time * direction)</p> <p>Ray intersection with sphere:</p> <p>\u8054\u7acb\u5149\u7ebf\u65b9\u7a0b\u548c\u7403\u7684\u65b9\u7a0b\uff0c\u89e3\u4e8c\u6b21\u65b9\u7a0b\u3002  \u6839\u636e\u89e3\u7684\u4e2a\u6570\u5206\u4e3a\u76f8\u79bb\u3001\u76f8\u4ea4\u548c\u76f8\u5207\u3002\u76f8\u4ea4\u65f6\u53d6\u66f4\u8fd1\u7684\u70b9\u3002</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/#ray-intersection-with-implicit-surface","title":"Ray intersection with implicit surface:","text":"\\[ \\begin{cases}     \\mathbf{r}(t)=\\mathbf{o}+t\\mathbf{d},\\,\\,0\\le t&lt;\\infty \\\\     \\mathbf{p}: f(\\mathbf{p})=0 \\end{cases} \\] <p>Substitute ray equation:</p> \\[f(\\mathbf{o}+t\\mathbf{d})=0\\] <p>Solve for real, positive roots.</p> <p>How to compute?</p> <p>Simple idea: just intersect ray with each triangle. Ignore multiple intersections, each ray can have 0 or 1 intersections.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/#ray-intersection-with-triangle","title":"Ray Intersection with Triangle","text":"<ol> <li>ray-plane intersection  </li> <li>test if hit point is inside triangle</li> </ol> <p>Plane equation: </p> <p>plane is defined by normal vector (N) and a  point (P') on plane.</p> \\[\\mathbf{p}:(\\mathbf{p}-\\mathbf{p}')\\cdot N=0\\] <p>Solve for intersection:</p> \\[ (\\mathbf{p}-\\mathbf{p}')\\cdot N=(\\mathbf{o}+t\\mathbf{d}-\\mathbf{p}')\\cdot N=0 \\\\[0.5em]\\\\ t=\\frac{(-\\mathbf{p}'-\\mathbf{o})\\cdot N}{\\mathbf{d}\\cdot N} \\] <p>Then test if \\(\\mathbf{o}+t\\mathbf{d}\\) is inside triangle.</p> <p>Faster: Moller Trunbore Algorithm</p> <p>Give barycentric coordinate directly.</p> \\[\\mathbf{O}+t\\mathbf{D}=(1-b_1-b_2)\\mathbf{P}_0-b_1\\mathbf{P}_1+b_2\\mathbf{P}_2\\] <p>where \\(t\\), \\(b_1\\) and \\(b_2\\) are variables.</p> \\[ \\begin{bmatrix} t \\\\ b_1 \\\\ b_2 \\end{bmatrix}= \\frac{1}{\\mathbf{S}_1\\cdot\\mathbf{E}_1} \\begin{bmatrix} \\mathbf{S}_2\\cdot\\mathbf{E}_2 \\\\ \\mathbf{S}_1\\cdot\\mathbf{S} \\\\ \\mathbf{S}_2\\cdot\\mathbf{D} \\end{bmatrix} \\] <p>where</p> \\[ \\begin{align*} \\mathbf{E}_1&amp;=\\mathbf{P}_1-\\mathbf{P}_0 \\\\ \\mathbf{E}_2&amp;=\\mathbf{P}_2-\\mathbf{P}_0 \\\\ \\mathbf{S}&amp;=\\mathbf{O}-\\mathbf{P}_0 \\\\ \\mathbf{S}_1&amp;=\\mathbf{D}\\times\\mathbf{E}_2 \\\\ \\mathbf{S}_2&amp;=\\mathbf{S}\\times\\mathbf{E}_1 \\end{align*} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2013%20Ray%20Tracing%201/#ray-intersection-with-axis-aligned-box","title":"Ray Intersection with Axis-Aligned Box","text":"<p>Bounding Volumes : Quick way to avoid intersections: bound complex object with a simple volume.</p> <p>Box: the intersection of 3 pairs of slabs. esp. we often use an Axis-Aligned Bounding Box (AABB), any side of the BB is along either x, y, or z axis.</p> <p>Key ideas:</p> <ul> <li>The ray enters the box only when it enters all pairs of s;abs.  </li> <li>The ray exits the box as long as it exits any pair of slabs.</li> </ul> <p>For the 3D box, \\(t_{enter}=max\\{t_{min}\\}, t_{exit}=min\\{t_{max}\\}\\)</p> <p>If \\(t_{exit}&lt;0\\), the box is \"behind\" the ray, no intersections.</p> <p>Else if \\(t_{exit}\\ge 0\\) and \\(t_{enter}&lt;0\\), the ray's origin is inside the box, have intersections.</p> <p>If \\(t_{enter}&lt;t_{exit}\\), the ray stays a while in the box, so they must intersect.</p> <p>In Summary, ray and AABB intersect iff \\(t_{enter}&lt;t_{exit}\\) and \\(t_{exit} \\ge 0\\).</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/","title":"Lec 14 Ray Tracing 2(Acceleration)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 416 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#uniform-spatial-partitions-grids","title":"Uniform Spatial Partitions (Grids)","text":"<p>Preprocesss: Build Acceleration Grid</p> <ol> <li>Find bounding box</li> <li>Create grid</li> <li>Store each object in overlapping cells (\u5c06\u548c\u7269\u4f53\u8868\u9762\u6709\u76f8\u4ea4\u7684\u5404\u81ea\u6807\u8bb0)</li> <li>Step through grid in ray traversal order</li> </ol> <p>\u8ba4\u4e3a\u5149\u7ebf\u548c\u76d2\u5b50\u6c42\u4ea4\u8ba1\u7b97\u5feb\u3001\u5149\u7ebf\u548c\u7269\u4f53\u6c42\u4ea4\u8ba1\u7b97\u6162</p> <p>\u6839\u636e\u5149\u7ebf\u7684\u65b9\u5411\u5927\u81f4\u5224\u65ad\u548c\u54ea\u4e9b\u76d2\u5b50\u76f8\u4ea4\u3002 \u5f53\u5149\u7ebf\u548c\u76d2\u5b50\u76f8\u4ea4\u4f46\u76d2\u5b50\u91cc\u6ca1\u6709\u7269\u4f53\uff08\u6ca1\u88ab\u6807\u8bb0\uff09\u65f6\uff0c\u8df3\u8fc7\uff1b \u5f53\u5149\u7ebf\u548c\u76d2\u5b50\u76f8\u4ea4\u4f46\u76d2\u5b50\u91cc\u6709\u7269\u4f53\u65f6\uff0c\u8ba1\u7b97\u662f\u5426\u548c\u7269\u4f53\u76f8\u4ea4\u3002</p> <p>\u82e5\u53ea\u9700\u8981\u627e\u6700\u8fd1\u4ea4\u70b9\uff0c\u627e\u5230\u4ea4\u70b9\u540e\u505c\u6b62\u3002</p> <p>\u600e\u4e48\u786e\u5b9a\u5212\u5206\u7684\u683c\u5b50\u6570\uff1f</p> <p>\u683c\u5b50\u592a\u5c11\uff0c\u52a0\u901f\u6548\u679c\u5dee\uff1b\u683c\u5b50\u592a\u591a\uff0c\u5149\u7ebf\u548c\u76d2\u5b50\u7684\u8ba1\u7b97\u589e\u52a0\u3002</p> <p>\u683c\u5b50\u6570=C*\u573a\u666f\u4e2d\u7269\u4f53\u6570\uff0c\u5176\u4e2d 3D \u65f6 C \u7ea6\u4e3a 27\u3002</p> <p>\u52a0\u901f\u6548\u679c\uff1f</p> <p>\u573a\u666f\u4e2d\u7269\u4f53\u5206\u5e03\u5747\u5300\u3001\u7269\u4f53\u591a\u65f6\uff0c\u52a0\u901f\u6548\u679c\u597d\uff1b \u573a\u666f\u4e2d\u7269\u4f53\u5206\u5e03\u4e0d\u5747\u5300\u3001\u90e8\u5206\u533a\u57df\u7a7a\u65f7\u65f6\uff0c\u52a0\u901f\u6548\u679c\u5dee\uff1b</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#spatial-partition","title":"Spatial Partition","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#kd-tree-pre-processing","title":"KD-Tree Pre-Processing","text":"<p>Spatial partition examples:</p> <ul> <li>Oct-Tree\uff08\u516b\u53c9\u6811\uff09   \u5c06\u6574\u4e2a\u573a\u666f\u7528\u5305\u56f4\u76d2\u5305\u56f4\uff0c\u5206\u6210 8 \u5757\uff083D\uff09\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5206\u6210\u7684\u533a\u57df\u518d\u5206\u6210 8 \u5757\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u5757\u4e2d\u7269\u4f53\u6570\u91cf\u8db3\u591f\u5c11</li> <li>KD-Tree   \u6bcf\u6b21\u5206\u5272\u65f6\u4ec5\u5206\u6210\u4e24\u5757\uff0c\u5206\u5272\u65b9\u5411 xyz \u4ea4\u66ff</li> <li>BSP-Tree   \u6bcf\u6b21\u5206\u5272\u65f6\u4ec5\u5206\u6210\u4e24\u5757\uff0c\u65b9\u5411\u4efb\u610f</li> </ul> <p></p> <p>KD-Tree storage:</p> <p>Internal nodes store:</p> <ul> <li>split axis: x-, y- or z-</li> <li>split position: coordinate of split plane along axis</li> <li>children: pointers to child nodes</li> </ul> <p>Leaf nodes store:</p> <ul> <li>list of objects</li> </ul> <p>Traversing a KD-Tree:</p> <p>\u4ece\u6574\u4e2a\u573a\u666f\u5f00\u59cb\uff0c\u5982\u679c\u6709\u4ea4\u70b9\uff0c\u5219\u770b\u548c\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u76d2\u5b50\u662f\u5426\u6709\u4ea4\u70b9\uff0c\u76f4\u5230\u68c0\u67e5\u5b8c\u6240\u6709\u6709\u4ea4\u70b9\u7684\u53f6\u8282\u70b9\u3002</p> <p></p> <p>\u95ee\u9898\uff1a</p> <ol> <li>\u9700\u8981\u77e5\u9053\u5305\u56f4\u76d2\u548c\u54ea\u4e9b\u4e09\u89d2\u5f62\u76f8\u4ea4</li> <li>\u4e00\u4e2a\u7269\u4f53\u53ef\u51fa\u73b0\u5728\u591a\u4e2a\u5305\u56f4\u76d2\u4e2d</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#object-partition-bounding-volume-hierarchy-bvh","title":"Object Partition &amp; Bounding Volume Hierarchy (BVH)","text":"<p>\u6bcf\u6b21\u5212\u5206\u5c06\u4e09\u89d2\u5f62\u5206\u6210\u4e24\u7ec4\uff0c\u5206\u522b\u91cd\u65b0\u6c42\u5305\u56f4\u76d2</p> <p>BVH \u4e2d\u4e00\u4e2a\u7269\u4f53\u53ea\u51fa\u73b0\u5728\u4e00\u4e2a\u5305\u56f4\u76d2\u4e2d\uff0c\u4e0d\u540c\u7684\u5305\u56f4\u76d2\u53ef\u80fd\u76f8\u4ea4</p> <p>KD-Tree \u5212\u5206\u7a7a\u95f4\uff0cBVH \u5212\u5206\u7269\u4f53\u3002\u5b9e\u9645 BVH \u5e94\u7528\u66f4\u5e7f\u6cdb\u3002</p> <p></p> <p>How to subdivide a node?</p> <p>Choose a dimension to split</p> <ul> <li>1: Always choose the longest axis in node</li> <li>2: Split node at locaton of median object (balances tree)</li> </ul> <p>Termination criteria?</p> <p>Stop when node contains few elements (e.g. 5)</p> <p>BVH traversal</p> C<pre><code>Intersect(Ray ray, BVH node) {\n  if (ray misses node.bbox) return;\n\n  if (node is a leaf node) {\n    test intersection with all objs;\n    return closet intersection;\n  }\n\n  hit1 = Intersect(ray, node.child1);\n  hit2 = Intersect(ray, node.child2);\n  return the closer of hit1, hit2;\n}\n</code></pre>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#basic-radiometry","title":"Basic Radiometry","text":"<p>Measurement system and units for illumination.</p> <p>Accurate measure the spatial properties of light New terms: radiant flux, intersity, irradiance, radiance</p> <p>Perform lighting calculation in a physically correct manner</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#radiant-energy-and-flux-power","title":"Radiant Energy and Flux (Power)","text":"<p>Radiant energy is the energy of electromagnetic radiation. It is measured in units of joules, and denoted by the symbol:</p> \\[Q\\,[J=Joule]\\] <p>Radiant flux (power) is the energy emitted, reflected, transmitted or received, per unit time.</p> \\[\\Phi\\equiv\\frac{\\mathrm{d}Q}{\\mathrm{d}t}\\,[W=Watt]\\,[ln=lumen]\\] <p>Flux: photons flowing through a sensor in unit time</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2014%20Ray%20Tracing%202/#radiant-intensity","title":"Radiant Intensity","text":"<p>Radiant (luminous) intensity is the power per unit solid angle emitted by a point light source.</p> <p></p> \\[I(\\omega)\\equiv\\frac{\\mathrm{d}\\Phi}{\\mathrm{d}\\omega}\\] \\[\\left[\\frac{W}{sr}\\right]\\,\\left[\\frac{lm}{sr}=cd=candela\\right]\\] <p>Angles and solid angles</p> <p>Angle: ratio of subtended arc length on circle to radius</p> <ul> <li>\\(\\theta=frac{l}{r}\\)</li> <li>Circle has \\(2\\pi\\) radians</li> </ul> <p>Solid angle: ratio of subtended area on sphere to radius squared</p> <ul> <li>\\(\\Omega=\\frac{A}{r^2}\\)</li> <li>Sphere has \\(4\\pi\\) steradians</li> </ul> <p>Differential solid angles:</p> <p></p> \\[ \\begin{align*} \\mathrm{d}A&amp;=(r\\mathrm{d}\\theta)(r\\sin\\theta\\mathrm{d}\\phi)\\\\ &amp;=r^2\\sin\\theta\\mathrm{d}\\theta\\mathrm{d}\\phi \\end{align*} \\] \\[\\mathrm{d}\\omega=\\frac{\\mathrm{d}A}{r^2}=\\sin\\theta\\mathrm{d}\\theta\\mathrm{d}\\phi\\] <p>Sphere:</p> \\[ \\begin{align*} \\Omega&amp;=\\int_{S^2}\\mathrm{d}\\omega \\\\ &amp;=\\int_0^{2\\pi}\\int_0^{\\pi}\\sin\\theta\\mathrm{d}\\theta\\mathrm{d}\\phi \\\\ &amp;=4\\pi \\end{align*} \\] <p>Isotropic point source:</p> \\[ \\begin{align*} \\Phi&amp;=\\int_{S^2}I\\mathrm{d}\\omega \\\\ &amp;=4\\pi I \\end{align*} \\] \\[I=\\frac{\\Phi}{4\\pi}\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2015%20Ray%20Tracing%203/","title":"Lec 15 Ray Tracing 3(Light Transport & Global Illumination)","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2015%20Ray%20Tracing%203/#irradiance-and-radiance","title":"Irradiance and Radiance","text":"<p>Irradiance is the power per (perpendicular / projected) unit area incident on a surfacee  point.</p> <p></p> \\[ E(\\mathbf{x})\\equiv\\frac{\\mathrm{d}\\Phi(\\mathbf{x})}{\\mathrm{d}A} \\] \\[ \\left[\\frac{\\text{W}}{\\text{m}^2}\\right]\\,\\left[\\frac{\\text{lm}}{\\text{m}^2}=\\text{lux}\\right] \\] <p>In Blinn-Phong model, \"intensity falloff\" should be corrected as \"irradiance falloff\".</p> <p>Radiance is the fundamental field quantity that describes the distribution of light in an environment.</p> <ul> <li>Radiance is the quantity associated with a ray  </li> <li>Rendering is all about computing radiance</li> </ul> <p>Radiance is the power per unit solid angle, per projected unit area.</p> <p></p> \\[ L(\\mathrm{p},\\omega)\\equiv\\frac{\\mathrm{d}\\Phi(\\mathrm{p},\\omega)}{\\mathrm{d}\\mathrm{d}A\\cos\\theta} \\] \\[ \\left[\\frac{\\mathrm{W}}{\\mathrm{sr}\\,\\mathrm{m}^2}\\right]\\,\\left[\\frac{\\mathrm{cd}}{\\mathrm{m}^2}=\\frac{\\mathrm{lm}}{\\mathrm{sr}\\,\\mathrm{m}^2}=\\mathrm{nit}\\right] \\] <ul> <li>Radiance is irradiance per solid angle  </li> <li>Radiance is intensity per projected area</li> </ul> <p>Irradiance vs. radiance</p> <p>Irradiance is total power received by area dA, from all angle.</p> \\[ \\begin{align*} dE(\\mathrm{p},\\omega)&amp;=L_i(\\mathrm{p},\\omega)\\cos\\theta\\mathrm{d}\\omega \\\\ E(\\mathrm{p})&amp;=\\int_{H^2}L_i(\\mathrm{p},\\omega)\\cos\\theta\\mathrm{d}\\omega \\end{align*} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2015%20Ray%20Tracing%203/#bidirectional-reflectance-distribution-function-brdf","title":"Bidirectional Reflectance Distribution Function (BRDF)","text":"<p>Radiance from direction \\(\\omega_i\\) turns into the power E that dA receives. Then power E will become the radiance to any other direction \\(\\omega\\). </p> <p>BRDF represents how much light is reflected into each outgoing direction \\(\\omega_r\\) from each incoming direction.</p> <p></p> \\[ f_r(\\omega_i\\to\\omega_r)=\\frac{\\mathrm{d}L_r(\\omega_r)}{\\mathrm{d}E_i(\\omega_i)}=\\frac{\\mathrm{d}L_r(\\omega_r)}{L_i(\\omega_i)\\cos\\theta_i\\mathrm{d}\\omega_i} \\quad\\left[\\frac{1}{\\text{sr}}\\right] \\] <p>The reflection equation:</p> \\[ L_r(\\mathrm{p},\\omega_r)=\\int_{H^2}f_r(\\mathrm{p},\\omega_i\\to\\omega_r)L_i(\\mathrm{p},\\omega_i)\\cos\\theta_i\\mathrm{d}\\omega_i \\] <p>The rendering equation:</p> <p>Add an emission term to make it general.</p> \\[ L_o(\\mathrm{p},\\omega_o)=L_e(\\mathrm{p},\\omega_o)+\\int_{\\Omega^+}L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)(n\\cdot\\omega_i)\\mathrm{d}\\omega_i \\] <p>(reflected light = emission + incident lignt * BRDF * incident angle)</p> <p>One point light: no need of integral Multiple point lights: sum over all light sources Area light: replace sum with integal Unknown reflection: regard reflection as light source</p> <p></p> <p>Simplify: L=E+KL</p> <p>Approximate set of all paths of light in scene:</p> \\[ \\begin{align*} L&amp;=E+KL \\\\ L&amp;=(I-K)^{-1}E \\\\ &amp;=(I+K+K^2+K^3+\\cdots)E \\\\ &amp;=E+KE+K^2E+K^3E+\\cdots \\end{align*} \\] <ul> <li>\\(E\\): emission directly from light sources  </li> <li>\\(KE\\): direct illumination on surfaces  </li> <li>\\(K^2E\\): indirect illumination (one bounce indirect)   </li> <li>...</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2015%20Ray%20Tracing%203/#probability-review","title":"Probability Review","text":"<p>\\(X\\): random variable \\(X\\sim p(x)\\): probability density function (PDF)</p> <p>Requirements of a probability distrubution:</p> \\[p_i\\ge0\\quad\\sum_{i=1}^n p_i=1\\] <p>Expected value:</p> \\[E[X]=\\sum_{i=1}^n x_i p_i\\] <p>Continuous case: PDF</p> <p>Conitions on p(x):      \\(p(x)\\ge 0\\,\\text{and}\\,\\int p(x)dx=1\\) Expected value of X:    \\(E[X]=\\int xp(x)dx\\)</p> <p>Function of a Random Variable</p> \\[X\\sim p(x)\\quad Y=f(X)\\] <p>Expected value of a function of a random varaible:</p> \\[E[Y]=E[f(X)]=\\int f(x)p(x)dx\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2016%20Ray%20Tracing%204/","title":"Lec 16 Ray Tracing 4(Monte Carlo Path Tracing)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2016%20Ray%20Tracing%204/#monte-carlo-integration","title":"Monte Carlo Integration","text":"<p>Why: we want to solve an integral, but it can be too difficult to solve \\(\\int_a^b f(x)dx\\) analytically.</p> <p>What &amp; how: estimate the integral of a function by averaging random samples of the function's value.</p> <p>Monte Carlo estimator:</p> \\[X_i\\sim p(x)\\quad\\int_a^b f(x)dx \\] \\[\\int f(x)dx=\\frac{1}{N}\\sum_{i=1}^N\\frac{f(X_i)}{p(X_i)}\\] <ul> <li>The more samples, the less variance.</li> <li>Sample on X, integration on X.</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2016%20Ray%20Tracing%204/#path-tracing","title":"Path Tracing","text":"<p>Problems of Whitted-Style:</p> <ul> <li>Glossy texure (Utah teapot)</li> <li>Color bleeding (Cornell box)</li> </ul> <p>A simple example: direct illumination</p> \\[ L_o(\\mathrm{p},\\omega_o)=\\int_{\\Omega^+}L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)(n\\cdot\\omega_i)\\mathrm{d}\\omega_i \\] <ul> <li>\\(f(x)\\): \\(L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)(n\\cdot\\omega_i)\\)</li> <li>\\(pdf(\\omega)\\): \\(1/2\\pi\\)</li> </ul> <p>Monte Carlo integration:</p> \\[ L_o(\\mathrm{p},\\omega_o)\\approx\\frac{1}{N}\\sum_{i=1}^N\\frac{L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)(n\\cdot\\omega_i)}{pdf(\\omega_i)} \\] <p>Code:</p> Text Only<pre><code>shade (p, wo)\n    Randomly choose N directions wi~pdf\n    Lo = 0.0\n    For each wi\n        Trace a ray r(p, wi)\n        If ray r hit the light\n            Lo += (1 / N) * L_i * f_r * cosine / pdf(wi)\n    Return Lo\n</code></pre> <p>Introduce global illumination:</p> <p>The light reflect from Q to P, equals to the direct illumination ar Q observed at P.</p> Text Only<pre><code>shade (p, wo)\n    Randomly choose N directions wi~pdf\n    Lo = 0.0\n    For each wi\n        Trace a ray r(p, wi)\n        If ray r hit the light\n            Lo += (1 / N) * L_i * f_r * cosine / pdf(wi)\n        Else If ray r hit an object at q\n            Lo += (1 / N) * shade(q, -wi) * f_r * cosine / pdf(wi)\n    Return Lo\n</code></pre> <p>Problems 1: Explosion of rays as bounces go up Rays will not explode iff N = 1.</p> <p>This is \"path tracing\".</p> <p>Code:</p> Text Only<pre><code>shade (p, wo)\n    Randomly choose ONE directions wi~pdf(w)\n    Lo = 0.0\n    For each wi\n        Trace a ray r(p, wi)\n        If ray r hit the light\n            Return L_i * f_r * cosine / pdf(wi)\n        Else If ray r hit an object at q\n            Return shade(q, -wi) * f_r * cosine / pdf(wi)\n</code></pre>"},{"location":"AbiesNotes/GAMES101/Lecture%2016%20Ray%20Tracing%204/#ray-generation","title":"Ray Generation","text":"Text Only<pre><code>ray_genaration(camPos, pixel)\n    Uniformly choose N sample positions within the pixel\n    pixel_radiance = 0.0\n    For each sample in the pixel\n        Shoot a ray t(camPos, cam_to_sample)\n        If ray r hit the scene at p\n            pixel_radiance += 1 / N * shade(p, sample_to_cam)\n    Return pixel_radiance\n</code></pre> <p>Problem 1: The recursion won't stop. Solution: Russian Roulette (RR)</p> <p>Suppose we manually set a probability P (0&lt;P&lt;1). With probability P, shoot a ray and return the shading result divided by P is Lo / P. With probability 1-P, don't shoot a ray adn you'll get 0.</p> <p>In this way, you can still expect to get Lo: E = P _ (Lo / P) + (1 - P) _ 0 = Lo</p> <p>Code:</p> Text Only<pre><code>(Add)\n    Manually specify a probability P_RR\n    Randomly select ksi in a uniform dist. in [0, 1]\n    If (ksi &gt; P_RR) retunr 0.0\n\n    Return ... / P_RR\n</code></pre> <p>Problem 2: Inefficient. When SPP (samplees per pixel) is low, get noisy results</p> <p>Only a few rays hit the light, so a lot of rays are \"wasted\".</p> <p>Solution: sample on the light</p> <p>Assume pdf = 1 / A. But the rendering equation intefrates on the solid angle.</p> <p>To sample on the light and integrate on the light, need the relationship between \\(d\\omega\\) and \\(dA\\).</p> <p></p> \\[d\\omega=\\frac{dA\\cos\\theta'}{|| x'-x ||^2}\\] <p>Rewrite the rendering equation:</p> \\[ \\begin{align*} L_o(\\mathrm{p},\\omega_o)&amp;=\\int_{\\Omega^+}L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)\\cos\\theta\\,\\mathrm{d}\\omega_i \\\\ &amp;=\\int_A L_i(\\mathrm{p},\\omega_i)f_r(\\mathrm{p},\\omega_i,\\omega_o)\\frac{\\cos\\theta\\cos\\theta'}{|| x'-x ||^2}\\mathrm{d}A \\end{align*} \\] <p>Code:</p> Text Only<pre><code>shade(p, wo)\n    # Contribution from the light source.\n    Uniformlu sanple the light at x' (pdf_light = 1 / A)\n    L_dir = L_i * f_r * cos theta * cos theta' / |x' - p|^2 / pdf_light\n\n    # Contribution from other reflectors\n    L_indir = 0.0\n    Test Russian Roulette with probability P_RR\n    Uniformly sample the hemisphere toward wi (pdf_hemi = 1 / 2pi)\n    Trace a ray r(p, wi)\n    If ray r hir a non-emitting object ar q\n        L_indir = shade(q, -wi) * f_r * cos theta / pdf_hemi / P_RR\n\n    Return L_dir + L_indir\n</code></pre> <p>Final problem: need to test if the ray os not blocked in the middle.</p> <p>Hard to handle point light source.</p> <p>Things haven't covered:</p> <ul> <li>Uniformly sampling the hemisphere  </li> <li> <p>How? And in gengral. how to sample any function?   </p> </li> <li> <p>Monte Carlo intefration allows arbitatry pdfs  </p> </li> <li> <p>What's the best choice? (importance sampling)   </p> </li> <li> <p>Do random numbers matter?  </p> </li> <li> <p>Yes (low discrepancy sequences)  </p> </li> <li> <p>Sample the hemimsphere and the light  </p> </li> <li> <p>Can I combine them? Yes (multipe immp. sampling) </p> </li> <li> <p>The radiance of a pixel is the average of radiance on all paths passing through it  </p> </li> <li> <p>Why? (pixel reconstruction filter)  </p> </li> <li> <p>Is the radiance of a pixel the color of a pixel?  </p> </li> <li>No. (gamma correction, curves, color space)</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/","title":"Lec 17 Materials and Appearances","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 258 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6e32\u67d3\u65b9\u7a0b\u4e2d\u7684 BRDF \u51b3\u5b9a\u7269\u4f53\u7684\u6750\u8d28\u3002Material == BRDF</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#diffuse-lambertian-material","title":"Diffuse / Lambertian Material","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#reflection","title":"Reflection","text":"<p>Light is equally reflected in each output direction.</p> <p>\u5047\u8bbe\u5404\u4e2a\u65b9\u5411\u8fdb\u5165\u7684\u5149\u5f3a\u5ea6\u76f8\u540c\uff0c\u5373\u5165\u5c04\u5149\u5747\u5300\u3002\u5047\u8bbe\u88ab\u7167\u5c04\u7684\u70b9\u65e2\u4e0d\u5438\u6536\u5149\u4e5f\u4e0d\u53d1\u51fa\u5149\u3002</p> <p>\u6839\u636e\u80fd\u529b\u5b88\u6052\uff0c\u8fdb\u5165\u7684\u80fd\u91cf\u548c\u53cd\u5c04\u51fa\u7684\u80fd\u91cf\u76f8\u7b49\u3002\u8fdb\u5165\u7684\u80fd\u91cf\u4e3a\u88ab\u7167\u5c04\u7684\u70b9\u5468\u56f4\u4e00\u5c0f\u5757\u533a\u57df\u63a5\u6536\u7684\u5149\uff0c\u5373\u5f53\u524d\u70b9\u7684 irradiance\u3002\u6240\u4ee5\u5165\u5c04\u548c\u51fa\u5c04\u7684 radiance \u76f8\u7b49\u3002</p> \\[ \\begin{align*} L_o(\\omega_o)&amp;=\\int_{H^2}f_r L_i(\\omega_i)\\cos\\theta_i\\mathrm{d}\\omega_i \\\\ &amp;=f_r L_i\\int_{H^2}\\cos\\theta_i\\mathrm{d}\\omega_i \\\\ &amp;=\\pi f_r L_i \\end{align*} \\] <p>\u6545\u5e38\u6570 BRDF \u4e3a\uff1a</p> \\[f_r=\\frac{\\rho}{\\pi}\\] <p>\u5176\u4e2d\\(\\rho\\)\u4e3a albedo \u7cfb\u6570\uff0c\u53ef\u4ee5\u4e3a\u5e38\u6570\uff0c\u53ef\u4ee5\u4e3a RGB \u5206\u5f00\u8bbe\u7f6e\u3002</p> <p>Glossy material:</p> <p></p> <p>Refractive material:</p> <p></p> <p>Perfect Specular Reflection</p> <p></p> \\[ \\omega_o +\\omega_i=2(\\omega_i\\cdot\\vec{n})\\vec{n} \\\\[10pt] \\Rightarrow\\,\\omega_o=-\\omega_i+2(\\omega_i\\cdot\\vec{n})\\vec{n} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#transmition","title":"Transmition","text":"<p>Snell's Law:</p> \\[ \\begin{align*} \\eta_i\\sin\\theta_i&amp;=\\eta_t\\sin\\theta_t \\\\[10pt] \\cos\\theta_t&amp;=\\sqrt{1-\\left(\\frac{\\eta_i}{\\eta_t}\\right)^2(1-\\cos^2\\theta_i)} \\end{align*} \\] <p>Snell's Window / Circle:</p> <p>Looking from underwater, can only see objects confined to a conical area.</p> <p>Fresnel Reflection / Term:</p> <p>Reflectance depends on incident angle (and polarization of light)</p> <p>Fresnel term (dieletric, \\(\\eta\\)=1.5):</p> <p></p> <p>Approximate: Schlick's approximation</p> \\[ \\begin{align*} R(\\theta)&amp;=R_0+(1-R_0)(1-\\cos\\theta)^5 \\\\ R_0&amp;=\\left(\\frac{n_1-n_2}{n_1+n_2}\\right)^2 \\end{align*} \\]"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#microfacet-material","title":"Microfacet Material","text":"<p>\u5047\u8bbe\u7269\u4f53\u8868\u9762\u7c97\u7cd9\uff0c\u4f46\u4ece\u8fdc\u5904\u770b\u8868\u9762\u5e73\u6ed1\u3002\u6bcf\u4e2a\u8868\u9762\u7684\u5fae\u5143\u5b8c\u5168\u955c\u9762\u53cd\u5c04\u3002 \uff08\u4ece\u8fdc\u5904\uff0c\u770b\u5230\u6750\u8d28\uff1b\u4ece\u8fd1\u5904\uff0c\u770b\u5230\u51e0\u4f55\uff09\u3002 \u8ba4\u4e3a\u8868\u9762\u7531\u5fae\u8868\u9762\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5fae\u8868\u9762\u6709\u5404\u81ea\u7684\u6cd5\u7ebf\u3002</p> <p>\u5206\u6790\u5fae\u8868\u9762\u6cd5\u7ebf\u7684\u5206\u5e03\uff0c\u5224\u65ad\u5b8f\u89c2\u8868\u9762\u7684\u6750\u8d28\u3002 - concentrated &lt;-&gt; glossy - spread &lt;-&gt; diffuse</p> <p>\u5f53half vector\u548c\u6cd5\u7ebf\u76f8\u540c\u65f6\uff0c\u624d\u80fd\u5c06\u5165\u5c04\u5149\u53cd\u5c04\u5230\u5bf9\u7740\u76f8\u673a\u7684\u51fa\u5c04\u65b9\u5411\uff08\u56e0\u4e3a\u5fae\u8868\u9762\u90fd\u4e3a\u955c\u9762\u53cd\u5c04\uff09</p> \\[f(i,o)=F(i,h) G(i,o,h) D(h)\\] <p>f = Fresnel term * shadowing-masking term * distribution of normals</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#isotropic-anisotropic-materials","title":"Isotropic / Anisotropic Materials","text":"<p>(\u5404\u5411\u540c\u6027/\u5404\u5411\u5f02\u6027\u6750\u8d28)</p> <p>Key: directionality of underlying surface</p> <p>Anisotropic BRDFs: reflection depends on azimuthal angle \\(\\phi\\), results from oriented microstructure of surface.</p> \\[f_r(\\theta_i,\\phi_i;\\theta_r,\\phi_r)\\neq f_r(\\theta_i,\\theta_r,\\phi_r-\\phi_i)\\] <p>E.g. nylon, velvet</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#properties-of-brdfs","title":"Properties of BRDFs","text":"<ul> <li>Non-negativity</li> </ul> \\[ f_r(\\omega_i\\to\\omega_r)\\ge 0\\] <ul> <li>Linearity</li> </ul> \\[L_r(\\mathrm{p},\\omega_r)=\\int_{H^2}f_r(\\mathrm{p}, \\omega_i\\to\\omega_r)L_i(\\mathrm{p},\\omega_i)\\cos\\theta\\mathrm{d}\\omega_i\\] <ul> <li>Reciprocity principle</li> </ul> \\[f_r(\\omega_r\\to\\omega_i)= f_r(\\omega_i\\to\\omega_r)\\] <ul> <li>Energy conservation</li> </ul> \\[\\forall L_i\\int_{H^2}f_r(\\omega_i\\to\\omega_r)\\cos\\theta_i\\mathrm{d}\\omega_i\\le 1\\]"},{"location":"AbiesNotes/GAMES101/Lecture%2017%20Materials%20and%20Appearances/#measuring-brdfs","title":"Measuring BRDFs","text":"<p>For each outgoing direction and incoming direction, move light and camera.</p> <p>Problem: curse of dimensionality</p> <p>Improve efficiency:</p> <ul> <li>Isotropic surfaces reduce dimensionality from 4D to 3D  </li> <li>Reciprocity reduces # of measurements by half  </li> <li>Clever optical systems  </li> </ul> <p>MERL BRDF Database</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/","title":"Lec 18 Advanced Topics in Rendering","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#advanced-light-transport","title":"Advanced Light Transport","text":"<p>Monte Carlo Estimators:</p> <ul> <li>Unbiased: the expected value will always be the correct value.</li> <li>Consistent: converges to the correct value</li> <li>Biased: not unbiased</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#bidirectional-path-tracing-bdpt","title":"Bidirectional Path Tracing (BDPT)","text":"<p>Traces sub-paths from both the camera and the light. Connects the end points from both sub-paths.</p> <p>BDPT is suitable if the light transport is complex on the light\u2019s side. e.g. the first step is diffusion.</p> <p>Cons: difficult to implement, slow</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#metropolis-light-transport-mlt","title":"Metropolis Light Transport (MLT)","text":"<p>Apply Markov Chain Monte Carlo (MCMC), jumping from the current sample to the next with some PDF.</p> <p>Very good at locally exploring difficult light paths.</p> <p>Key idea: locally perturb an existing path to get a new path</p> <p>Cons: difficult to estimate the convergence rate. Usually produces \u201cdirty\u201d results</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#photon-mapping","title":"Photon Mapping","text":"<p>Very good at handling Specular-Diffuse-Specular (SDS) paths and generating caustics</p> <ol> <li>photon tracing: Emitting photons from the light source, bouncing them around, then recording photons on diffuse surfaces</li> <li>photon collection: Shoot sub-paths from the camera, bouncing them around, until they hit diffuse surfaces</li> <li>local density estimation: For each shading point, fond the nearest N photons. Take the surfaces area they over.</li> </ol> <p>small N &lt;-&gt; noisy large N &lt;-&gt; blurry</p> <p>Why? local density estimation covers an area</p> <p>More photons emitted -&gt; the same N photons covers a smaller area</p> <ul> <li>Biased == blurry</li> <li>Consistent = not blurry with infinite samples</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#vertex-connection-and-merging-vcm","title":"Vertex Connection and Merging (VCM)","text":"<p>A combination of BDRT and Photon Mapping</p> <p>Key Idea:</p> <ul> <li>Not waste the sub-path in BDRT if their end points cannot be connected but can be merged</li> <li>Use photon mapping to handle the merging of nearby \u201cphotons\u201d</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#instant-radiosity-ir","title":"Instant Radiosity (IR)","text":"<p>Key Idea:</p> <ul> <li>Lit surfaces can be treated as light sources</li> </ul> <p>Approach:</p> <ul> <li>Shoot light sub-paths and assume the end point of each sub-path is a Virtual Point Light (VPL)</li> <li>Render the scene as usual using these VPLs</li> </ul> <p>Pros: fast and usually gives good results on diffuse scenes</p> <p>Cons:</p> <ul> <li>Spikes will emerge when VPLs are close to shading points</li> <li>Cannot handle glossy material</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#advanced-appearance-modeling","title":"Advanced Appearance Modeling","text":""},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#participating-media","title":"Participating Media","text":"<p>At any point as light travels through a participating medium, it can be (partially) absorbed and scattered. Use Phase Function to describe the angular distribution of light scattering at any point x within participating media.</p> <p>Rendering:</p> <ol> <li>Randomly choose a direction to bounce</li> <li>Randomly choose a distance to go straight</li> <li>At each \u201cshading point\u201d, connect to the light</li> </ol>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#hair-appearance","title":"Hair Appearance","text":"<p>Marschner Model:</p> <p></p> <p>3 types of light interactions: R, TT, TRT (R: reflection; T: transmission)</p> <p>hair: cuticle -&gt; cortex -&gt; medulla (scatter light)</p> <p>Difference between hair/fur fibers: size of medulla</p> <p>Double Cylinder Model:</p> <p></p> <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#translucent-material","title":"Translucent Material","text":"<p>Subsurface scattering: Visual characteristics of many surfaces caused by light exiting at different points than it enters.</p> <p>BSSRDF: generalization of BRDF; exitant radiance at one point due to incident differential irradiance at another point</p> \\[S(x_i, \\omega_i, x_o, \\omega_o)\\] <p>Generalization of rendering equation: integrating over all points on the surface and all directions</p> \\[L(x_o,\\omega_o)=\\int_A\\int_{H^2} S(x_i, \\omega_i, x_o, \\omega_o)L_i(x_i,\\omega_i)\\cos\\theta_i\\mathrm{d}\\omega_i\\mathrm{d}A\\] <p></p> <p>Dipole Approximation:approximate light diffusion by introducing two point sources</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#cloth","title":"Cloth","text":"<p>fiber -&gt; ply -&gt; yarn (woven or knitted) cloth</p> <p>Render as BRDF: given the weaving pattern, calculate the overall behavoir Limitation: cannot render velvet</p> <p>Render as Participating Media: properties of individual fibers and their distribution -&gt; scattering parameters</p> <p>Render as Actual Fibers...</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#detailed-apprearance","title":"Detailed Apprearance","text":"<p>Difficult path sampling problem: missing light Solution: BRDF over a pixel</p> <p>Recent Trend: Wave Optics</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2018%20Advanced%20Topics%20in%20Rendering/#procedual-appearance","title":"Procedual Appearance","text":"<p>e.g. Define details without textures: compute a noise function on the fly.</p> <p>3D noise -&gt; internal structure if cut or broken</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/","title":"Lec 19 Cameras, Lenses and Light Fields","text":"<p>Imaging = Synthesis + Capture</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#field-of-view-fov","title":"Field of View (FOV)","text":"<p>For a fixed sensor size, decreaseing the focal length increses the FOV.</p> \\[\\text{FOV}=2\\,\\arctan\\left(\\frac{h}{2f}\\right)\\] <p>Due to historical reasons, the angle of view is usually expressed using the focal length of lenses designed for 35mm format film (36 x 24mm).</p> <ul> <li>17mm is a wide-angle lens, with a field of view of 104\u00b0</li> <li>50mm is a \"standard\" lens, with a field of view of 47\u00b0</li> <li>200mm is a telephoto lens, with a field of view of 12\u00b0</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#exposure","title":"Exposure","text":"<p>\\(H=T\\times E\\) (Exposure = Time \\(\\times\\) Irradiance)</p> <p>Exposure time T: controlled by shutter Irradiance E: power of light falling on a unit area of sensor. Controlled by lens aperture and focal length.</p> <p>Aperture size</p> <ul> <li>Change the f-stop by opening / closing the aperture</li> </ul> <p>Shutter speed</p> <ul> <li>Change the duration the sensor pixels integrate light</li> </ul> <p>ISO gain</p> <ul> <li>Change the amplification (analog and/or digital) between sensor values and digital image values</li> </ul> <p></p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#iso-gain","title":"ISO (Gain)","text":"<p>Third vaiable for exposure</p> <p>Film: trade sensitivity for grain Digital: trade sensitive for noise</p> <ul> <li>Multiply signal before analog-to-digital conversion  </li> <li>Linear effect (ISO 200 needs half the light as ISO 100)</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#f-number-f-stop","title":"F-Number (F-Stop)","text":"<p>Written as FN or F/N. N is the f-number.</p> <p>Informal understanding: the inverse-diameter of a round aperture.</p> <p>Formal definition: the focal length divided by the diameter of the aperture.</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#shutter","title":"Shutter","text":"<p>Motion blur: handshake, subject movement. Doubling shutter time doubles motion blur.</p> <p>Rolling shutter: different parts of photo taken at different times.</p> <p>If the exposure is to  bright/dark, may need to adjust f-stop and/or shutter up/down.</p> <p>Photograhers must trade off depth of field and motion blur for moving subjects.</p> <p>High-speed photography: extremely fase shutter speed x (large aperture and/or high ISO)</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#thin-lens-approximation","title":"Thin Lens Approximation","text":"<p>We consider focal length can be arbitrarily changed (in reality, yes)</p> <p>Gaussian thin lens equation:</p> \\[\\frac{1}{f}=\\frac{1}{z_i}+\\frac{1}{z_o}\\] <p>(Why? Draw parallel ray and focal ray)</p>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#defocus-blur","title":"Defocus Blur","text":"<p>Circle of Confusion (CoC)</p> <p>When the object is not on the focal plane, the image is not on the sensor plane. Sensor recieves a circle of light.</p> <p>C denotes the diameter of CoC. A denotes the diameter of lens.</p> <p></p> \\[ \\frac{C}{A}=\\frac{d'}{z_i}=\\frac{|z_s-z_i|}{z_i}\\] \\[ C=A\\frac{|z_s-z_i|}{z_i}=\\frac{F}{N}\\frac{|z_s-z_i|}{z_i}\\] <p>Ray tracing for defocus blur</p> <ul> <li>Choose sensoe size, lens focal length and aperture size  </li> <li>Choose depth of subject of interest \\(z_o\\)</li> </ul>"},{"location":"AbiesNotes/GAMES101/Lecture%2019%20Cameras%2C%20Lenses%20and%20Light%20Fields/#depth-of-field","title":"Depth of Field","text":"<p>Depth range in a scene where the corresponding CoC is considered small enough.</p> <p>Depth of field: max depth range - min depth range</p>"},{"location":"AbiesNotes/GAMES101/games101/","title":"Lecture 01 / Overview of Computer Graphics","text":"<p>Menu of this lecture</p> <ul> <li>Concepts of raterization, ray tracing etc.</li> </ul>"},{"location":"AbiesNotes/GAMES101/games101/#basic-concepts","title":"Basic Concepts","text":"<p>Rasterization</p> <ol> <li>Project geometry primitives (3D triangles / polygons) onto the screen.</li> <li>Break projected primitives into fragments (pixels)</li> <li>Real-time applications is the gold standard in Video Games</li> </ol> translation <ol> <li>\u5c06\u51e0\u4f55\u5f62\u72b6\uff083D \u4e09\u89d2\u5f62/\u591a\u8fb9\u5f62\uff09\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a</li> <li>\u5c06\u6295\u5f71\u540e\u7684\u56fe\u5143\u5212\u5206\u4e3a\u7247\u6bb5\uff08\u50cf\u7d20\uff09</li> <li>\u5728\u89c6\u9891\u6e38\u620f\u4e2d\uff0c\u5b9e\u65f6\u5e94\u7528\u662f\u9ec4\u91d1\u6807\u51c6</li> </ol> <p>Curves and Meshes</p> <p>Ray Tracing</p> <p>Shoot rays from camera through each pixel Offline application is the gold standard in Animation / Movies</p> <p>Animation / Simulation</p> <p>Difference between Computer Graphics and Computer Vision?</p> <p></p> <p>Click here to jump to the course website</p>"},{"location":"AbiesNotes/GAMES101/games101/#lecture-02-review-of-linear-algebra","title":"Lecture 02 / Review of Linear Algebra","text":"<p>Menu of this lecture</p> <ul> <li>Functions of dot product and cross product</li> <li>Dot product and cross product in matrix</li> </ul> <p>Unit vector: \\(\\hat{a}=\\vec{a}/|\\vec{a}|\\) Usually use unit vectors to present directions.</p> <p>Vectors are represented as column vectors by default.</p>"},{"location":"AbiesNotes/GAMES101/games101/#functions-of-dot-product-and-cross-product","title":"Functions of dot product and cross product","text":"<p>Dot product:</p> <ol> <li>Find the angle between two vectors.    e.g cosine of angle bwtween light source and surface.</li> <li>Find projection of one vector on another.</li> </ol> <p>More specifically:</p> <ol> <li>Measure how close two directions are.</li> <li>Decompose a vector.</li> <li>Determine forward / backward.</li> </ol> <p>Cross product:</p> <ol> <li>Construction coordinate systems.</li> </ol> <p>Functions:</p> <ol> <li>Determine left / right. Given a plane and two vectors on this plane, determine the relative position of the two vectors.</li> <li>Determine in / out. Several vectors are connected head-to-tail to form a closed shape. Given another point, determine whether this point lies inside the closed shape.</li> </ol> <p>e.g.  Check: \\(\\vec{AB}\\times\\vec{AP}, \\vec{BC}\\times\\vec{BP}, \\vec{CA}\\times\\vec{CP}\\). If the signs of all three are the same, then point P is inside the shape.</p>"},{"location":"AbiesNotes/GAMES101/games101/#dot-product-and-cross-product-in-matrix","title":"Dot product and cross product in matrix:","text":"<p>2D reflection about y-axis:</p> \\[ \\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix}= \\begin{pmatrix} -x \\\\ y \\end{pmatrix} \\] matrix in latex Text Only<pre><code>\\begin{pmatrix}\na &amp; b \\\\\nc &amp; d\n\\end{pmatrix}\n</code></pre> <p>Rendered output:</p> \\[ \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\] \\[ \\vec{a}\\cdot\\vec{b}=A^T\\cdot B =\\begin{pmatrix} x_a &amp; y_a &amp; z_a \\end{pmatrix} \\begin{pmatrix} x_b \\\\ y_b \\\\ z_b \\end{pmatrix} \\] \\[ \\vec{a}\\times\\vec{b}=A^*B =\\begin{pmatrix}  0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}  \\begin{pmatrix}  x_b \\\\ y_b \\\\ z_b  \\end{pmatrix} \\] <p>(\\(\\begin{pmatrix}   0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}\\) is the dual matrix of \\(\\vec{a}\\))</p>"},{"location":"AbiesNotes/GAMES101/games101/#lecture-03-transformation","title":"Lecture 03 / Transformation","text":"<p>Menu of this lecture</p> <ul> <li>2D transformations: rotation, scale, shear</li> <li>Homogeneous coordinates</li> <li>Composing transformation</li> </ul>"},{"location":"AbiesNotes/GAMES101/games101/#viewing-transformation","title":"Viewing transformation","text":"<p>Viewing transformation: 3D -&gt; 2D projection</p> <p>Scale</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} s_x &amp; 0 \\\\ 0 &amp; s_y \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Multiplying a matrix on the left corresponds to performing a row operation.</p> <p>Reflection</p> <p>E.g. reflection about the y-axis:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Sheer</p> <p>Illustration of sheer tranformation: </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} x+ay \\\\ y \\end{pmatrix} =\\begin{pmatrix} 1 &amp; a \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Rotation</p> <p>By default, the rotation is around the origin. \\(R_{45}\\) refers to rotatiing 45 degrees counterclockwose about the origin. </p> \\[ R_{\\theta}=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\ \\sin\\theta &amp; \\cos\\theta \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/games101/#homogeneous-coordinates","title":"Homogeneous Coordinates","text":"<p>Translation is not linear transform, so it cannot be represented in matrix form.  But we don't want it to be a special case, so homogeneous coordinates are used to represent all transformations. </p> <p>Add a third coordinate (w-coordinate), to represent the translation characters of points or vectors.  </p> <p>Affine transformations: affine map = linear map + translation map  </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} +\\begin{pmatrix} t_x \\\\ t_y \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/games101/#2d-version","title":"2D version","text":"<ul> <li>2D point: \\(\\begin{pmatrix}x , y , 1 \\end{pmatrix}^T\\)</li> <li>2D vector:\\(\\begin{pmatrix}x , y , 0 \\end{pmatrix}^T\\)</li> </ul> <p>When \\(w\\neq 0\\), 2D point \\(\\begin{pmatrix}x , y , w \\end{pmatrix}^T\\) means \\(\\begin{pmatrix}x/w , y/w , 1 \\end{pmatrix}^T\\)</p> <p>(The w-coordinate of vectors are 0, which means vectors are translation invariant. By comparison, w-coordinate of points are 1)</p> <p>Use homogeneous Coordinates to represent affine translations:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\\\ w' \\end{pmatrix} =\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ 1 \\end{pmatrix} =\\begin{pmatrix} x+t_x \\\\ y+t_y \\\\ 1 \\end{pmatrix} \\] <p>Properties:  1. The last row must be 0 0 1. 2. The top-left 2\u00d72 matrix represents a linear transformation. 3. The rightmost column represents translation. 4. Relations between points and vectors:    - vector + vector = vector    - point  - point  = vector    - point  + vector = point    - point  + point  = point</p> <p>Scale:</p> \\[ S(s_x, s_y)=\\begin{pmatrix} s_x &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Rotation:</p> \\[ R(\\alpha)=\\begin{pmatrix} \\cos\\alpha &amp; -\\sin\\alpha &amp; 0 \\\\ \\sin\\alpha &amp; \\cos\\alpha &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y)=\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\  0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Inverse transformations: \\(M^{-1}\\)</p> <p>Esp. matrix \\(R_{\\theta}\\) for rotation is orthogonal, so \\(R_{-\\theta}=R^{-1}=R^T\\).</p>"},{"location":"AbiesNotes/GAMES101/games101/#3d-version","title":"3D version","text":"<ul> <li>3D point: \\(\\begin{pmatrix}x , y , z, 1 \\end{pmatrix}^T\\)</li> <li>3D vector:\\(\\begin{pmatrix}x , y , z, 0 \\end{pmatrix}^T\\)</li> </ul> <p>Use 4\u00d74 matrix for affine transformations. </p>"},{"location":"AbiesNotes/GAMES101/games101/#composing-transforms","title":"Composing Transforms","text":"<p>All matrices are left-multiplied to the original coordinates, and are composed in the order of transformations from right to left.</p> <p>Examples</p> <p>Transformations: A1 -&gt; A2 -&gt; ... -&gt; An Matrix: \\(A_n\\cdots A_2A_1\\begin{pmatrix}x \\\\ y \\\\ 1\\end{pmatrix}\\)</p>"},{"location":"AbiesNotes/GAMES101/games101/#lecture-04-transformations-cont","title":"Lecture 04 Transformations Cont.","text":"<p>Menu of this lecture</p> <ul> <li>3D transformations</li> <li>Viewing transformations</li> </ul>"},{"location":"AbiesNotes/GAMES101/games101/#3d-transformations","title":"3D Transformations","text":"<p>Scale:</p> \\[ S(s_x, s_y, s_z)= \\begin{pmatrix} s_x &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; s_z &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y, t_z)= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; 0 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/games101/#3d-rotations","title":"3D Rotations","text":""},{"location":"AbiesNotes/GAMES101/games101/#compose-from-r_x-r_y-r_z","title":"Compose from \\(R_x, R_y, R_z\\)","text":"\\[ R_x(\\theta)=\\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos\\theta &amp; -\\sin\\theta &amp; 0 \\\\ 0 &amp; \\sin\\theta &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] \\[ R_y(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; 0 &amp; \\sin\\theta &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ -\\sin\\theta &amp; 0 &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>The rotation part of \\(R_y(\\theta)\\) is different from common rotation matrix, because \\(\\vec{y}=\\vec{z}\\times\\vec{x}\\), which is not the common sequence xyzxyz.</p> \\[ R_z(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta &amp; 0 &amp; 0 \\\\ \\sin\\theta &amp; \\cos\\theta &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>When rotating around x-, y-, and z- axis with angle \\(\\alpha, \\beta, \\gamma\\) respectively (\\(\\alpha, \\beta, \\gamma\\) are called Euler angles),  $$ R_{xyz}(\\alpha, \\beta, \\gamma)=R_x(\\alpha)R_y(\\beta)R_z(\\gamma) $$</p>"},{"location":"AbiesNotes/GAMES101/games101/#rodrigues-rotation-formation","title":"Rodrigues' Rotation Formation","text":"<p>Rotation by angle \\(\\alpha\\) around axis n, $$ R(n, \\alpha)=\\cos(\\alpha)I+(1-\\cos(\\alpha))n n^T+\\sin(\\alpha)\\begin{pmatrix} 0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\ -n_y &amp; n_x &amp; 0 \\end{pmatrix} $$</p> <p>If the axis of rotation does not pass through the origin, first translate the entire system so that the axis passes through the origin, perform the rotation, and then translate the entire system back to its original position.</p> <p>Quaternions can be used for interpolation between rotation angles.</p>"},{"location":"AbiesNotes/GAMES101/games101/#viewing-transformations","title":"Viewing transformations","text":"<p>MVP Transformations:</p> <ol> <li>Model transformations (arrange objects and places)</li> <li>View transformations (arrange angles)</li> <li>Projection transformations</li> </ol>"},{"location":"AbiesNotes/GAMES101/games101/#define-camera","title":"Define camera","text":"<ul> <li>position: \\(\\hat{e}\\) (points from the origin to the camera)</li> <li>look-at / gaze direction: \\(\\hat{g}\\) (points from the camera to the object)</li> <li>up direction: \\(\\hat{t}\\)</li> </ul> <p>Usually we transform the camera to the origin, up at Y, look at -Z. And transform the objects along with the camera.</p>"},{"location":"AbiesNotes/GAMES101/games101/#transform-the-camera-mv-transformation","title":"Transform the camera (MV transformation)","text":"<p>Steps:</p> <ol> <li>Translate e to origin (\\(T_{view}\\))</li> <li>Rotate g to -Z, t to Y, (g, x, t) to x (\\(R_{view}\\))</li> </ol> <p>\\(T_{view}\\):</p> \\[ T_{view}= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -x_e \\\\ 0 &amp; 1 &amp; 0 &amp; -y_e \\\\ 0 &amp; 0 &amp; 1 &amp; -z_e \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\\(R_{view}\\): Consider its inverse rotation (X to (g, x, t), Y to t, Z to -g).</p> <p>comment</p> <p>Both the direction and order of rotation must be reversed.</p> \\[ R_{view}^{-1}=\\begin{pmatrix} x_{\\hat{g}\\times\\hat{t}} &amp; x_t &amp; x_{-g} &amp; 0 \\\\ y_{\\hat{g}\\times\\hat{t}} &amp; y_t &amp; y_{-g} &amp; 0 \\\\ z_{\\hat{g}\\times\\hat{t}} &amp; z_t &amp; z_{-g} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Since \\(R_{view}\\) is orthoganal,  \\(\\(R_{view}=(R_{view}^{-1})^T\\)\\)</p>"},{"location":"AbiesNotes/GAMES101/games101/#projection-transformation","title":"Projection transformation","text":"<p>Two 3D -&gt; 2D types: 1. orthographic projection 2. perspective projection</p>"},{"location":"AbiesNotes/GAMES101/games101/#orthographic-projection","title":"Orthographic projection","text":"<p>Consider a cuboid \\([l,r]\\times[b,t]\\times[f,n]\\), map it to the canonical cube \\([-1,1]^3\\), and drop Z coordinate to project.</p> Why we just need to drop Z coordinate? <p>In the \"Define camera\" part, we define the camera located at the origin, up at Y, look at -Z.</p> \\[ M_{ortho} = \\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\frac{r + l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t + b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n + f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/GAMES101/games101/#perspective-projection","title":"Perspective projection","text":"<p>Illustration:</p> <p></p> <p>Steps: 1. Squish the frustum into a cuboid, all points on the near plane remain unchanged, all points on the far plane undergo in-plane contraction, with the center point of the far plane remaining fixed. 2. Do orthographic projection.</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; n &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; n+f &amp; -nf\\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{pmatrix} \\] Derivation <p>Squish illustration: </p> \\[ M_{persp\\to ortho}\\begin{pmatrix}x\\\\y\\\\z\\\\1\\end{pmatrix} =\\begin{pmatrix}nx/z\\\\ny/z\\\\?\\\\1\\end{pmatrix} =\\begin{pmatrix}nx\\\\ny\\\\?\\\\z\\end{pmatrix} \\] <p>thus,</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n&amp;0&amp;0&amp;0\\\\ 0&amp;n&amp;0&amp;0\\\\ A&amp;B&amp;C&amp;D\\\\ 0&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>According to the properties of squishing, consider a point on the near plane and the middle point on the far plane to solve the third row.</p> <ol> <li>\\((x,y,n,1)\\to(x,y,n,1)=(nx,ny,n^2,n)\\) \\(n^2\\) is unrelated to x and y, thus \\(A=B=0, Cn+D=n^2\\)</li> <li>\\((0,0,f,1)\\to(0,0,f,1)=(0,0,f^2,f)\\) \\(Cf+D=f^2\\)</li> </ol> <p>Solve the equations above: \\(\\(C=n+f, D=-nf\\)\\)</p>"},{"location":"AbiesNotes/GAMES101/games101/#lecture-05-rasterization-1-triangles","title":"Lecture 05 Rasterization 1 (Triangles)","text":""},{"location":"AbiesNotes/GAMES101/games101/#lecture-06-rasterization-2-antiliasing-and-z-buffering","title":"Lecture 06 Rasterization 2 (Antiliasing and Z-Buffering)","text":""},{"location":"AbiesNotes/Tinyrenderer/Gourand/","title":"Gourand Shading","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 415 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/Gourand/#_1","title":"\u539f\u7406","text":"<p>\u539f\u6765\u7684\u6e32\u67d3\u65b9\u6cd5\u4e2d\uff0c\u5229\u7528\u4e09\u89d2\u5f62\u9762\u7684\u6cd5\u5411\u91cf\u8ba1\u7b97\u5149\u7167\u5f3a\u5ea6\uff0c\u6240\u4ee5\u6bcf\u4e2a\u9762\u4e0a\u6240\u6709\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\u76f8\u540c\u3002</p> <p>Gourand shading \u5148\u8ba1\u7b97\u9876\u70b9\u7684\u6cd5\u5411\u91cf\uff0c\u518d\u8ba1\u7b97\u9876\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\uff0c\u63d2\u503c\u5f97\u5230\u6bcf\u4e2a\u50cf\u7d20\u7684\u5f3a\u5ea6\u3002</p> <p>\u5176\u4e2d\uff0c\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u5b9a\u4e49\u4e3a\uff1a\u8003\u8651\u6240\u6709\u5305\u542b\u8be5\u9876\u70b9\u7684\u4e09\u89d2\u5f62\uff0c\u4ee5\u4e09\u89d2\u5f62\u9762\u79ef\u4e3a\u6743\u503c\uff0c\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u4e3a\u4e09\u89d2\u5f62\u6cd5\u5411\u91cf\u7684\u52a0\u6743\u5e73\u5747\u3002</p> <p>\u5177\u4f53\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5927\u5c0f\u4e3a<code>model-&gt;nverts()</code>\u7684<code>vector&lt;vec3&gt;</code>\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u6cd5\u5411\u91cf</p> </li> <li> <p>\u904d\u5386\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u8ba1\u7b97\u5355\u4f4d\u5316\u7684\u6cd5\u5411\u91cf\u548c\u9762\u79ef\u3002\u518d\u904d\u5386\u6bcf\u4e2a\u9876\u70b9\uff0c\u83b7\u53d6\u9876\u70b9\u7f16\u53f7\uff0c\u52a0\u5728 vector \u76f8\u5e94\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u5bf9 vector \u4e2d\u6bcf\u4e2a\u9876\u70b9\u6cd5\u5411\u91cf\u5355\u4f4d\u5316</p> </li> </ol> <p>\u5982\u4f55\u83b7\u5f97\u9876\u70b9\u7684\u7d22\u5f15\uff1f</p> <p>.obj\u6587\u4ef6\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u4f9d\u6b21\u5b58\u50a8\u5728<code>facet_vrt</code>\u4e2d\uff0c\u4f46<code>facet_vrt</code>\u662f\u79c1\u6709\u5c5e\u6027\uff0c\u6545\u5728<code>Model</code>\u4e2d\u5b9a\u4e49\u65b9\u6cd5\uff1a</p> C++<pre><code>int Model::index(const int iface, const int nthvert) const {\n    return facet_vrt[iface * 3 + nthvert];\n}\n</code></pre> <p>\u53ef\u7528<code>int idx=model-&gt;index(i,j);</code>\u5f97\u5230\u7b2ci\u4e2a\u9762\u7b2cj\u4e2a\u9876\u70b9\u7684\u7d22\u5f15</p> <p>\u5982\u4f55\u4ece.obj \u6587\u4ef6\u76f4\u63a5\u83b7\u5f97\u9876\u70b9\u6cd5\u5411\u91cf\uff1f</p> <p>\u5982\u679c.obj\u6587\u4ef6\u4e2d\u6709vn\u7684\u884c\uff0c\u5219\u8fd9\u4e9b\u884c\u5b58\u50a8\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u3002</p> <p>\u6839\u636e model.h\uff0c\u53ef\u4ee5\u7528<code>model-&gt;normal(i,j)</code>\u76f4\u63a5\u83b7\u53d6\u7b2ci\u4e2a\u9762\u7b2cj\u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u3002</p> <p>\u4f46\u8fd9\u91cc\u81ea\u5df1\u6c42\u6cd5\u5411\u91cf\u662f<sub>~\u56e0\u4e3a\u6211\u6ca1\u770b\u5230</sub>~\u4e3a\u4e86\u5c55\u793a\u8ba1\u7b97\u8fc7\u7a0b\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/Gourand/#_2","title":"\u5b9e\u73b0","text":"<p>\u65b0\u589e<code>calc_vertex_normal</code>\u51fd\u6570\uff0c\u8fd4\u56de\u6240\u6709\u9876\u70b9\u7684\u6cd5\u5411\u91cf\uff1a</p> C++<pre><code>// \u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\nvector&lt;vec3&gt; calc_vertex_normal(Model* model) {\n    vector&lt;vec3&gt; vertex_normals(model-&gt;nverts(), vec3{0, 0, 0});\n    // \u904d\u5386\u4e09\u89d2\u5f62\u7d2f\u52a0\u5206\u91cf\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        // \u63d0\u53d6\u4e09\u89d2\u5f62\u9876\u70b9\u5750\u6807\n        vec3 v[3];\n        for (int j = 0; j &lt; 3; j++) {\n            v[j] = model-&gt;vert(i, j);\n        }\n        // \u8ba1\u7b97\u4e09\u89d2\u5f62\u6cd5\u5411\u91cf\u548c\u6743\u91cd\n        vec3 n = cross(v[2] - v[0], v[1] - v[0]);\n        float area = norm(n) / 2.;\n        n = normalized(n);\n        // \u7ed9\u4e09\u4e2a\u9876\u70b9\u6cd5\u5411\u91cf\u52a0\u5206\u91cf\n        for (int j = 0; j &lt; 3; j++) {\n            int vertex_idx = model-&gt;index(i, j);\n            vertex_normals[vertex_idx] = vertex_normals[vertex_idx] + n * area;\n        }\n    }\n\n    // \u9876\u70b9\u6cd5\u5411\u91cf\u6807\u51c6\u5316\n    for (auto&amp; n : vertex_normals) {\n        n = normalized(n);\n    }\n    return vertex_normals;\n}\n</code></pre> <p><code>main</code>\u4e2d\uff0c\u5728\u904d\u5386\u9876\u70b9\u65f6\u8ba1\u7b97\u9876\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\uff0c\u4fee\u6539\u6e32\u67d3\u7684\u6761\u4ef6\uff1a</p> C++<pre><code>// \u904d\u5386\u4e09\u89d2\u5f62\u5904\u7406\nTGAImage image(width, height, TGAImage::RGB);\nfor (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n    vec3 screen_coords[3];\n    vec3 world_coords[3];\n    float intensities[3];\n\n    for (int j = 0; j &lt; 3; j++) {\n        vec3 v0 = model-&gt;vert(i, j);\n        world_coords[j] = v0;\n\n        vec4 v4 = pt2homo(v0);\n        vec4 proj = Viewport * MVP * v4;\n        proj = proj / proj[3];\n        screen_coords[j] = homo2pt(proj);\n\n        // \u8ba1\u7b97\u5149\u7167\u5f3a\u5ea6\n        int vertex_idx = model-&gt;index(i, j);\n        vec3 n = vertex_normals[vertex_idx];\n        intensities[j] = max(0., n * light_dir);\n    }\n\n    // // \u7528\u53c9\u4e58\u8ba1\u7b97\u6cd5\u5411\u91cf\u5e76\u5355\u4f4d\u5316\n    // vec3 n = cross(world_coords[2] - world_coords[0],\n    //                world_coords[1] - world_coords[0]);\n    // vec3 unit_n = normalized(n);\n\n    // \u81f3\u5c11\u4e00\u4e2a\u9876\u70b9\u671d\u5411\u5149\u6e90\uff0c\u5219\u6e32\u67d3\n    if (intensities[0] &gt; 0 || intensities[1] &gt; 0 || intensities[2] &gt; 0) {\n        vec2 uvs[3];\n        for (int j = 0; j &lt; 3; j++) {\n            uvs[j] = model-&gt;uv(i, j);\n        }\n        triangle5(screen_coords, uvs, image, zbuffer, model, intensities);\n    }\n}\n</code></pre> <p>\u753b\u4e09\u89d2\u5f62\u65f6\u4f20\u5165\u4e09\u4e2a\u9876\u70b9\u7684\u5f3a\u5ea6<code>float* intensities</code>\uff0c\u904d\u5386\u50cf\u7d20\u65f6\u63d2\u503c\u5f97\u5230\u6bcf\u4e2a\u50cf\u7d20\u7684\u5f3a\u5ea6\uff1a</p> C++<pre><code>// \u904d\u5386\u5305\u56f4\u76d2\u4e2d\u7684\u70b9\nfor (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n    for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n        vec3 p = {static_cast&lt;float&gt;(x), static_cast&lt;float&gt;(y), 0.};\n        vec2 uvp = {0., 0.};\n        vec3 bc = barycentric(pts, p);\n        if (bc.x &lt; 0 || bc.y &lt; 0 || bc.z &lt; 0)\n            continue;\n\n        // \u8ba1\u7b97zbuffer,\u7eb9\u7406\u5750\u6807\u548c\u6bcf\u4e2a\u50cf\u7d20\u7684\u5149\u7167\u5f3a\u5ea6\n        float z = 0.;\n        float pixel_intensity = 0.;\n        for (int i = 0; i &lt; 3; i++) {\n            z += pts[i].z * bc[i];\n            uvp[0] += uvs[i][0] * bc[i];\n            uvp[1] += uvs[i][1] * bc[i];\n            pixel_intensity += intensities[i] * bc[i];\n        }\n\n        if (z &lt; zbuffer[static_cast&lt;int&gt;(x + y * width)]) {\n            zbuffer[static_cast&lt;int&gt;(x + y * width)] = z;\n            int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),\n                            model-&gt;diffuse().width() - 1);\n            int tex_y = min(int(uvp.y * model-&gt;diffuse().height()),\n                            model-&gt;diffuse().height() - 1);\n            TGAColor color = model-&gt;diffuse().get(tex_x, tex_y);\n            unsigned char r = color[2] * pixel_intensity;\n            unsigned char g = color[1] * pixel_intensity;\n            unsigned char b = color[0] * pixel_intensity;\n            image.set(x, y, TGAColor{r, g, b});\n        }\n    }\n}\n</code></pre> <p>\u7ed3\u679c:</p> <p>\uff08\u903b\u8f91\u4e0a\u53ea\u6709\u9876\u70b9\u6cd5\u5411\u91cf\u8ba1\u7b97\u4e0d\u540c\uff0c\u6e32\u67d3\u7ed3\u679c\u548c\u4e0a\u4e00\u6b21\u5dee\u4e0d\u591a\uff09</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/camera/","title":"Camera","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 175 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/camera/#_1","title":"\u539f\u7406","text":"<p>\u5f53\u76f8\u673a\u5728\u4e0d\u540c\u4f4d\u7f6e\u3001\u4e0d\u540c\u89d2\u5ea6\u89c2\u5bdf\u65f6\uff0c\u6e32\u67d3\u7684\u56fe\u50cf\u4e0d\u540c\u3002\u5b9a\u4e49\u76f8\u673a\u7684\u4f4d\u7f6e\u4e3a<code>vec3 eye</code>\uff0c\u76f8\u673a\u89c2\u5bdf\u7684\u89d2\u5ea6\u4e3a<code>vec3 gaze</code>\uff08gaze \u4ece\u76f8\u673a\u6307\u5411\u6a21\u578b\uff09\uff0c\u76f8\u673a\u5411\u4e0a\u7684\u65b9\u5411\u4e3a<code>vec3 up</code>\u3002</p> <p>\u5bf9\u76f8\u673a\u548c\u6a21\u578b\u540c\u65f6\u53d8\u6362\uff0c\u4f7f\u53d8\u6362\u540e\u76f8\u673a\u4f4d\u4e8e\u539f\u70b9\uff0c\u5411\u4e0a\u4e3a Y\uff0c\u6b63\u65b9\u5411\u4e3a-Z\u3002</p> <p>\u53d8\u6362\u5206\u4e3a\u4e24\u6b65\uff0c\u5148\u5c06\u76f8\u673a\u5e73\u79fb\u5230\u539f\u70b9\uff0c\u518d\u65cb\u8f6c\u5230\u4e0a\u8ff0\u4f4d\u7f6e\u3002</p> <p>\u7b2c\u4e00\u6b65\u5e73\u79fb</p> <p>\u77e9\u9635\\(T_{view}\\)\uff0c\u5373\u5bf9\u5e94 MVP \u4e2d\u7684 Model\uff1a</p> \\[ T_{view}= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -x_{eye} \\\\ 0 &amp; 1 &amp; 0 &amp; -y_{eye} \\\\ 0 &amp; 0 &amp; 1 &amp; -z_{eye} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\u7b2c\u4e8c\u6b65\u65cb\u8f6c</p> <p>Y \u5bf9\u5e94 up\uff0cZ \u5bf9\u5e94-gaze\uff0c\u6545 X \u5bf9\u5e94\\(up\\times -gaze=gaze\\times up\\)\u3002\u5c06\\((X,Y,Z)\\)\u65cb\u8f6c\u5230\\((gaze\\times up,up,-gaze)\\)\u7684\u77e9\u9635\\(R_{view}^{-1}\\)\u4e3a\uff1a</p> \\[ R_{view}^{-1}=\\begin{pmatrix} x_{gaze\\times up} &amp; x_{up} &amp; x_{-gaze} &amp; 0 \\\\ y_{gaze\\times up} &amp; y_{up} &amp; y_{-gaze} &amp; 0 \\\\ z_{gaze\\times up } &amp; z_{up} &amp; z_{-gaze} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\u7531\u4e8e\u65cb\u8f6c\u77e9\u9635\u6b63\u4ea4\uff0c\u7b2c\u4e8c\u6b65\u77e9\u9635\\(R_{view}\\)\uff0c\u5373\u5bf9\u5e94 MVP \u4e2d\u7684 View\uff1a</p> \\[ R_{view} = \\begin{pmatrix} x_{gaze\\times up} &amp; y_{gaze\\times up} &amp; z_{gaze\\times up} &amp; 0 \\\\ x_{up}            &amp; y_{up}            &amp; z_{up}            &amp; 0 \\\\ x_{-gaze}         &amp; y_{-gaze}         &amp; z_{-gaze}         &amp; 0 \\\\ 0                 &amp; 0                 &amp; 0                 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/Tinyrenderer/camera/#_2","title":"\u5b9e\u73b0","text":"<p>\u81ea\u5b9a\u4e49\u76f8\u673a\u53c2\u6570</p> C++<pre><code>vec3 eye = {2, 0, 3};\nvec3 center = {0, 0, 0};\nvec3 up = {0, 1, 0};\n</code></pre> <p>\u51fd\u6570<code>mv_mat</code>\u751f\u6210MV\u53d8\u6362\u7684\u77e9\u9635</p> C++<pre><code>// MV\u53d8\u6362\nmat&lt;4, 4&gt; mv_mat(vec3 eye, vec3 center, vec3 up) {\n    vec3 gaze = normalized(center - eye);\n    vec3 z = -1 * gaze;\n    vec3 x = normalized(cross(gaze, up));\n    // vec3 y = up; // \u8981\u6c42gaze\u548cup\u6b63\u4ea4\n    vec3 y = cross(z, x);\n\n    // \u5e73\u79fb\n    mat&lt;4, 4&gt; T = identity&lt;4&gt;();\n    T[0][3] = -eye.x;\n    T[1][3] = -eye.y;\n    T[2][3] = -eye.z;\n\n    // \u65cb\u8f6c\n    mat&lt;4, 4&gt; R = identity&lt;4&gt;();\n    for (int i = 0; i &lt; 3; i++) {\n        R[0][i] = x[i];\n        R[1][i] = y[i];\n        R[2][i] = z[i];\n    }\n\n    // \u5408\u6210MV\u53d8\u6362\n    return R * T;\n}\n</code></pre> <p>\u4fee\u6539main\u4e2d\u77e9\u9635\u90e8\u5206</p> C++<pre><code>// \u77e9\u9635\u7528\u4e8e\u53d8\u6362\n// mat&lt;4, 4&gt; Model = model_mat();\n// mat&lt;4, 4&gt; View = view_mat();\nmat&lt;4, 4&gt; MV = mv_mat(eye, center, up);\nmat&lt;4, 4&gt; Projection = projection_mat(near, far, l, r, b, t);\nmat&lt;4, 4&gt; MVP = Projection * MV;\nmat&lt;4, 4&gt; Viewport = viewport_mat(0, 0, width, height, 255);\n</code></pre> <p>\u7ed3\u679c\uff1a </p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/getting%20started/","title":"Getting started","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 565 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/getting%20started/#_1","title":"\u53c2\u8003","text":"<p>\u53ef\u80fd\u7531\u4e8e\u5b98\u65b9\u6559\u7a0b\u662f\u51e0\u5e74\u524d\u7f16\u5199\u7684\uff0c\u4e0b\u8f7d\u5f97\u5230\u7684\u5934\u6587\u4ef6\u5728\u547d\u540d\u3001\u4f7f\u7528\u7b49\u65b9\u9762\u548c\u6559\u7a0b\u4ee5\u53ca\u7f51\u4e0a\u7684\u7b14\u8bb0\u6709\u5c0f\u5c0f\u7684\u51fa\u5165\u3002</p> <p>\u5b66\u4e60\u53c2\u8003\uff1a</p> <ul> <li>\u5b98\u65b9 wiki</li> <li>\u5b98\u65b9 v2</li> <li>\u77e5\u4e4e Shawoxo \u7684\u7b14\u8bb0</li> </ul> <p>\u4ee5\u53ca g \u8001\u5e08\u548c d \u8001\u5e08\u7684\u503e\u60c5\u76f8\u52a9\uff0c\u5e2e\u6211\u89e3\u51b3\u4e86\u5927\u90e8\u5206\u95ee\u9898</p>"},{"location":"AbiesNotes/Tinyrenderer/getting%20started/#_2","title":"\u7f16\u8bd1","text":"<p>\u53ea\u8981 tgaimage.h, tgaimage.cpp \u7b49\uff0c\u7f16\u8bd1\u65f6\u94fe\u63a5\u8d77\u6765\u5373\u53ef.</p> <p>\u7f16\u8bd1\u8fd0\u884c\u793a\u4f8b\uff1a</p> Bash<pre><code>g++ name.cpp tgaimage.cpp model.cpp -o name\nname\n</code></pre> <p>\u7f16\u8bd1\u4e0d\u8981\u52a0<code>-O2</code>\u7684\u4f18\u5316\uff0c\u4f1a\u4ea7\u751f\u672a\u77e5\u9519\u8bef\u5bfc\u81f4\u6587\u4ef6\u65e0\u6cd5\u8bfb\u53d6\u3002\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48</p> <p>\u4e0d\u9700\u8981\u7528 CMake\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/getting%20started/#_3","title":"\u6a21\u5757\u7b80\u4ecb","text":"Model \u7b80\u4ecb <p><code>Model model = new Model(\"name.obj\");</code>\u7528<code>model</code>\u8868\u793a name.obj \u5bf9\u5e94\u7684\u6a21\u578b\u3002</p> <p><code>model-&gt;nverts()</code>\u5f97\u5230\u70b9\u6570\uff0c<code>model-&gt;nfaces()</code>\u5f97\u5230\u9762\u6570\u3002</p> <p>\u6240\u6709\u9876\u70b9\u6309\u987a\u5e8f\u4f9d\u6b21\u5b58\u5728<code>facet_vrt</code>\u4e2d\uff0c\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u4f9d\u6b21\u5b58\u5728<code>facet_nrm</code>\u4e2d\uff0c\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7684\u7d22\u5f15\u4e3a<code>i*3+j</code>\u3002\u4f46\u8fd9\u4e24\u4e2a vector \u662f\u79c1\u6709\u5c5e\u6027\u3002</p> <p><code>model-&gt;vert(i,j)</code>\u5f97\u5230\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a vec3\u3002</p> <p><code>model-&gt;normal(i,j)</code>\u5f97\u5230\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a vec3\u3002</p> <p><code>model-&gt;index(i,j)</code>\u5f97\u5230\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7684\u7f16\u53f7\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a int\u3002</p> <p><code>model-&gt;uv(i,j)</code>\u5f97\u5230\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7eb9\u7406\u4fe1\u606f\uff0c\u5373\u8fd9\u4e2a\u9876\u70b9\u5728\u7eb9\u7406\u56fe\u6848\u4e2d\u7684\u5750\u6807\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a vec2\u3002</p> <p><code>model-&gt;diffuse()</code>\u5f97\u5230\u5bf9\u5e94\u8d34\u56fe\u7684\u56fe\u50cf\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a TGAImage\u3002<code>model-&gt;diffuse().get(x,y)</code>\u83b7\u5f97\u8d34\u56fe\u4e0a\u5750\u6807(x,y)\u5904\u7684\u50cf\u7d20\u989c\u8272\u3002</p> vec \u7b80\u4ecb <p>\u7528<code>vec&lt;n&gt;</code>\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u7ef4\u5ea6\u7684\u5411\u91cf\uff0c\u5143\u7d20\u7c7b\u578b\u4e3a double\u3002<code>vec&lt;2&gt;</code>\u53ef\u7b80\u5199\u4e3a<code>vec2</code>\uff0c<code>vec&lt;3&gt;</code>\u53ef\u7b80\u5199\u4e3a<code>vec3</code>\u3002</p> <p>\u7528<code>v[i]</code>\u53ef\u4ee5\u8bbf\u95ee\u5411\u91cf v \u7684\u7b2c i \u4e2a\u5143\u7d20\u3002\u7279\u522b\u5730\uff0c\u53ef\u7528 <code>.x</code>, <code>.y</code> \u8bbf\u95ee<code>vec2</code>\uff0c\u7528 <code>.x</code>, <code>.y</code>, <code>.z</code> \u8bbf\u95ee<code>vec3</code>\u3002\u5bf9\u4e8e<code>vec4</code>\uff0c<code>.xy()</code>\u8fd4\u56de\u524d\u4e24\u4f4d\uff0c<code>.xyz()</code>\u8fd4\u56de\u524d\u4e09\u4f4d\u3002</p> <p>\u8fd0\u7b97\u7b26<code>*</code>\u8868\u793a\u5411\u91cf\u70b9\u4e58\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a double\u3002\u8fd0\u7b97\u7b26<code>+-</code>\u8868\u793a\u5411\u91cf\u7684\u52a0\u51cf\u6cd5\u3002<code>\u5411\u91cf*\u5e38\u6570</code>\uff0c<code>\u5e38\u6570*\u5411\u91cf</code>\uff0c<code>\u5411\u91cf/\u5e38\u6570</code>\u5747\u53ef\u884c\u3002</p> <p><code>norm(v)</code>\u8868\u793a\u5411\u91cf\u7684\u6a21\u957f\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a double\u3002</p> <p><code>normalized(v)</code>\u8fd4\u56de\u5355\u4f4d\u5316\u7684\u5411\u91cf\u3002</p> <p><code>cross(a,b)</code>\u8868\u793a\u4e09\u7ef4\u5411\u91cf\u7684\u53c9\u79ef\uff08\u4ec5\u5bf9 vec3 \u5b9a\u4e49\uff09\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a<code>vec3</code>\u3002</p> <p>\u989d\u5916\u5b9a\u4e49<code>vec2i</code>\uff0c\u5143\u7d20\u7c7b\u578b\u4e3a int\u3002</p> mat \u7b80\u4ecb <p><code>mat&lt;nrows,ncols&gt; m</code>\u7528\u4e8e\u521b\u5efa nrows*ncols \u7684\u77e9\u9635 m\uff0c\u5143\u7d20\u7c7b\u578b\u4e3a double\u3002\u7528<code>m[i][j]</code>\u8bbf\u95ee\u7b2c i \u884c\u7b2c j \u5217\u7684\u5143\u7d20\u3002</p> <p><code>m.n_rows()</code>\u8fd4\u56de\u77e9\u9635\u7684\u884c\u6570\uff0c<code>m.n_cols()</code>\u8fd4\u56de\u77e9\u9635\u7684\u5217\u6570\uff0c\u8fd4\u56de\u7c7b\u578b\u5747\u4e3a int\u3002</p> <p><code>transpose(m)</code>\u6c42\u77e9\u9635 m \u7684\u8f6c\u7f6e\u3002</p> <p><code>invert(m)</code>\u6c42\u77e9\u9635 m \u7684\u9006\u3002</p> <p><code>det(m)</code>\u6c42\u77e9\u9635 m \u7684\u884c\u5217\u5f0f\u3002</p> <p>\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\u7b26\u4e3a<code>*</code>\uff0c\u652f\u6301\u77e9\u9635\u548c\u5927\u5c0f\u5bf9\u5e94\u7684\u5411\u91cf\u76f8\u4e58\u3002\u77e9\u9635\u52a0\u51cf\u6cd5\u8fd0\u7b97\u7b26\u4e3a<code>+-</code>\u3002</p> <p><code>\u77e9\u9635*\u6807\u91cf</code>\uff0c<code>\u77e9\u9635/\u6807\u91cf</code>\u53ef\u884c\uff0c\u77e9\u9635\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e58\u9664\u76f8\u5e94\u503c\u3002</p> <p><code>identity&lt;n&gt;()</code>\u751f\u6210 n*n \u7684\u5355\u4f4d\u77e9\u9635\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/line/","title":"Line","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 254 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#_1","title":"\u521b\u5efa\u56fe\u50cf","text":"C++<pre><code>#include \"tgaimage.h\"\n\nconst TGAColor white = TGAColor(255, 255, 255, 255);\nconst TGAColor red = TGAColor(255, 0, 0, 255);\n\nint main(int argc, char** argv) {\n    TGAImage image(100, 100, TGAImage::RGB);\n    image.set(52, 41, red);\n    image.flip_vertically();\n    // i want to have the origin at the left bottom corner of the image\n    image.write_tga_file(\"output.tga\");\n    return 0;\n}\n</code></pre> C++<pre><code>const TGAColor white = TGAColor(255, 255, 255, 255);\nconst TGAColor red = TGAColor(255, 0, 0, 255);\n</code></pre> <p>\u5b9a\u4e49\u989c\u8272: \u4e0d\u900f\u660e\u7684\u7ea2\u8272\u548c\u4e0d\u900f\u660e\u7684\u767d\u8272</p> C++<pre><code>TGAImage image(100, 100, TGAImage::RGB);\n</code></pre> <p>\u521b\u5efa 100*100 \u50cf\u7d20\u7684\u56fe\u50cf, \u683c\u5f0f\u4e3a RGB, \u9ed8\u8ba4\u4e3a\u5168\u9ed1</p> C++<pre><code>image.set(52, 41, red);\n</code></pre> <p>\u5de6\u4e0a\u89d2\u4e3a(0,0), \u6a2a\u5411\u5411\u53f3\u4e3a x \u8f74,\u7eb5\u5411\u5411\u4e0b\u4e3a y \u8f74. \u5c06\u5750\u6807\u4e3a(52,41)\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a\u7ea2\u8272</p> <p></p> C++<pre><code>image.flip_vertically();\n</code></pre> <p>\u5c06\u56fe\u50cf\u4e0a\u4e0b\u53cd\u8f6c, \u5de6\u4e0b\u89d2\u4e3a(0,0), \u5411\u53f3\u4e3a x \u8f74, \u5411\u4e0a\u4e3a y \u8f74, \u66f4\u7b26\u5408\u65e5\u5e38.</p> <p></p> C++<pre><code>image.write_tga_file(\"output.tga\");\n</code></pre> <p>\u5c06\u56fe\u50cf\u4fdd\u5b58\u4e3a output.tga \u6587\u4ef6, \u4fdd\u5b58\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e2d.</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#_2","title":"\u753b\u7ebf","text":""},{"location":"AbiesNotes/Tinyrenderer/line/#1","title":"1. \u7b49\u95f4\u9694","text":"C++<pre><code>void line1(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    for (float t = 0.; t &lt; 1.; t += .01) {\n        int x = x0 * (1. - t) + x1 * t;\n        int y = y0 * (1. - t) + y1 * t;\n        image.set(x, y, color);\n    }\n}\n</code></pre> <p><code>1.</code>\u8868\u793a\u6d6e\u70b9\u6570 1.0, <code>.01</code>\u8868\u793a 0.01 \u4e0a\u8ff0\u4ee3\u7801\u5f97\u5230\u6709\u952f\u9f7f\u7684\u76f4\u7ebf, \u4fee\u6539\u6b65\u957f\u53ef\u5f97\u5230\u865a\u7ebf\u6216\u66f4\u5149\u6ed1\u7684\u76f4\u7ebf</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#2","title":"2. \u9010\u50cf\u7d20","text":"C++<pre><code>void line2(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    for (int x = x0; x &lt;= x1; x++) {\n        float t = (x - x0) / (float)(x1 - x0);  // t\u8868\u793ax\u8f74\u7684\u6bd4\u4f8b\n        int y = y0 + (1. - t) * (y1 - y0);\n        image.set(x, y, color);\n    }\n}\n</code></pre> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>for \u5faa\u73af\u904d\u5386\u8981\u6c42\u4f20\u9012\u53c2\u6570\u5fc5\u987b\u5148\u4f20\u5de6\u8fb9\u7684\u70b9\uff0c\u4f46\u5e0c\u671b\u7ed8\u5236\u7684\u7ebf\u548c\u4f20\u5165\u987a\u5e8f\u65e0\u5173</li> <li>\u659c\u7387\u5927\u65f6\u53d8\u4e3a\u865a\u7ebf</li> </ol>"},{"location":"AbiesNotes/Tinyrenderer/line/#3","title":"3. \u4f18\u5316\u987a\u5e8f","text":"C++<pre><code>void line3(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    bool steep = false;\n    if (abs(y1 - y0) &gt; abs(x1 - x0)) {\n        swap(x0, y0);  // \u6cbfx=y\u5bf9\u79f0\n        swap(x1, y1);\n        steep = true;\n    }\n    if (x0 &lt; x1) {\n        swap(x0, x1);  // \u4ea4\u6362\u4e24\u70b9\n        swap(y0, y1);\n    }\n    for (int x = x0; x &lt;= x1; x++) {\n        float t = (x - x0) / (float)(y1 - y0);\n        int y = y0 + t * (y1 - y0);\n        if (!steep)\n            image.set(x, y, color);  // \u6cbfx=y\u5bf9\u79f0\u56de\u53bb\n        else\n            image.set(y, x, color);\n    }\n}\n</code></pre> <p>\u901a\u8fc7\u4ea4\u6362 x \u548c y \u7684\u904d\u5386\u987a\u5e8f\u3001\u4ea4\u6362\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u4f20\u5165\u70b9\u4f18\u5316</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#4","title":"4. \u8bef\u5dee\u7d2f\u52a0","text":"C++<pre><code>void line4(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    bool steep = false;\n    if (abs(y1 - y0) &gt; abs(x1 - x0)) {\n        swap(x0, y0);  // \u6cbfx=y\u5bf9\u79f0\n        swap(x1, y1);\n        steep = true;\n    }\n    if (x0 &lt; x1) {\n        swap(x0, x1);  // \u4ea4\u6362\u4e24\u70b9\n        swap(y0, y1);\n    }\n\n    int dx = x1 - x0;\n    int dy = y1 - y0;\n    float derror = abs(dy / (float)dx);\n    float error = 0;\n    int y = y0;\n    for (int x = x0; x &lt;= x1; x++) {\n        if (!steep)\n            image.set(x, y, color);  // \u6cbfx=y\u5bf9\u79f0\u56de\u53bb\n        else\n            image.set(y, x, color);\n        error += derror;\n        if (error &gt;= 0.5) {\n            y += (y1 &gt; y0) ? 1 : -1;\n            error -= 1.;\n        }\n    }\n}\n</code></pre> <p><code>derror</code>\u4e3a\u659c\u7387\uff0c\u5373 x \u6bcf\u8d70\u4e00\u683c y \u53d8\u5316\u7684\u5927\u5c0f\uff1b<code>error</code>\u8868\u793a\u5f53\u524d y \u79bb\u6700\u8fd1\u7684\u6b63\u6570\u70b9\u7684\u8ddd\u79bb\u3002 \u5f53\u524d y \u504f\u79bb\u4e0a\u4e00\u4e2a\u6574\u6570\u70b9\u5927\u4e8e 0.5 \u65f6\uff0cy \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6574\u6570\u70b9\uff0c\u79fb\u52a8\u65b9\u5411\u7531 y0y1 \u76f8\u5bf9\u5927\u5c0f\u51b3\u5b9a\u3002</p> <p>\u6bcf\u6b21\u53ea\u9700\u8981\u8ba1\u7b97\u6d6e\u70b9\u6570\u52a0\u6cd5\uff0c\u907f\u514d\u4e86\u6d6e\u70b9\u6570\u7684\u4e58\u9664\uff0c\u901f\u5ea6\u5feb</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#5","title":"5. \u51cf\u5c11\u6d6e\u70b9\u6570","text":"C++<pre><code>float derror = abs(dy / (float)dx);\n\nerror += derror;\n\nif (error&gt;=0.5) {\n    y += (y1 &gt; y0) ? 1 : -1;\n    error -= 1.;\n}\n</code></pre> <p>\u540c\u4e58 2*dx\uff0c\u51cf\u5c11\u6d6e\u70b9\u6570\u8fd0\u7b97\uff1a</p> C++<pre><code>int derror = abs(dy * 2);\n\nerror += derror;\n\nif (error&gt;=dx) {\n    y += (y1 &gt; y0) ? 1 : -1;\n    error -= dx * 2;\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/line/#6","title":"6. \u51cf\u5c11\u5206\u652f","text":"C++<pre><code>if(steep) {\n    for(int x = x0; x&lt;=x1; ++x) {\n        img.set_pixel_color(y, x, color);\n        error2 += derror2;\n        if(error2 &gt; dx) {\n            y += (y1&gt;y0? 1 : -1);\n            error2 -= dx*2;\n        }\n    }\n} else {\n    for(int x = x0; x&lt;=x1; ++x) {\n        img.set_pixel_color(x, y, color);\n        error2 += derror2;\n        if(error2 &gt; dx) {\n            y += (y1&gt;y0? 1 : -1);\n            error2 -= dx*2;\n        }\n    }\n}\n</code></pre> <p>\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21 steep \u7684\u5224\u65ad\uff0cCPU \u5206\u652f\u9884\u6d4b\u5668\u53ef\u4ee5\u957f\u65f6\u95f4\u8fd0\u884c\u540c\u4e00\u4e2a\u5206\u652f\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/line/#bresenham","title":"\u6700\u7ec8\u4ee3\u7801 Bresenham","text":"C++<pre><code>#include \"tgaimage.h\"\nusing namespace std;\n\nconst TGAColor white = TGAColor(255, 255, 255, 255);\nconst TGAColor red = TGAColor(255, 0, 0, 255);\nconst TGAColor green = TGAColor(0, 255, 0, 255);\nconst TGAColor blue = TGAColor(0, 0, 255, 255);\n\n// Bresenham\nvoid line5(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    bool steep;\n    if (abs(y1 - y0) &gt; abs(x1 - x0)) {\n        swap(x0, y0);  // \u6cbfx=y\u5bf9\u79f0\n        swap(x1, y1);\n        steep = true;\n    }\n    if (x0 &gt; x1) {\n        swap(x0, x1);  // \u4ea4\u6362\u4e24\u70b9\n        swap(y0, y1);\n    }\n\n    int dx = x1 - x0;\n    int dy = y1 - y0;\n    int derror = abs(dy);\n    int error = 0;\n    int y = y0;\n    if (!steep) {\n        for (int x = x0; x &lt;= x1; x++) {\n            image.set(x, y, color);\n            error += derror;\n            if (error &gt;= dx) {\n                y += (y1 &gt; y0) ? 1 : -1;\n                error -= dx * 2;\n            }\n        }\n    } else {\n        for (int x = x0; x &lt;= x1; x++) {\n            image.set(y, x, color);\n            error += derror;\n            if (error &gt;= dx) {\n                y += (y1 &gt; y0) ? 1 : -1;\n                error -= dx * 2;\n            }\n        }\n    }\n}\n\nint main(int argc, char** argv) {\n    TGAImage image(100, 100, TGAImage::RGB);\n    image.set(52, 41, red);\n    line1(13, 20, 80, 40, image, white);\n    line2(13, 20, 40, 80, image, blue);\n    line3(33, 20, 70, 80, image, blue);\n    line4(43, 20, 80, 80, image, green);\n    line5(53, 20, 90, 80, image, green);\n    image.flip_vertically();\n    image.write_tga_file(\"output.tga\");\n    return 0;\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/line/#_3","title":"\u7ebf\u6846","text":"<p>\u65b0\u52a0<code>model.h</code>\u548c<code>model.cpp</code>\uff0c\u5176\u4e2d Model \u7c7b\u4e3a\uff1a</p> C++<pre><code>class Model {\n    std::vector&lt;vec3&gt; verts = {};    // array of vertices        \u2510 generally speaking, these arrays\n    std::vector&lt;vec3&gt; norms = {};    // array of normal vectors  \u2502 do not have the same size\n    std::vector&lt;vec2&gt; tex = {};      // array of tex coords      \u2518 check the logs of the Model() constructor\n    std::vector&lt;int&gt; facet_vrt = {}; //  \u2510 per-triangle indices in the above arrays,\n    std::vector&lt;int&gt; facet_nrm = {}; //  \u2502 the size is supposed to be\n    std::vector&lt;int&gt; facet_tex = {}; //  \u2518 nfaces()*3\n    TGAImage diffusemap  = {};       // diffuse color texture\n    TGAImage normalmap   = {};       // normal map texture\n    TGAImage specularmap = {};       // specular texture\npublic:\n    Model(const std::string filename);\n    int nverts() const; // number of vertices\n    int nfaces() const; // number of triangles\n    vec3 vert(const int i) const;                          // 0 &lt;= i &lt; nverts()\n    vec3 vert(const int iface, const int nthvert) const;   // 0 &lt;= iface &lt;= nfaces(), 0 &lt;= nthvert &lt; 3\n    vec3 normal(const int iface, const int nthvert) const; // normal coming from the \"vn x y z\" entries in the .obj file\n    vec3 normal(const vec2 &amp;uv) const;                     // normal vector from the normal map texture\n    vec2 uv(const int iface, const int nthvert) const;     // uv coordinates of triangle corners\n    const TGAImage&amp; diffuse() const;\n    const TGAImage&amp; specular() const;\n};\n</code></pre> <p>\u65b0\u52a0<code>african_head.obj</code>\u8868\u793a\u56fe\u50cf\uff0c\u5176\u4e2d v \u8868\u793a\u9876\u70b9\u5750\u6807\uff0cf \u8868\u793a\u6bcf\u4e2a\u9762\uff08\u4e09\u89d2\u5f62\uff09\u7684\u4e09\u4e2a\u9876\u70b9\u5750\u6807\uff0cvn \u8868\u793a\u9876\u70b9\u7684\u6cd5\u7ebf\u5411\u91cf\uff08\u7528\u4e8e\u8ba1\u7b97\u5149\u7ebf\uff09\uff0cvt \u8868\u793a\u7eb9\u7406\u7684 uv \u5750\u6807\u3002</p> C++<pre><code>#include \"model.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nconst TGAColor white = TGAColor(255, 255, 255, 255);\n\nvoid line6(int x0, int y0, int x1, int y1, TGAImage&amp; image, TGAColor color) {\n    bool steep = false;  // \u5fc5\u987b\u521d\u59cb\u5316\n    if (abs(y1 - y0) &gt; abs(x1 - x0)) {\n        swap(x0, y0);  // \u6cbfx=y\u5bf9\u79f0\n        swap(x1, y1);\n        steep = true;\n    }\n    if (x0 &gt; x1) {\n        swap(x0, x1);  // \u4ea4\u6362\u4e24\u70b9\n        swap(y0, y1);\n    }\n\n    int dx = x1 - x0;\n    int dy = y1 - y0;\n    int derror = abs(dy * 2);\n    int error = 0;\n    int y = y0;\n    if (!steep) {\n        for (int x = x0; x &lt;= x1; x++) {\n            image.set(x, y, color);\n            error += derror;\n            if (error &gt;= dx) {\n                y += (y1 &gt; y0) ? 1 : -1;\n                error -= dx * 2;\n            }\n        }\n    } else {\n        for (int x = x0; x &lt;= x1; x++) {\n            image.set(y, x, color);\n            error += derror;\n            if (error &gt;= dx) {\n                y += (y1 &gt; y0) ? 1 : -1;\n                error -= dx * 2;\n            }\n        }\n    }\n}\n\nint main(int argc, char** argv) {\n    Model* model = nullptr;\n    if (2 == argc) {\n        model = new Model(argv[1]);  // \u547d\u4ee4\u884c\u63a7\u5236\u65b9\u5f0f\u6784\u9020model\n    } else {\n        model = new Model(\"obj/african_head.obj\");  // \u4ee3\u7801\u65b9\u5f0f\u6784\u9020model\n    }\n    cerr &lt;&lt; \"finish\" &lt;&lt; '\\n';\n\n    int width = 1000;\n    int height = 1000;\n    TGAImage image(width, height, TGAImage::RGB);\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {  // \u904d\u5386\u6bcf\u4e2a\u9762\n        for (int j = 0; j &lt; 3; j++) {            // \u904d\u5386\u9762\u7684\u4e09\u4e2a\u9876\u70b9\n            vec3 v0 = model-&gt;vert(i, j);  // vert(i,j)\u8868\u793a\u7b2ci\u4e2a\u9762\u7b2cj\u4e2a\u9876\u70b9\u7684\u5750\u6807\n            vec3 v1 = model-&gt;vert(i, (j + 1) % 3);  // v1\u8868\u793av0\u4e0b\u4e00\u4e2a\u70b9\u7684\u5750\u6807\n            // \u5c06\u5750\u6807\u4ece[-1,-1]-[1,1]\u6620\u5c04\u5230[0,0]-[width,height]\n            int x0 = (v0.x + 1.) * width / 2.;\n            int y0 = (v0.y + 1.) * height / 2.;\n            int x1 = (v1.x + 1.) * width / 2.;\n            int y1 = (v1.y + 1.) * height / 2.;\n            line6(x0, y0, x1, y1, image, white);\n        }\n    }\n    image.write_tga_file(\"output.tga\");\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/normal%20map/","title":"Normal map","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 345 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/normal%20map/#_1","title":"\u6cd5\u7ebf\u8d34\u56fe","text":"<p>\u6cd5\u7ebf\u8d34\u56fe\u7531\u6bcf\u4e2a\u50cf\u7d20\u5b9a\u4e49\u3002\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94\u4e00\u4e2a\u4e8c\u7ef4\u7eb9\u7406\u5750\u6807\uff0c\u4e14\u5b58\u50a8\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\uff0c\u5411\u91cf\u7684\u6bcf\u4e2a\u53c2\u6570\u4e3a rgb \u6620\u5c04\u5230[-1,1]\u7684\u503c\u3002</p> <p>\u6cd5\u7ebf\u8d34\u56fe\u7528 rgb \u503c\u5b58\u50a8\u6cd5\u7ebf\u4fe1\u606f\uff0c\u800c uv \u5750\u6807\u53ef\u4ee5\u518d\u6cd5\u7ebf\u8d34\u56fe\u4e2d\u67e5\u627e\u50cf\u7d20\u4f4d\u7f6e\uff0c\u4ece\u800c\u8bfb\u53d6\u5bf9\u5e94\u7684\u6cd5\u7ebf\u4fe1\u606f\uff0c\u4ece\u800c\u5b9e\u73b0\u7528\u4f4e\u9762\u6570\u7684\u6a21\u578b\u4f53\u73b0\u9ad8\u9762\u6570\u6a21\u578b\u7684\u5149\u7167\u4fe1\u606f\u3002</p> <p>\u6a21\u578b\u65cb\u8f6c\u65f6\uff0c\u6cd5\u7ebf\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684 xyz \u4f1a\u76f8\u5e94\u53d8\u5316\u3002\u56e0\u6b64\u9700\u8981\u5efa\u7acb\u76f8\u5bf9\u4e8e\u6a21\u578b\u8868\u9762\u7684\u5c40\u90e8\u5750\u6807\u7cfb\uff0c\u5373\u5207\u7ebf\u7a7a\u95f4\uff08TBN \u7a7a\u95f4\uff09\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/normal%20map/#_2","title":"\u5207\u7ebf\u7a7a\u95f4","text":"<p>\u5207\u7ebf\u7a7a\u95f4\u4e09\u4e2a\u8f74\u5206\u522b\u662f tangent \u8f74\u3001bitangent \u8f74\u3001\u6cd5\u7ebf\u8f74\uff0c\u7b80\u79f0 TBN \u5750\u6807\u7cfb\u3002\u5176\u4e2d tangent \u8f74\u8868\u793a\u8d34\u56fe\u7684 u \u65b9\u5411\uff08\u5de6\u53f3\uff09\uff0cbitangent \u8f74\u8868\u793a\u8d34\u56fe\u7684 v \u65b9\u5411\uff08\u4e0a\u4e0b\uff09\u3002</p> <p>\u5047\u8bbe\u4e09\u89d2\u5f62\u4e09\u4e2a\u9876\u70b9\u7684\u5750\u6807\u4e3a p0,p1,p2\uff0c\u7eb9\u7406\u5750\u6807\u4e3a uv0,uv1,uv2\u3002\u4ee4 deltapos1,deltapos2 \u8868\u793a\u4e16\u754c\u5750\u6807\u4e0b\u4e24\u6761\u8fb9\uff0cdeltauv1,deltauv2 \u8868\u793a\u7eb9\u7406\u5750\u6807\u4e0b\u7eb9\u7406\u7684\u4e24\u6761\u8fb9\uff0c\u5373\uff1a</p> C++<pre><code>vec3 deltapos1 = p1 - p0;\nvec3 deltapos2 = p2 - p0;\n\nvec2 deltauv1 = uv1 - uv0;\nvec2 deltauv2 = uv2 - uv0;\n</code></pre> <p></p> <p>\u5e0c\u671b\u80fd\u7528 uv \u5750\u6807\u7684\u5dee\uff0c\u53cd\u63a8\u51fa\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u5750\u6807\u7684\u53d8\u6362\uff0c\u5373\uff1a</p> \\[ \\begin{cases} deltapos1=T\\cdot\\Delta u_1+B\\cdot\\Delta v_1 \\\\ deltapos2=T\\cdot\\Delta u_2+B\\cdot\\Delta v_2 \\end{cases} \\] <p>\u8868\u793a\u6210\u77e9\u9635\uff1a</p> \\[ \\begin{pmatrix} deltapos1 \\\\ deltapos2 \\end{pmatrix} =\\begin{pmatrix} \\Delta u_1 &amp; \\Delta v_1 \\\\ \\Delta u_2 &amp; \\Delta v_2 \\end{pmatrix} \\cdot\\begin{pmatrix} T \\\\ B \\end{pmatrix} \\] <p>\u5df2\u77e5\u4e09\u7ef4\u5750\u6807\u548c uv \u5750\u6807\uff0c\u8981\u6c42\u51fa T\u3001B\uff0c\u7528\u9006\u77e9\u9635\u8868\u793a\uff1a</p> \\[ \\begin{pmatrix} T \\\\ B \\end{pmatrix} =\\begin{pmatrix} \\Delta u_1 &amp; \\Delta v_1 \\\\ \\Delta u_2 &amp; \\Delta v_2 \\end{pmatrix}^{-1} \\cdot\\begin{pmatrix} deltapos1 \\\\ deltapos2 \\end{pmatrix} \\] <p>\u5176\u4e2d\u6c42\u9006\u77e9\u9635\u90e8\u5206\uff1a</p> \\[ \\begin{pmatrix} T \\\\ B \\end{pmatrix} =\\frac{1}{\\Delta u_1 \\cdot \\Delta v_2 - \\Delta u_2 \\cdot \\Delta v_1} \\begin{pmatrix} \\Delta v_2 &amp; -\\Delta v_1 \\\\ -\\Delta u_2 &amp; \\Delta u_1 \\end{pmatrix} \\cdot \\begin{pmatrix} \\text{deltapos1} \\\\ \\text{deltapos2} \\end{pmatrix} \\] <p>\u6545 T \u548c B \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a</p> C++<pre><code>float r = 1.0f / (deltauv1.x * deltauv2.y - deltauv1.y * deltauv2.x);\nvec3 T = (deltapos1 * deltauv2.y - deltapos2 * deltauv1.y) * r;\nvec3 B = (deltapos2 * deltauv1.x - deltapos1 * deltauv2.x) * r;\n</code></pre> <p>\u800c N \u662f\u6cd5\u7ebf\u65b9\u5411\uff0c\u7531.obj \u6587\u4ef6\u6216\u81ea\u5df1\u63d2\u503c\u5f97\u5230\u3002\u81f3\u6b64\u5f97\u5230 T\u3001B\u3001N \u4e09\u4e2a\u5411\u91cf\u3002</p> <p>\u7528 Gram-Schmidt \u6b63\u4ea4\u5316\uff08\u9700\u8981\u518d\u5404\u81ea\u5355\u4f4d\u5316\uff09\uff1a</p> \\[ \\begin{align*} T_{\\perp}&amp;=T-(T\\cdot N)N \\\\ B_{\\perp}&amp;=B-(B\\cdot N)N-(B\\cdot T_{\\perp})T_{\\perp} \\end{align*} \\] C++<pre><code>struct GourandShader : public IShader {\n    float intensities[3];\n    mat&lt;3, 2&gt; uvs;\n    mat&lt;4, 4&gt; ModelView = mv_mat(eye, center, up);\n    mat&lt;4, 4&gt; Projection = projection_mat(near, far, l, r, b, t);\n    mat&lt;4, 4&gt; Viewport = viewport_mat(0, 0, width, height, 255);\n\n    // \u9876\u70b9\u7740\u8272\u5668\n    virtual vec3 vertex(int iface, int nthvert) {\n        vec3 n = model-&gt;normal(iface, nthvert);\n        uvs[nthvert] = model-&gt;uv(iface, nthvert);\n        intensities[nthvert] =\n            max(0., model-&gt;normal(iface, nthvert) * light_dir);\n        vec4 gl_vert = pt2homo(model-&gt;vert(iface, nthvert));\n        vec4 transformed = Projection * ModelView * gl_vert;\n        transformed = transformed / transformed[3];\n        return (Viewport * transformed).xyz();\n    }\n\n    // \u7247\u5143\u7740\u8272\u5668\n    // \u8fd9\u91cc\u8fd8\u6ca1\u6709\u6b63\u786e\u5b9e\u73b0\u6cd5\u7ebf\u8d34\u56fe\uff01\n    virtual bool fragment(vec3 bc, TGAColor&amp; color) {\n        vec2 uvp = {0., 0.};\n        for (int i = 0; i &lt; 3; i++) {\n            uvp[0] += uvs[i][0] * bc[i];\n            uvp[1] += uvs[i][1] * bc[i];\n        }\n        int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),\n                        model-&gt;diffuse().width() - 1);\n        int tex_y = min(int(uvp.y * model-&gt;diffuse().height()),\n                        model-&gt;diffuse().height() - 1);\n        TGAColor uv_color = model-&gt;diffuse().get(tex_x, tex_y);\n\n        vec4 uv4 = vec2homo(model-&gt;normal(uvp));\n        vec4 light4 = vec2homo(light_dir);\n        vec3 n = (ModelView.invert_transpose() * uv4).xyz();\n        n = normalized(n);\n        vec3 l = (ModelView * light4).xyz();\n        l = normalized(l);\n        float pixel_intensity = 0.;\n        for (int i = 0; i &lt; 3; i++) {\n            pixel_intensity += n[i] * l[i];\n        }\n        if (pixel_intensity &lt; 0) {\n            pixel_intensity = 0.;\n        }\n\n        unsigned char r = uv_color[2] * pixel_intensity;\n        unsigned char g = uv_color[1] * pixel_intensity;\n        unsigned char b = uv_color[0] * pixel_intensity;\n        color = TGAColor{r, g, b};\n        return false;\n    }\n};\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/projection/","title":"Projection","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 279 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#_1","title":"\u539f\u7406","text":"<p>MVP \u53d8\u5316\u53ef\u53c2\u8003Lecture 04 Transformations Cont.</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#1","title":"1. \u6a21\u578b\u53d8\u6362","text":"<p>\u7528\u4e8e\u6a21\u578b\u7684\u653e\u7f29\u3001\u5e73\u79fb\u3001\u65cb\u8f6c\u3002\u4e0b\u9762\u4ee3\u7801\u4e2d\u5148\u4fdd\u6301\u4e0d\u53d8</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#2","title":"2. \u89c2\u5bdf\u53d8\u6362","text":"<p>\u7528\u4e8e\u8c03\u6574\u6a21\u578b\uff0c\u4f7f\u76f8\u673a\u770b\u8d77\u6765\u4f4d\u4e8e\u539f\u70b9\u3002\u5373\u6bcf\u4e2a\u5750\u6807\u90fd\u51cf\u53bb\u76f8\u673a\u7684\u5750\u6807\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#3","title":"3. \u900f\u89c6\u53d8\u6362","text":"<p>\u5148\u628a\u89c6\u9525\u53d8\u4e3a\u957f\u65b9\u4f53\uff0c\u518d\u5c06\u957f\u65b9\u4f53\u53d8\u4e3a\u6807\u51c6\u7acb\u65b9\u4f53\u3002</p> <p>\u7b2c\u4e00\u6b65\u7684\u77e9\u9635\u4e3a\uff1a</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; n &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; n+f &amp; -nf\\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{pmatrix} \\] <p>\u53d8\u6362\u540e\u5f97\u5230[l,r]*[b,t]*[near,far]\u7684\u957f\u65b9\u4f53\uff0c\u5176\u4e2d<code>near</code>\u548c<code>far</code>\u81ea\u5df1\u5b9a\u4e49\uff0c\u4e0a\u4e0b\u7531<code>near</code>\u548c\u5782\u76f4\u89c6\u91ce\u89d2\u8ba1\u7b97\u5f97\u5230\uff0c\u5de6\u53f3\u7531\u4e0a\u4e0b\u548c\u5c4f\u5e55\u957f\u5bbd\u6bd4\u8ba1\u7b97\u5f97\u5230\u3002\u4e3a\u4e86\u8fdb\u884c\u89c6\u53e3\u53d8\u6362\uff0c\u9700\u8981\u5c06\u8be5\u957f\u65b9\u4f53\u53d8\u4e3a[-1,1]^3 \u7684\u6807\u51c6\u7acb\u65b9\u4f53\u3002</p> <p>\u7b2c\u4e8c\u6b65\u7684\u77e9\u9635\u4e3a\uff1a</p> \\[ \\begin{aligned} M_{ortho} &amp;= \\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\frac{r + l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t + b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n + f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\\\ &amp;=\\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; -\\frac{r + l}{r - l} \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; -\\frac{t + b}{t - b} \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; -\\frac{n + f}{n - f} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\end{aligned} \\]"},{"location":"AbiesNotes/Tinyrenderer/projection/#4","title":"4. \u89c6\u53e3\u53d8\u6362","text":"<p>\u5c06\u6807\u51c6\u7acb\u65b9\u4f53\u53d8\u4e3a\u5c4f\u5e55\u5927\u5c0f\u7684\u957f\u65b9\u4f53\u3002\u5148\u5c06\u4e2d\u5fc3\u79fb\u5230\u5c4f\u5e55\u4e2d\u5fc3\u7684\u4f4d\u7f6e\uff0c\u518d\u5927\u5c0f\u653e\u7f29\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#5","title":"5. \u900f\u89c6\u9664\u6cd5","text":"<p>\u5411\u91cf\u7684\u524d\u4e09\u4f4d\u90fd\u9664\u4ee5\u7b2c\u56db\u4f4d\uff0c\u4f7f\u7b2c\u56db\u4f4d\u4e3a 1\uff0c\u5c06\u56db\u7ef4\u7684\u9f50\u6b21\u5750\u6807\u53d8\u4e3a\u4e09\u7ef4\u3002\u6b64\u65f6\u900f\u89c6\u7684\u4fe1\u606f\u88ab\u4fdd\u7559\u5728\u4e09\u7ef4\u7684\u5750\u6807\u4e2d\uff0c\u5f97\u5230\u6bcf\u4e2a\u9876\u70b9\u900f\u89c6\u540e\u7684\u5c4f\u5e55\u5750\u6807\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/projection/#_2","title":"\u5b9e\u73b0","text":"<p>\u4ee3\u7801\uff1a</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\n#include \"model.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nconst int width = 1000;\nconst int height = 1000;\nconst int depth = 255;\nvec3 light_dir = {0, 0, -1};\nvec3 camera_pos = {0, 0, 3};\n\nfloat fov = 45.0f;\nfloat aspect = width / float(height);\nfloat near = 0.1f;\nfloat far = 1000.0f;\nfloat t = tan(fov * 0.5 * M_PI / 180.0f) * near;\nfloat b = -t;\nfloat r = t * aspect;\nfloat l = -r;\n\n// \u6a21\u578b\u53d8\u6362\uff1a\u6a21\u578b\u7684\u7f29\u653e\u3001\u5e73\u79fb\u3001\u65cb\u8f6c\nmat&lt;4, 4&gt; model_mat() {\n    return identity&lt;4&gt;();\n}\n\n// \u89c2\u5bdf\u53d8\u6362\uff1a\u6444\u50cf\u673a\u4f4d\u7f6e\u548c\u89d2\u5ea6\nmat&lt;4, 4&gt; view_mat() {\n    mat&lt;4, 4&gt; m = identity&lt;4&gt;();\n    m[2][3] = -camera_pos.z;\n    return m;\n}\n\n// \u900f\u89c6\u53d8\u6362\uff1a\u5c06\u89c6\u9525\u53d8\u4e3a\u6807\u51c6\u7acb\u65b9\u4f53\nmat&lt;4, 4&gt; projection_mat(float near,\n                         float far,\n                         float l,\n                         float r,\n                         float b,\n                         float t) {\n    mat&lt;4, 4&gt; m;\n    m[0][0] = 2 * near / (r - l);\n    m[0][2] = (r + l) / (r - l);\n    m[1][1] = 2 * near / (t - b);\n    m[1][2] = (t + b) / (t - b);\n    m[2][2] = -(far + near) / (far - near);\n    m[2][3] = -2 * far * near / (far - near);\n    m[3][2] = -1;\n    m[3][3] = 0;\n    return m;\n}\n\n// \u89c6\u53e3\u53d8\u6362\uff1a\u4ece[-1,1]\u6620\u5c04\u5230\u5c4f\u5e55\nmat&lt;4, 4&gt; viewport_mat(int x, int y, int width, int height, int depth) {\n    mat&lt;4, 4&gt; m = identity&lt;4&gt;();\n    // \u5e73\u79fb\u4e2d\u5fc3\n    m[0][3] = x + width / 2.;\n    m[1][3] = y + height / 2.;\n    m[2][3] = depth / 2.;\n    // \u7f29\u653e\n    m[0][0] = width / 2.;\n    m[1][1] = height / 2.;\n    m[2][2] = depth / 2.;\n    return m;\n}\n\n// \u6c42\u91cd\u5fc3\u5750\u6807\nvec3 barycentric(vec3* pts, vec3 p) {\n    vec3 u = cross(\n        vec3{(pts[0].x - pts[2].x), (pts[1].x - pts[2].x), (pts[2].x - p.x)},\n        vec3{(pts[0].y - pts[2].y), (pts[1].y - pts[2].y), (pts[2].y - p.y)});\n    if (abs(u.z) &lt; 1)\n        return vec3{-1, 1, 1};\n    return vec3{u.x / u.z, u.y / u.z, 1 - u.x / u.z - u.y / u.z};\n}\n\n// \u753b\u4e09\u89d2\u5f62\nvoid triangle5(vec3* pts,\n               vec2* uvs,\n               TGAImage&amp; image,\n               float* zbuffer,\n               Model* model,\n               float intensity) {\n    // \u786e\u5b9a\u5305\u56f4\u76d2\u5927\u5c0f\n    vec2 bboxmin = {image.width() - 1., image.height() - 1.};\n    vec2 bboxmax = {0., 0.};\n    vec2 clamp = {image.width() - 1., image.height() - 1.};\n    for (int i = 0; i &lt; 3; i++) {\n        bboxmin.x = max(0., min(bboxmin.x, pts[i].x));\n        bboxmin.y = max(0., min(bboxmin.y, pts[i].y));\n        bboxmax.x = min(clamp.x, max(bboxmax.x, pts[i].x));\n        bboxmax.y = min(clamp.y, max(bboxmax.y, pts[i].y));\n    }\n\n    // \u904d\u5386\u5305\u56f4\u76d2\u4e2d\u7684\u70b9\n    for (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n        for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n            vec3 p = {static_cast&lt;float&gt;(x), static_cast&lt;float&gt;(y), 0.};\n            vec2 uvp = {0., 0.};\n            vec3 bc = barycentric(pts, p);\n            if (bc.x &lt; 0 || bc.y &lt; 0 || bc.z &lt; 0)\n                continue;\n            // \u8ba1\u7b97zbuffer\u548c\u7eb9\u7406\u5750\u6807\n            float z = 0.;\n            for (int i = 0; i &lt; 3; i++) {\n                z += pts[i].z * bc[i];\n                uvp[0] += uvs[i][0] * bc[i];\n                uvp[1] += uvs[i][1] * bc[i];\n            }\n            if (z &lt; zbuffer[static_cast&lt;int&gt;(x + y * width)]) {\n                zbuffer[static_cast&lt;int&gt;(x + y * width)] = z;\n                int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),\n                                model-&gt;diffuse().width() - 1);\n                int tex_y = min(int(uvp.y * model-&gt;diffuse().height()),\n                                model-&gt;diffuse().height() - 1);\n                TGAColor color = model-&gt;diffuse().get(tex_x, tex_y);\n                unsigned char r = color[2] * intensity;\n                unsigned char g = color[1] * intensity;\n                unsigned char b = color[0] * intensity;\n                image.set(x, y, TGAColor{r, g, b});\n            }\n        }\n    }\n}\n\nint main(int argc, char** argv) {\n    Model* model = nullptr;\n    if (2 == argc) {\n        model = new Model(argv[1]);\n    } else {\n        model = new Model(\"obj/african_head.obj\");\n    }\n\n    // zbuffer\u8bb0\u5f55\u6df1\u5ea6\u503c\n    float* zbuffer = new float[width * height];\n    for (int i = 0; i &lt; width * height; ++i) {\n        zbuffer[i] = numeric_limits&lt;float&gt;::infinity();\n    }\n\n    // \u77e9\u9635\u7528\u4e8e\u53d8\u6362\n    mat&lt;4, 4&gt; Model = model_mat();\n    mat&lt;4, 4&gt; View = view_mat();\n    mat&lt;4, 4&gt; Projection = projection_mat(near, far, l, r, b, t);\n    mat&lt;4, 4&gt; MVP = Projection * View * Model;\n    mat&lt;4, 4&gt; Viewport = viewport_mat(0, 0, width, height, 255);\n\n    // \u904d\u5386\u4e09\u89d2\u5f62\u5904\u7406\n    TGAImage image(width, height, TGAImage::RGB);\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        vec3 screen_coords[3];\n        vec3 world_coords[3];\n\n        for (int j = 0; j &lt; 3; j++) {\n            vec3 v0 = model-&gt;vert(i, j);\n            world_coords[j] = v0;\n\n            vec4 v4 = pt2homo(v0);\n            vec4 proj = Viewport * MVP * v4;\n            proj = proj / proj[3];\n            screen_coords[j] = homo2pt(proj);\n        }\n\n        // \u7528\u53c9\u4e58\u8ba1\u7b97\u6cd5\u5411\u91cf\u5e76\u5355\u4f4d\u5316\n        vec3 n = cross(world_coords[2] - world_coords[0],\n                       world_coords[1] - world_coords[0]);\n        vec3 unit_n = normalized(n);\n\n        // \u8ba1\u7b97\u5149\u7167\u5f3a\u5ea6\n        float intensity = unit_n * light_dir;\n        if (intensity &gt; 0) {\n            vec2 uvs[3];\n            for (int j = 0; j &lt; 3; j++) {\n                uvs[j] = model-&gt;uv(i, j);\n            }\n            triangle5(screen_coords, uvs, image, zbuffer, model, intensity);\n        }\n    }\n    image.write_tga_file(\"tri_head_proj.tga\");\n    cerr &lt;&lt; \"Image written to tga\" &lt;&lt; endl;\n    delete[] zbuffer;\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/shader/","title":"Shader","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 151 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/shader/#_1","title":"\u7740\u8272\u5668","text":"<p>\u8fd9\u91cc\u6574\u7406\u4e86\u4e00\u4e0b\u4ee3\u7801\u3002</p> <p>\u7740\u8272\u5668\u5206\u4e3a\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u5143\u7740\u8272\u5668\u3002</p> <p>\u9876\u70b9\u7740\u8272\u5668\u8ba1\u7b97\u9876\u70b9\u7684\u5c4f\u5e55\u5750\u6807\uff0c\u987a\u4fbf\u8ba1\u7b97\u9876\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\u548c\u7eb9\u7406\u5750\u6807\uff1b\u7247\u5143\u7740\u8272\u5668\u6839\u636e\u91cd\u5fc3\u5750\u6807\u5224\u65ad\u662f\u5426\u7ed8\u5236\u8be5\u50cf\u7d20\uff08\u4e0b\u9762\u4ee3\u7801\u4e2d\u9ed8\u8ba4\u5168\u90e8\u7ed8\u5236\uff09\uff0c\u5e76\u5f97\u5230\u8be5\u50cf\u7d20\u7684\u989c\u8272\u3002</p> <p>\u4e0b\u9762\u4ee3\u7801\u4e2d\u7528<code>model-&gt;normal(i,j)</code>\u5f97\u5230\u9876\u70b9\u6cd5\u5411\u91cf\uff0c\u4f46\u662f\u548c\u4e4b\u524d<code>calc_vertex_normal</code>\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u65b9\u5411\u76f8\u53cd\uff0c\u8981\u5c06\u5149\u7167\u65b9\u5411\u6539\u6210\u6b63\u7684\u6216\u5355\u4f4d\u5316\u3002\u6b64\u5904bug\u8017\u8d39\u51e0\u5c0f\u65f6\u3002\u3002</p>"},{"location":"AbiesNotes/Tinyrenderer/shader/#_2","title":"\u4ee3\u7801","text":"<p><code>my_gl.h</code>:</p> C++<pre><code>#pragma once\n#include \"geometry.h\"\n#include \"model.h\"\n#include \"tgaimage.h\"\n\nstruct IShader {\n    virtual vec3 vertex(int iface, int nthvert) = 0;\n    virtual bool fragment(vec3 bar, TGAColor&amp; color) = 0;\n    virtual ~IShader() = default;\n};\n\nmat&lt;4, 4&gt; mv_mat(vec3 eye, vec3 center, vec3 up);\nmat&lt;4, 4&gt; projection_mat(float near, float far, float l, float r, float b, float t);\nmat&lt;4, 4&gt; viewport_mat(int x, int y, int width, int height, int depth);\nvec3 barycentric(vec3* pts, vec3 p);\nvoid triangle(vec3* pts, IShader&amp; shader, TGAImage&amp; image, float* zbuffer, int width);\nstd::vector&lt;vec3&gt; calc_vertex_normal(Model* model);\n</code></pre> <p><code>my_gl.cpp</code>:</p> C++<pre><code>#include \"my_gl.h\"\nusing namespace std;\n\n// MV\u53d8\u6362\nmat&lt;4, 4&gt; mv_mat(vec3 eye, vec3 center, vec3 up) {\n    vec3 gaze = normalized(center - eye);\n    vec3 z = -1 * gaze;\n    vec3 x = normalized(cross(gaze, up));\n    vec3 y = cross(z, x);\n\n    mat&lt;4, 4&gt; T = identity&lt;4&gt;();\n    T[0][3] = -eye.x;\n    T[1][3] = -eye.y;\n    T[2][3] = -eye.z;\n\n    mat&lt;4, 4&gt; R = identity&lt;4&gt;();\n    for (int i = 0; i &lt; 3; i++) {\n        R[0][i] = x[i];\n        R[1][i] = y[i];\n        R[2][i] = z[i];\n    }\n    return R * T;\n}\n\n// \u900f\u89c6\u53d8\u6362\uff1a\u5c06\u89c6\u9525\u53d8\u4e3a\u6807\u51c6\u7acb\u65b9\u4f53\nmat&lt;4, 4&gt; projection_mat(float near,\n                         float far,\n                         float l,\n                         float r,\n                         float b,\n                         float t) {\n    mat&lt;4, 4&gt; m;\n    m[0][0] = 2 * near / (r - l);\n    m[0][2] = (r + l) / (r - l);\n    m[1][1] = 2 * near / (t - b);\n    m[1][2] = (t + b) / (t - b);\n    m[2][2] = -(far + near) / (far - near);\n    m[2][3] = -2 * far * near / (far - near);\n    m[3][2] = -1;\n    m[3][3] = 0;\n    return m;\n}\n\n// \u89c6\u53e3\u53d8\u6362\uff1a\u4ece[-1,1]\u6620\u5c04\u5230\u5c4f\u5e55\nmat&lt;4, 4&gt; viewport_mat(int x, int y, int width, int height, int depth) {\n    mat&lt;4, 4&gt; m = identity&lt;4&gt;();\n    m[0][3] = x + width / 2.;\n    m[1][3] = y + height / 2.;\n    m[2][3] = depth / 2.;\n    m[0][0] = width / 2.;\n    m[1][1] = height / 2.;\n    m[2][2] = depth / 2.;\n    return m;\n}\n\n// \u6c42\u91cd\u5fc3\u5750\u6807\nvec3 barycentric(vec3* pts, vec3 p) {\n    vec3 u = cross(\n        vec3{(pts[0].x - pts[2].x), (pts[1].x - pts[2].x), (pts[2].x - p.x)},\n        vec3{(pts[0].y - pts[2].y), (pts[1].y - pts[2].y), (pts[2].y - p.y)});\n    if (abs(u.z) &lt; 1)\n        return vec3{-1, 1, 1};\n    return vec3{u.x / u.z, u.y / u.z, 1 - u.x / u.z - u.y / u.z};\n}\n\n// \u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\nvector&lt;vec3&gt; calc_vertex_normal(Model* model) {\n    vector&lt;vec3&gt; vertex_normals(model-&gt;nverts(), vec3{0, 0, 0});\n    // \u904d\u5386\u4e09\u89d2\u5f62\u7d2f\u52a0\u5206\u91cf\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        // \u63d0\u53d6\u4e09\u89d2\u5f62\u9876\u70b9\u5750\u6807\n        vec3 v[3];\n        for (int j = 0; j &lt; 3; j++) {\n            v[j] = model-&gt;vert(i, j);\n        }\n        // \u8ba1\u7b97\u4e09\u89d2\u5f62\u6cd5\u5411\u91cf\u548c\u6743\u91cd\n        vec3 n = cross(v[2] - v[0], v[1] - v[0]);\n        float area = norm(n) / 2.;\n        n = normalized(n);\n        // \u7ed9\u4e09\u4e2a\u9876\u70b9\u6cd5\u5411\u91cf\u52a0\u5206\u91cf\n        for (int j = 0; j &lt; 3; j++) {\n            int vertex_idx = model-&gt;index(i, j);\n            vertex_normals[vertex_idx] = vertex_normals[vertex_idx] + n * area;\n        }\n    }\n\n    // \u9876\u70b9\u6cd5\u5411\u91cf\u6807\u51c6\u5316\n    for (auto&amp; n : vertex_normals) {\n        n = normalized(n);\n    }\n    return vertex_normals;\n}\n\n// \u753b\u4e09\u89d2\u5f62\nvoid triangle(vec3* pts,\n              IShader&amp; shader,\n              TGAImage&amp; image,\n              float* zbuffer,\n              int width) {\n    // \u786e\u5b9a\u5305\u56f4\u76d2\u5927\u5c0f\n    vec2 bboxmin = {image.width() - 1., image.height() - 1.};\n    vec2 bboxmax = {0., 0.};\n    vec2 clamp = {image.width() - 1., image.height() - 1.};\n    for (int i = 0; i &lt; 3; i++) {\n        bboxmin.x = max(0., min(bboxmin.x, pts[i].x));\n        bboxmin.y = max(0., min(bboxmin.y, pts[i].y));\n        bboxmax.x = min(clamp.x, max(bboxmax.x, pts[i].x));\n        bboxmax.y = min(clamp.y, max(bboxmax.y, pts[i].y));\n    }\n\n    // \u904d\u5386\u5305\u56f4\u76d2\u4e2d\u7684\u70b9\n#pragma omp parallel for\n    for (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n        for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n            vec3 p = {static_cast&lt;float&gt;(x), static_cast&lt;float&gt;(y), 0.};\n            vec3 bc = barycentric(pts, p);\n            if (bc.x &lt; 0 || bc.y &lt; 0 || bc.z &lt; 0)\n                continue;\n\n            // \u8ba1\u7b97zbuffer,\u7eb9\u7406\u5750\u6807\u548c\u6bcf\u4e2a\u50cf\u7d20\u7684\u5149\u7167\u5f3a\u5ea6\n            float z = 0.;\n            for (int i = 0; i &lt; 3; i++) {\n                z += pts[i].z * bc[i];\n            }\n            if (z &lt; zbuffer[static_cast&lt;int&gt;(x + y * width)]) {\n                zbuffer[static_cast&lt;int&gt;(x + y * width)] = z;\n                TGAColor color = {255, 255, 255};\n                if (shader.fragment(bc, color)) {\n                    continue;\n                }\n                image.set(x, y, color);\n            }\n        }\n    }\n}\n</code></pre> <p><code>main.cpp</code>:</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\n#include \"model.h\"\n#include \"my_gl.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nModel* model = nullptr;\nconst int width = 1000;\nconst int height = 1000;\nconst int depth = 255;\nvec3 light_dir = {0, 0, 1};\nvec3 eye = {2, 0, 3};\nvec3 center = {0, 0, 0};\nvec3 up = {0, 1, 0};\nfloat fov = 45.0f;\nfloat aspect = width / float(height);\nfloat near = 0.1f;\nfloat far = 1000.0f;\nfloat t = tan(fov * 0.5 * M_PI / 180.0f) * near;\nfloat b = -t;\nfloat r = t * aspect;\nfloat l = -r;\n\nmat&lt;4, 4&gt; ModelView = mv_mat(eye, center, up);\nmat&lt;4, 4&gt; Projection = projection_mat(near, far, l, r, b, t);\nmat&lt;4, 4&gt; Viewport = viewport_mat(0, 0, width, height, 255);\n\nstruct GourandShader : public IShader {\n    float intensities[3];\n    mat&lt;3, 2&gt; uvs;\n\n    // \u9876\u70b9\u7740\u8272\u5668\n    virtual vec3 vertex(int iface, int nthvert) {\n        vec3 n = model-&gt;normal(iface, nthvert);\n        uvs[nthvert] = model-&gt;uv(iface, nthvert);\n        intensities[nthvert] =\n            max(0., model-&gt;normal(iface, nthvert) * light_dir);\n        vec4 gl_vert = pt2homo(model-&gt;vert(iface, nthvert));\n        vec4 transformed = Projection * ModelView * gl_vert;\n        transformed = transformed / transformed[3];\n        return (Viewport * transformed).xyz();\n    }\n\n    // \u7247\u5143\u7740\u8272\u5668\n    virtual bool fragment(vec3 bc, TGAColor&amp; color) {\n        float pixel_intensity = 0.;\n        vec2 uvp = {0., 0.};\n        for (int i = 0; i &lt; 3; i++) {\n            pixel_intensity += intensities[i] * bc[i];\n            uvp[0] += uvs[i][0] * bc[i];\n            uvp[1] += uvs[i][1] * bc[i];\n        }\n        int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),\n                        model-&gt;diffuse().width() - 1);\n        int tex_y = min(int(uvp.y * model-&gt;diffuse().height()),\n                        model-&gt;diffuse().height() - 1);\n        TGAColor uv_color = model-&gt;diffuse().get(tex_x, tex_y);\n        unsigned char r = uv_color[2] * pixel_intensity;\n        unsigned char g = uv_color[1] * pixel_intensity;\n        unsigned char b = uv_color[0] * pixel_intensity;\n        color = TGAColor{r, g, b};\n        return false;\n    }\n};\n\nint main(int argc, char** argv) {\n    if (2 == argc) {\n        model = new Model(argv[1]);\n    } else {\n        model = new Model(\"obj/african_head.obj\");\n    }\n\n    float* zbuffer = new float[width * height];\n    for (int i = 0; i &lt; width * height; ++i) {\n        zbuffer[i] = numeric_limits&lt;float&gt;::infinity();\n    }\n\n    TGAImage image(width, height, TGAImage::RGB);\n\n    GourandShader shader;\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        vec3 screen_coords[3];\n        for (int j = 0; j &lt; 3; j++) {\n            screen_coords[j] = shader.vertex(i, j);\n        }\n        triangle(screen_coords, shader, image, zbuffer, width);\n    }\n    image.write_tga_file(\"tri_head_shader.tga\");\n    cerr &lt;&lt; \"Image written to tga\" &lt;&lt; endl;\n    delete[] zbuffer;\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/texture/","title":"Texture","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 276 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/texture/#_1","title":"\u539f\u7406","text":"<p>.obj \u6587\u4ef6\u4e2d\uff0c\u4e09\u89d2\u5f62\u9762\u7528<code>f a1/b1/c1 a2/b2/c2 a3/b3/c3</code>\u8868\u793a\uff0c\u4e00\u5171\u6709<code>model-&gt;nfaces()</code>\u4e2a\u9762\u3002  </p> <p>a1,a2,a3 \u8868\u793a\u9876\u70b9\u5bf9\u5e94\u7684\u7d22\u5f15\uff0c\u9876\u70b9\u4fe1\u606f\u5b58\u50a8\u5728 v \u5f00\u5934\u7684\u884c\u4e2d\u3002\u7531<code>model-&gt;vert(i,j)</code>\u5f97\u5230\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7684\u4e16\u754c\u5750\u6807\u3002</p> <p>b1,b2,b3 \u8868\u793a\u76f8\u5e94\u9876\u70b9\u7684\u7eb9\u7406\u7684\u7d22\u5f15\uff0c\u7eb9\u7406\u4fe1\u606f\u5b58\u50a8\u5728 vt \u5f00\u5934\u7684\u884c\u4e2d\u3002\u7531<code>model-&gt;uv(i,j)</code>\u5f97\u5230<code>vec2</code>\u7c7b\u578b\u7684\u503c\uff0c\u662f\u7b2c i \u4e2a\u9762\u7b2c j \u4e2a\u9876\u70b9\u7eb9\u7406\u4fe1\u606f\uff0c\u5373\u8fd9\u4e2a\u9876\u70b9\u5728\u7eb9\u7406\u56fe\u6848\u4e2d\u7684\u5750\u6807\u3002</p> <p>TGAImage \u7c7b\u578b\u7684<code>diffusemap</code>\u662f\u7eb9\u7406\u8d34\u56fe\u56fe\u6848\uff0c\u901a\u8fc7<code>diffusemap.get(x,y)</code>\u83b7\u53d6\u8d34\u56fe\u4e0a\u5750\u6807(x,y)\u5904\u7684\u50cf\u7d20\u989c\u8272\uff0c\u8fd4\u56de\u503c\u4e3a TGAColor \u7c7b\u578b\u3002</p> <p><code>Model</code>\u7c7b\u4e2d\u7684<code>diffuse</code>\u7528\u4e8e\u83b7\u53d6<code>diffusemap</code>\uff0c\u5373<code>model-&gt;diffuse().get(x,y)</code>\u83b7\u5f97\u8d34\u56fe\u4e0a\u5750\u6807(x,y)\u5904\u7684\u50cf\u7d20\u989c\u8272\u3002</p> <p>\u5e94\u7528\u7eb9\u7406\uff1a</p> <ol> <li>\u904d\u5386\u4e09\u89d2\u5f62\u4e2d\u70b9\u65f6\u7528\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807\u63d2\u503c\uff0c\u5f97\u5230\u5f53\u524d\u70b9\u7684\u7eb9\u7406\u5750\u6807<code>vec2 uvp</code></li> <li>\u5c06\u56fe\u50cf\u4e0a\u7684\u5750\u6807(uvp.x,uvp.y)\uff08float \u7c7b\u578b\uff09\u8f6c\u6362\u4e3a\u8d34\u56fe\u56fe\u6848\u7684\u5750\u6807(tex_x,tex_y)\uff08int \u7c7b\u578b\uff09\u3002\u5176\u4e2d uvp.x \u548c uvp.y \u8868\u793a\u76f8\u5e94\u65b9\u5411\u7684\u5360\u6bd4\uff0c\u6545\u8f6c\u6362\u65b9\u5f0f\u4e3a<code>int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),model-&gt;diffuse().width() - 1);</code></li> <li>\u7531(tex_x,tex_y)\u5f97\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\u989c\u8272\uff0c\u5177\u4f53\u65b9\u5f0f\u4e3a<code>TGAColor color = model-&gt;diffuse().get(tex_x, tex_y);</code></li> <li>\u5c06\u989c\u8272\u548c\u5149\u5f71\u7ed3\u5408\uff0c\u5373 rgb \u4e2d\u6bcf\u4e2a\u503c\u4e58\u4e0a\u5149\u7167\u5f3a\u5ea6<code>intensity</code>\uff0c\u5177\u4f53\u4e3a<code>unsigned char r = color[2] * intensity;</code></li> </ol>"},{"location":"AbiesNotes/Tinyrenderer/texture/#_2","title":"\u5b9e\u73b0","text":"<p>\u4ee3\u7801\uff1a</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\n#include \"model.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nconst int width = 1000;\nconst int height = 1000;\n\nvec3 barycentric(vec3* pts, vec3 p) {\n    vec3 u = cross(\n        vec3{(pts[0].x - pts[2].x), (pts[1].x - pts[2].x), (pts[2].x - p.x)},\n        vec3{(pts[0].y - pts[2].y), (pts[1].y - pts[2].y), (pts[2].y - p.y)});\n    if (abs(u.z) &lt; 1)\n        return vec3{-1, 1, 1};\n    return vec3{u.x / u.z, u.y / u.z, 1 - u.x / u.z - u.y / u.z};\n}\n\nvoid triangle5(vec3* pts,\n               vec2* uvs,\n               TGAImage&amp; image,\n               float* zbuffer,\n               Model* model,\n               float intensity) {\n    // \u786e\u5b9a\u5305\u56f4\u76d2\u5927\u5c0f\n    vec2 bboxmin = {\n        image.width() - 1.,\n        image.height() - 1.}; \n    vec2 bboxmax = {0., 0.}; \n    vec2 clamp = {image.width() - 1., image.height() - 1.};\n    for (int i = 0; i &lt; 3; i++) {\n        bboxmin.x = max(0., min(bboxmin.x, pts[i].x));\n        bboxmin.y = max(0., min(bboxmin.y, pts[i].y));\n        bboxmax.x = min(clamp.x, max(bboxmax.x, pts[i].x));\n        bboxmax.y = min(clamp.y, max(bboxmax.y, pts[i].y));\n    }\n\n    // \u904d\u5386\u5305\u56f4\u76d2\u4e2d\u7684\u70b9\n    for (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n        for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n            vec3 p = {static_cast&lt;float&gt;(x), static_cast&lt;float&gt;(y), 0.};\n            vec2 uvp = {0., 0.};\n            vec3 bc = barycentric(pts, p);\n            if (bc.x &lt; 0 || bc.y &lt; 0 || bc.z &lt; 0)\n                continue;\n\n            // \u8ba1\u7b97zbuffer\n            float z = 0.;\n            for (int i = 0; i &lt; 3; i++) {\n                z += pts[i].z * bc[i];\n                uvp[0] += uvs[i][0] * bc[i];\n                uvp[1] += uvs[i][1] * bc[i];\n            }\n\n            if (z &gt; zbuffer[static_cast&lt;int&gt;(x + y * width)]) {\n                zbuffer[static_cast&lt;int&gt;(x + y * width)] = z;\n                // \u5f97\u5230\u7eb9\u7406\u53c2\u6570\n                int tex_x = min(int(uvp.x * model-&gt;diffuse().width()),\n                                model-&gt;diffuse().width() - 1);\n                int tex_y = min(int(uvp.y * model-&gt;diffuse().height()),\n                                model-&gt;diffuse().height() - 1);\n                TGAColor color = model-&gt;diffuse().get(tex_x, tex_y);\n                unsigned char r = color[2] * intensity;\n                unsigned char g = color[1] * intensity;\n                unsigned char b = color[0] * intensity;\n                image.set(x, y, TGAColor{r, g, b});\n            }\n        }\n    }\n}\n\nint main(int argc, char** argv) {\n    Model* model = nullptr;\n    if (2 == argc) {\n        model = new Model(argv[1]);\n    } else {\n        model = new Model(\"obj/african_head.obj\");\n    }\n    vec3 light_dir = {0, 0, -1};\n\n    // zbuffer\u8bb0\u5f55\u6df1\u5ea6\u503c\n    float* zbuffer = new float[width * height];\n    for (int i = 0; i &lt; width * height; ++i) {\n        zbuffer[i] = -numeric_limits&lt;float&gt;::infinity();\n    }\n\n    TGAImage image(width, height, TGAImage::RGB);\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        vec3 screen_coords[3];\n        vec3 world_coords[3];\n        for (int j = 0; j &lt; 3; j++) {\n            vec3 v0 = model-&gt;vert(i, j);\n            int x0 = (v0.x + 1.) * width / 2.;\n            int y0 = (v0.y + 1.) * height / 2.;\n            screen_coords[j] =\n                vec3{static_cast&lt;float&gt;(x0), static_cast&lt;float&gt;(y0),v0.z};\n            world_coords[j] = v0;\n        }\n\n        // \u7528\u53c9\u4e58\u8ba1\u7b97\u6cd5\u5411\u91cf\u5e76\u5355\u4f4d\u5316\n        vec3 n = cross(world_coords[2] - world_coords[0],\n                       world_coords[1] - world_coords[0]);\n        float len = norm(n);\n        vec3 unit_n = normalized(n);\n\n        // \u8ba1\u7b97\u5149\u7167\u5f3a\u5ea6\n        float intensity = unit_n * light_dir;\n        if (intensity &gt; 0) {\n            vec2 uvs[3];\n            for (int j = 0; j &lt; 3; j++) {\n                uvs[j] = model-&gt;uv(i, j);\n            }\n            triangle5(screen_coords, uvs, image, zbuffer, model, intensity);\n        }\n    }\n    image.write_tga_file(\"tri_head_uv.tga\");\n    cerr &lt;&lt; \"Image written to tga\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/","title":"Triangle","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 163 \u4e2a\u5b57\u00a0\u00a010 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_1","title":"\u753b\u4e09\u89d2\u5f62","text":""},{"location":"AbiesNotes/Tinyrenderer/triangle/#_2","title":"\u5c1d\u8bd5","text":"<p>\u56e0\u4e3a ssloy \u8bf4 Usually, after this introduction I leave my students for about an hour\uff08</p> <p>\u7528<code>unordered_map&lt;int,vector&lt;int&gt;&gt;</code>\u8bb0\u5f55\u6bcf\u4e2a x \u5bf9\u5e94\u7684\u8fb9\u754c\u4e0a\u7684 y\uff0c\u6700\u540e\u7528\u7ad6\u76f4\u7ebf\u586b\u5145\u4e09\u89d2\u5f62\u3002</p> <p>\u7531\u4e8e\u7edf\u4e00\u7528 x \u4f5c\u4e3a key\uff0c\u4e0d\u80fd\u6839\u636e\u659c\u7387\u7ffb\u8f6c\u3002\u4f46\u662f\u666e\u901a Bresenhan \u65b9\u6cd5\u6bcf\u6b21 y \u53ea\u80fd\u4e0a\u5347\u6216\u4e0b\u964d\u4e00\u683c\uff0c\u659c\u7387\u5927\u7684\u7ebf\u4f1a\u53d8\u6210 45 \u5ea6\u76f4\u7ebf+\u7ad6\u76f4\u76f4\u7ebf\u3002\u8fd9\u91cc\u7528\u4e86<code>int step = error / dx;</code>\u6765\u8fdb\u884c\u5927\u659c\u7387\u7684\u79fb\u52a8\u3002</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\n#include \"model.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nconst TGAColor white = TGAColor(255, 255, 255, 255);\nconst TGAColor blue = TGAColor(0, 0, 255, 255);\n\nvoid addEdge(vec3 v0, vec3 v1, unordered_map&lt;int, vector&lt;int&gt;&gt;&amp; line) {\n    int x0 = v0.x;\n    int y0 = v0.y;\n    int x1 = v1.x;\n    int y1 = v1.y;\n    if (x0 &gt; x1) {\n        swap(x0, x1);\n        swap(y0, y1);\n    }\n\n    int dx = x1 - x0;\n    int dy = y1 - y0;\n    int derror = abs(dy * 2);\n    int error = 0;\n    int y = y0;\n    for (int x = x0; x &lt;= x1; x++) {\n        line[x].push_back(y);\n        error += derror;\n        if (error &gt;= dx) {\n            int step = error / dx;\n            y += (y1 &gt; y0) ? step : -step;\n            error -= step * dx * 2;\n        }\n    }\n}\n\nvoid triangle1(vec3 v0, vec3 v1, vec3 v2, TGAImage&amp; image, TGAColor color) {\n    unordered_map&lt;int, vector&lt;int&gt;&gt; line;\n    addEdge(v0, v1, line);\n    addEdge(v1, v2, line);\n    addEdge(v2, v0, line);\n    int xmin = min({v0.x, v1.x, v2.x});\n    int xmax = max({v0.x, v1.x, v2.x});\n    for (int x = xmin; x &lt;= xmax; x++) {\n        vector&lt;int&gt; vy = line[x];\n        if (vy.empty()) {\n            cout &lt;&lt; \"vy is empty!\" &lt;&lt; '\\n';\n        }\n        int ymin = *min_element(vy.begin(), vy.end());\n        int ymax = *max_element(vy.begin(), vy.end());\n        for (int y = ymin; y &lt;= ymax; y++) {\n            image.set(x, y, color);\n        }\n    }\n}\n\nint main() {\n    TGAImage image(600, 600, TGAImage::RGB);\n    vec3 v0 = {100., 200., 100.};\n    vec3 v1 = {300., 400., 100.};\n    vec3 v2 = {400., 100., 100.};\n    triangle1(v1, v2, v0, image, blue);\n    image.write_tga_file(\"triangle.tga\");\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p> <p>\uff08\u4e0b\u9762\u662f\u5b98\u65b9\u7684\u6539\u8fdb\u6d41\u7a0b\uff09</p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_3","title":"\u6539\u8fdb\u8fc7\u7a0b","text":""},{"location":"AbiesNotes/Tinyrenderer/triangle/#1","title":"1. \u753b\u8fb9\u6846","text":"C++<pre><code>void triangle2(vec3 v0, vec3 v1, vec3 v2, TGAImage&amp; image, TGAColor color) {\n    line(v0.x, v0.y, v1.x, v1.y, image, color);\n    line(v1.x, v1.y, v2.x, v2.y, image, color);\n    line(v2.x, v2.y, v0.x, v0.y, image, color);\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#2","title":"2. \u533a\u5206\u8fb9\u754c","text":"<p>\u5c06 v0, v1, v2 \u6309 y \u7684\u5347\u5e8f\u6392\u5217\uff0c\u7531 v0, v1 \u548c v1, v2 \u753b\u7684\u8fb9\u4e3a\u4e00\u7ec4\uff0c\u4e2d\u95f4\u6709\u8f6c\u6298\uff1b\u7531 v0, v2 \u753b\u7684\u8fb9\u4e3a\u4e00\u7ec4\uff0c\u65e0\u8f6c\u6298\u3002</p> C++<pre><code>void triangle2(vec3 v0, vec3 v1, vec3 v2, TGAImage&amp; image, TGAColor color) {\n    if (v0.y &gt; v1.y)\n        swap(v0, v1);\n    if (v0.y &gt; v2.y)\n        swap(v0, v2);\n    if (v1.y &gt; v2.y)\n        swap(v1, v2);\n\n    line(v0.x, v0.y, v1.x, v1.y, image, color);\n    line(v1.x, v1.y, v2.x, v2.y, image, color);\n    line(v2.x, v2.y, v0.x, v0.y, image, color);\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#3","title":"3. \u533a\u5206\u4e0a\u4e0b\u90e8\u5206","text":"<p>\u4ea4\u6362\u540e v1 \u4e3a\u8f6c\u6298\u70b9\uff0c\u6839\u636e v1 \u5206\u5272\u6210\u4e0a\u4e0b\u4e24\u90e8\u5206\uff0c\u5206\u522b\u8ba1\u7b97\u5de6\u53f3\u8fb9\u754c\u7684 x \u503c\u3002</p> C++<pre><code>void triangle2(vec3 v0, vec3 v1, vec3 v2, TGAImage&amp; image, TGAColor color) {\n    if (v0.y &gt; v1.y)\n        swap(v0, v1);\n    if (v0.y &gt; v2.y)\n        swap(v0, v2);\n    if (v1.y &gt; v2.y)\n        swap(v1, v2);\n\n    int total_height = v2.y - v0.y;\n    int down_height = v1.y - v0.y + 1;  // +1\u907f\u514d\u9664\u4ee5\u96f6\n    int up_height = v2.y - v1.y + 1;\n    // \u4e0b\u534a\u4e2a\u4e09\u89d2\u5f62\n    for (int y = v0.y; y &lt;= v1.y; y++) {\n        float alpha = (float)(y - v0.y) / total_height;  // alpha\u8868\u793a\u957f\u8fb9\u7684\u6bd4\u4f8b\n        float beta = (float)(y - v0.y) / down_height;    // beta\u8868\u793a\u8f6c\u6298\u8fb9\u7684\u6bd4\u4f8b\n        int x_a = v0.x + alpha * (v2.x - v0.x);\n        int x_b = v0.x + beta * (v1.x - v0.x);\n        image.set(x_a, y, red);\n        image.set(x_b, y, green);\n    }\n    // \u4e0a\u534a\u4e2a\u4e09\u89d2\u5f62\n    for (int y = v1.y; y &lt;= v2.y; y++) {\n        float alpha = (float)(y - v0.y) / total_height;  // alpha\u8868\u793a\u957f\u8fb9\u7684\u6bd4\u4f8b\n        float beta = (float)(y - v1.y) / up_height;    // beta\u8868\u793a\u8f6c\u6298\u8fb9\u7684\u6bd4\u4f8b\n        int x_a = v0.x + alpha * (v2.x - v0.x);\n        int x_b = v1.x + beta * (v2.x - v1.x);\n        image.set(x_a, y, red);\n        image.set(x_b, y, green);\n    }\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#4","title":"4. \u6c34\u5e73\u7ebf\u586b\u5145","text":"C++<pre><code>// \u4e0b\u534a\u4e2a\u4e09\u89d2\u5f62\nfor (int y = v0.y; y &lt;= v1.y; y++) {\n    float alpha = (float)(y - v0.y) / total_height;  // alpha\u8868\u793a\u957f\u8fb9\u7684\u6bd4\u4f8b\n    float beta = (float)(y - v0.y) / down_height;    // beta\u8868\u793a\u8f6c\u6298\u8fb9\u7684\u6bd4\u4f8b\n    int x_a = v0.x + alpha * (v2.x - v0.x);\n    int x_b = v0.x + beta * (v1.x - v0.x);\n    // image.set(x_a, y, red);\n    // image.set(x_b, y, green);\n    if (x_a&gt;x_b)\n        swap(x_a, x_b); // \u786e\u5b9a\u5de6\u53f3\u5173\u7cfb\n    for (int x=x_a;x&lt;=x_b;x++) {\n        image.set(x, y, color);\n    }\n}\n// \u4e0a\u534a\u4e2a\u4e09\u89d2\u5f62\nfor (int y = v1.y; y &lt;= v2.y; y++) {\n    float alpha = (float)(y - v0.y) / total_height;  // alpha\u8868\u793a\u957f\u8fb9\u7684\u6bd4\u4f8b\n    float beta = (float)(y - v1.y) / up_height;    // beta\u8868\u793a\u8f6c\u6298\u8fb9\u7684\u6bd4\u4f8b\n    int x_a = v0.x + alpha * (v2.x - v0.x);\n    int x_b = v1.x + beta * (v2.x - v1.x);\n    // image.set(x_a, y, red);\n    // image.set(x_b, y, green);\n    if (x_a &gt; x_b)\n        swap(x_a, x_b);  // \u786e\u5b9a\u5de6\u53f3\u5173\u7cfb\n    for (int x = x_a; x &lt;= x_b; x++) {\n        image.set(x, y, color);\n    }\n}\n</code></pre>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#5","title":"5. \u5408\u5e76\u4ee3\u7801","text":"C++<pre><code>void triangle3(vec3 v0, vec3 v1, vec3 v2, TGAImage&amp; image, TGAColor color) {\n    if (v0.y == v1.y &amp;&amp; v0.y == v2.y)\n        return;\n\n    // \u6309y\u7684\u5347\u5e8f\u6392\u5217\n    if (v0.y &gt; v1.y)\n        swap(v0, v1);\n    if (v0.y &gt; v2.y)\n        swap(v0, v2);\n    if (v1.y &gt; v2.y)\n        swap(v1, v2);\n\n    int total_height = v2.y - v0.y + 1;\n    for (int y = v0.y; y &lt;= v2.y; y++) {\n        bool is_up = y &gt; v1.y || v0.y == v1.y;\n        int segment_height = is_up ? v2.y - v1.y + 1 : v1.y - v0.y + 1;\n        float alpha = (float)(y - v0.y) / total_height;  // \u957f\u8fb9\u7684\u6bd4\u4f8b\n        float beta = (float)(y - (is_up ? v1.y : v0.y)) /\n                     segment_height;  // \u8f6c\u6298\u8fb9\u7684\u6bd4\u4f8b\n        int x_a = v0.x + alpha * (v2.x - v0.x);\n        int x_b =\n            is_up ? v1.x + beta * (v2.x - v1.x) : v0.x + beta * (v1.x - v0.x);\n        if (x_a &gt; x_b)\n            swap(x_a, x_b);\n        for (int x = x_a; x &lt;= x_b; x++) {\n            image.set(x, y, color);\n        }\n    }\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_4","title":"\u91cd\u5fc3\u5750\u6807","text":"<p>\u5df2\u77e5\u4e09\u89d2\u5f62 ABC \u548c\u70b9 P\uff0cP \u7684\u91cd\u5fc3\u5750\u6807\u4e3a\u4e09\u4e2a\u9876\u70b9\u7684\u52a0\u6743\u503c\uff1a</p> \\[ P=u\\cdot A+v\\cdot B+w\\cdot C\\] <p>\u5176\u4e2d\\(u+v+w=1\\).</p> <p>\u82e5\\(u,v,w\\)\u90fd\u5728[0, 1]\u8303\u56f4\u5185\uff0c\u5219 P \u5728\u4e09\u89d2\u5f62\u5185\uff1b\u82e5\u81f3\u5c11\u4e00\u4e2a\u6743\u503c\u5728\u8303\u56f4\u5916\uff0c\u5219\u81f3\u5c11\u4e00\u4e2a\u503c\u5c0f\u4e8e\u96f6\uff0cP \u5728\u4e09\u89d2\u5f62\u5916\u3002</p> <p>\u4ee4\u4e09\u4e2a\u9876\u70b9\u7684\u5750\u6807\u5206\u522b\u4e3a\\(x_i, y_i, z_i\\)\uff0cP \u70b9\u5750\u6807\u4e3a\\(x_p, y_p, z_p\\)\uff0c\u5219\uff1a</p> \\[ \\begin{cases} x_p-x_2=u\\cdot (x_0-x_2)+v\\cdot (x_1-x_2) \\\\ y_p-y_2=u\\cdot (y_0-y_2)+v\\cdot (y_1-y_2) \\\\ \\end{cases} \\] <p>\u589e\u5e7f\u77e9\u9635\uff1a</p> \\[ \\begin{pmatrix} x_0-x_2 &amp; x_1-x_2 \\\\ y_0-y_2 &amp; y_1-y_2 \\\\ \\end{pmatrix} \\begin{pmatrix} u \\\\ v \\\\ \\end{pmatrix}= \\begin{pmatrix} x_p-x_2 \\\\ y_p-y_2 \\\\ \\end{pmatrix} \\] <p>Cramer's Rule:</p> \\[ u=\\frac{D_u}{D} =\\frac{ \\begin{vmatrix} x_p - x_2 &amp; x_1 - x_2 \\\\ y_p - y_2 &amp; y_1 - y_2 \\\\ \\end{vmatrix} } { \\begin{vmatrix} x_0 - x_2 &amp; x_1 - x_2 \\\\ y_0 - y_2 &amp; y_1 - y_2 \\\\ \\end{vmatrix} }, v=\\frac{D_v}{D}=\\frac{ \\begin{vmatrix} x_0 - x_2 &amp; x_p - x_2 \\\\ y_0 - y_2 &amp; y_p - y_2 \\\\ \\end{vmatrix} } { \\begin{vmatrix} x_0 - x_2 &amp; x_1 - x_2 \\\\ y_0 - y_2 &amp; y_1 - y_2 \\\\ \\end{vmatrix} } \\] <p>\u5b9a\u4e49 U\uff1a</p> \\[ \\begin{aligned} U &amp;= \\begin{pmatrix} x_0 - x_2 &amp; x_1 - x_2 &amp; x_2 - x_p \\end{pmatrix} \\times \\begin{pmatrix} y_0 - y_2 &amp; y_1 - y_2 &amp; y_2 - y_p \\end{pmatrix} \\\\ &amp;= \\begin{vmatrix} i &amp; j &amp; k\\\\ x_0 - x_2 &amp; x_1 - x_2 &amp; x_2 - x_p \\\\ y_0 - y_2 &amp; y_1 - y_2 &amp; y_2 - y_p \\end{vmatrix} \\\\ &amp;= \\begin{pmatrix} D_u &amp; D_v &amp; D \\end{pmatrix} \\end{aligned} \\] <p>\u5219\uff1a</p> \\[ u=\\frac{U.x}{U.z}, v=\\frac{U.y}{U.z} \\] <p>\u4ee3\u7801\uff1a</p> C++<pre><code>vec3 barycentric(vec3* pts, vec3 p) {\n    vec3 u =\n        cross(vec3{pts[0].x - pts[2].x, pts[1].x - pts[2].x, pts[2].x - p.x},\n              vec3{pts[0].y - pts[2].y, pts[1].y - pts[2].y, pts[2].y - p.y});\n    if (abs(u.z) &lt; 1)\n        return vec3{-1, 1, 1};\n    return vec3{u.x / u.z, u.y / u.z, 1 - u.x / u.z - u.y / u.z};\n}\n\nvoid triangle4(vec3* pts, TGAImage&amp; image, TGAColor color) {\n    // \u786e\u5b9a\u5305\u56f4\u76d2\u5927\u5c0f\n    vec2 bboxmin = {\n        image.width() - 1.,\n        image.height() - 1.};  // \u8bb0\u5f55\u5de6\u4e0a\u89d2\uff0c\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c\uff08\u53f3\u4e0b\u89d2\uff09\n    vec2 bboxmax = {0., 0.};    // \u8bb0\u5f55\u53f3\u4e0b\u89d2\uff0c\u521d\u59cb\u5316\u4e3a\u6700\u5c0f\u503c\uff08\u5de6\u4e0a\u89d2\uff09\n    vec2 clamp = {image.width() - 1., image.height() - 1.};  // \u9650\u5236\u5927\u5c0f\n    for (int i = 0; i &lt; 3; i++) {\n        bboxmin.x = max(0., min(bboxmin.x, pts[i].x));\n        bboxmin.y = max(0., min(bboxmin.y, pts[i].y));\n        bboxmax.x = min(clamp.x, max(bboxmax.x, pts[i].x));\n        bboxmax.y = min(clamp.y, max(bboxmax.y, pts[i].y));\n    }\n\n    // \u5224\u65ad\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\n    for (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n        for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n            vec3 bf = barycentric(pts, {(double)x, (double)y, 0.});\n            if (bf.x&lt;0 || bf.y&lt;0 || bf.z&lt;0)\n                continue;\n            image.set(x, y, color);\n        }\n    }\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_5","title":"\u5e73\u9762\u7740\u8272","text":""},{"location":"AbiesNotes/Tinyrenderer/triangle/#_6","title":"\u968f\u673a\u7740\u8272","text":"<p>\u8fd9\u91cc\u81ea\u5df1\u52a0\u4e86<code>vec2i</code>\u7ed3\u6784\u4f53\uff0c\u7528\u6765\u8868\u793a<code>vector&lt;2,int&gt;</code>\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>#include \"model.h\"\n#include \"tgaimage.h\"\nusing namespace std;\n\nvec3 barycentric(vec2i* pts, vec2i p) {\n    vec3 u = cross(vec3{static_cast&lt;double&gt;(pts[0].x - pts[2].x),\n                        static_cast&lt;double&gt;(pts[1].x - pts[2].x),\n                        static_cast&lt;double&gt;(pts[2].x - p.x)},\n                   vec3{static_cast&lt;double&gt;(pts[0].y - pts[2].y),\n                        static_cast&lt;double&gt;(pts[1].y - pts[2].y),\n                        static_cast&lt;double&gt;(pts[2].y - p.y)});\n    if (abs(u.z) &lt; 1)\n        return vec3{-1, 1, 1};\n    return vec3{u.x / u.z, u.y / u.z, 1 - u.x / u.z - u.y / u.z};\n}\n\nvoid triangle4(vec2i* pts, TGAImage&amp; image, TGAColor color) {\n    // \u786e\u5b9a\u5305\u56f4\u76d2\u5927\u5c0f\n    vec2i bboxmin = {\n        image.width() - 1,\n        image.height() - 1};  // \u8bb0\u5f55\u5de6\u4e0a\u89d2\uff0c\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c\uff08\u53f3\u4e0b\u89d2\uff09\n    vec2i bboxmax = {0, 0};   // \u8bb0\u5f55\u53f3\u4e0b\u89d2\uff0c\u521d\u59cb\u5316\u4e3a\u6700\u5c0f\u503c\uff08\u5de6\u4e0a\u89d2\uff09\n    vec2i clamp = {image.width() - 1, image.height() - 1};  // \u9650\u5236\u5927\u5c0f\n    for (int i = 0; i &lt; 3; i++) {\n        bboxmin.x = max(0, min(bboxmin.x, pts[i].x));\n        bboxmin.y = max(0, min(bboxmin.y, pts[i].y));\n        bboxmax.x = min(clamp.x, max(bboxmax.x, pts[i].x));\n        bboxmax.y = min(clamp.y, max(bboxmax.y, pts[i].y));\n    }\n\n    for (int x = bboxmin.x; x &lt;= bboxmax.x; x++) {\n        for (int y = bboxmin.y; y &lt;= bboxmax.y; y++) {\n            vec3 bf = barycentric(pts, {x, y});\n            if (bf.x &lt; 0 || bf.y &lt; 0 || bf.z &lt; 0)\n                continue;\n            image.set(x, y, color);\n        }\n    }\n}\n\nint main(int argc, char** argv) {\n    Model* model = nullptr;\n    if (2 == argc) {\n        model = new Model(argv[1]);\n    } else {\n        model = new Model(\"obj/african_head.obj\");\n    }\n\n    int width = 1000;\n    int height = 1000;\n    TGAImage image(width, height, TGAImage::RGB);\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        vec2i screen_coords[3];\n        for (int j = 0; j &lt; 3; j++) {\n            vec3 v0 = model-&gt;vert(i, j);\n            int x0 = (v0.x + 1.) * width / 2.;\n            int y0 = (v0.y + 1.) * height / 2.;\n            screen_coords[j] = vec2i{x0, y0};\n        }\n        // \u968f\u673a\u751f\u6210\u989c\u8272\n        unsigned char r = rand() % 255;\n        unsigned char g = rand() % 255;\n        unsigned char b = rand() % 255;\n        TGAColor{r, g, b, 255};\n        triangle4(screen_coords, image, TGAColor{r, g, b, 255});\n    }\n    image.write_tga_file(\"tri_head_rand.tga\");\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_7","title":"\u5149\u7167","text":"<p>\u8ba4\u4e3a\u5149\u7167\u5f3a\u5ea6\u7b49\u4e8e\u5149\u5411\u91cf\u4e0e\u4e09\u89d2\u5f62\u6cd5\u7ebf\u5411\u91cf\u7684\u70b9\u79ef\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>int main(int argc, char** argv) {\n    Model* model = nullptr;\n    if (2 == argc) {\n        model = new Model(argv[1]);\n    } else {\n        model = new Model(\"obj/african_head.obj\");\n    }\n\n    int width = 1000;\n    int height = 1000;\n    vec3 light_dir = {0, 0, -1};\n    TGAImage image(width, height, TGAImage::RGB);\n    for (int i = 0; i &lt; model-&gt;nfaces(); i++) {\n        vec2i screen_coords[3];\n        vec3 world_coords[3];\n        for (int j = 0; j &lt; 3; j++) {\n            vec3 v0 = model-&gt;vert(i, j);\n            int x0 = (v0.x + 1.) * width / 2.;\n            int y0 = (v0.y + 1.) * height / 2.;\n            screen_coords[j] = vec2i{x0, y0};\n            world_coords[j] = v0;\n        }\n\n        // \u7528\u53c9\u4e58\u8ba1\u7b97\u6cd5\u5411\u91cf\u5e76\u5355\u4f4d\u5316\n        vec3 n = cross(world_coords[2] - world_coords[0],\n                       world_coords[1] - world_coords[0]);\n        double len = norm(n);\n        vec3 unit_n = normalized(n);\n\n        // \u8ba1\u7b97\u5149\u7167\u5f3a\u5ea6\n        double intensity = unit_n * light_dir;\n        cout &lt;&lt; intensity &lt;&lt; '\\n';\n        if (intensity &gt; 0) {\n            triangle4(screen_coords, image,\n                      TGAColor(intensity * 255, intensity * 255,\n                               intensity * 255, 255));\n        }\n    }\n    image.write_tga_file(\"tri_head_rand.tga\");\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p> <p>\u56e0\u4e3a\u6ca1\u6709\u7528 z-buffer\uff0c\u5634\u5df4\u5185\u8868\u9762\u6e32\u67d3\u540e\u8986\u76d6\u4e86\u5916\u8868\u9762\u7684\u7ed3\u679c\uff08\uff1f\uff09</p>"},{"location":"AbiesNotes/Tinyrenderer/triangle/#_8","title":"\u6df1\u5ea6\u7f13\u51b2","text":"<p>\u6309\u56fe\u50cf\u7684\u5927\u5c0f\u6784\u9020 z-buffer \u6570\u7ec4\uff0c\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77\uff0c\u904d\u5386\u4e09\u89d2\u5f62\u65f6\u5bf9\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u503c\u53d6\u6700\u5927\uff08\u89c4\u5b9a z \u503c\u8d8a\u5927\u8868\u793a\u79bb\u6444\u50cf\u673a\u8d8a\u8fd1\uff09\u3002</p> <p>z-buffer \u7528\u4e8e\u8bb0\u5f55\u6bcf\u4e2a\u50cf\u7d20\u7684\u6df1\u5ea6\uff0c\u4fdd\u8bc1\u7ed8\u5236\u524d\u9762\u7684\u56fe\u5f62\u3001\u906e\u6321\u540e\u9762\u7684\u56fe\u5f62\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>// \u8ba1\u7b97zbuffer\ndouble z = 0.;\nfor (int k = 0; k &lt; 3; k++) {\n    z += pts[k].z * bc[k]; // \u7528\u91cd\u5fc3\u5750\u6807\u5f97\u5230\u6df1\u5ea6\u7684\u63d2\u503c\n}\nif (z &gt; zbuffer[static_cast&lt;int&gt;(x + y * width)]) {\n    zbuffer[static_cast&lt;int&gt;(x + y * width)] = z;\n    image.set(x, y, color); // \u5f53\u8ddd\u79bb\u66f4\u8fd1\u65f6\u7ed8\u5236\n}\n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p> <p>Zbuffer\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"AbiesNotes/Vision%20Course/CV01_introduction/","title":"CV01 introduction","text":"<p>\u804a\u5929\u8bfe\uff0c\u8df3\u8fc7</p> <p>\u8d76\u8fdb\u5ea6\u53bb\u5566 (\u0e05\uff61\u2022\u0301\ufe3f\u2022\u0300\uff61\u0e05)</p>"},{"location":"AbiesNotes/Vision%20Course/CV02_camera/","title":"Camera","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 442 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV02_camera/#lec-02-camera","title":"Lec 02 Camera","text":""},{"location":"AbiesNotes/Vision%20Course/CV02_camera/#_1","title":"\u6210\u50cf","text":"<p>\u5c0f\u5b54\u6210\u50cf\uff1a\u6bcf\u4e2a\u70b9\u53d1\u51fa\u7684\u5149\u7ebf\u53ea\u80fd\u8fbe\u5230\u7279\u5b9a\u7684\u70b9\uff0c\u4e2d\u95f4\u7684\u5b54\u4e3a\u5149\u5708\uff08aperture\uff09 \u5b54\u8fc7\u5927\uff1a\u5149\u675f\u7a7f\u8fc7\uff0c\u6563\u5c04\u6210\u5149\u6591\uff0c\u56fe\u50cf\u6a21\u7cca \u5b54\u8fc7\u5c0f\uff1a\u8fdb\u5149\u5c11\uff0c\u66dd\u5149\u65f6\u95f4\u957f\uff1b\u5e72\u6d89\uff0c\u56fe\u50cf\u518d\u6b21\u53d8\u6a21\u7cca</p> <p>\u6210\u50cf\uff1a\u5c06\u4e09\u7ef4\u53d8\u4e3a\u4e8c\u7ef4 \u4fe1\u606f\u4e22\u5931\uff1a\u8ddd\u79bb\u3001\u89d2\u5ea6\u4fe1\u606f\uff0c\u5e73\u884c\u5173\u7cfb\u4e0d\u88ab\u4fdd\u7559</p>"},{"location":"AbiesNotes/Vision%20Course/CV02_camera/#_2","title":"\u76f8\u673a","text":"<p>\u955c\u5934\uff1a\u7528\u900f\u955c\u805a\u5149\uff0c\u89e3\u51b3\u66dd\u5149\u65f6\u95f4\u957f\u7684\u95ee\u9898</p> \\[\\frac{1}{d_o}+\\frac{1}{d_i}=\\frac{1}{f}\\] <p>\u4e0d\u5728\u7126\u5e73\u9762\u7684\u7269\u4f53\u6709\u4e0d\u540c\u7a0b\u5ea6\u6563\u5c04\u6210\u6a21\u7cca\u5708\uff0c\u4ea7\u751f\u666f\u6df1\u3002\u624b\u673a\u955c\u5934\u6839\u636e\u9510\u5ea6\u8c03\u8282\u7126\u8ddd\u3002</p> <p>\u666f\u6df1\u548c\u5149\u5708\u5927\u5c0f\uff1a\u5149\u5708\u8d8a\u5927\uff0c\u5149\u7ebf\u6563\u5c04\u66f4\u5927\uff0c\u666f\u6df1\u66f4\u6d45</p> <p>f \u6570\uff1a\u7126\u8ddd/\u5149\u5708\u76f4\u5f84\u3002f \u6570\u8d8a\u5c0f\uff0c\u5149\u5708\u8d8a\u5927\u3002</p> <p>\u89c6\u91ce\uff08filed of view\uff0cFOV\uff09\uff1a\u7126\u8ddd\u8d8a\u5927\uff0c\u89c6\u91ce\u8d8a\u7a84\uff0c\u7269\u4f53\u6210\u50cf\u8d8a\u5927 \u7126\u8ddd\u5c0f\u3001\u89c6\u89d2\u5927\uff0c\u5355\u4f4d\u8ddd\u79bb\u5bfc\u81f4\u7684\u6bd4\u4f8b\u5dee\u8ddd\u5927\uff0c\u63a5\u8fd1\u900f\u89c6\u6295\u5f71\uff1b\u800c\u7126\u8ddd\u5927\u3001\u89c6\u89d2\u5c0f\uff0c\u63a5\u8fd1\u5e73\u884c\u6295\u5f71\u3002 \u7ed3\u5408\u5c0f\u5b54\u6210\u50cf\u7406\u89e3</p>"},{"location":"AbiesNotes/Vision%20Course/CV02_camera/#_3","title":"\u76f8\u673a\u7684\u95ee\u9898","text":"<p>\u8272\u5dee\uff08chromatic aberration\uff09\uff1a\u900f\u955c\u5bf9\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u7126\u8ddd\u4e0d\u540c\uff0c\u4e0d\u540c\u989c\u8272\u7684\u5149\u805a\u7126\u5728\u4e0d\u540c\u5e73\u9762\u3002 \u597d\u7684\u955c\u5934\u4f1a\u5728\u524d\u9762\u518d\u52a0\u4e00\u4e2a\u900f\u955c\uff0c\u5f25\u8865\u8272\u6563\u3002</p> <p>\u7578\u53d8\uff08radial distortion\uff09\uff1a\u900f\u955c\u4e2d\u4e0d\u540c\u5165\u5c04\u89d2\u7684\u5149\u7ebf\u6298\u5c04\u504f\u5dee\u4e0d\u540c\uff0c\u5bfc\u81f4\u6210\u50cf\u4e0d\u662f\u4e25\u683c\u7ebf\u6027\uff0c\u5e73\u9762\u7f51\u683c\u53d8\u5f62 \u5149\u7ebf\u79bb\u5149\u8f74\u8d8a\u8fdc\uff0c\u5165\u5c04\u89d2\u8d8a\u5927\uff0c\u6298\u5c04\u8def\u5f84\u504f\u79bb\u7406\u60f3\u4f4d\u7f6e\u8d8a\u660e\u663e\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV02_camera/#_4","title":"\u9488\u5b54\u76f8\u673a\u7684\u7814\u7a76","text":"<p>\u62cd\u6444\u4e24\u5f20\u7167\u7247\uff0c\u4e00\u5f20\u4e3a\u6b63\u5e38\u5149\u7167\uff0c\u4e00\u5f20\u4e3a\u5c0f\u7269\u4f53\u906e\u6321\u540e\u6210\u50cf\u3002 \u4e24\u7167\u7247\u505a\u5dee\uff0c\u5f97\u5230\u8fd1\u4f3c\u9488\u5b54\u76f8\u673a\u3002</p> <p>LCD\uff1a\u4e8c\u7ef4\u9635\u5217\uff0c\u80fd\u901a\u8fc7\u7f16\u7a0b\u6bcf\u4e2a\u50cf\u7d20\u7684\u900f\u660e\u5ea6 \u5728\u9488\u5b54\u4e0a\u8986\u76d6LCD\uff0c\u901a\u8fc7\u63a7\u5236LCD\u50cf\u7d20\u7684\u900f\u660e\u5ea6\u6539\u53d8\u5b54\u7684\u5f62\u72b6\uff0c\u5b9e\u73b0\u540c\u65f6\u591a\u4e2aFOV\u3002  </p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/","title":"Color","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 960 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#lec-03-color","title":"Lec 03 Color","text":""},{"location":"AbiesNotes/Vision%20Course/CV03_color/#_1","title":"\u611f\u5149","text":"<p>\u7ea2\u7eff\u84dd\u7684\u89c6\u9525\u7ec6\u80de\uff0c\u654f\u611f\u8303\u56f4\u4e0d\u540c \u89c6\u6746\u7ec6\u80de\uff1a\u4eae\u5ea6\u6697\u65f6\u611f\u5149\uff08e.g. \u6781\u5149\uff09</p> <p>\u989c\u8272\u662f\u4eba\u773c\u611f\u77e5\u5149\u5728\u4e0d\u540c\u80fd\u91cf\u4e0a\u7684\u5206\u5e03 \u5149\u5206\u5e03\u4e0d\u540c\uff0c\u4eba\u773c\u611f\u77e5\u5230\u7684\u989c\u8272\u53ef\u80fd\u76f8\u540c</p> <p>\u53cd\u5149\uff1a\u989c\u8272\u53d6\u51b3\u4e8e\u5149\u6e90\uff0c\u548c\u7269\u4f53\u5728\u5404\u4e2a\u6ce2\u957f\u4e0a\u7684\u53cd\u5c04\u7387\uff08\u5f3a\u5ea6=\u5149\u7167\u5f3a\u5ea6*\u53cd\u5c04\u7387\uff09 \u901a\u8fc7\u5149\u8c31\u51b3\u5b9a\u5149\u7684\u80fd\u91cf\u5206\u5e03\u3001\u6750\u6599\u7684\u53cd\u5149\u5c5e\u6027\u7b49</p> <p>\u76f8\u673a\uff1a\u5148\u8ba4\u4e3a\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u90fd\u6709\u611f\u5e94\u7ea2\u7eff\u84dd\u7684\u4f20\u611f\u5668 \u7279\u5b9a\u6ce2\u957f\uff1a\u5149\u6e90\u80fd\u91cf*\u7269\u4f53\u53cd\u5c04\u7387*\u4f20\u611f\u5668\u54cd\u5e94\u6bd4\u7387\uff0c\u79ef\u5206</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#_2","title":"\u989c\u8272\u8868\u793a","text":""},{"location":"AbiesNotes/Vision%20Course/CV03_color/#color-mapping-function","title":"Color Mapping Function","text":"<p>\u7528\u7279\u5b9a\u6ce2\u957f\u7684\u7eaf\u8272\u5149\u505a\u989c\u8272\u6620\u5c04\uff0c\u6bcf\u4e2a\u7eaf\u8272\u5149\u5bf9\u5e94\u4e00\u7ec4 RGB\u3002\u7136\u540e\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e9b\u7eaf\u8272\u5149\uff08\u5373\u4e0d\u540c\u6ce2\u957f\u7684\u5149\uff09\u6765\u5f62\u6210\u4e0d\u540c\u7684\u989c\u8272\uff0c\u5f62\u6210\u4e00\u4e2a\u4e09\u7ef4\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u5373\u4e09\u4e2a\u51fd\u6570 Color Mapping Function\u3002 \u6709\u4e86 Color Mapping Function \u540e\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4efb\u610f\u9891\u8c31\u7ec4\u5408\u7684\u5149\u9700\u8981\u7528\u4ec0\u4e48 RGB \u63cf\u8ff0\u3002\u5c06\u6bcf\u4e2a\u90e8\u5206\u6ce2\u957f\u5bf9\u5e94\u7684\u51fd\u6570\u503c\u76f8\u52a0\u3002</p> <p>\u4e3a\u4ec0\u4e48\u80fd\u76f4\u63a5\u76f8\u52a0\uff1f \u4eba\u773c\u5bf9\u989c\u8272\u7684\u611f\u77e5\u662f\u7ebf\u6027\u7684\uff0c\u5373\u8272\u5149\u7684\u52a0\u6cd5\u6027</p> <p>Cons\uff1a\u5bf9\u4e8e RGB \u8272\u5f69\u6a21\u578b\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7ebf\u6027\u7ec4\u5408\u53ef\u80fd\u4f1a\u5f97\u5230\u8d1f\u503c\u3002 \u7531\u4e8e\u4eba\u773c\u611f\u5149\uff0c\u7eaf\u8272\u5149\u8bd5\u9a8c\u65f6\uff0c\u4e0d\u80fd\u7528\u6b63\u503c\u7684 RGB \u7ec4\u5408\u5f97\u5230\u76f8\u540c\u989c\u8272\uff0c\u9700\u8981\u5c06\u67d0\u79cd\u989c\u8272\u589e\u52a0\u5230\u7eaf\u8272\u5149\u624d\u80fd\u5b8c\u5168\u5339\u914d\u3002\u8fd9\u79cd\u589e\u52a0\u7684\u5149\u7684\u503c\u4e3a\u8d1f\u503c\u3002 \uff08\u89c6\u9525\u7ec6\u80de\u7684\u654f\u611f\u533a\u95f4\u6709\u8f83\u5927\u91cd\u53e0\uff1f\uff09</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#cie-xyz-color-space","title":"CIE XYZ Color Space","text":"<p>\u5bf9\u539f\u5148\u7684 RGB \u4e09\u7ef4\u5750\u6807\u53d8\u6362\u4e3a XYZ\uff1a\u53d6\u51fa\u8d1f\u6570\uff0cY \u503c\u548c\u4eba\u773c\u5bf9\u660e\u4eae\u5ea6\u7684\u611f\u77e5\u6b63\u76f8\u5173</p> <p>XYZ \u989c\u8272\u662f\u6807\u51c6\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u800c RGB \u4e0d\u4e00\u5b9a\u51c6\u786e\u3002\u56e0\u4e3a RGB \u53d6\u51b3\u4e8e\u5728\u7a7a\u95f4\u4e2d\u53d6\u54ea\u4e09\u4e2a\u70b9\u4e3a\u57fa\u51c6\uff0c\u4e0d\u540c\u516c\u53f8\u6709\u4e0d\u540c\u6807\u51c6\u3002 sRGB \u4e5f\u662f\u6807\u51c6\u7684\uff0c\u548c XYZ \u6709\u7ebf\u6027\u7684\u6362\u7b97\u5173\u7cfb</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#yuv-color-space","title":"YUV Color Space","text":"<p>\u901a\u8fc7\u77e9\u9635\u5bf9 RGB \u8f6c\u6362\uff0c\u7528\u4e8e\u56fe\u7247\u538b\u7f29</p> <p>Y \u901a\u9053\uff1a\u8868\u793a\u4eae\u5ea6\uff08\u660e\u4eae\u5ea6\uff09\u4fe1\u606f\uff0c\u76f4\u63a5\u5f71\u54cd\u56fe\u50cf\u7684\u660e\u6697\u611f\u3002 UV \u901a\u9053\uff1a\u8868\u793a\u8272\u5ea6\u4fe1\u606f\uff0c\u5305\u542b\u989c\u8272\u7684\u8272\u8c03\u548c\u9971\u548c\u5ea6\u3002</p> <p>\u56fe\u7247\u538b\u7f29\uff1a</p> <p>RGB \u4e2d\uff0c\u4eba\u773c\u5bf9\u7eff\u8272\u901a\u9053\u654f\u611f\u3001\u5bf9\u7ea2\u84dd\u901a\u9053\u4e0d\u654f\u611f\u3002 YUV \u4e2d\uff0c\u56e0\u4e3a\u4eba\u773c\u5bf9\u4eae\u5ea6\u53d8\u5316\u66f4\u52a0\u654f\u611f\uff0c\u800c\u5bf9\u8272\u5f69\u7684\u53d8\u5316\u4e0d\u592a\u654f\u611f\uff0cUV \u901a\u9053\u7684\u6a21\u7cca\u5728\u89c6\u89c9\u4e0a\u53d8\u5316\u4e0d\u660e\u663e\u3002\u53ef\u4ee5\u5728 UV \u901a\u9053\u5927\u91cf\u538b\u7f29\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#cmy-color-space","title":"CMY Color Space","text":"<ul> <li>C\uff1a\u9752\u8272\uff08\u6d88\u9664\u7ea2\u5149\uff09</li> <li>M\uff1a\u54c1\u7ea2\uff08\u6d88\u9664\u7eff\u5149\uff09</li> <li>Y\uff1a\u9ec4\uff08\u6d88\u9664\u84dd\u5149\uff09</li> </ul> <p>RGB \u4e00\u822c\u7528\u4e8e\u52a0\u6cd5\u6df7\u8272\uff08e.g. \u767d\u8272\u80cc\u666f\u6295\u5f71\uff09 CMY \u4e00\u822c\u7528\u4e8e\u51cf\u6cd5\u6df7\u8272\uff08e.g. \u6ee4\u5149\uff09</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#_3","title":"\u5f69\u8272\u7167\u7247","text":"<p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u5728\u9ed1\u767d\u76f8\u673a\uff08\u6355\u6349\u5149\u5f3a\uff09\u524d\u52a0\u6ee4\u5149\u7247 \u663e\u793a\uff1a\u7528\u4e09\u4e2a\u767d\u8272\u706f\u6295\u5230\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u706f\u524d\u653e\u6ee4\u5149\u7247</p> <p>3-CCD \u76f8\u673a\uff1a\u7528\u68f1\u955c\u5c06\u5149\u5206\u6210\u7ea2\u7eff\u84dd\u4e09\u4e2a\u901a\u9053\uff0c\u6bcf\u4e2a\u901a\u9053\u540e\u653e\u4f20\u611f\u5668</p> <p>Bayer Pattern\uff1a\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u76d6\u7ea2\u6216\u7eff\u6216\u84dd\u6ee4\u5149\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5176\u4f59\u4e24\u4e2a\u989c\u8272\u7528\u63d2\u503c\uff08Demodaicing\uff09\u83b7\u5f97 \u7eff\u8272\u7684\u50cf\u7d20\u66f4\u591a\uff0c\u56e0\u4e3a\u4eba\u773c\u5bf9\u7eff\u8272\u654f\u611f\uff0c\u91c7\u6837\u9891\u7387\u8981\u66f4\u9ad8</p>"},{"location":"AbiesNotes/Vision%20Course/CV03_color/#_4","title":"\u989c\u8272\u7684\u7814\u7a76","text":"<p>Switchable Primary Colors\uff1a</p> <p>\u7528\u4e24\u5c42\u9519\u4f4d\u7684 CMY \u6ee4\u5149\u7247\u3002\u8c03\u6574\u9519\u4f4d\u7684\u65b9\u5f0f\uff0c\u5f97\u5230\u4e0d\u540c\u989c\u8272\u7a7a\u95f4\u3002</p> <p>CMY \u7684\u597d\u5904\uff1a\u5149\u7ebf\u901a\u8fc7\u7387\u9ad8\uff0c\u73af\u5883\u6697\u65f6\u4fe1\u566a\u6bd4\u66f4\u597d RGB \u7684\u597d\u5904\uff1a\u989c\u8272\u8fd8\u539f\u80fd\u529b\u5f3a</p> <p>Polarization Camera\uff1a</p> <p>\u5728\u4f20\u611f\u5668\u524d\u52a0\u504f\u632f\u819c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684\u504f\u632f\u65b9\u5411\u4e0d\u540c\u3002 \u7528\u504f\u632f\u4fe1\u606f\u4e09\u7ef4\u91cd\u5efa</p> <p>Multispectral Camera\uff1a</p> <p>\u7528\u76f8\u52a0\u62cd\u6444\u5149\u5728\u6bcf\u4e2a\u9891\u6bb5\u7684\u80fd\u91cf</p> <p>\u7b80\u5355\u7684\u6539\u9020\uff1a\u6709\u5f88\u591a\u5c0f\u5b54\u7684\u906e\u6321\u7269 + \u68f1\u955c\u6563\u5c04 \u6bcf\u4e2a\u5c0f\u5b54\u900f\u8fc7\u7684\u5149\u6563\u5c04\u6210\u4e00\u675f\u5f69\u8679\uff0c\u7528\u4f20\u611f\u5668\u63a5\u6536\u3002\u8ddd\u79bb\u8d8a\u5927\u8bb0\u5f55\u7684\u50cf\u7d20\u8d8a\u591a\uff0c\u7a7a\u95f4\u5206\u8fa8\u7387\u9ad8\u3001\u4f46\u9891\u8c31\u5206\u8fa8\u7387\u4f4e</p> <p>\u5e94\u7528\uff1a</p> <ul> <li>\u6d3b\u4f53\u68c0\u6d4b\uff0c\u76ae\u80a4\u5728\u4e0d\u540c\u6ce2\u957f\u7684\u53cd\u5c04\u7387\u6709\u7279\u5b9a\u7684\u7279\u70b9  </li> <li>\u4e0d\u540c\u58a8\u6c34\u7684\u53cd\u5c04\u7387\u7279\u70b9\u4e0d\u540c\uff0c\u68c0\u6d4b\u7b14\u8bb0\u5148\u540e</li> </ul>"},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/","title":"HDR","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 672 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#lec-04-radiometric-calibration-hdr","title":"Lec 04 Radiometric Calibration &amp; HDR","text":""},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#_1","title":"\u8f90\u5c04\u6821\u51c6","text":""},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#_2","title":"\u50cf\u7d20\u503c\u542b\u4e49","text":"<ul> <li>Radiance\uff1a\u5355\u4f4d\u9762\u79ef\u3001\u5355\u4f4d\u65f6\u95f4\u53d1\u5c04/\u63a5\u6536\u7684\u80fd\u91cf</li> <li>Irradiance\uff1a\u5355\u4f4d\u9762\u79ef\u3001\u5355\u4f4d\u65f6\u95f4\u3001\u5355\u4f4d\u7a7a\u95f4\u89d2\u7684\u80fd\u91cf</li> </ul> <p>\u4ece Radiance \u5230\u50cf\u7d20\u503c\uff1a</p> <ol> <li>Radiance \u7ecf\u8fc7\u955c\u5934\uff0c\u5728 sensors \u4e0a\u5f62\u6210 Irradiance\u3002</li> <li>\u66dd\u5149\u91cf Exposure = Irradiance * Time\uff0c\u5f97\u5230\u5149\u7684\u80fd\u91cf\u5927\u5c0f</li> <li>\u80f6\u7247\u611f\u5149\u548c\u8f93\u5165\u80fd\u91cf\u6709\u975e\u7ebf\u6027\u7684\u5173\u7cfb\uff0c\u800c\u6570\u7801\u76f8\u673a\u7535\u6d41\u5927\u5c0f\u548c\u8f93\u5165\u5149\u80fd\u91cf\u6709\u7ebf\u6027\u5173\u7cfb\u3002</li> <li>\u6a21\u62df\u5f97\u5230\u6570\u5b57\u7684\u8f6c\u6362</li> <li>Re-mapping\uff1aISP\uff08Image Signal Processor\uff09\u5c06\u4f20\u611f\u5668 raw data \u8f6c\u5316\u4e3a pixel\uff0c\u4e0d\u540c\u5382\u5bb6\u505a\u6cd5\u4e0d\u540c</li> </ol> <p>Re-mapping \u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u81ea\u52a8\u767d\u5e73\u8861\uff1a\u4eba\u773c\u6d88\u9664\u5149\u6e90\u5bf9\u767d\u5e73\u8861\u7684\u5f71\u54cd\uff0c\u76f8\u673a\u6a21\u62df\u4eba\u773c\u3002\u4f30\u7b97\u53c2\u6570\uff0cRGB \u5217\u5411\u91cf\u4e58\u5bf9\u89d2\u77e9\u9635\u3002</li> <li>Vignetting\uff08\u6697\u89d2\uff09\uff1a\u6ca1\u6709\u77eb\u6b63\u65f6\u62cd\u767d\u5899\uff0c\u662f\u4e2d\u95f4\u767d\u5468\u56f4\u9ed1\uff08\u89d2\u5ea6\u4e0d\u540c\uff0c\u5355\u4f4d\u9762\u79ef\u7684\u80fd\u91cf\u4e0d\u540c\uff09\u3002\u76f8\u673a\u81ea\u52a8\u4fee\u6b63 vignetting\u3002</li> <li>\u53bb\u566a\uff1a\u627e\u5230\u6709\u91cd\u590d\u6027\u7684\u90e8\u5206\uff0c\u5c06\u6240\u6709\u91cd\u590d\u90e8\u5206\u5e73\u5747</li> </ul> <p>\u50cf\u7d20\u503c\u6570\u503c\u4e0d\u662f Radiance\uff0c\u800c\u662f\u975e\u7ebf\u6027\u6620\u5c04\u3002\u6570\u7801\u76f8\u673a\u66f4\u590d\u6742\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#hdr","title":"HDR","text":""},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#_3","title":"\u539f\u7406","text":"<p>HDR\uff08High Dynamic Range\uff0c\u9ad8\u52a8\u6001\u8303\u56f4\u6210\u50cf\uff09\u662f\u4e00\u79cd\u63d0\u5347\u56fe\u50cf\u4eae\u5ea6\u8303\u56f4\u548c\u7ec6\u8282\u8868\u73b0\u7684\u6280\u672f\u3002\u5b83\u8ba9\u56fe\u50cf\u540c\u65f6\u4fdd\u7559\u660e\u4eae\u533a\u57df\u548c\u9634\u6697\u533a\u57df\u7684\u7ec6\u8282\uff0c\u907f\u514d\u8fc7\u66dd\u6216\u6b7b\u9ed1\u3002</p> <p>\u4f20\u7edf\u62cd\u6444 HDR\uff1a</p> <ul> <li>\u7528\u95ea\u5149\u706f\uff0c\u4f7f\u4eae\u90e8\u548c\u6697\u90e8\u7684\u660e\u4eae\u5ea6\u63a5\u8fd1</li> <li>\u7528\u6ee4\u955c\uff0c\u8fc7\u6ee4\u4eae\u90e8\u7684\u5149\u7ebf</li> </ul> <p>\u6570\u7801 HDR\uff1a</p> <p>\u5047\u8bbe\uff1a\u573a\u666f\u9759\u6001\u3001\u76f8\u673a\u9759\u6b62\u3001\u5149\u7ebf\u9759\u6b62</p> <ol> <li>\u7528\u4e0d\u540c\u7684\u5feb\u95e8\u65f6\u95f4\u6216\u5149\u5708\uff0c\u540c\u65f6\u62cd\u591a\u5f20\u56fe\uff0c\u628a\u573a\u666f\u4e2d\u4e0d\u540c\u90e8\u5206\u7684\u7269\u4f53\u62cd\u6e05\u695a\u3002</li> <li>\u6062\u590d\u76f8\u673a\u54cd\u5e94\u66f2\u7ebf\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u503c\u5b9e\u9645\u5bf9\u5e94\u591a\u5c11\u8f90\u5c04\u4eae\u5ea6\uff0c\u91cd\u5efa HDR \u56fe\u50cf</li> <li>\u5c06\u66dd\u5149\u503c\u91cd\u65b0\u6620\u5c04\u5230 [0,255] \u7684\u6574\u6570\u8303\u56f4\u5185\uff0c\u548c\u663e\u793a\u5668\u9002\u914d</li> </ol> <p>\u600e\u4e48\u6539\u53d8\u66dd\u5149\u5ea6\uff1f</p> <p>\u5feb\u95e8\u65f6\u95f4\u3001\u5149\u5708\u5927\u5c0f\u3001\u6ee4\u955c\u2026\u2026</p> <p>\u5feb\u95e8\u65f6\u95f4\u4e3a\\(\\frac{1}{2^n}\\)\uff0c\u5373 \u215b\uff0c1/16\uff0c1/32\uff0c1/64\uff0c1/128\u2026\u2026 \u4f46\u663e\u793a\u4e3a\u90bb\u8fd1\u7684\u6574\u6570\uff0c\u5982 \u215b\uff0c1/15\uff0c1/30\uff0c1/60\uff0c1/125\u2026\u2026</p>"},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#_4","title":"\u7b97\u6cd5","text":"<p>\u8981\u6c42\u51fd\u6570 f\uff1a</p> \\[ \\begin{align*} \\text{Pixel Value Z}=&amp;f(\\text{Exposure}) \\\\ \\text{Exposure}=&amp;\\text{Irradiance}*\\Delta t \\\\ \\Rightarrow \\log \\text{Exposure}=&amp;\\log\\text{Irradiance}+\\log\\Delta t \\end{align*} \\] <p>\u5b9a\u4e49\u51fd\u6570 g \u4e3a log(f \u7684\u53cd\u51fd\u6570)\uff1a</p> \\[ \\log \\text{Exposure}=\\log f^{-1}(\\text{Z})=\\log\\text{Irradiance}+\\log\\Delta t\\triangleq g(Z) \\] <p>\u4f5c\u56fe\uff0c\u6a2a\u8f74\u4e3a log Exposure\uff0c\u7eb5\u8f74\u4e3a Pixel Value Z \u5219\u6a2a\u8f74\u7684\u6b65\u957f\u4e3a\\(\\log\\Delta t\\)\uff08\u56e0\u4e3a\u5149\u6e90\u9759\u6b62\uff0cIrradiance \u4e0d\u53d8\uff09\uff0c\u7eb5\u8f74\u4e3a Pixel Value Z \u53d8\u5316\u91cf \u7ed8\u5236\u56fe\u50cf\u7684\u8d77\u70b9\u4e0d\u786e\u5b9a\uff08\u56e0\u4e3a Irradiance \u7684\u5177\u4f53\u6570\u503c\u4e0d\u786e\u5b9a\uff09\u3002\u5de6\u53f3\u79fb\u52a8\u5404\u4e2a\u7167\u7247\u7684\u51fd\u6570\u56fe\u50cf\uff0c\u62fc\u63a5\u6210\u5149\u6ed1\u7684\u66f2\u7ebf\u3002</p> <p>\u5bf9\u4e8e\u7b2c j \u5f20\u56fe\u7684\u7b2c i \u4e2a\u50cf\u7d20\uff0c\u4e00\u5171 K \u5f20\u56fe\u3001N \u4e2a\u50cf\u7d20\uff1a</p> \\[\\ln E_i+\\ln\\Delta t_j-g(Z_{ij})=0\\] <ul> <li>\u672a\u77e5\u6570\uff1aN+256\uff08Ei \u5171 N \u4e2a\uff1b\u50cf\u7d20\u503c\u662f [0,255] \u7684\u6574\u6570\uff0cg(Z)\u7531 g(1),g(2)...\u51b3\u5b9a\uff0c\u5171 256 \u4e2a\uff09</li> <li>\u65b9\u7a0b\u6570\uff1aNK</li> </ul> <p>\u5e0c\u671b\u8ba9\u4ee5\u4e0b\u5f0f\u5b50\u5c3d\u53ef\u80fd\u5c0f\uff1a</p> \\[ \\sum_{i=1}^{N}\\sum_{j=1}^{P} \\left[ \\ln E_i + \\ln \\Delta t_j -g(Z_{ij}) \\right]^2+\\lambda \\sum_{z=z_{\\min}}^{z_{\\max}} \\left[ g(z) - \\frac{g(z+1) + g(z-1)}{2} \\right]^2 \\] <ul> <li>\u7b2c\u4e00\u9879\uff1afitting term\uff08\u62df\u5408\u9879\uff09</li> <li> <p>\u7b2c\u4e8c\u9879\uff1asmoothness term\uff08\u5e73\u6ed1\u9879\uff09</p> </li> <li> <p>\u504f\u5bfc\u6570\u4e3a\u96f6</p> </li> </ul> \\[ \\min \\sum\\_{i=1}^{n} (a_i x - b_i)^2 \\; \\rightarrow \\;\\text{linear equations of } \\begin{bmatrix} a_1 \\\\ a_2 \\\\ \\vdots \\\\ a_n \\end{bmatrix} \\mathbf{x} = \\begin{bmatrix} b_1 \\\\ b_2 \\\\ \\vdots \\\\ b_n \\end{bmatrix} \\] <ol> <li>\u89e3\u7ebf\u6027\u65b9\u7a0b</li> </ol> \\[\\mathbf{A} \\mathbf{x} = \\mathbf{b}\\;\\rightarrow\\; \\mathbf{A}^T \\mathbf{A}\\mathbf{x}=\\mathbf{A}^T \\mathbf{b}\\]"},{"location":"AbiesNotes/Vision%20Course/CV04_HDR/#_5","title":"\u6821\u51c6\u7684\u7814\u7a76","text":"<p>Empirical Model of Response Functions</p> <p>\u6807\u5b9a\u4e0d\u540c\u76f8\u673a\u7684\u6821\u51c6\u66f2\u7ebf\uff0cPCA \u5206\u6790\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09\uff0c\u51cf\u5c11\u5b9a\u4e49\u66f2\u7ebf\u7684\u53c2\u6570</p> <p>Radiometric Calibration from a Single Image</p> <p>\u56fe\u50cf\u4e2d\u7684\u8fb9\u754c\u533a\u57df\u4e0d\u540c\u989c\u8272\u6df7\u5408\uff0c\u8c03\u6574\u53c2\u6570\u4f7f\u8fb9\u754c\u989c\u8272\u6df7\u5408\u7684\u66f2\u7ebf\u4e3a\u7ebf\u6027</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/","title":"Lighting","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 585 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#lec-05-reflectance-lighting","title":"Lec 05 Reflectance &amp; Lighting","text":""},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_1","title":"\u53cd\u5c04","text":"<p>\u63d0\u9192</p> <p>\u548c GAMES101 \u90e8\u5206\u91cd\u5408\uff0c\u8fd9\u91cc\u7565\u5199\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#brdf","title":"BRDF","text":"<p>BRDF\uff08Bi-direction Reflectance Distribution Function\uff09\uff1a\\(\\rho(\\omega_o,\\omega_i)\\)</p> <p>\u4e00\u822c\u5728\u5c40\u90e8\u5750\u6807\u7cfb\u4e2d\u8ba1\u7b97\u53cd\u5c04\uff0c\u7269\u4f53\u8868\u9762\u6cd5\u5411\u91cf\u548c Z \u8f74\u91cd\u5408</p> \\[L_o(\\omega_o)=\\sum_i \\rho_{bd}(\\omega_o,\\omega_i)L_i(\\omega_i)\\cos\\theta_i\\] <p>\u5176\u4e2d\\(\\cos\\theta_i\\)\u8868\u793a\u5149\u7167\u503e\u659c\u65f6\u6563\u5f00\u7684\u6548\u679c</p> <p>\u91c7\u96c6 BRDF\uff1a</p> <p>\u7528\u5e73\u9762\u6216\u7403\u9762\u4f5c\u4e3a sample\uff0c\u91c7\u96c6\u540e\u5b58\u50a8\u4e3a\u56db\u7ef4\u6570\u7ec4\uff0c\u6216\u6309\u6a21\u578b\u62df\u5408</p> <p>\u6563\u5c04\uff08Diffuse\uff09\uff1a</p> <p>\u5e38\u7528\u5047\u8bbe\uff1a\u540c\u4e00\u4e2a\u70b9\u5728\u4e0d\u540c\u89c6\u89d2\u7684\u7167\u7247\u4e2d\u76f8\u540c\uff0c\u5373\u5047\u8bbe\u4e3a diffuse\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#lamberts-model","title":"\u6717\u4f2f\u6a21\u578b\uff08Lambert's Model\uff09","text":"<p>\u8868\u73b0\u6563\u5c04\uff0cBRDF \u662f\u5e38\u6570\u3002\u5e38\u7528\u6a21\u578b\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#phongs-model","title":"\u51af\u6c0f\u6a21\u578b\uff08Phong's Model\uff09","text":"<p>\u8868\u73b0\u9ad8\u5149\uff0c\u5149\u7ebf\u96c6\u4e2d\u5728\u955c\u9762\u53cd\u5c04\u65b9\u5411\uff0c\u5176\u4ed6\u65b9\u5411\u6309 cos \u6307\u6570\u7ea7\u51cf\u5f31\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_2","title":"\u5176\u4ed6\u6a21\u578b","text":"<p>\u5fae\u8868\u9762\u7406\u8bba\uff08Microfacet Theory\uff09\uff1a\u9700\u8981\u7edf\u8ba1\u6240\u6709\u5fae\u8868\u9762\u7684\u671d\u5411</p> <ul> <li>Cook-Torrance \u6a21\u578b\uff1a\u5047\u8bbe\u6bcf\u4e2a\u5fae\u8868\u9762\u4e3a\u5b8c\u5168\u955c\u9762</li> <li>Oren-Nayar \u6a21\u578b\uff1a\u5047\u8bbe\u6bcf\u4e2a\u5fae\u8868\u9762\u4e3a\u5b8c\u5168\u7684\u6717\u4f2f\u6a21\u578b</li> </ul>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_3","title":"\u8f90\u5c04\u5b66\u56fe\u50cf\u5206\u6790","text":""},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_4","title":"\u57fa\u4e8e\u6717\u4f2f\u6a21\u578b\u7684\u5149\u5ea6\u7acb\u4f53\u91cd\u5efa","text":""},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#i","title":"\u65b9\u6cd5 I","text":"<p>1. \u6c42\u89e3\u6cd5\u5411\u91cf</p> <p>\u5149\u6e90\u4e0d\u540c\u89d2\u5ea6\uff0c\u62cd\u6444\u591a\u5f20\u7167\u7247,I \u8868\u793a Intensity\u3002</p> <p>\u5df2\u77e5\uff1a</p> \\[ \\begin{cases} I_1 = \\rho \\, \\mathbf{n} \\cdot \\mathbf{l}\\_1 \\\\ I_2 = \\rho \\, \\mathbf{n} \\cdot \\mathbf{l}\\_2 \\\\ I_3 = \\rho \\, \\mathbf{n} \\cdot \\mathbf{l}\\_3 \\end{cases} \\] <p>\u5199\u6210\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ \\begin{pmatrix} I_1 \\\\ I_2 \\\\ I_3 \\end{pmatrix}= \\begin{pmatrix} \\mathbf{l}\\_1^T \\\\ \\mathbf{l}\\_2^T \\\\ \\mathbf{l}\\_3^T \\end{pmatrix} \\rho \\mathbf{n} \\] <p>\u8bb0\uff1a</p> \\[ \\mathbf{I} = \\begin{pmatrix} I_1 \\\\ I_2 \\\\ I_3 \\end{pmatrix}, \\quad L =\\begin{pmatrix} \\mathbf{l}\\_1^T \\\\ \\mathbf{l}\\_2^T \\\\ \\mathbf{l}\\_3^T \\end{pmatrix}, \\quad \\mathbf{b} = \\rho \\mathbf{n} \\] <p>\u5219\uff1a</p> \\[ \\mathbf{I} = L \\mathbf{b} \\] <p>\u7531\u4e8e \\( L,\\mathbf{I}\\) \u5df2\u77e5\uff0c\u53ef\u5f97\uff1a</p> \\[ \\mathbf{b} = L^{-1} \\mathbf{I} \\] <p>\u6c42\u5f97\uff1a</p> \\[ \\rho = \\|\\mathbf{b}\\|\\; , \\;\\mathbf{n} = \\frac{1}{\\rho} \\mathbf{b} \\] <p>2. \u7531\u6cd5\u5411\u91cf\u91cd\u5efa\u8868\u9762</p> <p>\u5047\u8bbe\u66f2\u9762\u4e3a\\((x, y, Z(x,y))\\)\uff0c\u5219\u5176\u6cd5\u5411\u91cf\u4e3a\uff1a</p> \\[ \\mathbf{n}(x,y) = \\frac{1}{\\sqrt{Z_x^2 + Z_y^2 + 1}} \\begin{pmatrix} -Z_x \\\\ -Z_y \\\\ 1 \\end{pmatrix} \\] <p>\u82e5\u8bb0\uff1a</p> \\[ \\mathbf{n}(x,y) = \\begin{pmatrix} n_1(x,y) \\\\ n_2(x,y) \\\\ n_3(x,y) \\end{pmatrix} \\] <p>\u5219\u53ef\u5f97\u504f\u5bfc\u5173\u7cfb\uff1a</p> \\[ Z_x(x,y) = \\frac{n_1(x,y)}{n_3(x,y)}, \\quad Z_y(x,y) = \\frac{n_2(x,y)}{n_3(x,y)} \\] <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6cbf\u8def\u5f84\u79ef\u5206\u6765\u6062\u590d\u4efb\u610f\u70b9\u7684\u8868\u9762\u9ad8\u5ea6\uff0c\u4f8b\u5982\uff1a</p> \\[ Z(x, y) = \\int_0^x Z_x(s, y) \\, ds + \\int_0^y Z_y(x, t) \\, dt + c \\] <p>\u7531\u4e8e\u566a\u58f0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6cd5\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff01</p> <p>\u6211\u4eec\u5fc5\u987b\u6709\uff1a</p> \\[ \\frac{\\partial Z_x(x, y)}{\\partial y} = \\frac{\\partial Z_y(x, y)}{\\partial x} \\]"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#ii","title":"\u65b9\u6cd5 II","text":"<p>\u5207\u5411\u91cf $ \\boldsymbol{v}_1 $ \u4e0e\u6cd5\u5411\u91cf $ \\boldsymbol{n} $ \u5782\u76f4\uff1a</p> \\[ \\begin{aligned} \\boldsymbol{v}_1 &amp;= \\big(x+1, y, Z(x+1, y)\\big) - \\big(x, y, Z(x, y)\\big) \\\\ &amp;= \\big(1, 0, Z(x+1, y) - Z(x, y)\\big) \\end{aligned} \\] \\[ \\begin{aligned} 0 &amp;= n \\cdot v_1 \\\\ &amp;= (n_1, n_2, n_3) \\cdot \\big(1, 0, Z(x+1, y) - Z(x, y)\\big) \\\\ &amp;= n_1 + n_3 \\big(Z(x+1, y) - Z(x, y)\\big) \\end{aligned} \\] <p>$ v_2 $ \u5f97\u5230\u4e00\u4e2a\u7c7b\u4f3c\u7684\u65b9\u7a0b\uff0c\u6bcf\u4e2a\u6cd5\u5411\u91cf\u5bf9 $ Z $ \u7ed9\u51fa\u4e24\u4e2a\u7ebf\u6027\u7ea6\u675f\uff0c\u901a\u8fc7\u6c42\u89e3\u77e9\u9635\u65b9\u7a0b\u8ba1\u7b97 $ Z $ \u7684\u503c</p> <p>\u7a00\u758f\u77e9\u9635\uff0c\u7528 Conjugated Gradient algorithm \u6c42\u89e3\u3002</p> <p>\u4ecd\u7136\u5b58\u5728\u4f4e\u9891\u5931\u771f\uff08low-frequency distortion\uff09\u7684\u95ee\u9898\uff0c\u6574\u4f53\u5f62\u72b6\u53ef\u80fd\u503e\u659c\u3001\u626d\u66f2\u7b49\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_5","title":"\u6355\u6349\u5149\u7ebf","text":"<p>\u65b9\u5411\u5149\uff1a</p> <p>\u955c\u9762\u7403\u4f53\uff0c\u7528\u53cd\u5c04\u5149\u89d2\u5ea6\u63a8\u5165\u5c04\u5149</p> <p>\u73af\u5883\u5149\uff1a</p> <p>\u73af\u5883\u5149\u5b9a\u4e49\u4e3a\u7167\u5c04\u5230\u7269\u4f53\u8868\u9762\u7684\u7403\u9762\u51fd\u6570\u3002</p> <p>\u7c7b\u4f3c\u5149\u7ebf\u8ffd\u8e2a\u65b9\u6cd5</p>"},{"location":"AbiesNotes/Vision%20Course/CV05_lignting/#_6","title":"\u76f8\u5173\u7814\u7a76","text":"<p>Eyes for Relighting</p> <p>\u4eba\u50cf\u7167\u7247\u4e2d\uff0c\u5206\u6790\u773c\u7403\u7528\u4e8e\u6355\u6349\u73af\u5883\u5149\u6e90 \u8fd8\u53ef\u7528\u4e8e\u4f30\u8ba1\u4eba\u773c\u770b\u5230\u7684\u573a\u666f</p> <p>Faces as Lighting Probes via Unsupervised Deep Highlight Extraction</p> <p>\u7528\u4eba\u8138\u4ee3\u66ff\u955c\u9762\u7403\u9762\uff0c\u4f30\u8ba1\u5149\u7ebf\u65b9\u5411</p> <p>\u7528\u795e\u7ecf\u7f51\u7edc\u5206\u79bb\u4eba\u8138\u7684\u9ad8\u5149\uff0c\u6355\u6349\u5230\u7684\u56fe\u662f BRDF \u548c\u73af\u5883\u5149\u5377\u79ef\u7684\u6548\u679c\u3002\u4f5c\u7528\u53cd\u5377\u79ef\uff0c\u5f97\u5230\u4f30\u8ba1\u7ed3\u679c</p> <p>Retrospective sensing for the measurement of surface texture and shape</p> <p>\u8f6f\u80f6\u4e0a\u8986\u76d6\u91d1\u5c5e\u7c89\uff0c\u7528\u706f\u7167\u4eae\u8f6f\u80f6\u7684\u53e6\u4e00\u9762\uff0c\u7269\u4f53\u538b\u5728\u8f6f\u80f6\u4e0a\u65f6\u6355\u6349\u8868\u9762</p> <p>\u53ef\u7528\u4e8e\u673a\u5668\u4eba\u76ae\u80a4\u7684\u4f20\u611f\u5668</p>"},{"location":"AbiesNotes/Vision%20Course/CV06_filters/","title":"Filters","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 552 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV06_filters/#lec-06-filters","title":"Lec 06 Filters","text":""},{"location":"AbiesNotes/Vision%20Course/CV06_filters/#_1","title":"\u6ee4\u6ce2\u5668","text":"<p>\u7528\u9886\u57df\u4e2d\u6240\u6709\u50cf\u7d20\u7684\u52a0\u6743\u5e73\u5747\u66ff\u6362\u4e2d\u5fc3\u50cf\u7d20\u7684\u989c\u8272\u503c\u3002 \u4e00\u822c\u4f7f\u7528\u7a7a\u57df\u4e0d\u53d8\uff08spatially-invariant\uff09\u7684\u6838</p> <ul> <li>Box filter: \u7b80\u5355\u5e73\u5747</li> <li>Gaussian filter\uff1a\u4e2d\u5fc3\u7684\u6743\u503c\u5927</li> </ul> <p>\u56fe\u50cf\u8fb9\u754c\u7684\u5e73\u5747\uff1a\u50cf\u7d20\u503c\u62d3\u5c55\uff0c\u5916\u56f4\u52a0\u96f6\uff08zero packing\uff09\u6216\u7279\u5b9a\u989c\u8272\u503c</p> <p>\u5b57\u4f53\u7684\u8f6f\u9634\u5f71\u6548\u679c\uff1a\u539f\u56fe\u50cf\u505a\u9ad8\u65af\u6a21\u7cca\uff0c\u6a21\u7cca\u540e\u7684\u56fe\u50cf\u5411\u65c1\u8fb9\u5e73\u79fb\uff0c\u4e0e\u539f\u56fe\u50cf\u53e0\u52a0</p>"},{"location":"AbiesNotes/Vision%20Course/CV06_filters/#_2","title":"\u8fb9\u7f18\u68c0\u6d4b","text":"<p>\u8fb9\u7f18\u5904\u56fe\u50cf\u4fe1\u53f7\u4e0d\u8fde\u7eed\u3002 \u7528\u5dee\u5206\u4ee3\u66ff\u5bfc\u6570\uff08-1 0 1 \u7684 1*3 filter\uff09\uff0c\u5bfc\u6570\u503c\u5927\u4e8e\u9608\u503c\u5219\u8ba4\u4e3a\u662f\u8fb9\u7f18</p> <p>\u95ee\u9898\uff1a\u56fe\u50cf\u6709\u566a\u58f0\uff0c\u566a\u58f0\u5904\u5bfc\u6570\u5927 \u89e3\u51b3\uff1a\u5148 Gaussian\uff0c\u518d derivative\u3002\u4e24\u8005\u5408\u5e76\u4e3a DoG</p> <p>Sobel Filter\uff1a</p> <p>Blurring * 1D derivative filter</p> <p>\u6c34\u5e73 Sobel filter\uff1a</p> \\[\\begin{bmatrix}1&amp;0&amp;-1\\\\2&amp;0&amp;-2\\\\1&amp;0&amp;-1\\end{bmatrix}\\] <p>\u7ad6\u76f4 Sobel filter\uff1a</p> \\[\\begin{bmatrix}1&amp;2&amp;-1\\\\0&amp;0&amp;0\\\\-1&amp;-2&amp;-1\\end{bmatrix}\\] <p>\u8ba1\u7b97\u56fe\u50cf\u68af\u5ea6\uff1a</p> <p>\u9009\u62e9 derivative filter\uff0c\u4e0e\u56fe\u50cf\u505a\u5377\u79ef\uff0c\u8ba1\u7b97 gradient, direction, amplitude\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u65b9\u5411\u53d8\u5316\u5927\u5c31\u8ba4\u4e3a\u662f\u8fb9\u7f18</p> <p>\u5f97\u5230\u7684\u8fb9\u7f18\u53ef\u80fd\u5bbd\u5ea6\u5927\u3002\u6bcf\u6b21\u68c0\u6d4b\u4e0a\u4e0b\u7684\u50cf\u7d20\u5bf9\u8fb9\u7f18\u7684\u54cd\u5e94\u662f\u5426\u6bd4\u5f53\u524d\u50cf\u7d20\u66f4\u5927\uff0c\u4fdd\u7559\u54cd\u5e94\u6700\u5927\u7684\u70b9\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV06_filters/#bilateral-filter","title":"\u53cc\u8fb9\u6ee4\u6ce2\uff08Bilateral Filter\uff09","text":"<p>\u9ad8\u65af\u6ee4\u6ce2\u65f6\u53bb\u9664\u566a\u58f0\uff0c\u4f46\u8fb9\u754c\u53d8\u6a21\u7cca\u3002</p> <p>\u53cc\u8fb9\u6ee4\u6ce2\uff1a\u7a7a\u95f4\u4e0a\u63a5\u8fd1\u4e14\u989c\u8272\u503c\u63a5\u8fd1\uff0c\u5219\u6743\u503c\u5927\u3002\u5305\u542b spatial Gauss \u548c range domain Gauss \u4e0d\u540c\u50cf\u7d20\u7684\u6838\u4e0d\u540c\uff0c\u662f spatially-varient \u5b9e\u73b0\u53bb\u566a\u7684\u540c\u65f6\u4fdd\u7559\u660e\u663e\u7684\u8fb9\u754c</p> \\[J(x)=\\frac{1}{k(x)}\\sum_{\\xi}f(x,\\xi)g(I(\\xi)-I(x))I(\\xi)\\] <p>\u5176\u4e2d k(x)\u4e3a\u5f52\u4e00\u5316\u53c2\u6570\uff0c\u4fdd\u8bc1\u6743\u503c\u4e4b\u548c\u4e3a 1</p> <p>\u589e\u5f3a\u7ec6\u8282\uff1a\u6ee4\u6ce2\u524d\u540e\u56fe\u50cf\u505a\u5dee\u4e3a\u7ec6\u8282\u7684\u50cf\u7d20\u503c\uff0c\u5c06\u7ec6\u8282\u50cf\u7d20\u503c\u4e58 2 \u52a0\u5230\u539f\u56fe\u50cf</p>"},{"location":"AbiesNotes/Vision%20Course/CV06_filters/#_3","title":"\u6ee4\u6ce2\u7684\u7814\u7a76","text":"<p>HDR \u56fe\u50cf\u7684\u663e\u793a</p> <p>HDR \u8303\u56f4\u53ef\u80fd\u8fc7\u5927\uff0c\u9700\u8981\u91cd\u65b0\u6620\u5c04\u5230 0-255 \u7684 LDR\u3002</p> <ol> <li>gamma \u6620\u5c04\uff1a\u5c06 x \u6620\u5c04\u4e3a \\(x^{\\gamma}\\)\u3002\u4eae\u5ea6\u9ad8\u7684\u90e8\u5206\u538b\u7f29\u5230\u5c0f\u8303\u56f4\uff0c\u4eae\u5ea6\u4f4e\u7684\u90e8\u5206\u5c55\u5f00</li> <li>intensity \u7684 gamma \u6620\u5c04\uff1a\u5c06 intensity \u548c color \u5206\u5f00\uff0c\u5982\u8f6c\u6362\u4e3a YUV \u683c\u5f0f\uff0c\u5728 Y \u901a\u9053\uff08\u4eae\u5ea6\uff09\u538b\u7f29\u3001UV \u901a\u9053\uff08\u989c\u8272\uff09\u4fdd\u6301\u3002\u7ec6\u8282\u5904\u5c0f\u7684\u8d77\u4f0f\u88ab\u53bb\u6389\uff0c\u7ec6\u8282\u4e22\u5931\u3002</li> <li>\u7528 Gaussian \u6ee4\u6ce2\u5206\u79bb\u7ec6\u8282\uff1a\u5206\u79bb\u4e0d\u5b8c\u5168\uff0c\u7269\u4f53\u8fb9\u7f18\u7a7a\u7f3a\u3002</li> <li>\u7528\u53cc\u8fb9\u6ee4\u6ce2\u4ee3\u66ff\u9ad8\u65af\u6ee4\u6ce2</li> </ol> <p>Digital Photography with Flash and No-flash Image Pairs</p> <p>\u76f8\u673a\u4e0d\u52a8\uff0c\u6253\u95ea\u5149\u706f\u548c\u4e0d\u7528\u95ea\u5149\u706f\u62cd\u4e24\u5f20\u3002\u95ea\u5149\u706f\u56fe\u566a\u58f0\u66f4\u4f4e\uff0c\u4f46\u6709\u8272\u5dee\u3002 Joint bilateral filter\uff1a\u5bf9\u4e0d\u7528\u95ea\u5149\u706f\u7684\u56fe\u4f5c\u53cc\u8fb9\u6ee4\u6ce2\uff0c\u5176\u4e2d range domain Gaussian \u7528\u95ea\u5149\u706f\u7684\u56fe\u3002</p> <p>\u95ea\u5149\u706f\u53ef\u80fd\u5bfc\u81f4\u989d\u5916\u7684\u9ad8\u5149\uff1a\u68c0\u6d4b\u9ad8\u5149\uff0c\u505a\u6210 mask\u3002</p> <p>Guided Image Filtering</p> <p>\u516c\u5f0f\u7565\u3002</p> <p>\u5b9e\u73b0\u53cc\u8fb9\u6ee4\u6ce2\u7684\u6548\u679c\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/","title":"Graph Cut","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 576 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#lec-07-interactive-segmentation-graph-cut","title":"Lec 07 Interactive Segmentation &amp; Graph-Cut","text":"<p>\u76ee\u6807\uff1a\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u7c97\u7cd9\u8fb9\u6846\u63d0\u53d6\u7269\u4f53</p> <p>\u7528\u4e8c\u7ef4\u7f51\u683c\u8868\u793a\u56fe\u50cf\uff0c\u6bcf\u4e2a\u50cf\u7d20\u662f\u7f51\u683c\u7684\u9876\u70b9\uff0c\u548c\u5468\u56f4\u82e5\u5e72\u4e2a\u76f8\u90bb\u7684\u50cf\u7d20\u76f8\u8fde\u3002 \u5c06\u56fe\u50cf\u5206\u5272\u89c6\u4e3a\u4e8c\u5206\u5272\u7684\u95ee\u9898\uff0c\u6839\u636e\u7528\u6237\u8fb9\u6846\u5206\u4e3a\u524d\u666f\u548c\u80cc\u666f</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#1-nn","title":"1-NN \u5206\u7c7b","text":"<p>\u5c06\u6bcf\u4e2a\u50cf\u7d20\u8f6c\u6362\u4e3a RGB \u7a7a\u95f4\u4e2d\u4e09\u7ef4\u7684\u70b9\uff0c\u5206\u522b\u8ba1\u7b97\u548c foreground \u548c background \u7684\u6700\u8fd1\u7684\u8ddd\u79bb\uff0c\u5224\u65ad\u54ea\u4e2a\u66f4\u8fd1\u3002 \u6216\u805a\u7c7b\u5206\u6790\uff0c\u627e\u6700\u8fd1\u7684\u7c7b\u3002</p> <p>\u4f18\u5316 1\uff1a\u5b9a\u4e49\u51fd\u6570\uff0c\u4f7f\u5f97 cost \u6700\u5c0f\u65f6\u5c06\u56fe\u50cf\u4e0a\u6240\u6709\u70b9\u5212\u5206\u4e3a foreground \u548c background \u7528 F \u8868\u793a\u7528\u6237\u6807\u6ce8\u51fa\u7684 foreground\uff0cB \u8868\u793a\u7528\u6237\u6807\u6ce8\u7684 background\uff0ccost \u4e3a 0 \u65f6\u4e3a foreground</p> <p>\u4f18\u5316 2\uff1aMarkov Random Field (MRF)\uff0c\u8003\u8651\u76f8\u90bb\u50cf\u7d20\u7684\u8fde\u7eed\u6027\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#mrf","title":"MRF","text":""},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#mrf_1","title":"MRF \u5b9a\u4e49","text":"<p>\u50cf\u7d20\u4f5c\u4e3a MRF Nodes\uff0c\u8282\u70b9\u95f4\u6709 MRF edges \u76f8\u8fde\u3002\u6bcf\u4e2a\u8282\u70b9\u5206\u522b\u8ba1\u7b97\u5230 foreground \u548c background \u7684 cost\uff08data cost\uff09\u3002\u56e0\u4e3a\u8981\u4f7f\u5168\u5c40 cost \u6700\u5c0f\uff0c\u50cf\u7d20\u7684\u4e24\u4e2a cost \u4e2d\u54ea\u4e2a\u5c0f\u9009\u54ea\u4e2a\u3002</p> <p>\u5728\u8fb9\u4e0a\u4e5f\u5b9a\u4e49 cost function\uff08smooth cost\uff09\uff0c\u8868\u793a\u76f8\u90bb\u8282\u70b9\u7684\u76f8\u4f3c\u7a0b\u5ea6\u3002\u603b\u7684 cost \u4e3a\u4e24\u79cd cost \u76f8\u52a0\u3002</p> <p>Smooth cost:</p> \\[E_2(x_i,x_j)=|x_i-x_j|\\cdot g(C_{ij})\\] <p>\u5176\u4e2d x \u4e3a 0 \u6216 1\uff08\u524d\u666f\u6216\u80cc\u666f\uff09\uff0cC \u8868\u793a color\uff1a</p> \\[g(\\xi)=\\frac{1}{\\xi +1}\\, ,\\, C_{ij}=||C(i)-C_(j)||^2\\] <p>\u8f6c\u5316\u4e3a\u56fe\u7684\u95ee\u9898\uff1a\u90e8\u5206\u8282\u70b9\u6807\u6ce8\u4e3a 0 \u6216 1\uff0c\u5269\u4f59\u70b9\u6709 0\u30011 \u4e24\u79cd\u72b6\u6001\u3002\u627e\u5230\u5168\u5c40\u72b6\u6001 X\uff0c\u4f7f\u603b cost \u6700\u5c0f\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#min-cut-max-flow","title":"Min-cut \u548c Max-flow","text":""},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#max-flow","title":"Max-flow","text":"<p>\u6700\u5927\u6d41\u95ee\u9898\uff0c\u672c\u8d28\u4e0a\u662f\u7ebf\u6027\u89c4\u5212\u95ee\u9898 simplex \u7b97\u6cd5\u6c42\u89e3\uff1a\u4ece\u4e00\u4e2a\u53ef\u884c\u89e3\u51fa\u53d1\uff0c\u6bcf\u6b21\u9009\u4e00\u4e2a\u7ba1\u9053\u589e\u5927\u6d41\u91cf\u3001\u76f4\u5230\u6253\u7834\u67d0\u6761\u7ea6\u675f\u3002\u91cd\u590d\u64cd\u4f5c\u3002\u5177\u4f53\u65b9\u6cd5\u56de\u5fc6 fds\u3002 \u5bf9\u56fe\u7684\u67d0\u4e9b\u5207\u5206\uff0c\u5207\u5272\u8fb9\u4e0a\u7684\u6d41\u91cf\u548c\u7b49\u4e8e\u6700\u5927\u6d41\u91cf\u3002min-cut = max-flow.</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#_1","title":"\u56fe\u50cf\u5206\u5272\u539f\u7406","text":"<p>\u5728\u56fe\u50cf\u4e2d\uff0c\u5c06\u8fb9\u89c6\u4e3a\u7ba1\u9053\uff0c\u8fb9\u7684\u5bb9\u91cf\u4e3a\u8fde\u63a5\u7684\u4e24\u4e2a\u50cf\u7d20\u7684\u76f8\u4f3c\u7a0b\u5ea6\uff0c\u8d8a\u4e0d\u76f8\u4f3c\u5219\u5bb9\u91cf\u8d8a\u5c0f\u3001\u8d8a\u6709\u53ef\u80fd\u88ab\u5207\u5f00\u3002 \u5f15\u5165\u4e24\u4e2a\u989d\u5916\u7684\u8282\u70b9\uff0cFG \u4f5c\u4e3a source\uff0cBG \u4f5c\u4e3a sink\uff0c\u548c\u6bcf\u4e2a\u8282\u70b9\u76f8\u8fde\u3002\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u548c\u5bf9\u5e94\u7684 cost \u8d1f\u76f8\u5173\u3002 \u627e\u5230\u4e00\u4e2a min-cut \u5c06\u56fe\u50cf\u4e00\u5206\u4e3a\u4e8c\uff0c\u548c source \u76f8\u8fde\u7684\u4e3a FG\u3002</p> <p>\u8fd9\u91cc\u7528 max-flow \u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002</p> <p>cost \u8ba1\u7b97\uff1a</p> <p>\u5728 RGB \u7a7a\u95f4\uff0c\u5bf9 FG \u548c BG \u5206\u522b\u62df\u5408\u9ad8\u65af\u5206\u5e03\uff0c\u5bf9\u6bcf\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u4e2d\u5fc3\u8ba1\u7b97\u8ddd\u79bb\u3002</p> <p>\u4f18\u5316\uff1a</p> <p>\u56fe\u50cf\u5206\u6210\u4e0d\u89c4\u5219\u7684 super-pixel\uff0c\u6bcf\u4e2a super-pixel \u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9</p>"},{"location":"AbiesNotes/Vision%20Course/CV07_cut/#_2","title":"\u975e\u4e8c\u8fdb\u5236\u6807\u7b7e","text":"<p>\u5982\u679c\u6807\u7b7e x \u4e0d\u4e00\u5b9a\u662f 0\u30011\uff0c\u4ee4\u6807\u7b7e\u4e3a 1-n</p> <p>Alpha-expansion\uff1a\u5bf9\u6bcf\u4e2a\u50cf\u7d20\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u5207\u6362\u4e3a\u7b2c alpha \u4e2a\u6807\u7b7e\u3002\u662f\u3001\u5426\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u95ee\u9898\u3002 \u4ece\u521d\u59cb\u503c\u5f00\u59cb\u8fed\u4ee3\uff0calpha \u503c\u8f6e\u6d41\u53d6 1-n\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/","title":"Feature Detector","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 681 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/#lec-08-feature-detector","title":"Lec 08 Feature Detector","text":"<p>\u7814\u7a76\u5c40\u90e8\u7279\u5f81\u3002 Feature matching problem\uff1a\u5728\u4e00\u5f20\u56fe\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u53e6\u4e00\u5f20\u56fe\u4e2d\u5339\u914d\u3002\u56fe\u7247\u7684\u89d2\u5ea6\u3001\u5149\u7167\u7b49\u4e0d\u540c\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/#harris","title":"Harris \u89d2\u70b9\u68c0\u6d4b","text":"<p>\u79fb\u52a8 local window\uff0c\u770b\u7a97\u53e3\u4e2d\u7684\u70b9\u662f\u5426\u53d8\u5316\u3002\u89d2\u70b9\u5904\u4efb\u610f\u65b9\u5411\u7684\u79fb\u52a8\u90fd\u80fd\u4f7f\u70b9\u6539\u53d8\u3002</p> <p>\u7528(u,v)\u8868\u793a local window \u7684\u4f4d\u79fb\u3002\u4f4d\u79fb\u524d\u540e\u7a97\u53e3\u4e2d\u7684\u50cf\u7d20\u6c42 SSD\uff08\u5bf9\u5e94\u5143\u7d20\u76f8\u51cf\uff0c\u6c42\u52a0\u6743\u5e73\u65b9\u548c\uff09</p> <p>\u5f53(u,v)\u5f88\u5c0f\u65f6\uff0c\u5bf9 I \u6cf0\u52d2\u5c55\u5f00\uff1a</p> \\[ \\begin{aligned} E(u,v) &amp;\\approx \\sum_{x,y} w(x,y) [I(x,y) + u I_x + v I_y - I(x,y)]^2 \\\\ &amp;= \\sum_{x,y} w(x,y) [u I_x + v I_y]^2 \\\\ &amp;= \\begin{pmatrix} u &amp; v \\end{pmatrix} \\begin{pmatrix} A &amp; B \\\\ B &amp; C \\end{pmatrix} \\begin{pmatrix} u \\\\ v \\end{pmatrix} \\end{aligned} \\] <p>\u5176\u4e2d\uff1a</p> \\[ A = \\sum_{x,y} w(x,y) I_x^2, \\quad B = \\sum_{x,y} w(x,y) I_x I_y, \\quad C = \\sum_{x,y} w(x,y) I_y^2 \\] <p>\u80fd\u91cf\u51fd\u6570\u662f\u4e8c\u6b21\u66f2\u9762\uff0c\u8f6c\u6362\u4e3a\u5224\u65ad\u77e9\u9635 M\u3002</p> <p>\u4ee4\u80fd\u91cf\u51fd\u6570\u7684\u503c\u4e3a\u5e38\u6570\uff0c\u5373\u7528\u5e73\u9762\u622a\u4e8c\u6b21\u66f2\u9762\uff0c\u5f97\u5230\u692d\u5706\u3002\u692d\u5706\u7684\u957f\u77ed\u8f74\u7684\u5927\u5c0f\u5bf9\u5e94 M \u7684\u4e24\u4e2a\u7279\u5f81\u503c\\(\\lambda\\)\uff08\u548c\u5012\u6570\u6210\u6b63\u6bd4\uff09\uff0c\u65b9\u5411\u5bf9\u5e94\u4e24\u4e2a\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4e5f\u662f\u80fd\u91cf\u589e\u957f\u6700\u5feb\u548c\u6700\u6162\u7684\u65b9\u5411\u3002</p> <p>\u7531\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u901a\u8fc7\u6c42\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u627e\u5230\u80fd\u91cf\u589e\u957f\u6700\u5feb\u548c\u6700\u6162\u7684\u65b9\u5411\u3002\u82e5\u8981\u627e\u89d2\u70b9\uff0c\u5e0c\u671b\u5bf9\u4e8e\u4efb\u4f55(u,v)\uff0c\u5373\u4f7f\u662f\u589e\u957f\u6700\u6162\u7684\u65b9\u5411\u4e5f\u6709\u8f83\u5927\u7684\u589e\u957f\u901f\u5ea6\uff0c\u5373\u7279\u5f81\u503c\u8f83\u5927\u3002</p> <p>\u5355\u72ec\u6c42\u7279\u5f81\u503c\u8ba1\u7b97\u5927\uff0c\u8bbe\u8ba1 Harris operator\uff1a</p> \\[ f = \\frac{\\lambda_{\\max} \\lambda_{\\min}}{\\lambda_{\\max} + \\lambda_{\\min}} = \\frac{\\det(M)}{\\text{trace}(M)} \\] <p>\u627e\u5230\u7684\u4ecd\u7136\u4e0d\u662f\u5355\u72ec\u7684\u70b9\uff0c\u800c\u662f\u4e00\u7247\u533a\u57df\u3002\u9700\u8981\u901a\u8fc7 non-maximum suppression \u786e\u5b9a\u4e2d\u5fc3\u70b9\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <p>\u8ba1\u7b97 f\uff0c\u7528\u9608\u503c\u4e8c\u503c\u5316\uff0cnon-maximum suppression</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/#_1","title":"\u4e0d\u53d8\u6027","text":"<ul> <li>\u65cb\u8f6c\u4e0d\u53d8\u6027\uff1a\u65cb\u8f6c\u540e\u692d\u5706\u957f\u77ed\u8f74\u7684\u957f\u5ea6\u4e0d\u53d8</li> <li>\u5149\u7167\u5f3a\u5ea6\u6539\u53d8\uff1a\u77e9\u9635 M \u7531\u5bfc\u6570\u6784\u6210\uff0c\u4e0d\u53d8</li> <li>\u4f38\u7f29\u4e0d\u53d8\u6027\uff1a\u77e9\u9635 M \u6539\u53d8\uff0c\u5f71\u54cd\u5c0f</li> <li>\u5c3a\u5ea6\uff08\u5206\u8fa8\u7387\uff09\u53d8\u5316\uff1f\u6ca1\u6709\u5c3a\u5ea6\u4e0d\u53d8\u6027\uff0c\u901a\u8fc7\u6539\u53d8 window \u5927\u5c0f\u89e3\u51b3\u3002</li> </ul> <p>\u8bc4\u4ef7 detectors\uff1a</p> <p>\u68c0\u6d4b\u53ef\u91cd\u590d\u6027\uff08repeatability\uff09\u3002\u540c\u4e00\u7269\u4f53\u4e0d\u540c\u7684\u56fe\uff0c\u80fd\u68c0\u6d4b\u5230\u76f8\u540c\u7684\u7279\u5f81\u70b9\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/#_2","title":"\u5c3a\u5ea6\u53d8\u5316","text":"<p>\u60f3\u6cd5\uff1a\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u505a\u4e00\u7cfb\u5217\u8bd5\u9a8c\uff0c\u6d4b\u8bd5\u4e0d\u540c\u7a97\u53e3\u7684\u54cd\u5e94\u503c\uff0c\u9009\u53d6\u54cd\u5e94\u503c\u6700\u5927\u7684\u7a97\u53e3\u4e3a\u6700\u7ec8\u7a97\u53e3\u5927\u5c0f\u3002</p> <p>\u5177\u4f53\u505a\u66f2\u7ebf\u592a\u9ebb\u70e6\u3002\u6bcf\u6b21\u5c06\u957f\u5bbd\u7f29\u5c0f\u56fa\u5b9a\u503c\uff08\u4e00\u822c\u4e3a\\(\\sqrt{2}\\)\uff09\uff0c\u5f97\u5230\u91d1\u5b57\u5854\uff0c\u91d1\u5b57\u5854\u4e2d\u6bcf\u5f20\u56fe\u7247\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7a97\u53e3\u68c0\u6d4b\u3002 \u91d1\u5b57\u5854\u4e2d\u7684\u4e0d\u540c\u5c42\u80fd\u68c0\u6d4b\u5230\u4e0d\u540c\u7684\u7ec6\u8282\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0b\u68c0\u6d4b\u5230\u6240\u6709\u7ec6\u8282\u3002</p> <p>\u54cd\u5e94\u51fd\u6570\u4e0d\u7528 Harris \u7a97\u53e3\uff0c\u6539\u7528 Laplacian of Gaussian (LoG)\uff0c\u6548\u7387\u66f4\u9ad8\u3002\u5177\u4f53\u7565\u3002 \u6216\u4e24\u4e2a\\(\\sigma\\)\u503c\u4e0d\u540c\u7684 Gaussian\uff08DoG\uff09\u6c42\uff0c\u5177\u4f53\u7565\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV08_detector/#fast","title":"FAST \u89d2\u70b9\u68c0\u6d4b","text":"<p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684 local window\uff0c\u76f4\u63a5\u901a\u8fc7\u67d0\u79cd\u673a\u5236\u5904\u7406\u5f53\u524d\u7684 window\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u89d2\u70b9\u3002</p> <p>\u5728\u7a97\u53e3\u4e2d\u5bf9\u4e8e\u7279\u5b9a\u7684 pixel P\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5706\u5468\uff0c\u5982\u679c\u5706\u5468\u4e0a\u8fde\u7eed n \u4e2a\u70b9\u90fd\u6bd4 P \u66f4\u4eae\u6216\u66f4\u6697\uff0c\u5219\u8ba4\u4e3a P \u662f\u89d2\u70b9\u3002 n \u548c\u4eae\u5ea6\u9700\u8981\u8bbe\u7f6e\u4e24\u4e2a\u9608\u503c\u3002</p> <p>\u52a0\u901f\uff1a\u5982\u679c\u4e3a\u89d2\u70b9\uff0c\u5c06\u5706\u5468\u7b49\u5206\uff0c\u5219\u7b49\u5206\u70b9\u4e0a\u5fc5\u987b\u5b58\u5728\u8fde\u7eed\u7684\u66f4\u4eae\u6216\u66f4\u6697\u7684\u70b9\u3002 \u7528\u673a\u5668\u5b66\u4e60\u521b\u5efa\u66f4\u597d\u7684\u51b3\u7b56\u6811\uff0c\u52a0\u901f\u68c0\u6d4b\u8fc7\u7a0b\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/","title":"Feature Descriptor","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1629 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#_1","title":"\u57fa\u672c\u60f3\u6cd5","text":"<p>\u4ee5 3*3 \u7684\u5c3a\u5ea6\u4e3a\u4f8b\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\uff1a\u8f6c\u5316\u4e3a\u5411\u91cf\u5339\u914d</p> <ul> <li>\u60f3\u6cd5 1\uff1a\u5c06 9 \u4e2a\u50cf\u7d20\u7f16\u53f7\uff0c\u6392\u6210\u4e5d\u7ef4\u5411\u91cf\u8fdb\u884c\u5339\u914d\u3002\u4f46\u8981\u6c42\u4e0d\u80fd\u6709\u65cb\u8f6c\u7b49\u3002</li> <li>\u6539\u8fdb 1\uff1a\u6c42\u76f8\u90bb\u50cf\u7d20\u7684\u5dee\u5206\uff0c\u6392\u6210\u516d\u7ef4\u5411\u91cf\u3002\u8fd9\u6837\u5141\u8bb8\u5149\u7167\u5f3a\u5ea6\u53d8\u5316\u3002</li> </ul> <p>\u4e3a\u4e86\u5305\u542b\u51e0\u4f55\u626d\u66f2\uff0c\u7528\u989c\u8272\u76f4\u65b9\u56fe</p> <ul> <li>\u60f3\u6cd5 2\uff08color histogram\uff09\uff1a\u63d0\u53d6\u7a97\u53e3\u4e2d\u7684\u989c\u8272\uff0c\u505a\u6210\u989c\u8272\u76f4\u65b9\u56fe\u3002\u4f46\u8fd9\u6837\u63cf\u8ff0\u6027\u4f4e\u3002</li> <li>\u6539\u8fdb 2\uff08spatial histograms\uff09\uff1a\u5c06\u7a97\u53e3\u5206\u4e3a\u51e0\u4e2a\u683c\u5b50\uff0c\u6bcf\u4e2a\u683c\u5b50\u5206\u522b\u505a\u989c\u8272\u76f4\u65b9\u56fe\u3002\u4f46\u662f\u8fd9\u6837\u4e0d\u80fd\u6709\u65cb\u8f6c\u3002</li> <li>\u6539\u8fdb 3\uff08orienrarion normalization\uff09\uff1a\u7ed8\u5236\u68af\u5ea6\u7684\u76f4\u65b9\u56fe\uff08\u68af\u5ea6\u53cd\u6620\u65b9\u5411\uff09\uff0c\u5148\u6839\u636e\u68af\u5ea6\u65cb\u8f6c\u5230\u6807\u51c6\u4f4d\u7f6e\uff0c\u518d\u5206\u5272\u3001\u505a\u989c\u8272\u76f4\u65b9\u56fe\u3002</li> </ul>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#_2","title":"\u51e0\u79cd\u7279\u5f81\u63cf\u8ff0\u5b50","text":""},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#sift","title":"SIFT","text":"<p>SIFT\uff08Scale Invariant Feature Transform\uff09\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\u7a33\u5b9a\u3001\u53ef\u5339\u914d\u7684\u5173\u952e\u70b9\uff08features\uff09\uff0c\u7528\u4e8e\u56fe\u50cf\u5339\u914d\u3001\u76ee\u6807\u8bc6\u522b\u3001\u4e09\u7ef4\u91cd\u5efa\u7b49\u3002</p> <p>Descriptor \u6d41\u7a0b\uff1a</p> <ol> <li>\u5728\u7279\u5f81\u70b9\u533a\u57df\u91c7\u6837 16*16 \u7684\u70b9\uff1b</li> <li>\u5bf9\u6bcf\u4e2a\u91c7\u6837\u70b9\uff0c\u8ba1\u7b97\u8fb9\u754c\u7684\u65b9\u5411\uff08\u5373\u68af\u5ea6\u7684\u53cd\u65b9\u5411\uff09\uff1b</li> <li>\u53bb\u6389\u8fb9\u754c\u4e2d\u8fc7\u5c0f\u7684\u503c\uff1b</li> <li>0~360 \u5ea6\u7b49\u5206\u4e3a 8 \u4efd\uff0c\u5efa\u7acb\u76f4\u65b9\u56fe\uff0c\u5269\u4e0b\u7684 edge \u4e2d\u6bcf\u4e2a\u70b9\u5bf9 8 \u4e2a\u65b9\u5411\u6295\u7968\uff08\u53ef\u80fd\u662f\u52a0\u6743\u6295\u7968\uff09\uff1b</li> <li>\u5177\u4f53\u5b9e\u73b0\u65f6\u5148\u5212\u5206\u4e3a 16 \u4e2a 4*4 \u7684\u683c\u5b50\uff0c\u6bcf\u4e2a\u683c\u5b50\u5efa\u7acb\u516b\u7ef4\u76f4\u65b9\u56fe\uff0c\u6700\u540e\u518d\u6574\u5408\u3002</li> </ol> <p>SIFT \u8868\u73b0\u597d\uff0c\u8bbe\u8ba1\u4e0a\u80fd\u5904\u7406\u89c6\u89d2\u53d8\u5316\u3001\u5e73\u9762\u5185\u65cb\u8f6c\u7b49\uff0c\u5b9e\u9645\u4e0a\u8fd8\u80fd\u5bb9\u5fcd\u5e73\u9762\u5916\u65cb\u8f6c\u3001\u5149\u7167\u7b49\u53d8\u5316\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#surf","title":"SURF","text":"<p>SURF\uff08Speeded-Up Robust Features\uff09\u7684\u76ee\u6807\u662f\u5728\u4fdd\u6301\u4e0e SIFT \u76f8\u4f3c\u9c81\u68d2\u6027\u7684\u540c\u65f6\uff0c\u663e\u8457\u52a0\u5feb\u7279\u5f81\u63d0\u53d6\u901f\u5ea6\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <ol> <li>\u6784\u5efa\u5c3a\u5ea6\u7a7a\u95f4\uff08Scale-space\uff09\uff1aSIFT \u901a\u8fc7\u4e0d\u65ad\u6a21\u7cca\u56fe\u50cf\uff08\u9ad8\u65af\u91d1\u5b57\u5854\uff09\u5b9e\u73b0\u591a\u5c3a\u5ea6\u5206\u6790\uff1bSURF \u5219\u56fa\u5b9a\u56fe\u50cf\uff0c\u7528\u4e0d\u540c\u5927\u5c0f\u7684\u6ee4\u6ce2\u5668\u5377\u79ef\u4ee3\u66ff\u7f29\u653e\u3002</li> <li>\u5173\u952e\u70b9\u68c0\u6d4b\uff08Keypoint Detection\uff09\uff1a\u4f7f\u7528 Hessian \u77e9\u9635\u7684\u884c\u5217\u5f0f\uff08determinant of Hessian\uff09\u4f5c\u4e3a\u7279\u5f81\u5f3a\u5ea6\uff0c\u53d6\u5176\u884c\u5217\u5f0f (|H|) \u7684\u6781\u503c\u70b9\u4f5c\u4e3a\u5019\u9009\u5173\u952e\u70b9\u3002</li> <li>SURF \u7528\u7b80\u5355\u7684 box filter\uff08\u76d2\u5f0f\u6ee4\u6ce2\u5668\uff09\u8fd1\u4f3c\u5377\u79ef\u8fd0\u7b97\uff0c\u8fd9\u4e9b\u6ee4\u6ce2\u5668\u7684\u7cfb\u6570\u53ea\u6709 1 \u548c -1\uff0c\u53ef\u7528\u79ef\u5206\u56fe\u50cf\u9ad8\u6548\u8ba1\u7b97\u3002</li> <li>\u65b9\u5411\u5206\u914d\uff08Orientation Assignment\uff09\uff1a\u5728\u5173\u952e\u70b9\u90bb\u57df\u5185\u8ba1\u7b97 Haar \u5c0f\u6ce2\u54cd\u5e94\uff08Haar wavelet responses\uff09\u3002\u6839\u636e\u4e3b\u65b9\u5411\u5206\u5e03\uff0c\u7ed9\u5173\u952e\u70b9\u5206\u914d\u4e00\u4e2a\u4e3b\u65b9\u5411\uff0c\u4f7f\u5176\u65cb\u8f6c\u4e0d\u53d8\u3002</li> <li>\u7279\u5f81\u63cf\u8ff0\u7b26\u751f\u6210\uff08Descriptor\uff09\uff1a\u5728\u5173\u952e\u70b9\u5468\u56f4\u53d6\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u90bb\u57df\uff08\u901a\u5e38\u662f 20\u00d720 \u50cf\u7d20\uff09\uff0c\u5206\u6210 4\u00d74 \u4e2a\u5b50\u533a\u5757\u3002\u6bcf\u4e2a\u533a\u5757\u4e2d\u8ba1\u7b97 Haar \u5c0f\u6ce2\u5728 x \u548c y \u65b9\u5411\u7684\u54cd\u5e94\u7edf\u8ba1\u91cf\u3002\u5c06\u8fd9\u4e9b\u7edf\u8ba1\u91cf\u62fc\u63a5\u4e3a\u4e00\u4e2a 64 \u7ef4\u5411\u91cf\uff084\u00d74\u00d74 = 64\uff09\u3002</li> </ol> <p>\u79ef\u5206\u56fe\u50cf\uff08Integral Image\uff09\uff1a\u6bcf\u4e2a\u50cf\u7d20\u7684\u4f4d\u7f6e\u653e\u56fe\u50cf\u5de6\u4e0a\u89d2\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u50cf\u7d20\u4e4b\u548c\u3002\u8981\u5f97\u5230\u67d0\u4e00\u5757\u7684\u548c\uff0c\u53ea\u9700\u8981 integral image \u76f8\u5e94\u4f4d\u7f6e\u7684\u503c\u7b80\u5355 \u52a0\u51cf\uff08\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u524d\u7f00\u548c\uff09\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#brief","title":"BRIEF","text":"<p>BRIEF (Binary Robust Independent Elementary Features)\u662f\u4e00\u79cd\u7528\u4e8c\u8fdb\u5236\uff080/1\uff09\u6765\u8868\u793a\u56fe\u50cf\u5c40\u90e8\u7279\u5f81\u7684\u63cf\u8ff0\u5b50\uff0c\u7528\u7b80\u5355\u7684\u6bd4\u8f83\u4ee3\u66ff\u590d\u6742\u7684\u68af\u5ea6\u7edf\u8ba1\uff0c\u5b9e\u73b0\u8d85\u5feb\u7279\u5f81\u5339\u914d\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <ol> <li>\u5148\u5bf9\u56fe\u50cf\u9ad8\u65af\u6ee4\u6ce2\uff1b</li> <li>\u5bf9\u76f8\u90bb\u7684\u50cf\u7d20(x,y)\uff0c\u5982\u679c x \u7684\u503c\u66f4\u5c0f\uff0c\u5219 r(x;y)\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\uff1b</li> <li>\u5c06\u6240\u6709\u6bd4\u8f83\u7ed3\u679c\u4f9d\u6b21\u6392\u5217\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u8ba1\u7b97 Hamming distance\u3002\u7531\u4e8e\u662f\u4e8c\u8fdb\u5236\u4e32\uff0c\u53ef\u4ee5\u7528 XOR\uff08\u5f02\u6216\uff09\u8fd0\u7b97 + \u4f4d\u8ba1\u6570 \u5b9e\u73b0\uff0c\u901f\u5ea6\u6781\u5feb\u3002</li> </ol> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u6781\u5feb\uff08\u7528\u903b\u8f91\u8fd0\u7b97\u4ee3\u66ff\u6d6e\u70b9\u8ba1\u7b97\uff09</li> <li>\u5360\u7528\u5185\u5b58\u5c11\uff08256 bits = 32 bytes\uff09</li> <li>\u5339\u914d\u901f\u5ea6\u5feb\uff08\u9002\u5408\u5b9e\u65f6\u5e94\u7528\uff09</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u5bf9\u65cb\u8f6c\u4e0d\u654f\u611f\uff08\u5373\u65cb\u8f6c\u540e\u5339\u914d\u5ea6\u4e0b\u964d\uff09</li> <li>\u5bf9\u5c3a\u5ea6\u53d8\u5316\u4e0d\u9c81\u68d2\uff08\u9700\u4e0e\u5176\u4ed6\u7b97\u6cd5\u7ed3\u5408\uff0c\u5982 ORB\uff09</li> </ul>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#orb","title":"ORB","text":"<p>ORB \u662f FAST \u548c BRIEF \u7684\u7ed3\u5408\u3002</p> <p>\u5728 FAST \u4e0b\u8ba1\u7b97 orientation\uff0c\u5728 BRIEF \u4e4b\u524d\u5148\u6839\u636e\u89d2\u5ea6\u65cb\u8f6c\u56fe\u50cf\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#gist","title":"GIST","text":"<p>GIST\uff08Global Image Descriptor\uff09\u57fa\u4e8e\u5fc3\u7406\u5b66\u5b9e\u9a8c\uff0c\u4eba\u7c7b\u5728\u8bc6\u522b\u573a\u666f\u65f6\uff0c\u4e0d\u9700\u8981\u8bc6\u522b\u6240\u6709\u7ec6\u8282\uff0c\u800c\u662f\u901a\u8fc7\u201c\u6574\u4f53\u5370\u8c61\uff08Gist\uff09\u201d\u5feb\u901f\u5224\u65ad\u56fe\u50cf\u7684\u7c7b\u522b\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <ol> <li>\u9884\u5904\u7406\uff08Preprocessing\uff09\uff1a\u5c06\u8f93\u5165\u56fe\u50cf\u8f6c\u6362\u4e3a\u7070\u5ea6\u56fe\uff0c\u8fdb\u884c\u5f52\u4e00\u5316\u548c\u6ee4\u6ce2\uff0c\u4ee5\u6d88\u9664\u4eae\u5ea6\u6216\u5bf9\u6bd4\u5ea6\u7684\u5f71\u54cd\u3002</li> <li>\u5377\u79ef\u7279\u5f81\u63d0\u53d6\uff08Filter Bank Convolution\uff09\uff1a\u4f7f\u7528\u4e00\u7ec4 Gabor \u6ee4\u6ce2\u5668\u8fdb\u884c\u5377\u79ef\u3002\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u4ee3\u8868\u4e0d\u540c\u7684\u65b9\u5411\u548c\u5c3a\u5ea6\uff0c\u53ef\u4ee5\u6355\u6349\u4e0d\u540c\u65b9\u5411\u7684\u7eb9\u7406\u4fe1\u606f\u3002</li> <li>\u7a7a\u95f4\u5212\u5206\u4e0e\u7edf\u8ba1\uff08Spatial Pooling\uff09\uff1a\u5c06\u5377\u79ef\u7ed3\u679c\u5212\u5206\u4e3a\u56fa\u5b9a\u7f51\u683c\uff08\u4f8b\u5982 4*4\uff09\u3002\u5728\u6bcf\u4e2a\u5c0f\u683c\u4e2d\uff0c\u8ba1\u7b97\u6ee4\u6ce2\u54cd\u5e94\u7684\u5e73\u5747\u503c\u3002\u8fd9\u6837\u65e2\u4fdd\u7559\u4e86\u6574\u4f53\u5e03\u5c40\uff0c\u53c8\u51cf\u5c11\u4e86\u7279\u5f81\u7ef4\u5ea6\u3002</li> <li>\u7279\u5f81\u62fc\u63a5\uff08Feature Concatenation\uff09\uff1a\u5c06\u6240\u6709\u6ee4\u6ce2\u5668\u3001\u6240\u6709\u683c\u5b50\u7684\u5e73\u5747\u503c\u8fde\u63a5\u6210\u4e00\u4e2a\u957f\u5411\u91cf\uff0c\u5f97\u5230\u6574\u5f20\u56fe\u50cf\u7684 GIST \u63cf\u8ff0\u5b50\u3002</li> </ol> <p>Gabor filter\uff1a\u5f85\u8865\u5145\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#hog","title":"HOG","text":"<p>HOG\uff08Histogram of Oriented Gradients\uff0c\u65b9\u5411\u68af\u5ea6\u76f4\u65b9\u56fe\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b\uff08\u7279\u522b\u662f\u884c\u4eba\u68c0\u6d4b\uff09\u7684\u65b9\u6cd5\uff0c\u57fa\u4e8e\u56fe\u50cf\u5c40\u90e8\u533a\u57df\u5185\u7684\u68af\u5ea6\u4fe1\u606f\u63d0\u53d6\u7279\u5f81\uff0c\u5e38\u7528\u4e8e\u89c6\u89c9\u8bc6\u522b\u4efb\u52a1\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <ol> <li>\u8ba1\u7b97\u68af\u5ea6\uff1a\u5bf9\u8f93\u5165\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\uff0c\u8ba1\u7b97\u6c34\u5e73\u65b9\u5411\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u68af\u5ea6\uff08\u901a\u5e38\u4f7f\u7528 Sobel \u7b97\u5b50\uff09\uff0c\u5f97\u5230\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u68af\u5ea6\u65b9\u5411\u548c\u68af\u5ea6\u5e45\u503c\u3002</li> <li>\u5206\u533a\u57df\uff08Cells\uff09\uff1a\u5c06\u56fe\u50cf\u5212\u5206\u4e3a\u82e5\u5e72\u5c0f\u7684\u7f51\u683c\u533a\u57df\uff0c\u79f0\u4e3a Cells\uff0c\u6bcf\u4e2a Cell \u901a\u5e38\u662f\u4e00\u4e2a 8x8 \u6216 16x16 \u7684\u50cf\u7d20\u5757\u3002\u5bf9\u6bcf\u4e2a Cell\uff0c\u8ba1\u7b97\u5176\u5185\u90e8\u7684\u68af\u5ea6\u65b9\u5411\u76f4\u65b9\u56fe\u3002</li> <li>\u8ba1\u7b97\u65b9\u5411\u76f4\u65b9\u56fe\uff1a\u5728\u6bcf\u4e2a Cell \u5185\uff0c\u7edf\u8ba1\u8be5\u533a\u57df\u5185\u6bcf\u4e2a\u50cf\u7d20\u7684\u68af\u5ea6\u65b9\u5411\uff0c\u5e76\u6839\u636e\u68af\u5ea6\u7684\u65b9\u5411\u5c06\u5176\u5206\u5230\u6307\u5b9a\u7684\u89d2\u5ea6\u533a\u95f4\u5185\uff08\u901a\u5e38\u5206\u4e3a 9 \u4e2a\u65b9\u5411\uff0c\u8303\u56f4\u662f 0~180 \u5ea6\uff09\u3002\u6bcf\u4e2a Cell \u4f1a\u751f\u6210\u4e00\u4e2a 9 \u7ef4\u7684\u76f4\u65b9\u56fe\u5411\u91cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7ef4\u5ea6\u4ee3\u8868\u4e00\u4e2a\u65b9\u5411\u7684\u68af\u5ea6\u5f3a\u5ea6\u3002</li> <li>\u5757\u5f52\u4e00\u5316\uff08Block Normalization\uff09\uff1a\u5c06\u82e5\u5e72\u4e2a\u76f8\u90bb\u7684 Cells \u7ec4\u6210\u4e00\u4e2a Block\uff08\u901a\u5e38 4 \u4e2a Cell \u7ec4\u6210\u4e00\u4e2a Block\uff09\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a Block \u4e2d\u7684\u68af\u5ea6\u76f4\u65b9\u56fe\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\u3002\u5f52\u4e00\u5316\u6709\u52a9\u4e8e\u6d88\u9664\u5149\u7167\u53d8\u5316\u548c\u5bf9\u6bd4\u5ea6\u5dee\u5f02\u7684\u5f71\u54cd\uff0c\u589e\u5f3a\u6a21\u578b\u7684\u9c81\u68d2\u6027\u3002</li> <li>\u751f\u6210 HOG \u7279\u5f81\u5411\u91cf\uff1a\u5c06\u6240\u6709 Block \u7684\u5f52\u4e00\u5316\u540e\u7684\u76f4\u65b9\u56fe\u4e32\u8054\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u5927\u7684\u7279\u5f81\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u56fe\u50cf\u7684 HOG \u7279\u5f81\u63cf\u8ff0\u5b50\u3002</li> <li>\u5206\u7c7b\u5668\u8bad\u7ec3\uff1a\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u7b49\u5206\u7c7b\u5668\uff0c\u57fa\u4e8e HOG \u7279\u5f81\u8bad\u7ec3\u6a21\u578b\u3002\u901a\u8fc7\u5c06 HOG \u7279\u5f81\u5411\u91cf\u8f93\u5165\u5230\u5206\u7c7b\u5668\uff0c\u6a21\u578b\u53ef\u4ee5\u5224\u65ad\u56fe\u50cf\u4e2d\u662f\u5426\u5305\u542b\u76ee\u6807\u7269\u4f53\uff08\u4f8b\u5982\uff0c\u662f\u5426\u6709\u4eba\uff09\u3002</li> </ol>"},{"location":"AbiesNotes/Vision%20Course/CV09_descriptor/#_3","title":"\u7279\u5f81\u5339\u914d","text":"<p>\u5bf9\u6bcf\u4e2a\u7279\u5f81\u70b9\u5b9a\u4e49\u8ddd\u79bb\u3002\u5982\u679c\u4e24\u5f20\u56fe\u4e2d\u7279\u5f81\u70b9\u8ddd\u79bb\u5c0f\u4e8e\u9608\u503c\uff0c\u5219\u8fd9\u4e24\u4e2a\u70b9\u5339\u914d\u3002 \u8ddd\u79bb\u4e00\u822c\u5b9a\u4e49\u4e3a\\(L_2\\) distance\uff08\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff09\u3001Hamming distance\u3001\u5939\u89d2\u7b49\u3002</p> <p>\u56fe\u7247\u4e2d\u6709\u91cd\u590d\u6027\u7ed3\u6784\u65f6\uff0c\u4f1a\u76f8\u4e92\u5e72\u6270\u3002 \u89e3\u51b3\uff1a\u540c\u65f6\u8003\u8651\u6700\u8fd1\u548c\u7b2c\u4e8c\u8fd1\u7684\u7279\u5f81\u70b9\uff0c\u5224\u65ad\u4e24\u8005\u7684\u5dee\u8ddd\u662f\u4e0d\u662f\u8db3\u591f\u5927\u3002\u5982\u679c\u4e24\u8005\u5dee\u8ddd\u4e0d\u5927\uff0c\u5219\u5339\u914d\u7684\u552f\u4e00\u6027\u4f4e\u3002 \u9608\u503c\u7684\u5927\u5c0f\u51b3\u5b9a\u5339\u914d\u7684\u4e25\u683c\u6027\u3002\u9700\u8981\u5728 recall \u548c precision \u4e2d trade-off\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/","title":"Homography","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1673 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#cv-lec-10-homography","title":"CV Lec 10 Homography","text":"<p>\u900f\u89c6\u53d8\u6362\u4e3b\u8981\u7528\u4e8e\u56fe\u50cf\u62fc\u63a5\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#_1","title":"\u9f50\u6b21\u5750\u6807","text":"<p>\u6ce8\u610f</p> <p>\u9f50\u6b21\u5750\u6807\u90e8\u5206\u548c GAMES101 \u91cd\u590d\uff0c\u8fd9\u91cc\u7565\u5199\u3002</p> <p>\u9f50\u6b21\u5750\u6807\uff0c\u4eff\u5c04\u53d8\u6362\u4e0b\u6700\u4e0b\u9762\u4e00\u884c\u4e00\u5b9a\u662f 001\uff08\u4e8c\u7ef4\uff09\u3002</p> <p>\u4eff\u5c04\u53d8\u6362\u4e00\u5b9a\u7531\u653e\u7f29\u3001\u65cb\u8f6c\u3001\u526a\u5207\u3001\u5e73\u79fb\u7ec4\u6210\u3002 \u4eff\u5c04\u540e\u539f\u70b9\u53ef\u80fd\u79fb\u52a8\uff0c\u4f46\u76f4\u7ebf\u4ecd\u7136\u662f\u76f4\u7ebf\uff0c\u5e73\u884c\u5173\u7cfb\u3001\u957f\u5ea6\u6bd4\u503c\u4fdd\u6301\u3002</p> <p>\u5982\u679c\u5141\u8bb8\u6700\u540e\u4e00\u884c\u975e 001\uff0c\u5219\u662f homography\uff0c\u89c6\u89c9\u4e0a\u4e3a\u56fe\u50cf\u5728\u5e73\u9762\u5916\u65cb\u8f6c\u3002</p> <ul> <li>homography \u524d\u540e\u76f4\u7ebf\u4ecd\u7136\u662f\u76f4\u7ebf\uff0c\u4f46\u5e73\u884c\u3001\u957f\u5ea6\u6bd4\u503c\u3001\u539f\u70b9\u4f4d\u7f6e\u4e0d\u4fdd\u7559</li> <li>homography \u5bf9\u77e9\u9635\u4e58\u6cd5\u5c01\u95ed\uff0c\u6784\u6210\u7fa4</li> </ul> <p>\u56fe\u50cf\u4e2d\u6240\u6709\u5e73\u9762\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7 homography \u8f6c\u5316\u4e3a\u6b63\u89c6\u7684\u5e73\u9762\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#_2","title":"\u56fe\u50cf\u62fc\u63a5","text":""},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#_3","title":"\u539f\u7406","text":"<p>\u5728\u56fe\u50cf\u62fc\u63a5\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u5355\u5e94\u77e9\u9635\uff08Homography Matrix\uff09 \\( \\mathbf{H} \\in \\mathbb{R}^{3\\times3} \\)\uff0c\u4f7f\u5f97\u4e00\u5f20\u56fe\u7247\u4e2d\u7684\u7279\u5f81\u70b9\u7ecf\u8fc7\u900f\u89c6\u53d8\u6362\u540e\uff0c\u4e0e\u53e6\u4e00\u5f20\u56fe\u7247\u4e2d\u7684\u5bf9\u5e94\u7279\u5f81\u70b9\u5bf9\u9f50\u3002</p> <p>\u62cd\u7167\u65f6\u76f8\u673a\u4f4d\u7f6e\u4e0d\u80fd\u52a8\u3002\u5426\u5219\u540c\u4e00\u4e2a\u70b9\u5728\u4e0d\u540c\u56fe\u50cf\u4e2d\u4e0d\u540c\uff0c\u62fc\u63a5\u540e\u6709\u91cd\u5f71\u3002 \u5b9e\u9645\u62cd\u6444\u5168\u666f\u7167\u7247\u65f6\uff0c\u76f8\u673a\u4f4d\u7f6e\u7684\u8ddd\u79bb\u76f8\u5bf9\u4e8e\u7269\u4f53\u5c3a\u5ea6\u80fd\u5ffd\u7565\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#mosaic","title":"Mosaic \u7b97\u6cd5","text":"<ul> <li>\u57fa\u672c\u5173\u7cfb</li> </ul> <p>\u4e24\u5e45\u56fe\u50cf\u4e2d\u5bf9\u5e94\u70b9\u6ee1\u8db3\u900f\u89c6\u5173\u7cfb\uff1a</p> \\[ x' = Hx \\quad \\leftrightarrow \\quad \\begin{bmatrix} x' \\ y' \\ 1 \\end{bmatrix} \\begin{bmatrix} a &amp; b &amp; c \\ d &amp; e &amp; f \\ g &amp; h &amp; i \\end{bmatrix} \\begin{bmatrix} x \\ y \\ 1 \\end{bmatrix} \\] <p>\u7531\u4e8e\u9f50\u6b21\u5750\u6807\u4e2d\u6bd4\u4f8b\u65e0\u5173\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u6709\uff1a</p> \\[ \\begin{bmatrix} x' \\ y' \\ 1 \\end{bmatrix} \\propto H \\begin{bmatrix} x \\ y \\ 1 \\end{bmatrix} \\] <p>\u5373\u4e24\u8fb9\u4ec5\u76f8\u5dee\u4e00\u4e2a\u6bd4\u4f8b\u5e38\u6570\u3002</p> <ul> <li>\u65b9\u7a0b\u6784\u5efa\u601d\u8def</li> </ul> <p>\u8bbe\u539f\u56fe\u50cf\u4e0e\u76ee\u6807\u56fe\u50cf\u4e2d\u7684\u5bf9\u5e94\u70b9\u5206\u522b\u4e3a\uff1a</p> \\[ \\mathbf{x}\\_i = (x_i, y_i)^T, \\quad \\mathbf{x}'\\_i = (x'\\_i, y'\\_i)^T \\] <p>\u5219\u6709\uff1a</p> \\[ \\mathbf{x}'\\_i \\propto \\mathbf{H} \\mathbf{x}\\_i \\] <p>\u8fd9\u7b49\u4ef7\u4e8e\uff1a</p> \\[ \\mathbf{x}'\\_i \\times (\\mathbf{H}\\mathbf{x}\\_i) = 0 \\] <p>\u5176\u4e2d\u201c\u00d7\u201d\u8868\u793a\u5411\u91cf\u53c9\u79ef\u3002 \u8fd9\u4e00\u5f0f\u4fdd\u8bc1\u4e86\u4e24\u5411\u91cf\u5171\u7ebf\uff08\u5373\u4ec5\u76f8\u5dee\u6bd4\u4f8b\u5e38\u6570\uff09\u3002</p> <ul> <li>\u5c55\u5f00\u77e9\u9635\u5f62\u5f0f</li> </ul> <p>\u4ee4\u5355\u5e94\u77e9\u9635\uff1a</p> \\[ \\mathbf{H} = \\begin{pmatrix} \\mathbf{h}^{1T} \\ \\mathbf{h}^{2T} \\ \\mathbf{h}^{3T} \\end{pmatrix} \\] <p>\u5219\uff1a</p> \\[ \\mathbf{H}\\mathbf{x}\\_i = \\begin{pmatrix} \\mathbf{h}^{1T} \\mathbf{x}\\_i \\ \\mathbf{h}^{2T} \\mathbf{x}\\_i \\ \\mathbf{h}^{3T} \\mathbf{x}\\_i \\end{pmatrix} \\] <p>\u4ee3\u5165\u53c9\u79ef\u516c\u5f0f\uff1a</p> \\[ \\mathbf{x}'\\_i \\times \\mathbf{H}\\mathbf{x}\\_i = \\begin{pmatrix} y'\\_i \\mathbf{h}^{1T} \\mathbf{x}\\_i - x'\\_i \\mathbf{h}^{2T} \\mathbf{x}\\_i \\ \\mathbf{h}^{3T} \\mathbf{x}\\_i - x'\\_i \\mathbf{h}^{1T} \\mathbf{x}\\_i \\ x'\\_i \\mathbf{h}^{2T} \\mathbf{x}\\_i - y'\\_i \\mathbf{h}^{3T} \\mathbf{x}\\_i \\end{pmatrix} \\] <ul> <li>\u5316\u4e3a\u7ebf\u6027\u65b9\u7a0b\u5f62\u5f0f</li> </ul> <p>\u901a\u8fc7\u77e9\u9635\u6392\u5217\uff0c\u53ef\u5c06\u6bcf\u5bf9\u5339\u914d\u70b9\u5bf9\u5e94\u7684\u65b9\u7a0b\u5199\u6210\u6807\u51c6\u5f62\u5f0f\uff1a</p> \\[ \\mathbf{x}'\\_i \\times \\mathbf{H}\\mathbf{x}\\_i = \\begin{bmatrix} 0^T &amp; -x'\\_i &amp; y'\\_i x_i^T \\ x'\\_i &amp; 0^T &amp; -x'\\_i x_i^T \\ -y'\\_i x_i^T &amp; x'\\_i x_i^T &amp; 0^T \\end{bmatrix} \\begin{bmatrix} \\mathbf{h}^1 \\ \\mathbf{h}^2 \\ \\mathbf{h}^3 \\end{bmatrix} = 0 \\] <ul> <li>\u65b9\u7a0b\u7ec4\u8868\u8fbe</li> </ul> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u5339\u914d\u70b9 \\((\\mathbf{x}\\_i, \\mathbf{x}'\\_i)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ebf\u6027\u7ea6\u675f\uff1a</p> \\[ \\mathbf{A}\\_i \\mathbf{h} = 0 \\] <p>\u5c06\u6240\u6709\u5339\u914d\u70b9\u7684\u65b9\u7a0b\u5806\u53e0\u8d77\u6765\uff1a</p> \\[ \\mathbf{A}\\mathbf{h} = 0 \\] <p>\u5176\u4e2d\\(\\mathbf{h} = [h_1, h_2, \\dots, h_9]^T\\) \u8868\u793a\u5355\u5e94\u77e9\u9635\u7684\u5c55\u5f00\u5411\u91cf\u5f62\u5f0f\u3002</p> <p>\u901a\u5e38\u4f7f\u7528 SVD\uff08\u5947\u5f02\u503c\u5206\u89e3\uff09\u6c42\u89e3\u8be5\u9f50\u6b21\u65b9\u7a0b\uff0c\u53d6\u6700\u5c0f\u5947\u5f02\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u89e3\u3002</p> <ul> <li>\u6c42\u89e3\u65b9\u7a0b</li> </ul> <p>\u5728\u4e0a\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u9f50\u6b21\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a</p> \\[ \\mathbf{A}\\mathbf{h} = 0 \\] <p>\u5176\u4e2d \\(\\mathbf{A}\\) \u662f\u7531\u6240\u6709\u5339\u914d\u70b9\u6784\u9020\u7684\u77e9\u9635\uff0c\\(\\mathbf{h}\\) \u662f\u5355\u5e94\u77e9\u9635 \\(\\mathbf{H}\\) \u5c55\u5f00\u7684 9 \u7ef4\u5411\u91cf\u3002</p> <ul> <li>\uff081\uff09\u907f\u514d\u5e73\u51e1\u89e3</li> </ul> <p>\u663e\u7136\uff0c\\(\\mathbf{h} = 0\\) \u662f\u4e00\u4e2a\u5e73\u51e1\u89e3\uff0c\u4f46\u5b83\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u7ea6\u675f \\(\\mathbf{h}\\) \u7684\u957f\u5ea6\u4e3a 1\uff1a</p> \\[ |\\mathbf{h}| = 1 \\] <p>\u8fd9\u4f7f\u5f97\u95ee\u9898\u53d8\u4e3a\uff1a</p> \\[ \\min_{|\\mathbf{h}|=1} |\\mathbf{A}\\mathbf{h}| \\] <p>\u5373\u627e\u5230\u4e00\u4e2a\u975e\u96f6\u7684 \\(\\mathbf{h}\\)\uff0c\u4f7f\u5f97 \\(\\mathbf{A}\\mathbf{h}\\) \u5c3d\u53ef\u80fd\u63a5\u8fd1\u96f6\u3002</p> <ul> <li>\uff082\uff09\u8003\u8651\u566a\u58f0\u548c\u8bef\u5dee</li> </ul> <p>\u7531\u4e8e\u7279\u5f81\u68c0\u6d4b\u5b58\u5728\u504f\u5dee\u3001\u955c\u5934\u7578\u53d8\u6216\u900f\u89c6\u6295\u5f71\u8bef\u5dee\uff0c \\(\\mathbf{A}\\mathbf{h}\\) \u65e0\u6cd5\u4e25\u683c\u7b49\u4e8e\u96f6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u6700\u5c0f\u4e8c\u4e58\u610f\u4e49\u4e0b\u5bfb\u627e\u6700\u4f18\u89e3\uff1a</p> \\[ \\min_{|\\mathbf{h}|=1} |\\mathbf{A}\\mathbf{h}|^2 \\] <ul> <li>\uff083\uff09\u901a\u8fc7 SVD \u6c42\u89e3</li> </ul> <p>\u5bf9\u77e9\u9635 \\(\\mathbf{A}\\) \u8fdb\u884c\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\uff1a</p> \\[ \\mathbf{A} = \\mathbf{U} \\mathbf{\\Sigma} \\mathbf{V}^T \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mathbf{U}\\)\uff1a\u5de6\u5947\u5f02\u5411\u91cf\u77e9\u9635\uff08\u6b63\u4ea4\uff09</li> <li>\\(\\mathbf{\\Sigma}\\)\uff1a\u5947\u5f02\u503c\u5bf9\u89d2\u77e9\u9635\uff0c\u5143\u7d20\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5217</li> <li> <p>\\(\\mathbf{V}\\)\uff1a\u53f3\u5947\u5f02\u5411\u91cf\u77e9\u9635\uff08\u6b63\u4ea4\uff09</p> </li> <li> <p>\uff084\uff09\u53d6\u6700\u5c0f\u5947\u5f02\u503c\u5bf9\u5e94\u5411\u91cf</p> </li> </ul> <p>\u5728\u6700\u5c0f\u5316 \\(|\\mathbf{A}\\mathbf{h}|\\) \u7684\u7ea6\u675f\u95ee\u9898\u4e2d\uff0c \u6700\u4f18\u89e3 \\(\\mathbf{h}\\) \u662f\u77e9\u9635 \\(\\mathbf{A}^T\\mathbf{A}\\) \u7684\u6700\u5c0f\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u3002 \u7531 SVD \u6027\u8d28\u53ef\u77e5\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u53d6 \\(\\mathbf{V}\\) \u4e2d\u5bf9\u5e94\u6700\u5c0f\u5947\u5f02\u503c\u7684\u5217\u5411\u91cf\u4f5c\u4e3a \\(\\mathbf{h}\\)\u3002</p> <p>\u5373\uff1a</p> \\[ \\mathbf{h} = \\mathbf{v}_{\\text{min}} \\] <ul> <li>\uff085\uff09\u6062\u590d\u5355\u5e94\u77e9\u9635</li> </ul> <p>\u5c06 \\(\\mathbf{h}\\) \u91cd\u65b0 reshape \u4e3a \\(3 \\times 3\\) \u77e9\u9635\uff1a</p> \\[ \\mathbf{H} = \\begin{bmatrix} h_1 &amp; h_2 &amp; h_3 \\ h_4 &amp; h_5 &amp; h_6 \\ h_7 &amp; h_8 &amp; h_9 \\end{bmatrix} \\] <p>\u7531\u4e8e \\(\\mathbf{H}\\) \u4ec5\u786e\u5b9a\u5230\u4e00\u4e2a\u6bd4\u4f8b\u5e38\u6570\uff08\u9f50\u6b21\u5750\u6807\u4e0d\u53d8\uff09\uff0c \u901a\u5e38\u5c06\u5176\u5f52\u4e00\u5316\uff0c\u4f8b\u5982\u4ee4 \\(h_9 = 1\\)</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#_4","title":"\u5b9e\u9645\u95ee\u9898","text":"<p>\u5339\u914d\u65f6\u6709 outlier\uff0c\u7279\u5f81\u70b9\u5339\u914d\u5230\u4e0d\u76f8\u5173\u7684\u70b9\u3002 outlier \u4f1a\u5f71\u54cd\u62df\u5408\uff0c\u5bfc\u81f4\u62df\u5408\u7ed3\u679c\u4e0e\u5b9e\u9645\u7684\u504f\u79bb\u5927\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#m-estimators","title":"M-estimators","text":"<p>\u901a\u5e38\u62df\u5408\u4e3a\u6700\u5c0f\u4e8c\u4e58\uff0c\u5bf9\u60e9\u7f5a\u8ba1\u7b97\u5e73\u65b9\u3002\u4e3a\u4ec0\u4e48\u662f\u4e8c\u4e58\uff1f\u6c42\u504f\u5bfc\u540e\u4e3a\u7ebf\u6027\uff0c\u8ba1\u7b97\u65b9\u4fbf\u3002 \u4f46\u5e73\u65b9\u7684\u60e9\u7f5a\u589e\u957f\u5feb\uff0c\u4f1a\u4e3a\u4e86\u9002\u914d outlier \u800c\u727a\u7272\u6b63\u5e38\u7684\u6570\u636e\u70b9\u3002</p> <p>M-estimators \u4e2d\u9700\u8981\u65b0\u7684\u60e9\u7f5a\u51fd\u6570\\(\\rho\\)\uff08\u5982\u7edd\u5bf9\u503c\u51fd\u6570\uff09\uff0c\u8981\u6c42\u4e0d\u80fd\u968f\u504f\u79bb\u7684\u589e\u52a0\u800c\u5feb\u901f\u589e\u957f\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#ransac","title":"RANSAC","text":"<p>\u7528 RANSEC \u9009\u62e9\u6700\u5927\u7684 inlier \u7684\u96c6\u5408\uff0c\u518d\u7528\u8fd9\u4e2a\u96c6\u5408\u505a\u6700\u7ec8\u7684\u62df\u5408\u3002</p> <p>\u6d41\u7a0b\uff1a</p> <ol> <li>\u968f\u673a\u6311\u9009 s \u4e2a\u6837\u672c\u70b9\u62df\u5408\uff0c\u91cd\u590d n \u6b21\u3002</li> <li>\u5bf9\u6bcf\u4e2a\u62df\u5408\u7ed3\u679c\uff0c\u5224\u65ad\u548c\u591a\u5c11\u4e2a\u70b9\u543b\u5408\uff0c\u4f5c\u4e3a\u6a21\u578b\u7684\u8bc4\u4ef7\u3002</li> <li>\u9009\u53d6\u543b\u5408\u70b9\u6700\u591a\u7684\u6a21\u578b\uff0c\u6240\u6709\u543b\u5408\u7684\u70b9\u4f5c\u4e3a inlier\uff0c\u6240\u6709\u4e0d\u543b\u5408\u7684\u70b9\u4f5c\u4e3a outlier\u3002\u8981\u6c42 inlier \u81f3\u5c11\u591a\u4e8e\u4e00\u534a\u3002</li> <li>\u7528\u6240\u6709 inlier \u70b9\u505a\u62df\u5408\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002</li> </ol> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u7b80\u5355\u4e14\u901a\u7528</li> <li>\u9002\u7528\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u95ee\u9898</li> <li>\u5728\u5b9e\u8df5\u4e2d\u901a\u5e38\u6548\u679c\u826f\u597d</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u9700\u8981\u8c03\u6574\u53c2\u6570</li> <li>\u6709\u65f6\u9700\u8981\u8fc7\u591a\u7684\u8fed\u4ee3\u6b21\u6570</li> <li>\u5728\u5185\u70b9\u6bd4\u4f8b\u6781\u4f4e\u65f6\u53ef\u80fd\u5931\u6548</li> </ul> <p>\u600e\u4e48\u8bbe\u8ba1\u8fed\u4ee3\u6b21\u6570 n\uff1f</p> <p>\u5047\u8bbe outlier \u7684\u6bd4\u4f8b\u4e3a e\u3002\u5e0c\u671b\u5728 n \u6b21\u8fed\u4ee3\u4e2d\uff0c\u81f3\u5c11\u6709\u4e00\u6b21\u9009\u53d6\u7684 s \u4e2a\u6837\u672c\u70b9\u5168\u90e8\u4e3a inlier\u3002</p> <p>\u4e00\u6b21\u9009\u53d6\u4e2d\u5168\u90e8\u662f inlier \u7684\u6982\u7387\\(q=(1-e)^s\\)\u3002 \u5e0c\u671b\\(1-(1-q)^n&gt;p\\)\uff0c\u5219\uff1a</p> \\[n=\\frac{\\log (1-p)}{\\log (1-(1-e)^s)}\\] <p>\u600e\u4e48\u8bbe\u8ba1\u9009\u53d6\u70b9\u6570 s\uff1f</p> <p>\u5e0c\u671b\u9009\u53d6\u6700\u5c11\u7684\u70b9\u3002</p> <p>s \u8ddf\u8981\u62df\u5408\u7684\u6620\u5c04\u7684\u81ea\u7531\u5ea6\u6709\u5173\u3002</p> <p>\u600e\u4e48\u8ba1\u7b97 outlier \u7684\u6bd4\u4f8b e\uff1f</p> <p>\u5728\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\u52a8\u6001\u4f30\u8ba1 outlier \u7684\u6bd4\u4f8b\u3002\u4e00\u5f00\u59cb\u5047\u8bbe\u4e3a 1\uff0c\u8fed\u4ee3\u65f6\u4e0d\u65ad\u51cf\u5c0f\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#_5","title":"\u51e0\u4e2a\u6982\u5ff5","text":""},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#algebraic-distance","title":"Algebraic Distance","text":"<p>DLT\uff08\u76f4\u63a5\u7ebf\u6027\u53d8\u6362\uff09\u7b97\u6cd5\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u4ee3\u6570\u8ddd\u79bb\uff0c\u5373\u4f7f \\(\\mathbf{A}\\mathbf{h}\\) \u5c3d\u53ef\u80fd\u63a5\u8fd1\u96f6\u3002 \u8fd9\u91cc \\(\\mathbf{e} = \\mathbf{A}\\mathbf{h}\\) \u8868\u793a\u6b8b\u5dee\u5411\u91cf\uff0c\u6bcf\u4e2a\u5339\u914d\u70b9\u8d21\u732e\u4e24\u4e2a\u72ec\u7acb\u65b9\u7a0b\u3002</p> \\[ \\mathbf{e} = \\mathbf{A}\\mathbf{h} \\quad \\text{\u6b8b\u5dee\u5411\u91cf} \\] \\[ \\mathbf{e}_i \\quad \\text{\u4e3a\u5bf9\u5e94\u70b9\u7684\u524d\u4e24\u4e2a\u6b8b\u5dee\u5206\u91cf} \\] <p>\u4ee3\u6570\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a</p> \\[ d_{a_i}(\\mathbf{x}'_i, \\mathbf{H}\\mathbf{x}_i)^2 = |\\mathbf{e}_i|^2 = \\left| \\begin{bmatrix} 0^T &amp; -x'_i &amp; y'_i x_i^T \\ x'_i &amp; 0^T &amp; -x'_i x_i^T \\end{bmatrix} \\mathbf{h} \\right|^2 \\] <p>\u5bf9\u4e8e\u4e24\u70b9 \\(\\mathbf{x}\\_1, \\mathbf{x}\\_2\\)\uff0c\u5b83\u4eec\u7684\u4ee3\u6570\u8ddd\u79bb\u4e3a\uff1a</p> \\[ d_{a_i}(\\mathbf{x}_1, \\mathbf{x}_2)^2 = a_1^2 + a_2^2 \\quad \\text{\u5176\u4e2d} \\quad \\mathbf{a} = (a_1, a_2, a_3)^T = \\mathbf{x}_1 \\times \\mathbf{x}_2 \\] <p>\u7efc\u5408\u6240\u6709\u70b9\u5bf9\uff0c\u603b\u7684\u4ee3\u6570\u8ddd\u79bb\u4e3a\uff1a</p> \\[ \\sum_i d_{a_i}(\\mathbf{x}'_i, \\mathbf{H}\\mathbf{x}_i)^2 = \\sum_i |\\mathbf{e}_i|^2 = |\\mathbf{A}\\mathbf{h}|^2 = |\\mathbf{e}|^2 \\] <p>\u56e0\u6b64\uff0cDLT \u5b9e\u9645\u4e0a\u662f\u5728\u6700\u5c0f\u5316\u6240\u6709\u70b9\u5bf9\u7684\u4ee3\u6570\u8bef\u5dee\u5e73\u65b9\u548c\uff0c\u4ee5\u4f30\u8ba1\u6700\u4f18\u5355\u5e94\u77e9\u9635 \\(\\mathbf{H}\\)\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV10_homography/#geometric-distance","title":"Geometric Distance","text":"<p>\u628a x \u6620\u5c04\u5230 x'\uff0c\u5e0c\u671b\u6620\u5c04\u540e\u7684 x \u548c x'\u5728\u56fe\u50cf\u5e73\u9762\u4e0a\u7684\u6b27\u5f0f\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f\u3002 \u5982\u679c\u53cd\u5411\u5c06 x'\u6620\u5c04\u5230 x\uff0c\u5f97\u5230\u53cc\u5411\u7684\u8ddd\u79bb\u3002</p> <p>\u51e0\u4f55\u8ddd\u79bb\uff08Geometric Distance\uff09\u7528\u4e8e\u8861\u91cf\u70b9\u4e0e\u5176\u6295\u5f71\u5728\u56fe\u50cf\u7a7a\u95f4\u4e2d\u7684\u771f\u5b9e\u51e0\u4f55\u8bef\u5dee\uff0c\u4e0e\u4ee3\u6570\u8ddd\u79bb\u4e0d\u540c\uff0c\u5b83\u76f4\u63a5\u53cd\u6620\u4e86\u50cf\u7d20\u7ea7\u8bef\u5dee\uff0c\u56e0\u6b64\u66f4\u7b26\u5408\u89c6\u89c9\u610f\u4e49\u4e0b\u7684\u201c\u5339\u914d\u7cbe\u5ea6\u201d\u3002</p> <ul> <li>\\(\\mathbf{x}\\)\uff1a\u539f\u59cb\u89c2\u6d4b\u5230\u7684\u7279\u5f81\u70b9\u5750\u6807</li> <li>\\(\\hat{\\mathbf{x}}\\)\uff1a\u4f30\u8ba1\u6216\u6295\u5f71\u5f97\u5230\u7684\u7279\u5f81\u70b9\u5750\u6807</li> <li>\\(d(\\cdot, \\cdot)\\)\uff1a\u56fe\u50cf\u5e73\u9762\u4e0a\u7684\u6b27\u5f0f\u8ddd\u79bb</li> </ul> <p>\u5355\u5411\u91cd\u6295\u5f71\u8bef\u5dee\uff08Error in one image\uff09 \u53ea\u8003\u8651\u4e00\u5e45\u56fe\u50cf\u4e2d\u7684\u6295\u5f71\u8bef\u5dee\uff1a</p> \\[ \\hat{\\mathbf{H}} = \\underset{\\mathbf{H}}{\\operatorname{argmin}} \\sum_i d\\left(\\mathbf{x}'_i, \\mathbf{H} \\mathbf{x}_i\\right)^2 \\] <p>\u8868\u793a\u627e\u5230\u4e00\u4e2a \\(\\mathbf{H}\\)\uff0c\u4f7f\u5f97\u53d8\u6362\u540e\u7684\u70b9 \\(\\mathbf{H}\\mathbf{x}\\_i\\) \u4e0e\u76ee\u6807\u70b9 \\(\\mathbf{x}'\\_i\\) \u5c3d\u53ef\u80fd\u63a5\u8fd1\u3002</p> <p>\u5bf9\u79f0\u4f20\u9012\u8bef\u5dee\uff08Symmetric Transfer Error\uff09 \u8003\u8651\u53cc\u5411\u6295\u5f71\u8bef\u5dee\uff0c\u4f7f\u8bef\u5dee\u5728\u4e24\u5e45\u56fe\u50cf\u95f4\u5bf9\u79f0\uff1a</p> \\[ \\hat{\\mathbf{H}} = \\underset{\\mathbf{H}}{\\operatorname{argmin}} \\sum_i d\\left(\\mathbf{x}_i, \\mathbf{H}^{-1} \\mathbf{x}'_i\\right)^2 + d\\left(\\mathbf{x}'_i, \\mathbf{H} \\mathbf{x}_i\\right)^2 \\] <p>\u5373\u65e2\u8981\u6c42 \\(\\mathbf{H}\\mathbf{x}\\_i\\) \u63a5\u8fd1 \\(\\mathbf{x}'\\_i\\)\uff0c \u4e5f\u8981\u6c42 \\(\\mathbf{H}^{-1}\\mathbf{x}'\\_i\\) \u63a5\u8fd1 \\(\\mathbf{x}\\_i\\)\u3002</p> <p>\u91cd\u6295\u5f71\u8bef\u5dee\uff08Reprojection Error\uff09 \u51e0\u4f55\u610f\u4e49\u6700\u51c6\u786e\u4f46\u8ba1\u7b97\u6700\u590d\u6742\u7684\u5f62\u5f0f\uff0c \u5b83\u540c\u65f6\u4f18\u5316\u53d8\u6362\u77e9\u9635\u548c\u6700\u4f18\u7684\u4f30\u8ba1\u70b9\u4f4d\u7f6e\uff1a</p> \\[ \\left(\\hat{\\mathbf{H}}, \\hat{\\mathbf{x}}_i, \\hat{\\mathbf{x}}'_i\\right) = \\underset{\\mathbf{H}, \\hat{\\mathbf{x}}_i, \\hat{\\mathbf{x}}'_i}{\\operatorname{argmin}} \\sum_i d\\left(\\mathbf{x}_i, \\hat{\\mathbf{x}}_i\\right)^2 + d\\left(\\mathbf{x}'_i, \\hat{\\mathbf{x}}'_i\\right)^2 \\quad \\text{subject to} \\quad \\hat{\\mathbf{x}}'_i = \\hat{\\mathbf{H}} \\hat{\\mathbf{x}}_i \\] <p>\u8fd9\u76f8\u5f53\u4e8e\u5728\u4e24\u5e45\u56fe\u50cf\u4e2d\u5bfb\u627e\u6700\u63a5\u8fd1\u89c2\u6d4b\u70b9\u7684\u771f\u5b9e\u6295\u5f71\u70b9\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e25\u683c\u6ee1\u8db3\u5355\u5e94\u7ea6\u675f\u3002 \u5b9e\u9645\u4e2d\u901a\u5e38\u901a\u8fc7\u975e\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u4f18\u5316\uff08\u5982 Levenberg\u2013Marquardt\uff09\u8fdb\u884c\u6c42\u89e3\u3002</p>"},{"location":"AbiesNotes/Vision%20Course/CV11_model/","title":"Camera Model","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 438 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"AbiesNotes/Vision%20Course/CV11_model/#_1","title":"\u5c04\u5f71\u51e0\u4f55","text":"<ul> <li> <p>\u6b27\u6c0f\u51e0\u4f55\u4e2d\u7684\u5e73\u9762\u76f4\u7ebf\uff1a\\(ax + by + c = 0\\)</p> </li> <li> <p>\u591a\u4e2a\u65b9\u7a0b\u5bf9\u5e94\u540c\u4e00\u6761\u76f4\u7ebf\uff1a     \\((ka)x + (kb)y + kc = 0, \\forall k \\neq 0\\)</p> </li> <li> <p>\u5e73\u9762\u76f4\u7ebf\u7684\u9f50\u6b21\u8868\u793a\uff1a\\((a, b, c)^T \\sim k(a, b, c)^T\\)</p> </li> <li> <p>\u6b27\u6c0f\u51e0\u4f55\u4e2d\u7684\u5e73\u9762\u70b9\uff1a\\(\\mathbf{x} = (x, y)^T\\)</p> </li> <li> <p>\u70b9\u7684\u9f50\u6b21\u8868\u793a\uff1a</p> </li> </ul> \\[ \\mathbf{x} = (x, y, 1)^T \\quad (x, y, 1)^T \\sim k(x, y, 1)^T, \\forall k \\neq 0 \\] <ul> <li> <p>\u9f50\u6b21\u5750\u6807\\((x_1, x_2, x_3)^T\\)\uff0c\u4f46\u53ea\u6709 2 \u4e2a\u81ea\u7531\u5ea6 (2DOF)</p> </li> <li> <p>\u70b9\u5728\u76f4\u7ebf\u4e0a\uff1a\\(\\mathbf{x}\\)\u5728\u76f4\u7ebf\\(l\\)\u4e0a\u5f53\u4e14\u4ec5\u5f53\uff1a</p> </li> </ul> \\[ \\mathbf{x}^T l = (x, y, 1)(a, b, c)^T = ax + by + c = 0 \\] <ul> <li>\u4e24\u6761\u76f4\u7ebf\\(l\\)\u548c\\(l'\\)\u7684\u4ea4\u70b9\uff1a</li> </ul> \\[ \\mathbf{x} = l \\times l' \\] <p>\u5e73\u884c\u76f4\u7ebf\u53c9\u4e58\uff0c\u6700\u540e\u4e00\u4f4d\u4e3a 0\uff0c\u8868\u793a\u65e0\u7a77\u8fdc\u70b9\u3002 \u6240\u6709\u65e0\u7a77\u8fdc\u70b9\u6392\u6210\u4e00\u6761\u76f4\u7ebf\uff0c\u79f0\u4e3a\u65e0\u7a77\u8fdc\u7ebf\u3002</p> <ul> <li>\u8fc7\u4e24\u70b9\\(\\mathbf{x}\\)\u548c\\(\\mathbf{x}'\\)\u7684\u76f4\u7ebf\uff1a</li> </ul> \\[ l = \\mathbf{x} \\times \\mathbf{x}' \\] <ul> <li>\u4e8c\u6b21\u66f2\u7ebf (Conics)</li> </ul> <p>\u5e73\u9762\u4e0a\u7531\u4e8c\u9636\u65b9\u7a0b\u63cf\u8ff0\u7684\u66f2\u7ebf\uff1a</p> \\[ ax^2 + bxy + cy^2 + dx + ey + f = 0 \\] <p>\u6216\u9f50\u6b21\u5316\u5f62\u5f0f\uff1a</p> \\[ x \\mapsto \\frac{x_1}{x_3}, \\quad y \\mapsto \\frac{x_2}{x_3} \\] \\[ ax_1^2 + bx_1x_2 + cx_2^2 + dx_1x_3 + ex_2x_3 + fx_3^2 = 0 \\] <p>\u6216\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ \\mathbf{x}^T \\mathbf{C} \\mathbf{x} = 0 \\quad \\text{\u5176\u4e2d} \\quad \\mathbf{C} = \\begin{bmatrix} a &amp; b/2 &amp; d/2 \\\\ b/2 &amp; c &amp; e/2 \\\\ d/2 &amp; e/2 &amp; f \\end{bmatrix} \\] <p>\u7cfb\u6570\u6784\u6210\u516d\u7ef4\u5411\u91cf\\({a,b,c,d,e,f}\\)\uff0c\u7531\u4e8e\u53ea\u8003\u8651\u6bd4\u503c\uff0c\u81ea\u7531\u5ea6\u4e3a 5\u3002</p> <ul> <li>\u4e94\u70b9\u5b9a\u4e49\u4e00\u4e2a\u5706\u9525\u66f2\u7ebf</li> </ul> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5706\u9525\u66f2\u7ebf\u7ecf\u8fc7\uff1a</p> \\[ ax_i^2 + bx_iy_i + cy_i^2 + dx_i + ey_i + f = 0 \\] <p>\u6216</p> \\[ \\begin{pmatrix} x_i^2 &amp; x_iy_i &amp; y_i^2 &amp; x_i &amp; y_i &amp; 1 \\end{pmatrix} \\mathbf{c} = 0, \\quad \\mathbf{c} = (a, b, c, d, e, f)^\\top \\] <p>\u5806\u53e0\u7ea6\u675f\u6761\u4ef6\u5f97\u5230\uff1a</p> \\[ \\begin{bmatrix} x_1^2 &amp; x_1y_1 &amp; y_1^2 &amp; x_1 &amp; y_1 &amp; 1 \\\\ x_2^2 &amp; x_2y_2 &amp; y_2^2 &amp; x_2 &amp; y_2 &amp; 1 \\\\ x_3^2 &amp; x_3y_3 &amp; y_3^2 &amp; x_3 &amp; y_3 &amp; 1 \\\\ x_4^2 &amp; x_4y_4 &amp; y_4^2 &amp; x_4 &amp; y_4 &amp; 1 \\\\ x_5^2 &amp; x_5y_5 &amp; y_5^2 &amp; x_5 &amp; y_5 &amp; 1 \\\\ \\end{bmatrix} \\mathbf{c} = 0 \\]"},{"location":"AbiesNotes/Vision%20Course/CV11_model/#_2","title":"\u5c04\u5f71\u53d8\u6362","text":""},{"location":"AbiesNotes/Vision%20Course/CV11_model/#_3","title":"\u5c04\u5f71\u53d8\u6362\u5b9a\u4e49","text":"<p>\u5c04\u5f71\u53d8\u6362\u662f\u4ece \\(P^2\\) \u5230\u5176\u81ea\u8eab\u7684\u53ef\u9006\u6620\u5c04 \\(h\\)\uff0c\u6ee1\u8db3\uff1a\u4e09\u4e2a\u70b9 \\(x_1, x_2, x_3\\) \u5171\u7ebf\u5f53\u4e14\u4ec5\u5f53 \\(h(x_1), h(x_2), h(x_3)\\) \u4e5f\u5171\u7ebf\u3002</p> <p>\u4e00\u4e2a\u6620\u5c04 \\(h: P^2 \\to P^2\\) \u662f\u5c04\u5f71\u53d8\u6362\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u975e\u5947\u5f02\u7684 \\(3 \\times 3\\) \u77e9\u9635 \\(H\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u4f55\u7531\u5411\u91cf \\(x\\) \u8868\u793a\u7684 \\(P^2\\) \u4e2d\u7684\u70b9\uff0c\u90fd\u6709 \\(h(x) = Hx\\) \u6210\u7acb\u3002</p> <p>\u5c04\u5f71\u53d8\u6362 (Projective transformation)</p> \\[ \\begin{pmatrix} x'_1 \\\\ x'_2 \\\\ x'_3 \\end{pmatrix} =\\begin{bmatrix} h_{11} &amp; h_{12} &amp; h_{13} \\\\ h_{21} &amp; h_{22} &amp; h_{23} \\\\ h_{31} &amp; h_{32} &amp; h_{33} \\end{bmatrix} \\begin{pmatrix} x_1 \\\\ x_2 \\\\ x_3 \\end{pmatrix} \\quad \\text{\u6216} \\quad \\mathbf{x'} = \\mathbf{H} \\mathbf{x} \\] <p>\u53d8\u6362\u7684\u5c42\u6b21\u7ed3\u6784\uff1a</p> <ol> <li>\u5c04\u5f71\u7ebf\u6027\u7fa4 (Projective linear group)  </li> <li>\u4eff\u5c04\u7fa4 (Affine group) \u2014\u2014 \u6700\u540e\u4e00\u884c\u662f <code>[0, 0, 1]</code> </li> <li>\u6b27\u51e0\u91cc\u5f97\u7fa4 (Euclidean group) \u2014\u2014 \u5de6\u4e0a\u89d2 2x2 \u5b50\u77e9\u9635\u4e3a\u6b63\u4ea4\u77e9\u9635  </li> <li>\u5b9a\u5411\u6b27\u51e0\u91cc\u5f97\u7fa4 (Oriented Euclidean group) \u2014\u2014 \u5de6\u4e0a\u89d2 2x2 \u5b50\u77e9\u9635\u884c\u5217\u5f0f\u4e3a 1</li> </ol> <p>\u5c04\u5f71\u53d8\u6362\u53ea\u4fdd\u7559\u76f4\u7ebf\uff0c\u4eff\u5c04\u4e2d\u8fd8\u4fdd\u7559\u5e73\u884c\u3001\u6b27\u51e0\u91cc\u5f97\u53d8\u6362\u8fd8\u4fdd\u7559\u89d2\u5ea6</p> <p>\u76f8\u4f3c\u5f62\uff1a\u7ecf\u8fc7\u76f8\u4f3c\u53d8\u6362\uff08\u653e\u7f29\u3001\u65cb\u8f6c\u3001\u5e73\u79fb\uff09\u540e\u5f97\u5230\u7684\u56fe\u5f62 \u5c04\u5f71\u53d8\u6362\u53ef\u4ee5\u5206\u89e3\u4e3a\u76f8\u4f3c\u53d8\u6362\u548c\u5207\u53d8\u7684\u7ec4\u5408</p>"},{"location":"AbiesNotes/Vision%20Course/CV11_model/#_4","title":"\u65e0\u7a77\u8fdc\u7ebf","text":"\\[ l_\\infty' = \\mathbf{H}^{-T} l_\\infty =  \\begin{bmatrix} \\mathbf{A}^T &amp; \\mathbf{0} \\\\ -\\mathbf{A}^T \\mathbf{t} &amp; 1 \\end{bmatrix} \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\end{pmatrix} = l_\\infty \\] <p>\u65e0\u7a77\u8fdc\u7ebf \\(l_\\infty\\) \u5728\u5c04\u5f71\u53d8\u6362 \\(\\mathbf{H}\\) \u4e0b\u4fdd\u6301\u4e0d\u53d8\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(\\mathbf{H}\\) \u662f\u4e00\u4e2a\u4eff\u5c04\u53d8\u6362\u3002</p>"},{"location":"CourseNotes/note_index/","title":"\u6249\u9875","text":"<ul> <li> <p>Frontispiece</p> <p>(\uff61\u2022\u0301 \u2038 \u2022\u0300\uff61)\u3063\u2661</p> <p>\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u7b14\u8bb0\u90fd\u6ca1\u6574\u7406\u8fc7  </p> <p>\u8fd9\u4e2a\u4eba\u7684\u7b14\u8bb0\u5927\u591a\u662f\u81ea\u5df1\u7684\u63d0\u7eb2\u6216\u5907\u6ce8\uff0c\u4e0d\u5efa\u8bae\u4f5c\u4e3a\u521d\u5b66\u8d44\u6599</p> </li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/","title":"AVL\u6811, Splay\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 62 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#ads-lec-01-avl","title":"ADS Lec 01 AVL \u6811\u548c\u4f38\u5c55\u6811","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#avl","title":"AVL \u6811","text":"<p>\u6811\u7684\u9ad8\u5ea6\uff1a\u6839\u8282\u70b9\u5230\u6700\u8fdc\u7684\u53f6\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u8fb9\u6570\uff09</p> <p>\u5e73\u8861\u4e8c\u53c9\u6811\uff1a\u4e8c\u53c9\u641c\u7d22\u6811+\u6240\u6709\u8282\u70b9|\u5de6\u5b50\u6811\u9ad8\u5ea6-\u53f3\u5b50\u6811\u9ad8\u5ea6|&lt;=1\uff08\u5e73\u8861\u56e0\u5b50&lt;=1\uff09 \u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u548c\u4e0d\u540c\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\uff0c\u53ea\u662f\u6bcf\u6b21\u518d\u68c0\u67e5\u662f\u5426\u5e73\u8861</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#_1","title":"\u67e5\u627e/\u63d2\u5165","text":"<p>\u5de6\u65cb\uff1a\u5411\u5de6\u65cb\u8f6c\uff0c\u51b2\u7a81\u7684\u5de6\u5b69\u53d8\u53f3\u5b69 \u53f3\u65cb\uff1a\u5411\u53f3\u65cb\u8f6c\uff0c\u51b2\u7a81\u7684\u53f3\u5b69\u53d8\u5de6\u5b69</p> <p>\u4ec0\u4e48\u65f6\u5019\u3001\u4ec0\u4e48\u8282\u70b9\u5de6\u65cb/\u53f3\u65cb\uff1f</p> <p>LL \u578b\uff08\u5931\u8861\u8282\u70b9 2\uff0c\u5931\u8861\u8282\u70b9\u5de6\u5b69\u5b50 1\uff09\uff1a\u5931\u8861\u8282\u70b9\u53f3\u65cb RR \u578b\uff08\u5931\u8861\u8282\u70b9-2\uff0c\u5931\u8861\u8282\u70b9\u53f3\u5b69\u5b50-1\uff09\uff1a\u5931\u8861\u8282\u70b9\u5de6\u65cb LR \u578b\uff08\u5931\u8861\u8282\u70b9 2\uff0c\u5931\u8861\u8282\u70b9\u5de6\u5b69\u5b50-1\uff09\uff1a\u5de6\u5b69\u5b50\u5de6\u65cb\uff0c\u5931\u8861\u8282\u70b9\u53f3\u65cb RL \u578b\uff08\u5931\u8861\u8282\u70b9-2\uff0c\u5931\u8861\u8282\u70b9\u53f3\u5b69\u5b50-1\uff09\uff1a\u53f3\u5b69\u5b50\u53f3\u65cb\uff0c\u5931\u8861\u8282\u70b9\u5de6\u65cb</p> <p>\u600e\u4e48\u5224\u65ad\u662f\u54ea\u79cd\u60c5\u51b5\uff1f</p> <p>\u68c0\u67e5\u63d2\u5165\u7684\u8282\u70b9\u5728\u5931\u8861\u8282\u70b9\u7684\u54ea\u4e2a\u5b69\u5b50\u7684\u54ea\u4e2a\u5b50\u6811\u4e0a\u3002 \u6216\u5206\u522b\u770b\u5931\u8861\u8282\u70b9\u3001\u5de6\u53f3\u5b69\u5b50\u7684\u5e73\u8861\u8282\u70b9\u3002</p> <p>\u82e5\u540c\u65f6\u6709\u591a\u4e2a\u7956\u5148\u5931\u8861\uff0c\u53ea\u8981\u8c03\u6574\u8ddd\u79bb\u6700\u8fd1\u7684\u5931\u8861\u8282\u70b9\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#_2","title":"\u5220\u9664","text":"<p>\u5220\u9664\u64cd\u4f5c\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\uff0c\u7528\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u6700\u63a5\u8fd1\u7684\u8282\u70b9\u66ff\u6362\uff0c\u68c0\u67e5\u5e73\u8861\u3002 \u9700\u8981\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u7956\u5148\u3001\u4ece\u4e0b\u5230\u4e0a\u68c0\u67e5\uff0c\u5982\u679c\u5931\u8861\u53ef\u80fd\u9700\u8981\u8c03\u6574\u591a\u6b21\u3002</p> <p>\u7ed9\u5b9a\u6811\u9ad8 h\uff0cAVL \u6811\u81f3\u5c11\u6709\u51e0\u4e2a\u8282\u70b9\uff1f</p> <p>\u201c\u6811\u9ad8\u201d\u5b9a\u4e49\u4e3a\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u3002\u7a7a\u7684\u6570\u9ad8\u5ea6\u4e3a-1\uff0c\u53ea\u6709\u6839\u8282\u70b9\u7684\u6811\u9ad8\u5ea6\u4e3a 0\u3002 \u8bb0\\(N(h)\\)\u4e3a\u9ad8\u5ea6 h \u7684 AVL \u6811\u7684\u6700\u5c0f\u8282\u70b9\u6570\u3002</p> <p>\u7531\u4e8e\u5e0c\u671b\u603b\u8282\u70b9\u6570\u6700\u5c11\uff0c\u5e73\u8861\u56e0\u5b50\u5c3d\u91cf\u4e3a\\(\\pm 1\\)\uff0c\u5373\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u4e00\u4e2a\u4e3a\\(h\\)\u3001\u4e00\u4e2a\u4e3a\\(h-1\\)\u3002\u56e0\u6b64\\(N(h)=N(h-1)+N(h-2)+1\\)\u3002</p> <p>\u521d\u59cb\u6761\u4ef6\uff1a\\(N(-1)=0\\)\uff0c\\(N(0)=1\\)</p> <p>\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a\\(F_1=1, F_2=2, F_3=3, F_4=5\\cdots F_n=F_{n-1}+F_{n-2}\\)</p> <p>\u9012\u63a8\u7ed3\u679c\uff1a\\(N(h)=F_{h+2}-1\\)</p> <p>\u7531\u4e8e\\(F_n\\approx\\phi^n / \\sqrt{5}\\)\uff0c\u5176\u4e2d\\(\\phi\\approx 1.618\\)\uff0c\\(N(h)\\approx\\phi^{h+2}-1\\)\uff0c\u4e3a\u6307\u6570\u7ea7\u522b\u3002</p> <p>\u6545\u5982\u679c AVL \u6811\u6709 n \u4e2a\u8282\u70b9\uff0c\u5219\u6811\u9ad8\u4e3a\\(O(\\log n)\\)\u7ea7\u522b\u3002</p> <p>\u7ed9\u5b9a\u6811\u9ad8 h\uff0cAVL \u6811\u81f3\u591a\u6709\u51e0\u4e2a\u8282\u70b9\uff1f</p> <p>\u8bb0\\(M(h)\\)\u4e3a\u9ad8\u5ea6 h \u7684 AVL \u6811\u7684\u6700\u5c0f\u8282\u70b9\u6570\u3002</p> <p>\u4e3a\u4e86\u4f7f\u8282\u70b9\u6570\u6700\u591a\uff0c\u6811\u5e94\u8be5\u5c3d\u91cf\u9971\u6ee1\uff0c\u5de6\u53f3\u5b50\u6811\u7684\u6811\u9ad8\u90fd\u4e3a\\(h-1\\)\u3002</p> <p>\u9012\u63a8\u5173\u7cfb\uff1a\\(M(h)=2M(h-1)+1\\)\uff1b\u521d\u59cb\u6761\u4ef6\uff1a\\(M(-1)=0\\)\uff0c\\(M(0)=1\\)</p> <p>\u9012\u63a8\u7ed3\u679c\uff1a\\(M(h)=2^{h}-1\\)</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#splay-tree","title":"\u4f38\u5c55\u6811\uff08Splay Tree\uff09","text":"<p>\u4f38\u5c55\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u7684 BST\uff0c\u5b83\u7684\u6838\u5fc3\u539f\u7406\u662f\u5728\u6bcf\u6b21\u8bbf\u95ee\u8282\u70b9\u65f6\uff0c\u5c06\u8be5\u8282\u70b9\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\u201c\u4f38\u5c55\u201d\u5230\u6839\u8282\u70b9\u3002</p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f38\u5c55\u6811\u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f18\u5316\u9891\u7e41\u8bbf\u95ee\u8282\u70b9\u7684\u67e5\u8be2\u6548\u7387\uff08\u4e0d\u4ec5\u63a8\u5230\u6839\u90e8\uff0c\u8fd8\u5c06\u6811\u9ad8\u53d8\u6210\u7ea6\u4e00\u534a\uff09\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#_3","title":"\u8bbf\u95ee\u8282\u70b9","text":"<p>\u6bcf\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u67e5\u627e\u3001\u63d2\u5165\u6216\u5220\u9664\u65f6\uff0c\u901a\u8fc7\u65cb\u8f6c\u5c06\u8be5\u8282\u70b9\u63d0\u5347\u5230\u6839\u90e8</p> <p>\u65cb\u8f6c\u7684\u64cd\u4f5c\uff1a</p> <p>\u5f53\u524d\u8282\u70b9\u3001\u7236\u4eb2\u3001\u7237\u7237\u4e3a LR \u6216 RL \u578b\uff1a\u65cb\u8f6c\u64cd\u4f5c\u548c AVL \u6811\u76f8\u540c\uff0c\u79f0\u4e3a zig-zag\uff08\u4e24\u6b21\u65cb\u8f6c\u65b9\u5411\u76f8\u53cd\uff09 \u5f53\u524d\u8282\u70b9\u3001\u7236\u4eb2\u3001\u7237\u7237\u4e3a LL \u6216 RR \u578b\uff1a\u5148\u65cb\u8f6c\u7237\u7237\u3001\u518d\u65cb\u8f6c\u7236\u4eb2\uff0c\u548c AVL \u6811\u76f8\u6bd4\u591a\u4e00\u6b21\u7236\u4eb2\u7684\u65cb\u8f6c\uff0c\u79f0\u4e3a zig-zig\uff08\u4e24\u6b21\u65cb\u8f6c\u65b9\u5411\u76f8\u540c\uff09 esp. \u5f53\u524d\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u513f\u5b50\u65f6\uff0c\u53ea\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff0c\u79f0\u4e3a zig</p> <p>AVL \u6811\u548c Splay \u6811\u5728 LL \u578b\u3001RR \u578b\u65cb\u8f6c\u7684\u533a\u522b\uff1a</p> <p></p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#_4","title":"\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664","text":"<ul> <li>\u67e5\u8be2\uff1a\u6839\u636e BST \u627e\u5230\u8981\u67e5\u8be2\u7684\u70b9\uff0c\u65cb\u8f6c\u5230\u6839\u90e8</li> <li>\u63d2\u5165\uff1a\u6839\u636e BST \u627e\u5230\u8981\u63d2\u5165\u7684\u70b9\uff0c\u63d2\u5165\uff0c\u5e76\u65cb\u8f6c\u5230\u6839\u90e8</li> <li>\u5220\u9664\uff1a\u5148\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\u3001\u65cb\u8f6c\u5230\u6839\u90e8\uff0c\u5220\u9664\u6839\u8282\u70b9\uff0c\u5408\u5e76\u5de6\u53f3\u5b50\u6811\uff08\u5c06\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u6216\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684 splay \u5230\u6839\u90e8\uff0c\u8fde\u63a5\u5269\u4f59\u5b50\u6811\uff09</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#_5","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u5206\u6790\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u65f6\uff0c\u5982\u679c\u7528\u6240\u6709\u64cd\u4f5c\u4e2d\u7684\u6700\u574f\u60c5\u51b5*\u64cd\u4f5c\u6b21\u6570\uff0c\u4f1a\u5e26\u6765\u5927\u91cf\u5197\u4f59\u7684\u65f6\u95f4\u4ee3\u4ef7\uff0c\u5bfc\u81f4\u4f30\u8ba1\u7684 TC \u8fdc\u5927\u4e8e\u5b9e\u9645\u503c\u3002</p> <p>\u644a\u8fd8\u5206\u6790\u76f8\u5f53\u4e8e\u5c06\u4ee3\u4ef7\u5927\u7684\u6b65\u9aa4\u5206\u644a\u5230\u4ee3\u4ef7\u5c0f\u7684\u6b65\u9aa4\uff0c\u5f97\u5230\u66f4\u63a5\u8fd1\u5b9e\u9645\u7684\u7ed3\u679c\u3002</p> <p>\u644a\u8fd8\u5206\u6790\u5206\u4e3a\u805a\u5408\u6cd5\u3001\u6838\u6cd5\u3001\u52bf\u80fd\u6cd5\u4e09\u79cd\u3002</p> <p>\u805a\u5408\u6cd5\uff1a\u5e73\u5747\u4ee3\u4ef7 = \u603b\u4ee3\u4ef7 / \u64cd\u4f5c\u6b21\u6570</p> <p>\u6838\u6cd5\uff1a\u5b9a\u4e49\u57fa\u51c6\u4ee3\u4ef7\uff0c\u6bcf\u6b21\u591a\u7684\u8bb0\u4e3a\u8d1f\u3001\u5c11\u7684\u8bb0\u4e3a\u6b63\uff0c\u8981\u7ef4\u6301\u8d26\u6237\u603b\u6570\u503c\u5927\u4e8e\u96f6</p> <p>\u52bf\u80fd\u6cd5\uff1a\u5b9a\u4e49\u5173\u4e8e\u72b6\u6001\u7684\u52bf\u80fd\u51fd\u6570\uff0c\u5bf9\u4e8e\u4ee3\u4ef7\u5927\u7684\u64cd\u4f5c\uff0c\u7528\u52bf\u80fd\u7684\u4e0b\u964d\u62b5\u6d88\u64cd\u4f5c\u7684\u4ee3\u4ef7</p> <p>\u8be6\u89c1\u8fd9\u4e24\u7bc7\u6587\u7ae0\uff1a</p> <ul> <li> <p>\u805a\u5408\u6cd5\u3001\u6838\u6cd5</p> </li> <li> <p>\u52bf\u80fd\u6cd5</p> </li> </ul> <p>push, pop, multipop</p> <p>\u64cd\u4f5c\u4ee3\u4ef7\\(\\Phi_1\\)\uff0c\u52bf\u51fd\u6570\\(\\Phi_2=\\text{height of stack}\\)</p> \\[\\Phi_1 +\\Phi_2=2n\\,,\\, \\Phi_2(n)&lt;n\\] \\[|\\Phi_1|=|(\\Phi_1 + \\Phi_2)-\\Phi_2|\\le|\\Phi_1 +\\Phi_2|+|\\Phi_2|=3n\\]"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS01/#splay","title":"Splay \u6811\u7684\u644a\u8fd8\u5206\u6790","text":"<p>\uff08\u8be6\u89c1\u540e\u9762\u56fe\u7247\uff09</p> <p>n \u8282\u70b9\u7684\u4f38\u5c55\u6811\uff0c\u8fde\u7eed M \u6b21\u641c\u7d22\u9700\u8981 \\(O(M\\log n+n\\log n)\\) \u65f6\u95f4\u3002</p> \\[\\lim _{M\\to\\infty}\\frac{M\\log n+n\\log n}{M}=\\log n\\] <ul> <li>\\(\\Phi_1\\)\uff1a\u6bcf\u6b21\u65cb\u8f6c\u6b21\u6570</li> <li>\\(\\Phi_2\\)\uff1a\\(Rank(z)=\\log_2(\\text{decendents of z})\\, ,\\, \\Phi_2=\\displaystyle\\sum_{z\\in \\text{Tree}}Rank(z)\\)</li> </ul> <p>Splay(x)\u65f6\uff0c\u6bcf\u4e00\u6b65\u64cd\u4f5c\u6709\uff1a</p> \\[\\text{steps}+\\Delta\\Phi_2\\le 3(Rank'(x)-Rank(x))+1\\] \\[Rank'(x)=\\log_2 n\\] <p>\u8bc1\u660e\uff1a</p> <p>\u5bf9\u6bcf\u4e00\u6b65\u6c42\u548c\uff1a</p> \\[\\sum\\text{steps}+\\Phi_2(T_M)-\\Phi_2(T_0)\\le 3\\log_2 n+1\\] Splay \u6811\u8be6\u7ec6\u8bc1\u660e <p></p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/","title":"\u7ea2\u9ed1\u6811, B+\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1074 \u4e2a\u5b57\u00a0\u00a012 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#ads-lec-02-b","title":"ADS Lec 02 \u7ea2\u9ed1\u6811\u548c B+\u6811","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_1","title":"\u7ea2\u9ed1\u6811","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_2","title":"\u7ea2\u9ed1\u6811\u6027\u8d28","text":"<ol> <li>\u8282\u70b9\u4e3a\u7ea2\u8272\u6216\u9ed1\u8272</li> <li>\u6839\u8282\u70b9\u4e3a\u9ed1\u8272\uff0cNIL \u8282\u70b9\uff08\u7a7a\u53f6\u5b50\u8282\u70b9\uff09\u4e3a\u9ed1\u8272</li> <li>\u7ea2\u8272\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e3a\u9ed1\u8272</li> <li>\u4ece\u6839\u8282\u70b9\u5230 NIL \u8282\u70b9\u7684\u6bcf\u6761\u8def\u5f84\u4e0a\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u76f8\u540c</li> </ol> <p>\u5408\u6cd5\u7ea2\u9ed1\u6811\u7684\u7ea2\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u4e00\u5b9a\u90fd\u662f\u53f6\u5b50\u6216\u90fd\u4e0d\u662f\u53f6\u5b50\u3002</p> <p>\u4ece\u6839\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\uff0c\u6700\u957f\u8def\u5f84\u6700\u591a\u662f\u6700\u77ed\u8def\u5f84\u7684\u4e24\u500d\u3002</p> <p>\u6709 N \u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\uff0c\u6811\u9ad8\u6700\u5927\u4e3a\\(2\\log_2(N+1)\\) \uff08bh \u8868\u793a\u9ed1\u9ad8\uff0ch \u8868\u793a\u6811\u9ad8\uff0c\\(N\\ge 2^{bh}-1\\), \u5373 \\(bh\\le\\log_2(N+1)\\)\uff0c\\(h\\le 2\\, bh=2\\log_2(N+1)\\)\uff09</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_3","title":"\u63d2\u5165","text":"<p>\u63d2\u5165\u8282\u70b9\u9ed8\u8ba4\u4e3a\u7ea2\u8272\u3002</p> <ol> <li>\u63d2\u5165\u8282\u70b9\u662f\u6839\u8282\u70b9\uff1a\u76f4\u63a5\u53d8\u9ed1</li> <li>father \u4e3a\u7ea2\u8272\uff0cuncle \u4e3a\u7ea2\u8272\uff1auncle, father, grandfather \u53d8\u8272\uff0c\u5c06 grandfather \u4f5c\u4e3a\u63d2\u5165\u8282\u70b9\u91cd\u65b0\u5224\u65ad</li> <li>father \u4e3a\u7ea2\u8272\uff0cuncle \u4e3a\u9ed1\u8272\uff1a\uff08LL, RR, LR, RL\uff09\u65cb\u8f6c\uff0c\u518d\u53d8\u8272</li> </ol>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_4","title":"\u5220\u9664","text":"<p>\u56de\u5fc6\u4e8c\u53c9\u6811\u7684\u5220\u9664\uff1a</p> <ol> <li>\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664</li> <li>\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff1a\u76f4\u63a5\u7528\u5b69\u5b50\u4ee3\u66ff</li> <li>\u6709\u4e24\u4e2a\u5b69\u5b50\uff1a\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u6216\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\uff0c\u4ee3\u66ff\u5220\u9664\u8282\u70b9\uff0c\u7ee7\u7eed\u5220\u9664\u8fd9\u4e2a\u8282\u70b9</li> </ol> <p>\u7ea2\u9ed1\u6811\u5220\u9664\uff1a\u5148\u6309\u4e8c\u53c9\u641c\u7d22\u6811\u65b9\u6cd5\u5220\u9664\uff0c\u518d\u8c03\u6574\u3002 \u7b2c\u4e09\u79cd\u4e00\u5b9a\u4f1a\u8f6c\u5316\u4e3a\u524d\u4e24\u79cd\uff0c\u53ea\u8ba8\u8bba\u524d\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff1a\u4e00\u5b9a\u662f\u5f53\u524d\u9ed1\uff0c\u552f\u4e00\u7684\u5b69\u5b50\u7ea2\uff0c\u4e14\u5b69\u5b50\u4e3a\u53f6\u8282\u70b9\u3002 \u76f4\u63a5\u7528\u5b69\u5b50\u7ea2\u8282\u70b9\u4ee3\u66ff\uff0c\u518d\u5c06\u4ee3\u66ff\u540e\u7684\u8282\u70b9\u53d8\u9ed1</p> <p>\u6ca1\u6709\u5b69\u5b50\uff0c\u4e14\u5220\u9664\u7ea2\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664</p> <p>\u6ca1\u6709\u5b69\u5b50\uff0c\u4e14\u5220\u9664\u9ed1\u8282\u70b9\uff1a \u8ba4\u4e3a\u5220\u9664\u540e\u66ff\u6362\u7684 NIL \u4e3a\u201c\u53cc\u9ed1\u8282\u70b9\u201d</p> <ol> <li>\u5144\u5f1f\u662f\u9ed1\u8272\uff1a</li> <li>\u5144\u5f1f\u81f3\u5c11\u6709\u4e00\u4e2a\u7ea2\u8272\u5b69\u5b50\uff1a\u6839\u636e\u7236\u4eb2 p\u3001\u5144\u5f1f s\u3001\u5144\u5f1f\u7ea2\u5b69\u5b50 r \u5173\u7cfb\uff08LL,RR,LR,RL\uff09\u53d8\u8272+\u65cb\u8f6c\uff0c\u53cc\u9ed1\u6062\u590d\u4e3a\u5355\u9ed1<ol> <li>LL \u578b\u548c RR \u578b\uff1ar \u53d8 s\uff0cs \u53d8 p\uff0cp \u53d8\u9ed1</li> <li>LR \u578b\u548c RL \u578b\uff1ar \u53d8 p\uff0cp \u53d8\u9ed1</li> </ol> </li> <li>\u5144\u5f1f\u7684\u5b69\u5b50\u90fd\u662f\u9ed1\u8272\uff1a\u5144\u5f1f\u53d8\u7ea2\uff0c\u53cc\u9ed1\u4e0a\u79fb\u5230\u7236\u8282\u70b9<ol> <li>\u7236\u8282\u70b9\u4e3a\u7ea2\uff1a\u76f4\u63a5\u5c06\u7236\u8282\u70b9\u53d8\u9ed1</li> <li>\u7236\u8282\u70b9\u4e3a\u9ed1\uff1a\u53cc\u9ed1\u4e0a\u79fb\u5230\u7236\u8282\u70b9\uff0c\u5bf9\u7236\u8282\u70b9\u91cd\u590d\u64cd\u4f5c</li> <li>\u7236\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff1a\u53cc\u9ed1\u4e0a\u79fb\u540e\u78b0\u5230\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u53d8\u6210\u5355\u9ed1</li> </ol> </li> <li>\u5144\u5f1f\u662f\u7ea2\u8272\uff1a    \u5144\u7236\u53d8\u8272\uff0c\u7236\u4eb2\u671d\u53cc\u9ed1\u8282\u70b9\u65cb\u8f6c\uff0c\u4fdd\u6301\u53cc\u9ed1\u7ee7\u7eed\u8c03\u6574</li> </ol> <p></p> \u7ea2\u9ed1\u6811\u4ee3\u7801\u793a\u4f8b C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nenum Color { RED, BLACK };\n\nstruct Node {\n   int val;\n   Color color;\n   Node *l, *r, *p;\n\n   Node(int val) : val(val), color(RED), l(nullptr), r(nullptr), p(nullptr) {}\n};\n\nclass RBTree {\n   private:\n   Node* root;\n\n   // \u5de6\u65cb\n   void rotLeft(Node* x) {\n      Node* y = x-&gt;r;\n      x-&gt;r = y-&gt;l;\n      if (y-&gt;l)\n            y-&gt;l-&gt;p = x;\n\n      y-&gt;p = x-&gt;p;\n      if (!x-&gt;p)\n            root = y;\n      else if (x == x-&gt;p-&gt;l)\n            x-&gt;p-&gt;l = y;\n      else\n            x-&gt;p-&gt;r = y;\n\n      y-&gt;l = x;\n      x-&gt;p = y;\n   }\n\n   // \u53f3\u65cb\n   void rotRight(Node* x) {\n      Node* y = x-&gt;l;\n      x-&gt;l = y-&gt;r;\n      if (y-&gt;r)\n            y-&gt;r-&gt;p = x;\n\n      y-&gt;p = x-&gt;p;\n      if (!x-&gt;p)\n            root = y;\n      else if (x == x-&gt;p-&gt;l)\n            x-&gt;p-&gt;l = y;\n      else\n            x-&gt;p-&gt;r = y;\n\n      y-&gt;r = x;\n      x-&gt;p = y;\n   }\n\n   // \u63d2\u5165\u540e\u8c03\u6574\n   // case 1\uff1a\u7236\u7ea2\u3001\u53d4\u7ea2\uff0c\u7236\u53d4\u53d8\u9ed1\u3001\u7237\u53d8\u7ea2\uff0c\u9012\u5f52\u5411\u4e0a\n   // case 2\uff1a\u7236\u7ea2\u3001\u53d4\u9ed1\u3001LL/RR\uff0c\u7236\u53d8\u9ed1\u3001\u7237\u53d8\u7ea2\uff0c\u65cb\u8f6c\u7237\u7237\n   // case 3\uff1a\u7236\u7ea2\u3001\u53d4\u9ed1\u3001LR/RL\uff0c\u5148\u65cb\u8f6c\u7236\u4eb2\u8f6c\u4e3acase2\uff0c\u518d\u5904\u7406\n   void insertFix(Node* z) {\n      while (z-&gt;p &amp;&amp; z-&gt;p-&gt;color == RED) {\n            if (z-&gt;p == z-&gt;p-&gt;p-&gt;l) {  // \u7236\u4eb2\u662f\u5de6\u8282\u70b9\n               Node* y = z-&gt;p-&gt;p-&gt;r;  // y\u8868\u793a\u53d4\u53d4\u8282\u70b9\n               // case 1: \u53d4\u53d4\u662f\u7ea2\u8272\n               if (y &amp;&amp; y-&gt;color == RED) {\n                  z-&gt;p-&gt;color = BLACK;\n                  y-&gt;color = BLACK;\n                  z-&gt;p-&gt;p-&gt;color = RED;\n                  z = z-&gt;p-&gt;p;  // \u7ee7\u7eed\u5411\u4e0a\u8c03\u6574\n               } else {\n                  // case 3 LR: z\u662f\u53f3\u5b69\u5b50\uff0c\u5148\u8f6c\u4e3aLL\n                  if (z == z-&gt;p-&gt;r) {\n                        z = z-&gt;p;    // \u5148\u66f4\u65b0z\u6307\u5411\u7236\u4eb2\n                        rotLeft(z);  // \u5de6\u65cb\u7236\u4eb2\uff0c\u53d8\u6210LL\u60c5\u51b5\n                  }\n                  // case 2 LL: z\u662f\u5de6\u5b69\u5b50\n                  z-&gt;p-&gt;color = BLACK;\n                  z-&gt;p-&gt;p-&gt;color = RED;\n                  rotRight(z-&gt;p-&gt;p);  // \u53f3\u65cb\u7237\u7237\n               }\n            } else {                   // \u7236\u4eb2\u662f\u53f3\u8282\u70b9\uff08\u955c\u50cf\u64cd\u4f5c\uff09\n               Node* y = z-&gt;p-&gt;p-&gt;l;  // \u53d4\u53d4\u8282\u70b9\n               // case 1: \u53d4\u53d4\u662f\u7ea2\u8272\n               if (y &amp;&amp; y-&gt;color == RED) {\n                  z-&gt;p-&gt;color = BLACK;\n                  y-&gt;color = BLACK;\n                  z-&gt;p-&gt;p-&gt;color = RED;\n                  z = z-&gt;p-&gt;p;\n               } else {\n                  // case 3 RL: z\u662f\u5de6\u5b69\u5b50\uff0c\u5148\u8f6c\u4e3aRR\n                  if (z == z-&gt;p-&gt;l) {\n                        z = z-&gt;p;     // \u5148\u66f4\u65b0z\u6307\u5411\u7236\u4eb2\n                        rotRight(z);  // \u53f3\u65cb\u7236\u4eb2\uff0c\u53d8\u6210RR\u60c5\u51b5\n                  }\n                  // case 2 RR: z\u662f\u53f3\u5b69\u5b50\n                  z-&gt;p-&gt;color = BLACK;\n                  z-&gt;p-&gt;p-&gt;color = RED;\n                  rotLeft(z-&gt;p-&gt;p);  // \u5de6\u65cb\u7237\u7237\n               }\n            }\n      }\n      root-&gt;color = BLACK;  // \u6839\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\n   }\n\n   // \u7528\u5b50\u6811v\u66ff\u6362u\n   void transplant(Node* u, Node* v) {\n      if (!u-&gt;p)\n            root = v;\n      else if (u == u-&gt;p-&gt;l)\n            u-&gt;p-&gt;l = v;\n      else\n            u-&gt;p-&gt;r = v;\n\n      if (v)\n            v-&gt;p = u-&gt;p;\n   }\n\n   // \u627e\u6700\u5c0f\u8282\u70b9\n   Node* minNode(Node* x) {\n      while (x-&gt;l)\n            x = x-&gt;l;\n      return x;\n   }\n\n   // \u5220\u9664\u540e\u8c03\u6574\n   // case 1\uff1a\u5144\u7ea2\uff0c\u5144\u7236\u53d8\u8272\uff0c\u7236\u5411\u53cc\u9ed1\u8f6c\uff0c\u8f6c\u5316\u4e3a\u5176\u4ed6\u60c5\u51b5\n   // case 2\uff1a\u5144\u9ed1\u3001\u5144\u5f1f\u513f\u5b50\u90fd\u9ed1\uff0c\u5144\u53d8\u7ea2\uff0c\u53cc\u9ed1\u4e0a\u79fb\u5230\u7236\uff0c\u9012\u5f52\n   // case 3\uff1a\u5144\u9ed1\u3001\u5144\u4e00\u4e2a\u513f\u5b50\u7ea2\u3001LL/RR\uff0c\u7ea2\u513f\u5b50\u53d8\u7236\u3001\u7236\u53d8\u9ed1\uff0c\u7236\u8f6c\n   // case 4\uff1a\u5144\u9ed1\u3001\u5144\u4e00\u4e2a\u513f\u5b50\u7ea2\u3001LR/RL\uff0c\u7ea2\u513f\u5b50\u3001\u5144\u53d8\u8272\uff0c\u5144\u8f6c\uff0c\u8f6c\u5316\u4e3acase 3\n   void deleteFix(Node* x, Node* xp) {\n      while (x != root &amp;&amp; (!x || x-&gt;color == BLACK)) {\n            if (x == xp-&gt;l) {     // \u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u5de6\u513f\u5b50\n               Node* s = xp-&gt;r;  // s\u8868\u793a\u5144\u5f1f\n               // case 1\n               if (s &amp;&amp; s-&gt;color == RED) {\n                  x-&gt;color = BLACK;\n                  xp-&gt;color = RED;\n                  rotLeft(xp);\n                  s = xp-&gt;r;\n               }\n               // case 2\n               if ((!s-&gt;l || s-&gt;l-&gt;color == BLACK) &amp;&amp;\n                  (!s-&gt;r || s-&gt;r-&gt;color == BLACK)) {\n                  if (s)\n                        s-&gt;color = RED;\n                  x = xp;\n                  xp = xp-&gt;p;\n               }\n               // case 3 RL\n               else {\n                  if (!s-&gt;r || s-&gt;r-&gt;color == BLACK) {\n                        if (s-&gt;l)\n                           s-&gt;l-&gt;color = BLACK;\n                        s-&gt;color = RED;\n                        rotRight(s);\n                        s = xp-&gt;r;\n                  }\n                  // case 4 RR\n                  s-&gt;color = xp-&gt;color;\n                  xp-&gt;color = BLACK;\n                  if (s-&gt;r)\n                        s-&gt;r-&gt;color = BLACK;\n                  rotLeft(xp);\n                  x = root;\n                  break;\n               }\n            } else {\n               Node* s = xp-&gt;l;\n               if (s &amp;&amp; s-&gt;color == RED) {\n                  s-&gt;color = BLACK;\n                  xp-&gt;color = RED;\n                  rotRight(xp);\n                  s = xp-&gt;l;\n               }\n               if ((!s-&gt;l || s-&gt;l-&gt;color == BLACK) &amp;&amp;\n                  (!s-&gt;r || s-&gt;r-&gt;color == BLACK)) {\n                  if (s)\n                        s-&gt;color = RED;\n                  x = xp;\n                  xp = xp-&gt;p;\n               } else {\n                  if (!s-&gt;l || s-&gt;l-&gt;color == BLACK) {\n                        if (s-&gt;r)\n                           s-&gt;r-&gt;color = BLACK;\n                        s-&gt;color = RED;\n                        rotLeft(s);\n                        s = xp-&gt;l;\n                  }\n                  if (s-&gt;l)\n                        s-&gt;l-&gt;color = BLACK;\n                  rotRight(xp);\n                  x = root;\n                  break;\n               }\n            }\n      }\n      if (x)\n            x-&gt;color = BLACK;\n   }\n\n   public:\n   RBTree() : root(nullptr) {}\n\n   // \u63d2\u5165\n   void insert(int val) {\n      Node* z = new Node(val);\n      Node* y = nullptr;\n      Node* x = root;\n\n      while (x) {\n            y = x;\n            if (z-&gt;val &lt; x-&gt;val)\n               x = x-&gt;l;\n            else\n               x = x-&gt;r;\n      }\n\n      z-&gt;p = y;\n      if (!y)\n            root = z;\n      else if (z-&gt;val &lt; y-&gt;val)\n            y-&gt;l = z;\n      else\n            y-&gt;r = z;\n\n      insertFix(z);\n   }\n\n   // \u5220\u9664\n   void remove(int val) {\n      Node* z = root;\n      while (z &amp;&amp; z-&gt;val != val)\n            z = (val &lt; z-&gt;val ? z-&gt;l : z-&gt;r);\n      if (!z)\n            return;\n\n      Node* y = z;\n      Node* x = nullptr;\n      Node* xp = nullptr;\n      Color yc = y-&gt;color;\n\n      if (!z-&gt;l) {\n            x = z-&gt;r;\n            xp = z-&gt;p;\n            transplant(z, z-&gt;r);\n      } else if (!z-&gt;r) {\n            x = z-&gt;l;\n            xp = z-&gt;p;\n            transplant(z, z-&gt;l);\n      } else {\n            y = minNode(z-&gt;r);\n            yc = y-&gt;color;\n            x = y-&gt;r;\n            if (y-&gt;p == z) {\n               if (x)\n                  x-&gt;p = y;\n               xp = y;\n            } else {\n               transplant(y, y-&gt;r);\n               y-&gt;r = z-&gt;r;\n               y-&gt;r-&gt;p = y;\n               xp = y-&gt;p;\n            }\n            transplant(z, y);\n            y-&gt;l = z-&gt;l;\n            y-&gt;l-&gt;p = y;\n            y-&gt;color = z-&gt;color;\n      }\n      delete z;\n      if (yc == BLACK)\n            deleteFix(x, xp);\n   }\n\n   // \u4e2d\u5e8f\u904d\u5386\n   void inorder(Node* t) {\n      if (!t)\n            return;\n      inorder(t-&gt;l);\n      cout &lt;&lt; t-&gt;val &lt;&lt; (t-&gt;color == RED ? \"(R) \" : \"(B) \");\n      inorder(t-&gt;r);\n   }\n\n   // \u8f93\u51fa\u6811\u7ed3\u6784\n   void printTree(Node* t, string prefix = \"\", bool isLeft = true) {\n      if (!t)\n            return;\n\n      cout &lt;&lt; prefix;\n      cout &lt;&lt; (isLeft ? \"|-- \" : \"\\\\-- \");\n      cout &lt;&lt; t-&gt;val &lt;&lt; (t-&gt;color == RED ? \"(R)\" : \"(B)\") &lt;&lt; endl;\n\n      if (t-&gt;l || t-&gt;r) {\n            if (t-&gt;l)\n               printTree(t-&gt;l, prefix + (isLeft ? \"|   \" : \"    \"), true);\n            else\n               cout &lt;&lt; prefix &lt;&lt; (isLeft ? \"|   \" : \"    \") &lt;&lt; \"|-- null\\n\";\n\n            if (t-&gt;r)\n               printTree(t-&gt;r, prefix + (isLeft ? \"|   \" : \"    \"), false);\n            else\n               cout &lt;&lt; prefix &lt;&lt; (isLeft ? \"|   \" : \"    \") &lt;&lt; \"`-- null\\n\";\n      }\n   }\n\n   // \u8f93\u51fa\n   void print() {\n      cout &lt;&lt; \"Inorder: \";\n      inorder(root);\n      cout &lt;&lt; '\\n';\n   }\n\n   void printStructure() {\n      cout &lt;&lt; \"Tree structure:\\n\";\n      if (root)\n            printTree(root);\n      else\n            cout &lt;&lt; \"Empty tree\\n\";\n      cout &lt;&lt; '\\n';\n   }\n\n   Node* getRoot() { return root; }\n};\n\nint main() {\n   RBTree tree;\n   int arr[] = {10, 20, 30, 15, 25, 40, 50};\n\n   for (int v : arr) {\n      cout &lt;&lt; \"========== Insert \" &lt;&lt; v &lt;&lt; \" ==========\\n\";\n      tree.insert(v);\n      tree.print();\n      tree.printStructure();\n   }\n\n   cout &lt;&lt; \"\\n========== Delete 20 ==========\\n\";\n   tree.remove(20);\n   tree.print();\n   tree.printStructure();\n\n   cout &lt;&lt; \"\\n========== Delete 40 ==========\\n\";\n   tree.remove(40);\n   tree.print();\n   tree.printStructure();\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#b","title":"B \u6811","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#b_1","title":"B \u6811\u6027\u8d28","text":"<p>AVL \u6811\u3001\u7ea2\u9ed1\u6811\u90fd\u5c06\u6570\u636e\u5b58\u5230\u5185\u5b58\u3002\u5f53\u6570\u636e\u91cf\u5927\u5230\u5185\u5b58\u5b58\u4e0d\u4e0b\u65f6\uff0c\u9700\u8981\u5c06\u6570\u636e\u5b58\u5230\u786c\u76d8\uff0c\u518d\u5206\u6279\u4ece\u786c\u76d8\u8bfb\u5230\u5185\u5b58\u3002 \uff08\u786c\u76d8\uff1aCPU \u4e0d\u80fd\u76f4\u63a5\u548c\u786c\u76d8\u4ea4\u4e92\uff0c\u786c\u76d8\u8bfb\u53d6\u7269\u7406\u5730\u5740\u8fde\u7eed\u7684\u591a\u4e2a\u5b57\u8282\u548c\u8bfb\u53d6\u5355\u4e2a\u5b57\u8282\u7684\u8017\u65f6\u51e0\u4e4e\u6ca1\u6709\u533a\u522b\u3002\uff09</p> <p>\u786c\u76d8\u8bbf\u95ee\u65f6\u95f4\u957f\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u786c\u76d8\u7684\u8bbf\u95ee\u6b21\u6570\u3002\u800c\u5bf9\u4e8e AVL \u6811\u548c\u7ea2\u9ed1\u6811\uff0c\u6bcf\u5f80\u4e0b\u627e\u4e00\u5c42\u90fd\u8981\u8bbf\u95ee\u786c\u76d8\uff0c\u786c\u76d8\u8bbf\u95ee\u6b21\u6570\u548c\u6811\u9ad8\u6b63\u76f8\u5173\u3002 B \u6811\u662f\u591a\u53c9\u5e73\u8861\u641c\u7d22\u6811\uff0c\u964d\u4f4e\u6811\u9ad8\u3002</p> <ul> <li>\u5185\u90e8\u8282\u70b9\uff1a\u5305\u542b\u6570\u636e\u7684\u8282\u70b9</li> <li>\u5916\u90e8\u8282\u70b9\uff1a\u8868\u793a\u67e5\u627e\u5931\u8d25\uff0c\u8fd9\u91cc\u7701\u7565</li> <li> <p>\u53f6\u8282\u70b9\uff1a\u8fd9\u91cc\u5c06\u6700\u540e\u4e00\u5c42\u5185\u90e8\u8282\u70b9\u79f0\u4e3a\u53f6\u8282\u70b9</p> </li> <li> <p>\u5e73\u8861\uff1a\u53f6\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42</p> </li> <li>\u6709\u5e8f\uff1a\u4efb\u4f55\u8282\u70b9\u5185\u90fd\u4ece\u5c0f\u5230\u5927\uff0c\u5de6\u5b50\u6811&lt;\u5143\u7d20&lt;\u53f3\u5b50\u6811</li> <li>\u591a\u8def\uff1a\u5bf9\u4e8e m \u9636 B \u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 m \u4e2a\u5206\u652f\u3001m-1 \u4e2a\u5143\u7d20</li> </ul> <p>\u6839\u8282\u70b9\u6700\u5c11 2 \u4e2a\u5206\u652f\u30011 \u4e2a\u5143\u7d20\uff08\u9664\u975e\u53ea\u6709\u6839\u8282\u70b9\uff09 \u5176\u4ed6\u8282\u70b9\u6700\u5c11\\(\\lceil\\frac{m}{2}\\rceil\\)\u4e2a\u8282\u70b9\uff0c\\(\\lceil\\frac{m}{2}\\rceil-1\\)\u4e2a\u5143\u7d20</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_5","title":"\u67e5\u627e\u3001\u63d2\u5165","text":"<p>\u67e5\u627e\uff1a\u5728\u8282\u70b9\u5185\u4f9d\u6b21\u6bd4\u8f83\uff08\u987a\u5e8f\u67e5\u627e\u4e3a\u4f8b\uff0c\u66f4\u5927\u5c31\u5411\u53f3\u6bd4\u8f83\uff0c\u66f4\u5c0f\u5c31\u5411\u4e0b\u5230\u5b50\u6811\uff09</p> <p>\u63d2\u5165\uff1a\u63d2\u5165\u5728\u53f6\u8282\u70b9\u3002\u5982\u679c\u4e0a\u6ea2\u51fa\uff08\u8282\u70b9\u5185\u7684\u5143\u7d20\u8d85\u51fa\uff09\uff0c\u4ee5\u7b2c\\(\\lceil\\frac{m}{2}\\rceil\\)\u4e2a\u5143\u7d20\u5206\u5272\uff0c\u5c06\u8fd9\u4e2a\u5143\u7d20\u4e0a\u79fb\u5230\u7236\u8282\u70b9\uff0c\u4e24\u8fb9\u5206\u88c2\u3002\u5982\u679c\u7236\u8282\u70b9\u4e0a\u6ea2\u51fa\uff0c\u9012\u5f52\u8c03\u6574\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_6","title":"\u5220\u9664","text":"<p>\u63d2\u5165\u4f1a\u4e0a\u6ea2\u51fa\uff0c\u800c\u5220\u9664\u4f1a\u4e0b\u6ea2\u51fa\uff08\u8282\u70b9\u5185\u7684\u5143\u7d20\u4e2a\u6570\u8fc7\u5c11\uff09</p> <p>\u67e5\u627e\u8981\u5220\u9664\u7684\u8282\u70b9\uff0c\u5982\u679c\u975e\u53f6\u8282\u70b9\uff0c\u8f6c\u5316\u4e3a\u76f4\u63a5\u524d\u9a71\u6216\u76f4\u63a5\u540e\u7ee7\u66ff\u6362\uff0c\u518d\u5220\u9664\u66ff\u6362\u7684\u8282\u70b9\u3002</p> <p>\u5982\u679c\u51fa\u73b0\u4e0b\u6ea2\u51fa\uff0c\u9996\u5148\u7528\u5de6\u53f3\u5144\u5f1f\u8865\u5168\u3002\u5148\u5c06\u7236\u4eb2\u8282\u70b9\u5bf9\u5e94\u5143\u7d20\u4e0b\u79fb\uff0c\u518d\u5c06\u5144\u5f1f\u8282\u70b9\u4e2d\u7684\u5143\u7d20\u4e0a\u79fb\u3002\u5982\u679c\u5144\u5f1f\u6709\u5b50\u6811\uff0c\u8981\u5c06\u5b50\u6811\u4e5f\u79fb\u52a8\u5230\u8865\u5168\u7684\u8282\u70b9\u3002</p> <p>\u5982\u679c\u5de6\u53f3\u5144\u5f1f\u90fd\u4e0d\u591f\u8865\u5168\uff0c\u5c06\u8282\u70b9\u548c\u5176\u4e2d\u4e00\u4e2a\u5144\u5f1f\u5408\u5e76\u3002\u5148\u5c06\u7236\u4eb2\u8282\u70b9\u5bf9\u5e94\u5143\u7d20\u4e0b\u79fb\uff0c\u518d\u5c06\u8981\u5408\u5e76\u7684\u5143\u7d20\u5408\u5e76\uff0c\u5220\u9664\u7236\u4eb2\u4e2d\u7a7a\u8282\u70b9\u548c\u7a7a\u5b50\u6811\u3002 \u8981\u68c0\u67e5\u7236\u4eb2\u8282\u70b9\u662f\u5426\u4e5f\u4e0b\u6ea2\u51fa\uff0c\u9012\u5f52\u8c03\u6574\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#b_2","title":"B+\u6811","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#b_3","title":"B+\u6811\u6027\u8d28","text":"<p>\u5728 B \u6811\u4e2d\u6309\u987a\u5e8f\u904d\u5386\u8282\u70b9\uff0c\u9700\u8981\u4e2d\u5e8f\u904d\u5386\u6765\u56de\u79fb\u52a8\u3002\u800c B+\u6811\u4e2d\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u53f6\u8282\u70b9\u3002</p> <p>B+\u6811\u7684\u53f6\u8282\u70b9\u5c42\u5305\u542b\u6240\u6709\u5143\u7d20\uff0c\u4ece\u5c0f\u5230\u5927\u94fe\u63a5\u8d77\u6765\u3002 B+\u6811\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u7d22\u5f15\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u5305\u542b\u6307\u5411\u8bb0\u5f55\u5b58\u50a8\u5730\u5740\u7684\u6307\u9488\uff0c\u6b64\u65f6\u8282\u70b9\u5185\u7684\u5143\u7d20\u53c8\u88ab\u79f0\u4e3a\u5173\u952e\u5b57\u3002\u901a\u8fc7\u5173\u952e\u5b57\u4e2d\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u7d22\u5f15\u5230\u6570\u636e\u5e93\u4e2d\u7684\u67d0\u4e00\u6761\u8bb0\u5f55\u3002 B+\u6811\u672c\u8eab\u4e5f\u4f5c\u4e3a\u7d22\u5f15\u6587\u4ef6\u5b58\u50a8\u5728\u786c\u76d8\u4e2d\u3002</p> <ul> <li>B+\u6811\u8282\u70b9\u5185\u5143\u7d20\u4e2a\u6570\u548c\u5206\u652f\u6570\u76f8\u540c\uff0c\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\u3002\u975e\u53f6\u8282\u70b9\u662f\u5bf9\u4e0b\u4e00\u5c42\u8282\u70b9\u7684\u7d22\u5f15\u3002</li> <li>\u5176\u4ed6\u6027\u8d28\u4e0e B \u6811\u76f8\u540c\u3002\u8282\u70b9\u6700\u5c11 2 \u4e2a\u5206\u652f\u30011 \u4e2a\u5143\u7d20\uff08\u9664\u975e\u53ea\u6709\u6839\u8282\u70b9\uff09\uff1b\u5176\u4ed6\u8282\u70b9\u6700\u5c11\\(\\lceil\\frac{m}{2}\\rceil\\)\u4e2a\u8282\u70b9\uff0c\\(\\lceil\\frac{m}{2}\\rceil-1\\)\u4e2a\u5143\u7d20</li> </ul> <p>\u9636\u4e3a 3 \u7684 B+\u6811\u79f0\u4e3a 2-3 \u6811\uff1b\u9636\u4e3a 4 \u7684 B+\u6811\u79f0\u4e3a 2-3-4 \u6811\u3002</p> <p>B+\u6811\u548c B \u6811\u7684\u533a\u522b</p> <p>B \u6811\u4e2d m \u4e2a\u5206\u652f\u7684\u8282\u70b9\u5185\u6709 m-1 \u4e2a\u5143\u7d20\uff0c\u800c B+\u6811\u4e2d m \u4e2a\u5206\u652f\u7684\u8282\u70b9\u5185\u6709 m \u4e2a\u5143\u7d20</p> <p>B \u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u6307\u5411\u76f8\u5e94\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u800c B+\u6811\u4e2d\u53ea\u6709\u53f6\u8282\u70b9\u5305\u542b\u6307\u5411\u76f8\u5e94\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u975e\u53f6\u8282\u70b9\u53ea\u4f5c\u4e3a\u67e5\u627e\u53f6\u8282\u70b9\u7684\u591a\u7ea7\u7d22\u5f15\u3002</p> <p>B \u6811\u53ea\u6709\u6839\u8282\u70b9\u4e00\u4e2a\u5934\u6307\u9488\u3002B+\u6811\u6709\u4e24\u4e2a\u5934\u6307\u9488\uff0c\u5373\u80fd\u901a\u8fc7\u53f6\u8282\u70b9\u94fe\u8868\u7684\u5934\u6307\u9488\u987a\u5e8f\u67e5\u627e\uff0c\u4e5f\u80fd\u901a\u8fc7\u6839\u8282\u70b9\u7684\u6307\u9488\u968f\u673a\u67e5\u627e\u3002</p> <p>\u6ce8\u610f\uff01</p> <p>\u8bfe\u4e0a\u8bb2\u7684 B+\u6811\u7ed3\u6784\u4e0e\u4e0a\u9762\u4e0d\u540c\uff01</p> <p>\u8bfe\u5802\u4e2d\u7684 B+\u6811\uff1a</p> <ul> <li>B+\u6811\u4e2d\uff0c\u6709 m \u4e2a\u5206\u652f\u7684\u8282\u70b9\u5185\u90e8\u6709 m-1 \u4e2a\u5143\u7d20\uff0c\u5176\u4e2d\u7b2c k \u4e2a\u5143\u7d20\u4e3a\u7b2c k+1 \u4e2a\u5206\u652f\u6240\u6709\u53f6\u8282\u70b9\u7684\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u8d70\u5230\u4e0b\u4e00\u5c42\u5b50\u6811\u7684\u6761\u4ef6\u4e3a\uff0c\u8282\u70b9\u5185\u90e8\u7684\u5143\u7d20\u4e2d\u5927\u4e8e\u7b49\u4e8e\u524d\u4e00\u4e2a\u4e14\u5c0f\u4e8e\u540e\u4e00\u4e2a\u3002</li> <li>\u8282\u70b9\u5185\u90e8\u5143\u7d20\u4e2a\u6570\u56fa\u5b9a\u4e3a M-1 \u4e2a\uff0c\u7a7a\u4f4d\u7528 - \u586b\u5145\u3002</li> <li>\u63d2\u5165\u5bfc\u81f4\u4e0a\u6ea2\u51fa\u65f6\uff0c\u4f18\u5148\u8003\u8651\u7528\u5144\u5f1f\u5f25\u8865\u3002\u5144\u5f1f\u65e0\u6cd5\u89e3\u51b3\u65f6\u518d\u5206\u88c2\u3002</li> <li>\u4e0a\u6ea2\u51fa\u5206\u88c2\u65f6\uff0c\u5728\u7b2c\\(\\lceil\\frac{m}{2}\\rceil\\)\u53f3\u4fa7\u5206\u88c2\uff0c\u7236\u4eb2\u4e2d\u589e\u52a0\u7b2c\\(\\lceil\\frac{m}{2}\\rceil+1\\)\u4e2a\u5143\u7d20\u3002</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS02/#_7","title":"\u67e5\u627e","text":"<p>\u987a\u5e8f\u67e5\u627e\uff1a\u76f4\u63a5\u5728\u53f6\u8282\u70b9\u94fe\u8868\u4e0a\u67e5\u627e</p> <p>\u968f\u673a\u67e5\u627e\uff1a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u67e5\u627e\uff0c\u76f4\u5230\u53f6\u8282\u70b9\u3002\u5728\u8282\u70b9\u5185\u4f9d\u6b21\u6bd4\u8f83\uff08\u987a\u5e8f\u67e5\u627e\u4e3a\u4f8b\uff0c\u5927\u4e8e\u5c31\u5411\u53f3\u6bd4\u8f83\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u5c31\u5411\u4e0b\u5230\u5b50\u6811\uff09</p> <p>\u8303\u56f4\u67e5\u627e\uff1ae.g. \u67e5\u627e\u8303\u56f4\u4e3a[A,B]\u7684\u8282\u70b9\u3002\u5148\u968f\u673a\u67e5\u627e\u5230\u5de6\u8fb9\u754c\uff0c\u5728\u987a\u5e8f\u904d\u5386\u76f4\u5230\u53f3\u8fb9\u754c\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/","title":"\u5012\u6392\u7d22\u5f15","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1555 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#ads-lec-03","title":"ADS Lec 03 \u5012\u6392\u7d22\u5f15","text":"<ul> <li>NoughtQ \u7684\u7b14\u8bb0\u672c-\u5012\u6392\u7d22\u5f15</li> <li>Isshiki \u4fee's Notebook-\u5012\u6392\u7d22\u5f15</li> </ul> <p>\u5012\u6392\u7d22\u5f15\uff08inverted file index\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6587\u672c\u68c0\u7d22\u6280\u672f\uff0c\u7528\u4e8e\u5feb\u901f\u67e5\u627e\u5305\u542b\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u6587\u6863\u3002\u5b83\u901a\u8fc7\u5c06\u5355\u8bcd\u6216\u77ed\u8bed\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u5e76\u5c06\u5b83\u4eec\u51fa\u73b0\u5728\u6587\u6863\u4e2d\u7684\u4f4d\u7f6e\u8bb0\u5f55\u5728\u4e00\u4e2a\u7d22\u5f15\u4e2d\uff0c\u4ece\u800c\u652f\u6301\u5feb\u901f\u7684\u6587\u672c\u68c0\u7d22\u3002\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u53ef\u4ee5\u5feb\u901f\u5730\u5b9a\u4f4d\u5305\u542b\u6307\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u6587\u6863\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5012\u6392\u7d22\u5f15\u5e7f\u6cdb\u5e94\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u4fe1\u606f\u68c0\u7d22\u7b49\u9886\u57df\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_1","title":"\u57fa\u672c\u7ed3\u6784","text":"<p>\u5012\u6392\u7d22\u5f15\u7ed3\u6784\uff1a</p> No. Term 1 Abies &lt;2;(1;3),(2;7)&gt; 2 ads ... <p>Term \u680f\u8bb0\u5f55\u6240\u6709\u6587\u6863\u4e2d\u8bcd\u6c47\uff0c\u79f0\u4e3a\u8bcd\u5178\u3002 \u6700\u53f3\u8fb9\u4e00\u680f\u8bb0\u5f55\u6bcf\u4e2a\u8bcd\u6c47\u603b\u51fa\u73b0\u6b21\u6570\u3001\u5bf9\u5e94\u7684\u6587\u6863\u7f16\u53f7\u548c\u6587\u6863\u4e2d\u7684\u4f4d\u7f6e\uff0c\u79f0\u4e3a\u5012\u6392\u5217\u8868\u3002</p> <p>\u8bb0\u5f55\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u662f\u4e3a\u4e86\u63d0\u5347\u641c\u7d22\u901f\u5ea6\uff1a\u5982\u679c\u641c\u7d22\u8f93\u5165\u4e2d\u6709\u591a\u4e2a\u5173\u952e\u8bcd\uff0c\u4f18\u5148\u641c\u7d22\u603b\u6b21\u6570\u5c11\u7684\u5173\u952e\u8bcd\uff08\u66f4\u7cbe\u786e\uff09</p> <p>\u4f2a\u4ee3\u7801\uff1a</p> Text Only<pre><code>while (read a document D) {\n    while (read a term T in D) {\n        if (Find(Dictionary, T) == false)\n            Insert(Dictionary, T);\n        Get T posting list;\n        Insert a node to T posting list;\n    }\n}\nWrite the inverted index to disk;\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_2","title":"\u6d41\u7a0b","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_3","title":"\u8bcd\u6027\u8fd8\u539f","text":"<p>\u540c\u4e00\u4e2a\u5355\u8bcd\u53ef\u80fd\u6709\u4e0d\u540c\u5f62\u5f0f\uff0c\u5c06\u5176\u5168\u90e8\u8fd8\u539f\u4e3a\u57fa\u672c\u7684\u5355\u8bcd\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5c06\u5e38\u89c1\u7684\u62fc\u5199\u9519\u8bef\u5f52\u5165\u540c\u4e00\u4e2a\u8bcd\u5e72\uff0c\u5b9e\u73b0\u66f4\u667a\u80fd\u7684\u641c\u7d22\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_4","title":"\u505c\u7528\u8bcd\u5206\u6790","text":"<p>\u67d0\u4e9b\u8fc7\u4e8e\u5e38\u89c1\u3001\u51e0\u4e4e\u51fa\u73b0\u5728\u4efb\u4f55\u6587\u6863\u4e2d\u7684\u8bcd\u79f0\u4e3a\u505c\u7528\u8bcd\uff0c\u5982 a, the \u505c\u7528\u8bcd\u4e00\u822c\u4e0d\u5177\u5907\u7279\u6b8a\u542b\u4e49\uff0c\u53ef\u4ee5\u9884\u5148\u4ece\u539f\u59cb\u6587\u672c\u4e2d\u5220\u9664\uff0c\u5728\u8fdb\u884c\u5012\u6392\u7d22\u5f15\u7684\u5339\u914d\u3002</p> <p>\u6ce8\u610f\uff1a\u4e0d\u80fd\u7b80\u5355\u5730\u5c06\u51fa\u73b0\u9891\u7387\u9ad8\u7684\u8bcd\u89c6\u4e3a\u505c\u7528\u8bcd\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_5","title":"\u8bcd\u9879\u8bbf\u95ee","text":"<p>\u8bcd\u9879\u8bbf\u95ee\u5373\u4e3a\u5982\u4f55\u5728\u7d22\u5f15\u7ed3\u6784\u4e2d\u9ad8\u6548\u5730\u5b9a\u4f4d\u6216\u68c0\u7d22\u67d0\u4e2a\u8bcd\u9879\u3002</p> <ul> <li>B \u6811/B+\u6811</li> <li>\u4f18\u70b9\uff1a\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u8f83\u7a33\u5b9a\uff0c\u9002\u5408\u78c1\u76d8\u5b58\u50a8</li> <li>\u7f3a\u70b9\uff1a\u5b9e\u73b0\u590d\u6742\uff0c\u5360\u7a7a\u95f4\u8f83\u591a</li> <li>\u5b57\u5178\u6811\uff1a</li> <li>\u4f18\u70b9\uff1a\u5bf9\u5b57\u7b26\u4e32\u67e5\u627e\u6781\u5feb\uff0c\u652f\u6301\u524d\u7f00\u641c\u7d22</li> <li>\u7f3a\u70b9\uff1a\u7a7a\u95f4\u5f00\u9500\u5927</li> <li>\u54c8\u5e0c\u8868\uff1a</li> <li>\u4f18\u70b9\uff1a\u5355\u4e2a\u8bcd\u67e5\u627e\u901f\u5ea6\u6700\u5feb</li> <li>\u7f3a\u70b9\uff1a\u591a\u4e2a\u8bcd\u6c47\u7684\u4f4d\u7f6e\u4e0d\u786e\u5b9a\u3001\u53ef\u80fd\u76f8\u8ddd\u5f88\u8fdc\uff0c\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u627e</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_6","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u5728\u5185\u5b58\u4e2d\u7d2f\u79ef\u4e00\u4e2a\u5757\u7684\u8bcd\u5178\u548c\u5012\u6392\u8868\uff1b \u4e00\u65e6\u5185\u5b58\u8fbe\u5230\u4e0a\u9650\uff0c\u5c31\u628a\u8be5\u5757\u5e8f\u5217\u5316\u5e76\u5199\u5728\u78c1\u76d8\uff0c\u6e05\u7a7a\u5185\u5b58\u7ed3\u6784\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u5757\uff1b \u6700\u540e\u5c06\u6240\u6709\u5757\u5916\u90e8\u5408\u5e76\u6210\u6700\u7ec8\u7684\u5012\u6392\u7d22\u5f15\u3002</p> <p>\u4f2a\u4ee3\u7801\uff1a</p> Text Only<pre><code>BlockCnt = 0;\nwhile (read a document D) {\n    while (read a term T in D) {\n        if (out of memory) {\n            Write BlockIndex[BlockCnt] to disk;\n            BlockCnt++;\n            FreeMemory;\n        }\n\n        if (Find(Dictionary, T) == false)\n            Insert(Dictionary, T);\n        Get T's posting list;\n        Insert a node to T's posting list;\n    }\n}\nfor (i = 0; i &lt; BlockCnt; i++)\n    Merge(InvertedIndex, BlockIndex[i]);\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_7","title":"\u5b9e\u73b0","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_8","title":"\u7d22\u5f15\u5206\u914d","text":"<p>\u5b9e\u9645\u4e2d\u6570\u636e\u91cf\u5927\uff0c\u5c06\u5012\u6392\u7d22\u5f15\u653e\u5728\u591a\u53f0\u8ba1\u7b97\u673a\u5185\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u79f0\u4e3a\u96c6\u7fa4\uff08cluster\uff09\u3002 \u5176\u4e2d\u6bcf\u4e00\u5929\u8ba1\u7b97\u673a\u79f0\u4e3a\u8282\u70b9\uff08node\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u6574\u4f53\u5012\u6392\u7d22\u5f15\u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p> <p>\u5212\u5206\u65b9\u6cd5\uff1a</p> <ul> <li>\u6309\u8bcd\u6c47\u7f16\u53f7\u5212\u5206\uff08\u5982 A~Z\uff09</li> <li>\u6309\u6587\u6863\u7f16\u53f7\u5212\u5206</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_9","title":"\u52a8\u6001\u7d22\u5f15","text":"<p>\u6587\u6863\u968f\u65f6\u6709\u53ef\u80fd\u589e\u52a0\u6216\u5220\u9664\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u66f4\u65b0\u5012\u6392\u7d22\u5f15\u5219\u6548\u7387\u4f4e\u3002</p> <p>\u5c06\u539f\u5148\u7684\u7d22\u5f15\u79f0\u4e3a\u4e3b\u7d22\u5f15\uff1b\u53e6\u5916\u65b0\u589e\u4e00\u4e2a\u5b58\u50a8\u5c11\u91cf\u7d22\u5f15\u7684\u7a7a\u95f4\uff0c\u79f0\u4e3a\u8f85\u52a9\u7d22\u5f15\u3002</p> <p>\u65b0\u589e\u6587\u6863\u7684\u7d22\u5f15\u6682\u65f6\u653e\u5728\u8f85\u52a9\u7d22\u5f15\u5185\u3002</p> <p>\u7528\u5173\u952e\u8bcd\u641c\u7d22\u65f6\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u540c\u65f6\u5728\u4e3b\u7d22\u5f15\u548c\u8f85\u52a9\u7d22\u5f15\u4e2d\u641c\u7d22\uff08\u67e5\u627e\u8f85\u52a9\u7d22\u5f15\u66f4\u5feb\u4e00\u4e9b\uff09\u3002</p> <p>\u5728\u9002\u5f53\u7684\u65f6\u5019\u5c06\u8f85\u52a9\u7d22\u5f15\u7684\u5185\u5bb9\u5408\u5e76\u5230\u4e3b\u7d22\u5f15\uff08\u5f52\u6863\uff09\uff0c\u540c\u65f6\u6e05\u7a7a\u8f85\u52a9\u7d22\u5f15\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_10","title":"\u5b58\u50a8\u7a7a\u95f4\u538b\u7f29","text":"<p>\u5982\u679c\u5c06\u6240\u6709\u8bcd\u6c47\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\uff0c\u5b58\u50a8\u7a7a\u95f4\u53d6\u51b3\u4e8e\u6700\u957f\u5355\u8bcd\u7684\u957f\u5ea6\uff0c\u6d6a\u8d39\u7a7a\u95f4\u591a\u3002</p> <p>\u4e00\u79cd\u538b\u7f29\u65b9\u6cd5\uff1a</p> <ul> <li>\u5148\u53bb\u9664\u505c\u7528\u8bcd</li> <li>\u5c06\u6240\u6709\u7684\u8bcd\u6c47\u653e\u5728\u540c\u4e00\u4e2a\u5b58\u50a8\u5757\u5185\uff0c\u8bcd\u6c47\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u95f4\u9694\uff08\u7c7b\u4f3c\u5b57\u7b26\u4e32\uff09</li> <li>\u4e3a\u4e86\u4ece\u5b57\u7b26\u4e32\u4e2d\u5206\u79bb\u51fa\u8bcd\u6c47\uff0c\u9700\u8981\u53e6\u4e00\u5f20\u5c0f\u7684\u8868\u8bb0\u5f55\u6bcf\u4e2a\u8bcd\u6c47\u5f00\u5934\u7684\u4f4d\u7f6e</li> <li>\u6bcf\u4e2a\u8bcd\u6c47\u7684\u7d22\u5f15\uff1a\u8bb0\u5f55\u76f8\u90bb\u8bcd\u6c47\u5f00\u5934\u7684\u5dee\u5206</li> <li>\u8fd9\u6837\u907f\u514d\u5b57\u7b26\u4e32\u957f\u5bfc\u81f4\u7d22\u5f15\u503c\u8fc7\u5927\u3002</li> <li>\u8fd9\u6837\u5c06\u5f88\u5927\u7684\u6570\u7ec4\u538b\u7f29\u4e3a\u4e24\u5f20\u8f83\u5c0f\u7684\u8868\u3002</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_11","title":"\u9608\u503c","text":"<p>\u6ca1\u6709\u5fc5\u8981\u68c0\u7d22\u6240\u6709\u76f8\u5173\u7684\u7f51\u9875\uff0c\u6240\u4ee5\u8bbe\u5b9a\u9608\u503c\u3002</p> <ul> <li>\u6587\u6863\u622a\u65ad\u9608\u503c\uff1a\u53ea\u53d6\u6743\u91cd\u6392\u540d\uff08\u4f8b\u5982 TF-IDF\u3001BM25 \u5f97\u5206\uff09\u9760\u524d\u7684\u524d x \u4e2a\u6587\u6863\u3002</li> <li>\u4f18\u70b9\uff1a\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6587\u6863\u8ba1\u7b97\u6216\u5c55\u793a\uff0c\u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\u3002</li> <li>\u7f3a\u70b9\uff1a\u53ef\u80fd\u4f1a\u9057\u6f0f\u90e8\u5206\u76f8\u5173\u6587\u6863\uff08\u53ec\u56de\u7387\u4e0b\u964d\uff09\u3002</li> <li>\u793a\u4f8b\uff1a\u641c\u7d22\u5f15\u64ce\u53ea\u5c55\u793a\u524d 1000 \u6761\u7ed3\u679c\u3002</li> <li>\u67e5\u8be2\u8bcd\u9608\u503c\uff1a\u5bf9\u67e5\u8be2\u4e2d\u7684\u8bcd\u9879\u6309\u51fa\u73b0\u9891\u7387\u5347\u5e8f\u6392\u5217\uff0c\u53ea\u7528\u51fa\u73b0\u9891\u7387\u8f83\u4f4e\uff08\u66f4\u5177\u533a\u5206\u6027\uff09\u7684\u8bcd\u9879\u68c0\u7d22\u3002</li> <li>\u4f18\u70b9\uff1a\u663e\u8457\u51cf\u5c11\u8bbf\u95ee\u5012\u6392\u8868\u7684\u6570\u91cf\uff0c\u63d0\u9ad8\u6548\u7387\u3002</li> <li>\u7f3a\u70b9\uff1a\u82e5\u9608\u503c\u8fc7\u4f4e\uff0c\u53ef\u80fd\u4e22\u5931\u76f8\u5173\u7ed3\u679c</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS03/#_12","title":"\u6027\u80fd\u8861\u91cf","text":"<p>\u8861\u91cf\u641c\u7d22\u5f15\u64ce\u6027\u80fd\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ol> <li>\u7cfb\u7edf\u6027\u80fd\uff1a\u5173\u6ce8\u201c\u901f\u5ea6\u201d\u548c\u201c\u8d44\u6e90\u6548\u7387\u201d\uff0c\u5373\u641c\u7d22\u5f15\u64ce\u8fd0\u884c\u5f97\u5feb\u4e0d\u5feb\u3001\u7701\u4e0d\u7701\u8d44\u6e90\u3002</li> <li>\u68c0\u7d22\u6027\u80fd\uff1a\u5173\u6ce8\u201c\u7ed3\u679c\u8d28\u91cf\u201d\uff0c\u5373\u641c\u7d22\u5f15\u64ce\u641c\u51fa\u6765\u7684\u7ed3\u679c\u662f\u5426\u6709\u7528\u3001\u662f\u5426\u76f8\u5173\u3002</li> </ol> <p>\u7cfb\u7edf\u6027\u80fd\uff1a</p> <ul> <li>\u7d22\u5f15\u901f\u5ea6\uff1a\u6bcf\u5c0f\u65f6\u5904\u7406\u7684\u6587\u6863\u6570\u91cf</li> <li>\u641c\u7d22\u901f\u5ea6\uff1a\u7528\u6237\u8f93\u5165\u67e5\u8be2\u540e\uff0c\u7cfb\u7edf\u8fd4\u56de\u7ed3\u679c\u7684\u901f\u5ea6</li> <li>\u65f6\u5ef6\uff08Latency\uff09\uff1a\u4ece\u7528\u6237\u8f93\u5165\u67e5\u8be2\u5230\u770b\u5230\u7ed3\u679c\u7684\u7b49\u5f85\u65f6\u95f4</li> <li>\u67e5\u8be2\u8bed\u53e5\u7684\u53ef\u8868\u8fbe\u6027\uff1a\u7cfb\u7edf\u80fd\u5426\u652f\u6301\u590d\u6742\u67e5\u8be2\uff08\u591a\u5173\u952e\u8bcd\uff0c\u5e26\u6743\u91cd\uff0c\u6a21\u7cca\u5339\u914d\u7b49\uff09\u7684\u80fd\u529b</li> <li>\u7528\u6237\u6ee1\u610f\u5ea6\uff1a\u7efc\u5408\u6027\u6307\u6807\uff0c\u6700\u7ec8\u7528\u6237\u4e3b\u89c2\u4e0a\u7684\u4f7f\u7528\u4f53\u9a8c</li> <li>\u6570\u636e\u68c0\u7d22\u6027\u80fd\u8bc4\u4f30 (data retrieval performance evaluation)\uff1a\u4e3b\u8981\u8003\u8651\u54cd\u5e94\u65f6\u95f4\u3001\u7d22\u5f15\u5360\u7528\u7a7a\u95f4\u7b49\u6307\u6807</li> <li>\u4fe1\u606f\u68c0\u7d22\u6027\u80fd\u8bc4\u4f30 (information retrieval performance evaluation)\uff1a\u4e3b\u8981\u8003\u8651\u56de\u7b54\u7684\u76f8\u5173\u7a0b\u5ea6\u7b49</li> </ul> <p>\u68c0\u7d22\u6027\u80fd\uff1a</p> Relavant Irrelevant Retrieved \\(R_R\\) \\(I_R\\) Not Retrieved \\(R_N\\) \\(I_N\\) <ul> <li>\u7cbe\u786e\u5ea6(precision, P)\uff1a\u6240\u6709\u68c0\u7d22\u5230\u7684\u6587\u6863\u4e2d\uff0c\u6709\u591a\u5c11\u662f\u6709\u610f\u4e49\u7684\uff08\u8003\u8651\u8868\u683c\u7b2c\u4e00\u884c\uff09</li> </ul> \\[P=\\frac{R_R}{R_R+I_R}\\] <ul> <li>\u53ec\u56de\u7387(recall, R)\uff1a\u6240\u6709\u6709\u610f\u4e49\u7684\u6587\u6863\u4e2d\uff0c\u6709\u591a\u5c11\u662f\u88ab\u68c0\u7d22\u5230\u7684\uff08\u8003\u8651\u8868\u683c\u7b2c\u4e00\u5217\uff09</li> </ul> \\[R=\\frac{R_R}{R_R+R_N}\\] <p>\u5982\u679c\u7cbe\u786e\u5ea6\u9ad8\u800c\u53ec\u56de\u7387\u4f4e\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u9519\u8fc7\u5f88\u591a\u6709\u4ef7\u503c\u7684\u7f51\u9875\uff1b \u5982\u679c\u53ec\u56de\u7387\u9ad8\u800c\u7cbe\u786e\u5ea6\u4f4e\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u5f97\u5230\u5f88\u591a\u65e0\u610f\u4e49\u7684\u7f51\u9875\uff1b \u56e0\u6b64\u7406\u60f3\u60c5\u51b5\u662f\u540c\u65f6\u5177\u5907\u8f83\u9ad8\u7684\u7cbe\u786e\u5ea6\u548c\u53ec\u56de\u7387\uff0c\u4f46\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u80fd\u65e0\u6cd5\u540c\u65f6\u517c\u987e\u4e24\u8005\uff0c\u9700\u8981\u505a\u597d\u6743\u8861\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/","title":"\u5de6\u504f\u5806\uff0c\u659c\u5806","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1268 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#ads-lec-04","title":"ADS Lec 04 \u5de6\u504f\u5806\u548c\u659c\u5806","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_1","title":"\u5de6\u504f\u5806","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_2","title":"\u6982\u5ff5","text":"<p>dist\uff08\u6216 Npl\uff09\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684 dist \u4e3a\u8fd9\u4e2a\u8282\u70b9\u5230\u6ca1\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5bf9\u53f6\u8282\u70b9\u3001\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\u7684\u8282\u70b9\uff0cdist \u90fd\u4e3a 0\u3002</p> <p>\u5de6\u504f\u5806\uff1a</p> <ul> <li>\u662f\u4e8c\u53c9\u5806</li> <li>\u5bf9\u4efb\u610f\u8282\u70b9\uff0c\u5176\u5de6\u5b69\u5b50\u7684 dist \u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u53f3\u5b69\u5b50\u7684 dist</li> </ul> <p>\u5de6\u504f\u5806\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u4efb\u610f\u8282\u70b9\u7684 dist = \u5176\u53f3\u5b69\u5b50\u7684 dist + 1\uff08\u5982\u679c\u6ca1\u6709\u53f3\u5b69\u5b50\uff0c\u5219\u4e3a 0\uff09\u3002</li> <li>\u82e5\u6839\u8282\u70b9\u7684 dist \u4e3a N\uff0c\u5219\u524d N+1 \u5c42\u4e3a\u6ee1\u4e8c\u53c9\u6811\uff0c\u6574\u4e2a\u5de6\u504f\u5806\u81f3\u5c11\u6709\\(2^{N+1}-1\\)\u4e2a\u8282\u70b9\u3002</li> <li>\u82e5\u6574\u4e2a\u5de6\u504f\u5806\u5171 N \u4e2a\u8282\u70b9\uff0c\u5219\u53f3\u4fa7\u8def\u5f84\u6700\u591a\u6709\\(\\lfloor \\log(N+1) \\rfloor\\)\u4e2a\u8282\u70b9\u3002</li> </ul> <p>\u5de6\u504f\u5806\u6700\u53f3\u4fa7\u7684\u8def\u5f84\u5c3d\u53ef\u80fd\u77ed\uff0c\u5408\u5e76\u65f6\u53ea\u6cbf\u53f3\u4fa7\u8def\u5f84\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_3","title":"\u64cd\u4f5c","text":"<p>\u8282\u70b9\u7684\u5b9a\u4e49\u4e3a\uff1a</p> C++<pre><code>struct node {\n    int val, d;   // \u5b58\u50a8\u7684\u503c\uff0cdist\n    node *l, *r;  // \u5de6\u53f3\u513f\u5b50\n};\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_4","title":"\u9012\u5f52\u5408\u5e76","text":"<ol> <li>\u5c06\u5df2\u7ecf\u5408\u5e76\u7684\u9876\u70b9\uff08\u8bb0\u4e3a o\uff09\u4ece\u6839\u8f83\u5c0f\u7684\u5806\u5f00\u59cb\uff0c\u6cbf\u6700\u53f3\u4fa7\u4e0d\u65ad\u4e0b\u79fb\u3002</li> <li>\u6bcf\u6b21\u6709\u4e24\u4e2a\u5f85\u5408\u5e76\u7684\u5806\uff0c\u5206\u522b\u4e3a o \u7684\u53f3\u513f\u5b50\u548c\u53e6\u4e00\u4e2a\u5de6\u504f\u5806\u3002\u5c06\u8fd9\u4e24\u8005\u4e2d\u6839\u8f83\u5c0f\u7684\u4f5c\u4e3a o \u7684\u53f3\u513f\u5b50\u3002</li> <li>\u68c0\u67e5\u201c\u653e\u5728 o \u7684\u53f3\u513f\u5b50\u201d\u8fd9\u4e00\u6b65\u662f\u5426\u8fdd\u53cd\u5de6\u504f\u6027\u8d28\uff0c\u8c03\u6574\u5e76\u66f4\u65b0 o \u7684 dist\u3002</li> <li>\u5c06 o \u4e0b\u79fb\uff0c\u9012\u5f52\u8fdb\u884c\u3002</li> </ol> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>node* merge1(node* a, node* b) {\n    if (!a)\n        return b;\n    if (!b)\n        return a;\n\n    if (a-&gt;val &gt; b-&gt;val)     // o\u4ece\u6839\u8f83\u5c0f\u7684\u5806\u5f00\u59cb\n        swap(a, b);\n    a-&gt;r = merge1(a-&gt;r, b);  // \u9012\u5f52\u5408\u5e76o\u7684\u53f3\u513f\u5b50\u548c\u53e6\u4e00\u4e2a\u5806\n\n    if (!a-&gt;l || a-&gt;l-&gt;d &lt; a-&gt;r-&gt;d)  // \u7ef4\u62a4\u5de6\u504f\u6027\u8d28\n        swap(a-&gt;l, a-&gt;r);\n    a-&gt;d = a-&gt;r ? a-&gt;r-&gt;d + 1 : 0;   // \u66f4\u65b0o\u7684dist\n    return a;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_5","title":"\u8fed\u4ee3\u5408\u5e76","text":"<p>\u8fed\u4ee3\u5408\u5e76\u4e2d\uff0c\u7528\u6808\u5b58\u50a8\u5408\u5e76\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7236\u8282\u70b9\u3002\u5408\u5e76\u5b8c\u540e\uff0c\u56de\u6eaf\u5b58\u50a8\u7684\u7236\u8282\u70b9\uff0c\u4f9d\u6b21\u8c03\u6574\u5de6\u53f3\u513f\u5b50\uff0c\u4f7f\u5176\u4fdd\u6301\u5de6\u504f\u3002</p> <ul> <li>\u9012\u5f52\u5408\u5e76\u662f\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\uff0c\u5148\u4ea7\u751f\u6700\u5e95\u90e8\u7684\u5408\u5e76\u7ed3\u679c\uff0c\u6bcf\u6b21\u4ea7\u751f\u540e\u7ef4\u62a4\u5de6\u504f</li> <li> <p>\u8fed\u4ee3\u5408\u5e76\u662f\u81ea\u9876\u5411\u4e0b\u8fdb\u884c\uff0c\u5148\u5408\u5e76\u5b8c\u6240\u6709\u8282\u70b9\uff0c\u518d\u4ece\u4e0b\u5f00\u59cb\u4f9d\u6b21\u8c03\u6574\u3001\u7ef4\u62a4\u5de6\u504f</p> </li> <li> <p>\u5c06\u5df2\u7ecf\u5408\u5e76\u7684\u9876\u70b9\uff08\u8bb0\u4e3a o\uff09\u4ece\u6839\u8f83\u5c0f\u7684\u5806\u5f00\u59cb\uff0c\u6cbf\u6700\u53f3\u4fa7\u4e0d\u65ad\u4e0b\u79fb\u3002</p> </li> <li>\u82e5\u53e6\u4e00\u4e2a\u5806\u5c0f\u4e8e o \u7684\u53f3\u513f\u5b50\uff0c\u5219\u4ea4\u6362\u5230 o \u53f3\u513f\u5b50\u7684\u4f4d\u7f6e\u3002</li> <li>\u5728\u6808\u4e2d\u5b58\u50a8\u5408\u5e76\u7684\u7236\u8282\u70b9 o\u3002</li> <li>\u5c06 o \u4e0b\u79fb\uff0c\u9012\u5f52\u8fdb\u884c\u3002</li> <li>\u4f9d\u6b21\u5f39\u6808\uff0c\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\u3002</li> </ul> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>node* merge2(node* a, node* b) {\n    if (!a)\n        return b;\n    if (!b)\n        return a;\n    if (a-&gt;val &gt; b-&gt;val)\n        swap(a, b);\n\n    node* root = a;    // \u5408\u5e76\u540e\u6839\u8282\u70b9\n    stack&lt;node*&gt; stk;  // \u6808\u7528\u4e8e\u5b58\u50a8\u5408\u5e76\u8def\u5f84\u7684\u7236\u8282\u70b9\n\n    while (a-&gt;r &amp;&amp; b) {   // \u5408\u5e76\n        if (a-&gt;r-&gt;val &gt; b-&gt;val)\n            swap(a-&gt;r, b);\n        stk.push(a);\n        a = a-&gt;r;\n    }\n    a-&gt;r = b;\n\n    while (stk.size()) {  // \u8c03\u6574\u5408\u5e76\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\n        a = stk.top();\n        stk.pop();\n        if (!a-&gt;l || a-&gt;l-&gt;d &lt; a-&gt;r-&gt;d)\n            swap(a-&gt;l, a-&gt;r);\n        a-&gt;d = a-&gt;r ? a-&gt;r-&gt;d + 1 : 0;\n    }\n    return root;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_6","title":"\u63d2\u5165","text":"<p>\u5355\u70b9\u63d2\u5165\u53ef\u770b\u4f5c\u539f\u5148\u7684\u5de6\u504f\u5806\u548c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u65b0\u5806\u7684\u5408\u5e76\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>node* newNode(int x) {\n    node* t = new node;\n    t-&gt;val = x;\n    t-&gt;d = 0;\n    t-&gt;l = t-&gt;r = nullptr;\n    return t;\n}\n\nnode* insert(node* a, int x) {\n    node* t = newNode(x);\n    a = merge1(a, t);\n    return a;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_7","title":"\u5220\u9664","text":"<p>\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u9700\u8981\u8003\u8651\u5b83\u7684\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\u3002 \u5148\u5c06\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u5408\u5e76\uff0c\u518d\u7528\u5408\u5e76\u540e\u7684\u6811\u4ee3\u66ff\u8981\u5220\u9664\u7684\u8282\u70b9\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>node* delNode(node* a, int x) {\n    if (!a)\n        return nullptr;\n    if (a-&gt;val == x) {\n        node* merged = merge1(a-&gt;l, a-&gt;r);\n        delete a;\n        return merged;\n    }\n\n    a-&gt;l = delNode(a-&gt;l, x);\n    a-&gt;r = delNode(a-&gt;r, x);\n    if (!a-&gt;l || a-&gt;l-&gt;d &lt; a-&gt;r-&gt;d)\n        swap(a-&gt;l, a-&gt;r);\n    a-&gt;d = a-&gt;r ? a-&gt;r-&gt;d + 1 : 0;\n    return a;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_8","title":"\u659c\u5806","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_9","title":"\u6982\u5ff5","text":"<p>\u5de6\u504f\u5806\u548c\u659c\u5806\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e AVL \u6811\u548c Splay \u6811\u3002</p> <p>\u659c\u5806\u6ee1\u8db3\u4efb\u4f55\u8282\u70b9\u5c0f\u4e8e\uff08\u6216\u5927\u4e8e\uff09\u5176\u5de6\u53f3\u513f\u5b50\uff0c\u4f46\u4e0d\u9700\u8981\u50cf\u5de6\u504f\u5806\u4e00\u6837\u7ef4\u62a4 dist\u3002</p> <p>\u659c\u5806\u66f4\u770b\u91cd\u5408\u5e76\u7684\u6548\u7387\uff0c\u800c\u4e0d\u662f\u5806\u7684\u5e73\u8861\uff0c\u5b83\u7684\u76ee\u7684\u662f\u4f7f M \u6b21\u64cd\u4f5c\u7684\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(M\\log N)\\)\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_10","title":"\u64cd\u4f5c","text":"<p>\u8282\u70b9\u5b9a\u4e49\uff1a</p> C++<pre><code>struct node {\n    int val;     // \u4e0d\u542bdist\n    node *l, *r;\n};\n</code></pre> <p>\u9012\u5f52\u5408\u5e76\uff1a</p> <p>\u9876\u5c0f\u7684\u5806\u539f\u5148\u7684\u53f3\u5b50\u6811\u3001\u53e6\u4e00\u4e2a\u5806\u4f5c\u4e3a\u5f85\u5408\u5e76\u7684\u4e24\u4e2a\u5806\uff0c\u5408\u5e76\u540e\u4f5c\u4e3a\u9876\u5c0f\u7684\u5806\u7684\u53f3\u5b50\u6811\u3002\u518d\u5c06\u9876\u5c0f\u7684\u5806\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\u3002 \u5982\u679c\u4e00\u4e2a\u5806\u548c\u7a7a\u8282\u70b9\u5408\u5e76\uff0c\u5219\u8fd9\u4e2a\u5806\u7684\u5de6\u53f3\u5b50\u6811\u4e0d\u4ea4\u6362\u3002</p> \u9012\u5f52\u5408\u5e76\u4ee3\u7801 C++<pre><code>node* merge1(node* a,node* b) {\n    if (!a)\n        return b;\n    if (!b)\n        return a;\n\n    if (a-&gt;val&gt;b-&gt;val)\n        swap(a, b);\n    a-&gt;r = merge1(a-&gt;r, b);\n    swap(a-&gt;l, a-&gt;r);\n    return a;\n}\n</code></pre> <p>\u8fed\u4ee3\u5408\u5e76\uff1a</p> <p>\u7528\u6808\u8bb0\u5f55\u6bcf\u6b21\u64cd\u4f5c\u7684\u7236\u8282\u70b9\u3002\u6240\u6709\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u4ece\u4e0b\u5230\u4e0a\u4f9d\u6b21\u4ea4\u6362\u6808\u4e2d\u8282\u70b9\u7684\u5de6\u53f3\u8282\u70b9\u3002</p> \u8fed\u4ee3\u5408\u5e76\u4ee3\u7801 C++<pre><code>node* merge2(node* a, node* b) {\n    if (!a)\n        return b;\n    if (!b)\n        return a;\n    if (a-&gt;val &gt; b-&gt;val)\n        swap(a, b);\n\n    node* rt = a;\n    stack&lt;node*&gt; stk;\n\n    while (a-&gt;r &amp;&amp; b) {\n        if (a-&gt;r-&gt;val &gt; b-&gt;val)\n            swap(a-&gt;r, b);\n        stk.push(a);\n        a = a-&gt;r;\n    }\n    a-&gt;r = b;\n\n    while (stk.size()) {\n        a = stk.top();\n        stk.pop();\n        swap(a-&gt;l, a-&gt;r);\n    }\n    return rt;\n}\n</code></pre> <p>\u63d2\u5165\uff1a</p> <p>\u770b\u4f5c\u548c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u5806\u7684\u5408\u5e76\u3002</p> <p>\u5220\u9664\uff1a</p> <p>\u5408\u5e76\u5de6\u53f3\u513f\u5b50\uff0c\u7528\u5408\u5e76\u540e\u7684\u5806\u4ee3\u66ff\u8981\u5220\u9664\u7684\u8282\u70b9\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS04/#_11","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u56de\u987e\u52bf\u80fd\u5206\u6790\uff1a</p> <p>\u5bf9\u4e8e\u72b6\u6001\\(D_i\\)\uff0c\u9700\u8981\u6784\u9020\u52bf\u80fd\u51fd\u6570\\(\\Phi(D_i)\\)\uff0c\u6ee1\u8db3\\(\\Phi(D_k)\\ge \\Phi(D_0)\\)\u3002 \u6bcf\u4e00\u6b65\u7684\u644a\u8fd8\u6210\u672c\\(\\hat{c_i}\\) \\(=\\) \u5b9e\u9645\u6210\u672c\\(c_i + \\Phi(D_i)-\\Phi(D_{i-1})\\)\u3002 \u603b\u7684\u644a\u8fd8\u6210\u672c\\(\\displaystyle\\sum_{i=1}^n\\hat{c_i}\\) \\(=\\) \u603b\u7684\u5b9e\u9645\u6210\u672c\\(\\displaystyle\\sum_{i=1}^n c_i+ \\Phi(D_n)-\\Phi(D_0)\\ge \\displaystyle\\sum_{i=1}^n c_i\\)</p> <p>\u6574\u4e2a\u64cd\u4f5c\u4e2d\u5355\u8c03\u9012\u589e\u7684\u51fd\u6570\u4e0d\u9002\u5408\u4f5c\u4e3a\u52bf\u80fd\u51fd\u6570\u3002\u56e0\u4e3a\u52bf\u80fd\u51fd\u6570\u53cd\u6620\u5b9e\u9645\u6210\u672c\u548c\u5747\u644a\u6210\u672c\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u4e00\u5b9a\u6709\u6b63\u6709\u8d1f\u3002</p> <p>\u659c\u5806\u5408\u5e76\u7684\u5206\u6790\uff1a</p> <p>\u6bcf\u6b21\u659c\u5806\u5408\u5e76\u7684\u64cd\u4f5c\u6b65\u6570\uff0c\u5373\u5b9e\u9645\u6210\u672c\uff0c\u53d6\u51b3\u4e8e\u6700\u53f3\u4fa7\u8def\u5f84\u8282\u70b9\u6570\u4e4b\u548c\u3002\u4f46\u659c\u5806\u4e0d\u4fdd\u8bc1\u5de6\u504f\uff0c\u53f3\u8def\u5f84\u957f\u5ea6\u53ef\u80fd\u4e3a\\(O(N)\\)\u3002</p> <p>\u5b9a\u4e49\u91cd\u8282\u70b9\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\uff08\u5305\u542b\u8be5\u8282\u70b9\uff09\u7684\u5b50\u6811\u4e2d\uff0c\u5982\u679c\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e\u603b\u8282\u70b9\u6570\u7684\u4e00\u534a\uff0c\u5219\u8be5\u8282\u70b9\u4e3a\u91cd\u8282\u70b9\uff1b\u53cd\u4e4b\u4e3a\u8f7b\u8282\u70b9\u3002</p> <p>\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\uff1a\u52bf\u80fd\u4e3a\u6574\u68f5\u6811\u4e2d\u91cd\u8282\u70b9\u7684\u4e2a\u6570\u3002</p> <p>\u659c\u5806\u5408\u5e76\u65f6\uff0c\u53ea\u6709\u6700\u53f3\u8def\u5f84\u4e0a\u8282\u70b9\u7684\u8f7b\u91cd\u60c5\u51b5\u4f1a\u6539\u53d8\u3002\u5176\u4ed6\u8282\u70b9\u7684\u8f7b\u91cd\u60c5\u51b5\u4e00\u5b9a\u4e0d\u53d8\uff08\u56e0\u4e3a\u76f4\u63a5\u4ece\u5de6\u5b50\u6811\u79fb\u52a8\u5230\u53f3\u5b50\u6811\uff0c\u5c40\u90e8\u7ed3\u6784\u4e0d\u53d8\uff09\u3002\u6240\u4ee5\u8003\u8651\u52bf\u80fd\u53d8\u5316\uff0c\u53ea\u8981\u8003\u8651\u6700\u53f3\u8def\u5f84\u7684\u8f7b\u91cd\u8282\u70b9\u6570\u3002</p> <p>\u6700\u53f3\u8def\u5f84\u4e0a\uff0c\u91cd\u8282\u70b9\u4e00\u5b9a\u53d8\u4e3a\u8f7b\u8282\u70b9\uff0c\u800c\u8f7b\u8282\u70b9\u4e0d\u4e00\u5b9a\u53d8\u4e3a\u91cd\u8282\u70b9\uff08\u672c\u8eab\u4ea4\u6362\u540e\u5c31\u4e0d\u4e00\u5b9a\uff0c\u5de6\u513f\u5b50\u8fd8\u53ef\u80fd\u52a0\u5176\u4ed6\u8282\u70b9\uff09\u3002</p> <p>\u5bf9\u4e8e\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u7684\u8282\u70b9\u8f83\u591a\uff0c\u7c7b\u4f3c\u5de6\u504f\u5806\uff0c\u8f7b\u8282\u70b9\u6700\u591a\u6709\\(\\log(N)\\)\u4e2a\u3002</p> <p>\u8bb0\\(l_1\\)\u3001\\(h_1\\)\uff0c\\(l_2\\)\u3001\\(h_2\\)\u4e3a\u7b2c\u4e00\u3001\u4e8c\u4e2a\u5806\u6700\u53f3\u8def\u5f84\u4e0a\u8f7b\u3001\u91cd\u8282\u70b9\u6570\uff0c\\(h\\)\u8868\u793a\u5176\u4ed6\u4f4d\u7f6e\u7684\u91cd\u8282\u70b9\u6570\u3002 \u4e00\u6b21\u64cd\u4f5c\u524d\uff1a\\(\\Phi_{i-1}=h_1+h_2+h\\) \u4e00\u6b21\u64cd\u4f5c\u540e\uff1a\\(\\Phi_{i}\\le l_1+l_2+h\\)</p> <p>\u4e00\u6b21\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c\uff1a</p> \\[ \\begin{align*} \\hat{c_i}&amp;=c_i+\\Phi_i-\\Phi_{i-1} \\\\ &amp;=c_i+l_1+l_2-(h_1+h_2) \\\\ &amp;\\le 2(l_1+l_2) \\\\ &amp;=O(\\log N) \\end{align*} \\] <p>\u7531\u6b64\u5f97\u5230\uff0c\u659c\u5806\u5408\u5e76\u7684\u5747\u644a\u6210\u672c\u4e3a\\(O(\\log N)\\)\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/","title":"\u4e8c\u9879\u961f\u5217","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 520 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#ads-lec-05","title":"ADS Lec 05 \u4e8c\u9879\u961f\u5217","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_1","title":"\u6982\u5ff5","text":"<p>\u4e8c\u9879\u961f\u5217\u662f\u4e00\u7cfb\u5217\u6ee1\u8db3\u5806\u6027\u8d28\u7684\u6811\u7ec4\u6210\u7684\u68ee\u6797\u3002\u5176\u4e2d\u7684\u6bcf\u4e2a\u6811\u662f\u4e8c\u9879\u6811\uff0c\u6bcf\u79cd\u9636\u6570\u7684\u4e8c\u9879\u6811\u6700\u591a\u53ea\u6709\u4e00\u68f5\u3002</p> <p>\u4e8c\u9879\u6811\uff1a\u5b9a\u4e49\u5355\u4e2a\u8282\u70b9\u7684\u9ad8\u5ea6\u4e3a 0\u3002k \u9636\u4e8c\u9879\u6811\u7531\u4e00\u4e2a k-1 \u9636\u4e8c\u9879\u6811\u8fde\u63a5\u5230\u53e6\u4e00 k-1 \u9636\u4e8c\u9879\u6811\u7684\u6839\u8282\u70b9\u6784\u6210\u3002\u5373\uff0c\u9636\u6570\u4e3a k \u7684\u4e8c\u9879\u6811\u7531\u4e24\u68f5\u9636\u6570\u4e3a k\u22121 \u7684\u4e8c\u9879\u6811\u5408\u5e76\u800c\u6210\u3002</p> <p>\u4e8c\u9879\u6811\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u9ad8\u5ea6\u4e3a k \u7684\u4e8c\u9879\u6811\u4e00\u5b9a\u6709\\(2^k\\)\u4e2a\u8282\u70b9\u3002</li> <li>\u7b2c i \u4e2a\u4e8c\u9879\u6811\u662f i-1 \u53c9\u6811\u3002</li> <li>\u4e8c\u9879\u6811\u7684\u5b50\u6811\u4e5f\u662f\u4e8c\u9879\u6811\u3002</li> <li>k \u9636\u4e8c\u9879\u6811\uff0c\u6df1\u5ea6\u4e3a d \u7684\u5c42\u5171\\(\\binom{k}{d}\\)\u4e2a\u8282\u70b9\u3002</li> </ul> <p>\u8981\u8868\u793a n \u4e2a\u6570\uff08n \u4e2a\u8282\u70b9\uff09\uff0c\u5c06 n \u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u82e5\u7b2c i \u4f4d\u4e3a 1 \u5219\u9700\u8981\u4e8c\u9879\u6811\\(B_i\\)\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_2","title":"\u64cd\u4f5c","text":"<p>\u7531\u4e8e\u4e8c\u9879\u6811\u4e0d\u662f\u4e8c\u53c9\u6811\uff0c\u4e0d\u80fd\u7528\u5de6\u53f3\u513f\u5b50\u8868\u793a\uff0c\u6539\u4e3a LeftChild-NextSibling \u8868\u793a\u3002</p> <p>\u6574\u4e2a\u4e8c\u9879\u961f\u5217\u7528\u4e8c\u9879\u6811\u6839\u8282\u70b9\u7684 vector \u8868\u793a\u3002</p> <p>\u5b9a\u4e49\uff1a</p> C++<pre><code>struct Node {\n    int val;\n    Node* leftChild = nullptr;\n    Node* nextSibling = nullptr;\n    Node(int v) : val(v) {}\n};\n\nusing BinTree = Node*;\n\nstruct BinomialQueue {\n    vector&lt;BinTree&gt; trees;\n    int size = 0;\n\n    // \u4e00\u4e9b\u6210\u5458\u51fd\u6570\u5b9a\u4e49\u5728\u8fd9\u91cc\n};\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_3","title":"\u5408\u5e76","text":"<p>\u5408\u5e76\u4e24\u4e2a\u4e8c\u9879\u961f\u5217\u65f6\uff0c\u5982\u679c\u90fd\u6709 k \u9636\u4e8c\u9879\u6811\uff0c\u5219\u5c06\u5176\u5408\u5e76\u4e3a\u4e00\u68f5 k+1 \u9636\u4e8c\u9879\u6811\u3002</p> <p>\u7531\u4e8e\u4e8c\u9879\u961f\u5217\u4e2d\u7684\u4e8c\u9879\u6811\u4e0e\u4e8c\u8fdb\u5236\u5bf9\u5e94\uff0c\u4e8c\u9879\u961f\u5217\u7684\u5408\u5e76\u4e0e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5bf9\u5e94\u3002 \u4e8c\u9879\u6811 BinTree \u4e3a nullptr \u8868\u793a\u4e8c\u8fdb\u5236\u4e2d 0\uff0c\u5426\u5219\u8868\u793a\u4e8c\u8fdb\u5236\u4e2d 1\u3002</p> <p><code>trees[i]</code>\u3001<code>other.trees[i]</code>\u3001<code>carry</code>\u770b\u4f5c 3 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4e09\u4f4d\u80fd 0~7 \u5171 8 \u4e2d\u60c5\u51b5\uff0c\u7528<code>state</code>\u8868\u793a\u8fd9 8 \u79cd\u60c5\u51b5\u7684\u7f16\u53f7\u3002</p> <p>\u5c06 state \u8868\u793a\u4e3a(carry, other, this)\uff0c\u4e0d\u540c\u7684 state \u503c\u5bf9\u5e94\u4e0d\u540c\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>state=0\uff1a\u4e09\u8005\u90fd\u4e3a nullptr\uff0c\u4e0d\u64cd\u4f5c</li> <li>state=1\uff1a\u53ea\u6709 this\uff0c\u4fdd\u7559 this</li> <li>state=2\uff1a\u53ea\u6709 other\uff0c\u5c06 other \u79fb\u5230 this\uff0c\u76f8\u5f53\u4e8e\u52a0\u5165\u961f\u5217</li> <li>state=3\uff1a\u53ea\u6709 this \u548c other \u6709\uff0c\u5c06\u4e24\u8005\u5408\u5e76\u6210\u65b0\u7684\u9636\u6570\u52a0\u4e00\u7684\u6811\uff0c\u8bb0\u4e3a carry\uff0c\u6e05\u7a7a this \u548c other</li> <li>state=4\uff1a\u53ea\u6709 carry \u6709\uff0c\u628a carry \u79fb\u5230 this</li> <li>state=5\uff1a\u53ea\u6709 this \u548c carry \u6709\uff0c\u5c06\u4e24\u8005\u5408\u5e76\u6210\u65b0\u7684 carry</li> <li>state=6\uff1a\u53ea\u6709 other \u548c carry \u6709\uff0c\u5c06\u4e24\u8005\u5408\u5e76\u6210\u65b0\u7684 carry</li> <li> <p>state=7\uff1a\u4e09\u8005\u90fd\u6709\uff0c\u5bf9\u5e94\u4e8c\u8fdb\u5236\u672c\u4f4d\u4e3a 1 \u4e14\u6709\u8fdb\u4f4d</p> </li> <li> <p>\u628a\u539f\u6765\u7684 carry \u653e\u5165 this\uff08\u56e0\u4e3a\u672c\u4f4d\u548c\u4e3a 1\uff09</p> </li> <li>\u5c06 this \u548c other \u5408\u5e76\u6210\u65b0\u7684 carry\uff08\u5bf9\u5e94\u8fdb\u4f4d\uff09</li> <li>\u6e05\u7a7a other</li> </ul> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <ol> <li>\u5408\u5e76\u4e8c\u9879\u6811</li> </ol> C++<pre><code>static BinTree combine(BinTree a, BinTree b) {\n    if (a-&gt;val &gt; b-&gt;val)\n        swap(a, b);\n    b-&gt;nextSibling = a-&gt;leftChild;\n    a-&gt;leftChild = b;\n    return a;\n}\n</code></pre> <ol> <li>\u5408\u5e76\u4e8c\u9879\u961f\u5217</li> </ol> C++<pre><code>void merge(BinomialQueue&amp; other) {\n    BinTree carry = nullptr;\n    size += other.size;\n    for (int i = 0; i &lt; (int)trees.size(); i++) {\n        int state = (trees[i] != nullptr) +\n                    2 * (other.trees[i] != nullptr) +\n                    4 * (carry != nullptr);\n        switch (state) {\n            case 0:\n                break;\n            case 1:\n                break;\n            case 2:\n                trees[i] = other.trees[i];\n                other.trees[i] = nullptr;\n                break;\n            case 3:\n                carry = combine(trees[i], other.trees[i]);\n                trees[i] = other.trees[i] = nullptr;\n                break;\n            case 4:\n                trees[i] = carry;\n                carry = nullptr;\n                break;\n            case 5:\n                carry = combine(trees[i], carry);\n                trees[i] = nullptr;\n                break;\n            case 6:\n                carry = combine(other.trees[i], carry);\n                other.trees[i] = nullptr;\n                break;\n            case 7:\n                carry = combine(trees[i], other.trees[i]);\n                trees[i] = other.trees[i] = nullptr;\n                break;\n        }\n    }\n    other.size = 0;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_4","title":"\u63d2\u5165","text":"<p>\u5c06\u65b0\u63d2\u5165\u7684\u8282\u70b9\u89c6\u4e3a\u5355\u4e2a\u8282\u70b9\u7684\u4e8c\u9879\u6811\uff0c\u518d\u4e0e\u539f\u6709\u7684\u4e8c\u9879\u961f\u5217\u5408\u5e76\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> C++<pre><code>void insert(int x) {\n    BinomialQueue single;\n    single.trees[0] = new Node(x);\n    single.size = 1;\n    merge(single);\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_5","title":"\u67e5\u627e\u6700\u5c0f\u503c","text":"<p>\u67e5\u627e\u6700\u5c0f\u503c\uff0c\u53ea\u9700\u8981\u641c\u7d22\u6240\u6709\u4e8c\u9879\u6811\u7684\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)\u3002 \u53e6\u5916\uff0c\u53ef\u4ee5\u989d\u5916\u8bb0\u5f55\u6700\u5c0f\u503c\u3001\u63d2\u5165\u65f6\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> C++<pre><code>int findMin() {\n    int minVal = INT_MAX;\n    for (auto t : trees) {\n        if (t &amp;&amp; t-&gt;val &lt; minVal)\n            minVal = t-&gt;val;\n    }\n    return minVal;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS05/#_6","title":"\u5220\u9664\u6700\u5c0f\u503c","text":"<p>\u641c\u7d22\u6240\u6709\u4e8c\u9879\u6811\u7684\u6839\u8282\u70b9\uff0c\u5220\u9664\u6700\u5c0f\u503c\u3002\u5269\u4f59\u8282\u70b9\u91cd\u65b0\u7ec4\u5408\u6210\u4e8c\u9879\u961f\u5217\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> C++<pre><code>void deleteMin() {\n    int minIdx = -1, minVal = INT_MAX;\n    for (int i = 0; i &lt; (int)trees.size(); i++) {\n        if (trees[i] &amp;&amp; trees[i]-&gt;val &lt; minVal) {\n            minVal = trees[i]-&gt;val;\n            minIdx = i;\n        }\n    }\n    if (minIdx == -1)\n        return;\n\n    // \u53d6\u51fa\u6700\u5c0f\u6811\n    BinTree minTree = trees[minIdx];\n    trees[minIdx] = nullptr;\n    size -= (1 &lt;&lt; minIdx);\n\n    // \u62c6\u5206\u5b83\u7684\u5b69\u5b50\u94fe\uff0c\u53cd\u5411\u6784\u5efa\u65b0\u961f\u5217\n    BinomialQueue childQ;\n    BinTree child = minTree-&gt;leftChild;\n    for (int j = minIdx - 1; j &gt;= 0; j--) {\n        BinTree next = child-&gt;nextSibling;\n        child-&gt;nextSibling = nullptr;\n        childQ.trees[j] = child;\n        child = next;\n    }\n    childQ.size = (1 &lt;&lt; minIdx) - 1;\n\n    merge(childQ);\n    delete minTree;\n}\n</code></pre> \u4e8c\u9879\u961f\u5217\u4ee3\u7801\u793a\u4f8b C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct Node {\n    int val;\n    Node* leftChild = nullptr;    // \u7b2c\u4e00\u4e2a\u5b69\u5b50\n    Node* nextSibling = nullptr;  // \u4e0b\u4e00\u4e2a\u5144\u5f1f\n    Node(int v) : val(v) {}\n};\n\nusing BinTree = Node*;\n\nstruct BinomialQueue {\n    vector&lt;BinTree&gt; trees;  // \u6bcf\u4e2a\u9636\u7684\u4e8c\u9879\u6811\n    int size = 0;\n\n    BinomialQueue(int maxTrees = 20) { trees.assign(maxTrees, nullptr); }\n\n    // \u5408\u5e76\u4e24\u68f5\u540c\u9636\u4e8c\u9879\u6811\uff08\u5c0f\u6839\u5806\uff09\n    static BinTree combine(BinTree a, BinTree b) {\n        if (a-&gt;val &gt; b-&gt;val)\n            swap(a, b);\n        b-&gt;nextSibling = a-&gt;leftChild;\n        a-&gt;leftChild = b;\n        return a;\n    }\n\n    // \u5408\u5e76\u4e24\u4e2a\u4e8c\u9879\u961f\u5217\n    void merge(BinomialQueue&amp; other) {\n        BinTree carry = nullptr;\n        size += other.size;\n        for (int i = 0; i &lt; (int)trees.size(); i++) {\n            int state = (trees[i] != nullptr) +\n                        2 * (other.trees[i] != nullptr) +\n                        4 * (carry != nullptr);\n            switch (state) {\n                case 0:\n                    break;\n                case 1:\n                    break;\n                case 2:\n                    trees[i] = other.trees[i];\n                    other.trees[i] = nullptr;\n                    break;\n                case 3:\n                    carry = combine(trees[i], other.trees[i]);\n                    trees[i] = other.trees[i] = nullptr;\n                    break;\n                case 4:\n                    trees[i] = carry;\n                    carry = nullptr;\n                    break;\n                case 5:\n                    carry = combine(trees[i], carry);\n                    trees[i] = nullptr;\n                    break;\n                case 6:\n                    carry = combine(other.trees[i], carry);\n                    other.trees[i] = nullptr;\n                    break;\n                case 7:\n                    carry = combine(trees[i], other.trees[i]);\n                    trees[i] = other.trees[i] = nullptr;\n                    break;\n            }\n        }\n        other.size = 0;\n    }\n\n    // \u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n    void insert(int x) {\n        BinomialQueue single;\n        single.trees[0] = new Node(x);\n        single.size = 1;\n        merge(single);\n    }\n\n    // \u67e5\u627e\u6700\u5c0f\u503c\n    int findMin() {\n        int minVal = INT_MAX;\n        for (auto t : trees)\n            if (t &amp;&amp; t-&gt;val &lt; minVal)\n                minVal = t-&gt;val;\n        return minVal;\n    }\n\n    // \u5220\u9664\u6700\u5c0f\u503c\n    void deleteMin() {\n        int minIdx = -1, minVal = INT_MAX;\n        for (int i = 0; i &lt; (int)trees.size(); i++) {\n            if (trees[i] &amp;&amp; trees[i]-&gt;val &lt; minVal) {\n                minVal = trees[i]-&gt;val;\n                minIdx = i;\n            }\n        }\n        if (minIdx == -1)\n            return;  // \u7a7a\u961f\u5217\n\n        // \u62ff\u51fa\u6700\u5c0f\u6811\n        BinTree minTree = trees[minIdx];\n        trees[minIdx] = nullptr;\n        size -= (1 &lt;&lt; minIdx);\n\n        // \u62c6\u5206\u5b83\u7684\u5b69\u5b50\u94fe\uff0c\u53cd\u5411\u6784\u5efa\u65b0\u961f\u5217\n        BinomialQueue childQ;\n        BinTree child = minTree-&gt;leftChild;\n        for (int j = minIdx - 1; j &gt;= 0; j--) {\n            BinTree next = child-&gt;nextSibling;\n            child-&gt;nextSibling = nullptr;\n            childQ.trees[j] = child;\n            child = next;\n        }\n        childQ.size = (1 &lt;&lt; minIdx) - 1;\n\n        merge(childQ);\n        delete minTree;\n    }\n};\n\nint main() {\n    BinomialQueue H;\n    for (int x : {5, 2, 8, 1, 3})\n        H.insert(x);\n\n    cout &lt;&lt; \"Min = \" &lt;&lt; H.findMin() &lt;&lt; \"\\n\";  // \u8f93\u51fa Min = 1\n    H.deleteMin();\n    cout &lt;&lt; \"Min after delete = \" &lt;&lt; H.findMin() &lt;&lt; \"\\n\";  // \u8f93\u51fa 2\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/","title":"\u56de\u6eaf","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 707 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#_1","title":"\u56de\u6eaf\u6982\u8ff0","text":"<p>\u56de\u6eaf\u7b97\u6cd5\u4e3b\u8981\u5e94\u7528\u4e8e\u641c\u7d22\u3002\u76f8\u6bd4\u4e8e\u66b4\u529b\u641c\u7d22\uff0c\u80fd\u6392\u9664\u4e00\u4e9b\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002</p> <p>\u5927\u81f4\u601d\u8def\uff1a</p> <ul> <li>\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u90e8\u5206\u89e3 \\((x_1, \\dots, x_i)\\)\uff0c\u5176\u4e2d \\(x_k \\in S_k,\\ 1 \\le k \\le i &lt; n\\)\uff08\\(S_k\\) \u8868\u793a\u7b2c \\(k\\) \u6b65\u4e0b\u7684\u9009\u62e9\u96c6\uff08S means Stage or (partial) Solution\uff09\uff0c\u800c \\(x_k\\) \u4fbf\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u9009\u9879\uff09</li> <li>\u9996\u5148\u5c06\u4e00\u79cd\u53ef\u80fd\u60c5\u51b5 \\(x_{i+1} \\in S_{i+1}\\) \u52a0\u5230\u8fd9\u4e2a\u90e8\u5206\u89e3\u4e2d\uff0c\u5e76\u68c0\u67e5\u65b0\u7684\u90e8\u5206\u89e3 \\((x_1, \\dots, x_i, x_{i+1})\\) \u662f\u5426\u6ee1\u8db3\u9650\u5236\u6761\u4ef6</li> <li>\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u6dfb\u52a0\u4e0b\u4e00\u79cd\u60c5\u51b5\u5230\u90e8\u5206\u89e3\u4e2d\uff08\u91cd\u590d\u4e0a\u4e00\u6b65\uff09</li> <li>\u4f46\u5982\u679c \\(S_{i+1}\\) \u4e2d\u6ca1\u6709\u6ee1\u8db3\u8981\u6c42\u7684\u9009\u62e9\uff0c\u90a3\u4e48\u8868\u793a\u6cbf \\(x_i\\) \u5f80\u4e0b\u8d70\u662f\u8d70\u4e0d\u901a\u7684\uff0c\u90a3\u4e48\u5c31\u5220\u6389 \\(x_i\\)\uff0c\u5e76\u56de\u6eaf\u5230\u4e0a\u4e00\u4e2a\u90e8\u5206\u89e3 \\((x_1, \\dots, x_{i-1})\\)\uff0c\u7136\u540e\u4ece \\(S_i\\) \u4e2d\u6311\u9009\u53e6\u5916\u7684\u53ef\u80fd\u60c5\u51b5 \\(x_i'\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8</li> </ul> <p>\u535a\u5f08\u6811\u4e2d\uff0c\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c06\u8def\u5f84\u6570\u5c11\u7684\u653e\u5728\u9760\u8fd1\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4e00\u65e6\u4e0d\u5408\u6cd5\u6392\u9664\u7684\u53ef\u80fd\u60c5\u51b5\u5360\u6bd4\u66f4\u5927\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#n","title":"N \u7687\u540e\u95ee\u9898","text":"<p>\u5728 N*N \u7684\u68cb\u76d8\u4e0a\u6446\u653e N \u4e2a\u7687\u540e\uff0c\u4efb\u610f\u4e24\u4e2a\u7687\u540e\u90fd\u4e0d\u80fd\u5904\u4e8e\u540c\u4e00\u884c\u3001\u540c\u4e00\u5217\u6216\u540c\u4e00\u659c\u7ebf\u4e0a\u3002\u6c42\u6446\u653e\u65b9\u5f0f\u3002</p> <p>\u6bcf\u4e2a\u7687\u540e\u5360\u636e\u7684\u4f4d\u7f6e\u4e3a\u5f53\u524d\u4f4d\u7f6e\u548c\u540c\u4e00\u884c\u3001\u5217\u3001\u659c\u7ebf\u4e2d\u6240\u6709\u4f4d\u7f6e\u3002 \u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u5728\u7a7a\u4f59\u4f4d\u7f6e\u4e0a\u9010\u884c\u6446\u653e\u3002\u5982\u679c\u67d0\u4e00\u884c\u6ca1\u6709\u7a7a\u4f4d\uff0c\u8bf4\u660e\u4e4b\u524d\u7684\u6446\u653e\u6709\u95ee\u9898\uff0c\u56de\u6eaf\u3002</p> <p>\u6309\u8bfe\u4e0a\u6240\u8bb2\u7684\uff0c\u516b\u7687\u540e\u95ee\u9898\u8fd4\u56de\u516b\u7ef4\u5411\u91cf\uff0c\u7b2c i \u4f4d \\(x_i\\) \u8868\u793a\u7b2c i \u884c\u7684\u7687\u540e\u7684\u4f4d\u7f6e\u3002 \u8fd9\u6837\u7684\u8868\u793a\u5f62\u5f0f\u5df2\u7ecf\u6392\u9664\u7684\u540c\u884c\u7684\u60c5\u51b5\u3002\u8fdb\u4e00\u6b65\u6392\u9664\u540c\u5217\u7684\u60c5\u51b5\uff0c\u9700\u8981 \\(x_i\\neq x_j \\,(i\\neq j)\\)\uff1b\u6392\u9664\u540c\u4e00\u659c\u7ebf\u7684\u60c5\u51b5\uff0c\u9700\u8981 \\(\\frac{x_i-x_j}{i-j}\\neq \\pm1\\,(i\\neq j)\\)\u3002</p> <p>\u56de\u6eaf\u7b97\u6cd5\u76f8\u5f53\u4e8e\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u68c0\u67e5\u535a\u5f08\u6811\u7684\u6bcf\u4e00\u6761\u8def\u5f84\u3002\u5982\u679c\u5df2\u7ecf\u5224\u5b9a\u4e3a\u4e0d\u53ef\u80fd\uff0c\u5219\u4e0d\u7528\u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22\u3001\u9000\u56de\u5230\u4e0a\u4e00\u6b65\u3002</p> \u793a\u4f8b N \u7687\u540e\u95ee\u9898 <p>\u9898\u76ee\u63cf\u8ff0\uff1a</p> <p>\u8f93\u5165 N\uff0c\u8f93\u51fa N \u7687\u540e\u95ee\u9898\u89e3\u7684\u4e2a\u6570\u3002\uff08\u6216\u8f93\u51fa\u6bcf\u79cd\u89e3\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u4ee3\u7801\u4e2d\u8ba1\u7b97\u4f46\u4e0d\u8f93\u51fa\uff09</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nclass Solution {\nprivate:\n    int n;\n    vector&lt;string&gt; queen;\n    vector&lt;vector&lt;int&gt;&gt; attack;\n    vector&lt;vector&lt;string&gt;&gt; res;\n\n    // (x,y)\u653e\u7f6e\u7687\u540e\u540e\uff0c\u66f4\u65b0attack\n    void putQueen(int x, int y, vector&lt;vector&lt;int&gt;&gt;&amp; atk) {\n        static const int dx[] = {-1, 1, 0, 0, -1, -1, 1, 1};\n        static const int dy[] = {0, 0, -1, 1, -1, 1, -1, 1};\n        atk[x][y] = 1;\n        for (int i = 1; i &lt; n; i++) {\n            for (int j = 0; j &lt; 8; j++) {\n                int nx = x + i * dx[j];\n                int ny = y + i * dy[j];\n                if (nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; n)\n                    atk[nx][ny] = 1;\n            }\n        }\n    }\n\n    // \u56de\u6eaf\n    void backTrack(int r) {\n        if (r == n) {\n            res.push_back(queen);\n            return;\n        }\n        for (int i = 0; i &lt; n; i++) {\n            if (attack[r][i] == 0) {\n                vector&lt;vector&lt;int&gt;&gt; tmp = attack;\n                queen[r][i] = 'Q';\n                putQueen(r, i, attack);\n                backTrack(r + 1);\n                attack = tmp;\n                queen[r][i] = '.';\n            }\n        }\n    }\n\npublic:\n    vector&lt;vector&lt;string&gt;&gt; solveNQueens(int n) {\n        this-&gt;n = n;\n        attack.assign(n, vector&lt;int&gt;(n, 0));\n        queen.assign(n, string(n, '.'));\n        backTrack(0);\n        return res;\n    }\n};\n\nint main() {\n    Solution solution;\n    auto res = solution.solveNQueens(8);\n    cout &lt;&lt; \"Number of solutions: \" &lt;&lt; res.size() &lt;&lt; '\\n';\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <ul> <li><code>putQueen</code>\u9700\u8981\u4f20\u5165\u53c2\u6570 atk\uff08attack\uff09\uff0c\u5426\u5219\u5185\u90e8\u4fee\u6539\u5168\u90e8\u7684 attack \u800c\u4e0d\u662f\u9012\u5f52\u5185\u90e8\u7684\u526f\u672c\uff0c\u4e0d\u540c\u9012\u5f52\u5206\u652f\u95f4\u76f8\u4e92\u6c61\u67d3\u3002</li> <li><code>solveNQueens</code>\u4e2d\u4f20\u5165\u7684\u53c2\u6570 n \u8986\u76d6\u4e86\u6210\u5458 n\uff0c\u9700\u8981\u89c4\u5b9a <code>this-&gt;n = n</code>\u3002</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#_2","title":"\u6536\u8d39\u516c\u8def\u91cd\u5efa\u95ee\u9898","text":"<p>\u7ed9\u5b9a \\(N\\) \u4e2a\u5728 x \u8f74\u4e0a\u7684\u70b9\uff0c\u5b83\u4eec\u7684\u5750\u6807\u6ee1\u8db3 \\(x_1 &lt; x_2 &lt; \\ldots x_N\\)\uff0c\u5e76\u5047\u8bbe \\(x_1 = 0\\)\u3002\u5728\u6240\u6709\u70b9\u4e2d\u4efb\u53d6\u4e24\u70b9\uff0c\u4e00\u5171\u6709 \\(\\frac{N(N - 1)}{2}\\) \u79cd\u53d6\u6cd5\uff0c\u5bf9\u5e94\u6709 \\(\\frac{N(N - 1)}{2}\\) \u4e0d\u540c\u7684\u8def\u5f84\u3002 \u7ed9\u5b9a \\(\\frac{N(N - 1)}{2}\\) \u6761\u8def\u5f84\uff0c\u5982\u4f55\u91cd\u65b0\u6784\u9020\uff08reconstruct\uff09\u4e00\u4e2a\u70b9\u96c6\uff1f</p> <p>\u4ee4\u8f93\u5165\u7684\u6240\u6709\u8def\u5f84\u957f\u5ea6\u7ec4\u6210 \\(D\\)\uff0c\u8d77\u70b9 \\(x_1 = 0\\)\uff0c\u7ec8\u70b9 \\(x_N=D_{max}\\)\u3002\u5c06\u8fd9\u4e24\u4e2a\u8ddd\u79bb\u4ece \\(D\\) \u4e2d\u5220\u9664\u3002 \u6bcf\u6b21\u8003\u8651 \\(D\\) \u4e2d\u5269\u4f59\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c\u5176\u5bf9\u5e94\u7684\u70b9\u53ea\u53ef\u80fd\u662f\u5230\u8d77\u70b9\u6216\u7ec8\u70b9\u7684\u8ddd\u79bb\u4e3a\u8fd9\u4e2a\u6700\u5927\u503c\u3002\u5206\u522b\u8003\u8651\u5230\u8d77\u70b9\u3001\u5230\u7ec8\u70b9\u7684\u60c5\u51b5\uff0c\u68c0\u67e5\u548c\u5df2\u6709\u7684\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u662f\u5426\u5305\u542b\u5728\u5269\u4f59\u7684 \\(D\\) \u4e2d\u3002\u5982\u679c\u67d0\u4e2a\u8ddd\u79bb\u4e0d\u5305\u542b\u5728 \\(D\\) \u4e2d\uff0c\u5219\u8bf4\u660e\u8fd9\u79cd\u6392\u5217\u6709\u95ee\u9898\uff0c\u56de\u6eaf\u3002</p> \u793a\u4f8b \u6536\u8d39\u516c\u8def\u91cd\u5efa\u95ee\u9898 <p>\u9898\u76ee\u63cf\u8ff0\uff1a</p> <p>\u7b2c\u4e00\u884c\u8f93\u5165 n \u8868\u793a\u70b9\u6570\uff0cD \u8868\u793a\u6700\u5927\u8ddd\u79bb\u3002\u7b2c\u4e8c\u884c\u8f93\u5165 N(N-1)/2 \u4e2a\u70b9\uff0c\u8868\u793a\u4e24\u4e24\u8ddd\u79bb\u3002\u8f93\u51fa\u70b9\u6392\u5217\u6570\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nclass Solution {\nprivate:\n    int n, D;\n    vector&lt;vector&lt;int&gt;&gt; res;\n\n    bool isValid(int nx, const vector&lt;int&gt;&amp; x, multiset&lt;int&gt;&amp; dist) {\n        for (int u : x) {\n            int d = abs(nx - u);\n            auto it = dist.find(d);\n            if (it == dist.end())\n                return false;\n            dist.erase(it);\n        }\n        return true;\n    }\n\n    void backTrack(vector&lt;int&gt; x, multiset&lt;int&gt; dist) {\n        if (x.size() == n) {\n            sort(x.begin(), x.end());\n            res.push_back(x);\n            return;\n        }\n\n        int M = *dist.rbegin();  // \u5f53\u524d\u6700\u5927\u8ddd\u79bb\n        vector&lt;int&gt; candidates = {M, D - M};\n        for (int cand : candidates) {\n            if (cand &lt; 0 || cand &gt; D)\n                continue;\n            auto tmp = dist;\n            if (isValid(cand, x, tmp)) {\n                x.push_back(cand);\n                backTrack(x, tmp);\n                x.pop_back();\n            }\n        }\n    }\n\npublic:\n    vector&lt;vector&lt;int&gt;&gt; solveTurnpike(int n, int D, multiset&lt;int&gt; dist) {\n        this-&gt;n = n;\n        this-&gt;D = D;\n\n        if (n == 1)\n            return {{0}};\n        if (dist.find(D) == dist.end())\n            return {};\n\n        dist.erase(dist.find(D));\n        vector&lt;int&gt; x = {0, D};\n        backTrack(x, dist);\n        sort(res.begin(), res.end());\n        res.erase(unique(res.begin(), res.end()), res.end());\n        return res;\n    }\n};\n\nint main() {\n    int n, D;\n    multiset&lt;int&gt; dist;\n    cin &gt;&gt; n &gt;&gt; D;\n    for (int i = 0; i &lt; n * (n - 1) / 2; i++) {\n        int d;\n        cin &gt;&gt; d;\n        dist.insert(d);\n    }\n    Solution solution;\n    auto res = solution.solveTurnpike(n, D, dist);\n    cout &lt;&lt; \"Number of solutions: \" &lt;&lt; res.size() &lt;&lt; '\\n';\n    for (auto&amp; v : res) {\n        for (int x : v)\n            cout &lt;&lt; x &lt;&lt; ' ';\n        cout &lt;&lt; '\\n';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#_3","title":"\u535a\u5f08\u6811","text":"<p>\u535a\u5f08\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5c40\u9762\uff0c\u6bcf\u4e00\u6761\u8fb9\u5bf9\u5e94\u4e00\u4e2a\u52a8\u4f5c\u3002</p> <p>\u6ce8\u610f \u8bfe\u4e0a\u8bb2\u7684\u535a\u5f08\u6811</p> <p>\u7528\u767d\u8282\u70b9\u8868\u793a\u53ef\u884c\u7684\u60c5\u51b5\uff0c\u7528\u9ed1\u8282\u70b9\u8868\u793a\u4e0d\u53ef\u884c\u7684\u60c5\u51b5\u3002</p> <p>\u5bf9\u67d0\u4e2a\u5c40\u9762\uff0c\u5982\u679c\u5224\u5b9a\u4e3a\u4e0d\u53ef\u80fd\uff0c\u5c31\u5c06\u5176\u6807\u9ed1\uff0c\u4e14\u4e0d\u518d\u68c0\u67e5\u5b83\u7684\u5b50\u8282\u70b9\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f\u9ed1\u7684\uff0c\u5219\u8be5\u8282\u70b9\u4e5f\u662f\u9ed1\u7684\u3002</p> <p>\u5728 tic-tac-toe \u6e38\u620f\u4e2d\uff0c\u91c7\u7528\u8ba1\u7b97\u673a\u7684\u89c6\u89d2\uff0c\u5b9a\u4e49 MINMAX \u51fd\u6570\uff08\"goodness\" function\uff09\u4e3a \\(W_{computer}-W_{humen}\\)\uff0c\u5373\u7535\u8111\u5f53\u524d\u5c40\u9762\u7684\u201c\u6f5c\u5728\u8d62\u6cd5\u6743\u503c\u4e4b\u548c\u201d-\u4eba\u7c7b\u5f53\u524d\u5c40\u9762\u7684\u201c\u6f5c\u5728\u8d62\u6cd5\u6743\u503c\u4e4b\u548c\u201d\u3002</p> <p>In the Tic-tac-toe game, a \"goodness\" function of a position is defined as \\(f(P) = W_{computer} \u2212 W_{human}\\), where W... is the sum of all potential win lines with the weight of 1\uff0c2 or 3 if 0, 1 or 2 pieces is/are in the line respectively.</p> <p>\u201c\u6f5c\u5728\u8d62\u6cd5\u6743\u503c\u4e4b\u548c\u201d\u662f\u5bf9\u4e8e\u5c40\u9762\u800c\u8a00\uff0c\u548c\u6b63\u8d1f\u53cc\u65b9\u4e4b\u540e\u7684\u4e0b\u68cb\u987a\u5e8f\u65e0\u5173\u3002 \u8003\u8651\u6a2a\u3001\u7ad6\u3001\u5bf9\u89d2\u7ebf\u5171 8 \u79cd\u53ef\u80fd\u7684\u80dc\u51fa\u60c5\u51b5\uff0c\u5982\u679c\u5f53\u524d\u8d62\u7ebf\u4e0a\u6ca1\u6709\u5bf9\u65b9\u68cb\u5b50\uff0c\u5219\u201c\u6f5c\u5728\u8d62\u6cd5\u6743\u503c\u4e4b\u548c\u201d\u52a0\u5f53\u524d\u5728\u8fd9\u6761\u8d62\u7ebf\u7684\u68cb\u5b50\u6570\u518d\u52a0\u4e00\uff1b\u5982\u679c\u8d62\u7ebf\u6709\u5bf9\u65b9\u68cb\u5b50\uff0c\u5219\u201c\u6f5c\u5728\u8d62\u6cd5\u6743\u503c\u4e4b\u548c\u201d\u4e0d\u53d8\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#_4","title":"\u6781\u5c0f\u6781\u5927\u641c\u7d22","text":"<p>\u5173\u4e8e\u6bcf\u4e2a\u5c40\u9762\uff0c\u5b9a\u4e49\u8bc4\u4ef7\u51fd\u6570\u3002\u8d62\u7684\u8bc4\u4f30\u503c\u4e3a 1\uff0c\u8f93\u7684\u8bc4\u4f30\u503c\u4e3a -1\uff0c\u5e73\u5c40\u7684\u8bc4\u4f30\u503c\u4e3a 0\u3002\u8bc4\u4ef7\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a\u5b50\u6811\u7684\u53f6\u8282\u70b9\u4e2d\u201c\u8d62\u7684\u6570\u91cf\u201d-\u201c\u8f93\u7684\u6570\u91cf\u201d\u3002</p> <p>\u6b63\u3001\u53cd\u65b9\u6bcf\u8d70\u4e00\u6b65\uff0c\u90fd\u9009\u62e9\u4f7f\u81ea\u5df1\u8d62\u5f97\u66f4\u591a\u7684\u8282\u70b9\u3002\u6b63\u65b9\u9009\u62e9\u7684\u8282\u70b9\u79f0\u4e3a MAX \u8282\u70b9\uff08\u8bc4\u4f30\u503c\u6700\u5927\uff09\uff0c\u53cd\u65b9\u9009\u62e9\u7684\u8282\u70b9\u79f0\u4e3a MIN \u8282\u70b9\uff08\u8bc4\u4f30\u503c\u6700\u5c0f\uff09\u3002 \u7531\u4e8e\u6b63\u53cd\u65b9\u4ea4\u66ff\u8d70\u6b65\uff0cMAX \u5c42\u548c MIN \u5c42 \u4f1a\u4ea4\u66ff\u51fa\u73b0\u3002</p> <p>\u6b65\u9aa4\uff1a</p> <ol> <li>\u6784\u5efa\u535a\u5f08\u6811\uff1b</li> <li>\u5c06\u8bc4\u4f30\u51fd\u6570\u5e94\u7528\u4e8e\u53f6\u5b50\u8282\u70b9\uff081 \u6216 -1\uff09\uff1b</li> <li>\u81ea\u5e95\u5411\u4e0a\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684 MINMAX \u503c\uff1b</li> <li>\u4ece\u6839\u8282\u70b9\u9009\u62e9 MINMAX \u503c\u6700\u5927\u7684\u5206\u652f\uff0c\u4f5c\u4e3a\u884c\u52a8\u7b56\u7565\u3002</li> </ol>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS06/#alpha-beta","title":"alpha-beta \u526a\u679d","text":"<p>\u5bf9\u4e8e MAX \u5c42\u8282\u70b9\uff0c\u53ef\u4ee5\u770b\u4f5c\u8bc4\u4f30\u503c\u7684\u521d\u8bd5\u503c\u4e3a \\(-\\infty\\)\uff0c\u968f\u7740\u5b50\u8282\u70b9\u7684\u904d\u5386\u5411\u4e0a\u589e\u957f\uff1b\u800c\u5bf9\u4e8e MIN \u5c42\u8282\u70b9\uff0c\u53ef\u4ee5\u53ef\u4ee5\u770b\u4f5c\u8bc4\u4f30\u503c\u7684\u521d\u8bd5\u503c\u4e3a \\(+\\infty\\)\uff0c\u968f\u7740\u5b50\u8282\u70b9\u7684\u904d\u5386\u5411\u4e0b\u51cf\u5c0f\u3002</p> <p>\u5bf9\u4e8e MIN \u5c42\u8282\u70b9\uff0c\u4e0a\u4e00\u5c42 MAX \u5c42\u4f1a\u9009\u62e9\u8bc4\u4f30\u503c\u5c0f\u7684\u8282\u70b9\u3002 \u8bc4\u4f30\u503c\u7684\u8ba1\u7b97\u6309\u4e2d\u5e8f\u904d\u5386\uff08\u5e76\u975e\u4e8c\u53c9\u6811\u65f6\u4e0d\u5b58\u5728\u201c\u4e2d\u5e8f\u201d\uff0c\u5373\u7b2c\u4e00\u4e2a\u513f\u5b50\u3001\u7236\u4eb2\u3001\u7b2c\u4e8c\u4e2a\u513f\u5b50\u3001\u7236\u4eb2\u2026\u2026\u7684\u987a\u5e8f\uff09\u8fdb\u884c\u3002\u5bf9\u4efb\u610f MAX \u5c42\u7236\u4eb2\u8282\u70b9\uff0c\u904d\u5386\u5b8c\u7b2c\u4e00\u6761\u8def\u5f84\u540e\uff0c\u7236\u4eb2\u7684 MINMAX \u503c\u4ece \\(+\\infty\\) \u964d\u4f4e\u4e3a\u7b2c\u4e00\u4e2a\u513f\u5b50\u7684 MINMAX \u503c\u3002 \u5bf9\u4e8e\u5269\u4e0b\u7684 MIN \u5b50\u8282\u70b9\uff0c\u5f53 MINMAX \u503c\u5c0f\u4e8e MAX \u7236\u4eb2\u7684 MINMAX \u503c\u65f6\uff0c\u80af\u5b9a\u4e0d\u4f1a\u88ab\u7236\u4eb2\u8282\u70b9\u9009\u62e9\uff0c\u56e0\u6b64\u4e0d\u7528\u7ee7\u7eed\u904d\u5386\u5b50\u8282\u70b9\u3002 \u6bcf\u6b21\u4fee\u6539\u8282\u70b9\u7684 MINMAX \u503c\u65f6\uff0c\u90fd\u8981\u68c0\u67e5\u8fd8\u6709\u6ca1\u6709\u53ef\u80fd\u88ab\u7236\u4eb2\u9009\u62e9\u3002\u5982\u679c\u5f53\u524d\u7684 MINMAX \u503c\u5c0f\u4e8e MAX \u7236\u4eb2\u7684\u503c\u3001\u6216\u5927\u4e8e MIN \u7236\u4eb2\u7684\u503c\uff0c\u5219\u4e0d\u7528\u7ee7\u7eed\u641c\u7d22\uff0c\u5373\u5b8c\u6210\u526a\u679d\u3002</p> <p>\u4e3a\u4ec0\u4e48\u53eb \\(\\alpha-\\)beta$ \uff1f</p> <ul> <li>alpha\uff1a\u5982\u679c\u5f53\u524d\u662f MAX \u8282\u70b9\uff0c\u80fd\u4fdd\u8bc1\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c</li> <li>beta\uff1a\u5982\u679c\u5f53\u524d\u662f MIN \u8282\u70b9\uff0c\u80fd\u4fdd\u8bc1\u7684\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c</li> </ul> <p>\u8bfe\u4e0a\u589e\u52a0\u4e86 \\(\\alpha\\) \u526a\u679d\u548c \\(\\beta\\) \u526a\u679d\u7684\u6982\u5ff5\uff1a</p> <ul> <li>\\(\\alpha\\) \u526a\u679d\uff1aMIN \u5c42\u5b50\u8282\u70b9\u7684\u503c\u5c0f\u4e8e MAX \u5c42\u7236\u8282\u70b9\u7684\u503c</li> <li>\\(\\beta\\) \u526a\u679d\uff1aMAX \u5c42\u5b50\u8282\u70b9\u7684\u503c\u5927\u4e8e MIN \u5c42\u7236\u8282\u70b9\u7684\u503c</li> </ul>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/","title":"\u5206\u6cbb","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 432 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u63d0\u9192</p> <p>\u548c Noflower/\u7b97\u6cd5\u8bbe\u8ba1\u5206\u6790/\u5206\u6cbb \u9ad8\u5ea6\u91cd\u5408\uff0c\u70b9\u51fb \u6b64\u5904 \u53ef\u79fb\u6b65\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_1","title":"\u6700\u8fd1\u70b9\u5bf9\u95ee\u9898","text":"<p>\u5728\u5e73\u9762\u4e0a\u7ed9\u5b9a \\( n \\) \u4e2a\u70b9\uff0c\u5e0c\u671b\u627e\u51fa\u5176\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u3002 \u8f93\u5165\uff1a\u5e73\u9762\u4e0a \\( n \\) \u4e2a\u70b9 \\( P = \\{p_1, p_2, \\dots, p_n\\} \\)\uff0c\u6bcf\u4e2a\u70b9 \\( p_i = (x_i, y_i) \\)\u3002 \u8f93\u51fa\uff1a\u4e00\u5bf9\u70b9 \\( (p_i, p_j) \\)\uff08\\( i \\ne j \\)\uff09\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u6700\u5c0f\u3002</p> <p>\u5206\u6cbb\u6cd5\u6b65\u9aa4\uff1a</p> <ol> <li>\u5c06\u70b9\u96c6\u5206\u522b\u6309 x \u5750\u6807\u548c y \u5750\u6807\u6392\u5e8f\uff0c\u5f97\u5230\u6570\u7ec4 \\( P_x \\) \u548c \\( P_y \\)\u3002</li> <li>\u7528\u4e00\u6761\u5782\u76f4\u7ebf\u5c06\u70b9\u96c6\u5206\u4e3a\u5de6\u53f3\u4e24\u534a\uff0c\u6bcf\u8fb9\u7ea6 \\( n/2 \\) \u4e2a\u70b9\uff0c\u9012\u5f52\u6c42\u89e3\u5de6\u534a\u7684\u6700\u8fd1\u8ddd\u79bb \\( d_L \\)\uff0c\u53f3\u534a\u7684\u6700\u8fd1\u8ddd\u79bb \\( d_R \\)\u3002\u4ee4 \\( d = \\min(d_L, d_R) \\)\u3002</li> <li>\u5408\u5e76\u65f6\u8981\u8003\u8651\u8de8\u8d8a\u5206\u5272\u7ebf\u7684\u70b9\u5bf9\uff0c\u53ea\u9700\u53d6\u534a\u5bbd\u4e3a \\(d\\) \u7684\u5e26\u72b6\u533a\u57df\uff08strip\uff09\u5373\u53ef\u3002\u5bf9 strip \u4e2d\u7684\u70b9\u6309 y \u5750\u6807\u6392\u5e8f\uff0c\u68c0\u67e5\u90bb\u8fd1\u7684\u70b9\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u5019\u9009\u70b9\u5bf9\u7684\u8ddd\u79bb\uff0c\u66f4\u65b0\u6700\u5c0f\u8ddd\u79bb\u3002</li> </ol> <p></p> <p>\u7406\u89e3\uff1a\u5c06 strip \u5212\u5206\u4e3a\u8fb9\u957f\u7684 \\(d/2\\) \u7684\u65b9\u683c\uff0c\u5c06\u8981\u8003\u8651\u7684\u70b9\u653e\u5728\u4e00\u6761\u5e95\u8fb9\u3002\u5e0c\u671b\u8ddd\u79bb\u5c0f\u4e8e \\(d\\)\uff0c\u6545\u4e00\u4e2a\u65b9\u683c\u4ee5\u5916\u7684\u70b9\u4e0d\u7528\u8003\u8651\uff1b\u800c\u56e0\u4e3a\u4e24\u8fb9\u7684\u6700\u5c0f\u8ddd\u79bb\u90fd\u5c0f\u4e8e \\(d\\)\uff0c\u4e00\u4e2a\u65b9\u683c\u5185\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u70b9\u3002\u6240\u4ee5\u5bf9\u4e8e strip \u4e2d\u7684\u70b9\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u76f8\u90bb\u7684 7 \u4e2a\u65b9\u683c\uff0c\u6700\u591a\u6709 7 \u4e2a\u90bb\u5c45\u70b9\uff0c\u4e3a\u5e38\u6570\u65f6\u95f4\u3002 \u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u56e0\u4e3a\u63d0\u524d\u5c06\u70b9\u96c6\u6309 y \u5750\u6807\u6392\u5e8f\uff0c\u53ea\u9700\u6bd4\u8f83\u540e\u9762\u81f3\u591a 7 \u4e2a\u70b9\u3002</p> \u4ee3\u7801\u793a\u4f8b \u5206\u6cbb\u6cd5\u6700\u8fd1\u70b9\u5bf9 C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct Point {\n    double x, y;\n};\n\n// \u8ba1\u7b97\u4e24\u70b9\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\ndouble dist(const Point&amp; a, const Point&amp; b) {\n    double dx = a.x - b.x;\n    double dy = a.y - b.y;\n    return sqrt(dx * dx + dy * dy);\n}\n\n// \u5408\u5e76\u9636\u6bb5\uff1a\u4ec5\u6bd4\u8f83\u5e26\u533a\u4e2d\u7684\u70b9\ndouble stripClosest(vector&lt;Point&gt;&amp; strip, double d) {\n    double min_d = d;\n    int n = strip.size();  // strip \u4e2d\u70b9\u6570\n\n    // strip \u5df2\u6309 y \u6392\u5e8f\uff0c\u53ea\u9700\u6bd4\u8f83\u540e\u9762\u81f3\u591a 7 \u4e2a\u70b9\n    for (int i = 0; i &lt; n; ++i)\n        for (int j = i + 1; j &lt; n &amp;&amp; (strip[j].y - strip[i].y) &lt; min_d; ++j)\n            min_d = min(min_d, dist(strip[i], strip[j]));\n    return min_d;\n}\n\n// \u5206\u6cbb\u6838\u5fc3\ndouble closestUtil(vector&lt;Point&gt;&amp; Px, vector&lt;Point&gt;&amp; Py) {\n    int n = Px.size();  // \u70b9\u7684\u603b\u6570\n    int mid = n / 2;\n    double midx = Px[mid].x;  // \u5212\u5206\u7ad6\u7ebf\u7684 x \u503c\n\n    // \u6309 x \u5206\u6210\u5de6\u53f3\u90e8\u5206\n    vector&lt;Point&gt; Qx(Px.begin(), Px.begin() + mid);\n    vector&lt;Point&gt; Rx(Px.begin() + mid, Px.end());\n\n    // \u6309 y \u5750\u6807\u5212\u5206\u6210 Qy\u3001Ry\n    vector&lt;Point&gt; Qy, Ry;\n    Qy.reserve(mid);  // \u4f18\u5148\u5206\u914d\u7a7a\u95f4\uff0c\u540e\u7eed push_back \u65f6\u4e0d\u4f1a\u6269\u5bb9\n    Ry.reserve(n - mid);\n    for (auto&amp; p : Py) {\n        if (p.x &lt;= midx)\n            Qy.push_back(p);\n        else\n            Ry.push_back(p);\n    }\n\n    // \u9012\u5f52\u6c42\u89e3\u5de6\u53f3\u4e24\u4fa7\u7684\u6700\u5c0f\u8ddd\u79bb\n    double dl = closestUtil(Qx, Qy);\n    double dr = closestUtil(Rx, Ry);\n    double d = min(dl, dr);\n\n    // \u6784\u9020\u5e26\u533a strip\uff1a\u8ddd\u79bb\u5206\u5272\u7ebf &lt;= d \u7684\u70b9\n    vector&lt;Point&gt; strip;\n    for (auto&amp; p : Py)\n        if (fabs(p.x - midx) &lt; d)\n            strip.push_back(p);\n\n    // \u5e26\u533a\u626b\u63cf\u66f4\u65b0\u6700\u5c0f\u503c\n    return min(d, stripClosest(strip, d));\n}\n\n// \u4e3b\u51fd\u6570\uff1a\u8f93\u5165\u70b9\u96c6\uff0c\u8fd4\u56de\u6700\u5c0f\u8ddd\u79bb\ndouble closestPair(vector&lt;Point&gt;&amp; points) {\n    vector&lt;Point&gt; Px = points, Py = points;\n    sort(Px.begin(), Px.end(),\n        [](auto&amp; a, auto&amp; b) { return a.x &lt; b.x; });  // \u6309 x \u6392\u5e8f\n    sort(Py.begin(), Py.end(),\n        [](auto&amp; a, auto&amp; b) { return a.y &lt; b.y; });  // \u6309 y \u6392\u5e8f\n    return closestUtil(Px, Py);  // \u8c03\u7528\u51fd\u6570\u4f20\u5165\u6392\u5e8f\u540e Px\u3001Py\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    int n;\n    cout &lt;&lt; \"Enter number of points: \";\n    cin &gt;&gt; n;\n\n    vector&lt;Point&gt; pts(n);\n    cout &lt;&lt; \"Enter points (x y):\\n\";\n    for (int i = 0; i &lt; n; ++i)\n        cin &gt;&gt; pts[i].x &gt;&gt; pts[i].y;\n\n    double ans = closestPair(pts);\n    cout &lt;&lt; fixed &lt;&lt; setprecision(6);\n    cout &lt;&lt; \"Minimum distance = \" &lt;&lt; ans &lt;&lt; \"\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_2","title":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e3b\u5b9a\u7406","text":"<p>\u51e0\u79cd\u65f6\u95f4\u590d\u6742\u5ea6</p> <ul> <li>\\(O\\)\uff1a\u4e0a\u754c\uff0c\u6700\u574f\u60c5\u51b5</li> <li>\\(o\\)\uff1a\u975e\u7d27\u4e0a\u754c</li> <li>\\(\\Omega\\)\uff1a\u4e0b\u754c\uff0c\u6700\u597d\u60c5\u51b5</li> <li>\\(\\omega\\)\uff1a\u975e\u7d27\u4e0b\u754c</li> <li>\\(\\Theta\\)\uff1a\u7d27\u786e\u754c\uff08\u5373\u662f\u4e0a\u754c\u53c8\u662f\u4e0b\u754c\uff09\uff0c\u589e\u957f\u540c\u9636</li> </ul> <p>\u4e00\u822c\uff0c\u5206\u6cbb TC \u7684\u9012\u63a8\u5f0f\u4e3a\uff1a</p> \\[T(n)=aT(\\frac{n}{b})+f(n)\\] <p>\u8ba4\u4e3a \\(f(n)=n^c\\)\uff0c\u5f97\u5230\u4e3b\u5b9a\u7406\uff08Master Theorem\uff09\u8868\u8fbe\u5f0f\uff1a</p> \\[ T(n) = \\begin{cases} \\displaystyle O(n^c), &amp;\\quad a &lt; b^c \\\\ \\displaystyle O(n^c\\log n), &amp;\\quad a = b^c \\\\ \\displaystyle O(n^{\\log_ba}), &amp;\\quad a &gt; b^d \\end{cases} \\] \u4e3b\u5b9a\u7406\u63a8\u5bfc <p>\u7b2c\u4e00\u6b65\uff1a\u5c55\u5f00\u9012\u63a8\u5f0f\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u7406\u89e3\uff09</p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u6811\u6216\u5c55\u5f00\u6765\u76f4\u89c2\u7406\u89e3\uff1a</p> \\[ \\begin{aligned} T(n) &amp;= aT\\left(\\frac{n}{b}\\right) + n^c \\\\ &amp;= a\\left[ aT\\left(\\frac{n}{b^2}\\right) + \\left(\\frac{n}{b}\\right)^c \\right] + n^c \\\\ &amp;= a^2 T\\left(\\frac{n}{b^2}\\right) + a \\cdot \\frac{n^c}{b^c} + n^c \\\\ &amp;= a^2 \\left[ aT\\left(\\frac{n}{b^3}\\right) + \\left(\\frac{n}{b^2}\\right)^c \\right] + a \\cdot \\frac{n^c}{b^c} + n^c \\\\ &amp;= a^3 T\\left(\\frac{n}{b^3}\\right) + a^2 \\cdot \\frac{n^c}{b^{2c}} + a \\cdot \\frac{n^c}{b^c} + n^c \\\\ &amp;\\;\\;\\vdots \\\\ &amp;= a^k T\\left(\\frac{n}{b^k}\\right) + n^c \\sum_{i=0}^{k-1} \\left( \\frac{a}{b^c} \\right)^i \\end{aligned} \\] <p>\u5f53\u9012\u5f52\u5230\u5e95\u5c42\u65f6\uff0c\\( \\frac{n}{b^k} = 1 \\Rightarrow k = \\log_b n \\)\u3002</p> <p>\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a</p> \\[ T(n) = a^{\\log_b n} T(1) + n^c \\sum_{i=0}^{\\log_b n - 1} \\left( \\frac{a}{b^c} \\right)^i \\] <p>\u6ce8\u610f\u5230 \\( a^{\\log_b n} = n^{\\log_b a} \\)\uff0c\u56e0\u6b64\uff1a</p> \\[ T(n) = \\Theta\\left( n^{\\log_b a} \\right) + n^c \\cdot \\sum_{i=0}^{\\log_b n - 1} \\left( \\frac{a}{b^c} \\right)^i \\] <p>\u73b0\u5728\u5173\u952e\u770b\u6bd4\u503c \\( \\frac{a}{b^c} \\)\uff1a</p> <p>\u7b2c\u4e8c\u6b65\uff1a\u5206\u60c5\u51b5\u8ba8\u8bba\uff08\u5373\u4e3b\u5b9a\u7406\u7684\u4e09\u79cd\u60c5\u5f62\uff09</p> <p>\u4ee4 \\( \\alpha = \\log_b a \\)\uff0c\u5373 \\( a = b^\\alpha \\)\u3002\u6bd4\u8f83 \\( \\alpha \\) \u4e0e \\( c \\)\uff1a</p> <p>\u60c5\u51b5 1\uff1a\\( c &lt; \\log_b a \\)\uff08\u5373 \\( f(n) = n^c \\) \u591a\u9879\u5f0f\u5c0f\u4e8e \\( n^{\\log_b a} \\)\uff09</p> <p>\u6b64\u65f6 \\( \\frac{a}{b^c} = b^{\\log_b a - c} &gt; 1 \\)\uff0c\u51e0\u4f55\u7ea7\u6570\u4e3b\u5bfc\u9879\u662f\u6700\u540e\u4e00\u9879\uff1a</p> \\[ \\sum_{i=0}^{\\log_b n - 1} \\left( \\frac{a}{b^c} \\right)^i = \\Theta\\left( \\left( \\frac{a}{b^c} \\right)^{\\log_b n} \\right) = \\Theta\\left( n^{\\log_b a - c} \\right) \\] <p>\u6240\u4ee5\uff1a</p> \\[ T(n) = \\Theta(n^{\\log_b a}) + n^c \\cdot \\Theta(n^{\\log_b a - c}) = \\Theta(n^{\\log_b a}) \\] <p>\u7ed3\u8bba\uff1a\u82e5 \\( f(n) = O(n^c) \\) \u4e14 \\( c &lt; \\log_b a \\)\uff0c\u5219</p> \\[ T(n) = \\Theta(n^{\\log_b a}) \\] <p>\u60c5\u51b5 2\uff1a\\( c = \\log_b a \\)</p> <p>\u6b64\u65f6 \\( \\frac{a}{b^c} = 1 \\)\uff0c\u51e0\u4f55\u7ea7\u6570\u53d8\u6210\uff1a</p> \\[ \\sum_{i=0}^{\\log_b n - 1} 1 = \\log_b n = \\Theta(\\log n) \\] <p>\u6240\u4ee5\uff1a</p> \\[ T(n) = \\Theta(n^c) + n^c \\cdot \\Theta(\\log n) = \\Theta(n^c \\log n) \\] <p>\u7ed3\u8bba\uff1a\u82e5 \\( f(n) = \\Theta(n^{\\log_b a}) \\)\uff0c\u5219</p> \\[ T(n) = \\Theta(n^{\\log_b a} \\log n) \\] <p>\u60c5\u51b5 3\uff1a\\( c &gt; \\log_b a \\)</p> <p>\u6b64\u65f6 \\( \\frac{a}{b^c} &lt; 1 \\)\uff0c\u51e0\u4f55\u7ea7\u6570\u6536\u655b\u5230\u5e38\u6570\uff1a</p> \\[ \\sum_{i=0}^{\\log_b n - 1} \\left( \\frac{a}{b^c} \\right)^i = \\Theta(1) \\] <p>\u6240\u4ee5\uff1a</p> \\[ T(n) = \\Theta(n^{\\log_b a}) + n^c \\cdot \\Theta(1) = \\Theta(n^c) \\] <p>\u4f46\u6ce8\u610f\uff1a\u4e3b\u5b9a\u7406\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\u8fd8\u9700\u8981\u6ee1\u8db3\u6b63\u5219\u6761\u4ef6\uff08regularity condition\uff09\uff1a \u5b58\u5728 \\( \\varepsilon &gt; 0 \\)\uff0c\u4f7f\u5f97 \\( a f(n/b) \\leq k f(n) \\) \u5bf9\u67d0\u4e2a \\( k &lt; 1 \\) \u6210\u7acb\uff08\u901a\u5e38\u5bf9\u591a\u9879\u5f0f \\( f(n) = n^c \\) \u81ea\u52a8\u6ee1\u8db3\uff09\u3002</p> <p>\u7ed3\u8bba\uff1a\u82e5 \\( f(n) = \\Omega(n^c) \\) \u4e14 \\( c &gt; \\log_b a \\)\uff0c\u4e14\u6ee1\u8db3\u6b63\u5219\u6761\u4ef6\uff0c\u5219</p> \\[ T(n) = \\Theta(f(n)) = \\Theta(n^c) \\] <p>\u603b\u7ed3\uff08\u4e3b\u5b9a\u7406\uff0c\u5f53 \\( f(n) = n^c \\) \u65f6\uff09</p> <p>\u8bbe \\( T(n) = aT(n/b) + n^c \\)\uff0c\u5176\u4e2d \\( a \\geq 1, b &gt; 1, c \\geq 0 \\)\uff0c\u5219\uff1a</p> <ul> <li>\u82e5 \\( c &lt; \\log_b a \\)\uff0c\u5219 \\( T(n) = \\Theta(n^{\\log_b a}) \\)</li> <li>\u82e5 \\( c = \\log_b a \\)\uff0c\u5219 \\( T(n) = \\Theta(n^c \\log n) \\)</li> <li>\u82e5 \\( c &gt; \\log_b a \\)\uff0c\u5219 \\( T(n) = \\Theta(n^c) \\)</li> </ul> <p>\u4e3b\u5b9a\u7406\u4e0d\u9002\u7528\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\\(a\\) \u4e0d\u662f\u5e38\u6570</li> <li>\\(a&lt;1\\)</li> <li>\\(f(n)\\) \u4e0d\u662f \\(\\Theta(n^c)\\)</li> </ul> <p>\u6269\u5c55\u4e3b\u5b9a\u7406\uff1a</p> <p>\u5b83\u8fdb\u4e00\u6b65\u5141\u8bb8 \\(f(n)\\) \u5728\u6e10\u8fdb\u610f\u4e49\u4e0a\u5e26\u6709\u5bf9\u6570\u5e42\u9879\uff0c\u5373\uff1a</p> \\[ f(n)=\\Theta!\\big(n^{c}(\\log n)^{k}\\big), \\] <p>\u5176\u4e2d \\(c\\ge0,\\ k\\ge 0\\)\u3002</p> <p>\u5219\u9012\u63a8\u5f0f\uff1a</p> \\[ T(n)=a,T!\\left(\\frac{n}{b}\\right)+\\Theta!\\big(n^{c}(\\log n)^{k}\\big) \\] <p>\u7684\u89e3\u4e3a\uff1a</p> \\[ T(n) = \\begin{cases} \\displaystyle \\Theta\\big(n^{c}(\\log n)^{k}\\big), &amp;\\quad a &lt; b^c \\\\ \\displaystyle \\Theta\\big(n^{c}(\\log n)^{k+1}\\big), &amp;\\quad a = b^c \\\\ \\displaystyle \\Theta\\big(n^{\\log_b a}\\big), &amp;\\quad a &gt; b^d \\end{cases} \\] \u6269\u5c55\u4e3b\u5b9a\u7406\u63a8\u5bfc <p>\u8bbe \\(f(n)=\\Theta(n^{c}(\\log n)^k)\\)\uff0c\u4e14 \\(aT(n/b)\\) \u628a\u95ee\u9898\u5212\u5206\u4e3a \\(a\\) \u4e2a\u89c4\u6a21 \\(n/b\\) \u7684\u5b50\u95ee\u9898\u3002</p> <p>\u7b2c 1 \u5c42\uff08\u6839\uff09\uff0c\u4ee3\u4ef7\uff1a\\(f(n)\\)\u3002</p> <p>\u7b2c 2 \u5c42\uff0c\u4e2a\u5b50\u95ee\u9898\u89c4\u6a21 \\(n/b\\)\uff0c\u5171\u6709 \\(a\\) \u4e2a\uff0c\u603b\u4ee3\u4ef7\uff1a</p> \\[ a,f(n/b) = a,(n/b)^c(\\log (n/b))^k = n^c,a,b^{-c}(\\log n - \\log b)^k. \\] <p>\u7b2c \\(i\\) \u5c42\uff0c\u5171\u6709 \\(a^i\\) \u4e2a\u5b50\u95ee\u9898\uff0c\u89c4\u6a21 \\(n/b^i\\)\uff0c\u603b\u4ee3\u4ef7\uff1a</p> \\[ a^i f(n/b^i) = n^c (a/b^c)^i (\\log (n/b^i))^k = n^c (a/b^c)^i (\\log n - i\\log b)^k. \\] <p>\u5c42\u6570 \\(L=\\log_b n\\)\u3002</p> <p>\u5206\u4e09\u79cd\u60c5\u51b5</p> <p>(1) \u5f53 \\(a/b^c &lt; 1\\)\uff08\u5373 \\(c&gt;\\log_b a\\)\uff09</p> <p>\u4e0a\u5c42\u4ee3\u4ef7\u9010\u5c42\u8870\u51cf\uff0c\u4e3b\u5bfc\u9879\u5728\u6839\u5c42\u3002</p> \\[ T(n)=\\Theta(n^c(\\log n)^k). \\] <p>(2) \u5f53 \\(a/b^c &gt; 1\\)\uff08\u5373 \\(c&lt;\\log_b a\\)\uff09</p> <p>\u6bcf\u5c42\u4ee3\u4ef7\u589e\u957f\uff0c\u6700\u540e\u4e00\u5c42\u6700\u5927\uff1a</p> \\[ T(n)=\\Theta(n^{\\log_b a}). \\] <p>(3) \u5f53 \\(a/b^c = 1\\)\uff08\u5373 \\(c=\\log_b a\\)\uff09</p> <p>\u6bcf\u5c42\u4ee3\u4ef7\u5927\u7ea6\u76f8\u7b49\uff1a</p> \\[ \\text{\u7b2c } i \\text{ \u5c42\u4ee3\u4ef7} \\approx n^c(\\log n - i\\log b)^k, \\] <p>\u5c42\u6570 \\(\\log*b n\\)\uff0c\u628a\u8fd9\u4e9b\u76f8\u52a0\uff1a</p> \\[ T(n)\\approx n^c\\sum_{i=0}^{\\log_b n} (\\log n - i\\log b)^k \\approx n^c \\int_0^{\\log n} t^k,dt = \\Theta(n^c(\\log n)^{k+1}). \\] <p>\u8fd9\u5c31\u662f\u6269\u5c55\u4e3b\u5b9a\u7406\u7b2c 2 \u79cd\u60c5\u51b5\u7684\u6765\u6e90\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_3","title":"\u4e8c\u8fdb\u5236\u6574\u6570\u4e58\u6cd5","text":"<p>\u5c06\u6574\u6570\u6309\u4e8c\u8fdb\u5236\u4f4d\u5212\u5206\uff0c\u62c6\u6210\u9ad8\u4f4d\u548c\u4f4e\u4f4d\u4e24\u90e8\u5206\uff1a</p> \\[ x = 2^m a + b,\\quad y = 2^m c + d, \\] <p>\u4e8e\u662f\uff1a</p> \\[ xy = 2^{2m}ac + 2^m(ad + bc) + bd. \\] <p>\u82e5\u9012\u5f52\u5730\u8ba1\u7b97\u56db\u4e2a \\( \\tfrac{n}{2} \\)-\u4f4d\u6570\u7684\u4e58\u79ef\uff08(ac, ad, bc, bd)\uff09\uff0c\u5f97\u5230\u9012\u63a8\uff1a\\(T(n) = 4T(n/2) + \\Theta(n)\\)\uff0c\u89e3\u5f97 \\( T(n) = \\Theta(n^2) \\)\uff0c\u5e76\u6ca1\u6709\u6539\u8fdb\u3002</p> <p>Karatsuba \u6539\u8fdb\uff1a</p> \\[ ad + bc = (a + b)(c + d) - ac - bd. \\] <p>\u56e0\u6b64\u53ea\u9700\u8ba1\u7b97 \\(ac,\\ bd,\\ (a+b)(c+d)\\) \u4e09\u4e2a\u4e58\u6cd5\u3002</p> <p>\\(T(n) = 3T(n/2) + \\Theta(n)= \\Theta(n^{\\log_2 3}) = O(n^{1.585})\\)\uff0c\u663e\u8457\u4f18\u4e8e\\( T(n) = \\Theta(n^2) \\) \u7684\u65b9\u6cd5\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_4","title":"\u77e9\u9635\u4e58\u6cd5","text":"<p>\u5bf9\u4e24\u4e2a \\( n \\times n \\) \u77e9\u9635 \\( A, B \\)\uff1a</p> \\[ C_{ij} = \\sum_{k=1}^{n} A_{ik} B_{kj} \\] <p>\u4f20\u7edf\u65b9\u6cd5\u9700\u8981 \\( n^3 \\) \u6b21\u6807\u91cf\u4e58\u6cd5\u548c \\( n^3 - n^2 \\) \u6b21\u52a0\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\Theta(n^3)\\)\u3002</p> <p>\u5c06\u77e9\u9635\u5206\u4e3a\u56db\u4e2a \\( \\frac{n}{2} \\times \\frac{n}{2} \\) \u7684\u5b50\u5757\uff1a</p> \\[ A = \\begin{pmatrix} A_{11} &amp; A_{12} \\\\ A_{21} &amp; A_{22} \\end{pmatrix}, \\quad B = \\begin{pmatrix} B_{11} &amp; B_{12} \\\\ B_{21} &amp; B_{22} \\end{pmatrix}. \\] <p>\u5219\uff1a</p> \\[ C_{11} = A_{11}B_{11} + A_{12}B_{21} \\\\ C_{12} = A_{11}B_{12} + A_{12}B_{22} \\\\ C_{21} = A_{21}B_{11} + A_{22}B_{21} \\\\ C_{22} = A_{21}B_{12} + A_{22}B_{22} \\] <p>\u8fd9\u6837\u4ecd\u9700\u8981 8 \u6b21\u4e58\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u65e0\u6539\u8fdb\u3002</p> <p>Strassen \u6ce8\u610f\u5230\uff1a\u901a\u8fc7\u5de7\u5999\u7684\u7ebf\u6027\u7ec4\u5408\u53ea\u7528 7 \u6b21\u77e9\u9635\u4e58\u6cd5\uff08\u5916\u52a0 18 \u6b21\u52a0\u51cf\u6cd5\uff09\uff0c\u51cf\u5c11\u4e00\u6b21\u4e58\u6cd5\uff1a</p> \\[ \\begin{cases} P_1 = A_{11}(B_{12} - B_{22}) \\\\ P_2 = (A_{11} + A_{12})B_{22} \\\\ P_3 = (A_{21} + A_{22})B_{11} \\\\ P_4 = A_{22}(B_{21} - B_{11}) \\\\ P_5 = (A_{11} + A_{22})(B_{11} + B_{22}) \\\\ P_6 = (A_{12} - A_{22})(B_{21} + B_{22}) \\\\ P_7 = (A_{11} - A_{21})(B_{11} + B\\_{12}) \\end{cases} \\] <p>\u7136\u540e\u7ec4\u5408\u6210\uff1a</p> \\[ \\begin{cases} C_{11} = P_5 + P_4 - P_2 + P_6 \\\\ C_{12} = P_1 + P_2 \\\\ C_{21} = P_3 + P_4 \\\\ C_{22} = P_1 + P_5 - P_3 - P_7 \\end{cases} \\] <p>\u9012\u63a8\u5f0f\uff1a</p> \\[ T(n) = 7T(n/2) + \u0398(n^2), \\] <p>\u4e3b\u5b9a\u7406\u89e3\u5f97\uff1a</p> \\[ T(n) = \u0398(n^{\\log_2 7}) \u2248 \u0398(n^{2.81}). \\] <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4f4e\u4e8e \\( n^3 \\) \u7684\u77e9\u9635\u4e58\u6cd5\u7b97\u6cd5\u3002</p> <p>\u91c7\u7528\u66f4\u5de7\u5999\u7684\u5206\u5272\u65b9\u5f0f\uff08\u53ef\u5229\u7528\u673a\u5668\u5b66\u4e60\uff09\uff0c\u80fd\u5f97\u5230\u66f4\u4f4e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u4ecd\u4f7f\u7528 \\(O(n^3)\\) \u7684\u65b9\u6cd5\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#fft","title":"\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362 FFT","text":"<p>\u8fd8\u6ca1\u8bb2\uff0c\u5148\u7a7a\u7740\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_5","title":"\u5176\u4ed6","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_6","title":"\u77e9\u9635\u5e42\u6c42\u6590\u6ce2\u90a3\u5951","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\uff0c\\(F_1=1\\)\uff0c\\(F_2=1\\)\u3002</p> <p>\u5b9a\u4e49\u77e9\u9635 \\(M\\):</p> \\[M=\\begin{pmatrix}0&amp; 1 \\\\ 1 &amp; 1 \\end{pmatrix}\\] <p>\u5219\uff1a</p> \\[M^n=\\begin{pmatrix}F_{n-1} &amp; F_{n} \\\\ F_n &amp; F_{n+1} \\end{pmatrix}\\] <p>\u6545\u53ef\u7528\u77e9\u9635\u7684\u5e42 \\(M^n\\) \u6c42 \\(F_n\\)\u3002</p> <p>\u7528\u5feb\u901f\u5e42\u65b9\u6cd5\u6c42\u5e42\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\uff0c\u6545\u8ba1\u7b97\u7b2c \\(n^2\\)\u3001\u7b2c \\(n^3\\) \u9879\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(\\log (n^k))=O(\\log n)\\)\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#k","title":"\u4e24\u4e2a\u6570\u7ec4\u627e\u7b2c k \u5c0f\u503c","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 A\u3001B\uff0c\u957f\u5ea6\u5206\u522b\u4e3a m\u3001n\u3002\u7ed9\u5b9a k\uff08\\(k&lt;min\\{m,n\\}\\)\uff09\uff0c\u8981\u5728\u4e24\u6570\u7ec4\u7684\u5408\u5e76\u6570\u7ec4\u4e2d\u627e\u7b2c k \u5c0f\u7684\u503c\uff0c\u6c42\u6700\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6\uff1f</p> <p>\u6700\u7ec8\u60c5\u51b5\u4e3a\u5c06 A\u3001B \u5206\u522b\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e14\u4e24\u8005\u5de6\u8fb9\u90e8\u5206\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u4e24\u8005\u53f3\u8fb9\u90e8\u5206\u7684\u6700\u5c0f\u503c\uff0c\u5de6\u8fb9\u90e8\u5206\u4e2a\u6570\u548c\u4e3a k\u3002\u53ea\u9700\u8981\u627e\u5230\u4e24\u4e2a\u6570\u7ec4\u4e2d\u8fd9\u4e2a\u5212\u5206\u7684\u4f4d\u7f6e\u3002</p> <p>\u5047\u8bbe A \u4e2d\u5212\u5206\u4f4d\u7f6e i \u521d\u59cb\u4e3a k\uff0cB \u4e2d\u5212\u5206\u4f4d\u7f6e j \u521d\u59cb\u4e3a 0\u3002\u6bcf\u6b21\u4e8c\u5206\u8c03\u6574\uff0c\u4fdd\u8bc1 i+j=k\uff0c\u76f4\u5230\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a \\(O(\\log k)\\)\u3002</p> \u4ee3\u7801\u793a\u4f8b \u8fd4\u56de\u4e24\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u540e\u7684\u4e2d\u70b9 <p>\u6765\u81eaLeetCode 4. Median of Two Sorted Arrays.</p> C++<pre><code>class Solution {\npublic:\n    double findMedianSortedArrays(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        int n1 = nums1.size();\n        int n2 = nums2.size();\n        if (n1 &gt; n2) {\n            return findMedianSortedArrays(nums2, nums1);\n        }\n\n        int left = (n1 + n2 + 1) &gt;&gt; 1;\n        int low = 0, high = n1;\n        while (low &lt;= high) {\n            int mid1 = (low + high) &gt;&gt; 1;\n            int mid2 = left - mid1;\n            int l1 = INT_MIN, l2 = INT_MIN, r1 = INT_MAX, r2 = INT_MAX;\n            if (mid1 &lt; n1)\n                r1 = nums1[mid1];\n            if (mid1 - 1 &gt;= 0)\n                l1 = nums1[mid1 - 1];\n            if (mid2 &lt; n2)\n                r2 = nums2[mid2];\n            if (mid2 - 1 &gt;= 0)\n                l2 = nums2[mid2 - 1];\n\n            if (l1 &lt;= r2 &amp;&amp; l2 &lt;= r1) {\n                if ((n1 + n2) % 2) {\n                    return (double)max(l1, l2);\n                } else {\n                    return (double)(max(l1, l2) + min(r1, r2)) / 2.0;\n                }\n            } else if (l1 &gt; r2) {\n                high = mid1 - 1;\n            } else {\n                low = mid1 + 1;\n            }\n        }\n        return 0;\n    }\n};\n</code></pre>"},{"location":"CourseNotes/Advance%20Data%20Structure/ADS07/#_7","title":"\u5408\u5e76\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u7ed9\u5b9a k \u4e2a\u6709\u5e8f\u6570\u7ec4\uff0ck \u4e2a\u6570\u7ec4\u4e2d\u5143\u7d20\u603b\u6570\u4e3a n\u3002\u6c42\u5408\u5e76\u8fd9 k \u4e2a\u6570\u7ec4\u7684\u6700\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6\uff1f</p> <p>\u6bcf\u6b21\u5728 k \u4e2a\u6570\u7ec4\u7684\u5934\u90e8\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5373\u5c06\u5934\u90e8\u5143\u7d20\u90fd\u653e\u5230\u6700\u5c0f\u5806\u4e2d\uff0c\u53d6\u5806\u9876\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log k)\\)\u3002</p> <p>\u4e00\u5171\u9700\u8981\u53d6 n \u4e2a\uff0c\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\log k)\\)\u3002</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/temp/","title":"Temp","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 83 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Advance%20Data%20Structure/temp/#_1","title":"\u56de\u6eaf\u6982\u8ff0","text":""},{"location":"CourseNotes/Advance%20Data%20Structure/temp/#_2","title":"\u6700\u5927\u5b50\u5e8f\u5217\u548c","text":"\u7ebf\u6027\u89c4\u5212\u3001\u524d\u7f00\u548c\uff1f <p>1. \u7ebf\u6027\u89c4\u5212</p> <p><code>cur</code> \u8bb0\u5f55\u4ee5\u5f53\u524d\u4f4d\u7f6e\u7ed3\u675f\u7684\u6700\u5927\u5b50\u5e8f\u5217\u548c\uff0c <code>res</code> \u5b58\u50a8\u7ed3\u679c\u3002</p> <p>\u4ee3\u7801\uff1a</p> C++<pre><code>void findMaxSum(vector&lt;int&gt;&amp; a) {\n    int res = a[0];\n    int cur = a[0];\n    for (int i = 1; i &lt; a.size(); i++) {\n        cur = max(a[i], cur + a[i]);\n        res = max(res, cur);\n    }\n    cout &lt;&lt; res &lt;&lt; '\\n';\n}\n</code></pre> <p>2. \u524d\u7f00\u548c</p> <p>\u5f53\u524d\u7684\u6700\u5927\u524d\u7f00\u548c = \u5f53\u524d\u524d\u7f00\u548c - \u524d\u534a\u90e8\u5206\u7684\u6700\u5c0f\u524d\u7f00\u548c</p> C++<pre><code>void findMaxSum2(vector&lt;int&gt;&amp; a) {\n    int pre = 0, minpre = INT_MAX, res = -INT_MAX;\n    for (int x : a) {\n        pre += x;\n        res = max(res, pre - minpre);\n        minpre = min(minpre, pre);\n    }\n    cout &lt;&lt; res &lt;&lt; '\\n';\n}\n</code></pre> <p>\u5206\u6cbb\u6cd5\uff1a\u5148\u9012\u5f52\u6c42\u89e3\u5de6\u53f3\u4e24\u90e8\u5206\u7684\u6700\u5927\u5b50\u5e8f\u5217\u548c\uff0c\u518d\u5355\u72ec\u6c42\u89e3\u8de8\u8fc7\u4e2d\u70b9\u7684\u5b50\u5e8f\u5217\u548c\uff0c\u4e09\u8005\u53d6\u6700\u5927\u503c\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/","title":"C\u8bed\u8a00\u7b14\u8bb0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 10216 \u4e2a\u5b57\u00a0\u00a058 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>CNote==\u628a\u5927\u5199\u53d8\u4e3a\u5c0f\u5199:==</p> C<pre><code>#include&lt;stdio.h&gt;;\n#include&lt;ctype.h&gt;; //\u542b\u6709tolower\u7b49\u51fd\u6570\nint main()\n{\n    char c;\n    while (c=getchar()!=EOF)\n        putchar(tolower(c));\n    return 0;\n}\n</code></pre> <p>\u4f18\u5148\u7ea7</p> <ol> <li>\u540e\u7f00 ++ --</li> <li>\u4e00\u5143 + - ! ~ ++ -- * &amp; sizeof</li> <li>\u4e58\u9664 % / *</li> <li>\u52a0\u51cf + -</li> <li>\u4f4d\u79fb &lt;&lt; &gt;&gt;</li> <li>\u5173\u7cfb &lt; &lt;= &gt; &gt;=</li> <li>\u76f8\u7b49 == !=</li> <li>\u4f4d\u4e0e &amp;</li> <li>\u4f4d\u5f02\u6216 ^</li> <li>\u4f4d\u6216 |</li> <li>\u903b\u8f91\u4e0e &amp;&amp;</li> <li>\u903b\u8f91\u6216 ||</li> <li>\u6761\u4ef6 ?:</li> <li>\u8d4b\u503c = += -= *= /= %= &lt;&lt;= &gt;&gt;= &amp;= ^= |</li> <li> <p>\u9017\u53f7 ,</p> </li> <li> <p>\u4ece\u53f3\u5f80\u5de6:\u5355\u76ee\u8fd0\u7b97,\u8d4b\u503c\u8fd0\u7b97,\u6761\u4ef6\u8868\u8fbe\u5f0f</p> </li> </ol> <p>\u539f\u7801,\u53cd\u7801,\u8865\u7801,\u79fb\u7801</p> <ul> <li>\u771f\u503c:\u5c06\u5e26\u7b26\u53f7\u4f4d\u7684\u673a\u5668\u6570\u5bf9\u5e94\u7684\u771f\u6b63\u6570\u503c\u79f0\u4e3a\u673a\u5668\u6570\u7684\u771f\u503c</li> <li>\u539f\u7801:\u539f\u7801\u5c31\u662f\u7b26\u53f7\u4f4d\u52a0\u4e0a\u771f\u503c\u7684\u7edd\u5bf9\u503c,\u5373\u7528\u7b2c\u4e00\u4f4d\u8868\u793a\u7b26\u53f7 \u5176\u4f59\u4f4d\u8868\u793a\u503c\u3002\u6bd4\u5982\u5982\u679c\u662f 8 \u4f4d\u4e8c\u8fdb\u5236: +1 = 0000_0001</li> <li>\u53cd\u7801:\u6b63\u6570\u7684\u53cd\u7801\u662f\u5176\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4e2a\u4f4d\u53d6\u53cd\u3002</li> <li>\u8865\u7801:\u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1</li> <li>\u79fb\u7801:\u4e0d\u7ba1\u6b63\u8d1f\u6570\uff0c\u53ea\u8981\u5c06\u5176\u8865\u7801\u7684\u7b26\u53f7\u4f4d\u53d6\u53cd\u5373\u53ef   \u79fb\u7801\u683c\u5f0f\uff1a1 \u4f4d\u7b26\u53f7\u4f4d \u5176\u4f59\u4e3a \u771f\u503c+2^(N)\u22121, \u5176\u4e2d N \u8868\u793a\u4f4d\u6570   \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u636e\u4e3a 8 \u4f4d\uff0c \u53cc\u7cbe\u5ea6\u4e3a 11 \u4f4d</li> </ul> <p>\u53ef\u53d8\u53c2\u6570\u51fd\u6570 \u51fd\u6570\u53c2\u6570\u5b58\u50a8:\u4ece\u53f3\u5230\u5de6\u4f9d\u6b21\u5165\u6808,\u8fde\u7eed\u5b58\u50a8(\u4ece\u9ad8\u5730\u5740\u5230\u4f4e\u5730\u5740) \u5982\u679c\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u51fd\u6570\u53c2\u6570,\u9664\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e4b\u5916,\u540e\u9762\u7684\u53c2\u6570\u53ef\u7701\u7565,\u7528...\u4ee3\u66ff \u4f8b\u5982,\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u884c:</p> C<pre><code>void print(int a,...)\n{\n    int *ptr=&amp;a;\n    printf(\"%d \",*ptr);\n    printf(\"%d \",*(ptr+1));\n}\n</code></pre> <p>sprintf \u548c sscanf</p> C<pre><code>int n,m;\nchar s[80]=\"hello 11 22\";\nsscanf(s,\"%d%d\",&amp;n,&amp;m);\n    //sscanf:\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u5165,\u8bfb\u5230\u7a7a\u683c\u6216\u6362\u884c\u81ea\u52a8\u8df3\u8fc7,\u5269\u4f59\u90e8\u5206\u5339\u914d\n</code></pre> <p>C \u8bed\u8a00\u201c\u6bb5\u9519\u8bef\u201d\u7c7b\u578b \u5728 C \u8bed\u8a00\u7f16\u7a0b\u4e2d\uff0c\u6bb5\u9519\u8bef\uff08Segmentation Fault\uff09\u901a\u5e38\u662f\u6307\u7a0b\u5e8f\u5c1d\u8bd5\u8bbf\u95ee\u6216\u4fee\u6539\u5b83\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5bfc\u81f4\u6bb5\u9519\u8bef\u7684\u7c7b\u578b\uff1a</p> <ol> <li>\u7a7a\u6307\u9488\u89e3\u5f15\u7528\uff1a    \u7a0b\u5e8f\u8bd5\u56fe\u901a\u8fc7\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u6216\u5df2\u7ecf\u8bbe\u7f6e\u4e3a<code>NULL</code>\u7684\u6307\u9488\u8bbf\u95ee\u5185\u5b58\u3002    C<pre><code>int *p = NULL;\n*p = 10; // \u8fd9\u5c06\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u8d8a\u754c\u8bbf\u95ee\uff1a    \u5f53\u6570\u7ec4\u8bbf\u95ee\u8d85\u51fa\u5176\u8fb9\u754c\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u4e0d\u5c5e\u4e8e\u8be5\u6570\u7ec4\u7684\u5185\u5b58\u533a\u57df\u3002    C<pre><code>int arr[10];\narr[100] = 10; // \u8fd9\u53ef\u80fd\u5f15\u8d77\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u91ce\u6307\u9488\uff1a    \u6307\u9488\u6307\u5411\u5df2\u91ca\u653e\u7684\u5185\u5b58\u540e\u672a\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4e4b\u540e\u82e5\u5c1d\u8bd5\u901a\u8fc7\u8be5\u6307\u9488\u8bbf\u95ee\u5185\u5b58\uff0c\u5219\u4f1a\u5f15\u53d1\u6bb5\u9519\u8bef\u3002    C<pre><code>int *p = malloc(sizeof(int));\nfree(p);\n*p = 10; // \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u5199\u5165\u53ea\u8bfb\u5185\u5b58\uff1a    \u5c1d\u8bd5\u4fee\u6539 const \u53d8\u91cf\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u6240\u5728\u7684\u5185\u5b58\u533a\u57df\u3002    C<pre><code>const int x = 10;\nint *p = (int *)&amp;x;\n*p = 20; // \u8fd9\u5c06\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u6808\u6ea2\u51fa\uff1a    \u51fd\u6570\u8c03\u7528\u592a\u6df1\u5bfc\u81f4\u6808\u7a7a\u95f4\u8017\u5c3d\uff0c\u6216\u8005\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u4e86\u8fc7\u591a\u6808\u7a7a\u95f4\u3002    C<pre><code>void recursiveFunction() {\n    int a[1000000];\n    recursiveFunction(); // \u9012\u5f52\u592a\u6df1\u53ef\u80fd\u5bfc\u81f4\u6808\u6ea2\u51fa\uff0c\u8fdb\u800c\u5f15\u53d1\u6bb5\u9519\u8bef\n}\n</code></pre></li> <li>\u9519\u8bef\u7684\u5185\u5b58\u5206\u914d\uff1a    \u4f7f\u7528\u4e86\u4e0d\u6b63\u786e\u6216\u4e0d\u5339\u914d\u7684\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u51fd\u6570\uff0c\u4f8b\u5982\u6df7\u7528<code>malloc</code>\u548c<code>free</code>\u4e0e<code>new</code>\u548c<code>delete</code>\u3002    C<pre><code>void *p = malloc(sizeof(int));\ndelete p; // \u9519\u8bef\u7684\u4f7f\u7528delete\u6765\u91ca\u653emalloc\u5206\u914d\u7684\u5185\u5b58\uff0c\u53ef\u80fd\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u672a\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\uff1a    \u5728\u67d0\u4e9b\u786c\u4ef6\u67b6\u6784\u4e0a\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u662f\u5fc5\u987b\u7684\uff0c\u672a\u5bf9\u9f50\u7684\u8bbf\u95ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\u3002    \u8981\u907f\u514d\u6bb5\u9519\u8bef\uff0c\u9700\u8981\u517b\u6210\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\uff0c\u6bd4\u5982\u59cb\u7ec8\u521d\u59cb\u5316\u6307\u9488\u3001\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3a<code>NULL</code>\u3001\u786e\u4fdd\u6570\u7ec4\u8bbf\u95ee\u4e0d\u8d8a\u754c\u3001\u907f\u514d\u4f7f\u7528\u91ce\u6307\u9488\u3001\u4e0d\u8981\u4fee\u6539\u53ea\u8bfb\u5185\u5b58\u533a\u57df\uff0c\u4ee5\u53ca\u6b63\u786e\u7ba1\u7406\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u5982<code>valgrind</code>\uff08\u5728 Linux \u4e0a\uff09\u6765\u68c0\u6d4b\u5185\u5b58\u76f8\u5173\u95ee\u9898\u3002</li> </ol> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u95ee\u9898\u89c4\u6a21</p> <ul> <li>\u65f6\u95f4\u9891\u5ea6:\u4e00\u4e2a\u7b97\u6cd5\u4e2d\u7684\u8bed\u53e5\u6267\u884c\u6b21\u6570\u79f0\u4e3a\u8bed\u53e5\u9891\u5ea6\u6216\u65f6\u95f4\u9891\u5ea6\u3002\u8bb0\u4e3a T(n)\u3002</li> <li>\u95ee\u9898\u89c4\u6a21:\u5728\u521a\u624d\u63d0\u5230\u7684\u65f6\u95f4\u9891\u5ea6\u4e2d\uff0cn \u79f0\u4e3a\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u5f53 n \u4e0d\u65ad\u53d8\u5316\u65f6\uff0c\u65f6\u95f4\u9891\u5ea6 T(n)\u4e5f\u4f1a\u4e0d\u65ad\u53d8\u5316\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6: \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u4e2d\u57fa\u672c\u64cd\u4f5c\u91cd\u590d\u6267\u884c\u7684\u6b21\u6570\u662f\u95ee\u9898\u89c4\u6a21 n \u7684\u67d0\u4e2a\u51fd\u6570\uff0c\u7528 T(n)\u8868\u793a\uff0c\u82e5\u6709\u67d0\u4e2a\u8f85\u52a9\u51fd\u6570 f(n),\u4f7f\u5f97\u5f53 n \u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\uff0cT(n)/f(n)\u7684\u6781\u9650\u503c\u4e3a\u4e0d\u7b49\u4e8e\u96f6\u7684\u5e38\u6570\uff0c\u5219\u79f0 f(n)\u662f T(n)\u7684\u540c\u6570\u91cf\u7ea7\u51fd\u6570\u3002\u8bb0\u4f5c T(n)=\uff2f(f(n)),\u79f0\uff2f(f(n)) \u4e3a\u7b97\u6cd5\u7684\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7b80\u79f0\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> </ul> <p>\u7ec6\u8282 \u7531\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\uff1a\u6e90\u7a0b\u5e8f.c \u6e90\u7a0b\u5e8f.c-&gt;\uff08\u7f16\u8bd1\u540e\uff09\u76ee\u6807\u7a0b\u5e8f.obj-&gt;\uff08\u94fe\u63a5\u540e\uff09\u53ef\u6267\u884c\u7a0b\u5e8f.exe \u7ed3\u6784\u5316\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\uff1a\u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af \u4e3b\u8981\u539f\u5219\uff1a\u6a21\u5757\u5316\u3001\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u6c42\u79ef \u4e00\u4e2a c \u8bed\u8a00\u662f\u7531\u51fd\u6570\u7ec4\u6210\u7684\uff0c\u51fd\u6570\u662f C \u8bed\u8a00\u57fa\u672c\u5355\u4f4d\uff08C \u8bed\u8a00\u6ca1\u6709\u5b50\u7a0b\u5e8f\uff09 \u7a0b\u5e8f\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u8bed\u53e5 C \u8bed\u8a00\u7a0b\u5e8f\u603b\u662f\u4ece main \u51fd\u6570\u5f00\u59cb\u6267\u884c \u4e0d\u5e38\u89c1\u5173\u952e\u5b57\uff1asigned extern register sizeof auto sizeof \u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u662f\u51fd\u6570 \u6700\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u662f\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b \u6574\u578b\u6570\u636e\u5206\u4e3a\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\uff08\u6ca1\u6709\u4e8c\u8fdb\u5236\uff09 -017 \u8868\u793a\u516b\u8fdb\u5236\uff08o\uff09 \u79d1\u5b66\u8ba1\u6570\u6cd5\uff1ae \u524d e \u540e\u5fc5\u6709\u6570\uff0ce \u540e\u5fc5\u987b\u4e3a\u6574\u6570\uff08\u53ef\u5e26\u6b63\u8d1f\u53f7\uff09 int,char,short \u6240\u5360\u5b57\u8282\u6570\u7531\u6240\u7528\u673a\u5668\u7684\u5b57\u957f\u51b3\u5b9a '\\ddd'\u6bcf\u4f4d d \u4e3a\u516b\u8fdb\u5236\u6570\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26 \u4f8b\u5982'\\17' '\\xhh'\u6bcf\u4e2a h \u4e3a\u5341\u516d\u8fdb\u5236\u6570\uff0c\u8868\u793a\u5b57\u7b26 \u4f8b\u5982'\\xaa' \u5b57\u7b26\u52a0\u51cf\u4e3a ascii \u52a0\u51cf\uff0c\u5b57\u7b26\u578b\u53d8\u91cf\u53ef\u6309\u6574\u578b\u8d4b\u503c \u5b57\u7b26\u5e38\u91cf\uff1a\u5355\u5f15\u53f7 \u5b57\u7b26\u4e32\u5e38\u91cf\uff1a\u53cc\u5f15\u53f7 \u4f8b\u5982\"A\"\u5360\u4e24\u4e2a\u5b57\u8282 %d \u8f93\u51fa\u4e3a\u5341\u8fdb\u5236\uff0c%o \u516b\u8fdb\u5236\uff0c%x \u5341\u516d\u8fdb\u5236\uff08\u81ea\u52a8\u8f6c\u5316\uff09 printf(\"x=%%d,y=%%d\",x,y); \u8f93\u51fa x=%d,y=%d %\u524d\u540e\u5fc5\u987b\u4e3a\u6574\u6570 \u9017\u53f7\u8fd0\u7b97\u7b26\u5728\u6240\u6709\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u4f4e ++(i+1)\u662f\u975e\u6cd5\u7684\uff08i+1 \u662f\u8868\u8fbe\u5f0f\uff0c\u4e0d\u662f\u53d8\u91cf\uff09 x=i&gt;0 x \u7684\u503c\u4e3a 0 \u6216 1 \u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u542b\u591a\u79cd\u7c7b\u578b\uff0c\u6700\u7ec8\u7ed3\u679c\u7c7b\u578b\u4e3a\u5b58\u50a8\u8303\u56f4\u6700\u5927\u7684 \u5b58\u50a8\u8303\u56f4\uff1achar int long float double a=2 \u8868\u8fbe\u5f0f a=2; \u8bed\u53e5\uff08\u6709\u5206\u53f7\uff09 x=y=1 \u662f\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5 int a=3; a+=a-=a*a; a \u7684\u503c\u4e3a-12 int a=0; a+=(a=8); a \u7684\u503c\u4e3a 16 \u5355\u76ee\u8fd0\u7b97\u7b26\u5bf9\u8c61\u53ef\u4ee5\u662f\u5b57\u7b26\u3001\u6574\u578b\u3001\u5b9e\u578b\u7b49\u4efb\u4f55\u7c7b\u578b\uff0c\u4e0d\u80fd\u5e38\u91cf int a=10;printf(\"%d %d\",a--,--a); \u8f93\u51fa 10 9\uff0ca--\u540e\u8be5\u8bed\u53e5\u503c\u4e3a 10\uff0ca \u7684\u503c\u4e3a 9 x=(i=4,j=5,k=6)\uff1b x \u7684\u503c\u4e3a 6 (m=6,m+1,n=6,m+n) \u7684\u503c\u4e3a 12 char \u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u5f62\u5f0f\u4e3a ascii \u7801 \u6574\u578b\u6570\u636e\u5b58\u50a8\u5f62\u5f0f\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801 A \u7684 acsii \u7801\u4e3a 65\uff0ca \u4e3a 97\uff0c\u56de\u8f66 13\uff0c\u7a7a\u683c 32 \u6bcf\u4e2a c \u7a0b\u5e8f\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a main \u51fd\u6570 -19%4 \u7684\u503c\u4e3a-3\uff08\u7ed3\u679c\u6b63\u8d1f\u7531\u524d\u9762\u7684\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff09 \u5b9e\u578b+\u6574\u578b \u7ed3\u679c\u4e3a\u5b9e\u578b &lt; CR &gt;\u8868\u793a\u56de\u8f66 printf \u4e2d\u53c2\u6570\u591a\u4e8e\u683c\u5f0f\u8bf4\u660e\u7b26\uff1a\u4ece\u524d\u5f80\u540e\u8f93\u51fa\uff0c\u591a\u4f59\u7684\u5ffd\u7565 int a=1234; printf(\"%2d\",a); \u8f93\u51fa\u4e3a 1234\uff08\u6570\u5b57\u957f\u5ea6\u5927\u4e8e\u9650\u5b9a\uff0c\u5219\u5ffd\u7565\u9650\u5b9a\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u80fd\u7834\u574f\u6570\u636e\u5b8c\u6574\u6027\uff09 scanf \u4e2d%2d \u8868\u793a\u622a\u53d6\u4e24\u4e2a\u957f\u5ea6\u7684\u6570\u5b57\uff0c\u82e5\u8f93\u5165\u6709\u591a\u4f59\uff0c\u591a\u4f59\u90e8\u5206\u5ffd\u7565 \u5c06\u6574\u578b\u503c\u8d4b\u7ed9\u5b9e\u578b\uff0c\u81ea\u52a8\u8f6c\u5316\u4e3a\u5c0f\u6570\uff0c\u5e26.000000 %c \u53ef\u80fd\u8bfb\u5165\u7a7a\u683c\u3001\u56de\u8f66\uff08\u6709 ascii \u7801\u7684\u90fd\u662f\u5b57\u7b26\uff09 int x,y; scanf(\"%d%d\",&amp;x,&amp;y); \u8f93\u5165\u4e3a 1\uff0c2\uff0c\u5219 y \u4e3a\u4e0d\u786e\u5b9a\u7684\u503c putchar \u8f93\u51fa\u5b57\u7b26\u6216\u5b57\u7b26\u578b\u53d8\u91cf scanf \u683c\u5f0f\u63a7\u5236\u540e\u4e3a\u53d8\u91cf\u5730\u5740\uff0c\u683c\u5f0f\u63a7\u5236\u5305\u542b\u683c\u5f0f\u58f0\u660e\u548c\u666e\u901a\u5b57\u7b26 printf \u662f\u8f93\u51fa\u5217\u8868\uff1a\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f {}\u4e2d\u7684\u8bed\u53e5\u79f0\u4e3a\u590d\u5408\u8bed\u53e5\uff0c\u5355\u72ec\u7684\uff1b\u79f0\u4e3a\u7a7a\u8bed\u53e5 \u4ea4\u6362 x \u548c y \u7684\u503c\uff1ax+=y; y=x-y; x-=y; &amp;&amp;\u5de6\u8fb9\u4e3a\u5047\uff0c\u4e0d\u6267\u884c\u53f3\u8fb9\uff1b||\u5de6\u8fb9\u4e3a\u771f\uff0c\u4e0d\u6267\u884c\u53f3\u8fb9\uff08\u77ed\u8def\uff09 if\uff08-1\uff09\u540e\u9762\u8bed\u53e5\u6267\u884c\uff08\u4e0d\u7b49\u4e8e 0 \u90fd\u6267\u884c\uff09 int x=1,y=2,z=3; if (x&gt;y) x=y; y=z; z=x; \u6267\u884c\u540e x=1,y=2,z=1\uff08if \u540e\u65e0\u5927\u62ec\u53f7\uff09 switch \u62ec\u53f7\u4e2d\u53ef\u4ee5\u4e3a\u8868\u8fbe\u5f0f int char enum\uff0c\u4e0d\u80fd\u4e3a float \u4e09\u79cd\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a \uff01 &amp;&amp; || \u7b97\u672f\u8fd0\u7b97&gt;\u903b\u8f91\u8fd0\u7b97&gt;\u8d4b\u503c\u8fd0\u7b97\uff0c7&amp;&amp;3+12 \u7b49\u4ef7\u4e8e 7&amp;&amp;\uff083+12\uff09 num[]={...} {}\u4e2d\u5143\u7d20\u53ef\u591a\u4e0d\u53ef\u5c11 \u4e8c\u7ef4\u6570\u7ec4\u5b9a\u4e49\uff0c\u884c\u53ef\u4ee5\u7701\u7565\uff0c\u5217\u4e0d\u53ef\u7701\u7565 \u82e5\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\u53ea\u6709\u4e00\u4e2a{}\uff0c\u4ece\u524d\u5f80\u540e\u586b int a[4] \u4e0d\u80fd a=\u2026\uff0c\u56e0\u4e3a\u6570\u7ec4\u540d\u4e3a\u5730\u5740 \u51fd\u6570\u4e0d\u80fd\u5d4c\u5957\u5b9a\u4e49 \u5b9e\u53c2\u548c\u5176\u5bf9\u5e94\u7684\u5f62\u53c2\u5360\u7528\u72ec\u7acb\u7684\u5b58\u50a8\u5355\u5143 \u5f62\u53c2\u5fc5\u987b\u662f\u53d8\u91cf\uff0c\u4e0d\u80fd\u662f\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f \u82e5\u5b9e\u53c2\u3001\u5f62\u53c2\u7c7b\u578b\u4e0d\u4e00\u81f4\uff0c\u4ee5\u5f62\u53c2\u7c7b\u578b\u4e3a\u51c6 \u5b9e\u53c2\u5230\u5f62\u53c2\uff1a\u503c\u4f20\u9012\uff08\u5bf9\u5f62\u53c2\u7684\u4fee\u6539\u4e0d\u6539\u53d8\u5b9e\u53c2\u7684\u503c\uff09 \u51fd\u6570\u7c7b\u578b\u7531\u8fd4\u56de\u503c\u51b3\u5b9a \u4e00\u4e2a\u7a0b\u5e8f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u7a0b\u5e8f\u6587\u4ef6\u7ec4\u6210 C \u8bed\u8a00\u4e0d\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b \u82e5\u51fd\u6570\u7531\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u901a\u8fc7 return \u8fd4\u56de \u5f62\u53c2\u7684\u503c\u4e0d\u80fd\u4f20\u56de\u7ed9\u5b9e\u53c2 \u5b9e\u53c2\u5230\u5f62\u53c2\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u503c\u4f20\u9012\u3001\u5730\u5740\u4f20\u9012 ascii \u7801\u4e2d\u5927\u5c0f\u5199\u76f8\u5dee 32\uff0c\u5c0f\u5199\u5927\u4e8e\u5927\u5199 !x!=0 \u5148\u6267\u884c!x\uff0c\u518d\u5224\u65ad\u662f\u5426!=0 if (); while(); \u56e0\u4e3a\u540e\u9762\u6709\u5206\u53f7\uff0c\u4e3a\u7a7a\u8bed\u53e5\uff08\u4f46\u82e5\u62ec\u53f7\u4e2d\u8bed\u53e5\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff0c\u4ecd\u4f1a\u4f5c\u7528\uff09 \u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u53d8\u91cf\u540d\u548c\u5168\u5c40\u53d8\u91cf\u76f8\u540c\u7684\u53d8\u91cf\uff0c\u5219\u4ed6\u4eec\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff0c\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd \u5f62\u53c2\u53ef\u4ee5\u8bf4\u660e\u4e3a const\uff0c\u4e0d\u80fd\u4e3a static \u53d8\u91cf\u9690\u542b\u7684\u5b58\u50a8\u7c7b\u578b\u4e3a auto\uff08\u81ea\u52a8\u578b\uff09 \u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u578b\u5305\u62ec\u81ea\u52a8\u578b\u3001\u9759\u6001\u578b\u3001\u5916\u90e8\u578b\u3001\u5bc4\u5b58\u5668\u578b \u58f0\u660e\u5916\u90e8\u53d8\u91cf\uff1aextern C \u8bed\u8a00\u53d8\u91cf\u6309\u5176\u751f\u5b58\u671f\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5b83\u6240\u5728\u7684\u5c40\u90e8\uff0c\u751f\u5b58\u671f\u4e3a\u6574\u4e2a\u51fd\u6570 \u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210 define \u662f\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\uff08\u4f46\u4f7f\u7528\u540e\u539f\u542b\u4e49\u4e27\u5931\uff09 C \u8bed\u8a00\u6709 32 \u4e2a\u5173\u952e\u5b57 \u9884\u5904\u7406\u529f\u80fd\u6709\u4e09\u79cd\uff1a\u5b8f\u5b9a\u4e49\uff0c\u6587\u4ef6\u5305\u542b\uff0c\u6761\u4ef6\u7f16\u8bd1 \u9884\u5904\u7406\u547d\u4ee4\u4ee5#\u5f00\u5934</p> <p>\u4e00\u4e9b\u5947\u602a\u7684\u9898\u76ee\uff1a</p> C<pre><code>#include&lt;stdio.h&gt;\n#define max(a,b) (a)&gt;(b)?(a):(b)\nint main(){\n    int x,y,z;\n    x=10;y=15;\n    z=10*max(x,y);            //10*10&gt;15?10:15,\u7ed3\u679c\u4e3a10\n    printf(\"%d\\n\",z);\n    return 0;\n}\n</code></pre> C<pre><code>int m=0;\nif (m || (m=2) || (m=3));    //m=2\u4e3a\u8d4b\u503c\u8bed\u53e5\uff0c\u6267\u884c\u540em\u4e3a2\uff0c\u8be5\u8bed\u53e5\u4e3a2\uff0c\u6761\u4ef6\u6210\u7acb\uff0c\u540e\u7eed\u8bed\u53e5\u77ed\u8def\uff0cm\u4fdd\u75592\nprintf(\"%d\\n\",m);\n</code></pre> C<pre><code>int a=0,b=0,c=2,d=4;\nif ((c=a==b || d=b==a));       //(a==b)\u4e3a1\uff0c\u524d\u4e00\u8bed\u53e5\u4e3a\u8d4b\u503cc=1\uff0c\u6761\u4ef6\u6210\u7acb\uff0cd\u7ef4\u63014\nprintf(\"%d\\n\",d);\n</code></pre> C<pre><code>int x=1,y=2,z=3;\nx+=y+=z;                       //y\u4e3a5\uff0cx\u4e3a6\uff0c\u8f93\u51fa6\nprintf(\"%d\\n\",x&lt;y?y:x);\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int y=10;\n    while (y--);  //y=1\u65f6\u4ecd\u6267\u884c\uff0c\u6b64\u65f6y=0\uff1b\u4e0b\u4e00\u8f6e\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u4f46y--\u5df2\u6267\u884c\uff0c\u6545y\u4e3a-1\n    printf(\"y=%d\\n\",y);\n}\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int y=10;\n    do y--;\n    while (--y);  //y=2\u65f6y--\u540ey\u4e3a1\uff0c--y\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u4f46y\u503c\u53d8\u4e3a0\uff0c\u8f93\u51fa\u65f6\u8f93\u51fay\uff0c\u5373\u8f93\u51fa0\n    printf(\"%d\\n\",y--);\n}\n</code></pre> C<pre><code>for (i=0;i&lt;4;i++)\nfor (k=1;k&lt;3;k++); printf(\"*\"); //for\u540e\u6709\u5206\u53f7\uff0c\u8f93\u51fa*\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int x,y;\n    for (x=30,y=0;x&gt;=10,y&lt;10;x--,y++) {  //\u4e2d\u95f4\u4e3a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0cx&gt;=10\u65e0\u6548\uff0c\n\u8f93\u51fa\u4e3ax=0  y=12\n        x/=2;\n        y+=2;\n    }\n    printf(\"x=%d y=%d\\n\",x,y);\n}\n</code></pre> <p>main</p> <p>FILE</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc,char *argv[])\n{\n    FILE *fp1,*fp2;\n    if (argc!=3) { //\u8fd9\u662f\u5224\u65ad\u4ec0\u4e48?\n        printf(\"Usage:copy f1 f2\\n\");\n        exit(1); //\u8fd9\u662f\u4ec0\u4e48\u610f\u601d?\n    }\n    if ((fp1=fopen(argv[1],\"r\"))==NULL\n        || (fp2=fopen(argv[2],\"w\"))==NULL) {\n        printf(\"Can't open file!\\n\");\n        exit(2); //\u8fd9\u662f\u4ec0\u4e48\u610f\u601d?\n    }\n\n    while (putc(getc(fp1),fp2)!=EOF); //putc\u548cgetc\u5e72\u4ec0\u4e48?\n\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>if (argc!=3)</code> \u8fd9\u662f\u5224\u65ad\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u8fd9\u4e2a\u6761\u4ef6\u5224\u65ad\u7a0b\u5e8f\u63a5\u6536\u5230\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570\u662f\u5426\u4e0d\u7b49\u4e8e 3\u3002\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u671f\u671b\u63a5\u6536\u5230\u4e09\u4e2a\u53c2\u6570\uff1a\u7a0b\u5e8f\u540d\u3001\u6e90\u6587\u4ef6\u540d\u548c\u76ee\u6807\u6587\u4ef6\u540d\u3002\u5982\u679c\u53c2\u6570\u4e2a\u6570\u4e0d\u662f 3\uff0c\u8bf4\u660e\u7528\u6237\u6ca1\u6709\u6b63\u786e\u5730\u63d0\u4f9b\u6240\u9700\u7684\u53c2\u6570\u3002</p> </li> <li> <p><code>exit(1);</code> \u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> </li> <li> <p><code>exit(1);</code> \u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u7acb\u5373\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\u3002<code>exit</code>\u51fd\u6570\u7684\u53c2\u6570\u662f\u7a0b\u5e8f\u7684\u9000\u51fa\u72b6\u6001\u7801\uff0c<code>1</code> \u901a\u5e38\u8868\u793a\u7a0b\u5e8f\u56e0\u4e3a\u67d0\u79cd\u9519\u8bef\u6216\u5f02\u5e38\u60c5\u51b5\u800c\u7ec8\u6b62\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7528\u6237\u6ca1\u6709\u63d0\u4f9b\u6b63\u786e\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370\u4f7f\u7528\u8bf4\u660e\u5e76\u9000\u51fa\uff0c\u72b6\u6001\u7801\u4e3a 1\u3002</p> </li> <li> <p><code>exit(2);</code> \u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> </li> <li> <p>\u7c7b\u4f3c\u4e8e<code>exit(1);</code>\uff0c<code>exit(2);</code>\u4e5f\u662f\u7528\u4e8e\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u9000\u51fa\u72b6\u6001\u7801<code>2</code>\u3002\u5728\u8fd9\u91cc\uff0c\u5982\u679c\u7a0b\u5e8f\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6\uff08\u65e0\u8bba\u662f\u6e90\u6587\u4ef6\u8fd8\u662f\u76ee\u6807\u6587\u4ef6\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa\uff0c\u72b6\u6001\u7801\u4e3a 2\u3002</p> </li> <li> <p><code>while (putc(getc(fp1),fp2)!=EOF);</code> putc \u548c getc \u5e72\u4ec0\u4e48\uff1f</p> </li> <li><code>getc(fp1)</code> \u51fd\u6570\u7528\u4e8e\u4ece\u6587\u4ef6\u6307\u9488<code>fp1</code>\u6307\u5411\u7684\u6587\u4ef6\uff08\u6e90\u6587\u4ef6\uff09\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002<code>putc(c, fp2)</code> \u51fd\u6570\u7528\u4e8e\u5c06\u5b57\u7b26<code>c</code>\u5199\u5165\u6587\u4ef6\u6307\u9488<code>fp2</code>\u6307\u5411\u7684\u6587\u4ef6\uff08\u76ee\u6807\u6587\u4ef6\uff09\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\uff0c\u7528\u4e8e\u9010\u4e2a\u5b57\u7b26\u5730\u4ece\u6e90\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165\u5230\u76ee\u6807\u6587\u4ef6\uff0c\u76f4\u5230\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff08EOF\uff09\u3002<code>EOF</code>\u662f\u4e00\u4e2a\u5b8f\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u7b26\u3002</li> </ol> <p>\u6574\u4e2a\u7a0b\u5e8f\u7684\u5de5\u4f5c\u6d41\u7a0b\u662f\uff1a</p> <ul> <li>\u68c0\u67e5\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570\u3002</li> <li>\u5c1d\u8bd5\u6253\u5f00\u6e90\u6587\u4ef6\u548c\u76ee\u6807\u6587\u4ef6\u3002</li> <li>\u9010\u4e2a\u5b57\u7b26\u5730\u4ece\u6e90\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165\u5230\u76ee\u6807\u6587\u4ef6\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002</li> <li>\u5173\u95ed\u4e24\u4e2a\u6587\u4ef6\u3002</li> <li>\u7a0b\u5e8f\u7ed3\u675f\u3002</li> </ul> C<pre><code>//\u5c06\u5927\u5c0f\u5199\u4e92\u6362,\u5e76\u5b58\u50a8\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\n#include &lt;stdio.h&gt;\nint main(int argc,char *argv[])\n{\n    FILE *fp1,*fp2;\n    char c;\n    if (argc!=3) exit(1);\n    if ((fp1=fopen(*++argv,\"r\"))==NULL\n        || (fp2=fopen(*++argv,\"w\")==NULL)) exit(2);\n\n    while ((c=fgetc(fp1))!=EOF) {\n        fputc(c+'A'-'a',fp2);\n    }\n\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}\n</code></pre> C<pre><code>//concatenate files\n#include &lt;stdio.h&gt;\n\nvoid filecopy(FILE *ifp,FILE *ofp)  //FILE\u662f\u4ec0\u4e48?\u53ef\u4ee5\u662fstdin\u6216stdout\u5417?\n{\n    int c;\n    while ((c=getc(ifp))!=EOF) putc(c,ofp);\n}\n\nint main(int argc,char *argv[])  //argv\u662f\u4ec0\u4e48?\n{\n    FILE *fp;\n    if (argc==1) filecopy(stdin,stdout);\n    else {\n        while (--argc){\n            if ((fp=fopen(*++argv,\"r\"))==NULL) {\n                printf(\"cat:can't open %s\\n\",*argv);\n                return 1; //return 1\u548cexit(1)\u76f8\u540c\u5417?\n            } else {\n                filecopy(fp,stdout);\n                fclose(fp);\n            }\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u8fde\u63a5\uff08concatenate\uff09\u591a\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08stdout\uff09\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>FILE\u662f\u4ec0\u4e48\uff1f\u53ef\u4ee5\u662fstdin\u6216stdout\u5417\uff1f</code></p> </li> <li> <p><code>FILE</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u7528\u4e8e\u8868\u793a\u6587\u4ef6\u6d41\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u8bfb\u5199\u6587\u4ef6\u3002<code>FILE</code> \u7ed3\u6784\u4f53\u5305\u542b\u4e86\u6587\u4ef6\u7684\u7f13\u51b2\u533a\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u4fe1\u606f\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u80fd\u591f\u901a\u8fc7\u6807\u51c6\u5e93\u51fd\u6570\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002</p> </li> <li> <p>\u662f\u7684\uff0c<code>FILE</code> \u53ef\u4ee5\u662f <code>stdin</code> \u6216 <code>stdout</code>\u3002<code>stdin</code> \u662f\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u901a\u5e38\u4e0e\u952e\u76d8\u8f93\u5165\u5173\u8054\uff1b<code>stdout</code> \u662f\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u901a\u5e38\u4e0e\u5c4f\u5e55\u8f93\u51fa\u5173\u8054\u3002\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>filecopy(stdin, stdout);</code> \u8868\u793a\u5c06\u6807\u51c6\u8f93\u5165\u7684\u5185\u5bb9\u590d\u5236\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> </li> <li> <p><code>argv\u662f\u4ec0\u4e48\uff1f</code></p> </li> <li> <p><code>argv</code> \u662f <code>main</code> \u51fd\u6570\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u6570\u7ec4\u5305\u542b\u4e86\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5176\u4e2d <code>argv[0]</code> \u662f\u7a0b\u5e8f\u7684\u540d\u79f0\uff0c<code>argv[1]</code>\u3001<code>argv[2]</code> \u7b49\u662f\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u53c2\u6570\u3002<code>argc</code> \u662f <code>argv</code> \u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5305\u62ec\u7a0b\u5e8f\u540d\u3002</p> </li> <li> <p><code>return 1 //return 1\u548cexit(1)\u76f8\u540c\u5417\uff1f</code></p> </li> <li><code>return 1</code> \u548c <code>exit(1)</code> \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u5b83\u4eec\u90fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fd4\u56de\u72b6\u6001\u7801 <code>1</code> \u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u4e0d\u8fc7\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u5dee\u522b\uff1a<ul> <li><code>return</code> \u8bed\u53e5\u662f\u4ece\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u800c <code>exit</code> \u51fd\u6570\u662f\u76f4\u63a5\u4ece\u7a0b\u5e8f\u4e2d\u9000\u51fa\uff0c\u5e76\u4e14\u6e05\u7406\u6240\u6709\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u548c\u91ca\u653e\u5206\u914d\u7684\u5185\u5b58\u3002</li> <li>\u5728 <code>main</code> \u51fd\u6570\u4e2d\u4f7f\u7528 <code>return</code> \u548c <code>exit</code> \u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a <code>main</code> \u51fd\u6570\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u4ece <code>main</code> \u8fd4\u56de\u610f\u5473\u7740\u7a0b\u5e8f\u7ed3\u675f\u6267\u884c\u3002\u4f46\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\uff0c<code>return</code> \u53ea\u80fd\u8fd4\u56de\u5230 <code>main</code> \u6216\u5176\u4ed6\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u800c <code>exit</code> \u5219\u662f\u76f4\u63a5\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\u3002</li> <li>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>return 1;</code> \u662f\u4ece <code>main</code> \u51fd\u6570\u8fd4\u56de\u72b6\u6001\u7801 <code>1</code>\uff0c\u56e0\u6b64\u5b83\u7684\u6548\u679c\u4e0e <code>exit(1)</code> \u662f\u76f8\u540c\u7684\u3002</li> </ul> </li> </ol> C<pre><code>//sort\n#include &lt;stdio.h&gt;\n\nvoid sort(int *list,int n)\n{\n    int i,j,next;\n    for (i=1;i&lt;n;i++) { //\u63d2\u5165\u6392\u5e8f\n        next=list[i];\n        for (j=i-1;j&gt;=0 &amp;&amp; next&lt;list[j];j--) {\n            list[j+1]=list[j];\n        }\n        list[j+1]=next;\n    }\n}\n\nint main()\n{\n    int input[10],i;\n    FILE *fpin,*fpout;\n    if ((fpin=fopen(\"file1.dat\",\"r\"))==NULL) {\n        printf(\"Can't open file1\\n\");\n        exit(-1);\n    }\n    for (i=0;i&lt;10;i++) {\n        fscanf(fpin,\"%d\",&amp;input[i]); //&amp;input[i]\u662f\u4ec0\u4e48\u610f\u601d?\n            //fread(input,sizeof(int),`10,fpout); //fscanf\u548cfread\u6709\u4ec0\u4e48\u533a\u522b?\n    }\n\n    sort(input,10);\n\n    if ((fpout=fopen(\"file2.dat\",\"w\"))==NULL) {\n        printf(\"Can't open file2\\n\");\n        exit(-1);\n    }\n    for (i=0;i&lt;10;i++) {\n        fprintf(fpout,\"%d\",input[i]);\n            //fwrite(input,sizeod(int),10,fpout); //fprintf\u548cfwrite\u6709\u4ec0\u4e48\u533a\u522b?\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u6574\u6570\u6570\u636e\uff0c\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5199\u5165\u53e6\u4e00\u4e2a\u6587\u4ef6\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>&amp;input[i]\u662f\u4ec0\u4e48\u610f\u601d\uff1f</code></p> </li> <li> <p><code>&amp;input[i]</code> \u662f\u53d6\u6570\u7ec4 <code>input</code> \u4e2d\u7b2c <code>i</code> \u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002<code>fscanf</code> \u51fd\u6570\u9700\u8981\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u4fbf\u80fd\u591f\u5c06\u8bfb\u53d6\u7684\u6570\u636e\u5b58\u50a8\u5230\u76f8\u5e94\u7684\u5185\u5b58\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>//fscanf\u548cfread\u6709\u4ec0\u4e48\u533a\u522b\uff1f</code></p> </li> <li> <p><code>fscanf</code> \u548c <code>fread</code> \u90fd\u662f\u7528\u4e8e\u6587\u4ef6\u8bfb\u53d6\u7684\u51fd\u6570\uff0c\u4f46\u5b83\u4eec\u5728\u8bfb\u53d6\u6570\u636e\u65f6\u7684\u884c\u4e3a\u548c\u7528\u9014\u6709\u6240\u4e0d\u540c\uff1a</p> <ul> <li><code>fscanf</code> \u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u8f93\u5165\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u683c\u5f0f\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u6839\u636e\u6307\u5b9a\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u89e3\u6790\u6570\u636e\u3002\u4f8b\u5982\uff0c<code>fscanf(fpin,\"%d\",&amp;input[i]);</code> \u4f1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u6574\u6570\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728 <code>input[i]</code> \u6307\u5411\u7684\u4f4d\u7f6e\u3002</li> <li><code>fread</code> \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8bfb\u53d6\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u5757\u3002<code>fread</code> \u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u683c\u5f0f\u5316\u5904\u7406\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u6309\u5b57\u8282\u8bfb\u53d6\u6570\u636e\u3002\u4f8b\u5982\uff0c<code>fread(input,sizeof(int),10,fpin);</code> \u4f1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 10 \u4e2a\u6574\u6570\u5927\u5c0f\u7684\u6570\u636e\u5757\u5230 <code>input</code> \u6570\u7ec4\u4e2d\u3002</li> </ul> </li> <li> <p><code>//fprintf\u548cfwrite\u6709\u4ec0\u4e48\u533a\u522b\uff1f</code></p> </li> <li><code>fprintf</code> \u548c <code>fwrite</code> \u90fd\u662f\u7528\u4e8e\u6587\u4ef6\u5199\u5165\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u6570\u636e\u7684\u5199\u5165\u65b9\u5f0f\uff1a<ul> <li><code>fprintf</code> \u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5c06\u6570\u636e\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5199\u5165\u6587\u4ef6\u3002\u4f8b\u5982\uff0c<code>fprintf(fpout,\"%d\",input[i]);</code> \u4f1a\u5c06 <code>input[i]</code> \u7684\u503c\u6309\u7167\u6574\u6570\u683c\u5f0f\u5199\u5165\u6587\u4ef6\u3002</li> <li><code>fwrite</code> \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5199\u5165\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u5c06\u6570\u636e\u4f5c\u4e3a\u5b57\u8282\u6d41\u5199\u5165\u6587\u4ef6\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u683c\u5f0f\u5316\u5904\u7406\u3002\u4f8b\u5982\uff0c<code>fwrite(input,sizeof(int),10,fpout);</code> \u4f1a\u5c06 <code>input</code> \u6570\u7ec4\u4e2d\u7684 10 \u4e2a\u6574\u6570\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u5199\u5165\u6587\u4ef6\u3002</li> </ul> </li> </ol> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>fscanf</code> \u548c <code>fprintf</code> \u88ab\u7528\u6765\u8bfb\u53d6\u548c\u5199\u5165\u683c\u5f0f\u5316\u7684\u6574\u6570\u6570\u636e\uff0c\u800c\u6ce8\u91ca\u4e2d\u7684 <code>fread</code> \u548c <code>fwrite</code> \u5219\u662f\u7528\u6765\u6f14\u793a\u5982\u4f55\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u3002</p> <p>\u5b8f</p> <ul> <li>\u6ca1\u6709\u503c\u7684\u5b8f:<code>#define _DEBUG</code></li> <li>\u8fd9\u7c7b\u5b8f\u662f\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u7684\uff0c \u540e\u9762\u6709\u5176\u4ed6\u7684\u7f16\u8bd1\u9884\u5904\u7406\u6307\u4ee4\u6765     \u68c0\u67e5\u8fd9\u4e2a\u5b8f\u662f\u5426\u5df2\u7ecf\u88ab\u5b9a\u4e49\u8fc7\u4e86</li> <li>\u50cf\u51fd\u6570\u7684\u5b8f:<code>#define cube(x) ((x) * (x) * (x))</code></li> <li># operator:<code>#define PRINT_INT(n) printf(#n \"=%d\", n)</code>   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>#define</code> \u7528\u4e8e\u521b\u5efa\u5b8f\u5b9a\u4e49\uff0c\u800c <code>#</code> \u662f\u4e00\u4e2a\u9884\u5904\u7406\u64cd\u4f5c\u7b26\uff0c\u79f0\u4e3a\u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26\uff08stringizing operator\uff09\u3002\u5f53\u9884\u5904\u7406\u5668\u9047\u5230 <code>#</code> \u64cd\u4f5c\u7b26\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u64cd\u4f5c\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002</li> </ul> <p>\u5728\u4f60\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff1a</p> C<pre><code>#define PRINT_INT(n) printf(#n \"=%d\", n)\n</code></pre> <p>\u8fd9\u4e2a\u5b8f\u5b9a\u4e49 <code>PRINT_INT(n)</code> \u4f1a\u5c06 <code>n</code> \u8fd9\u4e2a\u53c2\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728 <code>printf</code> \u51fd\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ol> <li> <p><code>#n</code> \u5c06\u53c2\u6570 <code>n</code> \u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002\u5982\u679c <code>n</code> \u662f\u4e00\u4e2a\u5b8f\u53c2\u6570\uff0c\u6bd4\u5982 <code>x</code>\uff0c\u90a3\u4e48 <code>#n</code> \u5c06\u53d8\u6210 <code>\"x\"</code>\u3002</p> </li> <li> <p><code>printf(#n \"=%d\", n)</code> \u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0e <code>\"=%d\"</code> \u7ed3\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u4f7f\u7528 <code>n</code> \u7684\u503c\u4f5c\u4e3a <code>printf</code> \u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002</p> </li> </ol> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u4f7f\u7528\u5b8f\uff1a</p> C<pre><code>int x = 10;\nPRINT_INT(x);\n</code></pre> <p>\u9884\u5904\u7406\u5668\u4f1a\u5c06 <code>PRINT_INT(x)</code> \u66ff\u6362\u4e3a\uff1a</p> C<pre><code>printf(\"x = %d\", x);\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>x</code> \u88ab\u5b57\u7b26\u4e32\u5316\u4e86\uff0c\u53d8\u6210\u4e86 <code>\"x\"</code>\uff0c\u7136\u540e\u4e0e <code>\"=%d\"</code> \u7ed3\u5408\uff0c\u5f62\u6210\u4e86 <code>\"x = %d\"</code> \u8fd9\u4e2a\u683c\u5f0f\u5b57\u7b26\u4e32\u3002<code>printf</code> \u51fd\u6570\u968f\u540e\u4f1a\u6253\u5370\u51fa <code>x</code> \u7684\u503c\uff0c\u5e76\u4e14\u524d\u9762\u5e26\u6709\u53d8\u91cf\u540d <code>x</code>\u3002</p> <p>\u4f7f\u7528 <code>#</code> \u64cd\u4f5c\u7b26\u7684\u597d\u5904\u662f\uff0c\u5b83\u5141\u8bb8\u5b8f\u5728\u5c55\u5f00\u65f6\u5305\u542b\u53d8\u91cf\u540d\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff0c\u8fd9\u5728\u8c03\u8bd5\u548c\u65e5\u5fd7\u8bb0\u5f55\u65f6\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u663e\u793a\u54ea\u4e2a\u53d8\u91cf\u88ab\u6253\u5370\u51fa\u6765\u3002</p> <ul> <li>## operator:   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>##</code> \u662f\u4e00\u4e2a\u9884\u5904\u7406\u64cd\u4f5c\u7b26\uff0c\u79f0\u4e3a\u6807\u8bb0\u7c98\u8d34\u64cd\u4f5c\u7b26\uff08token-pasting operator\uff09\u3002\u5b83\u7528\u4e8e\u5728\u5b8f\u5c55\u5f00\u65f6\u5c06\u4e24\u4e2a\u6807\u8bb0\uff08tokens\uff09\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u6807\u8bb0\u53ef\u4ee5\u662f\u4efb\u4f55\u6709\u6548\u7684 C \u8bed\u8a00\u6807\u8bc6\u7b26\uff0c\u5305\u62ec\u5b8f\u53c2\u6570\u3001\u5173\u952e\u5b57\u3001\u64cd\u4f5c\u7b26\u7b49\u3002</li> </ul> <p>\u5728\u4f60\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff1a</p> C<pre><code>#define MYCASE(item,id) \\\ncase id: \\\nitem##_##id = id;\\\nbreak\n</code></pre> <p>\u8fd9\u4e2a\u5b8f\u5b9a\u4e49 <code>MYCASE(item, id)</code> \u7528\u4e8e\u5728 <code>switch</code> \u8bed\u53e5\u4e2d\u751f\u6210\u4e00\u4e2a <code>case</code> \u6807\u7b7e\uff0c\u5e76\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ol> <li> <p><code>item##_##id</code>\uff1a\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e24\u6b21 <code>##</code> \u64cd\u4f5c\u7b26\u3002\u9996\u5148\uff0c<code>##</code> \u5c06 <code>item</code> \u548c\u4e0b\u5212\u7ebf <code>_</code> \u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6807\u8bb0 <code>item_</code>\u3002\u7136\u540e\uff0c<code>##</code> \u5c06 <code>_</code> \u548c <code>id</code> \u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210 <code>item_id</code>\u3002\u5982\u679c <code>item</code> \u662f <code>widget</code> \u800c <code>id</code> \u662f <code>23</code>\uff0c\u90a3\u4e48 <code>item##_##id</code> \u5c06\u53d8\u6210 <code>widget_23</code>\u3002</p> </li> <li> <p><code>case id:</code>\uff1a\u8fd9\u662f\u4e00\u4e2a <code>case</code> \u6807\u7b7e\uff0c\u5b83\u5c06\u5339\u914d <code>switch</code> \u8bed\u53e5\u4e2d\u7684\u503c <code>id</code>\u3002</p> </li> <li> <p><code>item##_##id = id;</code>\uff1a\u8fd9\u884c\u4ee3\u7801\u5c06 <code>id</code> \u7684\u503c\u8d4b\u7ed9\u65b0\u751f\u6210\u7684\u53d8\u91cf\u540d <code>item_id</code>\u3002</p> </li> <li> <p><code>break</code>\uff1a\u8fd9\u884c\u4ee3\u7801\u7528\u4e8e\u9000\u51fa <code>switch</code> \u8bed\u53e5\u3002</p> </li> </ol> <p>\u73b0\u5728\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u4f7f\u7528\u5b8f\uff1a</p> C<pre><code>switch(x) {\n    MYCASE(widget,23);\n}\n</code></pre> <p>\u9884\u5904\u7406\u5668\u4f1a\u5c06 <code>MYCASE(widget,23)</code> \u66ff\u6362\u4e3a\uff1a</p> C<pre><code>case 23:\n    widget_23 = 23;\n    break;\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>widget</code> \u548c <code>23</code> \u88ab\u5206\u522b\u7c98\u8d34\u5230 <code>_</code> \u7684\u524d\u540e\uff0c\u751f\u6210\u4e86\u53d8\u91cf\u540d <code>widget_23</code>\uff0c\u5e76\u4e14\u8fd9\u4e2a\u53d8\u91cf\u88ab\u8d4b\u503c\u4e3a <code>23</code>\u3002</p> <p>\u4f7f\u7528 <code>##</code> \u64cd\u4f5c\u7b26\u7684\u597d\u5904\u662f\uff0c\u5b83\u5141\u8bb8\u5b8f\u5728\u5c55\u5f00\u65f6\u52a8\u6001\u751f\u6210\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bb0\uff0c\u8fd9\u5728\u521b\u5efa\u5177\u6709\u552f\u4e00\u540d\u79f0\u7684\u53d8\u91cf\u6216\u51fd\u6570\u65f6\u975e\u5e38\u6709\u7528\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u7c7b\u4f3c <code>switch</code> \u8bed\u53e5\u6216\u521b\u5efa\u591a\u4e2a\u76f8\u4f3c\u51fd\u6570\u65f6\u3002</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u53cd\u659c\u6760  \u7528\u4e8e\u7eed\u884c\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5458\u5c06\u4e00\u6761\u8bed\u53e5\u6216\u5b9a\u4e49\u8de8\u8d8a\u591a\u884c\u4e66\u5199\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u6613\u8bfb\u3002\u5f53\u7f16\u8bd1\u5668\u9884\u5904\u7406\u5668\u9047\u5230\u884c\u5c3e\u7684\u53cd\u659c\u6760\u65f6\uff0c\u5b83\u4f1a\u5ffd\u7565\u6362\u884c\u7b26\uff0c\u5e76\u5c06\u4e0b\u4e00\u884c\u4e0e\u5f53\u524d\u884c\u7684\u5185\u5bb9\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u662f\u4e00\u884c\u4e00\u6837\u3002</p> <p>\u7f16\u8bd1\u8fc7\u7a0b</p> <ul> <li>\u7f16\u8bd1\u9884\u5904\u7406 \u2192 .i</li> <li>\u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801 \u2192 .s</li> <li>\u6c47\u7f16\u6210\u76ee\u6807\u4ee3\u7801 \u2192 .o</li> <li>\u94fe\u63a5\u6210\u53ef\u6267\u884c\u7a0b\u5e8f \u2192 .exe \uff08 \u6216 a.out\uff09</li> <li>\u8fd9\u4e9b\u6587\u4ef6\u90fd\u53ef\u4ee5\u518d\u7528 gcc \u5355\u72ec\u64cd\u4f5c\uff0c \u4ea7\u751f\u4e0b\u4e00\u6b65\u7ed3\u679c \uff08\u4f46\u662f\u9009\u9879\u590d\u6742\uff09</li> <li>gcc -c \u7684\u9009\u9879\u53ef\u4ee5\u53ea\u7f16\u8bd1\uff0c \u4ea7\u751f\u76ee\u6807\u6587\u4ef6\uff0c \u4f46\u662f\u4e0d\u94fe\u63a5   \u7f16\u8bd1\u5355\u5143</li> <li>\u4e00\u4e2a.c \u6587\u4ef6\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143</li> <li>\u7f16\u8bd1\u5668\u6bcf\u6b21\u7f16\u8bd1\u53ea\u5904\u7406\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143   \u9879\u76ee</li> <li>\u5728 Dev C++\u4e2d\u65b0\u5efa\u2014\u4e2a\u9879\u76ee\uff0c \u7136\u540e\u628a\u51e0\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u52a0\u5165\u8fdb\u53bb</li> <li>\u5bf9\u4e8e\u9879\u76ee\uff0c Dev C++\u7684\u7f16\u8bd1\u4f1a\u628a\u2014\u4e2a\u9879\u76ee\u4e2d\u6240\u6709\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u90fd\u7f16\u8bd1\u540e\uff0c \u94fe\u63a5\u8d77\u6765</li> <li>\u6709\u7684 IDE \u6709\u5206\u5f00\u7684\u7f16\u8bd1\u548c\u6784\u5efa\u4e24\u4e2a\u6309\u94ae\uff0c \u524d\u8005\u662f\u5bf9\u5355\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u8bd1\uff0c \u540e\u8005\u662f\u5bf9\u6574\u4e2a\u9879\u76ee\u505a\u94fe\u63a5   include \"\" \u8fd8\u662f &lt;&gt;?</li> <li><code>#include</code>\u6709\u4e24\u79cd\u5f62\u5f0f\u6765\u6307\u51fa\u8981\u63d2\u5165\u7684\u6587\u4ef6</li> <li>\"\" \u8981\u6c42\u7f16\u8bd1\u5668\u9996\u5148\u5728\u5f53\u524d\u76ee\u5f55(.c \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55)\u5bfb\u627e\u8fd9\u4e2a\u6587\u4ef6\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u5230\u7f16\u8bd1\u5668\u6307\u5b9a\u7684\u76ee\u5f55\u53bb\u627e(\u81ea\u5df1\u5b9a\u4e49\u7684)</li> <li>&lt;&gt; \u8ba9\u7f16\u8bd1\u5668\u53ea\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u53bb\u627e(\u7cfb\u7edf\u91cc\u7684)</li> <li>\u7f16\u8bd1\u5668\u81ea\u5df1\u77e5\u9053\u81ea\u5df1\u7684\u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\u5728\u54ea\u91cc</li> <li>\u73af\u5883\u53d8\u91cf\u548c\u7f16\u8bd1\u5668\u547d\u4ee4\u884c\u53c2\u6570\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bfb\u627e\u5934\u6587\u4ef6\u7684\u76ee\u5f55   static</li> <li>\u5728\u51fd\u6570\u524d\u9762\u52a0\u4e0a static \u5c31\u4f7f\u5f97\u5b83\u6210\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u51fd\u6570</li> <li>\u5728\u5168\u5c40\u53d8\u91cf\u524d\u9762\u52a0\u4e0a static \u5c31\u4f7f\u5f97\u5b83\u6210\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u5168\u5c40\u53d8\u91cf   \u58f0\u660e</li> <li><code>int i;</code> \u662f\u53d8\u91cf\u7684\u5b9a\u4e49</li> <li><code>extern int i;</code> \u662f\u53d8\u91cf\u7684\u58f0\u660e</li> <li>\u540c\u2014\u4e2a\u7f16\u8bd1\u5355\u5143\u91cc\uff0c \u540c\u540d\u7684\u7ed3\u6784\u4e0d\u80fd\u88ab\u91cd\u590d\u58f0\u660e</li> <li>\u5982\u679c\u4f60\u7684\u5934\u6587\u4ef6\u91cc\u6709\u7ed3\u6784\u7684\u58f0\u660e\uff0c \u5f88\u96be\u8fd9\u4e2a\u5934\u6587\u4ef6\u4e0d\u4f1a\u5728\u2014\u4e2a\u7f16\u8bd1\u5355\u5143\u91cc\u88ab<code>#include</code>\u591a\u6b21 \u6240\u4ee5\u9700\u8981\u201c\u6807\u51c6\u5934\u6587\u4ef6\u7ed3\u6784\u201d</li> </ul> <p>\u7a0b\u5e8f\u6587\u4ef6,\u6570\u636e\u6587\u4ef6 \u7a0b\u5e8f\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u5b83\u4eec\u5728\u7528\u9014\u548c\u529f\u80fd\u4e0a\u6709\u6240\u533a\u522b\uff1a</p> <ol> <li> <p>\u7a0b\u5e8f\u6587\u4ef6\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u7a0b\u5e8f\u6587\u4ef6\u662f\u6307\u5305\u542b\u53ef\u6267\u884c\u6307\u4ee4\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6307\u4ee4\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u5e76\u7f16\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u7684\u4ee3\u7801\u3002\u7a0b\u5e8f\u6587\u4ef6\u901a\u5e38\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u548c\u529f\u80fd\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u6267\u884c\u3002</p> </li> <li>\u7c7b\u578b\uff1a\u7a0b\u5e8f\u6587\u4ef6\u53ef\u4ee5\u662f\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u5982<code>.exe</code>\u6587\u4ef6\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u6216 ELF \u683c\u5f0f\u7684\u6587\u4ef6\u5728\u7c7b Unix \u7cfb\u7edf\u4e2d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u89e3\u91ca\u578b\u8bed\u8a00\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff08\u5982<code>.py</code>\u6587\u4ef6\u5bf9\u4e8e Python\uff09\u3002</li> <li>\u4f5c\u7528\uff1a\u7a0b\u5e8f\u6587\u4ef6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6267\u884c\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5904\u7406\u6570\u636e\u3001\u663e\u793a\u56fe\u5f62\u754c\u9762\u3001\u63a7\u5236\u786c\u4ef6\u7b49\u3002</li> <li> <p>\u4f8b\u5b50\uff1aWord \u5904\u7406\u8f6f\u4ef6\u3001\u6d4f\u89c8\u5668\u3001\u6e38\u620f\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49\u3002</p> </li> <li> <p>\u6570\u636e\u6587\u4ef6\uff1a</p> </li> <li>\u5b9a\u4e49\uff1a\u6570\u636e\u6587\u4ef6\u662f\u6307\u5305\u542b\u6570\u636e\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u662f\u6587\u672c\u3001\u6570\u5b57\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u4efb\u4f55\u5f62\u5f0f\u7684\u4fe1\u606f\u3002\u6570\u636e\u6587\u4ef6\u901a\u5e38\u7531\u7a0b\u5e8f\u8bfb\u53d6\u6216\u5199\u5165\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u7d22\u4fe1\u606f\u3002</li> <li>\u7c7b\u578b\uff1a\u6570\u636e\u6587\u4ef6\u53ef\u4ee5\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff08\u5982<code>.txt</code>\uff09\u3001\u914d\u7f6e\u6587\u4ef6\uff08\u5982<code>.ini</code>\u3001<code>.xml</code>\u3001<code>.json</code>\uff09\u3001\u6570\u636e\u5e93\u6587\u4ef6\uff08\u5982<code>.db</code>\u3001<code>.sqlite</code>\uff09\u3001\u56fe\u50cf\u6587\u4ef6\uff08\u5982<code>.jpg</code>\u3001<code>.png</code>\uff09\u3001\u6587\u6863\u6587\u4ef6\uff08\u5982<code>.docx</code>\u3001<code>.pdf</code>\uff09\u7b49\u3002</li> <li>\u4f5c\u7528\uff1a\u6570\u636e\u6587\u4ef6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b58\u50a8\u4fe1\u606f\uff0c\u4f9b\u7a0b\u5e8f\u5728\u9700\u8981\u65f6\u8bfb\u53d6\u6216\u5199\u5165\u3002\u5b83\u4eec\u53ef\u4ee5\u662f\u6301\u4e45\u5b58\u50a8\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e34\u65f6\u6570\u636e\u3002</li> <li>\u4f8b\u5b50\uff1a\u6587\u6863\u3001\u56fe\u7247\u3001\u97f3\u4e50\u3001\u89c6\u9891\u3001\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u7b49\u3002</li> </ol> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7a0b\u5e8f\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u7ecf\u5e38\u76f8\u4e92\u914d\u5408\u5de5\u4f5c\u3002\u7a0b\u5e8f\u6587\u4ef6\u5904\u7406\u6570\u636e\u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u800c\u6570\u636e\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\u6587\u4ef6\u9700\u8981\u5904\u7406\u7684\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff08\u7a0b\u5e8f\u6587\u4ef6\uff09\u53ef\u4ee5\u6253\u5f00\u548c\u7f16\u8f91\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff08\u6570\u636e\u6587\u4ef6\uff09\uff0c\u6216\u8005\u4e00\u4e2a\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08\u7a0b\u5e8f\u6587\u4ef6\uff09\u53ef\u4ee5\u67e5\u8be2\u548c\u66f4\u65b0\u6570\u636e\u5e93\u6587\u4ef6\uff08\u6570\u636e\u6587\u4ef6\uff09\u4e2d\u7684\u6570\u636e\u3002 \u6587\u4ef6\u6307\u9488 \u6bcf\u4e2a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\uff0c\u90fd\u4f1a\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u51fa\u4e00\u4e2a\u76f8\u5e94\u7684\u6587\u4ef6\u4fe1\u606f\u533a\u3002\u8be5\u4fe1\u606f\u533a\u7528\u6765\u5b58\u653e\u6587\u4ef6\u76f8\u5173\u4fe1\u606f\uff08\u5982\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u72b6\u6001\u4ee5\u53ca\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e\u7b49\uff09\u3002\u8fd9\u4e9b\u4fe1\u606f\u662f\u4fdd\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u7684\uff0c\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u7531\u7cfb\u7edf\u7533\u660e\u7684\uff0c\u540d\u4e3a <code>FILE</code> \uff08\u6ce8\u610f\u662f\u7c7b\u578b\uff09\u3002 perror <code>perror</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u53d1\u751f\u9519\u8bef\u65f6\u5411\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08\u901a\u5e38\u662f\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\uff09\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u6839\u636e\u5f53\u524d\u7684 <code>errno</code> \u503c\uff08\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u8bb0\u5f55\u4e86\u4e0a\u4e00\u6b21\u5e93\u51fd\u6570\u8c03\u7528\u5931\u8d25\u7684\u9519\u8bef\u4ee3\u7801\uff09\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u5c06\u5176\u8f93\u51fa\u3002</p> <p>\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>void perror(const char *s);\n</code></pre> <ul> <li><code>s</code> \u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c<code>perror</code> \u4f1a\u5728\u8f93\u51fa\u7684\u9519\u8bef\u4fe1\u606f\u524d\u52a0\u4e0a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c <code>s</code> \u662f <code>NULL</code>\uff0c\u5219\u4e0d\u8f93\u51fa\u4efb\u4f55\u524d\u7f00\u3002</li> </ul> <p><code>perror</code> \u7684\u4f5c\u7528\u662f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u62a5\u544a\u9519\u8bef\uff0c\u800c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u624b\u52a8\u7f16\u5199\u9519\u8bef\u6d88\u606f\u3002\u8fd9\u4e2a\u51fd\u6570\u901a\u5e38\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u540e\u88ab\u8c03\u7528\uff0c\u4f8b\u5982\u5728\u6587\u4ef6\u64cd\u4f5c\u6216\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u540e\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>perror</code> \u7684\u7b80\u5355\u793a\u4f8b\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n\nint main() {\n    FILE *fp = fopen(\"nonexistentfile.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return 1;\n    }\n    // \u6587\u4ef6\u64cd\u4f5c...\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c <code>fopen</code> \u8c03\u7528\u5931\u8d25\uff08\u6bd4\u5982\u56e0\u4e3a\u6587\u4ef6\u4e0d\u5b58\u5728\uff09\uff0c<code>perror</code> \u4f1a\u88ab\u8c03\u7528\uff0c\u5e76\u8f93\u51fa\u7c7b\u4f3c\u4e8e \"Error opening file: No such file or directory\" \u7684\u6d88\u606f\u3002\u8fd9\u91cc\u7684 \"Error opening file\" \u662f\u7528\u6237\u63d0\u4f9b\u7684\u524d\u7f00\uff0c\u540e\u9762\u8ddf\u7740\u7684\u662f <code>perror</code> \u6839\u636e <code>errno</code> \u503c\u67e5\u627e\u5230\u7684\u9519\u8bef\u63cf\u8ff0\u3002</p> <p><code>perror</code> \u51fd\u6570\u4f1a\u8f93\u51fa\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ol> <li>\u7528\u6237\u5b9a\u4e49\u7684\u524d\u7f00\uff1a\u8fd9\u662f\u4f60\u4f20\u9012\u7ed9 <code>perror</code> \u51fd\u6570\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u3002\u5982\u679c\u4f20\u9012\u7684\u662f <code>NULL</code>\uff0c\u5219\u6ca1\u6709\u524d\u7f00\u3002</li> <li>\u9519\u8bef\u63cf\u8ff0\uff1a\u8fd9\u662f <code>perror</code> \u6839\u636e\u5168\u5c40\u53d8\u91cf <code>errno</code> \u7684\u503c\u6765\u786e\u5b9a\u7684\u9519\u8bef\u6d88\u606f\u3002<code>errno</code> \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u5728\u5e93\u51fd\u6570\u53d1\u751f\u9519\u8bef\u65f6\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u6bcf\u4e2a\u503c\u5bf9\u5e94\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684\u9519\u8bef\u6761\u4ef6\u3002<code>perror</code> \u4f1a\u67e5\u627e\u8fd9\u4e2a\u503c\u5bf9\u5e94\u7684\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u3002</li> </ol> <p>\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u901a\u5e38\u662f\u56fa\u5b9a\u7684\uff0c\u7531 C \u5e93\u63d0\u4f9b\uff0c\u5e76\u4e14\u662f\u672c\u5730\u5316\u7684\uff0c\u610f\u5473\u7740\u5b83\u4f1a\u6839\u636e\u7cfb\u7edf\u7684\u533a\u57df\u8bbe\u7f6e\u8fdb\u884c\u672c\u5730\u5316\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>errno</code> \u7684\u503c\u662f <code>ENOENT</code>\uff08\u901a\u5e38\u8868\u793a\u201c\u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u201d\uff09\uff0c\u90a3\u4e48 <code>perror</code> \u53ef\u80fd\u4f1a\u8f93\u51fa \"No such file or directory\"\u3002</p> <p>\u987a\u5e8f\u8bfb\u5199 \u987a\u5e8f\u8bfb\u5199\u662f\u6307\u6570\u636e\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\uff08\u901a\u5e38\u662f\u7ebf\u6027\u987a\u5e8f\uff09\u88ab\u8bfb\u53d6\u6216\u5199\u5165\u5230\u5b58\u50a8\u4ecb\u8d28\uff08\u5982\u786c\u76d8\u3001\u6587\u4ef6\u7b49\uff09\u7684\u8fc7\u7a0b\u3002\u8fd9\u79cd\u8bfb\u5199\u65b9\u5f0f\u9075\u5faa\u6570\u636e\u5728\u5b58\u50a8\u4ecb\u8d28\u4e0a\u7684\u7269\u7406\u6216\u903b\u8f91\u6392\u5217\u987a\u5e8f\uff0c\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u6570\u636e\u9879\u3002\u987a\u5e8f\u8bfb\u5199\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u6570\u636e\u5904\u7406\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u952e\u70b9\uff1a</p> <ol> <li>\u987a\u5e8f\u8bfb\u53d6\uff1a</li> <li>\u5728\u987a\u5e8f\u8bfb\u53d6\u4e2d\uff0c\u6570\u636e\u88ab\u6309\u987a\u5e8f\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u7684\u5f00\u59cb\u5230\u7ed3\u675f\u9010\u884c\u8bfb\u53d6\u6587\u672c\u6570\u636e\u3002</li> <li>\u987a\u5e8f\u8bfb\u53d6\u901a\u5e38\u7528\u4e8e\u9700\u8981\u5904\u7406\u6574\u4e2a\u6570\u636e\u96c6\u7684\u60c5\u51b5\uff0c\u5982\u5907\u4efd\u6587\u4ef6\u6216\u5904\u7406\u65e5\u5fd7\u6587\u4ef6\u3002</li> <li>\u987a\u5e8f\u5199\u5165\uff1a</li> <li>\u5728\u987a\u5e8f\u5199\u5165\u4e2d\uff0c\u6570\u636e\u88ab\u6309\u987a\u5e8f\u5199\u5165\u5230\u5b58\u50a8\u4ecb\u8d28\u7684\u8fde\u7eed\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5c06\u8f93\u51fa\u7ed3\u679c\u9010\u884c\u5199\u5165\u5230\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d\u3002</li> <li>\u987a\u5e8f\u5199\u5165\u901a\u5e38\u7528\u4e8e\u751f\u6210\u62a5\u544a\u6216\u5c06\u5904\u7406\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002</li> </ol> <p>\u590d\u6742\u5b9a\u4e49</p> <ol> <li>int *f();    f: function returning pointer to int</li> <li>int (*f)()    f: pointer to function returning int</li> <li>char **argv    argv: pointer to pointer to char</li> <li>int (*daytab)[13]    daytab: pointer to array[13] of int</li> <li>void *comp()    comp: function returning pointer to void</li> <li>void (*comp)()    comp: pointer to function returning void</li> <li>char (*(*x())[])()    x: function returning pointer to array[] of pointer to function returning char</li> <li>char (*(*x[3])())[5]    x: array[3] of pointer to function returning pointer to array[5] of char</li> </ol> <p>stdint.h <code>stdint.h</code>\u662f C \u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6807\u51c6\u7684\u6574\u6570\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u5177\u6709\u660e\u786e\u7684\u5927\u5c0f\u548c\u7b26\u53f7\u3002<code>stdint.h</code>\u5934\u6587\u4ef6\u662f\u5728 C99 \u6807\u51c6\u4e2d\u5f15\u5165\u7684\uff0c\u76ee\u7684\u662f\u63d0\u4f9b\u8de8\u5e73\u53f0\u7684\u6574\u6570\u7c7b\u578b\u5b9a\u4e49\uff0c\u4ee5\u786e\u4fdd\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u4e4b\u95f4\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u884c\u4e3a\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_1","title":"\u5b9a\u4e49\u7684\u7c7b\u578b","text":"<p><code>stdint.h</code>\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u7c7b\u578b\u7684\u6574\u6570\uff1a</p> <ul> <li> <p>\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int8_t</code>\uff1a8 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</p> </li> <li><code>int16_t</code>\uff1a16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</li> <li><code>int32_t</code>\uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</li> <li> <p><code>int64_t</code>\uff1a64 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>uint8_t</code>\uff1a8 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li><code>uint16_t</code>\uff1a16 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</li> <li><code>uint32_t</code>\uff1a32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</li> <li> <p><code>uint64_t</code>\uff1a64 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>\u6700\u5c0f\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int_least8_t</code>\u3001<code>int_least16_t</code>\u3001<code>int_least32_t</code>\u3001<code>int_least64_t</code>\uff1a\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6700\u5c0f\u5bbd\u5ea6\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p><code>uint_least8_t</code>\u3001<code>uint_least16_t</code>\u3001<code>uint_least32_t</code>\u3001<code>uint_least64_t</code>\uff1a\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6700\u5c0f\u5bbd\u5ea6\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p>\u6700\u5feb\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int_fast8_t</code>\u3001<code>int_fast16_t</code>\u3001<code>int_fast32_t</code>\u3001<code>int_fast64_t</code>\uff1a\u6700\u5feb\u4e14\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p><code>uint_fast8_t</code>\u3001<code>uint_fast16_t</code>\u3001<code>uint_fast32_t</code>\u3001<code>uint_fast64_t</code>\uff1a\u6700\u5feb\u4e14\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p>\u6700\u5927\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li><code>intmax_t</code>\uff1a\u6700\u5927\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</li> <li><code>uintmax_t</code>\uff1a\u6700\u5927\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_2","title":"\u793a\u4f8b","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\nint main() {\n    int32_t a = 12345;\n    uint32_t b = 12345;\n    printf(\"int32_t: %d\\n\", a);\n    printf(\"uint32_t: %u\\n\", b);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86<code>int32_t</code>\u548c<code>uint32_t</code>\u7c7b\u578b\u6765\u5b9a\u4e49\u53d8\u91cf<code>a</code>\u548c<code>b</code>\uff0c\u5e76\u4f7f\u7528<code>printf</code>\u51fd\u6570\u8f93\u51fa\u5b83\u4eec\u7684\u503c\u3002\u901a\u8fc7\u4f7f\u7528<code>stdint.h</code>\u4e2d\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd<code>a</code>\u548c<code>b</code>\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u90fd\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u884c\u4e3a\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_3","title":"\u4e00\u79cd\u795e\u5947\u7684\u5e94\u7528","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\nint main() {\n    double x;\n    scanf(\"%lf\", &amp;x);\n\n    // \u4f7f\u7528union\u6765\u8bbf\u95eedouble\u7684\u5185\u5b58\u8868\u793a\n    union {\n        double d;\n        uint64_t i;\n    } u = {x};\n\n    // \u8f93\u51fa64\u4f4d\u673a\u5185\u7801\u7684\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\n    printf(\"%016llX\\n\", u.i);\n\n    return 0;\n}\n</code></pre> <p>\u5728<code>printf</code>\u51fd\u6570\u7684\u683c\u5f0f\u8bf4\u660e\u7b26\u4e2d\uff0c<code>%016llX</code>\u7528\u4e8e\u6307\u5b9a\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u5177\u4f53\u542b\u4e49\u5982\u4e0b\uff1a</p> <ul> <li><code>%</code>\uff1a\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u683c\u5f0f\u8bf4\u660e\u7b26\u7684\u5f00\u59cb\u3002</li> <li><code>0</code>\uff1a\u8868\u793a\u5982\u679c\u8f93\u51fa\u7684\u6570\u5b57\u4e0d\u8db3\u6307\u5b9a\u7684\u5bbd\u5ea6\uff0c\u5219\u5728\u5de6\u4fa7\u586b\u5145 0 \u4ee5\u8fbe\u5230\u6307\u5b9a\u7684\u5bbd\u5ea6\u3002</li> <li><code>16</code>\uff1a\u8868\u793a\u8f93\u51fa\u7684\u5bbd\u5ea6\u4e3a 16 \u4e2a\u5b57\u7b26\u3002\u5982\u679c\u6570\u5b57\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u4e0d\u8db3 16 \u4f4d\uff0c\u5de6\u4fa7\u4f1a\u586b\u5145 0 \u4ee5\u8fbe\u5230 16 \u4f4d\u3002</li> <li><code>ll</code>\uff1a\u8868\u793a<code>long long</code>\u7c7b\u578b\u3002\u5bf9\u4e8e\u5341\u516d\u8fdb\u5236\u6574\u6570\u8f93\u51fa\uff0c\u5b83\u544a\u8bc9<code>printf</code>\u51fd\u6570<code>u.i</code>\u662f\u4e00\u4e2a 64 \u4f4d\u7684\u6574\u6570\uff08<code>uint64_t</code>\u7c7b\u578b\uff09\u3002</li> <li><code>X</code>\uff1a\u8868\u793a\u4ee5\u5341\u516d\u8fdb\u5236\u5927\u5199\u5f62\u5f0f\u8f93\u51fa\u6574\u6570\u3002\u5982\u679c\u4f7f\u7528\u5c0f\u5199\u7684<code>x</code>\uff0c\u5219\u8f93\u51fa\u7684\u662f\u5341\u516d\u8fdb\u5236\u5c0f\u5199\u5f62\u5f0f\u3002</li> </ul> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c<code>%016llX</code>\u7684\u610f\u601d\u662f\uff1a\u4ee5\u5341\u516d\u8fdb\u5236\u5927\u5199\u5f62\u5f0f\u8f93\u51fa\u4e00\u4e2a 64 \u4f4d\u6574\u6570\uff0c\u8f93\u51fa\u7684\u5bbd\u5ea6\u4e3a 16 \u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u4e0d\u8db3 16 \u4f4d\u5219\u5728\u5de6\u4fa7\u586b\u5145 0\u3002</p> <p>#ifndef <code>#ifndef</code> \u662f C \u8bed\u8a00\u9884\u5904\u7406\u5668\u7684\u4e00\u4e2a\u6307\u4ee4\uff0c\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u3002\u5b83\u7684\u5168\u79f0\u662f \"if not defined\"\uff0c\u610f\u601d\u662f\u201c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u201d\u3002<code>#ifndef</code> \u901a\u5e38\u4e0e <code>#define</code> \u548c <code>#endif</code> \u4e00\u8d77\u4f7f\u7528\uff0c\u7528\u4e8e\u907f\u514d\u5934\u6587\u4ef6\u5185\u5bb9\u7684\u91cd\u590d\u5305\u542b\uff08\u4e5f\u79f0\u4e3a\u591a\u91cd\u5305\u542b\uff09\uff0c\u8fd9\u5728\u5927\u578b\u9879\u76ee\u4e2d\u975e\u5e38\u5e38\u89c1\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#ifndef","title":"\u4f7f\u7528 <code>#ifndef</code> \u907f\u514d\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b","text":"<p>\u5f53\u4f60\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u6709\u591a\u4e2a\u6e90\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u7b26\u53f7\uff08\u5982\u51fd\u6570\u539f\u578b\u6216\u7c7b\u578b\u5b9a\u4e49\uff09\u4f1a\u88ab\u591a\u6b21\u5b9a\u4e49\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>#ifndef</code>\u3001<code>#define</code> \u548c <code>#endif</code> \u6765\u521b\u5efa\u4e00\u4e2a\u5b8f\u4fdd\u62a4\uff08macro guard\uff09\u6216\u5934\u6587\u4ef6\u4fdd\u62a4\uff08header guard\uff09\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f7f\u7528 <code>#ifndef</code> \u7684\u5934\u6587\u4ef6\u793a\u4f8b\uff1a</p> C<pre><code>// my_header.h\n#ifndef MY_HEADER_H  // \u5982\u679c MY_HEADER_H \u6ca1\u6709\u88ab\u5b9a\u4e49\n#define MY_HEADER_H  // \u5b9a\u4e49 MY_HEADER_H\n\n// \u5934\u6587\u4ef6\u7684\u5185\u5bb9\nint my_function(int arg);\n\n#endif // MY_HEADER_H\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53\u7f16\u8bd1\u5668\u7b2c\u4e00\u6b21\u9047\u5230 <code>my_header.h</code> \u65f6\uff0c<code>MY_HEADER_H</code> \u8fd8\u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u6240\u4ee5\u5b83\u4f1a\u5b9a\u4e49 <code>MY_HEADER_H</code> \u5e76\u5305\u542b\u5934\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5982\u679c\u5728\u540e\u7eed\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u518d\u6b21\u9047\u5230 <code>my_header.h</code>\uff0c<code>MY_HEADER_H</code> \u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64 <code>#ifndef MY_HEADER_H</code> \u7684\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u7f16\u8bd1\u5668\u4f1a\u8df3\u8fc7\u5934\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ece\u800c\u907f\u514d\u4e86\u91cd\u590d\u5305\u542b\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#ifndef_1","title":"\u4f7f\u7528 <code>#ifndef</code> \u8fdb\u884c\u6761\u4ef6\u7f16\u8bd1","text":"<p>\u9664\u4e86\u907f\u514d\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\uff0c<code>#ifndef</code> \u8fd8\u53ef\u4ee5\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\uff0c\u6839\u636e\u662f\u5426\u5b9a\u4e49\u4e86\u67d0\u4e2a\u5b8f\u6765\u51b3\u5b9a\u662f\u5426\u5305\u542b\u67d0\u4e9b\u4ee3\u7801\u3002\u4f8b\u5982\uff1a</p> C<pre><code>#ifndef USE_MY_FEATURE\n// \u5982\u679c USE_MY_FEATURE \u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u4ee5\u4e0b\u4ee3\u7801\nvoid my_feature_function() {\n    // \u5b9e\u73b0\u4ee3\u7801\n}\n#endif\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c <code>USE_MY_FEATURE</code> \u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4f1a\u5305\u542b <code>my_feature_function</code> \u7684\u5b9a\u4e49\uff1b\u5982\u679c <code>USE_MY_FEATURE</code> \u88ab\u5b9a\u4e49\u4e86\uff0c\u5219\u4e0d\u4f1a\u5305\u542b\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_4","title":"\u603b\u7ed3","text":"<ul> <li>\u4f7f\u7528 <code>#ifndef</code> \u53ef\u4ee5\u907f\u514d\u5934\u6587\u4ef6\u7684\u91cd\u590d\u5305\u542b\uff0c\u8fd9\u662f\u901a\u8fc7\u521b\u5efa\u5b8f\u4fdd\u62a4\u6765\u5b9e\u73b0\u7684\u3002</li> <li><code>#ifndef</code> \u4e5f\u53ef\u4ee5\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\uff0c\u6839\u636e\u5b8f\u7684\u5b9a\u4e49\u60c5\u51b5\u6765\u51b3\u5b9a\u662f\u5426\u5305\u542b\u67d0\u4e9b\u4ee3\u7801\u3002</li> <li>\u5728\u4f7f\u7528 <code>#ifndef</code> \u65f6\uff0c\u901a\u5e38\u9700\u8981\u914d\u5408 <code>#define</code> \u548c <code>#endif</code> \u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\u548c\u53ef\u8bfb\u6027\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_5","title":"\u7ec6\u8282","text":"C<pre><code>int x = 5, y = 7;\nvoid swap ( )\n{\n      int z ;\n\n      z = x ;  x = y ;  y = z ;\n}\nint main(void)\n{\n      int x = 3, y = 8;\n      swap ( ) ;  //\u6539\u53d8\u7684\u662f\u5168\u5c40\u53d8\u91cf\u7684x,y,main\u51fd\u6570\u4e2d\u4e0d\u53d8\n      printf (\"%d,%d \\n\", x , y ) ;   //\u8f93\u51fa\u4e3a3,8\n\n      return 0 ;\n}\n</code></pre> <ul> <li>\u81ea\u52a8\u53d8\u91cf\uff0c\u7cfb\u7edf\u4e0d\u81ea\u52a8\u8d4b\u521d\u59cb\u503c</li> <li>\u53d8\u91cf\u7684\u9690\u542b\u5b58\u50a8\u53d8\u91cf\u4e3a auto(\u81ea\u52a8\u578b)</li> <li>\u5916\u90e8\u53d8\u91cf:extern</li> <li>C \u8bed\u8a00\u53d8\u91cf\u6309\u4f5c\u7528\u57df\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf</li> <li>\u6309\u751f\u5b58\u671f\u5206\u4e3a\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u548c\u52a8\u6001\u5b58\u50a8\u65b9\u5f0f</li> <li>\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint fun(int a,int b) {\n    return a-b;\n}\nint a=10,b=4;\nint main() {\n    int a=4,b=10;\n    int t=fun(a,b);  //a,b\u5728main\u5185\u90e8\u5b9a\u4e49,\u4f20\u5165\u51fd\u6570\u4e2d\n    printf(\"%d\\n\",t); //\u8fd0\u884c\u7ed3\u679c\u4e3a-6\n    return 0;\n}\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\nint f(int m) {\n    static int n=0;\n    n+=m;\n    return n;\n}\nint main() {\n    int n=0;  //n\u5728main\u548cf\u4e2d\u91cd\u590d\u5b9a\u4e49,\u4e24\u4e2a\u51fd\u6570\u4e2d\u7684n\u4e0d\u662f\u540c\u4e00\u4e2an\n    printf(\"%d \",f(++n));\n    printf(\"%d\\n\",f(n++)); //\u8fd0\u884c\u7ed3\u679c\u4e3a1 2\n    return 0;\n}\n</code></pre> <ul> <li>\u7528\u9017\u53f7\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u5199\u591a\u884c\u8bed\u53e5</li> <li>\u5b8f\u5b9a\u4e49\u4e2d\u53ef\u4f7f\u7528\u6807\u8bc6\u7b26,\u5b9e\u9645\u51fd\u6570\u8fd0\u884c\u65f6\u5b9a\u4e49\u540c\u540d\u53d8\u91cf,\u51fd\u6570\u4e2d\u5c06\u5176\u66ff\u6362   \u4e3e\u4f8b:<code>#define F a+a \\\\ int a=3,x=9;</code>   \u6267\u884c<code>x=F*F</code>\u540e,x \u7684\u503c\u4e3a 15</li> <li>define \u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26(\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26)   if \u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26(\u5173\u952e\u5b57\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26)</li> <li>3&lt; x &lt;5 \u7684\u503c\u6052\u4e3a 1</li> <li>3==x==0 \u7684\u503c\u6052\u4e3a 0</li> <li>\u63a7\u5236\u8868\u8fbe\u5206\u4e3a\u8bed\u53e5\u7ea7\uff08\u987a\u5e8f\uff0c\u5206\u652f\uff0c\u5faa\u73af\uff09\u548c\u6a21\u5757\u7ea7\uff08\u51fd\u6570\uff09</li> <li>\u6df7\u5408\u8fd0\u7b97\u6ce8\u610f\u5de6\u7ed3\u5408\u548c\u53f3\u7ed3\u5408</li> <li>\u5206\u652f\u63a7\u5236\u5206\u4e3a\u53cc\u8def\u5206\u652f\uff08if else\uff09\u548c\u591a\u8def\u5206\u652f\uff08switch case\uff09</li> <li>static \u4fee\u9970\u5168\u5c40\u53d8\u91cf\uff1a\u53ea\u80fd\u5728\u8be5\u6587\u4ef6\u91cc\u4f7f\u7528\uff0c\u5176\u4ed6\u6587\u4ef6\u4e0d\u80fd\u8bbf\u95ee\uff08\u5373\u4f7f\u52a0 extern \u4e5f\u4e0d\u884c\uff09</li> <li><code>If (grade&lt;60) {\u2026}</code>grade \u7684\u53d6\u503c\u81f3\u5c11\u6709\u4e09\u7ec4</li> <li>\u591a\u91cd if else\uff1a\u6ce8\u610f else \u914d\u5bf9\u7684\u662f\u6700\u8fd1\u7684\u4e14\u4e0d\u5e26 else \u7684 if</li> <li>\u590d\u5408\u8bed\u53e5\uff1a\u7528\u5927\u62ec\u53f7\u5305\u56f4\u7684\u4e00\u7cfb\u5217\u8bed\u53e5\uff0c\u5728\u8bed\u6cd5\u4e0a\u88ab\u8ba4\u4e3a\u662f\u4e00\u6761\u8bed\u53e5</li> <li>\u6807\u8bc6\u7b26\uff1a\u7528\u4e8e\u5b9a\u4e49\u53d8\u91cf\uff0c\u51fd\u6570\uff0c\u5b8f</li> <li>for \u540e\u7684\u590d\u5408\u8bed\u53e5\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5373 for ( ; ; ) ;\u8bed\u6cd5\u6b63\u786e</li> <li>(a&amp;3)==(a%4)\u7684\u503c\u4e3a 1\uff0c\uff08\u56e0\u4e3a 3 \u7684\u4e8c\u8fdb\u5236\u662f 11\uff0ca&amp;3 \u76f8\u5f53\u4e8e\u53d6\u51fa\u6700\u540e\u4e24\u4f4d\uff09</li> <li>!!(x&gt;y)\u548c\uff08x&gt;y)\u7b49\u4ef7</li> <li>\u975e\u96f6\u503c\u90fd\u8ba4\u4e3a\u662f true</li> <li>\u5b9a\u4e49\u4e3a<code>int a[3][2]={1,2,3,4,5,6}</code>\uff0c\u82e5\u884c\u5217\u8d85\u8fc7\u5b9a\u4e49\uff0c\u81ea\u52a8\u5f80\u540e\u53d6\u503c\uff0c\u5982<code>a[1][3]</code>\u4e3a 6</li> <li>p++\u7b49\u4ef7\u4e8e(p++)\uff0c\u56e0\u4e3a++\u4e3a\u53f3\u7ed3\u5408</li> <li><code>char c[]=\u201cl\\t\\r\\\\\\0will\\n\u201d; \\\\ printf(\u201c%d\\n\u201dstrlen(c));</code>\u8fd0\u884c\u7ed3\u679c\u4e3a 4</li> <li><code>char str[10];  str[U+200E] = \u201cstring\u201d</code>\u9519\u8bef\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u53d8\u91cf\u540d\u4e0d\u80fd\u88ab\u6539\u53d8</li> <li><code>puts</code>\u8f93\u51fa\u5305\u542b\u2019\\0\u2019</li> <li>\u51fd\u6570\u5b9a\u4e49\u4e2d\u6570\u7ec4\u53ef\u89c4\u5b9a\u5927\u5c0f</li> <li>\u51fd\u6570\u7684\u5f62\u53c2\u548c\u5b9e\u53c2\u5206\u522b\u5360\u7528\u4e0d\u540c\u7684\u5b58\u50a8\u5355\u5143</li> <li>c \u8bed\u8a00\u6e90\u6587\u4ef6\u4e0d\u4e00\u5b9a\u8981\u5305\u542b main \u51fd\u6570</li> <li>\u51fd\u6570\u539f\u578b\u58f0\u660e\u53ef\u4ee5\u58f0\u660e\u591a\u6b21</li> <li>syntax error\uff1a\u8bed\u6cd5\u9519\u8bef   compilation error\uff1a\u7f16\u8bd1\u9519\u8bef</li> <li>\u7eed\u884c\u7b26\u4e3a<code>\\</code>,\u53ef\u5c06\u4e00\u884c\u4ee3\u7801\u5199\u5728\u591a\u884c</li> <li>\u4ece\u5c0f\u5230\u5927\u5192\u6ce1\u6392\u5e8f,\u7b2c i \u8f6e\u5c06\u539f\u672c\u7b2c i \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e</li> <li>\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u5373\u9009\u62e9\u6392\u5e8f</li> <li><code>int a[10]; a++;</code>\u9519\u8bef.a \u4e3a\u6570\u7ec4\u540d,\u4e0d\u53ef\u6539\u53d8\u503c</li> <li><code>int a[10];</code>\u5219*a \u4e3a a[0]</li> <li>\u6307\u9488\u4e0d\u80fd\u76f8\u52a0,\u4f46\u662f\u53ef\u4ee5\u76f8\u51cf.\u540c\u4e00\u6570\u7ec4\u7684\u4e24\u6307\u9488\u76f8\u51cf,\u8fd4\u56de\u7740\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570</li> <li>\u4e24\u6307\u9488\u76f8\u7b49\u5373\u6307\u5411\u7684\u5730\u5740\u76f8\u7b49</li> <li>\u5e38\u7528\u7c7b\u578b\u5b57\u8282\u6570:</li> <li>char:1 \u5b57\u8282</li> <li>int:4 \u5b57\u8282</li> <li>long long:8 \u5b57\u8282</li> <li>float:4 \u5b57\u8282</li> <li>double:8 \u5b57\u8282</li> </ul> <ul> <li>sizeof \u4e0d\u662f\u51fd\u6570\uff0c\u662f\u7f16\u8bd1\u8fd0\u7b97\u7b26   <code>sizeof</code> \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u539f\u59cb\u7c7b\u578b\uff08\u5982 <code>int</code>\u3001<code>float</code>\uff09\u548c\u590d\u5408\u7c7b\u578b\uff08\u5982 <code>struct</code>\u3001<code>union</code>\u3001\u6570\u7ec4\uff09\u3002<code>sizeof</code> \u7684\u7ed3\u679c\u7c7b\u578b\u662f <code>size_t</code>\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5b9a\u4e49\u5728 <code>stddef.h</code> \u6216 <code>stdint.h</code> \u5934\u6587\u4ef6\u4e2d\u3002</li> </ul> <ul> <li> <p>c \u8bed\u8a00\u62a5\u9519\u7c7b\u578b</p> </li> <li> <p>\u8bed\u6cd5\u9519\u8bef\uff08Syntax Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u5728\u4ee3\u7801\u4e0d\u7b26\u5408 C \u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\u65f6\u3002\u4f8b\u5982\uff0c\u7f3a\u5c11\u5206\u53f7\u3001\u62ec\u53f7\u4e0d\u5339\u914d\u3001\u9519\u8bef\u7684\u5173\u952e\u5b57\u4f7f\u7528\u7b49\u3002</p> </li> <li> <p>\u8bed\u4e49\u9519\u8bef\uff08Semantic Errors\uff09\uff1a</p> </li> <li> <p>\u8bed\u4e49\u9519\u8bef\u662f\u6307\u4ee3\u7801\u5728\u8bed\u6cd5\u4e0a\u6b63\u786e\uff0c\u4f46\u5728\u903b\u8f91\u4e0a\u6216\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u6b63\u786e\u3002\u4f8b\u5982\uff0c\u8d4b\u503c\u4e00\u4e2a\u6574\u6570\u503c\u7ed9\u4e00\u4e2a\u6d6e\u70b9\u53d8\u91cf\u800c\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u3001\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u3001\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u6570\u91cf\u4e0d\u5339\u914d\u7b49\u3002</p> </li> <li> <p>\u94fe\u63a5\u9519\u8bef\uff08Linker Errors\uff09\uff1a</p> </li> <li> <p>\u94fe\u63a5\u9519\u8bef\u53d1\u751f\u5728\u7f16\u8bd1\u9636\u6bb5\u4e4b\u540e\uff0c\u5f53\u7f16\u8bd1\u5668\u8bd5\u56fe\u5c06\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\uff08\u6e90\u6587\u4ef6\uff09\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u3002\u5e38\u89c1\u7684\u94fe\u63a5\u9519\u8bef\u5305\u62ec\u672a\u5b9a\u4e49\u7684\u5f15\u7528\uff08\u4f8b\u5982\uff0c\u58f0\u660e\u4e86\u51fd\u6570\u4f46\u6ca1\u6709\u5b9a\u4e49\uff09\u548c\u591a\u91cd\u5b9a\u4e49\uff08\u540c\u4e00\u4e2a\u51fd\u6570\u6216\u53d8\u91cf\u88ab\u5b9a\u4e49\u4e86\u591a\u6b21\uff09\u3002</p> </li> <li> <p>\u8fd0\u884c\u65f6\u9519\u8bef\uff08Runtime Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5230\u7684\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u3002\u4f8b\u5982\uff0c\u6570\u7ec4\u8d8a\u754c\u3001\u9664\u4ee5\u96f6\u3001\u5185\u5b58\u6cc4\u6f0f\u3001\u91ce\u6307\u9488\u7b49\u3002</p> </li> <li> <p>\u8b66\u544a\uff08Warnings\uff09\uff1a</p> </li> <li> <p>\u7f16\u8bd1\u5668\u4e5f\u4f1a\u62a5\u544a\u8b66\u544a\uff0c\u8fd9\u4e9b\u901a\u5e38\u4e0d\u662f\u9519\u8bef\uff0c\u4f46\u5b83\u4eec\u6307\u51fa\u4e86\u53ef\u80fd\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u672a\u88ab\u4f7f\u7528\u7684\u53d8\u91cf\u3001\u53ef\u80fd\u7684\u9664\u4ee5\u96f6\u3001\u683c\u5f0f\u5b57\u7b26\u4e32\u8b66\u544a\u7b49\u3002\u867d\u7136\u8b66\u544a\u4e0d\u4f1a\u963b\u6b62\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u6307\u793a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u88ab\u8ba4\u771f\u5bf9\u5f85\u3002</p> </li> <li> <p>\u7f16\u8bd1\u5668\u7279\u5b9a\u7684\u9519\u8bef\uff08Compiler-Specific Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u662f\u7531\u7279\u5b9a\u7f16\u8bd1\u5668\u5b9e\u73b0\u7684\u7279\u5b9a\u9650\u5236\u6216\u7279\u6027\u5f15\u8d77\u7684\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u7f16\u8bd1\u5668\u53ef\u80fd\u5bf9\u4ee3\u7801\u4f18\u5316\u7ea7\u522b\u6709\u4e0d\u540c\u7684\u8981\u6c42\uff0c\u6216\u8005\u5bf9\u67d0\u4e9b\u7279\u6027\u7684\u652f\u6301\u4e0d\u540c\u3002</p> </li> <li> <p>\u9884\u5904\u7406\u5668\u9519\u8bef\uff08Preprocessor Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u4e0e\u9884\u5904\u7406\u6307\u4ee4\u6709\u5173\uff0c\u6bd4\u5982\u5b8f\u5b9a\u4e49\u9519\u8bef\u3001\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\u9519\u8bef\u7b49\u3002</p> </li> <li> <p>\u7c7b\u578b\u9519\u8bef\uff08Type Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u5728\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u5c06\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5b57\u7b26\u578b\u53d8\u91cf\u800c\u6ca1\u6709\u9002\u5f53\u7684\u7c7b\u578b\u8f6c\u6362\u3002</p> </li> <li> <p>\u5185\u5b58\u5206\u914d\u9519\u8bef\uff08Memory Allocation Errors\uff09\uff1a</p> </li> <li>\u5728\u52a8\u6001\u5185\u5b58\u5206\u914d\u65f6\uff0c\u5982\u679c\u5185\u5b58\u4e0d\u8db3\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u5982 <code>malloc</code> \u6216 <code>calloc</code> \u8fd4\u56de <code>NULL</code>\u3002</li> </ul> <p></p> C<pre><code>for(num = 1; num &lt;= 100; num++){\n    s = 0;   //\u6b64\u5904\u5e94int t=num;\u5426\u5219num\u503c\u6539\u53d8\n    do{\n       s = s + num % 10;\n       num = num / 10;\n    }while(num != 0);\n    printf(\"%d\\n\", s);\n}\n</code></pre> <p></p> <ul> <li><code>ftell</code>:\u83b7\u53d6\u6587\u4ef6\u6d41\u5f53\u524d\u4f4d\u7f6e   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>ftell</code>\u51fd\u6570\u662f\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u6d41\u5f53\u524d\u4f4d\u7f6e\u7684\u51fd\u6570\u3002\u5b83\u5b9a\u4e49\u5728<code>&lt;stdio.h&gt;</code>\u5934\u6587\u4ef6\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u8fd4\u56de\u7ed9\u5b9a\u6d41\uff08\u7531<code>FILE*</code>\u7c7b\u578b\u7684\u6307\u9488\u6307\u5411\uff09\u7684\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\u7684\u503c\uff0c\u5373\u4ece\u6587\u4ef6\u5f00\u5934\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u91cf\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_6","title":"\u51fd\u6570\u539f\u578b","text":"<p><code>ftell</code>\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>long int ftell(FILE *stream);\n</code></pre> <p>\u5176\u4e2d\uff0c<code>stream</code>\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411<code>FILE</code>\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_7","title":"\u8fd4\u56de\u503c","text":"<ul> <li>\u5982\u679c\u8c03\u7528\u6210\u529f\uff0c<code>ftell</code>\u51fd\u6570\u8fd4\u56de\u4ece\u6587\u4ef6\u5f00\u5934\u7b97\u8d77\u7684\u5b57\u8282\u6570\u91cf\uff0c\u5373\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\u7684\u503c\u3002</li> <li>\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u51fd\u6570\u8fd4\u56de<code>-1L</code>\uff0c\u5e76\u4e14\u5168\u5c40\u53d8\u91cf<code>errno</code>\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6b63\u503c\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_8","title":"\u4f7f\u7528\u573a\u666f","text":"<p><code>ftell</code>\u51fd\u6570\u5e38\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ol> <li>\u968f\u673a\u6587\u4ef6\u8bbf\u95ee\uff1a\u5728\u968f\u673a\u65b9\u5f0f\u5b58\u53d6\u6587\u4ef6\u65f6\uff0c\u4f7f\u7528<code>fseek</code>\u51fd\u6570\u6765\u56de\u79fb\u52a8\u6587\u4ef6\u6307\u9488\uff0c\u4e0d\u5bb9\u6613\u786e\u5b9a\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\uff0c\u901a\u8fc7\u8c03\u7528<code>ftell</code>\u51fd\u6570\u53ef\u4ee5\u786e\u5b9a\u6307\u9488\u4f4d\u7f6e\u3002</li> <li>\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\uff1a\u901a\u8fc7\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\uff08\u4f7f\u7528<code>fseek</code>\u51fd\u6570\uff09\uff0c\u7136\u540e\u4f7f\u7528<code>ftell</code>\u83b7\u53d6\u6587\u4ef6\u6307\u9488\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5934\u7684\u504f\u79fb\u503c\uff0c\u4ece\u800c\u5f97\u5230\u6587\u4ef6\u7684\u5927\u5c0f\u3002</li> </ol>"},{"location":"CourseNotes/C%20Programming/CNote/#_9","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528<code>ftell</code>\u51fd\u6570\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE *fp;\n    long len;\n    fp = fopen(\"file.txt\", \"r\");\n    if(fp == NULL) {\n        perror(\"\u6253\u5f00\u6587\u4ef6\u9519\u8bef\");\n        return(-1);\n    }\n    fseek(fp, 0, SEEK_END);\n    len = ftell(fp);\n    fclose(fp);\n    printf(\"file.txt \u7684\u603b\u5927\u5c0f = %ld \u5b57\u8282\\n\", len);\n    return(0);\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u9996\u5148\u6253\u5f00\u540d\u4e3a<code>file.txt</code>\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\uff0c\u6700\u540e\u4f7f\u7528<code>ftell</code>\u51fd\u6570\u83b7\u53d6\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5e76\u6253\u5370\u51fa\u6765\u3002</p> <ul> <li><code>feof</code>:\u68c0\u67e5\u6587\u4ef6\u6d41\u662f\u5426\u8fbe\u5230\u672b\u5c3e   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>feof</code>\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u6587\u4ef6\u6d41\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5f53\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c<code>feof</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u8bfb\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_10","title":"\u51fd\u6570\u539f\u578b","text":"<p><code>feof</code>\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>int feof(FILE *stream);\n</code></pre> <p>\u5176\u4e2d\uff0c<code>stream</code>\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411<code>FILE</code>\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_11","title":"\u8fd4\u56de\u503c","text":"<ul> <li>\u5982\u679c\u6587\u4ef6\u672b\u5c3e\u5c1a\u672a\u5230\u8fbe\uff0c<code>feof</code>\u51fd\u6570\u8fd4\u56de<code>0</code>\u3002</li> <li>\u5982\u679c\u6587\u4ef6\u672b\u5c3e\u5df2\u7ecf\u5230\u8fbe\u6216\u53d1\u751f\u4e86\u9519\u8bef\uff0c<code>feof</code>\u51fd\u6570\u8fd4\u56de\u975e\u96f6\u503c\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_12","title":"\u4f7f\u7528\u573a\u666f","text":"<p><code>feof</code>\u51fd\u6570\u5e38\u7528\u4e8e\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5b83\u901a\u5e38\u4e0e<code>fgetc</code>\u6216<code>fgets</code>\u7b49\u8bfb\u53d6\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u5728\u8bfb\u53d6\u64cd\u4f5c\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u65f6\u80fd\u591f\u6b63\u786e\u5904\u7406\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_13","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528<code>feof</code>\u51fd\u6570\u68c0\u67e5\u6587\u4ef6\u672b\u5c3e\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE *fp;\n    int c;\n    fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\");\n        return -1;\n    }\n\n    // \u8bfb\u53d6\u6587\u4ef6\u76f4\u5230\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\n    while ((c = fgetc(fp)) != EOF) {\n        putchar(c);\n    }\n\n    // \u68c0\u67e5\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\n    if (feof(fp)) {\n        printf(\"\u5df2\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\\n\");\n    }\n\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a<code>example.txt</code>\u7684\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528<code>fgetc</code>\u51fd\u6570\u9010\u4e2a\u5b57\u7b26\u5730\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002\u6bcf\u6b21\u8bfb\u53d6\u540e\uff0c\u90fd\u4f1a\u68c0\u67e5\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5982\u679c<code>feof</code>\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u8868\u793a\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u76f8\u5e94\u7684\u6d88\u606f\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>feof</code>\u51fd\u6570\u53ea\u6709\u5728\u5c1d\u8bd5\u8bfb\u53d6\u64cd\u4f5c\u4e4b\u540e\u624d\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u975e\u96f6\u503c\uff0c\u56e0\u6b64\u5728\u8c03\u7528<code>feof</code>\u4e4b\u524d\u81f3\u5c11\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8bfb\u53d6\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5982\u679c\u8bfb\u53d6\u64cd\u4f5c\u7531\u4e8e\u5176\u4ed6\u539f\u56e0\uff08\u5982\u6587\u4ef6\u9519\u8bef\uff09\u5bfc\u81f4<code>EOF</code>\u88ab\u8bbe\u7f6e\uff0c<code>feof</code>\u4e5f\u4f1a\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u56e0\u6b64\u5728\u4f7f\u7528<code>feof</code>\u65f6\u9700\u8981\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_14","title":"\u4e00\u4e9b\u5173\u4e8e\u6307\u9488\u5360\u5185\u5b58\u51e0\u4f4d\u7684\u4e1c\u897f","text":"<ul> <li>CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf,\u5730\u5740\u603b\u7ebf\u548c\u63a7\u5236\u603b\u7ebf\u4e0e\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u4e0e\u64cd\u4f5c</li> <li>\u6570\u636e\u603b\u7ebf:\u6570\u636e\u603b\u7ebf\u7684\u5bbd\u5ea6\u51b3\u5b9a CPU \u5355\u6b21\u6570\u636e\u4f20\u8f93\u7684\u4f20\u9001\u91cf,\u5373\u7535\u8111\u7684\u4f4d\u6570</li> <li>\u63a7\u5236\u603b\u7ebf:\u51b3\u5b9a CPU \u5bf9\u5176\u4ed6\u63a7\u4ef6\u7684\u63a7\u5236\u80fd\u529b\u4ee5\u53ca\u63a7\u5236\u65b9\u5f0f</li> <li>\u5730\u5740\u603b\u7ebf:\u51b3\u5b9a CPU \u7684\u5bfb\u5740\u80fd\u529b,\u6216\u5bfb\u5740\u7684\u6700\u5927\u5185\u5b58\u5bb9\u91cf.</li> <li>\u82e5\u5730\u5740\u603b\u7ebf\u4e3a 32 \u4f4d,\u5219\u4e00\u6b21\u80fd\u5904\u7406\u7684\u4fe1\u606f\u4f4d 2^32 \u6761,\u63cf\u8ff0\u7684\u5730\u5740\u7a7a\u95f4\u662f 0x0000 0000~2^32-1,\u6b64\u65f6\u9700\u8981 32 \u4e2a 0 \u6216 1 \u7684\u7ec4\u5408\u627e\u5230\u5185\u5b58\u4e2d\u7684\u5730\u5740,\u5373 4 \u4e2a\u5b57\u8282\u7684\u5927\u5c0f</li> <li>\u6240\u4ee5,32 \u4f4d\u8ba1\u7b97\u673a\u4e2d,\u6307\u9488\u5360 4 \u4e2a\u5b57\u8282</li> <li>64 \u4f4d\u8ba1\u7b97\u673a\u4e2d,\u6307\u9488\u5360 8 \u4e2a\u5b57\u8282</li> </ul> <p>\u9898\u76ee \u77e5\u8bc6\u70b9</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_15","title":"\u7ec6\u8282","text":"<ul> <li>source file:\u6e90\u6587\u4ef6   type modifier:\u7c7b\u578b\u4fee\u9970\u7b26   recursive functions:\u9012\u5f52\u51fd\u6570   concise:\u7b80\u660e\u7684   singly linked list:\u5355\u94fe\u8868   doubly linked list:\u53cc\u5411\u94fe\u8868   demical:\u5341\u8fdb\u5236   character constant:\u5b57\u7b26\u5e38\u91cf   call functions in nest:\u5d4c\u5957\u8c03\u7528\u51fd\u6570   recursive-call:\u9012\u5f52\u8c03\u7528   prototype:\u539f\u578b   parameter:\u53c2\u6570   compound statement:\u590d\u5408\u8bed\u53e5   call sentence:\u8c03\u7528\u8bed\u53e5   be proportional to:\u548c...\u6210\u6b63\u6bd4   memory:\u5185\u5b58   randomly access:\u968f\u673a\u8bbf\u95ee   headerfile:\u5934\u6587\u4ef6   assignment statement:\u8d4b\u503c\u8bed\u53e5   rules of precedence:\u4f18\u5148\u7ea7\u6cd5\u5219   type cast:\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362   storage-class specifiers:\u5b58\u50a8\u7c7b\u578b\u8bf4\u660e\u7b26(\u5982 static,extern,auto,register)   declaration specifier:\u7c7b\u578b\u8bf4\u660e\u7b26(\u5982 int,char...)</li> <li><code>#include \"stdio.h\"</code>\u4e5f\u6b63\u786e</li> <li>C \u8bed\u8a00\u9884\u5904\u7406\u529f\u80fd\u5305\u62ec\u5b8f\u5b9a\u4e49,\u6587\u4ef6\u5305\u542b,\u6761\u4ef6\u7f16\u8bd1</li> <li>\u6587\u4ef6\u8bfb\u5199\u65f6,\u4f4d\u7f6e\u6307\u9488\u4e0d\u65ad\u6539\u53d8,\u6587\u4ef6\u6307\u9488\u4e0d\u53d8</li> <li>\u968f\u673a\u64cd\u4f5c\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6,\u4e8c\u8fdb\u5236\u6587\u4ef6\u7b49</li> <li>fseek \u53ef\u7528\u4e8e\u6587\u672c\u6587\u4ef6,\u4e5f\u53ef\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u6309\u6570\u636e\u7684\u7ec4\u7ec7\u5f62\u5f0f\u5212\u5206,\u53ef\u4ee5\u5206\u4e3a\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u51fd\u6570 fopen \u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u6b63\u786e\u683c\u5f0f\u6837\u4f8b:\"c:\\user\\text.txt\"</li> <li>0~1 \u7684\u6d6e\u70b9\u6570\u53ef\u5c06 0 \u7701\u7565\uff0c\u4f8b\u5982\uff1a0.18 \u548c.18 \u7b49\u4ef7,-0.18 \u548c-.18 \u7b49\u4ef7</li> <li><code>a=2;</code>\u5219'a'\u662f\u5b57\u7b26 a \u800c\u4e0d\u662f\u5b57\u7b26 2</li> <li><code>!a&gt;b</code>\u5148\u8ba1\u7b97<code>!a</code>,\u518d\u5224\u65ad<code>(!a)&gt;b</code></li> <li>s \u662f\u6307\u9488,s+1 \u5373\u5c06\u6307\u9488\u540e\u79fb\u4e00\u4f4d</li> <li>\u975e NULL \u7684\u6307\u9488\u903b\u8f91\u503c\u4e3a 1</li> <li><code>!0</code>\u4e3a 1,<code>!\u975e\u96f6\u6570</code>\u4e3a 0</li> <li><code>if (a-b) ...;</code>\u53ea\u8981 a!=b \u5373\u6267\u884c(\u975e\u96f6\u503c\u90fd\u6267\u884c)</li> <li>static \u53ef\u4ee5\u5e94\u7528\u4e8e\u6570,\u4e5f\u53ef\u5e94\u7528\u4e8e\u6570\u7ec4</li> <li>switch \u4e2d default \u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u4f4d\u7f6e,\u4e14\u5176\u4f5c\u7528\u76f8\u540c</li> <li><code>(int)\u6d6e\u70b9\u6570</code>:\u76f4\u63a5\u53bb\u6389\u5c0f\u6570\u90e8\u5206,\u4fdd\u7559\u6574\u6570\u90e8\u5206</li> <li><code>typedef struct stc {...} *p;</code>defines p as a pointer to struct stc</li> <li>It's illegal in C to initialize a member of struct when it's defined.   e.g. <code>struct a {int n=100};</code> is illegal.</li> <li>C \u8bed\u8a00\u4e2d true \u4e0d\u662f\u5173\u952e\u5b57</li> <li><code>a&lt;b?a:c&lt;d?c:d</code>\u7b49\u4ef7\u4e8e<code>( a &lt; b ) ? a : ( ( c &lt; d ) ? c : d )</code>,\u6ce8\u610f?\u548c:\u4ece\u91cc\u5230\u5916\u524d\u540e\u914d\u5bf9</li> <li>0123 \u8868\u793a\u516b\u8fdb\u5236,\u4e0d\u662f 123</li> <li>64 \u4f4d\u67b6\u6784\u4e2d,\u6240\u6709\u6307\u9488\u90fd\u662f 8 \u5b57\u8282</li> <li><code>unsigned short sht=0;sht--;</code>\u6267\u884c\u540e sht \u4e0b\u6ea2\u4e3a 65535</li> <li>p,q \u662f\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6307\u9488,<code>p-q</code>\u8f93\u51fa\u5728\u6570\u7ec4\u4e2d\u76f8\u5dee\u51e0\u4e2a\u5355\u4f4d,<code>(int)p-(int)q</code>\u8f93\u51fa\u5b9e\u9645\u76f8\u5dee\u51e0\u4e2a\u5b57\u7b26</li> <li><code>char s[2][3] = {\"ab\", \"cd\"}, *p=(char*)s</code>p \u4e3a\u6307\u5411 s[0] [0]\u7684\u6307\u9488,\u53ef\u4ee5\u4f9d\u6b21\u8bbf\u95ee s \u4e2d\u5143\u7d20</li> <li><code>*++p+2</code>:p -&gt; ++p -&gt; _++p -&gt; _++p+2</li> <li><code>m=a&gt;b</code>:m=(a&gt;b)</li> <li>\u6761\u4ef6\u5224\u65ad<code>str[i]!='\\0'</code>\u548c<code>str[i]</code>\u7b49\u4ef7</li> <li>\u5982\u679c\u5b57\u7b26\u6570\u7ec4\u4e2d\u6709\\ooo \u8868\u793a\u7684\u5b57\u7b26,\\ooo \u89c6\u4e3a\u5b57\u7b26\u800c\u4e0d\u5c06\\0 \u4f5c\u4e3a\u7ed3\u675f\u6807\u5fd7</li> <li>\u91ce\u6307\u9488(\u6ca1\u8d4b\u8fc7\u503c,\u4e0d\u77e5\u9053\u6307\u5411\u54ea\u91cc\u7684\u6307\u9488)\u4e0d\u80fd\u89e3\u5f15\u7528,\u4e0d\u80fd\u5199\u5165,\u53ea\u80fd\u5c06\u5b83\u6307\u5411\u67d0\u4e2a\u5730\u65b9</li> <li><code>char *s;scanf(\"%s\",s);</code>\u662f\u9519\u8bef\u7684,\u5e94\u8be5\u4f7f\u7528<code>char s[100]</code></li> <li>\u5982\u679c\u5b9a\u4e49\u65f6\u4e3a<code>char *s</code>,\u5e94\u540e\u7eed\u4f7f\u7528<code>malloc</code>,\u6216\u53e6\u5f00\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4<code>temp</code>\u7136\u540e<code>s=temp</code></li> <li><code>#ifndef</code>\u540e\u9762\u4e0d\u533a\u5206\u5927\u5c0f\u5199</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b,<code>DeQueue</code>\u8868\u793a\u961f\u9996\u51fa\u961f,<code>DeleteQueue</code>\u8868\u793a\u6e05\u7a7a\u961f\u5217.   \"\u961f\u5217\u53ef\u4ee5\u53cc\u7aef\u64cd\u4f5c\"\u6b63\u786e</li> <li>\u5d4c\u5957\u8c03\u7528\u51fd\u6570\u5b9e\u73b0\u76f8\u4f3c\u64cd\u4f5c(\u6bd4\u5982\u9012\u589e\u6392\u5e8f,\u9012\u51cf\u6392\u5e8f),\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u6307\u9488,e.g. <code>int (*cmd)(int a,int b)</code></li> <li>\u5b9a\u4e49\u51fd\u6570\u65f6\u4e0d\u58f0\u660e\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a\u8fd4\u56de int \u7684\u51fd\u6570</li> <li><code>#include &lt;math.h&gt;</code>\u540e\uff0c\u53ef\u4f7f\u7528 pow \u51fd\u6570\uff0c<code>pow(x,y)</code>(\u53ea\u8981 x^y \u6709\u5b9a\u4e49\u5373\u53ef,\u4e0d\u4e00\u5b9a\u5747\u4e3a\u6b63\u6574\u6570)</li> <li><code>printf</code>\u4e2d-\u8868\u793a\u5de6\u5bf9\u9f50,+\u8868\u793a\u663e\u793a\u6b63\u8d1f\u53f7,\u7a7a\u683c\u8868\u793a\u5982\u679c\u7b2c\u4e00\u4f4d\u4e0d\u662f\u6b63\u8d1f\u53f7\u5219\u52a0\u7a7a\u683c</li> <li>sizeof \u8f93\u51fa\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662f\u5143\u7d20\u4e2a\u6570</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_16","title":"\u9898\u76ee","text":"<p>RETURN TO THE TOP</p> <ul> <li>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _.</li> </ul> C<pre><code>int x = -1;\nprintf(\"%d\", (unsigned int)x);\n</code></pre> <p>unsigned int \u7684\u8f6c\u6362\u5e76\u4e0d\u4f1a\u6539\u53d8 x \u7684\u4e8c\u8fdb\u5236\u503c\uff08\u800c\u662f\u4ee5\u65e0\u7b26\u53f7\u7684\u65b9\u5f0f\u6765\u7406\u89e3\u8fd9\u6bb5\u6570\u636e\uff09\uff0c\u800c\u5bf9\u4e8e printf \u6765\u8bf4\uff0c\u5b83\u8981\u8f93\u51fa\u7684\u662f\u4e00\u4e2a %d\uff0c\u5373\u6709\u7b26\u53f7\u6570\uff08\u65e0\u7b26\u53f7\u7528 %u\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u8fd8\u662f\u4f1a\u5f53\u4f5c\u6709\u7b26\u53f7\u6574\u578b\u6765\u7406\u89e3\uff0c\u5373\u8f93\u51fa -1\u3002</p> <ul> <li>(C16A) For the code below:</li> </ul> C<pre><code>int a, b; char c;\nscanf(\"%d%c%d\",&amp;a,&amp;c,&amp;b);\n</code></pre> <p>If let a=1,b=2,c='+', the input C _ is NOT correct. A. 1+2&lt; ENTER &gt; B. &lt; BLANK &gt;&lt; ENTER &gt;1+&lt; ENTER &gt;2&lt; ENTER&gt; C. &lt; ENTER &gt;1&lt; ENTER &gt;+&lt; BLANK &gt;2&lt; ENTER &gt; D. &lt; BLANK &gt;&lt; BLANK &gt;1+&lt; BLANK &gt;&lt; BLANK &gt;2&lt; ENTER &gt; %d \u4f1a\u5ffd\u7565\u6570\u5b57\u5de6\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u3001\u6362\u884c\u7b49\uff09\uff0c\u800c %c \u4f1a\u7acb\u5373\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002</p> <ul> <li>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _.</li> </ul> C<pre><code>void func(int a[5]) {\n    printf(\"%d\", sizeof(a));\n}\nint main() {\n    int a[5] = {0};\n    printf(\"%d\\n\", sizeof(a));\n    func(a);\n}\n</code></pre> <p>\u8fd9\u91cc\u9996\u5148\u8f93\u51fa\u6570\u7ec4 a \u5360\u7684\u5b57\u8282\u6570\uff0c\u4e5f\u5c31\u662f 4*5=20\u3002\u7136\u540e\u5c06 a \u4f20\u5165 func \u51fd\u6570\u540e\uff0ca \u9000\u5316\u4e3a\u4e86\u6307\u9488\uff08\u5373\u4f7f\u51fd\u6570\u524d\u9762\u91cc\u7c7b\u578b\u8fd8\u662f int[5]\uff09\uff0c\u5728 func \u51fd\u6570\u4e2d\u8ba1\u7b97 sizeof(a) \u7684\u8bdd\u8f93\u51fa\u7684\u5c31\u662f\u6307\u9488\u5360\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u503c\u662f\u4e0d\u4e00\u5b9a\u7684\uff0c\u5728 32 \u4f4d\u67b6\u6784\u4e2d\u662f 4\uff0c\u5728 64 \u4f4d\u67b6\u6784\u4e2d\u662f 8\u3002</p> <ul> <li> <p>For storage-class specifiers, which one below is NOT correct? ** C _**.   B. A static global variable is not accessible by other compile units.   C. A static function is accessible by other static functions in different compile units.</p> </li> <li> <p>B:\u8fd9\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684.\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff08static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff09\u53ea\u5728\u58f0\u660e\u5b83\u7684\u7f16\u8bd1\u5355\u5143\uff08\u6e90\u6587\u4ef6\uff09\u5185\u90e8\u53ef\u89c1\u3002\u5b83\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u8bbf\u95ee\u3002\u8fd9\u79cd\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6587\u4ef6\u4f5c\u7528\u57df\uff08file scope\uff09\uff0c\u5b83\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u6216\u53d8\u91cf\u76f4\u63a5\u5f15\u7528\u3002</p> </li> <li> <p>C:\u8fd9\u4e2a\u9009\u9879\u662f\u9519\u8bef\u7684\u3002\u9759\u6001\u51fd\u6570\uff08static \u4fee\u9970\u7684\u51fd\u6570\uff09\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u7f16\u8bd1\u5355\u5143\u5185\u53ef\u89c1\u3002\u9759\u6001\u51fd\u6570\u7684\u4f5c\u7528\u57df\u662f\u6587\u4ef6\u4f5c\u7528\u57df\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u80fd\u5728\u5b9a\u4e49\u5b83\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8c03\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u4e2d\u7684\u9759\u6001\u51fd\u6570\u6216\u5176\u4ed6\u51fd\u6570\u8bbf\u95ee\u3002</p> </li> <li> <p>The fllowing program will output _ 100 ___.</p> </li> </ul> C<pre><code>#include &lt;stdio.h&gt;\ntypedef void* (*H)(int a);\nvoid* h(int a)\n{\n   if(a) printf(\"%d\", a);\n   return h;\n}\nint main(void)\n{\n   ( (H) h(0) )(100);  //\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n   return 0;\n}\n</code></pre> <ul> <li> <p>Write down the declaration of a function pointer to a void procedure(\u8fc7\u7a0b) f with   two formal parameters: the first is an integer variable, the other is a pointer to an   array of 10 integers.   __ void (*f)(int,int(*)[10]); ___</p> </li> <li> <p>When input Hello,World&lt; ENTER&gt;, what\u2019s the result after executing the following   code fragment?</p> </li> </ul> C<pre><code>char *str;\nscanf(\u201c%s\u201d, str);\nprintf(\u201c%s\u201d, str);\n</code></pre> <p>__ the program may exit abnormally __</p> <ul> <li> <p>str \u4e3a\u91ce\u6307\u9488,\u4e0d\u80fd\u8d4b\u503c</p> </li> <li> <p>\u5224\u65ad:   A. The return type of a function shall be void or an object type other than array type.</p> </li> <li> <p>\u89e3\u91ca\uff1a\u6570\u7ec4\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\u6570\u7ec4\u3002\u4e0d\u8fc7\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u6765\u95f4\u63a5\u8fd4\u56de\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\u3002     B. Each parameter of a function has automatic storage duration.</p> </li> <li>\u89e3\u91ca\uff1a\u5728 C \u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u9ed8\u8ba4\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u671f\uff08Automatic Storage Duration\uff0c\u7b80\u79f0 ASL\uff09\u3002\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u53c2\u6570\u4f1a\u5728\u6808\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5e76\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u81ea\u52a8\u9500\u6bc1\u3002\u56e0\u6b64\uff0c\u51fd\u6570\u53c2\u6570\u7684\u5b58\u50a8\u671f\u662f \u81ea\u52a8\u7684\uff0c\u9664\u975e\u7279\u522b\u6307\u5b9a\u4e3a static\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\u3002     C. After all parameters have been assigned, the compound statement that constitutes the body of the function definition is executed.</li> <li> <p>\u89e3\u91ca\uff1a\u8fd9\u53e5\u8bdd\u63cf\u8ff0\u4e86\u51fd\u6570\u6267\u884c\u7684\u57fa\u672c\u6d41\u7a0b\u3002\u51fd\u6570\u7684\u53c2\u6570\u4f1a\u5728\u51fd\u6570\u4f53\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u88ab\u8d4b\u503c\uff0c\u5e76\u4e14\u5728\u6240\u6709\u53c2\u6570\u8d4b\u503c\u4e4b\u540e\uff0c\u51fd\u6570\u4f53\u7684\u590d\u5408\u8bed\u53e5\uff08\u51fd\u6570\u4f53\uff09\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\uff0c\u7b26\u5408 C \u8bed\u8a00\u51fd\u6570\u8c03\u7528\u7684\u5e38\u89c4\u6d41\u7a0b\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u8bed\u6cd5\u6b63\u786e\u7684\u662f _.   A. for ( ); B. do { } while ( ); C. while ( ) ; D. for ( ; ; ) ;</p> </li> <li> <p>while \u7684\u62ec\u53f7\u4e2d\u5fc5\u987b\u6709\u6761\u4ef6\u5224\u65ad,BC \u9519</p> </li> <li> <p>(C13A) In the following code fragments, item _C _ is correct.   A. int *p; scanf(\"%d\", &amp;p);   B. int *p; scanf(\"%d\", p);   C. int k, *p=&amp;k; scanf(\"%d\", p);   D. int k, *p; *p=&amp;k; scanf(\"%d\", p);</p> </li> <li> <p>A. \u8fd9\u91cc\u5b9e\u9645\u4e0a\u662f\u8bfb\u5165\u4e86\u6570\u636e\u5199\u5230\u4e86 p \u6307\u9488\u7684\u7a7a\u95f4\u4e0a\uff08\u5373\u901a\u8fc7\u8f93\u5165\u6765\u7ed9\u6307\u9488\u8d4b\u503c\uff09\uff0c\u662f\u9519\u8bef\u7684\u64cd\u4f5c\uff1b</p> </li> <li>B. \u8fd9\u91cc\u8bfb\u5165\u6570\u636e\u5199\u5230\u4e86 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u800c p \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u5199\u5165\u6570\u636e\uff0c\u662f\u9519\u8bef\u7684\uff1b</li> <li>C. \u8fd9\u91cc\u5c06 k \u7684\u5730\u5740\u8d4b\u503c\u7ed9\u4e86 p\uff0c\u6240\u4ee5\u8bfb\u5165\u4f1a\u5199\u5230 k \u4e2d\uff0c\u662f\u6b63\u786e\u7684\uff0c\u9009 C\uff1b</li> <li> <p>D. \u8fd9\u91cc *p=&amp;k \u4e00\u53e5\u5b9e\u9645\u4e0a\u662f\u5c06 k \u7684\u5730\u5740\u5199\u5165 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u540c\u7406\uff0cp \u662f\u91ce\u6307\u9488\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u662f\u9519\u8bef\u7684\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u662f\u5426\u5b58\u5728\u9519\u8bef\uff0c\u5982\u679c\u6709\u8bf7\u6307\u51fa\u54ea\u91cc\u6709\u95ee\u9898 _.</p> </li> </ul> C<pre><code>char *a = \"hello\";\nchar b[] = \"hello\";\na[0] = 'H';\nb[0] = 'H';\n</code></pre> <p>\u8fd9\u91cc\u6211\u4eec\u8981\u533a\u5206\u7684\u662f a \u548c b\u3002a \u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e86 \"hello\" \u7684\u5f00\u5934\uff0c\u800c\u8fd9\u4e2a \"hello\" \u5b58\u5728\u4e8e\u9759\u6001\u5b58\u50a8\u533a\u4e2d\uff0c\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5 a[0] = 'H' \u4f1a\u5728\u8fd0\u884c\u65f6\u4ea7\u751f\u9519\u8bef\uff08\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u8fd0\u884c\u4f1a\u62a5\u9519\uff09 \u800c b \u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b83\u81ea\u5e26\u4e86\u6808\u4e0a\u7a7a\u95f4\uff0c\u5728\u521d\u59cb\u5316\u8d4b\u503c\u7684\u65f6\u5019 \"hello\" \u4f1a\u88ab\u590d\u5236\u5230 b \u7684\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5 b[0] = 'H' \u662f\u5408\u6cd5\u7684\u3002</p> <ul> <li> <p>(C13A) Given: char format[] = \"No.%d%c\"; the statement printf(format, 3, *(\"xyz\"+2)); will print out ** No.3z _**.</p> </li> <li> <p>printf\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u7531\u5b57\u7b26\u6570\u7ec4\u76f4\u63a5\u4ee3\u66ff</p> </li> <li> <p>(C14A) The value of expression !*(\"2015-01-28\"+5) is ** 0 _**</p> </li> <li> <p>\u4e00\u5b9a\u8981\u533a\u5206\u6e05\u695a '0' \u548c '\\0'\uff0c'0'==48 \u800c '\\0'==0\uff0c\u6240\u4ee5 !'0' \u662f !48 \u5373 0</p> </li> <li> <p>\u5bf9\u4e8e\u51fd\u6570\u58f0\u660e void f(char p)\uff0c\u4ee5\u4e0b\u54ea\u4e2a var \u7684\u5b9a\u4e49\u4f1a\u4f7f f(var) \u8bed\u6cd5\u9519\u8bef **_.   A. char var[10] [10];   B. char var[10];   C. void *var = NULL;   D. char *v=NULL, *var=&amp;v;</p> </li> <li> <p>A. \u4e8c\u7ef4\u6570\u7ec4\u4e0d\u80fd\u9000\u5316\u4e3a\u4e8c\u7ea7\u6307\u9488\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u9519\u7684</p> </li> <li> <p>C. \u5728 C \u8bed\u8a00\u4e2d\uff0cvoid* \u8868\u793a\u300c\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u300d\uff0c\u800c\u8fd9\u4e2a\u300c\u4efb\u610f\u7c7b\u578b\u300d\u4e5f\u53ef\u4ee5\u662f char*\uff08\u5373\u6307\u5411 char \u7684\u6307\u9488\uff09\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u4ee3\u8868\u300c\u6307\u5411\u6307\u5411 char \u7684\u6307\u9488\u7684\u6307\u9488\u300d\uff08char**\uff09\uff0c\u6240\u4ee5\u662f\u5bf9\u7684</p> </li> <li> <p>(C13A) Given the declaration: int a[ 3 ] [ 3 ]={1,2,3,4,5,6,7,8,9};, the value of a[-1] [5] is _.</p> </li> </ul> <p>\u9996\u5148\u6765\u770b a[-1]\uff0c\u5373 (a-1)\uff0ca-1 \u4f1a\u4ee5\u4e09\u4e2a int \u4e3a\u5355\u4f4d\u5411\u5de6\u79fb\u52a8\uff0c\u5373 (a-1) \u662f\u4e00\u4e2a\u6307\u5411\u5982\u4e0b\u4f4d\u7f6e\u7684\u6307\u9488\uff1a</p> Text Only<pre><code>   0 0 0 1 2 3 4 5 6 7 8 9\n   ^\n   |\n*(a-1) = p\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5c06 a[-1] \u4e5f\u5c31\u662f *(a-1) \u89c6\u4e3a p\uff0c\u90a3\u6211\u4eec\u8981\u627e\u7684\u7ed3\u679c\u5c31\u662f p[5]\uff0c\u6b64\u65f6 p \u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\uff0c*(p+5) \u5c31\u76f8\u5f53\u4e8e\u627e\u5230\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u53f3\u4fa7\u7b2c 5 \u4e2a int \u7684\u503c\uff0c\u4e5f\u5c31\u662f 3\u3002</p> <ul> <li> <p>(C14A) Given the declaration: int a[3] [2]={1,2,3,4,5,6}; what is the value of expression (a[1]+1)[0]? 4 _.   <code>a[1]+1</code>\u4e3a 4 \u7684\u4f4d\u7f6e,\u6b64\u65f6\u76f8\u5f53\u4e8e\u4ece 4 \u5f00\u59cb\u7684\u6570\u7ec4,<code>(a[1]+1)[0]</code>\u5373\u4e3a\u5f53\u524d\u4f4d\u7f6e</p> </li> <li> <p>(C17A) The following code fragment will output ** ue _**.</p> </li> </ul> C<pre><code>char *week[]={\"Mon\", \"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"}, **pw=week;\nchar c1, c2;\nc1 = (*++pw)[1];\nc2 = *++pw[1];\nprintf(\"%c#%c#\", c1, c2);\n</code></pre> <ul> <li>\u9996\u5148 c1 = (*++pw)[1]\uff0c++pw \u4f7f pw \u6307\u5411\u4e86 week[1]\uff0c\u7136\u540e (*++pw) \u5c31\u662f week[1]\uff0c\u518d [1] \u5c31\u662f week[1] [1] \u4e5f\u5c31\u662f 'u'</li> <li> <p>\u7136\u540e c2 = *++pw[1]\uff0c\u8fd9\u91cc\u7684\u7406\u89e3\u65b9\u5f0f\u4e00\u5b9a\u662f\u5bf9 pw[1] \u8fdb\u884c ++\uff0cpw[1] \u6b64\u65f6\u662f week[2]\uff0c\u7136\u540e\u5c06\u5176\u81ea\u589e\u5f97\u5230\u6307\u5411 week[2] [1] \u7684\u6307\u9488\uff0c\u518d\u89e3\u5f15\u7528\u5f97\u5230 'e'</p> </li> <li> <p>(C15A/C16A) For the declarations: char s, str[10];, statement ** D _** is completely correct.   A. strcpy(s, \"hello\");   B. str=\"hello\"+1   C. s=&amp;(str+1)   D. s=str+1   \u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u4e00\u4e2a\u91ce\u6307\u9488\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u4f1a\u4e13\u95e8\u6709\u4e00\u4e2a\u90e8\u5206   A. \u5c06 <code>\"hello\"</code> \u62f7\u8d1d\u5230 s \u6307\u5411\u7684\u7a7a\u95f4\u3002\u4f46\u662f s \u6307\u5411\u4ec0\u4e48\u5462\uff1f\u4f60\u5e76\u4e0d\u6e05\u695a\uff0c\u4e5f\u5c31\u662f\u8bf4 s \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4f60\u4e0d\u6e05\u695a\u5b83\u6307\u5411\u54ea\u91cc\uff0c\u4e5f\u5c31\u81ea\u7136\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u4e2d\u5199\u5165\u6570\u636e   B. <code>str</code> \u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u540d\u4e0d\u80fd\u88ab\u8d4b\u503c\uff0c\u6240\u4ee5\u662f\u9519\u7684   C. <code>str+1</code> \u4e0d\u80fd\u88ab\u53d6\u5730\u5740\uff0c\u56e0\u4e3a\u8fd9\u662f\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u6570\uff0c\u6240\u4ee5\u662f\u9519\u7684   D. <code>str+1</code> \u8868\u793a\u7684\u5c31\u662f <code>str</code> \u6570\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 s\uff0c\u662f\u6b63\u786e\u7684</p> </li> <li> <p>In which of the following is p a pointer variable? _ C____.   A. int* *p(); B. int *p(); C. int (*p)[5]; D. int *p[6];</p> </li> <li> <p>\u7ffb\u8bd1:\u54ea\u4e2a p \u662f\u6307\u9488\u53d8\u91cf?</p> </li> <li>A:p \u662f\u51fd\u6570\u6307\u9488,\u6307\u5411\u8fd4\u56de int*\u7684\u51fd\u6570</li> <li>B:p \u662f\u51fd\u6570,\u8fd4\u56de int*</li> <li>C:p \u662f\u6307\u5411 5 \u4e2a int \u7684\u6570\u7ec4\u7684\u6307\u9488(\u76f8\u6bd4\u4e8e int p[5],\u8fd9\u91cc\u7684 p \u4e0d\u662f\u5e38\u503c\u6307\u9488)</li> <li> <p>D:p \u662f\u5305\u542b 6 \u4e2a\u6574\u578b\u6307\u9488\u7684\u6570\u7ec4</p> </li> <li> <p>\u5df2\u77e5<code>unsigned short  m=65539;</code> \u5219\u6267\u884c\u8bed\u53e5<code>printf(\"%d\", m);</code>\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__3____.</p> </li> <li> <p><code>unsigned short</code> \u7c7b\u578b\u901a\u5e38\u662f 16 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u53d6\u503c\u8303\u56f4\u662f <code>0</code> \u5230 <code>65535</code>\u3002</p> </li> <li> <p>\u7531\u4e8e <code>65539</code> \u8d85\u51fa\u4e86 <code>unsigned short</code> \u7c7b\u578b\u7684\u6700\u5927\u503c\uff08<code>65535</code>\uff09\uff0c\u6240\u4ee5\u8d4b\u503c <code>65539</code> \u4f1a\u5bfc\u81f4\u6570\u503c\u6ea2\u51fa\u3002\u5177\u4f53\u6ea2\u51fa\u7684\u65b9\u5f0f\u662f\uff1a\u5c06 <code>65539</code> \u5bf9 <code>65536</code> \u53d6\u6a21\uff0c\u5f97\u5230 <code>65539 % 65536 = 3</code>\u3002</p> </li> <li> <p>14.\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_z#yz#xyz#___\uff0e</p> </li> </ul> C<pre><code>char s[]=\"xyz\", *ps=s;\nwhile (*ps++);   ps--;\nfor(ps--; ps-s&gt;=0; ps--) printf(\"%s#\",ps);\n</code></pre> <ul> <li> <p>*p++\u540e p \u6307\u5411\\0 \u540e\u4e00\u4f4d</p> </li> <li> <p>\u5047\u8bbe\u5df2\u6709\u7ed3\u6784\u7c7b\u578b\u5b9a\u4e49\uff1astruct point { int a, int b }\uff1b\u8bf7\u7528 typedef \u628a\u5177\u6709 5 \u4e2a\u4e0a\u8ff0\u7ed3\u6784\u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\u7c7b\u578b\u91cd\u65b0\u547d\u540d\u4e3a RECT\uff0c\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a_typedef struct point RECT[5] ___;</p> </li> <li> <p>\u901a\u8fc7 <code>typedef</code> \u5173\u952e\u5b57\uff0c\u6211\u4eec\u4e3a <code>struct point[5]</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u522b\u540d <code>RECT</code>\u3002\u8fd9\u610f\u5473\u7740\uff0c<code>RECT</code> \u662f\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\uff0c\u8868\u793a\u4e00\u4e2a\u5305\u542b 5 \u4e2a <code>struct point</code> \u5143\u7d20\u7684\u6570\u7ec4\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4ee5\u4e0b\u4ee3\u7801\u6bb5\uff0c\u82e5\u8f93\u5165\u201c12e-0x34.56\u201d\uff08\u4e0d\u542b\u5f15\u53f7\uff09\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f_12.00x34__.</p> </li> </ul> C<pre><code>float f; char c; int d;\nscanf(\"%f%c%d\", &amp;f, &amp;c, &amp;d);\nprintf(\"%.2f%c%d\", f, c, d);\n</code></pre> <ul> <li> <ul> <li>12e-0 \u7b49\u4ef7\u4e8e 12e0 \u7b49\u4ef7\u4e8e 12</li> </ul> </li> <li>c \u4e3a x</li> <li> <p>d \u4e3a 34</p> </li> <li> <p>\u82e5\u6709\u4ee5\u4e0b\u7684\u5b9a\u4e49\u548c\u8bed\u53e5\uff0c\u5219\u7a0b\u5e8f\u6bb5\u8fd0\u884c\u7684\u7ed3\u679c\u662f_32_****.</p> </li> </ul> C<pre><code>struct wc{ int a;int *b;}\\*p;\nint x0[]={11,12}, x1[]={31,32};\nstruct wc x[2]={100,x0,300,x1};\np=x;\nprintf(\"%d \",*++(++p)-&gt;b);\n</code></pre> <ul> <li> <ul> <li>\u8fd0\u7b97\u987a\u5e8f\u603b\u7ed3\uff1a</li> </ul> </li> <li> <p><code>++p</code>\uff1a\u5c06\u6307\u9488 <code>p</code> \u4ece <code>x[0]</code> \u9012\u589e\u5230 <code>x[1]</code>\u3002</p> </li> <li><code>(++p)-&gt;b</code>\uff1a\u8bbf\u95ee <code>x[1].b</code>\uff0c\u5b83\u6307\u5411\u6570\u7ec4 <code>x1</code>\u3002</li> <li><code>++(++p)-&gt;b)</code>\uff1a\u9012\u589e <code>p-&gt;b</code> \u6307\u9488\uff0c\u6307\u5411 <code>x1[1]</code>\uff08\u503c\u4e3a <code>32</code>\uff09\u3002</li> <li> <p><code>*++(++p)-&gt;b</code>\uff1a\u89e3\u5f15\u7528 <code>p-&gt;b</code>\uff0c\u5373\u89e3\u5f15\u7528 <code>x1[1]</code>\uff0c\u5f97\u5230\u503c <code>32</code>\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f__first string____.</p> </li> </ul> C<pre><code>#include&lt;stdio.h&gt;\n#define F \"first %s\"\n#define D \"string\"\nvoid main( )\n{   char string[ ] = \"character\";\n printf( F, D );\n}\n</code></pre> <ul> <li>\u7a0b\u5e8f\u4e2d\u7684 <code>printf</code> \u8bed\u53e5\uff1a</li> </ul> C<pre><code>printf( F, D );\n</code></pre> <ul> <li><code>F</code> \u88ab\u5c55\u5f00\u4e3a <code>\"first %s\"</code>\uff0c\u6240\u4ee5\u5b9e\u9645\u8c03\u7528\u7684\u662f <code>printf(\"first %s\", D)</code>\u3002</li> <li><code>D</code> \u88ab\u5c55\u5f00\u4e3a <code>\"string\"</code>\uff0c\u56e0\u6b64 <code>printf</code> \u8bed\u53e5\u53d8\u4e3a <code>printf(\"first %s\", \"string\")</code>\u3002</li> <li> <p><code>D</code>\u672c\u8eab\u662f\u5b57\u7b26\u4e32,\u4e0d\u4f1a\u66ff\u6362\u6210<code>string</code></p> </li> <li> <p>\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u662f_7_.</p> </li> </ul> C<pre><code>int c=0,k;\nfor (k=1;k&lt;3;k++)\n   switch (k)\n   {\n      default: c+=k;\n      case 2: c++;\n      case 4: c+=2;\n   }\nprintf(\"%d\\n\",c);\n</code></pre> <ul> <li> <p>\u6ca1\u6709<code>break</code>,\u4f1a\u4ece\u5339\u914d\u7684\u4e00\u9879\u5f00\u59cb\u6267\u884c\u4e4b\u540e\u7684\u6240\u6709\u9879</p> </li> <li> <p>\u5404\u79cd\u7c7b\u578b\u8868\u793a\u7684\u6570\u7684\u8303\u56f4</p> </li> <li>\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u662f <code>-2^(n-1)</code> \u5230 <code>2^(n-1) - 1</code>\uff0c\u5176\u4e2d <code>n</code> \u662f\u4f4d\u6570\u3002</li> <li>\u65e0\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u662f <code>0</code> \u5230 <code>2^n - 1</code>\uff0c\u5176\u4e2d <code>n</code> \u662f\u4f4d\u6570\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#32-64","title":"\u5e38\u89c1\u7c7b\u578b\u53ca\u5176\u53d6\u503c\u8303\u56f4\uff08\u4ee5 32 \u4f4d\u548c 64 \u4f4d\u7cfb\u7edf\u4e3a\u4f8b\uff09\uff1a","text":"<ul> <li><code>char</code>: <code>signed char</code> \u8303\u56f4 <code>-128</code> \u5230 <code>127</code>\uff0c<code>unsigned char</code> \u8303\u56f4 <code>0</code> \u5230 <code>255</code></li> <li><code>short</code>: <code>signed short</code> \u8303\u56f4 <code>-32,768</code> \u5230 <code>32,767</code>\uff0c<code>unsigned short</code> \u8303\u56f4 <code>0</code> \u5230 <code>65,535</code></li> <li><code>int</code>: <code>signed int</code> \u8303\u56f4 <code>-2,147,483,648</code> \u5230 <code>2,147,483,647</code>\uff0c<code>unsigned int</code> \u8303\u56f4 <code>0</code> \u5230 <code>4,294,967,295</code></li> <li><code>long</code>: <code>signed long</code> \u8303\u56f4 <code>-2,147,483,648</code> \u5230 <code>2,147,483,647</code>\uff0c<code>unsigned long</code> \u8303\u56f4 <code>0</code> \u5230 <code>4,294,967,295</code>\uff0832 \u4f4d\uff09</li> <li><code>long long</code>: <code>signed long long</code> \u8303\u56f4 <code>-9,223,372,036,854,775,808</code> \u5230 <code>9,223,372,036,854,775,807</code>\uff0c<code>unsigned long long</code> \u8303\u56f4 <code>0</code> \u5230 <code>18,446,744,073,709,551,615</code></li> <li><code>float</code>: \u8303\u56f4 <code>1.5 \u00d7 10^\u221245</code> \u5230 <code>3.4 \u00d7 10^38</code></li> <li><code>double</code>: \u8303\u56f4 <code>5.0 \u00d7 10^\u2212324</code> \u5230 <code>1.7 \u00d7 10^308</code></li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_17","title":"\u77e5\u8bc6\u70b9","text":"<p>RETURN TO THE TOP</p> <ul> <li> <p>\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u5f62\u5f0f</p> </li> <li> <p>printf:<code>printf(\"%s\",s);</code></p> </li> <li>fprintf:<code>fprintf(fp,\"%s\",s);</code></li> <li> <p>sprintf:<code>sprintf(str,\"%s\",s);</code></p> </li> <li> <p>scanf:<code>scanf(\"%d\",&amp;a);</code></p> </li> <li>fscanf:<code>fscanf(fp,\"%d\",&amp;a);</code></li> <li> <p>sscanf:<code>sscanf(str,\"%d\",&amp;a);</code></p> </li> <li> <p>getc:<code>c=getc(fp);</code>\u6216<code>c=getc(stdin);</code></p> </li> <li>fgetc:<code>c=fgetc(fp);</code></li> <li> <p>getchar:<code>c=getchar();</code></p> </li> <li> <p>putc:<code>putc('A',fp);</code>\u6216<code>putc('A',stdout);</code></p> </li> <li>fputc:<code>fputc('A',fp);</code></li> <li> <p>putchar:<code>putchar('A');</code></p> </li> <li> <p>gets:\u4e0d\u4f7f\u7528</p> </li> <li> <p>fgets:<code>fgets(str,100,fp);</code>\u6216<code>fgets(str,100,stdin);</code> \u4fdd\u7559'\\n'</p> </li> <li> <p>puts:<code>puts(str);</code> \u81ea\u52a8\u6dfb\u52a0'\\n'</p> </li> <li>fputs:<code>fputs(str,fp);</code>\u6216<code>fputs(str,stdout);</code> \u4e0d\u6dfb\u52a0'\\n'</li> </ul> <p>\u8fd4\u56de\u503c:</p> \u51fd\u6570\u540d \u6b63\u5e38\u65f6\u8fd4\u56de\u503c \u9519\u8bef\u65f6\u8fd4\u56de\u503c <code>printf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>fprintf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>sprintf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>scanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>fscanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>sscanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>getc</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>fgetc</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>getchar</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>putc</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>fputc</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>putchar</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>gets</code> \u5b57\u7b26\u4e32\u6307\u9488 <code>NULL</code> <code>fgets</code> \u5b57\u7b26\u4e32\u6307\u9488 <code>NULL</code> <code>puts</code> \u975e\u8d1f\u503c <code>EOF</code> <code>fputs</code> \u975e\u8d1f\u503c <code>EOF</code> <ul> <li>\u5173\u4e8e<code>typedef</code>   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>typedef</code> \u7528\u6765\u4e3a\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u540d\u79f0\uff0c\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\u6240\u4ee5\uff0c<code>typedef</code> \u540e\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u540d\u79f0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>typedef</code> \u4e3a\u73b0\u6709\u7c7b\u578b\uff08\u5305\u62ec\u57fa\u7840\u6570\u636e\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u7b49\uff09\u91cd\u65b0\u547d\u540d\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#1","title":"1. \u4e3a\u57fa\u7840\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":""},{"location":"CourseNotes/C%20Programming/CNote/#2","title":"2. \u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":""},{"location":"CourseNotes/C%20Programming/CNote/#3","title":"3. \u4e3a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":"C<pre><code>typedef int (*FunctionPointer)(int);  // \u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u522b\u540d 'FunctionPointer'\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u8fd4\u56de int \u7c7b\u578b\u5e76\u63a5\u53d7 int \u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\nFunctionPointer fp;                   // 'fp' \u73b0\u5728\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u7b26\u5408\u8fd9\u4e2a\u7c7b\u578b\u7684\u51fd\u6570\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#4","title":"4. \u76f4\u63a5\u4e3a\u6570\u7ec4\u7c7b\u578b\u6307\u5b9a\u522b\u540d\uff1a","text":"C<pre><code>typedef int Array[10];  // \u4e3a 'int[10]' \u6570\u7ec4\u7c7b\u578b\u5b9a\u4e49\u522b\u540d 'Array'\nArray arr;              // 'arr' \u5c31\u662f\u4e00\u4e2a\u5305\u542b 10 \u4e2a int \u7684\u6570\u7ec4\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#5","title":"5. \u76f4\u63a5\u4e3a\u6307\u9488\u7c7b\u578b\u6307\u5b9a\u522b\u540d\uff1a","text":"C<pre><code>typedef int* IntPointer;  // \u4e3a 'int*' \u6307\u9488\u7c7b\u578b\u5b9a\u4e49\u522b\u540d 'IntPointer'\nIntPointer ptr;           // 'ptr' \u73b0\u5728\u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\n</code></pre> <ul> <li>\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217</li> <li><code>\\ooo</code></li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_18","title":"\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u7684\u89c4\u5219\uff1a","text":"<ul> <li>\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u4ee5\u53cd\u659c\u6760\uff08<code>\\</code>\uff09\u5f00\u59cb\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u6216\u4e24\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u3002</li> <li>\u6bcf\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u53ea\u80fd\u662f <code>0</code> \u5230 <code>7</code> \u4e4b\u95f4\u7684\u6570\u5b57\u3002</li> <li> <p>\u516b\u8fdb\u5236\u6570\u5b57\u6700\u591a\u53ef\u4ee5\u6709\u4e09\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff08\u5373 8 \u4f4d\uff09\u3002\u56e0\u6b64\uff0c\u6700\u591a\u53ef\u4ee5\u8868\u793a\u7684\u503c\u662f <code>\\377</code>\uff0c\u5373 255\uff08\u5341\u8fdb\u5236\uff09\u3002</p> </li> <li> <p>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217</p> </li> <li><code>\\xhh</code>   \u5176\u4e2d <code>hh</code> \u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\uff08\u53ef\u4ee5\u662f 0-9 \u6216 A-F\uff09\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u7801\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_19","title":"\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u7684\u89c4\u5219\uff1a","text":"<ul> <li>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u4ee5 <code>\\x</code> \u5f00\u5934\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6216\u591a\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u3002</li> <li>\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u662f <code>0</code> \u5230 <code>9</code> \u6216 <code>A</code> \u5230 <code>F</code> \u4e4b\u95f4\u7684\u5b57\u7b26\u3002</li> <li>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u6700\u591a\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff08\u5373 8 \u4f4d\uff09\uff0c\u6240\u4ee5\u5b83\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece <code>\\x00</code> \u5230 <code>\\xFF</code>\uff08\u5373 0 \u5230 255\uff09\u3002</li> </ul> C<pre><code>typedef struct s {\n    ...\n} new ; //\u6709typedef\u65f6new\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b,\u6ca1\u6709typedef\u65f6new\u4e3a\u7ed3\u6784\u4f53\u53d8\u91cf\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#union","title":"union","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nunion Data {\n    int i;\n    float f;\n    char str[4];\n};\n\nint main() {\n    union Data data;\n\n    // \u4f7f\u7528\u8054\u5408\u4f53\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\n    data.i = 1234;\n    printf(\"int: %d\\n\", data.i);  //1234\n    printf(\"float: %f\\n\", data.f);  //\u6574\u578b\u7684\u4e8c\u8fdb\u5236\u5bf9\u6d6e\u70b9\u6570\u800c\u8a00\u6ca1\u6709\u610f\u4e49,\u8f93\u51fa\u968f\u673a\u6d6e\u70b9\u6570\n    printf(\"str: %s\\n\", data.str);  //1234\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0d\u5bf9\u5e94ASCII\u7801,\u8f93\u51fa\u968f\u673a\u5b57\u7b26\u4e32\n\n    // \u8054\u5408\u4f53\u7684\u5185\u5b58\u5171\u4eab\u7279\u6027\n    data.f = 3.14f;\n    printf(\"float: %f\\n\", data.f);\n    printf(\"int: %d\\n\", data.i);\n    printf(\"str: %s\\n\", data.str);\n\n    // \u4f4d\u5b57\u6bb5\u64cd\u4f5c\n    data.i = 0;\n    data.str[0] = 0xAB; // \u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u5b57\u8282\n    printf(\"int: %d\\n\", data.i); // \u8f93\u51fa\u6574\u578b\u503c\uff0c\u89c2\u5bdf\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u53d8\u5316\n\n    return 0;\n}\n</code></pre> <ul> <li>\u6c47\u7f16\u4ee3\u7801</li> <li> <p>\u6c47\u7f16\u4ee3\u7801\u662f\u4e00\u79cd\u4f4e\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5458\u7528\u63a5\u8fd1\u673a\u5668\u6307\u4ee4\u7684\u65b9\u5f0f\u6765\u7f16\u5199\u7a0b\u5e8f\uff0c\u76f4\u63a5\u63a7\u5236\u786c\u4ef6\u8d44\u6e90\u3002\u6bcf\u6761\u6c47\u7f16\u6307\u4ee4\u901a\u5e38\u5bf9\u5e94\u4e8e CPU \u7684\u4e00\u6761\u673a\u5668\u6307\u4ee4\uff0c\u5177\u6709\u9ad8\u6548\u7387\u548c\u5e73\u53f0\u4f9d\u8d56\u6027\uff0c\u4f46\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u8f83\u5dee\u3002</p> </li> <li> <p>IDE</p> </li> <li> <p>IDE \u662f\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff09\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7f16\u5199\u3001\u8c03\u8bd5\u548c\u6d4b\u8bd5\u4ee3\u7801\u7684\u7efc\u5408\u6027\u5de5\u5177\u3002IDE \u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u529f\u80fd\uff1a</p> </li> <li> <p>\u4ee3\u7801\u7f16\u8f91\u5668\uff1a\u63d0\u4f9b\u8bed\u6cd5\u9ad8\u4eae\u3001\u4ee3\u7801\u8865\u5168\u3001\u4ee3\u7801\u683c\u5f0f\u5316\u7b49\u7f16\u8f91\u529f\u80fd\u3002</p> </li> <li>\u7f16\u8bd1\u5668\u6216\u89e3\u91ca\u5668\uff1a\u5c06\u7f16\u5199\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002</li> <li>\u8c03\u8bd5\u5668\uff1a\u5e2e\u52a9\u5f00\u53d1\u8005\u67e5\u627e\u548c\u4fee\u590d\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u3002</li> <li>\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff1a\u7ba1\u7406\u9879\u76ee\u6587\u4ef6\u548c\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u7248\u672c\u63a7\u5236\uff1a\u96c6\u6210 Git \u7b49\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u65b9\u4fbf\u4ee3\u7801\u7684\u7248\u672c\u7ba1\u7406\u548c\u56e2\u961f\u534f\u4f5c\u3002</li> <li>\u6570\u636e\u5e93\u7ba1\u7406\uff1a\u4e00\u4e9b IDE \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u548c\u7ba1\u7406\u529f\u80fd\u3002</li> <li>\u7528\u6237\u754c\u9762\u8bbe\u8ba1\uff1a\u5bf9\u4e8e\u56fe\u5f62\u754c\u9762\u5e94\u7528\u7a0b\u5e8f\uff0cIDE \u53ef\u80fd\u5305\u542b\u754c\u9762\u8bbe\u8ba1\u5de5\u5177\u3002</li> <li>\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff1a\u68c0\u67e5\u4ee3\u7801\u8d28\u91cf\u548c\u6f5c\u5728\u7684\u9519\u8bef\u3002</li> <li> <p>\u63d2\u4ef6\u548c\u6269\u5c55\uff1a\u8bb8\u591a IDE \u652f\u6301\u63d2\u4ef6\uff0c\u4ee5\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002</p> </li> <li> <p>argc \u600e\u4e48\u8ba1\u6570   <code>argc</code> \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\u3002\u5b83\u7531\u64cd\u4f5c\u7cfb\u7edf\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u8bbe\u7f6e\uff0c\u5e76\u4f20\u9012\u7ed9\u7a0b\u5e8f\u3002<code>argc</code> \u8ba1\u6570\u7684\u662f\uff1a</p> </li> <li> <p>\u7a0b\u5e8f\u540d\uff08<code>argv[0]</code>\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002</p> </li> <li>\u901a\u8fc7\u547d\u4ee4\u884c\u8f93\u5165\u7684\u53c2\u6570\uff0c\u6bcf\u4e2a\u53c2\u6570\u7528\u7a7a\u683c\u5206\u9694\u3002\u6bcf\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u5355\u8bcd\u90fd\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_20","title":"\u5177\u4f53\u8ba1\u6570\u89c4\u5219\uff1a","text":"<ul> <li><code>argc</code> \u7684\u503c\u662f\u53c2\u6570\u4e2a\u6570\uff0c\u5305\u542b\u7a0b\u5e8f\u540d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>argc</code> \u7684\u503c\u603b\u662f\u81f3\u5c11\u4e3a 1\uff0c\u56e0\u4e3a <code>argv[0]</code> \u5b58\u50a8\u4e86\u7a0b\u5e8f\u7684\u540d\u79f0\u3002</li> <li>\u5982\u679c\u547d\u4ee4\u884c\u6ca1\u6709\u989d\u5916\u7684\u53c2\u6570\uff0c<code>argc</code> \u4e3a 1\uff0c\u4ec5\u5305\u542b\u7a0b\u5e8f\u540d\u3002</li> <li>\u5982\u679c\u547d\u4ee4\u884c\u6709\u591a\u4e2a\u53c2\u6570\uff0c<code>argc</code> \u4f1a\u968f\u7740\u989d\u5916\u7684\u53c2\u6570\u589e\u52a0\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_21","title":"\u4f8b\u5b50\uff1a","text":"<ol> <li>\u7b80\u5355\u547d\u4ee4\u884c\u8f93\u5165\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram\n</code></pre> <p><code>argc = 1</code>\uff0c\u53ea\u6709\u7a0b\u5e8f\u540d <code>./myprogram</code>\u3002</p> <ol> <li>\u547d\u4ee4\u884c\u6709\u4e00\u4e2a\u53c2\u6570\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram hello\n</code></pre> <p><code>argc = 2</code>\uff0c<code>argv[0] = \"./myprogram\"</code>\uff0c<code>argv[1] = \"hello\"</code>\u3002</p> <ol> <li>\u547d\u4ee4\u884c\u6709\u591a\u4e2a\u53c2\u6570\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram hello world 123\n</code></pre> <p><code>argc = 4</code>\uff0c<code>argv[0] = \"./myprogram\"</code>, <code>argv[1] = \"hello\"</code>, <code>argv[2] = \"world\"</code>, <code>argv[3] = \"123\"</code>\u3002</p> <ol> <li>\u5e26\u7a7a\u683c\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1a    \u5982\u679c\u53c2\u6570\u672c\u8eab\u5305\u542b\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f15\u53f7\u5c06\u5176\u5305\u56f4\uff0c\u547d\u4ee4\u884c\u53ea\u4f1a\u5c06\u6574\u4e2a\u5f15\u53f7\u5185\u7684\u5185\u5bb9\u5f53\u4f5c\u4e00\u4e2a\u53c2\u6570\u3002\u6bd4\u5982\uff1a    Bash<pre><code>$ ./myprogram \"hello world\"\n</code></pre> <code>argc = 2</code>\uff0c<code>argv[0] = \"./myprogram\"</code>, <code>argv[1] = \"hello world\"</code>\u3002</li> </ol>"},{"location":"CourseNotes/C%20Programming/CNote/#argc-argv","title":"<code>argc</code> \u548c <code>argv</code> \u4f8b\u5b50\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[]) {\n    printf(\"argc = %d\\n\", argc); // \u8f93\u51fa\u53c2\u6570\u4e2a\u6570\n\n    // \u6253\u5370\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"argv[%d] = %s\\n\", i, argv[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#_22","title":"\u8fd0\u884c\u7ed3\u679c\uff1a","text":"<p>\u5047\u8bbe\u8fd0\u884c\u547d\u4ee4\uff1a</p> Bash<pre><code>$ ./myprogram how are you\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>argc = 4\nargv[0] = ./myprogram\nargv[1] = how\nargv[2] = are\nargv[3] = you\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#_23","title":"\u603b\u7ed3\uff1a","text":"<ul> <li><code>argc</code> \u8ba1\u6570\u7684\u662f\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u5305\u542b\u7a0b\u5e8f\u540d\u3002</li> <li>\u6bcf\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u7684\u90e8\u5206\u90fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_24","title":"\u6587\u4ef6\u3001\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<ul> <li>Q&amp;A</li> <li>\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u4ee3\u7801</li> <li>fopen</li> <li>fclose</li> <li>fscanf</li> <li>fprintf</li> <li>fgetc</li> <li>fputc</li> <li>fread</li> <li>fwrite</li> <li>fseek</li> <li>feof</li> <li>linux \u6587\u4ef6\u8f93\u5165\u8f93\u51fa</li> <li>cat</li> </ul> <p> 1.\u6587\u4ef6\u6307\u9488\u548c\u4f4d\u7f6e\u6307\u9488\u662f\u4ec0\u4e48\uff1f \u6587\u4ef6\u6307\u9488\u548c\u4f4d\u7f6e\u6307\u9488\u662f\u6587\u4ef6\u64cd\u4f5c\u4e2d\u5e38\u7528\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u5728 C \u8bed\u8a00\u7b49\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5c24\u5176\u91cd\u8981\u3002 \u6587\u4ef6\u6307\u9488\uff1a \u6587\u4ef6\u6307\u9488\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff08\u5728 C \u8bed\u8a00\u4e2d\u901a\u5e38\u4e3a<code>FILE*</code>\u7c7b\u578b\uff09\uff0c\u5b83\u7528\u4e8e\u5728\u7a0b\u5e8f\u4e2d\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u3002\u5f53\u4f60\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6307\u9488\u6765\u8fdb\u884c\u8bfb\u3001\u5199\u3001\u5173\u95ed\u7b49\u64cd\u4f5c\u3002\u6587\u4ef6\u6307\u9488\u76f8\u5f53\u4e8e\u6587\u4ef6\u7684\u201c\u628a\u624b\u201d\uff0c\u901a\u8fc7\u5b83\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6\u7684\u5185\u5bb9\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 C \u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528<code>fopen</code>\u51fd\u6570\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e76\u83b7\u53d6\u5176\u6587\u4ef6\u6307\u9488\uff1a</p> C<pre><code>FILE *fp = fopen(\"example.txt\", \"r\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\nif (fp != NULL) {\n    // \u4f7f\u7528fp\u8fdb\u884c\u6587\u4ef6\u64cd\u4f5c\n    fclose(fp); // \u64cd\u4f5c\u5b8c\u6210\u540e\u5173\u95ed\u6587\u4ef6\n}\n</code></pre> <p>\u4f4d\u7f6e\u6307\u9488\uff1a \u4f4d\u7f6e\u6307\u9488\uff08\u6216\u79f0\u4e3a\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\uff09\u662f\u4e00\u4e2a\u5185\u90e8\u6307\u9488\uff0c\u5b83\u6307\u793a\u5f53\u524d\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u3002\u5f53\u4f60\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\u65f6\uff0c\u4f4d\u7f6e\u6307\u9488\u4f1a\u6839\u636e\u8bfb\u53d6\u6216\u5199\u5165\u7684\u6570\u636e\u91cf\u81ea\u52a8\u79fb\u52a8\u3002\u4f4d\u7f6e\u6307\u9488\u5bf9\u4e8e\u968f\u673a\u8bbf\u95ee\u6587\u4ef6\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7a0b\u5e8f\u8df3\u8f6c\u5230\u6587\u4ef6\u7684\u4efb\u610f\u4f4d\u7f6e\u3002 \u5728 C \u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u64cd\u4f5c\u4f4d\u7f6e\u6307\u9488\uff1a</p> <ul> <li><code>fseek()</code>\uff1a\u7528\u4e8e\u5b9a\u4f4d\u6587\u4ef6\u6307\u9488\u5230\u6587\u4ef6\u4e2d\u7684\u6307\u5b9a\u4f4d\u7f6e\u3002</li> <li><code>ftell()</code>\uff1a\u8fd4\u56de\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</li> <li><code>rewind()</code>\uff1a\u5c06\u4f4d\u7f6e\u6307\u9488\u91cd\u7f6e\u5230\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002   \u4f8b\u5982\uff1a</li> </ul> C<pre><code>FILE *fp = fopen(\"example.txt\", \"r\");\nif (fp != NULL) {\n    fseek(fp, 10, SEEK_SET); // \u5c06\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u7684\u7b2c10\u4e2a\u5b57\u8282\n    long pos = ftell(fp); // \u83b7\u53d6\u5f53\u524d\u4f4d\u7f6e\u6307\u9488\u7684\u503c\n    printf(\"Current position in file: %ld\\n\", pos);\n    fclose(fp);\n}\n</code></pre> <p>\u603b\u7ed3\u6765\u8bf4\uff0c\u6587\u4ef6\u6307\u9488\u662f\u7a0b\u5e8f\u64cd\u4f5c\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u800c\u4f4d\u7f6e\u6307\u9488\u7528\u4e8e\u5728\u6587\u4ef6\u5185\u90e8\u8fdb\u884c\u5b9a\u4f4d\u3002\u4e24\u8005\u5728\u6587\u4ef6\u64cd\u4f5c\u4e2d\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002</p> <p>2.\u968f\u673a\u64cd\u4f5c\u53ea\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6\u5417\uff1f</p> <p>\u4e0d\u662f\u7684\uff0c\u968f\u673a\u64cd\u4f5c\u4e0d\u4ec5\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u4e5f\u9002\u7528\u4e8e\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u5305\u542b\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u662f\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u4ee3\u7801\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u6216\u5176\u4ed6\u590d\u6742\u7684\u5bf9\u8c61\u3002\u968f\u673a\u64cd\u4f5c\u5728\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\u975e\u5e38\u5e38\u89c1\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u6587\u4ef6\u4e2d\u7684\u7279\u5b9a\u5b57\u8282\u6216\u6570\u636e\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u5e93\u6587\u4ef6\uff1a\u6570\u636e\u5e93\u6587\u4ef6\u901a\u5e38\u8bbe\u8ba1\u4e3a\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u5feb\u901f\u68c0\u7d22\u548c\u66f4\u65b0\u8bb0\u5f55\u3002\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08DBMS\uff09\u5229\u7528\u7d22\u5f15\u548c\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u968f\u673a\u8bbf\u95ee\u64cd\u4f5c\u3002</li> <li>\u65e5\u5fd7\u6587\u4ef6\uff1a\u867d\u7136\u65e5\u5fd7\u6587\u4ef6\u901a\u5e38\u662f\u987a\u5e8f\u5199\u5165\u7684\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u4ee5\u652f\u6301\u968f\u673a\u8bfb\u53d6\uff0c\u4ee5\u4fbf\u5206\u6790\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u4e8b\u4ef6\u3002</li> <li>\u914d\u7f6e\u6587\u4ef6\uff1a\u914d\u7f6e\u6587\u4ef6\u901a\u5e38\u4ee5\u6587\u672c\u5f62\u5f0f\u5b58\u50a8\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u4ee5\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\u3002\u968f\u673a\u64cd\u4f5c\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u8bfb\u53d6\u7279\u5b9a\u7684\u914d\u7f6e\u9879\u3002</li> <li> <p>\u7d22\u5f15\u6587\u4ef6\uff1a\u7d22\u5f15\u6587\u4ef6\u5305\u542b\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u5176\u4ed6\u6570\u636e\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5b83\u4eec\u4f9d\u8d56\u4e8e\u968f\u673a\u8bbf\u95ee\u6765\u9ad8\u6548\u5730\u5de5\u4f5c\u3002    \u968f\u673a\u64cd\u4f5c\u7684\u5173\u952e\u5728\u4e8e\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u662f\u5426\u652f\u6301\u5feb\u901f\u5b9a\u4f4d\u5230\u7279\u5b9a\u4f4d\u7f6e\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u652f\u6301\u968f\u673a\u64cd\u4f5c\u7684\u5b58\u50a8\u4ecb\u8d28\u548c\u6570\u636e\u7ed3\u6784\uff1a</p> </li> <li> <p>\u786c\u76d8\u9a71\u52a8\u5668\uff08HDD\uff09\u548c\u56fa\u6001\u9a71\u52a8\u5668\uff08SSD\uff09\uff1a\u8fd9\u4e9b\u5b58\u50a8\u8bbe\u5907\u5141\u8bb8\u968f\u673a\u8bfb\u5199\u64cd\u4f5c\u3002</p> </li> <li>\u6570\u7ec4\uff1a\u5728\u5185\u5b58\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\u4efb\u4f55\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</li> <li>\u54c8\u5e0c\u8868\uff1a\u54c8\u5e0c\u8868\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u63d0\u4f9b\u5feb\u901f\u7684\u968f\u673a\u8bbf\u95ee\u80fd\u529b\u3002   \u603b\u7684\u6765\u8bf4\uff0c\u53ea\u8981\u6587\u4ef6\u683c\u5f0f\u548c\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u5141\u8bb8\uff0c\u968f\u673a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5e94\u7528\u4e8e\u591a\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6587\u672c\u6587\u4ef6\u3002</li> </ol> <p>3.\"a\"\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u540e\uff0c\u6587\u4ef6\u6307\u9488\u6307\u5411\u54ea\u91cc\uff1f \u5f53\u4f7f\u7528 \u201ca\u201d \u6a21\u5f0f\uff08\u8ffd\u52a0\u6a21\u5f0f\uff09\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u6307\u9488\u4f1a\u6307\u5411\u6587\u4ef6\u7684\u672b\u5c3e\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u4efb\u4f55\u5199\u5165\u64cd\u4f5c\u90fd\u4f1a\u5728\u6587\u4ef6\u7684\u73b0\u6709\u5185\u5bb9\u4e4b\u540e\u6dfb\u52a0\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u8986\u76d6\u73b0\u6709\u5185\u5bb9\u3002</p> <p>4.\u6587\u4ef6\u7684\u8bfb\u51fd\u6570\u5c06\u8bfb\u5165\u7684\u4fe1\u606f\u5b58\u653e\u5728\u54ea\u91cc\uff1f \u5728 C \u8bed\u8a00\u4e2d\uff0c\u6587\u4ef6\u7684\u8bfb\u51fd\u6570\uff08\u5982 <code>fread</code>\u3001<code>fgets</code>\u3001<code>fgetc</code> \u7b49\uff09\u4f1a\u5c06\u8bfb\u53d6\u7684\u4fe1\u606f\u5b58\u653e\u5728\u4f60\u6307\u5b9a\u7684\u7f13\u51b2\u533a\uff08buffer\uff09\u4e2d\u3002\u8fd9\u4e2a\u7f13\u51b2\u533a\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8\u91cf\u3001\u4e00\u4e2a\u6570\u7ec4\u6216\u8005\u4efb\u4f55\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u8981\u5b83\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u8bfb\u53d6\u7684\u6570\u636e\u3002 \u7f13\u51b2\u533a\u662f\u5185\u5b58\u5417\uff1f \u662f\u7684\uff0c\u7f13\u51b2\u533a\u662f\u5185\u5b58\u4e2d\u9884\u7559\u7684\u4e00\u5757\u533a\u57df\uff0c\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u6570\u636e\u3002\u5728\u6587\u4ef6\u64cd\u4f5c\u4e2d\uff0c\u7f13\u51b2\u533a\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u6570\u636e\u6216\u8005\u5373\u5c06\u5199\u5165\u6587\u4ef6\u7684\u6570\u636e\u3002 \u7f13\u51b2\u533a\u7684\u4f7f\u7528\u6709\u51e0\u4e2a\u76ee\u7684\uff1a</p> <ol> <li>\u51cf\u5c11\u78c1\u76d8 I/O \u64cd\u4f5c\u6b21\u6570\uff1a\u76f4\u63a5\u5bf9\u78c1\u76d8\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u662f\u975e\u5e38\u8017\u65f6\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u7f13\u51b2\u533a\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u53d6\u6216\u5199\u5165\u66f4\u591a\u7684\u6570\u636e\uff0c\u51cf\u5c11\u5bf9\u78c1\u76d8\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002</li> <li>\u6570\u636e\u6682\u5b58\uff1a\u5f53\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u91cf\u5f88\u5927\u65f6\uff0c\u7f13\u51b2\u533a\u53ef\u4ee5\u4f5c\u4e3a\u6570\u636e\u7684\u4e34\u65f6\u5b58\u50a8\u5730\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5206\u6279\u5904\u7406\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u6027\u5904\u7406\u5168\u90e8\u6570\u636e\u3002</li> <li> <p>\u6570\u636e\u8f6c\u6362\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u8fd8\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u539f\u59cb\u4e8c\u8fdb\u5236\u6570\u636e\u53ef\u4ee5\u5728\u7f13\u51b2\u533a\u4e2d\u88ab\u8f6c\u6362\u6210\u7a0b\u5e8f\u5185\u90e8\u4f7f\u7528\u7684\u683c\u5f0f\u3002    \u7f13\u51b2\u533a\u53ef\u4ee5\u662f\u5404\u79cd\u7c7b\u578b\u7684\u5185\u5b58\u533a\u57df\uff0c\u4f8b\u5982\uff1a</p> </li> <li> <p>\u6808\u5185\u5b58\uff1a\u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e\u7684\u5c40\u90e8\u6570\u7ec4\u901a\u5e38\u5206\u914d\u5728\u6808\u4e0a\uff0c\u53ef\u4ee5\u7528\u4f5c\u7f13\u51b2\u533a\u3002</p> </li> <li>\u5806\u5185\u5b58\uff1a\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08\u5982 C \u8bed\u8a00\u4e2d\u7684<code>malloc</code>\u6216<code>calloc</code>\uff09\u5728\u5806\u4e0a\u5206\u914d\u7684\u5185\u5b58\u5757\u4e5f\u53ef\u4ee5\u7528\u4f5c\u7f13\u51b2\u533a\u3002   \u5728 C \u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u4f7f\u7528\u6807\u51c6 I/O \u51fd\u6570\uff08\u5982<code>fread</code>\u3001<code>fwrite</code>\u3001<code>fgets</code>\u3001<code>fputs</code>\u7b49\uff09\u65f6\uff0c\u8fd9\u4e9b\u51fd\u6570\u5185\u90e8\u901a\u5e38\u5df2\u7ecf\u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u7f13\u51b2\u533a\u3002\u4f8b\u5982\uff0c\u6bcf\u4e2a<code>FILE</code>\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u51cf\u5c11\u5b9e\u9645\u7684\u78c1\u76d8\u8bfb\u5199\u6b21\u6570\u3002\u7136\u800c\uff0c\u5f53\u4f60\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u65f6\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u8fd9\u4e9b\u51fd\u6570\u3002</li> </ol> <p>5.\u600e\u4e48\u7528\u6587\u4ef6\u8def\u5f84\u6253\u5f00\u6587\u4ef6\uff1f \u5728 C \u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u6587\u4ef6\u8def\u5f84\u4e2d\u5305\u542b\u53cd\u659c\u6760 <code>\\</code>\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u53cc\u53cd\u659c\u6760 <code>\\\\</code> \u6765\u8f6c\u4e49\uff0c\u56e0\u4e3a\u5728 C \u5b57\u7b26\u4e32\u4e2d\u53cd\u659c\u6760 <code>\\</code> \u662f\u4e00\u4e2a\u8f6c\u4e49\u5b57\u7b26\u3002 \u9009\u9879\u5206\u6790\u5982\u4e0b\uff1a A. <code>c:user\\text.txt</code> - \u8fd9\u4e0d\u662f\u6b63\u786e\u7684\u8def\u5f84\u683c\u5f0f\uff0c\u53cd\u659c\u6760\u6ca1\u6709\u8f6c\u4e49\uff0c\u4e14\u6ca1\u6709\u9a71\u52a8\u5668\u76d8\u7b26\u524d\u7684\u5192\u53f7\u3002 B. <code>c:\\user\\text.txt</code> - \u8fd9\u4e5f\u4e0d\u662f\u6b63\u786e\u7684\u8def\u5f84\u683c\u5f0f\uff0c\u56e0\u4e3a\u53cd\u659c\u6760\u6ca1\u6709\u8f6c\u4e49\u3002 C. <code>\"c:\\user\\text.txt\"</code> - \u867d\u7136\u4f7f\u7528\u4e86\u5f15\u53f7\uff0c\u4f46\u662f\u53cd\u659c\u6760\u4ecd\u7136\u6ca1\u6709\u8f6c\u4e49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9009\u9879\u4e5f\u662f\u4e0d\u6b63\u786e\u7684\u3002 D. <code>\"c:\\\\user\\\\text.txt\"</code> - \u8fd9\u662f\u6b63\u786e\u7684\u683c\u5f0f\uff0c\u53cd\u659c\u6760\u88ab\u6b63\u786e\u5730\u8f6c\u4e49\u4e86\uff0c\u4e14\u6574\u4e2a\u8def\u5f84\u88ab\u53cc\u5f15\u53f7\u5305\u56f4\uff0c\u8fd9\u662f C \u8bed\u8a00\u5b57\u7b26\u4e32\u7684\u6807\u51c6\u5199\u6cd5\u3002 \u56e0\u6b64\uff0c\u6b63\u786e\u7b54\u6848\u662f D. <code>\"c:\\\\user\\\\text.txt\"</code>\u3002</p> <p>6.fgetc \u6253\u5f00\u6587\u4ef6\u7528\u4ec0\u4e48\u65b9\u5f0f? \u51fd\u6570<code>fgetc</code>\u7528\u4e8e\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002\u4e3a\u4e86\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u6587\u4ef6\u5fc5\u987b\u4ee5\u8bfb\u6a21\u5f0f\u6216\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u3002</p> <p>\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u4ee3\u7801 </p> C<pre><code>FILE *fp=fopen(\"filename\",\"r\");\nif (fp) { //\u5982\u679c\u6ca1\u6709\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56deNULL\n    int a;\n    fscanf(fp,\"%d\",&amp;a);\n    printf(\"%d\\n\",a);\n    fclose(fp);\n} else {\n    printf(\"ERROR\");\n}\n</code></pre> <ul> <li><code>\"r\"</code> (read):\u53ea\u8bfb.\u6587\u4ef6\u5fc5\u987b\u5b58\u5728.</li> <li><code>\"w\"</code> (write):\u53ea\u5199.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5219\u4f1a\u88ab\u622a\u65ad\u81f3 0 \u5b57\u8282\u5927\u5c0f;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"a\"</code> (append):\u8ffd\u52a0.\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"r+\"</code> (read/update):\u8bfb\u5199.\u6587\u4ef6\u5fc5\u987b\u5b58\u5728.</li> <li><code>\"w+\"</code> (write/update):\u8bfb\u5199.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5219\u4f1a\u88ab\u622a\u65ad\u81f3 0 \u5b57\u8282\u5927\u5c0f;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"a+\"</code> (append/update):\u8bfb\u5199\u8ffd\u52a0.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"x\"</code>:\u53ea\u65b0\u5efa,\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u4e0d\u80fd\u6253\u5f00(\u9632\u6b62\u5bf9\u539f\u6709\u6587\u4ef6\u7834\u574f)   \u6bcf\u4e2a\u6a21\u5f0f\u90fd\u53ef\u4ee5\u4e0e <code>b</code> \u7ed3\u5408\u4f7f\u7528,\u8868\u793a\u4e8c\u8fdb\u5236\u6a21\u5f0f,\u4f8b\u5982 <code>\"rb\"</code> \u8868\u793a\u4ee5\u4e8c\u8fdb\u5236\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6.\u5728\u67d0\u4e9b\u7cfb\u7edf\u4e2d,\u5982\u679c\u4e0d\u4f7f\u7528 <code>b</code> \u6a21\u5f0f,\u53ef\u80fd\u4f1a\u5f71\u54cd\u6587\u4ef6\u7684\u8bfb\u5199,\u7279\u522b\u662f\u6d89\u53ca\u5230\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u4ea4\u6362\u65f6\u3002</li> </ul> <p>fopen  \u5728 C \u8bed\u8a00\u4e2d,<code>fopen</code> \u51fd\u6570\u7528\u4e8e\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>fopen</code> \u7684\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p> <ol> <li>\u5305\u542b <code>stdio.h</code> \u5934\u6587\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <ol> <li>\u8c03\u7528 <code>fopen</code> \u51fd\u6570\uff0c\u5e76\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff1a\u6587\u4ef6\u540d\u548c\u6253\u5f00\u6a21\u5f0f\u3002</li> </ol> C<pre><code>FILE *fp = fopen(\"filename.txt\", \"r\");\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>\"filename.txt\"</code> \u662f\u4f60\u60f3\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\u548c\u540d\u79f0\uff0c<code>\"r\"</code> \u662f\u6253\u5f00\u6a21\u5f0f\uff0c\u8868\u793a\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002 <code>fopen</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a <code>FILE*</code> \u7c7b\u578b\u7684\u6307\u9488\uff0c\u5982\u679c\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff0c\u8fd9\u4e2a\u6307\u9488\u5c06\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u6587\u4ef6\u64cd\u4f5c\u3002\u5982\u679c\u6253\u5f00\u5931\u8d25\uff0c<code>fopen</code> \u5c06\u8fd4\u56de <code>NULL</code>\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 <code>fopen</code> \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u8bfb\u53d6\u5176\u5185\u5bb9\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp;\n    char buffer[100];\n    // \u6253\u5f00\u6587\u4ef6\n    fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    // \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\n    while (fgets(buffer, 100, fp) != NULL) {\n        printf(\"%s\", buffer);\n    }\n    // \u5173\u95ed\u6587\u4ef6\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6587\u4ef6 <code>example.txt</code> \u5b58\u5728\u5e76\u4e14\u6210\u529f\u6253\u5f00\uff0c\u7a0b\u5e8f\u5c06\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002\u6700\u540e\uff0c\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002 <code>perror</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u6253\u5370\u51fa\u4e00\u4e2a\u63cf\u8ff0\u6700\u540e\u4e00\u6b21\u8c03\u7528\u5e93\u51fd\u6570\u65f6\u53d1\u751f\u9519\u8bef\u7684\u4fe1\u606f\u3002\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void perror(const char *s);\n</code></pre> <p>\u5f53\u4f60\u8c03\u7528 <code>perror</code> \u65f6\uff0c\u5b83\u4f1a\u8f93\u51fa\u53c2\u6570 <code>s</code> \u6307\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u5192\u53f7\u3001\u4e00\u4e2a\u7a7a\u683c\u548c\u4e00\u6761\u9519\u8bef\u6d88\u606f\u3002\u8fd9\u6761\u9519\u8bef\u6d88\u606f\u901a\u5e38\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4e0a\u4e00\u4e2a\u5e93\u51fd\u6570\u8c03\u7528\u5931\u8d25\u3002 \u53c2\u6570 <code>s</code> \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u662f\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4e0e\u9519\u8bef\u76f8\u5173\u7684\u6807\u8bc6\u7b26\u6216\u8005\u63d0\u793a\u4fe1\u606f\u3002\u5982\u679c <code>s</code> \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff08<code>NULL</code>\uff09\uff0c\u5219 <code>perror</code> \u53ea\u6253\u5370\u51fa\u9519\u8bef\u6d88\u606f\uff0c\u4e0d\u6253\u5370\u524d\u5bfc\u5b57\u7b26\u4e32\u3002 \u9519\u8bef\u6d88\u606f\u672c\u8eab\u662f\u7531 <code>perror</code> \u51fd\u6570\u57fa\u4e8e\u5168\u5c40\u53d8\u91cf <code>errno</code> \u7684\u5f53\u524d\u503c\u6765\u751f\u6210\u7684\u3002<code>errno</code> \u662f\u4e00\u4e2a\u5728 <code>errno.h</code> \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5916\u90e8\u6574\u6570\u53d8\u91cf\uff0c\u8bb8\u591a\u5e93\u51fd\u6570\u5728\u6267\u884c\u5931\u8d25\u65f6\u4f1a\u8bbe\u7f6e <code>errno</code> \u7684\u503c\u6765\u6307\u793a\u5177\u4f53\u7684\u9519\u8bef\u7c7b\u578b\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 <code>perror</code> \u7684\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;unistd.h&gt;\nint main() {\n    if (close(10) == -1) { // \u5047\u8bbe10\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n        perror(\"close\");\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>close</code> \u51fd\u6570\u5c1d\u8bd5\u5173\u95ed\u4e00\u4e2a\u65e0\u6548\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u5c06\u5bfc\u81f4 <code>close</code> \u8fd4\u56de <code>-1</code> \u5e76\u8bbe\u7f6e <code>errno</code>\u3002\u968f\u540e\u8c03\u7528 <code>perror</code> \u5c06\u6253\u5370\u51fa\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7684\u6d88\u606f\uff1a</p> Text Only<pre><code>close: Bad file descriptor\n</code></pre> <p>\u8fd9\u91cc\u7684 \"Bad file descriptor\" \u662f\u6839\u636e <code>errno</code> \u7684\u503c\u751f\u6210\u7684\u9519\u8bef\u63cf\u8ff0\u3002</p> <p>fclose </p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c<code>fclose</code> \u51fd\u6570\u7528\u4e8e\u5173\u95ed\u4e00\u4e2a\u7531 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u7684\u6587\u4ef6\u6d41\u3002\u4ee5\u4e0b\u662f <code>fclose</code> \u7684\u4f7f\u7528\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p> <ol> <li>\u5305\u542b <code>stdio.h</code> \u5934\u6587\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <ol> <li>\u5728\u6253\u5f00\u6587\u4ef6\u540e\uff0c\u5f53\u5b8c\u6210\u6587\u4ef6\u7684\u6240\u6709\u64cd\u4f5c\u65f6\uff0c\u8c03\u7528 <code>fclose</code> \u51fd\u6570\u6765\u5173\u95ed\u6587\u4ef6\u3002</li> </ol> C<pre><code>int fclose(FILE *stream);\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>stream</code> \u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u7ed3\u6784\u7684\u6307\u9488\uff0c\u5b83\u4ee3\u8868\u4e86\u4f60\u8981\u5173\u95ed\u7684\u6587\u4ef6\u6d41\u3002 <code>fclose</code> \u51fd\u6570\u6267\u884c\u6210\u529f\u65f6\u8fd4\u56de <code>0</code>\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\u5219\u8fd4\u56de <code>EOF</code>\uff08\u5728 <code>stdio.h</code> \u4e2d\u901a\u5e38\u5b9a\u4e49\u4e3a <code>-1</code>\uff09\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 <code>fclose</code>\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp;\n    // \u6253\u5f00\u6587\u4ef6\n    fp = fopen(\"example.txt\", \"w\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    // \u5199\u5165\u6587\u4ef6\u5185\u5bb9\n    fprintf(fp, \"Hello, World!\\n\");\n    // \u5173\u95ed\u6587\u4ef6\n    if (fclose(fp) != 0) {\n        perror(\"Error closing file\");\n        return -1;\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u9996\u5148\u5c1d\u8bd5\u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00 <code>example.txt</code> \u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u6210\u529f\u6253\u5f00\uff0c\u5b83\u5c06\u5199\u5165\u4e00\u884c\u6587\u672c\u3002\u5b8c\u6210\u5199\u5165\u64cd\u4f5c\u540e\uff0c\u7a0b\u5e8f\u8c03\u7528 <code>fclose</code> \u6765\u5173\u95ed\u6587\u4ef6\u3002\u5982\u679c <code>fclose</code> \u8fd4\u56de <code>EOF</code>\uff0c\u8868\u793a\u5173\u95ed\u6587\u4ef6\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u7a0b\u5e8f\u5c06\u6253\u5370\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de <code>-1</code>\u3002</p> <p>fscanf <code>fscanf</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\u4e4b\u4e00\uff0c\u5b83\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u683c\u5f0f\u5316\u7684\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0e <code>scanf</code> \u7c7b\u4f3c\uff0c\u4f46\u662f <code>fscanf</code> \u662f\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09\u3002 \u4e0b\u9762\u662f <code>fscanf</code> \u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\uff1a</p> C<pre><code>int fscanf(FILE *stream, const char *format, ...);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>const char *format</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u5b9a\u4e86\u6570\u636e\u7684\u683c\u5f0f\uff0c\u4e0e <code>scanf</code> \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u76f8\u540c\u3002</li> <li><code>...</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u3002   <code>fscanf</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6210\u529f\u5339\u914d\u5e76\u8d4b\u503c\u7684\u8f93\u5165\u9879\u4e2a\u6570,\u5982\u679c\u9047\u5230\u9519\u8bef\u6216\u6587\u4ef6\u7ed3\u675f(EOF),\u5219\u8fd4\u56de EOF\u3002   \u4e0b\u9762\u662f\u4e00\u4e9b <code>fscanf</code> \u7684\u4f7f\u7528\u793a\u4f8b\uff1a</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_25","title":"\u8bfb\u53d6\u6574\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    int number;\n    if (file != NULL) {\n        while (fscanf(file, \"%d\", &amp;number) != EOF) {\n            printf(\"Read number: %d\\n\", number);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4ece <code>data.txt</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u6574\u6570\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_26","title":"\u8bfb\u53d6\u5b57\u7b26\u4e32","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    char buffer[100];\n    if (file != NULL) {\n        while (fscanf(file, \"%99s\", buffer) != EOF) { // \u6ce8\u610f\uff1a\u4f7f\u7528 %99s \u4ee5\u907f\u514d\u7f13\u51b2\u533a\u6ea2\u51fa\n            printf(\"Read string: %s\\n\", buffer);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4ece <code>data.txt</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528 <code>%99s</code> \u6765\u9650\u5236\u8bfb\u53d6\u7684\u5b57\u7b26\u6570\uff0c\u907f\u514d\u8d85\u51fa <code>buffer</code> \u7684\u5927\u5c0f\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_27","title":"\u8bfb\u53d6\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    int number;\n    char name[50];\n    if (file != NULL) {\n        while (fscanf(file, \"%d %49s\", &amp;number, name) != EOF) {\n            printf(\"Number: %d, Name: %s\\n\", number, name);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u8bb0\u4f4f\uff0c<code>fscanf</code> \u4f1a\u8df3\u8fc7\u4efb\u4f55\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u7b49\uff09\uff0c\u76f4\u5230\u9047\u5230\u4e0e\u683c\u5f0f\u5b57\u7b26\u4e32\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u3002\u5982\u679c\u8bfb\u53d6\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u683c\u5f0f\u5b57\u7b26\u4e32\u4e0d\u5339\u914d\uff0c<code>fscanf</code> \u53ef\u80fd\u4f1a\u5931\u8d25\u6216\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</p> <p></p> <p>fprintf <code>fprintf</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u683c\u5f0f\u5316\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u6d41\u3002\u5b83\u4e0e <code>printf</code> \u51fd\u6570\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46 <code>fprintf</code> \u5141\u8bb8\u4f60\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\uff08\u901a\u5e38\u662f\u5c4f\u5e55\uff09\u3002 \u4e0b\u9762\u662f <code>fprintf</code> \u51fd\u6570\u7684\u57fa\u672c\u539f\u578b\uff1a</p> C<pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>const char *format</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u5b9a\u4e86\u6570\u636e\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u4e0e <code>printf</code> \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u76f8\u540c\u3002</li> <li><code>...</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u53d8\u91cf\u53c2\u6570\u5217\u8868\uff0c\u5305\u542b\u4e86\u6839\u636e <code>format</code> \u5b57\u7b26\u4e32\u6307\u5b9a\u7684\u683c\u5f0f\u8981\u5199\u5165\u7684\u6570\u636e\u3002   <code>fprintf</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6210\u529f\u5199\u5165\u7684\u5b57\u7b26\u6570\uff0c\u6216\u8005\u5728\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de\u4e00\u4e2a\u8d1f\u6570\u3002   \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fprintf</code> \u7684\u7b80\u5355\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"example.txt\", \"w\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\n    if (file == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    int number = 42;\n    const char *text = \"The answer to life, the universe, and everything\";\n    // \u5c06\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6\n    fprintf(file, \"Number: %d\\nText: %s\\n\", number, text);\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u6211\u4eec\u9996\u5148\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a \"example.txt\" \u7684\u6587\u4ef6\uff0c\u4ee5\u4f9b\u5199\u5165\uff08\"w\" \u6a21\u5f0f\uff09\u3002</li> <li>\u6211\u4eec\u68c0\u67e5 <code>fopen</code> \u662f\u5426\u6210\u529f\u8fd4\u56de\u4e86\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u6307\u9488\u3002</li> <li>\u4f7f\u7528 <code>fprintf</code> \u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5199\u5165\u5230\u6587\u4ef6\u4e2d\u3002\u683c\u5f0f\u5b57\u7b26\u4e32\u5305\u542b\u4e86 <code>%d</code> \u7528\u4e8e\u6574\u6570\u548c <code>%s</code> \u7528\u4e8e\u5b57\u7b26\u4e32\u3002</li> <li>\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u6ce8\u610f\uff0c\u5982\u679c\u6587\u4ef6\u6253\u5f00\u6a21\u5f0f\u662f \"w\"\uff0c\u5219\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\"example.txt\" \u6587\u4ef6\u90fd\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u60f3\u8981\u8ffd\u52a0\u5185\u5bb9\u5230\u6587\u4ef6\u672b\u5c3e\uff0c\u5e94\u8be5\u4f7f\u7528 \"a\" \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002</li> </ol> <p></p> <p>fgetc <code>fgetc</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f <code>fgetc</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_28","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>int fgetc(FILE *stream);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u5b57\u7b26\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_29","title":"\u8fd4\u56de\u503c","text":"<ul> <li><code>fgetc</code> \u51fd\u6570\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\uff0c\u5982\u679c\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u6216\u53d1\u751f\u8bfb\u53d6\u9519\u8bef\uff0c\u5219\u8fd4\u56de <code>EOF</code>\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u4f8b\u5982 <code>-1</code>\uff09\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_30","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 <code>fgetc</code> \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5b57\u7b26\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"example.txt\", \"r\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int ch; // \u7528\u4e8e\u5b58\u50a8\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\n    while ((ch = fgetc(file)) != EOF) { // \u5faa\u73af\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\n        putchar(ch); // \u5c06\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a \"example.txt\" \u7684\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fgetc</code> \u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u76f4\u5230 <code>EOF</code> \u88ab\u8fd4\u56de\u3002</li> <li>\u4f7f\u7528 <code>putchar</code> \u51fd\u6570\u5c06\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c\u5f53 <code>fgetc</code> \u8fd4\u56de <code>EOF</code> \u65f6\uff0c\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5b83\u4e5f\u53ef\u80fd\u662f\u6b63\u5e38\u5230\u8fbe\u4e86\u6587\u4ef6\u672b\u5c3e\u3002\u8981\u533a\u5206\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u68c0\u67e5 <code>ferror</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c <code>ferror(file)</code> \u8fd4\u56de\u975e\u96f6\u503c\uff0c\u5219\u8868\u793a\u5728\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u9519\u8bef\u3002</li> </ol> <p>fputc <code>fputc</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u3002\u5176\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>int fputc(int char, FILE *stream);\n</code></pre> <p>\u4e0b\u9762\u662f <code>fputc</code> \u51fd\u6570\u7684\u4f7f\u7528\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_31","title":"\u53c2\u6570\u8bf4\u660e\uff1a","text":"<ul> <li><code>char</code>\uff1a\u9700\u8981\u5199\u5165\u6587\u4ef6\u7684\u5b57\u7b26\uff0c\u4ee5 <code>int</code> \u7c7b\u578b\u4f20\u9012\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u4f20\u9012\u4e00\u4e2a <code>char</code> \u7c7b\u578b\u7684\u503c\u3002</li> <li><code>stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u7c7b\u578b\u7684\u6307\u9488\uff0c\u4ee3\u8868\u4e86\u8981\u5199\u5165\u5b57\u7b26\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_32","title":"\u8fd4\u56de\u503c\uff1a","text":"<ul> <li>\u6210\u529f\uff1a\u8fd4\u56de\u5199\u5165\u7684\u5b57\u7b26\uff08\u5373 <code>char</code> \u53c2\u6570\u7684\u503c\uff09\u3002</li> <li>\u5931\u8d25\uff1a\u8fd4\u56de <code>EOF</code>\uff08\u901a\u5e38\u5728 <code>stdio.h</code> \u4e2d\u5b9a\u4e49\u4e3a <code>-1</code>\uff09\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_33","title":"\u4f7f\u7528\u793a\u4f8b\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp = fopen(\"example.txt\", \"w\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    char ch = 'A'; // \u8981\u5199\u5165\u7684\u5b57\u7b26\n    // \u5c06\u5b57\u7b26 'A' \u5199\u5165\u6587\u4ef6\n    if (fputc(ch, fp) == EOF) {\n        perror(\"Error writing to file\");\n        fclose(fp); // \u5173\u95ed\u6587\u4ef6\n        return -1;\n    }\n    // \u53ef\u4ee5\u7ee7\u7eed\u5199\u5165\u5176\u4ed6\u5b57\u7b26\n    fputc('B', fp);\n    fputc('\\n', fp); // \u5199\u5165\u6362\u884c\u7b26\n    fclose(fp); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u9996\u5148\u5c1d\u8bd5\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a <code>example.txt</code> \u7684\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u6210\u529f\u6253\u5f00\uff0c\u5b83\u5c06\u4f7f\u7528 <code>fputc</code> \u51fd\u6570\u5199\u5165\u5b57\u7b26 'A'\uff0c\u7136\u540e\u662f 'B' \u548c\u4e00\u4e2a\u6362\u884c\u7b26\u3002\u6bcf\u8c03\u7528\u4e00\u6b21 <code>fputc</code>\uff0c\u5b83\u90fd\u4f1a\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u4e3a <code>EOF</code> \u6765\u786e\u5b9a\u5199\u5165\u662f\u5426\u6210\u529f\u3002\u6700\u540e\uff0c\u6587\u4ef6\u88ab\u5173\u95ed\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u4f7f\u7528 <code>fputc</code> \u4e4b\u524d\uff0c\u5e94\u8be5\u786e\u4fdd\u6587\u4ef6\u5df2\u7ecf\u6210\u529f\u6253\u5f00\uff0c\u5e76\u4e14\u5728\u5199\u5165\u5b8c\u6210\u540e\uff0c\u5e94\u8be5\u5173\u95ed\u6587\u4ef6\u4ee5\u91ca\u653e\u8d44\u6e90\u3002\u5982\u679c\u5199\u5165\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c<code>fputc</code> \u5c06\u8fd4\u56de <code>EOF</code>\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 <code>perror</code> \u6765\u83b7\u53d6\u9519\u8bef\u4fe1\u606f\u3002</p> <p>fread <code>fread</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\u5757\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u8005\u9700\u8981\u4e00\u6b21\u6027\u8bfb\u53d6\u591a\u4e2a\u6570\u636e\u9879\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f <code>fread</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_34","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);\n</code></pre> <ul> <li><code>void *ptr</code>\uff1a\u6307\u5411\u8981\u8bfb\u53d6\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002</li> <li><code>size_t size</code>\uff1a\u8981\u8bfb\u53d6\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>size_t nmemb</code>\uff1a\u8981\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li><code>FILE *stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_35","title":"\u8fd4\u56de\u503c","text":"<p><code>fread</code> \u51fd\u6570\u8fd4\u56de\u6210\u529f\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u53ef\u80fd\u4f1a\u5c0f\u4e8e <code>nmemb</code> \u6307\u5b9a\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7279\u522b\u662f\u5728\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u65f6\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_36","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fread</code> \u7684\u4f8b\u5b50\uff0c\u5b83\u4ece\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u7cfb\u5217\u6574\u6570\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main() {\n    FILE *file = fopen(\"data.bin\", \"rb\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u4e8c\u8fdb\u5236\u8bfb\u53d6\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int numbers[10]; // \u5047\u8bbe\u6587\u4ef6\u4e2d\u670910\u4e2a\u6574\u6570\n    size_t elements_read;\n    // \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d610\u4e2a\u6574\u6570\u5230numbers\u6570\u7ec4\u4e2d\n    elements_read = fread(numbers, sizeof(int), 10, file);\n    if (elements_read == 10) {\n        printf(\"Successfully read 10 integers from the file.\\n\");\n        // \u6253\u5370\u8bfb\u53d6\u5230\u7684\u6574\u6570\n        for (int i = 0; i &lt; 10; ++i) {\n            printf(\"%d \", numbers[i]);\n        }\n        printf(\"\\n\");\n    } else {\n        printf(\"Could not read 10 integers. Only %zu integers were read.\\n\", elements_read);\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u4ee5\u4e8c\u8fdb\u5236\u8bfb\u53d6\u6a21\u5f0f\u6253\u5f00\u540d\u4e3a \"data.bin\" \u7684\u6587\u4ef6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fread</code> \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 10 \u4e2a\u6574\u6570\u5230 <code>numbers</code> \u6570\u7ec4\u4e2d\u3002</li> <li>\u68c0\u67e5 <code>fread</code> \u8fd4\u56de\u7684\u8bfb\u53d6\u5143\u7d20\u4e2a\u6570\u662f\u5426\u4e3a 10\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u8bfb\u53d6\u5230\u7684\u6574\u6570\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u6253\u5370\u5b9e\u9645\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c<code>fread</code> \u4e0d\u4f1a\u5728\u8bfb\u53d6\u5230\u7684\u6570\u636e\u540e\u81ea\u52a8\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff08null terminator\uff09\uff0c\u6240\u4ee5\u5b83\u901a\u5e38\u7528\u4e8e\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6570\u636e\u6216\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u6b63\u5728\u8bfb\u53d6\u6587\u672c\u6570\u636e\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5904\u7406\u8fd9\u4e9b\u6570\u636e\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 <code>fgets</code> \u6216 <code>fgetc</code>\u3002</li> </ol> <p></p> <p>fwrite <code>fwrite</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u6570\u636e\u5757\u5199\u5165\u6587\u4ef6\u6d41\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5199\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u8005\u9700\u8981\u4e00\u6b21\u6027\u5199\u5165\u591a\u4e2a\u6570\u636e\u9879\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f <code>fwrite</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_37","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);\n</code></pre> <ul> <li><code>const void *ptr</code>\uff1a\u6307\u5411\u8981\u5199\u5165\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002</li> <li><code>size_t size</code>\uff1a\u8981\u5199\u5165\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>size_t nmemb</code>\uff1a\u8981\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li><code>FILE *stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_38","title":"\u8fd4\u56de\u503c","text":"<p><code>fwrite</code> \u51fd\u6570\u8fd4\u56de\u6210\u529f\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u901a\u5e38\u4f1a\u7b49\u4e8e <code>nmemb</code> \u6307\u5b9a\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u9664\u975e\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_39","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fwrite</code> \u7684\u4f8b\u5b50\uff0c\u5b83\u5c06\u4e00\u7cfb\u5217\u6574\u6570\u5199\u5165\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main() {\n    FILE *file = fopen(\"data.bin\", \"wb\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u4e8c\u8fdb\u5236\u5199\u5165\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int numbers[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; // \u8981\u5199\u5165\u7684\u6574\u6570\u6570\u7ec4\n    // \u5c06\u6570\u7ec4\u4e2d\u768410\u4e2a\u6574\u6570\u5199\u5165\u5230\u6587\u4ef6\u4e2d\n    size_t elements_written = fwrite(numbers, sizeof(int), 10, file);\n    if (elements_written == 10) {\n        printf(\"Successfully wrote 10 integers to the file.\\n\");\n    } else {\n        printf(\"Could not write 10 integers. Only %zu integers were written.\\n\", elements_written);\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u4ee5\u4e8c\u8fdb\u5236\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u540d\u4e3a \"data.bin\" \u7684\u6587\u4ef6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fwrite</code> \u5c06 <code>numbers</code> \u6570\u7ec4\u4e2d\u7684 10 \u4e2a\u6574\u6570\u5199\u5165\u5230\u6587\u4ef6\u4e2d\u3002</li> <li>\u68c0\u67e5 <code>fwrite</code> \u8fd4\u56de\u7684\u5199\u5165\u5143\u7d20\u4e2a\u6570\u662f\u5426\u4e3a 10\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u6210\u529f\u6d88\u606f\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u6253\u5370\u5b9e\u9645\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c<code>fwrite</code> \u4e0d\u4f1a\u5728\u5199\u5165\u7684\u6570\u636e\u540e\u81ea\u52a8\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff08null terminator\uff09\uff0c\u56e0\u6b64\u5b83\u9002\u5408\u4e8e\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\u6216\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u9700\u8981\u5199\u5165\u6587\u672c\u6570\u636e\u5e76\u4e14\u9700\u8981\u5728\u6bcf\u4e2a\u6570\u636e\u9879\u540e\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u624b\u52a8\u6dfb\u52a0\u8fd9\u4e9b\u7a7a\u5b57\u7b26\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u9002\u5408\u6587\u672c\u6570\u636e\u7684\u51fd\u6570\uff0c\u5982 <code>fprintf</code> \u6216 <code>fputs</code>\u3002</li> </ol> <p></p> <p>fseek <code>fseek</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u6587\u4ef6\u4e2d\u79fb\u52a8\u6587\u4ef6\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff0c\u4ee5\u4e0b\u662f <code>fseek</code> \u51fd\u6570\u7684\u58f0\u660e\uff1a</p> C<pre><code>int fseek(FILE *stream, long int offset, int whence);\n</code></pre> <p>\u4ee5\u4e0b\u662f <code>fseek</code> \u51fd\u6570\u7684\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>FILE *stream</code>\uff1a\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>long int offset</code>\uff1a\u76f8\u5bf9\u4e8e <code>whence</code> \u53c2\u6570\u6307\u5b9a\u7684\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\u3002\u8fd9\u4e2a\u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u6570\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6570\u3002</li> <li><code>int whence</code>\uff1a\u6307\u5b9a <code>offset</code> \u53c2\u6570\u662f\u57fa\u4e8e\u54ea\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u504f\u79fb\u7684\uff0c\u5b83\u53ef\u4ee5\u662f\u4ee5\u4e0b\u4e09\u4e2a\u5b8f\u4e4b\u4e00\uff1a</li> <li><code>SEEK_SET</code>\uff1a\u6587\u4ef6\u7684\u5f00\u5934\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\uff09\u3002</li> <li><code>SEEK_CUR</code>\uff1a\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\u7684\uff09\u3002</li> <li> <p><code>SEEK_END</code>\uff1a\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u672b\u5c3e\u7684\uff09\u3002     <code>fseek</code> \u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de 0\uff0c\u51fa\u9519\u65f6\u8fd4\u56de\u975e 0 \u503c\u3002     \u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 <code>fseek</code> \u7684\u793a\u4f8b\uff1a</p> </li> <li> <p>\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\uff1a</p> </li> </ul> C<pre><code>fseek(fp, 0, SEEK_SET);\n</code></pre> <ol> <li>\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u79fb\u52a8 10 \u4e2a\u5b57\u8282\uff1a</li> </ol> C<pre><code>fseek(fp, -10, SEEK_CUR);\n</code></pre> <ol> <li>\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\u524d\u7684 100 \u4e2a\u5b57\u8282\uff1a</li> </ol> C<pre><code>fseek(fp, -100, SEEK_END);\n</code></pre> <p>\u5728\u4f7f\u7528 <code>fseek</code> \u4e4b\u540e\uff0c\u5982\u679c\u60f3\u8981\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>ftell</code> \u51fd\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c<code>fseek</code> \u51fd\u6570\u901a\u5e38\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u6362\u884c\u7b26\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u8868\u793a\uff08\u4f8b\u5982\uff0cWindows \u4e0a\u662f <code>\\r\\n</code>\uff0c\u800c Unix/Linux \u4e0a\u662f <code>\\n</code>\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd <code>fseek</code> \u7684\u7cbe\u786e\u4f4d\u7f6e\u8ba1\u7b97\u3002\u5982\u679c\u8981\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u5b9a\u4f4d\uff0c\u901a\u5e38\u5efa\u8bae\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002</p> <p><code>SEEK_SET</code>\u3001<code>SEEK_CUR</code> \u548c <code>SEEK_END</code> \u662f\u5728 C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u5b9a\u4e49\u7684\u5b8f\uff0c\u5b83\u4eec\u7528\u4e8e <code>fseek</code> \u51fd\u6570\u4e2d\uff0c\u4ee5\u6307\u5b9a\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u7684\u53c2\u8003\u4f4d\u7f6e\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e09\u4e2a\u5b8f\u7684\u542b\u4e49\uff1a</p> <ol> <li><code>SEEK_SET</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 0\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_SET</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, 100, SEEK_SET);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u4e4b\u540e\u7684\u7b2c 100 \u4e2a\u5b57\u8282\u3002</li> <li><code>SEEK_CUR</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 1\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_CUR</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, 50, SEEK_CUR);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u79fb\u52a8 50 \u4e2a\u5b57\u8282\u3002</li> <li><code>SEEK_END</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 2\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_END</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u672b\u5c3e\u7684\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, -10, SEEK_END);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\u4e4b\u524d\u7684\u7b2c 10 \u4e2a\u5b57\u8282\u3002      \u8fd9\u4e9b\u5b8f\u5b9a\u4e49\u5728 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u5b83\u4eec\u4e4b\u524d\u9700\u8981\u5305\u542b\u8be5\u5934\u6587\u4ef6\u3002\u901a\u8fc7\u8fd9\u4e9b\u5b8f\uff0c<code>fseek</code> \u51fd\u6570\u80fd\u591f\u7075\u6d3b\u5730\u5728\u6587\u4ef6\u4e2d\u5b9a\u4f4d\u5230\u7279\u5b9a\u7684\u4f4d\u7f6e\uff0c\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u64cd\u4f5c\u3002</li> </ol> <p>feof <code>feof</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u6d4b\u6d41\u4e0a\u7684\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\uff08end-of-file\uff09\u3002\u5f53\u5728\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c<code>feof</code> \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\uff08\u901a\u5e38\u662f <code>1</code>\uff09\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u5c1a\u672a\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u5219\u8fd4\u56de <code>0</code>\u3002 \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>int feof(FILE *stream);\n</code></pre> <p>\u53c2\u6570 <code>stream</code> \u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u4ee3\u8868\u4e86\u4e0e\u67d0\u4e2a\u6587\u4ef6\u76f8\u5173\u8054\u7684\u6d41\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u4e8e <code>feof</code> \u51fd\u6570\u7684\u8981\u70b9\uff1a</p> <ul> <li><code>feof</code> \u4ec5\u5728\u6267\u884c\u4e86\u6587\u4ef6\u8bfb\u53d6\u64cd\u4f5c\u5e76\u4e14\u8be5\u64cd\u4f5c\u9047\u5230\u4e86\u6587\u4ef6\u672b\u5c3e\u65f6\uff0c\u624d\u4f1a\u8bbe\u7f6e\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\u3002\u56e0\u6b64\uff0c\u5728\u8c03\u7528 <code>feof</code> \u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u5c1d\u8bd5\u8bfb\u53d6\u6587\u4ef6\u3002</li> <li>\u5982\u679c\u5728\u8bfb\u53d6\u64cd\u4f5c\u540e\u7acb\u5373\u8c03\u7528 <code>feof</code>\uff0c\u5e76\u4e14\u5b83\u8fd4\u56de <code>0</code>\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u4e00\u5b9a\u4e0d\u4f1a\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u53ef\u80fd\u8fd8\u9700\u8981\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bfb\u53d6\u5c1d\u8bd5\uff0c\u7136\u540e\u518d\u6b21\u68c0\u67e5 <code>feof</code>\u3002</li> <li>\u5f53\u68c0\u6d4b\u5230\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\u65f6\uff0c\u5e94\u8be5\u505c\u6b62\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8bfb\u53d6\u5230\u65e0\u6548\u7684\u6570\u636e\u6216\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</li> <li><code>feof</code> \u4e0d\u4f1a\u91cd\u7f6e\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\uff0c\u4e00\u65e6\u8bbe\u7f6e\u4e86\uff0c\u5b83\u5c06\u4fdd\u6301\u8bbe\u7f6e\u72b6\u6001\u76f4\u5230\u5173\u95ed\u6587\u4ef6\u6216\u6e05\u9664\u9519\u8bef\u6807\u5fd7\u3002   \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 <code>feof</code> \u68c0\u6d4b\u6587\u4ef6\u7ed3\u675f\u7684\u7b80\u5355\u793a\u4f8b\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    int c;\n    while ((c = fgetc(fp)) != EOF) {\n        putchar(c);\n        if (feof(fp)) {\n            break; // \u6587\u4ef6\u7ed3\u675f\uff0c\u9000\u51fa\u5faa\u73af\n        }\n    }\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u9010\u5b57\u7b26\u8bfb\u53d6\uff0c\u76f4\u5230\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u4f7f\u7528 <code>feof</code> \u6765\u68c0\u6d4b\u662f\u5426\u5230\u8fbe\u4e86\u6587\u4ef6\u672b\u5c3e\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u9000\u51fa\u5faa\u73af\u3002</p> <p>linux \u6587\u4ef6\u8f93\u5165\u8f93\u51fa  \u5728 Linux \u7ec8\u7aef\u4e2d\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u901a\u5e38\u6307\u7684\u662f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff08\u8f93\u5165\uff09\u548c\u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\uff08\u8f93\u51fa\uff09\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u547d\u4ee4\u548c\u4f7f\u7528\u65b9\u6cd5\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_40","title":"\u8f93\u51fa\uff08\u5199\u5165\uff09\u5230\u6587\u4ef6","text":"<ol> <li>\u4f7f\u7528\u91cd\u5b9a\u5411\u7b26\u53f7 <code>&gt;</code> \u548c <code>&gt;&gt;</code>:</li> <li><code>&gt;</code> \u7528\u4e8e\u521b\u5efa\u65b0\u6587\u4ef6\u6216\u8986\u76d6\u73b0\u6709\u6587\u4ef6\u3002</li> <li><code>&gt;&gt;</code> \u7528\u4e8e\u5728\u73b0\u6709\u6587\u4ef6\u672b\u5c3e\u8ffd\u52a0\u5185\u5bb9\u3002      \u793a\u4f8b\uff1a    Bash<pre><code>echo \"Hello, World!\" &gt; hello.txt  # \u521b\u5efa\u6216\u8986\u76d6\u6587\u4ef6 hello.txt\necho \"\u518d\u89c1\" &gt;&gt; hello.txt          # \u5728\u6587\u4ef6 hello.txt \u672b\u5c3e\u8ffd\u52a0\u5185\u5bb9\n</code></pre></li> <li>\u4f7f\u7528\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411:    \u547d\u4ee4\u7684\u8f93\u51fa\u53ef\u4ee5\u4f7f\u7528 <code>&gt;</code> \u6216 <code>&gt;&gt;</code> \u88ab\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>ls -l &gt; directory_listing.txt  # \u5c06\u76ee\u5f55\u5217\u8868\u5199\u5165\u6587\u4ef6\n</code></pre></li> </ol>"},{"location":"CourseNotes/C%20Programming/CNote/#_41","title":"\u8f93\u5165\uff08\u8bfb\u53d6\uff09\u6587\u4ef6","text":"<ol> <li>\u4f7f\u7528\u547d\u4ee4\u8bfb\u53d6\u6587\u4ef6:    \u8bb8\u591a\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\u4f5c\u4e3a\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>cat hello.txt  # \u663e\u793a\u6587\u4ef6\u5185\u5bb9\nless hello.txt # \u5206\u9875\u663e\u793a\u6587\u4ef6\u5185\u5bb9\n</code></pre></li> <li>\u4f7f\u7528\u7ba1\u9053 <code>|</code>:    \u7ba1\u9053\u53ef\u4ee5\u5c06\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>cat hello.txt | grep \"Hello\"  # \u4ece\u6587\u4ef6\u4e2d\u67e5\u627e\u5305\u542b \"Hello\" \u7684\u884c\n</code></pre></li> <li>\u4f7f\u7528\u8f93\u5165\u91cd\u5b9a\u5411 <code>&lt;</code>:    \u4f7f\u7528 <code>&lt;</code> \u53ef\u4ee5\u5c06\u6587\u4ef6\u5185\u5bb9\u4f5c\u4e3a\u547d\u4ee4\u7684\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>sort &lt; hello.txt  # \u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\n</code></pre></li> </ol>"},{"location":"CourseNotes/C%20Programming/CNote/#_42","title":"\u793a\u4f8b\uff1a\u7ed3\u5408\u8f93\u5165\u8f93\u51fa","text":"<p>\u5047\u8bbe\u4f60\u60f3\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u6392\u5e8f\u540e\u5199\u5165\u53e6\u4e00\u4e2a\u6587\u4ef6\uff1a</p> Bash<pre><code>sort &lt; unsorted.txt &gt; sorted.txt\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>sort</code> \u547d\u4ee4\u4ece\u6587\u4ef6 <code>unsorted.txt</code> \u8bfb\u53d6\u5185\u5bb9\uff0c\u6392\u5e8f\u540e\u5c06\u5176\u8f93\u51fa\u5230 <code>sorted.txt</code>\u3002 \u8fd9\u4e9b\u662f\u57fa\u672c\u7684\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u7ec4\u5408\u548c\u6269\u5c55\u3002</p> <p>cat <code>cat</code> \u662f Linux \u548c\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u5e38\u7528\u547d\u4ee4\uff0c\u5b83\u7684\u540d\u5b57\u6765\u6e90\u4e8e \"concatenate\"\uff08\u8fde\u63a5\uff09\u7684\u7f29\u5199\u3002<code>cat</code> \u547d\u4ee4\u7684\u4e3b\u8981\u7528\u9014\u662f\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u3001\u521b\u5efa\u6587\u4ef6\u3001\u6587\u4ef6\u5185\u5bb9\u5408\u5e76\u4ee5\u53ca\u57fa\u672c\u7684\u6587\u672c\u5904\u7406\u3002 \u4ee5\u4e0b\u662f <code>cat</code> \u547d\u4ee4\u7684\u4e00\u4e9b\u5e38\u89c1\u7528\u6cd5\uff1a</p> <ol> <li>\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\uff1a    Bash<pre><code>cat filename.txt\n</code></pre>    \u8fd9\u4f1a\u663e\u793a <code>filename.txt</code> \u6587\u4ef6\u7684\u5185\u5bb9\u3002</li> <li>\u521b\u5efa\u6587\u4ef6\u6216\u5411\u6587\u4ef6\u8ffd\u52a0\u5185\u5bb9\uff1a    Bash<pre><code>cat &gt; filename.txt\n</code></pre>    \u6309\u4e0b\u56de\u8f66\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u8f93\u5165\u6587\u672c\u3002\u5f53\u4f60\u5b8c\u6210\u8f93\u5165\u5e76\u6309\u4e0b <code>Ctrl + D</code> \u65f6\uff0c\u8f93\u5165\u7684\u6587\u672c\u4f1a\u88ab\u5199\u5165 <code>filename.txt</code>\u3002\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8986\u76d6\u539f\u6709\u5185\u5bb9\u3002    \u8981\u8ffd\u52a0\u5185\u5bb9\u800c\u4e0d\u662f\u8986\u76d6\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a    Bash<pre><code>cat &gt;&gt; filename.txt\n</code></pre></li> <li>\u5408\u5e76\u6587\u4ef6\u5185\u5bb9\uff1a    Bash<pre><code>cat file1.txt file2.txt &gt; combined.txt\n</code></pre>    \u8fd9\u4f1a\u5c06 <code>file1.txt</code> \u548c <code>file2.txt</code> \u7684\u5185\u5bb9\u5408\u5e76\u540e\u5199\u5165 <code>combined.txt</code>\u3002</li> <li>\u4e0e\u7ba1\u9053\u914d\u5408\u4f7f\u7528\uff1a    <code>cat</code> \u547d\u4ee4\u5e38\u4e0e\u5176\u4ed6\u547d\u4ee4\u901a\u8fc7\u7ba1\u9053\uff08<code>|</code>\uff09\u914d\u5408\u4f7f\u7528\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u6765\u53d1\u9001\u6587\u4ef6\u5185\u5bb9\u5230\u5176\u4ed6\u547d\u4ee4\u8fdb\u884c\u5904\u7406\uff1a    Bash<pre><code>cat filename.txt | grep \"keyword\"\n</code></pre>    \u8fd9\u4f1a\u663e\u793a <code>filename.txt</code> \u4e2d\u5305\u542b \"keyword\" \u7684\u6240\u6709\u884c\u3002    <code>cat</code> \u547d\u4ee4\u662f\u5b66\u4e60 Linux \u547d\u4ee4\u884c\u65f6\u7684\u57fa\u7840\u5de5\u5177\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u7b80\u5355\u4e14\u529f\u80fd\u591a\u6837\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u67e5\u770b\u5927\u6587\u4ef6\uff0c<code>cat</code> \u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u4f1a\u4e00\u6b21\u6027\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 <code>less</code> \u6216 <code>more</code> \u547d\u4ee4\u6765\u5206\u9875\u67e5\u770b\u3002</li> </ol> <p></p> <p>\u4e0a\u8bfe\u4ee3\u7801:</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\nint main()\n{\n    int c;\n    FILE *fpin,*fpout;\n    char s[101];\n\n    fpin=fopen(\"upper.txt\",\"r\");\n    fpout=fopen(\"upper2.txt\",\"a+\");\n    while ((c=fgetc(fpin))!=EOF)\n    {\n        fputc(tolower(c),fpout);\n    }\n\n    fscanf(fpout,\"%s\",s);\n    printf(\"%s\",s);\n\n    fseek(fpout,12L,0);\n\n    fclose(fpin);\n    fclose(fpout);\n    return 0;\n}\n</code></pre>"},{"location":"CourseNotes/C%20Programming/CNote/#memcpy","title":"memcpy","text":"<p><code>memcpy</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u4e00\u4e2a\u5757\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5757\u3002\u4ee5\u4e0b\u662f <code>memcpy</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void *memcpy(void *dest, const void *src, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>dest</code>\uff1a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u590d\u5236\u7684\u6570\u636e\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u5730\u65b9\u3002</li> <li><code>src</code>\uff1a\u6307\u5411\u6e90\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u8981\u590d\u5236\u7684\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</li> <li><code>n</code>\uff1a\u8981\u590d\u5236\u7684\u5b57\u8282\u6570\u3002   <code>memcpy</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757 <code>dest</code> \u7684\u6307\u9488\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memcpy</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char src[50] = \"Hello, World!\";\n    char dest[50];\n    // \u4f7f\u7528 memcpy \u590d\u5236\u5b57\u7b26\u4e32\n    memcpy(dest, src, strlen(src) + 1); // +1 \u662f\u4e3a\u4e86\u5305\u542b\u5b57\u7b26\u4e32\u7684\u7a7a\u7ec8\u6b62\u7b26 '\\0'\n    printf(\"Source: %s\\n\", src);\n    printf(\"Destination: %s\\n\", dest);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6e90\u5b57\u7b26\u4e32 <code>src</code> \u548c\u4e00\u4e2a\u76ee\u6807\u5b57\u7b26\u4e32\u6570\u7ec4 <code>dest</code>\u3002\u6211\u4eec\u4f7f\u7528 <code>memcpy</code> \u6765\u590d\u5236 <code>src</code> \u4e2d\u7684\u5185\u5bb9\u5230 <code>dest</code> \u4e2d\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4f20\u9012\u7ed9 <code>memcpy</code> \u7684\u5b57\u8282\u6570\u662f <code>strlen(src) + 1</code>\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u590d\u5236\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4ee5\u53ca\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u786e\u4fdd <code>dest</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u8db3\u591f\u5927\uff0c\u80fd\u591f\u5bb9\u7eb3\u4ece <code>src</code> \u590d\u5236\u8fc7\u6765\u7684 <code>n</code> \u4e2a\u5b57\u8282\uff0c\u4ee5\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u3002</li> <li><code>memcpy</code> \u4e0d\u4f1a\u68c0\u67e5\u6e90\u548c\u76ee\u6807\u5185\u5b58\u5757\u4e4b\u95f4\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5982\u679c\u5b58\u5728\u91cd\u53e0\uff0c\u5e94\u8be5\u4f7f\u7528 <code>memmove</code> \u51fd\u6570\uff0c\u5b83\u4f1a\u6b63\u786e\u5904\u7406\u91cd\u53e0\u533a\u57df\u7684\u590d\u5236\u3002</li> <li><code>memcpy</code> \u51fd\u6570\u4e0d\u4f1a\u5728\u76ee\u6807\u5185\u5b58\u5757\u540e\u6dfb\u52a0\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6b63\u5728\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u786e\u4fdd\u624b\u52a8\u590d\u5236\u7a7a\u7ec8\u6b62\u7b26\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#memmove","title":"memmove","text":"<p><code>memmove</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u4e00\u4e2a\u5757\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5757\uff0c\u5373\u4f7f\u8fd9\u4e24\u4e2a\u5757\u6709\u91cd\u53e0\u4e5f\u662f\u5b89\u5168\u7684\u3002\u4ee5\u4e0b\u662f <code>memmove</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void *memmove(void *dest, const void *src, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>dest</code>\uff1a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u590d\u5236\u7684\u6570\u636e\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u5730\u65b9\u3002</li> <li><code>src</code>\uff1a\u6307\u5411\u6e90\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u8981\u590d\u5236\u7684\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</li> <li><code>n</code>\uff1a\u8981\u590d\u5236\u7684\u5b57\u8282\u6570\u3002   <code>memmove</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757 <code>dest</code> \u7684\u6307\u9488\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memmove</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char buffer[50] = \"This is a string, and it will be modified.\";\n    // \u4f7f\u7528 memmove \u5728\u540c\u4e00\u5185\u5b58\u5757\u5185\u79fb\u52a8\u6570\u636e\n    memmove(buffer + 10, buffer + 15, 10); // \u5c06 \"and it\" \u79fb\u52a8\u5230 \"This is a \" \u4e4b\u540e\n    printf(\"Resulting string: %s\\n\", buffer);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 <code>buffer</code>\uff0c\u6211\u4eec\u4f7f\u7528 <code>memmove</code> \u6765\u5728\u6570\u7ec4\u5185\u90e8\u79fb\u52a8\u6570\u636e\u3002\u6211\u4eec\u79fb\u52a8\u4e86\u4ece\u7d22\u5f15 15 \u5f00\u59cb\u7684 10 \u4e2a\u5b57\u8282\uff08\u5373\u5b57\u7b26\u4e32 \"and it\"\uff09\u5230\u4ece\u7d22\u5f15 10 \u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u539f\u6765\u7684\u5b57\u7b26\u4e32 \"This is a string, and it will be modified.\" \u88ab\u4fee\u6539\u4e3a \"This is a and it string, will be modified.\"\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u4e0e <code>memcpy</code> \u4e0d\u540c\uff0c<code>memmove</code> \u80fd\u591f\u6b63\u786e\u5904\u7406\u6e90\u548c\u76ee\u6807\u5185\u5b58\u5757\u91cd\u53e0\u7684\u60c5\u51b5\u3002</li> <li>\u786e\u4fdd <code>dest</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u8db3\u591f\u5927\uff0c\u80fd\u591f\u5bb9\u7eb3\u4ece <code>src</code> \u590d\u5236\u8fc7\u6765\u7684 <code>n</code> \u4e2a\u5b57\u8282\uff0c\u4ee5\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u3002</li> <li><code>memmove</code> \u51fd\u6570\u4e0d\u4f1a\u5728\u76ee\u6807\u5185\u5b58\u5757\u540e\u6dfb\u52a0\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6b63\u5728\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u786e\u4fdd\u624b\u52a8\u590d\u5236\u7a7a\u7ec8\u6b62\u7b26\uff0c\u6216\u8005\u5728\u79fb\u52a8\u540e\u624b\u52a8\u8bbe\u7f6e\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#memcmp","title":"memcmp","text":"<p><code>memcmp</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5185\u5b58\u5757\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u3002\u4ee5\u4e0b\u662f <code>memcmp</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>int memcmp(const void *s1, const void *s2, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s1</code>\uff1a\u6307\u5411\u7b2c\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>s2</code>\uff1a\u6307\u5411\u7b2c\u4e8c\u4e2a\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>n</code>\uff1a\u8981\u6bd4\u8f83\u7684\u5b57\u8282\u6570\u3002   <code>memcmp</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\uff0c\u5176\u7ed3\u679c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</li> <li>\u5982\u679c\u8fd4\u56de\u503c &lt; 0\uff0c\u5219\u8868\u793a <code>s1</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u5c0f\u4e8e <code>s2</code> \u6307\u5411\u7684\u5185\u5b58\u5757\uff08\u6309\u5b57\u8282\u6bd4\u8f83\uff09\u3002</li> <li>\u5982\u679c\u8fd4\u56de\u503c &gt; 0\uff0c\u5219\u8868\u793a <code>s1</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u5927\u4e8e <code>s2</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u3002</li> <li>\u5982\u679c\u8fd4\u56de\u503c = 0\uff0c\u5219\u8868\u793a\u4e24\u4e2a\u5185\u5b58\u5757\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u76f8\u7b49\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memcmp</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char str1[] = \"Hello, World!\";\n    char str2[] = \"Hello, world!\";\n    size_t n = 12; // \u6bd4\u8f83\u524d12\u4e2a\u5b57\u8282\n    int result = memcmp(str1, str2, n);\n    if (result &lt; 0) {\n        printf(\"str1 is less than str2.\\n\");\n    } else if (result &gt; 0) {\n        printf(\"str1 is greater than str2.\\n\");\n    } else {\n        printf(\"str1 is equal to str2.\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u4e86 <code>str1</code> \u548c <code>str2</code> \u7684\u524d 12 \u4e2a\u5b57\u8282\u3002\u7531\u4e8e <code>str1</code> \u4e2d\u7684 \"World\" \u4e2d\u7684 \"W\" \u5927\u5199\uff0c\u800c <code>str2</code> \u4e2d\u7684 \"world\" \u4e2d\u7684 \"w\" \u5c0f\u5199\uff0c\u6bd4\u8f83\u7684\u7ed3\u679c\u662f <code>str1</code> \u5927\u4e8e <code>str2</code>\uff0c\u56e0\u6b64\u8f93\u51fa \"str1 is greater than str2.\"\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li><code>memcmp</code> \u6bd4\u8f83\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5b9e\u9645\u5b57\u8282\u503c\uff0c\u4e0d\u533a\u5206\u5b57\u7b26\u7684\u5927\u5c0f\u5199\u3002</li> <li>\u5982\u679c\u6bd4\u8f83\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u786e\u4fdd\u6bd4\u8f83\u7684\u5b57\u8282\u957f\u5ea6\u4e0d\u8d85\u8fc7\u5b57\u7b26\u4e32\u7684\u5b9e\u9645\u957f\u5ea6\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5230\u672a\u5b9a\u4e49\u7684\u5185\u5b58\u533a\u57df\u3002</li> <li>\u5f53\u6bd4\u8f83\u7684\u662f\u4ee5\u7a7a\u5b57\u7b26 <code>\\0</code> \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u901a\u5e38\u6bd4\u8f83\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u5373\u53ef\uff0c\u5373 <code>n</code> \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u7a7a\u7ec8\u6b62\u7b26\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#memchr","title":"memchr","text":"<p><code>memchr</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u6307\u5b9a\u7684\u5185\u5b58\u5757\u4e2d\u67e5\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5b57\u7b26(\u53ea\u80fd\u67e5\u627e\u5355\u4e2a\u5b57\u7b26)\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f <code>memchr</code> \u51fd\u6570\u7684\u539f\u578b\uff1a</p> C<pre><code>void *memchr(const void *s, int c, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s</code>\uff1a\u6307\u5411\u8981\u641c\u7d22\u7684\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>c</code>\uff1a\u8981\u67e5\u627e\u7684\u5b57\u7b26\uff08\u4ee5 <code>int</code> \u7c7b\u578b\u4f20\u9012\uff0c\u4f46\u51fd\u6570\u5185\u90e8\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a <code>unsigned char</code>\uff09\u3002</li> <li><code>n</code>\uff1a\u8981\u5728\u5176\u4e2d\u641c\u7d22\u7684\u5185\u5b58\u5757\u7684\u5b57\u8282\u6570\u3002   \u5982\u679c <code>memchr</code> \u5728\u5185\u5b58\u5757\u4e2d\u627e\u5230\u4e86\u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u5b83\u4f1a\u8fd4\u56de\u6307\u5411\u8be5\u5b57\u7b26\u7684\u6307\u9488\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u51fd\u6570\u8fd4\u56de <code>NULL</code>\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memchr</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    const char str[] = \"Hello, World!\";\n    char to_find = 'W';\n    // \u5728 str \u4e2d\u67e5\u627e\u5b57\u7b26 'W'\n    void *ptr = memchr(str, to_find, strlen(str));\n    if (ptr != NULL) {\n        // \u627e\u5230\u4e86\u5b57\u7b26 'W'\n        printf(\"Found '%c' at position: %ld\\n\", to_find, (long)(ptr - str));\n    } else {\n        // \u6ca1\u6709\u627e\u5230\u5b57\u7b26 'W'\n        printf(\"Character '%c' not found.\\n\", to_find);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 'W'\u3002\u5982\u679c\u627e\u5230\u4e86\uff0c<code>memchr</code> \u4f1a\u8fd4\u56de\u6307\u5411\u8be5\u5b57\u7b26\u7684\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51cf\u53bb\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u6307\u9488\u6765\u8ba1\u7b97\u5b57\u7b26\u7684\u4f4d\u7f6e\u3002 \u8f93\u51fa\u7ed3\u679c\u5c06\u662f\uff1a</p> Text Only<pre><code>Found 'W' at position: 7\n</code></pre> <p>\u8fd9\u91cc\u7684\u4f4d\u7f6e\u662f\u4ece 0 \u5f00\u59cb\u7684\u7d22\u5f15\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u8ba1\u7b97\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u5047\u8bbe <code>str</code> \u662f\u4e00\u4e2a\u4ee5 null \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14 <code>ptr</code> \u548c <code>str</code> \u90fd\u662f\u6307\u5411 <code>char</code> \u7c7b\u578b\u7684\u6307\u9488\u3002\u5982\u679c <code>str</code> \u662f\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f4d\u7f6e\u7684\u65b9\u5f0f\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"CourseNotes/C%20Programming/CNote/#memset","title":"memset","text":"<p><code>memset</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5c06\u4e00\u6bb5\u5185\u5b58\u5757\u4e2d\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a\u7279\u5b9a\u7684\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f <code>memset</code> \u51fd\u6570\u7684\u539f\u578b\uff1a</p> C<pre><code>void *memset(void *s, int c, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s</code>\uff1a\u6307\u5411\u8981\u8bbe\u7f6e\u503c\u7684\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>c</code>\uff1a\u8981\u8bbe\u7f6e\u7684\u503c\u3002\u8fd9\u4e2a\u503c\u4f1a\u88ab\u8f6c\u6362\u4e3a <code>unsigned char</code> \u7c7b\u578b\uff0c\u7136\u540e\u586b\u5145\u5230\u5185\u5b58\u5757\u4e2d\u3002</li> <li><code>n</code>\uff1a\u8981\u8bbe\u7f6e\u7684\u5185\u5b58\u5757\u7684\u5b57\u8282\u6570\u3002   <code>memset</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u88ab\u8bbe\u7f6e\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u901a\u5e38\u4e0e <code>s</code> \u76f8\u540c\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memset</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char str[50] = \"This is a sample string.\";\n    // \u5c06\u5b57\u7b26\u4e32\u7684\u524d5\u4e2a\u5b57\u7b26\u8bbe\u7f6e\u4e3a\u5b57\u7b26 'X'\n    memset(str, 'X', 5);\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"Modified string: %s\\n\", str);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>str</code> \u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u4f7f\u7528 <code>memset</code> \u5c06\u5b83\u7684\u524d 5 \u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a\u5b57\u7b26 'X'\u3002\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\uff1a</p> Text Only<pre><code>Modified string: XXXXX is a sample string.\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li><code>memset</code> \u7528\u4e8e\u8bbe\u7f6e\u5b57\u8282\uff0c\u800c\u4e0d\u662f\u8bbe\u7f6e\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff08\u5982 int\u3001float \u7b49\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528 <code>memset</code> \u8bbe\u7f6e\u975e\u5b57\u7b26\u7c7b\u578b\u7684\u6570\u636e\u65f6\uff0c\u9700\u8981\u8c28\u614e\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u7ed3\u679c\u3002</li> <li>\u5f53 <code>c</code> \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\uff08\u5373 <code>char</code> \u7c7b\u578b\uff09\u65f6\uff0c\u53ea\u6709 <code>c</code> \u7684\u6700\u4f4e\u5b57\u8282\u4f1a\u88ab\u7528\u6765\u586b\u5145\u5185\u5b58\uff0c\u5176\u4ed6\u5b57\u8282\u4f1a\u88ab\u5ffd\u7565\u3002</li> <li>\u5982\u679c <code>s</code> \u662f\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u4f53\u6216\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u4f7f\u7528 <code>memset</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ed3\u6784\u4f53\u6216\u5bf9\u8c61\u7684\u6210\u5458\u88ab\u9519\u8bef\u5730\u521d\u59cb\u5316\uff0c\u7279\u522b\u662f\u5982\u679c\u6210\u5458\u7684\u5927\u5c0f\u4e0d\u662f 1 \u5b57\u8282\u65f6\u3002</li> <li><code>memset</code> \u4e0d\u4f1a\u81ea\u52a8\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u7a7a\u5b57\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5f53\u7528\u4e8e\u5b57\u7b26\u4e32\u65f6\uff0c\u5e94\u786e\u4fdd\u4e0d\u4f1a\u8986\u76d6\u7ed3\u5c3e\u7684\u7a7a\u5b57\u7b26\uff0c\u9664\u975e\u6709\u610f\u8fd9\u6837\u505a\u3002</li> </ul> <p>\u4ee5\u4e0b\u662f 17 \u4e2a\u4ee5 <code>str</code> \u5f00\u5934\u7684\u51fd\u6570\u7684\u4ecb\u7ecd\u3001\u4f5c\u7528\u3001\u8fd4\u56de\u503c\u3001\u4f7f\u7528\u8bed\u53e5\u548c\u7b80\u5355\u89e3\u91ca\uff1a</p> <ol> <li> <p>strcpy(dest, src);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u590d\u5236\u5b57\u7b26\u4e32 <code>src</code> \u5230 <code>dest</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strcpy(buffer, \"Hello\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u590d\u5236\u5230 <code>buffer</code> \u4e2d\u3002</p> </li> <li> <p>strncpy(dest, src, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u590d\u5236 <code>src</code> \u4e2d\u7684\u6700\u591a <code>n</code> \u4e2a\u5b57\u7b26\u5230 <code>dest</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strncpy(buffer, \"Hello\", 4);</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u7684\u524d 4 \u4e2a\u5b57\u7b26\u590d\u5236\u5230 <code>buffer</code> \u4e2d\u3002</p> </li> <li> <p>strcat(dest, src);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06\u5b57\u7b26\u4e32 <code>src</code> \u8fde\u63a5\u5230 <code>dest</code> \u7684\u672b\u5c3e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strcat(buffer, \" World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\" World\"</code> \u8fde\u63a5\u5230 <code>buffer</code> \u7684\u672b\u5c3e\u3002</p> </li> <li> <p>strncat(dest, src, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06 <code>src</code> \u4e2d\u7684\u6700\u591a <code>n</code> \u4e2a\u5b57\u7b26\u8fde\u63a5\u5230 <code>dest</code> \u7684\u672b\u5c3e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strncat(buffer, \"World\", 3);</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"World\"</code> \u7684\u524d 3 \u4e2a\u5b57\u7b26\u8fde\u63a5\u5230 <code>buffer</code> \u7684\u672b\u5c3e\u3002</p> </li> <li> <p>strcmp(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u5982\u679c <code>str1</code> \u5c0f\u4e8e <code>str2</code> \u8fd4\u56de\u8d1f\u6570\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de 0\uff0c\u5982\u679c <code>str1</code> \u5927\u4e8e <code>str2</code> \u8fd4\u56de\u6b63\u6570\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strcmp(\"abc\", \"abd\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"abc\"</code> \u548c <code>\"abd\"</code>\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strncmp(str1, str2, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strncmp(\"abc\", \"abd\", 2);</code></li> <li> <p>\u89e3\u91ca\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"abc\"</code> \u548c <code>\"abd\"</code> \u7684\u524d 2 \u4e2a\u5b57\u7b26\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strcasecmp(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strcasecmp(\"Hello\", \"hello\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u548c <code>\"hello\"</code>\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strncasecmp(str1, str2, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strncasecmp(\"Hello\", \"help\", 3);</code></li> <li> <p>\u89e3\u91ca\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u548c <code>\"help\"</code> \u7684\u524d 3 \u4e2a\u5b57\u7b26\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strchr(str, c);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>c</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u5b57\u7b26 <code>c</code> \u7684\u6307\u9488\uff0c\u5982\u679c\u672a\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strchr(\"example\", 'e');</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"example\"</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>'e'</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strrchr(str, c);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>c</code> \u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strchr</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strrchr(\"example\", 'e');</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"example\"</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>'e'</code> \u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strstr(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32 <code>str2</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u5b50\u5b57\u7b26\u4e32 <code>str2</code> \u7684\u6307\u9488\uff0c\u5982\u679c\u672a\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strstr(\"Hello World\", \"World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"Hello World\"</code> \u4e2d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32 <code>\"World\"</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002   \u4ee5\u4e0b\u662f\u7b2c 12 \u5230\u7b2c 17 \u4e2a\u4ee5 <code>str</code> \u5f00\u5934\u7684\u51fd\u6570\u7684\u4ecb\u7ecd\u3001\u4f5c\u7528\u3001\u8fd4\u56de\u503c\u3001\u4f7f\u7528\u8bed\u53e5\u548c\u7b80\u5355\u89e3\u91ca\uff1a</p> </li> <li> <p>strtok(str, delim);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06\u5b57\u7b26\u4e32 <code>str</code> \u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u6807\u8bb0\uff0c<code>delim</code> \u662f\u5206\u9694\u7b26\u5b57\u7b26\u4e32\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u4e0b\u4e00\u4e2a\u6807\u8bb0\u7684\u6307\u9488\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u591a\u6807\u8bb0\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *token = strtok(buffer, \" ,\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728 <code>buffer</code> \u4e2d\u67e5\u627e\u7531\u7a7a\u683c\u6216\u9017\u53f7\u5206\u9694\u7684\u4e0b\u4e00\u4e2a\u6807\u8bb0\uff0c\u5e76\u5c06\u5176\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>token</code> \u4e2d\u3002</p> </li> <li> <p>strlen(str);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>str</code> \u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u672b\u5c3e\u7684\u7a7a\u5b57\u7b26 <code>\\0</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32 <code>str</code> \u7684\u957f\u5ea6\uff0c\u7c7b\u578b\u4e3a <code>size_t</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strlen(\"Hello World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"Hello World\"</code> \u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 <code>length</code>\u3002</p> </li> <li> <p>strerror(errnum);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6839\u636e\u9519\u8bef\u7f16\u53f7 <code>errnum</code> \u8fd4\u56de\u4e00\u4e2a\u63cf\u8ff0\u9519\u8bef\u7684\u5b57\u7b26\u4e32\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *error = strerror(errno);</code></li> <li> <p>\u89e3\u91ca\uff1a\u83b7\u53d6\u4e0e <code>errno</code> \u76f8\u5173\u7684\u9519\u8bef\u63cf\u8ff0\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728 <code>error</code> \u4e2d\u3002</p> </li> <li> <p>strpbrk(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411 <code>str1</code> \u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u7684\u6307\u9488\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strpbrk(\"hello\", \"aeiou\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"hello\"</code> \u4e2d\u67e5\u627e <code>\"aeiou\"</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strcspn(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u90e8\u5206\u7684\u957f\u5ea6\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>str1</code> \u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strcspn(\"hello\", \"aeiou\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"hello\"</code> \u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0 <code>\"aeiou\"</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u4e4b\u524d\u7684\u5b57\u7b26\u6570\u3002</p> </li> <li> <p>strspn(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>str1</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>str2</code> \u4e2d\u5b57\u7b26\u7684\u957f\u5ea6\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>str1</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>str2</code> \u4e2d\u5b57\u7b26\u7684\u957f\u5ea6\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strspn(\"123abc\", \"1234567890\");</code></li> <li>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"123abc\"</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>\"1234567890\"</code> \u4e2d\u6570\u5b57\u7684\u957f\u5ea6\u3002</li> </ol>"},{"location":"CourseNotes/C%20Programming/CNote/#_43","title":"\u57fa\u7840\u7684\u4e1c\u897f","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u7528 do while \u800c\u4e0d\u662f\u76f4\u63a5\u52a0{}\uff1f \u4f7f\u7528 <code>do { ... } while(0)</code> \u800c\u4e0d\u662f\u76f4\u63a5\u52a0 <code>{}</code> \u6765\u5b9a\u4e49\u5b8f\u7684\u539f\u56e0\u6709\u51e0\u4e2a\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u786e\u4fdd\u5b8f\u7684\u4f7f\u7528\u66f4\u52a0\u5b89\u5168\u548c\u7075\u6d3b\uff1a</p> <ol> <li> <p>\u8bed\u53e5\u8fb9\u754c\uff1a</p> </li> <li> <p>\u5982\u679c\u76f4\u63a5\u4f7f\u7528 <code>{}</code> \u5b9a\u4e49\u5b8f\uff0c\u90a3\u4e48\u5b8f\u5c55\u5f00\u540e\u53ef\u80fd\u4f1a\u7834\u574f\u539f\u6709\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u5c24\u5176\u662f\u5728\u5b8f\u9700\u8981\u4f5c\u4e3a\u6761\u4ef6\u8bed\u53e5\uff08\u5982 <code>if</code>\u3001<code>while</code>\u3001<code>for</code>\uff09\u7684\u4e00\u90e8\u5206\u65f6\u3002\u4f8b\u5982\uff1a      C<pre><code>if (condition)\n    MACRO(x, y);\n</code></pre>      \u5982\u679c <code>MACRO</code> \u53ea\u662f\u7b80\u5355\u5730\u7528 <code>{ ... }</code> \u5b9a\u4e49\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u4e0e <code>if</code> \u8bed\u53e5\u7684\u8bed\u6cd5\u51b2\u7a81\uff0c\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002</p> </li> <li> <p>\u591a\u6761\u8bed\u53e5\uff1a</p> </li> <li> <p>\u5982\u679c\u5b8f\u5305\u542b\u591a\u6761\u8bed\u53e5\uff0c\u76f4\u63a5\u4f7f\u7528 <code>{}</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u8bed\u53e5\u610f\u5916\u5730\u6210\u4e3a\u66f4\u5927\u7684\u4ee3\u7801\u5757\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u903b\u8f91\u9519\u8bef\u6216\u7f16\u8bd1\u9519\u8bef\u3002</p> </li> <li> <p>\u53ef\u9884\u6d4b\u6027\uff1a</p> </li> <li> <p><code>do { ... } while(0)</code> \u7ed3\u6784\u786e\u4fdd\u5b8f\u603b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u51fa\u73b0\uff0c\u65e0\u8bba\u5b83\u5728\u54ea\u91cc\u88ab\u4f7f\u7528\u3002\u8fd9\u610f\u5473\u7740\u5b8f\u7684\u4f7f\u7528\u4e0d\u4f1a\u5f71\u54cd\u5468\u56f4\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u63d0\u9ad8\u4e86\u5b8f\u7684\u53ef\u9884\u6d4b\u6027\u548c\u5b89\u5168\u6027\u3002</p> </li> <li> <p>\u907f\u514d\u60ac\u6302\u7684 else \u95ee\u9898\uff1a</p> </li> <li> <p>\u5982\u679c\u5b8f\u5c55\u5f00\u4e3a\u591a\u4e2a\u8bed\u53e5\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8bed\u53e5\u5305\u62ec <code>if</code> \u6761\u4ef6\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u9047\u5230\u201c\u60ac\u6302\u7684 else\u201d\u95ee\u9898\u3002\u4f8b\u5982\uff1a      C<pre><code>if (condition)\n    MACRO(x, y);\nelse\n    do_something_else();\n</code></pre>      \u5982\u679c <code>MACRO</code> \u5305\u542b\u591a\u4e2a\u8bed\u53e5\uff0c\u90a3\u4e48 <code>else</code> \u53ef\u80fd\u4f1a\u4e0e\u5b8f\u5185\u90e8\u7684 <code>if</code> \u800c\u4e0d\u662f\u5916\u90e8\u7684 <code>if</code> \u914d\u5bf9\uff0c\u5bfc\u81f4\u903b\u8f91\u9519\u8bef\u3002</p> </li> <li> <p>\u4ee3\u7801\u6e05\u6670\uff1a</p> </li> <li>\u4f7f\u7528 <code>do { ... } while(0)</code> \u53ef\u4ee5\u6e05\u695a\u5730\u8868\u660e\u5b8f\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u5757\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u3002</li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c<code>do { ... } while(0)</code> \u662f\u4e00\u79cd\u5e38\u7528\u7684\u5b8f\u5b9a\u4e49\u6280\u5de7\uff0c\u5b83\u786e\u4fdd\u5b8f\u5728\u4f7f\u7528\u65f6\u603b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u6267\u884c\uff0c\u907f\u514d\u4e86\u4e0a\u8ff0\u95ee\u9898\uff0c\u5e76\u4e14\u4f7f\u5f97\u5b8f\u7684\u884c\u4e3a\u66f4\u52a0\u53ef\u9884\u6d4b\u548c\u5b89\u5168\u3002</p> <p>C \u8bed\u8a00\u4e2d\uff0c\u7f16\u8bd1\u9884\u5904\u7406\u540e\uff0c\u6240\u6709\u7684\u7b26\u53f7\u5e38\u91cf\u540d\u548c\u5b8f\u540d\u90fd\u7528\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u3002\u5bf9\u5417\uff1f \u8fd9\u4e2a\u8bf4\u6cd5\u4e0d\u5b8c\u5168\u6b63\u786e\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u7f16\u8bd1\u9884\u5904\u7406\u9636\u6bb5\u786e\u5b9e\u4f1a\u5904\u7406\u7b26\u53f7\u5e38\u91cf\u548c\u5b8f\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u662f\u88ab\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u88ab\u66ff\u6362\u4e3a\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u503c\u6216\u5b9a\u4e49\u7684\u4ee3\u7801\u3002</p> <p>\u5b8f\u5b9a\u4e49\u4e0d\u5b58\u5728\u7c7b\u578b\u95ee\u9898\uff0c\u5b8f\u540d\u65e0\u7c7b\u578b\uff0c\u5b83\u7684\u53c2\u6570\u4e5f\u65e0\u7c7b\u578b\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u548c\u5b8f\u53c2\u6570\u786e\u5b9e\u6ca1\u6709\u7c7b\u578b\u7684\u6982\u5ff5\uff1a</p> <ol> <li> <p>\u5b8f\u540d\u65e0\u7c7b\u578b\uff1a</p> </li> <li> <p>\u5b8f\u540d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u5b83\u5728\u9884\u5904\u7406\u9636\u6bb5\u88ab\u66ff\u6362\u4e3a\u5b8f\u5b9a\u4e49\u4e2d\u6307\u5b9a\u7684\u4ee3\u7801\u3002\u5b8f\u540d\u4e0d\u6d89\u53ca\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7b26\u53f7\uff0c\u7528\u6765\u6307\u793a\u9884\u5904\u7406\u5668\u5728\u54ea\u91cc\u8fdb\u884c\u6587\u672c\u66ff\u6362\u3002</p> </li> <li> <p>\u5b8f\u53c2\u6570\u65e0\u7c7b\u578b\uff1a</p> </li> <li>\u5b8f\u53c2\u6570\u5728\u5b8f\u5b9a\u4e49\u4e2d\u51fa\u73b0\u65f6\uff0c\u5b83\u4eec\u662f\u4f5c\u4e3a\u666e\u901a\u6807\u8bc6\u7b26\u5904\u7406\u7684\u3002\u9884\u5904\u7406\u5668\u5728\u5c55\u5f00\u5b8f\u65f6\uff0c\u4f1a\u5c06\u5b8f\u53c2\u6570\u66ff\u6362\u4e3a\u5b83\u4eec\u5728\u5b8f\u8c03\u7528\u4e2d\u5bf9\u5e94\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u4e2a\u66ff\u6362\u8fc7\u7a0b\u4e0d\u8003\u8651\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\u3002\u56e0\u6b64\uff0c\u5b8f\u53c2\u6570\u6ca1\u6709\u7c7b\u578b\uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u662f\u5728\u5b8f\u5c55\u5f00\u540e\u7684\u4ee3\u7801\u4e2d\u7531\u7f16\u8bd1\u5668\u6839\u636e\u4e0a\u4e0b\u6587\u786e\u5b9a\u7684\u3002</li> </ol> <p>\u7531\u4e8e\u5b8f\u7684\u8fd9\u79cd\u65e0\u7c7b\u578b\u7279\u6027\uff0c\u4f7f\u7528\u5b8f\u65f6\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u7c7b\u578b\u5b89\u5168\u548c\u5b8f\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u95ee\u9898\u3002</p> <p>C \u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5c40\u90e8\u53d8\u91cf\u662f\u6307\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u53ea\u5728\u5b9a\u4e49\u5b83\u4eec\u7684\u51fd\u6570\u5185\u90e8\u53ef\u89c1\u548c\u53ef\u7528\u3002\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5728\u51fd\u6570\u5916\u90e8\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u4e5f\u65e0\u6cd5\u88ab\u8bbf\u95ee\u3002</p> <p>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u8d4b\u503c\uff0c\u5176\u5b58\u50a8\u5355\u5143\u4e2d\u5c06\u662f\u968f\u673a\u503c\u3002\u5bf9\u5417\uff1f \u4e0d\u5bf9\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08\u5373\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528 <code>static</code> \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff09\u5373\u4f7f\u6ca1\u6709\u663e\u5f0f\u8d4b\u503c\uff0c\u5b83\u4eec\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u4e5f\u4e0d\u4f1a\u662f\u968f\u673a\u503c\u3002\u76f8\u53cd\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\uff08\u5bf9\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff09\u3002\u8fd9\u662f C \u6807\u51c6\u89c4\u5b9a\u7684\u3002</p> <p>\u8fd9\u79cd\u521d\u59cb\u5316\u884c\u4e3a\u9002\u7528\u4e8e\u6240\u6709\u9759\u6001\u5b58\u50a8\u671f\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u5168\u5c40\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u3002\u5bf9\u4e8e\u975e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4f53\u3001\u6570\u7ec4\u7b49\uff09\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u662f\u6307\u5411\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u7684\u7c7b\u578b\uff0c\u5219\u9700\u8981\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5426\u5219\u5b83\u4eec\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid function() {\n    static int value;  // \u6ca1\u6709\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5c06\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\n    printf(\"%d\\n\", value);  // \u8f93\u51fa\u5c06\u4e3a0\n}\n\nint main() {\n    function();  // \u8f93\u51fa0\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f <code>value</code> \u6ca1\u6709\u88ab\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5b83\u4e5f\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316\u4e3a 0\uff0c\u56e0\u4e3a <code>value</code> \u662f\u4e00\u4e2a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u3002\u6bcf\u6b21\u8c03\u7528 <code>function</code> \u65f6\uff0c<code>value</code> \u7684\u503c\u90fd\u4f1a\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u9759\u6001\u5b58\u50a8\u671f\u3002\u5982\u679c <code>value</code> \u662f\u4e00\u4e2a\u975e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u4e00\u4e2a\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5bb9\u5c06\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u9664\u975e\u663e\u5f0f\u521d\u59cb\u5316\u3002</p> <p>C \u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u9759\u6001\u53d8\u91cf\u5b58\u653e\u5728\u6808\u533a\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u4f4d\u4e8e\u5806\u533a\u3002\u5bf9\u5417\uff1f \u4e0d\u5bf9\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u9759\u6001\u53d8\u91cf\uff08\u5305\u62ec\u5168\u5c40\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u5e76\u4e0d\u5b58\u653e\u5728\u6808\u533a\uff0c\u800c\u662f\u5b58\u653e\u5728\u9759\u6001\u5b58\u50a8\u533a\uff08\u4e5f\u79f0\u4e3a\u5168\u5c40\u6570\u636e\u533a\uff09\u3002\u9759\u6001\u5b58\u50a8\u533a\u662f\u7a0b\u5e8f\u5185\u5b58\u4e2d\u4e13\u95e8\u7528\u4e8e\u5b58\u50a8\u9759\u6001\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u7684\u533a\u57df\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u786e\u5b9e\u4f4d\u4e8e\u5806\u533a\u3002\u5806\u533a\u662f\u7a0b\u5e8f\u5185\u5b58\u4e2d\u7528\u4e8e\u52a8\u6001\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u7684\u533a\u57df\u3002\u901a\u8fc7\u4f7f\u7528 malloc\u3001calloc\u3001realloc \u7b49\u51fd\u6570\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7533\u8bf7\u548c\u91ca\u653e\u5806\u533a\u7684\u5185\u5b58\u3002</p> <p>\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4e3a\u5176\u6240\u5728\u7684\u6574\u4e2a\u6587\u4ef6\u8303\u56f4\u3002\u5bf9\u5417\uff1f</p> <p>\u5168\u5c40\u53d8\u91cf\u5fc5\u987b\u5728\u51fd\u6570\u4e4b\u5916\u8fdb\u884c\u5b9a\u4e49\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5fc5\u987b\u5728\u51fd\u6570\u4e4b\u5916\u8fdb\u884c\u5b9a\u4e49\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5fc5\u987b\u5728\u4efb\u4f55\u51fd\u6570\u5b9a\u4e49\u4e4b\u5916\u7684\u4ee3\u7801\u533a\u57df\u4e2d\u58f0\u660e\u548c\u521d\u59cb\u5316\u3002\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u6587\u4ef6\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u8be5\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u51fd\u6570\u8bbf\u95ee\u548c\u4fee\u6539\u3002</p> <p>\u51e1\u662f\u51fd\u6570\u4e2d\u672a\u6307\u5b9a\u5b58\u50a8\u7c7b\u522b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u9690\u542b\u7684\u5b58\u50a8\u7c7b\u578b\u4e3a( )\u3002 \u81ea\u52a8\u7c7b\u578b(auto)</p> <p>\u5404\u79cd\u7c7b\u578b\u53d8\u91cf\u7684\u751f\u5b58\u671f\u548c\u4f5c\u7528\u57df\u662f\u4ec0\u4e48?</p>"},{"location":"CourseNotes/C%20Programming/CNote/#automatic-variable","title":"\u81ea\u52a8\u53d8\u91cf\uff08Automatic Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u81ea\u52a8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u671f\u95f4\u5b58\u5728\u3002\u5f53\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u4f1a\u88ab\u91ca\u653e\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u81ea\u52a8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u53ef\u89c1\u3002\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u81ea\u52a8\u53d8\u91cf\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#static-variable","title":"\u9759\u6001\u53d8\u91cf\uff08Static Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u9759\u6001\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5168\u5c40\u7684\uff0c\u4ece\u58f0\u660e\u65f6\u5f00\u59cb\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\u5373\u4f7f\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u7ed3\u675f\u540e\uff0c\u9759\u6001\u53d8\u91cf\u4ecd\u7136\u5b58\u5728\uff0c\u5176\u503c\u4e0d\u4f1a\u4e22\u5931\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u9759\u6001\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u53ef\u89c1\u3002\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#external-variable","title":"\u5916\u90e8\u53d8\u91cf\uff08External Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u5916\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5168\u5c40\u7684\uff0c\u4ece\u58f0\u660e\u65f6\u5f00\u59cb\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\u5b83\u4eec\u5728\u6574\u4e2a\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u5185\u90fd\u5b58\u5728\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u5916\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5168\u5c40\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u6587\u4ef6\u6216\u51fd\u6570\u4e4b\u95f4\u5171\u4eab\u3002\u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u58f0\u660e\u4e86\u540c\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\uff08\u4f7f\u7528 <code>extern</code> \u5173\u952e\u5b57\uff09\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u6307\u5411\u540c\u4e00\u4e2a\u53d8\u91cf\u3002</li> </ul> <p>\u8fd9\u4e9b\u7279\u6027\u4f7f\u5f97\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u7f16\u7a0b\u573a\u666f\u3002\u4f8b\u5982\uff0c\u81ea\u52a8\u53d8\u91cf\u9002\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u6570\u636e\uff0c\u9759\u6001\u53d8\u91cf\u9002\u7528\u4e8e\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u4fdd\u6301\u72b6\u6001\uff0c\u800c\u5916\u90e8\u53d8\u91cf\u9002\u7528\u4e8e\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</p> <p>\u7f16\u8bd1,\u94fe\u63a5\u5206\u522b\u662f\u5e72\u4ec0\u4e48\u7684? \u7f16\u8bd1\uff08Compilation\uff09\u548c\u94fe\u63a5\uff08Linking\uff09\u662f\u5c06\u6e90\u4ee3\u7801\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u4e24\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_44","title":"\u7f16\u8bd1","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\u8f6c\u6362\u6210\u673a\u5668\u4ee3\u7801\u6587\u4ef6\uff08\u901a\u5e38\u662f\u76ee\u6807\u6587\u4ef6\uff0c\u5982 <code>.o</code> \u6587\u4ef6\uff09\u3002</li> <li>\u8fc7\u7a0b\uff1a</li> <li>\u9884\u5904\u7406\uff1a\u5904\u7406\u6e90\u4ee3\u7801\u4e2d\u7684\u5b8f\u5b9a\u4e49\u3001\u6587\u4ef6\u5305\u542b\u6307\u4ee4\u7b49\u3002\u4f8b\u5982\uff0c\u5c55\u5f00 <code>#include</code> \u6307\u4ee4\uff0c\u5c06\u5305\u542b\u7684\u5934\u6587\u4ef6\u5185\u5bb9\u63d2\u5165\u5230\u6e90\u6587\u4ef6\u4e2d\u3002</li> <li>\u8bed\u6cd5\u5206\u6790\uff1a\u68c0\u67e5\u6e90\u4ee3\u7801\u7684\u8bed\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u751f\u6210\u8bed\u6cd5\u6811\u3002</li> <li>\u8bed\u4e49\u5206\u6790\uff1a\u68c0\u67e5\u8bed\u6cd5\u6811\u4e2d\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff0c\u4f8b\u5982\u7c7b\u578b\u68c0\u67e5\u3002</li> <li>\u4f18\u5316\uff1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002</li> <li>\u4ee3\u7801\u751f\u6210\uff1a\u5c06\u4f18\u5316\u540e\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u76ee\u6807\u4ee3\u7801\uff08\u673a\u5668\u4ee3\u7801\uff09\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_45","title":"\u94fe\u63a5","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7ec4\u5408\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li>\u8fc7\u7a0b\uff1a</li> <li>\u7b26\u53f7\u89e3\u6790\uff1a\u89e3\u6790\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u5f15\u7528\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7b26\u53f7\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5b9a\u4e49\u3002</li> <li>\u91cd\u5b9a\u4f4d\uff1a\u8c03\u6574\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u5730\u5740\uff0c\u4f7f\u5176\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u6b63\u786e\u5730\u5b9a\u4f4d\u3002</li> <li>\u5408\u5e76\uff1a\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u5408\u5e76\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_46","title":"\u4e3e\u4f8b\u8bf4\u660e","text":"<p>\u5047\u8bbe\u4f60\u6709\u4e24\u4e2a\u6e90\u6587\u4ef6 <code>file1.c</code> \u548c <code>file2.c</code>\uff0c\u5b83\u4eec\u5206\u522b\u5305\u542b\u4e00\u4e9b\u51fd\u6570\u5b9a\u4e49\u548c\u8c03\u7528\u3002\u7f16\u8bd1\u5668\u4f1a\u5206\u522b\u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 <code>file1.o</code> \u548c <code>file2.o</code>\u3002\u7136\u540e\uff0c\u94fe\u63a5\u5668\u4f1a\u5c06\u8fd9\u4e24\u4e2a\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u8d77\u6765\uff0c\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 <code>a.out</code> \u6216\u5176\u4ed6\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u3002\u5982\u679c\u5728\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u67d0\u4e2a\u51fd\u6570\u6216\u53d8\u91cf\u5728\u6240\u6709\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u90fd\u6ca1\u6709\u5b9a\u4e49\uff0c\u5c31\u4f1a\u62a5\u94fe\u63a5\u9519\u8bef\u3002</p> <p>C \u8bed\u8a00\u7684\u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u5316\u662f\u5728\u54ea\u4e2a\u9636\u6bb5\u5b8c\u6210\u7684 \u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u5316\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u5b8c\u6210\u7684\uff0c\u5373\u5728 main() \u51fd\u6570\u5f00\u59cb\u4e4b\u524d\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u52a0\u8f7d\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u6839\u636e\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5728\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u8fdb\u5165 main() \u51fd\u6570\u4e4b\u524d\u5b8c\u6210\u7684\u3002</p> <p>\u53ef\u6267\u884c\u6587\u4ef6\u662f\u4ec0\u4e48\uff1f \u53ef\u6267\u884c\u6587\u4ef6\uff08Executable File\uff09\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u673a\u5668\u4ee3\u7801\u7684\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u4e9b\u5173\u952e\u70b9\uff1a</p>"},{"location":"CourseNotes/C%20Programming/CNote/#_47","title":"\u7ec4\u6210","text":"<ul> <li>\u673a\u5668\u4ee3\u7801\uff1a\u53ef\u6267\u884c\u6587\u4ef6\u5305\u542b\u4e86\u7f16\u8bd1\u540e\u7684\u673a\u5668\u4ee3\u7801\uff0c\u8fd9\u662f CPU \u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u7684\u6307\u4ee4\u3002</li> <li>\u6570\u636e\uff1a\u5305\u62ec\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u503c\u3002</li> <li>\u5143\u6570\u636e\uff1a\u5982\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff08\u901a\u5e38\u662f <code>main()</code> \u51fd\u6570\u7684\u5730\u5740\uff09\u3001\u7a0b\u5e8f\u9700\u8981\u7684\u52a8\u6001\u5e93\u4fe1\u606f\u7b49\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_48","title":"\u52a0\u8f7d\u548c\u6267\u884c","text":"<ul> <li>\u52a0\u8f7d\uff1a\u5f53\u7528\u6237\u542f\u52a8\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u5176\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5305\u62ec\u5206\u914d\u5185\u5b58\u3001\u5c06\u673a\u5668\u4ee3\u7801\u548c\u6570\u636e\u4ece\u6587\u4ef6\u590d\u5236\u5230\u5185\u5b58\u7b49\u3002</li> <li>\u6267\u884c\uff1a\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff08\u901a\u5e38\u662f <code>main()</code> \u51fd\u6570\uff09\uff0c\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_49","title":"\u793a\u4f8b","text":"<ul> <li>Windows\uff1a\u7528\u6237\u53ef\u4ee5\u53cc\u51fb <code>.exe</code> \u6587\u4ef6\u6765\u8fd0\u884c\u7a0b\u5e8f\u3002</li> <li>Linux/macOS\uff1a\u7528\u6237\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u76f4\u63a5\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982 <code>./program</code>\u3002</li> </ul>"},{"location":"CourseNotes/C%20Programming/CNote/#_50","title":"\u51fd\u6570\u6307\u9488","text":"<p>C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    double t1 , t2;\n    double (*p)(double); //\u5b9a\u4e49\u51fd\u6570\u6307\u9488,\u4f20\u5165double,\u8f93\u51fadouble\n    p=sin;\n    p=(double (*)(double))sin; //\u5f3a\u5236\u8f6c\u6362:\u590d\u5236\u53d8\u91cf\u7684\u5b9a\u4e49,\u53bb\u6389\u53d8\u91cf\n    t=sin(0.5);\n    t2=(*p)sin(0.5);\n    printf(\"%lf %lf\",t1,t2);\n}\n</code></pre> \u51fd\u6570\u6307\u9488\u6709\u4ec0\u4e48\u7528? - \u4e00\u4e2a\u6570\u7ec4,\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u4e0d\u540c\u51fd\u6570,\u53ef\u4ee5\u521b\u5efa\u51fd\u6570\u6307\u9488\u7684\u6570\u7ec4. C<pre><code>struct node\n{\n    float data;\n    float (*p)(float);\n} a[20] ;\n//\u4f7f\u7528\u65f6:(*(a[i].p))(a[i].data);\n</code></pre> - \u5bf9\u4e0d\u540c\u51fd\u6570\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c,\u901a\u8fc7\u6539\u53d8\u51fd\u6570\u6307\u9488\u5feb\u901f\u4fee\u6539. C<pre><code>//\u5b9a\u4e49\u51fd\u6570\ndouble froot(int a,int b,double (*p)(double));\n//\u8c03\u7528\ndouble t=froot(1,2,sin);\n</code></pre> </p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/","title":"CPU","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1421 \u4e2a\u5b57\u00a0\u00a022 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u90e8\u5206\u7531 AI \u751f\u6210\u3002</p> <p>\u300aLab02\u2014\u5efa\u7acb CPU \u8c03\u8bd5\u6d4b\u8bd5\u73af\u5883\u300b\u8be6\u7ec6\u63cf\u8ff0\u4e86\u6d59\u6c5f\u5927\u5b66\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1\u300b\u8bfe\u7a0b\u5b9e\u9a8c\u4e2d\u642d\u5efa\u7684\u5355\u5468\u671f RISC-V SoC\uff08System on Chip\uff09\u67b6\u6784\u3002\u4e0b\u9762\u662f\u5bf9\u8be5 CPU \u53ca\u6574\u4f53 SOC \u67b6\u6784\u7684\u5b8c\u6574\u89e3\u6790\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_1","title":"\ud83e\udde0 \u4e00\u3001\u6574\u4f53\u67b6\u6784\u6982\u89c8","text":"<p>\u5b9e\u9a8c\u76ee\u6807\u662f\uff1a</p> <p>\u57fa\u4e8e RISC-V \u5355\u5468\u671f CPU \u6838\u5fc3\uff08SCPU\uff09\uff0c\u4f7f\u7528 Vivado \u96c6\u6210\u591a\u4e2a\u5916\u8bbe IP \u6838\uff0c\u5efa\u7acb\u4e00\u4e2a\u53ef\u8c03\u8bd5\u3001\u53ef\u6d4b\u8bd5\u3001\u53ef\u663e\u793a\u7684\u7b80\u6613 SoC \u7cfb\u7edf\u3002</p> <p>\u5176\u9876\u5c42\u6a21\u5757\u540d\u4e3a <code>CSSTE.v</code>\uff08Computer System - Single-cycle processor Test Environment\uff09\u3002</p> <p>\u7cfb\u7edf\u7531 11 \u4e2a\u4e3b\u8981\u6a21\u5757\uff08U1~U11\uff09 \u6784\u6210\uff1a</p> \u6a21\u5757\u4ee3\u53f7 \u6a21\u5757\u540d\u79f0 \u529f\u80fd\u7b80\u8ff0 U1 <code>SCPU</code> \u5355\u5468\u671f RISC-V CPU \u6838\u5fc3 U2 <code>ROM_D</code> \u6307\u4ee4\u5b58\u50a8\u5668\uff08I_mem\uff09 U3 <code>RAM_B</code> \u6570\u636e\u5b58\u50a8\u5668\uff08D_mem\uff09 U4 <code>MIO_BUS</code> CPU \u4e0e\u5916\u8bbe/\u5b58\u50a8\u5668\u4e4b\u95f4\u7684\u603b\u7ebf\u63a5\u53e3 U5 <code>Multi_8CH32</code> 8 \u901a\u9053 32 \u4f4d\u6570\u636e\u591a\u8def\u9009\u62e9\u5668\uff0c\u7528\u4e8e\u6570\u7801\u7ba1\u8c03\u8bd5\u663e\u793a U6 <code>Seg7_Dev</code> \u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u9a71\u52a8 U7 <code>SPIO</code> GPIO/LED \u663e\u793a\u6a21\u5757 U8 <code>clk_div</code> \u65f6\u949f\u5206\u9891\u6a21\u5757\uff08\u63d0\u4f9b\u5168\u901f/\u81ea\u52a8\u5355\u6b65/\u624b\u52a8\u5355\u6b65\uff09 U9 <code>SAnti_jitter</code> \u6309\u952e/\u5f00\u5173\u53bb\u6296\u52a8\u6a21\u5757 U10 <code>Counter_x</code> \u901a\u7528\u4e09\u901a\u9053\u8ba1\u6570\u5668\u5916\u8bbe U11 <code>VGA</code> VGA \u663e\u793a\u6a21\u5757\uff0c\u7528\u4e8e\u8c03\u8bd5\u4fe1\u53f7\u663e\u793a"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#cpu-u1scpu","title":"\ud83e\udde9 \u4e8c\u3001CPU \u6838\u5fc3\uff08U1\uff1aSCPU\uff09","text":""},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_2","title":"\u67b6\u6784\u7c7b\u578b\uff1a","text":"<ul> <li>RISC-V RV32I \u5355\u5468\u671f\u5904\u7406\u5668</li> <li>\u652f\u6301\u516d\u79cd\u6307\u4ee4\u7c7b\u578b\uff1aR / I / S / B / U / J   \u5171\u7ea6 26 \u6761\u57fa\u7840\u6307\u4ee4\uff08add\u3001sub\u3001lw\u3001sw\u3001beq\u3001jal\u3001lui \u7b49\uff09</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_3","title":"\u6838\u5fc3\u7ec4\u6210\u6a21\u5757\uff1a","text":"\u7ec4\u6210\u5355\u5143 \u529f\u80fd PC\uff08\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09 \u4fdd\u5b58\u5f53\u524d\u6307\u4ee4\u5730\u5740 IFU\uff08\u53d6\u6307\u5355\u5143\uff09 \u4ece ROM \u4e2d\u53d6\u51fa\u6307\u4ee4 IDU\uff08\u8bd1\u7801\u5355\u5143\uff09 \u89e3\u6790\u64cd\u4f5c\u7801\uff0c\u751f\u6210\u63a7\u5236\u4fe1\u53f7 ALU \u5b9e\u73b0\u7b97\u672f\u903b\u8f91\u8fd0\u7b97\uff08add\u3001and\u3001slt \u7b49\uff09 Register File 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff08x0~x31\uff09 CU\uff08\u63a7\u5236\u5355\u5143\uff09 \u751f\u6210\u63a7\u5236\u4fe1\u53f7\uff1aMemRW\u3001RegWrite\u3001Branch\u3001ALUSrc \u7b49 \u4e2d\u65ad\u63a5\u53e3 INT \u4fe1\u53f7\u8f93\u5165\uff08\u540e\u7eed\u5b9e\u9a8c\u5b9e\u73b0\uff09"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_4","title":"\u5916\u90e8\u63a5\u53e3\uff1a","text":"Verilog<pre><code>input  wire [31:0] inst_in,  // \u6307\u4ee4\u8f93\u5165\ninput  wire [31:0] Data_in,  // \u6570\u636e\u8f93\u5165\uff08\u4eceRAM/IO\uff09\noutput wire [31:0] PC_out,   // \u7a0b\u5e8f\u8ba1\u6570\u5668\noutput wire [31:0] Addr_out, // \u6570\u636e\u8bbf\u95ee\u5730\u5740\noutput wire [31:0] Data_out, // \u5199\u51fa\u6570\u636e\noutput wire Mem_RW;          // \u5b58\u50a8\u5668\u8bfb\u5199\u4fe1\u53f7\n</code></pre>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_5","title":"\ud83d\udcbe \u4e09\u3001\u5b58\u50a8\u7cfb\u7edf","text":""},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#1-romu2","title":"1\ufe0f\u20e3 \u6307\u4ee4\u5b58\u50a8\u5668 ROM\uff08U2\uff09","text":"<ul> <li>\u91c7\u7528 Vivado IP \u201cDistributed Memory Generator\u201d</li> <li>\u5bb9\u91cf\uff1a<code>1024 x 32bit</code></li> <li>\u521d\u59cb\u5316\u6587\u4ef6\uff1a<code>I_mem.coe</code></li> <li>CPU \u901a\u8fc7 PC_out[11:2]\u8bbf\u95ee\uff0c\u8f93\u51fa\u6307\u4ee4 inst[31:0]</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#2-ramu3","title":"2\ufe0f\u20e3 \u6570\u636e\u5b58\u50a8\u5668 RAM\uff08U3\uff09","text":"<ul> <li>\u91c7\u7528 Vivado IP \u201cBlock Memory Generator\u201d</li> <li>\u5bb9\u91cf\uff1a<code>1024 x 32bit</code></li> <li>\u521d\u59cb\u5316\u6587\u4ef6\uff1a<code>D_mem.coe</code></li> <li>\u63a5\u53e3\uff1a</li> </ul> Verilog<pre><code>RAM_B(.clka(clk_m),\n      .wea(data_ram_we),\n      .addra(ram_addr),\n      .dina(ram_data_in),\n      .douta(ram_data_out));\n</code></pre>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#u4-mio_bus","title":"\ud83d\udd17 \u56db\u3001\u7cfb\u7edf\u603b\u7ebf (U4: MIO_BUS)","text":"<p>\u8d1f\u8d23\u8fde\u63a5 CPU\u3001RAM \u4e0e\u5916\u8bbe\u7684\u901a\u4fe1\uff0c\u662f SoC \u7684\u201c\u67a2\u7ebd\u201d\u3002</p> <ul> <li> <p>\u529f\u80fd\uff1a</p> </li> <li> <p>\u5730\u5740\u8bd1\u7801\uff1a\u6839\u636e\u5730\u5740\u8303\u56f4\u786e\u5b9a\u8bbf\u95ee\u54ea\u4e2a\u4ece\u8bbe\u5907\uff08ROM\u3001RAM\u3001LED\u3001Seg7 \u7b49\uff09</p> </li> <li>\u6570\u636e\u901a\u8def\uff1aCPU \u4e0e\u5916\u8bbe\u3001RAM \u7684\u6570\u636e\u4ea4\u6362</li> <li>\u63a7\u5236\u4fe1\u53f7\u751f\u6210\uff1aGPIOf0000000_we\u3001GPIOe0000000_we\u3001counter_we \u7b49</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_6","title":"\u5730\u5740\u6620\u5c04\uff1a","text":"\u5730\u5740\u8303\u56f4 \u8bbe\u5907 \u6a21\u5757 0x00000000 \u2013 0x00000FFC RAM \u6570\u636e\u533a U3 0xE0000000 \u2013 0xEFFFFFFF \u4e03\u6bb5\u6570\u7801\u7ba1\u63a5\u53e3 U5 + U6 0xF0000000 \u2013 0xFFFFFFFF GPIO &amp; LED U7 0xFFFFFF04 \u2013 0xFFFFFFF4 \u8ba1\u6570\u5668\u63a5\u53e3 U10"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_7","title":"\ud83d\udca1 \u4e94\u3001\u5916\u8bbe\u5b50\u7cfb\u7edf","text":""},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#1-spio-gpio-led-u7","title":"(1) <code>SPIO</code> \u2014\u2014 GPIO + LED \u6a21\u5757\uff08U7\uff09","text":"<ul> <li>\u63a7\u5236 16 \u4e2a LED \u663e\u793a\u706f</li> <li>\u5730\u5740\uff1a0xF0000000 \u2013 0xFFFFFFFF</li> <li>\u53ef\u540c\u65f6\u8f93\u51fa <code>counter_set</code> \u63a7\u5236\u4fe1\u53f7\u81f3\u8ba1\u6570\u5668</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#2-seg7_dev-u6","title":"(2) <code>Seg7_Dev</code> \u2014\u2014 \u4e03\u6bb5\u6570\u7801\u7ba1\u663e\u793a\u6a21\u5757\uff08U6\uff09","text":"<ul> <li>\u5730\u5740\uff1a0xE0000000 \u2013 0xEFFFFFFF</li> <li>\u63a5\u6536\u6765\u81ea Multi_8CH32 \u7684\u6570\u636e\u5e76\u9a71\u52a8 8 \u4e2a\u6570\u7801\u7ba1</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#3-multi_8ch32-8-32-u5","title":"(3) <code>Multi_8CH32</code> \u2014\u2014 8 \u901a\u9053 32 \u4f4d\u591a\u8def\u9009\u62e9\u5668\uff08U5\uff09","text":"<ul> <li>\u7528\u4e8e\u8c03\u8bd5\u663e\u793a\u5207\u6362\uff08SW[7:5]\u63a7\u5236\u663e\u793a\u5185\u5bb9\uff09</li> <li> <p>\u53ef\u663e\u793a\uff1a</p> </li> <li> <p>CPU \u6307\u4ee4\u5b57\u8282\u5730\u5740\uff08PC_out\uff09</p> </li> <li>ROM \u8f93\u51fa\u6307\u4ee4\uff08inst\uff09</li> <li>ALU \u7ed3\u679c</li> <li>RAM \u5730\u5740/\u6570\u636e</li> <li>\u8ba1\u6570\u5668\u503c</li> <li>\u7b49\u5171 8 \u4e2a\u901a\u9053\u5185\u5bb9</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#4-counter_x-u10","title":"(4) <code>Counter_x</code> \u2014\u2014 \u901a\u7528\u4e09\u901a\u9053\u8ba1\u6570\u5668\uff08U10\uff09","text":"<ul> <li>\u53ef\u4f5c\u5b9a\u65f6/\u8ba1\u65f6\u5916\u8bbe</li> <li>\u5730\u5740\uff1a0xFFFFFF04 \u2013 0xFFFFFFF4</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#5-vga-u11","title":"(5) <code>VGA</code> \u2014\u2014 \u8c03\u8bd5\u663e\u793a\uff08U11\uff09","text":"<ul> <li>\u5b9e\u65f6\u663e\u793a\uff1aPC\u3001inst\u3001ALU \u7ed3\u679c\u3001RAM \u5730\u5740/\u6570\u636e\u7b49</li> <li>\u5206\u8fa8\u7387 640x480\uff0c25MHz \u70b9\u65f6\u949f</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_8","title":"\ud83d\udd79\ufe0f \u516d\u3001\u8f85\u52a9\u6a21\u5757","text":"\u6a21\u5757 \u529f\u80fd U8 clk_div \u63d0\u4f9b\u591a\u6a21\u5f0f CPU \u65f6\u949f\uff1a\u2022 SW2, SW8 \u63a7\u5236\u2022 \u5168\u901f 100MHz / \u81ea\u52a8\u5355\u6b65 / \u624b\u52a8\u5355\u6b65(SW10 \u89e6\u53d1) U9 SAnti_jitter \u6d88\u9664\u6309\u94ae/\u62e8\u7801\u5f00\u5173\u6296\u52a8\uff0c\u8f93\u51fa\u7a33\u6001\u4fe1\u53f7 SW_OK\u3001BTN_OK"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_9","title":"\ud83e\udded \u4e03\u3001\u7cfb\u7edf\u8fd0\u884c\u673a\u5236","text":"<ol> <li> <p>\u53d6\u6307\u9636\u6bb5\uff1a</p> </li> <li> <p>CPU \u8f93\u51fa <code>PC_out</code> \u2192 ROM \u8fd4\u56de <code>inst_in</code></p> </li> <li> <p>\u8bd1\u7801\u6267\u884c\u9636\u6bb5\uff1a</p> </li> <li> <p>\u63a7\u5236\u5668\u751f\u6210 <code>MemRW</code>\u3001ALU \u64cd\u4f5c\u3001\u5bc4\u5b58\u5668\u63a7\u5236\u4fe1\u53f7</p> </li> <li> <p>\u8bbf\u5b58\u9636\u6bb5\uff1a</p> </li> <li> <p>\u82e5\u8bbf\u5b58\u6307\u4ee4\uff08lw/sw\uff09\uff0c\u5219\u901a\u8fc7 <code>MIO_BUS</code> \u8bbf\u95ee RAM \u6216 I/O</p> </li> <li> <p>\u5199\u56de\u9636\u6bb5\uff1a</p> </li> <li> <p>\u7ed3\u679c\u5199\u5165\u5bc4\u5b58\u5668\u6216\u5916\u8bbe</p> </li> <li> <p>\u663e\u793a\u4e0e\u8c03\u8bd5\uff1a</p> </li> <li> <p>\u901a\u8fc7 <code>Multi_8CH32 + Seg7_Dev</code> \u6216 <code>VGA</code> \u8f93\u51fa\u72b6\u6001\u4fe1\u53f7</p> </li> <li> <p>\u4eba\u673a\u4ea4\u4e92\uff1a</p> </li> <li> <p>SW \u63a7\u5236\u663e\u793a\u901a\u9053\u3001\u6b65\u8fdb\u65b9\u5f0f</p> </li> <li>LED \u53cd\u6620\u5916\u8bbe\u6216\u7a0b\u5e8f\u72b6\u6001</li> </ol>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_10","title":"\u2699\ufe0f \u516b\u3001\u5b9e\u9a8c\u7279\u6027\u4e0e\u8fd0\u884c\u65b9\u5f0f","text":"\u6a21\u5f0f SW[8:2] \u8bbe\u7f6e \u529f\u80fd 00 CPU \u5168\u901f\u8fd0\u884c 01 \u81ea\u52a8\u5355\u6b65\uff082\u00b2\u2074 \u5206\u9891\uff09 1X \u624b\u52a8\u5355\u6b65\uff08SW10 \u89e6\u53d1\uff09 SW[7:5] \u6570\u7801\u7ba1\u663e\u793a\u5185\u5bb9 000 CPU \u7a0b\u5e8f\u8f93\u51fa 001 PC \u5730\u5740 010 ROM \u6307\u4ee4 011 Counter \u8ba1\u6570\u503c 100 ALU \u8f93\u51fa\u5730\u5740 101 CPU \u6570\u636e\u8f93\u51fa 110 RAM \u6570\u636e\u8f93\u5165 111 PC \u6307\u4ee4\u5b57\u8282\u5730\u5740"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_11","title":"\ud83e\udde9 \u4e5d\u3001\u67b6\u6784\u603b\u7ed3\u56fe\uff08\u903b\u8f91\u5173\u7cfb\uff09","text":"Text Only<pre><code>         +----------------------+\n         |     SCPU (U1)       |\n         +---------+------------+\n                   |\n                   | inst_in (from ROM)\n                   |\n        +----------v----------+\n        |    ROM_D (U2)       | \u2190 \u6307\u4ee4\u5b58\u50a8\u5668\n        +---------------------+\n                   |\n                   | Addr/Data\n                   v\n        +---------------------+\n        |   MIO_BUS (U4)      | \u2190 \u5730\u5740\u8bd1\u7801/\u6570\u636e\u4ea4\u6362\n        +---+---+---+---+-----+\n            |   |   |   |\n            |   |   |   |\n      +-----v-+ |   |   +------+\n      |  RAM_B | |   |   |Counter|\n      |   (U3) | |   |   |  (U10)|\n      +---------+ |   |   +------+\n                  |   |\n                  v   v\n               +------+------+\n               | GPIO / LED  |\n               |  (U7, U5, U6)|\n               +------+------+\n                      |\n                   +--v--+\n                   | VGA |\n                   +-----+\n</code></pre> <p>\u2705 \u603b\u7ed3\u4e00\u53e5\u8bdd\uff1a</p> <p>\u672c\u5b9e\u9a8c\u642d\u5efa\u7684 CPU \u662f\u57fa\u4e8e RISC-V RV32I \u5355\u5468\u671f\u67b6\u6784 \u7684\u6559\u5b66 SoC\uff0c\u5305\u542b\u6307\u4ee4/\u6570\u636e\u5b58\u50a8\u3001\u603b\u7ebf\u3001GPIO\u3001\u8ba1\u6570\u5668\u3001\u663e\u793a\u4e0e\u8c03\u8bd5\u6a21\u5757\uff0c\u5177\u5907\u5b8c\u6574\u7684\u8f93\u5165\u8f93\u51fa\u4e0e\u65f6\u5e8f\u63a7\u5236\uff0c\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u6559\u5b66\u7ea7 CPU + SoC \u96c6\u6210\u7cfb\u7edf\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/CPU/#_12","title":"\u5b9e\u9a8c\u8fc7\u7a0b\u6ce8\u610f\u4e8b\u9879","text":"<p>\u751f\u6210 ROM \u7684\u6d41\u7a0b\uff1a</p> <ul> <li>IP Catalog -&gt; \u641c\u7d22 memory generator -&gt; \u9009\u62e9 Distributed Memory Generator -&gt; memory config \u4e2d\u8bbe\u7f6e\u4e3a ROM\uff0c\u8bbe\u7f6e\u5b58\u50a8\u5355\u5143\u6570 Depth \u4e3a 1024\u3001\u5b57\u957f Data Width \u4e3a 32 -&gt; RST &amp; Initialization \u4e2d\u9009\u62e9 coe \u6587\u4ef6 I_mem.coe -&gt; OK -&gt; \u4e0b\u4e00\u4e2a\u754c\u9762\u9009\u62e9 Global -&gt; Generate</li> <li>\u8bfe\u4ef6\u4e2d\u987a\u5e8f\u6709\u8bef\uff0cmemory config \u4e2d\u8bbe\u7f6e\u540e\u4e0d\u8981\u70b9 OK\u2026\u2026</li> <li>clk \u5f15\u811a\u81ea\u52a8 disable\uff0c\u4e0d\u7528\u624b\u52a8\u5220\u9664</li> <li>coe \u6587\u4ef6\u8def\u5f84\u4e0d\u80fd\u6709\u4e2d\u6587\uff0c\u8981\u4fee\u6539\u63d0\u4f9b\u7684\u6587\u4ef6\u5939\u540d\u79f0</li> <li>\u57fa\u4e8e lab0 \u7684\u7ecf\u9a8c\u6211\u9009\u4e86 Global\uff0c\u4f46\u5b9e\u9645\u5728 Synrhsis Opetions \u4f3c\u4e4e\u9009 Out of Context per IP \u66f4\u4fbf\u4e8e\u8c03\u8bd5\uff1f</li> </ul> <p>\u751f\u6210 RAM \u7684\u6d41\u7a0b\uff1a</p> <ul> <li>\u672c\u5b9e\u9a8c\u4e2d\u63d0\u4f9b\u4e86\u63a5\u53e3\u5b9a\u4e49\u548c\u7f51\u8868\u6587\u4ef6\uff0c\u4e0d\u7528\u81ea\u5df1\u521b\u5efa\uff01</li> <li>IP Catalog -&gt; \u641c\u7d22 Block Memory Generator -&gt; Basic \u4e2d,memory type \u9009\u62e9 Single Port RAM -&gt; Port A Options \u4e2d\uff0c\u8bbe\u7f6e Width \u4e3a 32\u3001Depth \u4e3a 1024\uff0cEnable Port Type \u9009\u62e9 Always Enabled -&gt; \u4e0d\u52fe\u9009 Primitives Output Register -&gt; OK</li> <li>\u8bfe\u4ef6\u4e2d\u63d0\u5230\u521d\u59cb\u5316\u6587\u6863\u4e3a D_mem.coe\uff0c\u4f46\u5b9e\u9645\u4e0a \u8fd9\u4e2a\u6587\u6863\u6ca1\u6709\u7ed9 RAM \u53ef\u4e0d\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u4e0d\u7528\u6dfb\u52a0</li> <li>Operating Mode \u51b3\u5b9a\u8bfb\u5199\u5728\u540c\u4e00\u4e2a\u5730\u5740\u65f6\u600e\u4e48\u9009\u62e9\uff0clab0 \u4e2d\u9009\u62e9 No change\uff0c\u4f46\u6211\u8fd9\u91cc\u9009\u4e86 Read first\uff1f</li> <li>Primitives Output Register \u4f1a\u4f7f\u8f93\u51fa\u65f6\u52a0\u5bc4\u5b58\u5668\uff0c\u6709\u4e00\u4e2a\u65f6\u949f\u7684\u5ef6\u8fdf\uff0c\u8fd9\u91cc\u4e0d\u52fe\u9009</li> <li>RAM \u4e2d\u5404\u4e2a\u7aef\u53e3\uff1a</li> <li>.clka(clk_m), // \u5b58\u50a8\u5668\u65f6\u949f\uff0c\u4e0e CPU \u53cd\u5411</li> <li>.wea(data_ram_we), // \u5b58\u50a8\u5668\u8bfb\u5199\uff0c\u6765\u81ea MIO_BUS</li> <li>.addra(ram_addr), // \u5730\u5740\u7ebf\uff0c\u6765\u81ea MIO_BUS</li> <li>.dina(ram_data_in), // \u8f93\u5165\u6570\u636e\u7ebf\uff0c\u6765\u81ea MIO_BUS</li> <li>.douta(ram_data_out) // \u8f93\u51fa\u6570\u636e\u7ebf\uff0c\u6765\u81ea MIO_BUS</li> <li>\u8f93\u5165\u5730\u5740\uff1awea \u4f7f\u80fd\u4e3a\u5199\u3001\u8f93\u5165\u6570\u636e\uff0c\u5219\u6570\u636e\u5199\u5165 RAM\uff1b\u8f93\u5165\u5730\u5740\uff1awea \u4f7f\u80fd\u4e3a\u8bfb\u3001\u8f93\u51fa\u6570\u636e\u3002</li> </ul> <p>\u7528.v \u6587\u4ef6\u548c.edf \u6587\u4ef6\u8bbe\u7f6e\u6a21\u5757\uff1a</p> <ul> <li>Add or Create Design Sources -&gt; Add Files -&gt; \u9009\u62e9.v \u6587\u4ef6\u548c.edf \u6587\u4ef6 -&gt; Finish</li> <li>.v \u6587\u4ef6\u5b9a\u4e49\u63a5\u53e3\uff0c.edf \u6587\u4ef6\u89c4\u5b9a\u95e8\u7ea7\u5b9e\u73b0\uff0c\u4e24\u8005\u5fc5\u987b\u4e00\u8d77\u6dfb\u52a0\uff0c\u4e14\u6587\u4ef6\u540d\u5fc5\u987b\u76f8\u540c</li> </ul> <p>\u672c lab \u4e2d\u5df2\u7ecf\u63d0\u4f9b\u7684\u6587\u4ef6\u4e3a\uff1a</p> <p>abies@sjqqq:/mnt/d/_Courses/Computer Organization/Lab2_CPU_intro/OExp02-IP2SOC$ ls A7.xdc IP I_mem.coe font_8x16.mem vga_debugger.mem abies@sjqqq:/mnt/d/_Courses/Computer Organization/Lab2_CPU_intro/OExp02-IP2SOC$ cd IP abies@sjqqq:/mnt/d/_Courses/Computer Organization/Lab2_CPU_intro/OExp02-IP2SOC/IP$ ls Counter_x.edf MIO_BUS.v RAM_B.edf SAnti_jitter.v SPIO.edf VGA clk_div.edf Counter_x.v Multi_8CH32.edf RAM_B.v SCPU.edf SPIO.v VGA.edf clk_div.v MIO_BUS.edf Multi_8CH32.v SAnti_jitter.edf SCPU.v Seg7_Dev VGA.v</p> <p>\u76f4\u63a5\u5bfc\u5165\u6240\u6709.v \u6587\u4ef6\u548c.edf \u6587\u4ef6\u5373\u53ef</p> <p>\u5bfc\u51fa IP \u6838\uff1a</p> <ul> <li>Tools -&gt; Create and Package New IP -&gt; Package your current file -&gt; \u5148\u65b0\u5efa\u6587\u4ef6\u5939\uff0c\u518d\u8bbe\u7f6e\u6587\u4ef6\u5939\u8def\u5f84 -&gt; OK</li> </ul> <p>\u8c03\u7528 IP \u6838\uff1a</p> <ul> <li>Settings -&gt; IP -&gt; Repository -&gt; \u9009\u62e9 IP \u6838\u8def\u5f84 -&gt; OK -&gt; IP Catalog -&gt; \u641c\u7d22 IP \u6838\u540d\u79f0 -&gt; \u9009\u62e9 IP \u6838\uff0c\u52fe\u9009 Global\uff1f -&gt; Generate</li> <li>\u672c\u5b9e\u9a8c\u4e2d Seg7_Dev \u9700\u8981\u8c03\u7528\u5de5\u7a0b\u6587\u4ef6\u7684 IP\uff0c\u597d\u50cf\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u67d0\u4e9b\u6587\u4ef6\u4f46\u6211\u6ca1\u641e\u61c2 T_T \u76f4\u63a5\u5bfc\u51fa IP \u6838\u518d\u8c03\u7528\u5b8c\u6210\u4e86</li> </ul> <p>\u5176\u4ed6\uff1a</p> <ul> <li>\u4e0a\u8bfe\u7ed9\u51fa\u7684 IP/VGA/...src/new \u4e2d\u6709 VgaDisplay.v \u6587\u4ef6\uff0c\u91cc\u9762\u56fa\u5b9a\u4e86\u7528\u4e8e VGA \u663e\u793a\u7684\u6587\u4ef6\u8def\u5f84\uff1aD://vga_debugger.mem \u548c D://font_8x16.mem\u3002\u53ef\u80fd\u9700\u8981\u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u653e\u5230 D \u76d8\u4e0b\uff1f</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/","title":"vivado","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 3314 \u4e2a\u5b57\u00a0\u00a011 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u7531AI\u751f\u6210\u3002</p> <p>\u672a\u5b8c\u5f85\u7eed\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#_1","title":"\u7f16\u8bd1\u6d41\u7a0b","text":""},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#_2","title":"\u7f51\u8868\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7f51\u8868\uff08netlist\uff09\u662f\u4e00\u79cd\u63cf\u8ff0\u7535\u8def\u7ed3\u6784\u7684\u6587\u4ef6\u6216\u6570\u636e\uff0c\u5b83\u8bb0\u5f55\u4e86\u7535\u8def\u4e2d\u6709\u54ea\u4e9b\u903b\u8f91\u5355\u5143\uff08\u95e8\u7535\u8def\u3001\u5bc4\u5b58\u5668\u3001\u52a0\u6cd5\u5668\u3001\u4e58\u6cd5\u5668\u3001\u5b58\u50a8\u5757\u7b49\uff09\u4ee5\u53ca\u8fd9\u4e9b\u5355\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u7535\u8def\u7684\u201c\u6e05\u5355\u201d\u548c\u201c\u8fde\u63a5\u56fe\u201d\u3002</p> <p>\u7efc\u5408\uff08synthesis\uff09\u5b8c\u6210\u540e\uff0c\u6e90\u4ee3\u7801\u5c31\u88ab\u8f6c\u6362\u6210\u7f51\u8868\uff0c\u8fd9\u65f6\u5019\u7535\u8def\u5df2\u7ecf\u4ece\u62bd\u8c61\u7684 Verilog/VHDL \u53d8\u6210\u4e86\u95e8\u7ea7\u63cf\u8ff0\uff0c\u4f46\u8fd8\u6ca1\u6709\u5bf9\u5e94\u5230\u82af\u7247\u4e0a\u5177\u4f53\u7684\u7269\u7406\u4f4d\u7f6e\u3002</p> <p>\u6bd4\u5982\uff1a</p> <ul> <li>\u5143\u4ef6\u90e8\u5206\uff1a\u5217\u51fa\u7535\u8def\u4e2d\u6240\u6709\u7528\u5230\u7684\u903b\u8f91\u5757\u3002</li> <li>\u7f51\u7edc\u90e8\u5206\uff1a\u8bf4\u660e\u54ea\u4e9b\u903b\u8f91\u5757\u7684\u8f93\u51fa\u8fde\u5230\u54ea\u4e9b\u8f93\u5165\u3002</li> </ul> <p>\u5b83\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u7efc\u5408\u548c\u5b9e\u73b0\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u8ba9\u5b9e\u73b0\u9636\u6bb5\uff08implementation\uff09\u80fd\u6839\u636e\u8fd9\u4e2a\u7535\u8def\u7ed3\u6784\u53bb\u505a\u5e03\u5c40\u548c\u5e03\u7ebf\u3002</p> \u7f51\u8868\u793a\u4f8b <p>\u597d\u7684\uff0c\u6211\u7528\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u7535\u8def\uff1a</p> Text Only<pre><code>y = (a AND b) OR (c AND d)\n</code></pre> <p>\u4e5f\u5c31\u662f\u6709\u4e24\u4e2a\u4e0e\u95e8\uff0c\u7ed3\u679c\u518d\u8fdb\u4e00\u4e2a\u6216\u95e8\u3002</p> <p>\u5982\u679c\u5199\u6210 Verilog\uff0c\u5927\u6982\u662f\u8fd9\u6837\uff1a</p> Verilog<pre><code>module simple(\n    input a, b, c, d,\n    output y\n);\n    wire w1, w2;\n    assign w1 = a &amp; b;\n    assign w2 = c &amp; d;\n    assign y = w1 | w2;\nendmodule\n</code></pre> <p>\u7efc\u5408\u4e4b\u540e\uff0c\u5de5\u5177\u4f1a\u751f\u6210\u4e00\u4e2a\u7f51\u8868\uff08netlist\uff09\u3002 \u7f51\u8868\u683c\u5f0f\u6709\u5f88\u591a\u79cd\uff08EDIF\u3001Verilog netlist \u7b49\uff09\uff0c\u8fd9\u91cc\u6211\u7ed9\u4f60\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u63a5\u8fd1\u201c\u6e05\u5355+\u8fde\u7ebf\u201d\u7684\u63cf\u8ff0\uff1a</p> Text Only<pre><code># \u5143\u4ef6\u6e05\u5355\nU1: AND2\nU2: AND2\nU3: OR2\n\n# \u7f51\u7edc\u8fde\u63a5\nU1.A = a\nU1.B = b\nU1.Y = n1\n\nU2.A = c\nU2.B = d\nU2.Y = n2\n\nU3.A = n1\nU3.B = n2\nU3.Y = y\n</code></pre> <p>\u89e3\u91ca\u4e00\u4e0b\uff1a</p> <ul> <li><code>U1, U2, U3</code> \u662f\u5b9e\u4f8b\u5316\u7684\u95e8\u7535\u8def\u3002</li> <li><code>AND2</code>\u3001<code>OR2</code> \u8868\u793a\u4e24\u8f93\u5165\u7684\u4e0e\u95e8\u3001\u6216\u95e8\u3002</li> <li><code>n1</code> \u548c <code>n2</code> \u662f\u7efc\u5408\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e2d\u95f4\u7f51\u7edc\u3002</li> <li>\u8fd9\u5f20\u8868\u5c31\u5b8c\u6574\u63cf\u8ff0\u4e86\u7535\u8def\u7ed3\u6784\uff1a\u5143\u4ef6\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u7ebf\u5173\u7cfb\u3002</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#synthesis","title":"Synthesis \u662f\u4ec0\u4e48\uff1f","text":"<p>Synthesis\uff08\u7efc\u5408\uff09 \u662f FPGA/ASIC \u8bbe\u8ba1\u6d41\u7a0b\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6b65\u9aa4\u3002\u5b83\u7684\u4f5c\u7528\u662f\u628a\u4f60\u5199\u7684 \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08HDL\uff0c\u6bd4\u5982 Verilog/VHDL\uff09\u4ee3\u7801 \u8f6c\u6362\u6210\u4e00\u4e2a \u903b\u8f91\u7535\u8def\u7f51\u8868\uff08netlist\uff09\u3002</p> <p>\u901a\u4fd7\u5730\u8bf4\uff0c\u5c31\u662f\u628a\u201c\u62bd\u8c61\u7684\u4ee3\u7801\u201d\u7ffb\u8bd1\u6210\u201c\u7531\u95e8\u7535\u8def\u3001\u89e6\u53d1\u5668\u3001\u7b97\u672f\u5355\u5143\u7ec4\u6210\u7684\u786c\u4ef6\u7ed3\u6784\u201d\u3002</p> <p>\u4e3b\u8981\u8fc7\u7a0b\u5305\u62ec\uff1a</p> <ol> <li>\u89e3\u6790 HDL \u4ee3\u7801\uff1a\u68c0\u67e5\u8bed\u6cd5\u548c\u8bed\u4e49\u3002</li> <li>\u903b\u8f91\u63a8\u5bfc\u4e0e\u4f18\u5316\uff1a\u628a\u9ad8\u7ea7\u7684\u884c\u4e3a\u63cf\u8ff0\uff08\u5982 <code>if-else</code>\uff0c\u7b97\u672f\u8fd0\u7b97\uff09\u8f6c\u6362\u4e3a\u57fa\u672c\u7684\u903b\u8f91\u5355\u5143\uff0c\u540c\u65f6\u5c1d\u8bd5\u4f18\u5316\uff0c\u51cf\u5c11\u9762\u79ef\u6216\u63d0\u9ad8\u901f\u5ea6\u3002</li> <li>\u6620\u5c04\u5230\u5668\u4ef6\u5e93\uff1a\u6839\u636e\u76ee\u6807 FPGA \u82af\u7247\u7684\u8d44\u6e90\uff0c\u628a\u903b\u8f91\u529f\u80fd\u5b9e\u73b0\u6210\u8be5\u82af\u7247\u80fd\u63d0\u4f9b\u7684\u57fa\u672c\u5355\u5143\uff0c\u6bd4\u5982 LUT\uff08\u67e5\u627e\u8868\uff09\u3001FF\uff08\u89e6\u53d1\u5668\uff09\u3001DSP \u5757\u3001RAM \u5757\u7b49\u3002</li> <li>\u751f\u6210\u7f51\u8868\uff1a\u8f93\u51fa\u4e00\u4e2a\u95e8\u7ea7\u7535\u8def\u6e05\u5355\uff0c\u4f9b\u540e\u7eed implementation\uff08\u5b9e\u73b0\uff1a\u5e03\u5c40\u5e03\u7ebf\uff09 \u4f7f\u7528\u3002</li> </ol> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u5199\u4e86 Verilog\uff1a</p> Verilog<pre><code>assign y = (a &amp; b) | (c &amp; d);\n</code></pre> <p>\u7efc\u5408\u4e4b\u540e\uff0c\u5de5\u5177\u4f1a\u628a\u5b83\u53d8\u6210\uff1a</p> <ul> <li>\u4e24\u4e2a AND \u95e8</li> <li>\u4e00\u4e2a OR \u95e8</li> <li>\u4ee5\u53ca\u8fd9\u4e9b\u95e8\u4e4b\u95f4\u7684\u8fde\u7ebf\u5173\u7cfb</li> </ul> <p>\u4e5f\u5c31\u662f\u6211\u4e4b\u524d\u7ed9\u4f60\u6f14\u793a\u7684\u7f51\u8868\u3002</p> <p>\u4e00\u53e5\u8bdd\u603b\u7ed3\uff1aSynthesis \u5c31\u662f\u628a HDL \u6e90\u4ee3\u7801\u8f6c\u6362\u6210\u903b\u8f91\u7535\u8def\uff08\u7f51\u8868\uff09\u7684\u8fc7\u7a0b\uff0c\u662f\u4ece\u201c\u4ee3\u7801\u201d\u5230\u201c\u7535\u8def\u201d\u7684\u6865\u6881\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#implementation","title":"Implementation \u662f\u4ec0\u4e48\uff1f","text":"<p>Implementation\uff08\u5b9e\u73b0\uff09 \u662f FPGA \u8bbe\u8ba1\u6d41\u7a0b\u4e2d\u7ee7 Synthesis\uff08\u7efc\u5408\uff09 \u4e4b\u540e\u7684\u4e00\u6b65\u3002</p> <p>\u7efc\u5408\u5b8c\u6210\u540e\uff0c\u4f60\u5f97\u5230\u7684\u53ea\u662f\u4e00\u4e2a\u903b\u8f91\u7535\u8def\u7684\u7f51\u8868\uff08\u77e5\u9053\u6709\u54ea\u4e9b\u95e8\u7535\u8def\u3001\u5bc4\u5b58\u5668\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u600e\u4e48\u8fde\u63a5\uff09\uff0c\u4f46\u8fd9\u4e2a\u7535\u8def\u8fd8\u6ca1\u6709\u653e\u5230 FPGA \u82af\u7247\u7684\u5b9e\u9645\u8d44\u6e90\u4e0a\u3002Implementation \u7684\u4efb\u52a1\u5c31\u662f\u628a\u8fd9\u4e9b\u903b\u8f91\u771f\u6b63\u201c\u5b89\u7f6e\u201d\u5230\u82af\u7247\u5185\u90e8\u3002</p> <p>\u4e3b\u8981\u6b65\u9aa4\u5305\u62ec\uff1a</p> <ol> <li>Opt Design\uff08\u4f18\u5316\u8bbe\u8ba1\uff09\uff1a\u5bf9\u7efc\u5408\u51fa\u6765\u7684\u7f51\u8868\u518d\u505a\u4e00\u4e9b\u903b\u8f91\u4f18\u5316\u3002</li> <li>Placement\uff08\u5e03\u5c40\uff09\uff1a\u51b3\u5b9a\u6bcf\u4e2a\u903b\u8f91\u5355\u5143\u653e\u5230 FPGA \u82af\u7247\u4e0a\u7684\u54ea\u4e2a\u5177\u4f53\u4f4d\u7f6e\uff08\u6bd4\u5982\u54ea\u4e00\u4e2a LUT\u3001\u54ea\u4e00\u4e2a\u5bc4\u5b58\u5668\uff09\u3002</li> <li>Routing\uff08\u5e03\u7ebf\uff09\uff1a\u4e3a\u5355\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u5206\u914d\u82af\u7247\u5185\u90e8\u7684\u8fde\u7ebf\u8def\u5f84\u3002</li> <li>\u65f6\u5e8f\u68c0\u67e5\uff1a\u786e\u8ba4\u7535\u8def\u80fd\u6ee1\u8db3\u4f60\u7684\u65f6\u949f\u9891\u7387\u8981\u6c42\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u5e03\u7ebf\u5ef6\u8fdf\u8fc7\u5927\u800c\u51fa\u9519\u3002</li> </ol> <p>\u5b8c\u6210 Implementation \u4e4b\u540e\uff0c\u4f60\u5c31\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u548c\u82af\u7247\u8d44\u6e90\u7ed1\u5b9a\u7684\u7535\u8def\u8bbe\u8ba1\u7ed3\u679c\uff0c\u8fd9\u65f6\u624d\u80fd\u8fdb\u4e00\u6b65\u751f\u6210 Bitstream\uff08\u6bd4\u7279\u6d41\u6587\u4ef6 .bit\uff09\uff0c\u70e7\u5f55\u5230 FPGA \u91cc\u8fd0\u884c\u3002</p> <p>\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a</p> <ul> <li>Synthesis \u2192 \u628a HDL \u4ee3\u7801\u7ffb\u8bd1\u6210\u201c\u7535\u8def\u56fe\u201d</li> <li>Implementation \u2192 \u628a\u201c\u7535\u8def\u56fe\u201d\u653e\u5230\u201c\u82af\u7247\u201d\u4e0a\uff0c\u5e76\u8fde\u597d\u7ebf</li> <li>Bitstream \u2192 \u628a\u7ed3\u679c\u8f6c\u6210\u673a\u5668\u80fd\u76f4\u63a5\u52a0\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#bitstream","title":"Bitstream \u662f\u4ec0\u4e48\uff1f","text":"<p>Bitstream\uff08\u6bd4\u7279\u6d41\u6587\u4ef6\uff0c\u901a\u5e38\u662f <code>.bit</code> \u6216 <code>.bin</code>\uff09 \u662f FPGA \u5f00\u53d1\u6d41\u7a0b\u7684\u6700\u540e\u4ea7\u7269\u3002</p> <p>\u5b83\u7684\u672c\u8d28\u662f\uff1a\u4e00\u4e32\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u91cc\u9762\u8bb0\u5f55\u4e86 FPGA \u82af\u7247\u4e2d\u6bcf\u4e2a\u53ef\u7f16\u7a0b\u8d44\u6e90\uff08\u67e5\u627e\u8868 LUT\u3001\u89e6\u53d1\u5668 FF\u3001\u5e03\u7ebf\u5f00\u5173\u3001I/O \u914d\u7f6e\u7b49\uff09\u7684\u5177\u4f53\u914d\u7f6e\u72b6\u6001\u3002</p> <p>FPGA \u662f\u4e00\u79cd \u53ef\u91cd\u6784\u786c\u4ef6\uff0c\u51fa\u5382\u65f6\u5185\u90e8\u90fd\u662f\u201c\u7a7a\u767d\u7684\u5f00\u5173\u77e9\u9635\u201d\u3002\u53ea\u6709\u628a bitstream \u4e0b\u8f7d\u8fdb\u53bb\uff0c\u5b83\u624d\u77e5\u9053\uff1a</p> <ul> <li>\u54ea\u4e9b LUT \u5b9e\u73b0\u4ec0\u4e48\u903b\u8f91\u51fd\u6570</li> <li>\u54ea\u4e9b\u5bc4\u5b58\u5668\u5b58\u653e\u6570\u636e</li> <li>\u54ea\u4e9b\u7ebf\u8981\u8fde\u901a</li> <li>\u54ea\u4e9b\u5f15\u811a\u4f5c\u4e3a\u8f93\u5165/\u8f93\u51fa\uff0c\u4ee5\u53ca\u7535\u5e73\u6807\u51c6</li> </ul> <p>\u6574\u4e2a\u8bbe\u8ba1\u7ecf\u8fc7 Synthesis\uff08\u7efc\u5408\uff09\u2192 Implementation\uff08\u5b9e\u73b0\uff09 \u540e\uff0cVivado \u5c31\u4f1a\u6839\u636e\u5e03\u5c40\u5e03\u7ebf\u7684\u7ed3\u679c\u751f\u6210\u8fd9\u4e2a bitstream \u6587\u4ef6\u3002\u7136\u540e\u4f60\u901a\u8fc7\u4e0b\u8f7d\u7ebf\uff08\u5982 JTAG\u3001USB\uff09\u628a bitstream \u70e7\u5f55\u5230 FPGA \u4e0a\uff0c\u82af\u7247\u5c31\u80fd\u6309\u4f60\u8bbe\u8ba1\u7684\u7535\u8def\u6765\u5de5\u4f5c\u3002</p> <p>\u4e00\u53e5\u8bdd\u603b\u7ed3\uff1aBitstream \u5c31\u662f\u628a\u4f60\u7684 HDL \u4ee3\u7801\u548c\u7535\u8def\u8bbe\u8ba1\u201c\u7ffb\u8bd1\u201d\u6210 FPGA \u80fd\u7406\u89e3\u7684\u4e8c\u8fdb\u5236\u914d\u7f6e\u6587\u4ef6\uff0c\u662f\u8ba9\u82af\u7247\u53d8\u6210\u4f60\u7535\u8def\u7684\u5173\u952e\u6b65\u9aa4\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#ip","title":"IP \u6838\u5c01\u88c5","text":""},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#ip_1","title":"IP \u6838\u662f\u4ec0\u4e48\uff1f","text":"<p>IP \u6838\uff08Intellectual Property Core\uff0c\u77e5\u8bc6\u4ea7\u6743\u6838\uff09\u662f\u4e00\u6bb5\u7ecf\u8fc7\u5c01\u88c5\u3001\u53ef\u4ee5\u76f4\u63a5\u590d\u7528\u7684\u786c\u4ef6\u6a21\u5757\uff08\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff09\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u9879\u76ee\u4e2d\u91cd\u590d\u4f7f\u7528\u3002</p> <p>.xml \u6587\u4ef6\u662f\u4ec0\u4e48\uff1f</p> <p>\u5728 Vivado \u5c01\u88c5 IP \u6838\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a <code>.xml</code> \u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u63cf\u8ff0\u548c\u7ba1\u7406 IP \u6838\u7684\u5143\u4fe1\u606f\u3002</p> <p>.xml \u6587\u4ef6\u8bb0\u5f55\u8fd9\u4e2a IP \u7684\u540d\u79f0\u3001\u7248\u672c\u53f7\u3001\u53c2\u6570\u3001\u63a5\u53e3\u7c7b\u578b\u7b49\u4fe1\u606f\uff0cVivado \u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6587\u4ef6\u77e5\u9053\u5982\u4f55\u8bc6\u522b\u548c\u52a0\u8f7d\u4f60\u7684 IP\u3002 \u5982\u679c\u4f60\u7684 IP \u6838\u6709\u53ef\u8c03\u53c2\u6570\uff08\u6bd4\u5982\u8ba1\u6570\u5668\u5bbd\u5ea6\u3001\u65f6\u949f\u9891\u7387\u7b49\uff09\uff0c<code>.xml</code> \u4f1a\u4fdd\u5b58\u8fd9\u4e9b\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u548c\u53ef\u9009\u8303\u56f4\u3002 \u5f53\u4f60\u5728 Vivado \u7684 IP Integrator \u91cc\u62d6\u62fd IP \u65f6\uff0c\u8f6f\u4ef6\u8bfb\u53d6 <code>.xml</code> \u6587\u4ef6\u6765\u663e\u793a IP \u7684\u63a5\u53e3\u3001\u7aef\u53e3\u548c\u53c2\u6570\u9009\u9879\u3002</p> Example of .xml file Text Only<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;spirit:component xmlns:xilinx=\"http://www.xilinx.com\" xmlns:spirit=\"http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n&lt;spirit:vendor&gt;xilinx.com&lt;/spirit:vendor&gt;\n&lt;spirit:model&gt;\n    &lt;spirit:ports&gt;\n    &lt;spirit:port&gt;\n        &lt;spirit:wire&gt;\n        &lt;spirit:direction&gt;out&lt;/spirit:direction&gt;\n        &lt;spirit:vector&gt;\n            &lt;spirit:left spirit:format=\"long\"&gt;4&lt;/spirit:left&gt;\n            &lt;spirit:right spirit:format=\"long\"&gt;0&lt;/spirit:right&gt;\n        &lt;/spirit:vector&gt;\n        &lt;/spirit:wire&gt;\n    &lt;/spirit:port&gt;\n    &lt;/spirit:ports&gt;\n&lt;/spirit:model&gt;\n&lt;spirit:fileSets&gt;\n&lt;spirit:description&gt;MUX2T1_5_v1_0&lt;/spirit:description&gt;\n&lt;/spirit:component&gt;\n</code></pre>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#_3","title":"\u600e\u4e48\u751f\u6210\u7f51\u8868\u6587\u4ef6\uff1f","text":"Text Only<pre><code>write_verilog -mode synth_stub E:/FPGA/ip/MUX2T1_5.v\n</code></pre> <ul> <li><code>write_verilog</code>\uff1a\u8ba9 Vivado \u5bfc\u51fa Verilog \u683c\u5f0f\u7684\u6587\u4ef6\u3002</li> <li> <p><code>-mode synth_stub</code>\uff1a\u8868\u793a\u5bfc\u51fa\u7684\u662f stub \u6587\u4ef6\uff08\u7a7a\u7aef\u53e3\u6587\u4ef6\uff09\u3002</p> </li> <li> <p>Stub \u6587\u4ef6\u53ea\u6709\u6a21\u5757\u540d\u548c\u7aef\u53e3\u5b9a\u4e49\uff0c\u6ca1\u6709\u5177\u4f53\u5b9e\u73b0\u903b\u8f91\u3002</p> </li> <li> <p>\u4e3b\u8981\u7528\u4e8e\u5728\u5176\u4ed6\u5de5\u7a0b\u91cc\u8c03\u7528\u8fd9\u4e2a IP \u65f6\u4f5c\u4e3a\u201c\u5360\u4f4d\u7b26\u201d\u3002</p> </li> <li> <p><code>E:/FPGA/ip/MUX2T1_5.v</code>\uff1a\u6307\u5b9a\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d\u3002</p> </li> </ul> <p>\u8fd9\u4e00\u53e5\u7684\u6548\u679c\uff1a\u751f\u6210\u4e00\u4e2a \u7a7a\u58f3 Verilog \u6587\u4ef6\uff0c\u91cc\u9762\u53ea\u6709 <code>module MUX2T1_5(...)</code> \u7684\u7aef\u53e3\u5b9a\u4e49\uff0c\u4f9b\u4f60\u5728\u5176\u4ed6\u5730\u65b9\u5f15\u7528\u3002</p> Text Only<pre><code>write_edif E:/FPGA/ip/MUX2T1_5.edf\n</code></pre> <ul> <li><code>write_edif</code>\uff1a\u8ba9 Vivado \u628a\u8bbe\u8ba1\u5bfc\u51fa\u4e3a EDIF\uff08Electronic Design Interchange Format\uff09 \u6587\u4ef6\u3002</li> <li><code>E:/FPGA/ip/MUX2T1_5.edf</code>\uff1a\u6307\u5b9a\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u548c\u540d\u5b57\u3002</li> </ul> <p>\u8fd9\u4e00\u53e5\u7684\u6548\u679c\uff1a\u751f\u6210\u4e00\u4e2a EDIF \u683c\u5f0f\u7684\u7f51\u8868\u6587\u4ef6\uff0c\u91cc\u9762\u662f\u903b\u8f91\u7535\u8def\u7ed3\u6784\uff08\u95e8\u7ea7\u8fde\u63a5\uff09\uff0c\u4f9b\u540e\u7eed\u5de5\u5177\u6216\u8005\u5176\u4ed6\u9879\u76ee\u4f7f\u7528\u3002</p> <p>\u6240\u4ee5\u603b\u7ed3\u4e00\u4e0b\uff1a</p> <ul> <li>\u7b2c\u4e00\u6761\u547d\u4ee4\u5bfc\u51fa \u7a7a\u58f3 Verilog \u63a5\u53e3\u6587\u4ef6\uff0c\u53ea\u4fdd\u7559\u7aef\u53e3\u5b9a\u4e49\u3002</li> <li>\u7b2c\u4e8c\u6761\u547d\u4ee4\u5bfc\u51fa \u7f51\u8868\u6587\u4ef6\uff08.edf\uff09\uff0c\u4fdd\u7559\u903b\u8f91\u5b9e\u73b0\u3002</li> </ul> <p>\u8fd9\u4e24\u6b65\u7ecf\u5e38\u914d\u5408\u7528\uff1a\u4e0a\u5c42\u5de5\u7a0b\u7528 stub \u6587\u4ef6\u8bc6\u522b\u7aef\u53e3\uff0c\u771f\u6b63\u7684\u529f\u80fd\u7531 EDIF \u7f51\u8868\u6765\u5b9e\u73b0\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#ip_2","title":"\u8c03\u7528 IP \u6838\u539f\u7406","text":"<p>\u4f60\u95ee\u7684\u8fd9\u4e2a\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f Vivado \u8c03\u7528 IP \u6838\uff08Intellectual Property Core\uff09 \u7684\u5185\u90e8\u539f\u7406\uff0c\u6211\u5e2e\u4f60\u8be6\u7ec6\u62c6\u5f00\u8bb2\u4e00\u8bb2\uff1a</p> <p>1. IP \u6838\u672c\u8d28</p> <p>\u5728 Vivado \u91cc\uff0c\u4e00\u4e2a IP \u6838\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u201c\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u6a21\u5757\u5c01\u88c5\u201d\uff0c\u91cc\u9762\u53ef\u80fd\u662f\uff1a</p> <ul> <li>\u6e90\u4ee3\u7801\uff08Verilog/VHDL\uff09\uff0c\u6216\u8005</li> <li>\u7f51\u8868\u6587\u4ef6\uff08EDIF .edf / DCP .dcp\uff09\uff0c\u751a\u81f3</li> <li>\u52a0\u5bc6\u540e\u7684\u9ed1\u76d2\u903b\u8f91\u3002</li> </ul> <p>\u5b83\u5bf9\u5916\u53ea\u66b4\u9732\u63a5\u53e3\uff08\u7aef\u53e3\uff09\uff0c\u5bf9\u5185\u9690\u85cf\u4e86\u5177\u4f53\u5b9e\u73b0\u3002\u8fd9\u6837\u4f60\u5728\u5de5\u7a0b\u4e2d\u4f7f\u7528\u65f6\uff0c\u5c31\u50cf\u8c03\u7528\u666e\u901a\u6a21\u5757\u4e00\u6837\u3002</p> <p>2. \u6587\u4ef6\u7ec4\u6210</p> <p>\u5f53\u4f60\u521b\u5efa/\u751f\u6210\u4e00\u4e2a IP \u6838\u65f6\uff0cVivado \u4f1a\u751f\u6210\u4e00\u5806\u6587\u4ef6\uff1a</p> <ul> <li><code>.xml</code> \u6587\u4ef6\uff1a\u63cf\u8ff0\u8fd9\u4e2a IP \u7684\u53c2\u6570\u3001\u63a5\u53e3\u7279\u5f81\u7b49\uff08\u5143\u6570\u636e\uff09\u3002</li> <li><code>.tcl</code> \u811a\u672c\uff1a\u914d\u5408 Vivado \u7684 XGUI \u754c\u9762\u4f7f\u7528\uff0c\u6839\u636e\u7528\u6237\u5728 GUI \u4e2d\u7684\u53c2\u6570\u914d\u7f6e\u52a8\u6001\u751f\u6210\u6216\u66f4\u65b0 IP\u3002</li> <li><code>.edf</code> / <code>.dcp</code> \u6587\u4ef6\uff1a\u8bbe\u8ba1\u7684\u7f51\u8868\u6216\u5df2\u5b9e\u73b0\u7684\u8bbe\u8ba1\u5feb\u7167\uff0c\u662f\u771f\u6b63\u7684\u903b\u8f91\u5b9e\u73b0\u3002</li> <li>stub \u6587\u4ef6\uff08.v \u6216 .vhdl\uff09\uff1a\u53ea\u6709\u7aef\u53e3\u58f0\u660e\u7684\u201c\u7a7a\u6a21\u5757\u201d\uff0c\u8ba9\u7efc\u5408\u5668\u77e5\u9053\u63a5\u53e3\u5b9a\u4e49\u3002</li> </ul> <p>3. \u8c03\u7528\u6d41\u7a0b</p> <p>\u5f53\u4f60\u5728 Vivado \u5de5\u7a0b\u91cc\u201c\u8c03\u7528\u201d\u4e00\u4e2a IP \u6838\u65f6\uff0c\u5185\u90e8\u4f1a\u53d1\u751f\u8fd9\u4e9b\u4e8b\u60c5\uff1a</p> <ol> <li> <p>\u89e3\u6790 XML \u63cf\u8ff0    Vivado \u4f1a\u8bfb\u53d6 <code>.xml</code> \u6587\u4ef6\uff0c\u77e5\u9053\u8fd9\u4e2a IP \u6709\u54ea\u4e9b\u53c2\u6570\uff08\u6bd4\u5982\u4f4d\u5bbd\u3001\u590d\u4f4d\u4fe1\u53f7\u6781\u6027\uff09\u3001\u6709\u54ea\u4e9b\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\u3002</p> </li> <li> <p>\u6267\u884c Tcl \u811a\u672c    Tcl \u811a\u672c\u4f1a\u6839\u636e\u7528\u6237\u7684\u914d\u7f6e\uff08\u4f60\u5728 GUI \u6216 Tcl Console \u91cc\u9009\u62e9\u7684\u53c2\u6570\uff09\uff0c\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u6bd4\u5982\uff1a</p> </li> <li> <p>\u751f\u6210/\u590d\u5236 stub \u6587\u4ef6\uff08\u7a7a\u63a5\u53e3\uff09</p> </li> <li>\u590d\u5236 <code>.edf</code> \u6216 <code>.dcp</code> \u6587\u4ef6\u5230\u5de5\u7a0b\u76ee\u5f55\u4e0b</li> <li> <p>\u66f4\u65b0\u5de5\u7a0b\u7684 <code>.xci</code> \u6216 <code>.xco</code> \u6587\u4ef6\uff08IP \u914d\u7f6e\u6587\u4ef6\uff09</p> </li> <li> <p>\u5f15\u5165\u7f51\u8868    \u5728\u7efc\u5408\u548c\u5b9e\u73b0\u9636\u6bb5\uff0cVivado \u4f1a\u81ea\u52a8\u628a\u5bf9\u5e94\u7684 <code>.edf</code> \u6216 <code>.dcp</code> \u52a0\u8f7d\u8fdb\u6765\uff0c\u4f5c\u4e3a\u903b\u8f91\u5b9e\u73b0\u3002\u56e0\u4e3a stub \u6587\u4ef6\u53ea\u6709\u7aef\u53e3\uff0c\u771f\u6b63\u7684\u903b\u8f91\u662f\u4ece\u7f51\u8868\u6765\u7684\u3002</p> </li> <li> <p>\u5b9e\u4f8b\u5316\u4f7f\u7528    \u5728\u4f60\u7684 HDL \u4ee3\u7801\u91cc\uff0c\u53ea\u9700\u8981 <code>U1: ip_core (...)</code> \u8fd9\u6837\u7684\u5b9e\u4f8b\u5316\u8c03\u7528\u3002\u7efc\u5408\u5668\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e2a stub\uff0c\u7136\u540e\u5728 Implementation \u9636\u6bb5\u7528\u5bf9\u5e94\u7684\u7f51\u8868\u66ff\u6362\u8fdb\u53bb\u3002</p> </li> </ol> <p>4. \u4e00\u4e2a\u7c7b\u6bd4</p> <p>\u53ef\u4ee5\u628a IP \u6838\u60f3\u6210\uff1a</p> <ul> <li>stub \u6587\u4ef6 \u2192 \u4ea7\u54c1\u8bf4\u660e\u4e66\uff08\u544a\u8bc9\u4f60\u63a5\u53e3\u957f\u4ec0\u4e48\u6837\uff09</li> <li>.xml + Tcl \u2192 \u88c5\u914d\u6307\u5357\uff08\u544a\u8bc9 Vivado \u600e\u4e48\u628a\u8fd9\u4e1c\u897f\u88c5\u8fdb\u5de5\u7a0b\uff09</li> <li>.edf/.dcp \u2192 \u771f\u6b63\u7684\u96f6\u4ef6\uff08\u903b\u8f91\u5b9e\u73b0\uff09</li> </ul> <p>\u5f53\u4f60\u201c\u8c03\u7528\u201d\u4e00\u4e2a IP \u65f6\uff0cVivado \u5e76\u4e0d\u662f\u91cd\u65b0\u751f\u6210\u903b\u8f91\uff0c\u800c\u662f \u6839\u636e xml \u7279\u5f81 + Tcl \u811a\u672c\uff0c\u628a\u73b0\u6210\u7684\u7f51\u8868\u590d\u5236\u5230\u4f60\u7684\u5de5\u7a0b\u91cc\uff0c\u5e76\u8ba9\u7efc\u5408/\u5b9e\u73b0\u9636\u6bb5\u8bc6\u522b\u5e76\u94fe\u63a5\u3002</p> <p>5. \u603b\u7ed3</p> <p>\u8c03\u7528 IP \u6838\u7684\u539f\u7406\u5c31\u662f\uff1a</p> <ul> <li>GUI \u53c2\u6570\u914d\u7f6e \u2192 Tcl \u811a\u672c\u89e3\u6790 \u2192 \u6839\u636e xml \u63cf\u8ff0\u751f\u6210\u63a5\u53e3\u6587\u4ef6\uff08stub\uff09</li> <li>\u540c\u65f6\u628a\u7f51\u8868\uff08edf/dcp\uff09\u52a0\u5165\u5de5\u7a0b</li> <li>\u7efc\u5408\u9636\u6bb5\u770b\u89c1 stub\uff0c\u77e5\u9053\u8fd9\u662f\u4e2a\u9ed1\u76d2</li> <li>\u5b9e\u73b0\u9636\u6bb5\u7528\u7f51\u8868\u66ff\u6362\u9ed1\u76d2 \u2192 \u5b8c\u6574\u903b\u8f91\u5d4c\u5165\u5de5\u7a0b</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#io-buffer","title":"I/O Buffer\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5728 FPGA \u8bbe\u8ba1\u4e2d\uff0cI/O Buffer\uff08\u8f93\u5165\u8f93\u51fa\u7f13\u51b2\u5668\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u786c\u4ef6\u5355\u5143\uff0c\u7528\u4e8e\u8fde\u63a5 FPGA \u5185\u90e8\u903b\u8f91\u4e0e\u5916\u90e8\u5f15\u811a\uff0c\u786e\u4fdd\u4fe1\u53f7\u53ef\u4ee5\u5b89\u5168\u3001\u53ef\u9760\u5730\u8fdb\u51fa\u82af\u7247\u3002</p> <p>IBUF\uff08\u8f93\u5165\u7f13\u51b2\u5668\uff09\u628a\u5916\u90e8\u4fe1\u53f7\u4f20\u5165 FPGA \u5185\u90e8\u903b\u8f91\uff0c\u63d0\u4f9b\u7535\u5e73\u5339\u914d\u3001\u566a\u58f0\u6ee4\u6ce2\u548c\u903b\u8f91\u4fe1\u53f7\u7a33\u5b9a\u6027\u3002OBUF\uff08\u8f93\u51fa\u7f13\u51b2\u5668\uff09\u628a FPGA \u5185\u90e8\u903b\u8f91\u4fe1\u53f7\u9a71\u52a8\u5230\u5916\u90e8\u5f15\u811a\uff0c\u63d0\u4f9b\u8db3\u591f\u7684\u9a71\u52a8\u80fd\u529b\uff0c\u4fdd\u8bc1\u4fe1\u53f7\u53ef\u4ee5\u4f20\u8f93\u5230\u5916\u90e8\u7535\u8def\u3002IOBUF\uff08\u53cc\u5411\u7f13\u51b2\u5668\uff09\u7528\u4e8e\u65e2\u80fd\u8f93\u5165\u53c8\u80fd\u8f93\u51fa\u7684\u5f15\u811a\uff0c\u5185\u90e8\u903b\u8f91\u901a\u8fc7\u63a7\u5236\u4fe1\u53f7\u51b3\u5b9a\u5f53\u524d\u662f\u8f93\u5165\u6a21\u5f0f\u8fd8\u662f\u8f93\u51fa\u6a21\u5f0f\u3002</p> <p>I/O Buffer \u7684\u4f5c\u7528\u662f\uff1a\u5339\u914d FPGA \u5185\u90e8\u903b\u8f91\u7535\u5e73\u4e0e\u5916\u90e8\u63a5\u53e3\u7535\u5e73\uff0c\u4fdd\u8bc1\u4fe1\u53f7\u80fd\u5b89\u5168\u4f20\u8f93\uff1b\u63d0\u4f9b\u8db3\u591f\u7684\u9a71\u52a8\u80fd\u529b\uff0c\u5e94\u5bf9\u5916\u90e8\u8d1f\u8f7d\u548c\u7ebf\u8def\u7279\u6027\uff1b\u9632\u6b62 FPGA \u5185\u90e8\u4fe1\u53f7\u76f4\u63a5\u66b4\u9732\u7ed9\u5916\u90e8\u7535\u8def\uff0c\u4ece\u800c\u4fdd\u62a4\u82af\u7247\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u6709\u4e00\u4e2a FPGA \u8f93\u5165\u5f15\u811a A \u548c\u8f93\u51fa\u5f15\u811a Y\uff0c\u8f93\u5165\u65f6\u4fe1\u53f7\u5148\u7ecf\u8fc7 IBUF \u8fdb\u5165\u5185\u90e8\u903b\u8f91\uff0c\u8f93\u51fa\u65f6\u5185\u90e8\u903b\u8f91\u4fe1\u53f7\u5148\u7ecf\u8fc7 OBUF \u518d\u9a71\u52a8\u5916\u90e8\u5f15\u811a\u3002\u5982\u679c\u662f\u53cc\u5411\u5f15\u811a\uff0c\u53ef\u4ee5\u7528 IOBUF \u63a7\u5236\u65b9\u5411\u3002</p> <p>\u5728 Vivado \u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7efc\u5408\u9876\u5c42\u6a21\u5757\u65f6\u4f1a\u81ea\u52a8\u5728\u9876\u5c42 I/O \u4e0a\u63d2\u5165 I/O Buffer\u3002\u5982\u679c\u9009\u62e9 out_of_context \u7efc\u5408\uff0c\u6a21\u5757\u5185\u90e8\u4e0d\u4f1a\u63d2\u5165 I/O Buffer\uff0c\u56e0\u4e3a\u9876\u5c42 I/O \u7531\u8c03\u7528\u5de5\u7a0b\u7edf\u4e00\u7ba1\u7406\u3002</p> <p>\u4e00\u53e5\u8bdd\u603b\u7ed3\uff1aI/O Buffer \u662f FPGA \u5185\u90e8\u903b\u8f91\u548c\u5916\u90e8\u5f15\u811a\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u786e\u4fdd\u4fe1\u53f7\u53ef\u9760\u3001\u5b89\u5168\u5730\u4f20\u5165\u6216\u4f20\u51fa\u82af\u7247\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/experiment%20notes/vivado%20intro/#out-of-context","title":"out-of-context\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5728 Vivado \u4e2d\uff0c\u5f53\u4f60\u5bf9\u67d0\u4e2a\u6a21\u5757\u8fdb\u884c\u7efc\u5408\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u9009\u9879\u53eb <code>out_of_context</code>\uff0c\u610f\u601d\u662f\u8ba9\u8fd9\u4e2a\u6a21\u5757 \u72ec\u7acb\u4e8e\u9876\u5c42\u5de5\u7a0b\u8fdb\u884c\u7efc\u5408\u3002</p> <p>\u901a\u5e38\uff0c\u7efc\u5408\u4f1a\u8003\u8651\u6a21\u5757\u7684\u6574\u4e2a\u4e0a\u4e0b\u6587\uff0c\u5305\u62ec\u9876\u5c42\u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u548c\u8fde\u63a5\u60c5\u51b5\uff0c\u540c\u65f6\u4f1a\u81ea\u52a8\u5728\u9876\u5c42 I/O \u5f15\u811a\u5904\u63d2\u5165 I/O \u7f13\u51b2\u5668\uff08\u5982 <code>IBUF</code>\u3001<code>OBUF</code> \u6216 <code>IOBUF</code>\uff09\uff0c\u786e\u4fdd\u4fe1\u53f7\u80fd\u6b63\u786e\u9a71\u52a8 FPGA \u5916\u90e8\u63a5\u53e3\u3002\u4f46\u662f\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ea\u60f3\u5bf9\u67d0\u4e2a\u5b50\u6a21\u5757\u672c\u8eab\u8fdb\u884c\u903b\u8f91\u7efc\u5408\uff0c\u4e0d\u60f3\u628a\u5b83\u7684\u9876\u5c42 I/O \u5305\u542b\u8fdb\u6765\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>out_of_context</code>\u3002</p> <p>\u4f7f\u7528 <code>out_of_context</code> \u6709\u51e0\u4e2a\u6548\u679c\uff1a</p> <ol> <li> <p>\u4e0d\u751f\u6210\u9876\u5c42 I/O \u7f13\u51b2\u5668</p> </li> <li> <p>\u6a21\u5757\u5185\u90e8\u903b\u8f91\u4f1a\u88ab\u7efc\u5408\u6210\u95e8\u7ea7\u7f51\u8868\uff0c\u4f46\u9876\u5c42\u8f93\u5165\u8f93\u51fa\u4e0d\u4f1a\u81ea\u52a8\u52a0\u4e0a I/O buffer\u3002</p> </li> <li> <p>\u8fd9\u6837\u751f\u6210\u7684\u7f51\u8868\u53ea\u5305\u542b\u5185\u90e8\u903b\u8f91\uff0c\u5916\u90e8\u63a5\u53e3\u7559\u7a7a\u6216\u5f53\u4f5c\u9ed1\u76d2\u5904\u7406\u3002</p> </li> <li> <p>\u52a0\u5feb\u7efc\u5408\u901f\u5ea6</p> </li> <li> <p>\u56e0\u4e3a\u4e0d\u9700\u8981\u5904\u7406\u9876\u5c42\u8fde\u63a5\u548c I/O \u5206\u914d\uff0cVivado \u53ea\u5173\u6ce8\u6a21\u5757\u5185\u90e8\u903b\u8f91\u3002</p> </li> <li> <p>\u5bf9\u5927\u578b\u5de5\u7a0b\u6216 IP \u5c01\u88c5\u5c24\u5176\u6709\u7528\uff0c\u53ef\u4ee5\u72ec\u7acb\u751f\u6210\u7f51\u8868\u3002</p> </li> <li> <p>\u65b9\u4fbf\u6a21\u5757\u590d\u7528</p> </li> <li> <p>\u6a21\u5757\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u7684\u903b\u8f91\u5757\u5bfc\u51fa\uff08\u6bd4\u5982 <code>.edf</code> \u6216 <code>.dcp</code> \u6587\u4ef6\uff09\uff0c\u4f9b\u5176\u4ed6\u5de5\u7a0b\u6216\u9876\u5c42\u6a21\u5757\u5f15\u7528\u3002</p> </li> <li>\u4f60\u5728\u9876\u5c42\u5de5\u7a0b\u4e2d\u518d\u5b9e\u4f8b\u5316\u65f6\uff0c\u9876\u5c42 I/O \u4f1a\u6839\u636e\u5b9e\u9645\u9700\u8981\u52a0\u4e0a\u7f13\u51b2\u5668\u3002</li> </ol> <p>\u5bfc\u51fa\u7f51\u8868\u6587\u4ef6\u65f6\u8bbe\u7f6eOOC\uff0c\u4e0d\u63d2\u5165\u4efb\u4f55I/O Buffer:</p> <p>\u542f\u7528 <code>out_of_context</code> \u540e\uff0cVivado \u628a\u8fd9\u4e2a\u6a21\u5757\u5f53\u4f5c \u72ec\u7acb\u7684\u5b50\u5de5\u7a0b\u6216\u9ed1\u76d2 \u6765\u7efc\u5408\uff0c\u53ea\u751f\u6210\u6a21\u5757\u5185\u90e8\u903b\u8f91\uff0c\u4e0d\u7ba1\u5b83\u5916\u9762\u600e\u4e48\u8fde\u63a5\uff0c\u4e5f\u4e0d\u751f\u6210\u4efb\u4f55 I/O buffer\u3002\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf IP \u6838\u5c01\u88c5\u3001\u6a21\u5757\u590d\u7528\u548c\u5206\u5757\u7efc\u5408\u3002</p> <p>\u5728\u5bfc\u51fa\u7f51\u8868\u6587\u4ef6\u65f6\u8bbe\u7f6e OOC\uff08out_of_context\uff09\uff0c\u8ba9\u6a21\u5757\u4e0d\u52a0\u5165\u4efb\u4f55 I/O Buffer\uff0c\u662f\u56e0\u4e3a\u6b64\u65f6\u4f60\u53ea\u60f3\u751f\u6210\u6a21\u5757\u5185\u90e8\u7684\u903b\u8f91\u7f51\u8868\uff0c\u800c\u4e0d\u5173\u5fc3\u5b83\u5728\u9876\u5c42\u5de5\u7a0b\u7684\u5f15\u811a\u8fde\u63a5\u3002</p> <p>OOC \u6a21\u5f0f\u4e0b\uff0cVivado \u4f1a\u628a\u6a21\u5757\u5f53\u4f5c\u4e00\u4e2a\u72ec\u7acb\u5b50\u6a21\u5757\u6216\u9ed1\u76d2\u6765\u7efc\u5408\uff0c\u53ea\u5173\u6ce8\u6a21\u5757\u5185\u90e8\u7684\u903b\u8f91\u529f\u80fd\uff0c\u4e0d\u751f\u6210\u9876\u5c42 I/O \u76f8\u5173\u7684\u7f13\u51b2\u5668\u3002\u8fd9\u6837\u505a\u6709\u51e0\u4e2a\u597d\u5904\uff1a</p> <ol> <li>\u53ef\u4ee5\u72ec\u7acb\u7efc\u5408\u6a21\u5757\uff0c\u63d0\u9ad8\u7efc\u5408\u901f\u5ea6\uff0c\u4e0d\u53d7\u9876\u5c42\u5f15\u811a\u7ea6\u675f\u5f71\u54cd\u3002</li> <li>\u751f\u6210\u7684\u7f51\u8868\u66f4\u901a\u7528\uff0c\u4fbf\u4e8e\u5728\u5176\u4ed6\u5de5\u7a0b\u4e2d\u590d\u7528\uff0c\u9876\u5c42 I/O \u7531\u8c03\u7528\u5de5\u7a0b\u7edf\u4e00\u5904\u7406\u3002</li> <li>\u907f\u514d\u5728\u751f\u6210\u7684\u7f51\u8868\u91cc\u56fa\u5b9a I/O \u8fde\u63a5\uff0c\u4fdd\u7559\u63a5\u53e3\u7075\u6d3b\u6027\uff0c\u4f7f\u6a21\u5757\u66f4\u50cf\u4e00\u4e2a\u53ef\u91cd\u7528\u7684 IP \u6838\u3002</li> </ol> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u8bbe\u7f6e OOC \u5e76\u4e0d\u52a0 I/O Buffer\uff0c\u662f\u4e3a\u4e86\u8ba9\u5bfc\u51fa\u7684\u7f51\u8868\u53ea\u5305\u542b\u5185\u90e8\u903b\u8f91\uff0c\u800c\u9876\u5c42 I/O \u7531\u6700\u7ec8\u5de5\u7a0b\u6765\u51b3\u5b9a\uff0c\u4fdd\u8bc1\u590d\u7528\u6027\u548c\u7075\u6d3b\u6027\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap01/","title":"Chap 01 \u4ecb\u7ecd","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1435 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap01/#introduction","title":"Introduction","text":"<ul> <li>\u56fe\u7075\u673a\uff1a\u56fe\u7075\u63d0\u51fa\u7684\u4e00\u79cd \u7406\u60f3\u5316\u7684\u8ba1\u7b97\u6a21\u578b</li> <li>\u56fe\u7075\u6d4b\u8bd5\uff1a\u56fe\u7075\u63d0\u51fa\u7684\u68c0\u9a8c\u4eba\u5de5\u667a\u80fd\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u4e00\u4e2a\u673a\u5668\u5728\u5bf9\u8bdd\u4e2d\u80fd\u8ba9\u4eba\u7c7b\u5206\u4e0d\u6e05\u81ea\u5df1\u9762\u5bf9\u7684\u662f\u673a\u5668\u8fd8\u662f\u771f\u4eba\uff0c\u5c31\u901a\u8fc7\u4e86\u56fe\u7075\u6d4b\u8bd5\u3002</li> <li>\u56fe\u7075\u5b8c\u5907\u6027\uff08\u56fe\u7075\u5b8c\u5168\uff09\uff1a\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u80fd\u6a21\u62df\u4efb\u610f\u56fe\u7075\u673a\u7684\u8fd0\u7b97\uff0c\u5c31\u79f0\u5b83\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff0c\u901a\u5e38\u9700\u8981\u6709\u6761\u4ef6\u5206\u652f\u3001\u5faa\u73af\uff08\u6216\u9012\u5f52\uff09\u3001\u53ef\u4fee\u6539\u7684\u6570\u636e\u5b58\u50a8\u3002</li> </ul> <p>\u7535\u5b50\u7ba1\uff08\u771f\u7a7a\u7ba1\uff09\uff0c\u53ef\u7f16\u7a0b -&gt; \u6676\u4f53\u7ba1\uff0c\u4f53\u79ef\u51cf\u5c0f -&gt; \u96c6\u6210\u7535\u8def -&gt; \u5fae\u5904\u7406\u5668</p> <p>\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\uff1a\u8ba1\u7b97\u548c\u5b58\u50a8\u5206\u79bb\uff0c\u6570\u636e\u548c\u6307\u4ee4\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u5b58\u50a8\u5668\uff0c\u6309\u7167\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c \u73b0\u4ee3\uff1a\u8ba1\u7b97\u548c\u5b58\u50a8\u7edf\u4e00\uff08CPU \u8fd0\u7b97\u901f\u5ea6\u589e\u957f\u5f97\u8d8a\u6765\u8d8a\u5feb\uff0c\u4f46\u5185\u5b58\u8bbf\u95ee\u901f\u5ea6\u63d0\u5347\u8fdc\u8fdc\u8ddf\u4e0d\u4e0a\uff0c\u201c\u5185\u5b58\u5899\u201d\uff09 \u529f\u8017\u5899\uff1a\u968f\u7740\u5904\u7406\u5668\u9891\u7387\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u529f\u8017\u4e5f\u968f\u4e4b\u589e\u52a0\uff0c\u5bfc\u81f4\u6563\u70ed\u95ee\u9898\u8d8a\u6765\u8d8a\u4e25\u91cd\u3002\u5f53\u529f\u8017\u8fbe\u5230\u4e00\u5b9a\u7684\u4e0a\u9650\u65f6\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u9891\u7387\u6216\u589e\u52a0\u529f\u80fd\u7684\u8bbe\u8ba1\u53d8\u5f97\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u8fc7\u9ad8\u7684\u529f\u8017\u4f1a\u5bfc\u81f4\u786c\u4ef6\u635f\u574f\u6216\u70ed\u91cf\u8fc7\u9ad8\u800c\u5f71\u54cd\u7a33\u5b9a\u6027\u3002</p> <p>RISC\uff1a\u6307\u4ee4\u6267\u884c\u7528\u5c3d\u91cf\u5c11\u7684\u65f6\u949f\u5468\u671f\uff0c\u6307\u4ee4\u7f16\u7801\u957f\u5ea6\u5b9a\u957f\uff0c\u63d0\u9ad8 CPU \u4e0e\u7f16\u8bd1\u6548\u7387</p> <p>Moore's Law\uff1a \u5355\u82af\u7247\u4e0a\u6240\u96c6\u6210\u7684\u6676\u4f53\u7ba1\u8d44\u6e90\u6bcf 18 \u81f3 24 \u4e2a\u6708\u7ffb\u4e00\u500d</p> <p>\u4ec0\u4e48\u662f\u8ba1\u7b97\u673a\uff1f\u7535\u5b50\u5316\uff0c\u6709\u6307\u4ee4\u96c6\uff0c\u53ef\u6267\u884c\u6307\u4ee4\uff0c\u53ef\u5b58\u50a8\u6307\u4ee4\u4e0e\u6570\u636e\uff0c\u8ba1\u7b97\u80fd\u529b\u4e0a\u662f\u56fe\u7075\u5b8c\u5168</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap01/#computer-organization","title":"Computer Organization","text":"<p>\u786c\u4ef6\uff1aCPU\uff08\u63a7\u5236\u5355\u5143\uff0c\u6570\u636e\u7ebf\uff09\uff0c\u5185\u5b58\uff0cI/O \u63a5\u53e3</p> <p>Memory\uff1a Main memory: volatile, hold programs while they are running Second memory: nonvolatile, store programs and data between runs</p> <p>Volatile\uff08\u6613\u5931\u6027\uff09\uff1aDRAM, SRAM\uff08\u8bfb\u5199\u5feb\uff0c\u7528\u4e8e\u7f13\u5b58\uff09 Nonvolatile\uff08\u975e\u6613\u5931\u6027\uff09\uff1a\u56fa\u6001\u786c\u76d8 or \u95ea\u5b58\uff0c\u786c\u76d8</p> <p>\u8f6f\u4ef6\uff1a\u5e94\u7528\u8f6f\u4ef6 + \u7cfb\u7edf\u8f6f\u4ef6</p> <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a\u5904\u7406\u57fa\u672c\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\uff0c\u7ba1\u7406\u5b58\u50a8\u548c\u5185\u5b58\uff0c\u51b3\u7b56\u4e0d\u540c\u7a0b\u5e8f\u8ba1\u7b97\u80fd\u529b\u7684\u5206\u914d</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap01/#computer-design","title":"Computer Design","text":"<p>\u54cd\u5e94\u65f6\u95f4/\u6267\u884c\u65f6\u95f4\uff08response time\uff09\uff1a\u591a\u4e45\u5b8c\u6210\u4efb\u52a1 \u541e\u5410\u7387\uff08throughput\uff09\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u80fd\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf \u6d41\u6c34\u7ebf CPU \u6ca1\u6709\u6539\u53d8\u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4\uff0c\u4f46\u662f\u63d0\u9ad8\u7684\u541e\u5410\u7387\u3002 \u5bf9\u6bcf\u4e2a\u64cd\u4f5c\u54cd\u5e94\u65f6\u95f4\u77ed\uff0c\u541e\u5410\u7387\u5927\uff1b\u541e\u5410\u7387\u5927\u4e0d\u4e00\u5b9a\u5bf9\u6bcf\u4e2a\u7684\u54cd\u5e94\u65f6\u95f4\u90fd\u77ed \u589e\u52a0\u5904\u7406\u5668\uff0c\u54cd\u5e94\u65f6\u95f4\u4e0d\u4e00\u5b9a\u63d0\u9ad8\uff08\u8003\u8651\u5355\u5904\u7406\u5668\uff09\uff0c\u4f46\u541e\u5410\u7387\u63d0\u9ad8 \u6027\u80fd performance=1/\u6267\u884c\u65f6\u95f4 performance \u5fc5\u987b\u57fa\u4e8e\u540c\u4e00\u4e2a\u7a0b\u5e8f \u8fd0\u884c\u65f6\u95f4 elapsed time\uff1a\u603b\u7684\u65f6\u95f4\uff0c\u5305\u62ec\u54cd\u5e94\u65f6\u95f4\uff0c\u8f93\u5165\u8f93\u51fa\u65f6\u95f4\uff0c\u7a7a\u95f2\u65f6\u95f4 CPU \u65f6\u95f4\uff1a\u5904\u7406\u5de5\u4f5c\u7684\u603b\u7684\u65f6\u95f4\uff0c\u662f elapsed time \u7684\u5b50\u96c6\uff0c\u5305\u542b\u591a\u4e2a\u4efb\u52a1\u7684 shares</p> <p>\u771f\u6b63\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u53ea\u6709 CPU \u65f6\u95f4\uff0c\u8fd8\u6709 IO \u7b49\u7cfb\u7edf\u65f6\u95f4\uff08\u8fd9\u91cc\u5148\u53ea\u8003\u8651 CPU\uff09</p> <p>\u540c\u6b65\u903b\u8f91\uff1a\u540c\u4e00\u4e2a\u65f6\u949f\u9a71\u52a8 CPU \u662f\u540c\u6b65\u903b\u8f91</p> <p>\u600e\u4e48\u8ba1\u7b97 CPU \u6267\u884c\u65f6\u95f4\uff1f CPU \u6709\u65f6\u949f\u5468\u671f\uff0c\u4e0a\u5347\u6cbf\u9a71\u52a8\u3002\u9891\u7387\u662f\u65f6\u949f\u5468\u671f\u7684\u5012\u6570 clock frequency = 1 / clock period CPU \u65f6\u95f4 = \u603b\u5171\u7528\u4e86\u51e0\u4e2a CPU \u65f6\u949f * \u65f6\u949f\u5468\u671f = \u603b\u5171\u7528\u4e86\u51e0\u4e2a CPU \u65f6\u949f/\u65f6\u949f\u9891\u7387 \u6027\u80fd\u63d0\u9ad8\uff1a\u51cf\u5c11\u65f6\u949f\uff0c\u63d0\u9ad8\u9891\u7387\uff0c\u786c\u4ef6\u8bbe\u8ba1\u65f6\u5728 clock rate \u548c cycle count \u4e2d trade-off clock cycle = \u6307\u4ee4\u6570\u76ee * \u6bcf\u6761\u65f6\u95f4\u591a\u5c11\u4e2a\u65f6\u949f\u6570\uff08CPI\uff09 \u6307\u4ee4\u6570 IC\uff08Instruction Count\uff09 CPU time = clock cycle * clock cycle time = instruction count * CPI / clock rate \u5f71\u54cd\u6307\u4ee4\u6570\uff1a\u51cf\u5c11\u6307\u4ee4\u6570\uff0c\u6307\u4ee4\u96c6\uff08ISA\uff09\uff0c\u7f16\u8bd1\u5668 CPI \u7531 CPU \u51b3\u5b9a\uff0c\u548c\u6307\u4ee4\u7684\u7ec4\u6210\u65b9\u5f0f\u6709\u5173 \u771f\u6b63\u7684 clock cycle = \u6bcf\u4e00\u79cd CPI *\u8fd9\u79cd CPI \u7684\u6307\u4ee4\u6570 \u6c42\u548c \u7b97\u6cd5\u5f71\u54cd\u6307\u4ee4\u6570 IC \u548c CPI\uff0c\u4ece\u800c\u5f71\u54cd source-level statements and the number of I/O operations \u8ba1\u7b97\u5e73\u5747 CPI \u9891\u7387\u5f88\u96be\u63d0\u9ad8\uff1a\u529f\u8017\u9650\u5236 -&gt; \u591a\u6838 \u529f\u8017 = \u8d1f\u8f7d * \u7535\u538b^2 * \u9891\u7387 \u5de5\u827a\u8d8a\u5148\u8fdb\uff0c\u7535\u538b\u8d8a\u4f4e\uff0c\u529f\u8017\u8d8a\u5c0f\uff08\u7535\u538b\u964d\u4f4e\u4f7f\u9891\u7387\u589e\u957f\u6ca1\u6709\u5bfc\u81f4\u529f\u8017\u540c\u7b49\u589e\u957f\uff09 \u52a8\u6001\u80fd\u8017\uff1a\u534a\u5bfc\u4f53\u5bfc\u901a\u548c\u622a\u6b62\u65f6\u4ea7\u751f\u7684\u80fd\u8017 Instruction set architecture \u6307\u4ee4\u96c6</p> <p>\u63e1\u624b\u534f\u8bae\uff1a\u5728\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\uff08\u65f6\u949f\u4fe1\u53f7\u7684\u8fb9\u7f18\uff09\u901a\u8fc7\u4ea4\u6362\u4fe1\u53f7\u6765\u534f\u8c03\u64cd\u4f5c\u3002 \u65f6\u949f\u5468\u671f clock period\uff1a\u4e00\u4e2a\u5468\u671f\u7684\u957f\u5ea6 \u65f6\u949f\u5468\u671f\u6570 clock cycles 1ns = \\(1\\times 10^{-9}\\)s, 1ps = \\(1\\times 10^{12}\\)s 1MHz = \\(1\\times 10^{6}\\)Hz\uff0c 1GHz = \\(1\\times 10^{9}\\)Hz \u65f6\u949f\u9891\u7387 clock frequency(rate)\uff1a\u4e00\u79d2\u5185\u7684\u5468\u671f\u6570</p> <p>\u82af\u7247\u5236\u9020\uff1a\u82af\u7247\u8bbe\u8ba1\uff0c\u63a9\u819c\uff0c\u7845\u5207\u7247\u6210\u6676\u5706\uff0c\u5149\u523b\uff0c\u6d4b\u8bd5\uff0c\u6676\u5706\u5207\u7247\uff0c\u5c01\u88c5 \uff1fnm\uff1a\u4e24\u6761\u7ebf\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb</p> \\[ \\text{cost per die}=\\frac{\\text{cost per wafer}}{\\text{dies per wafer}\\times\\text{yield}},\\quad\\text{dies per wafer}\\approx\\text{wafer area}/\\text{die area}\\] \\[\\text{yield}=\\frac{1}{(1+(\\text{defects per area}\\times\\text{die area}/2))^2}\\] <p>\u82af\u7247\u9762\u79ef\u8d8a\u5927\uff0c\u826f\u7387\u8d8a\u4f4e\u3002</p> <p>\u5355\u6838\uff1a\u6307\u4ee4\u96c6\u5e76\u884c \u591a\u6838\uff1a\u5e76\u884c\u7f16\u7a0b\uff0cload balance\uff0c\u6838\u4e0e\u6838\u7684\u4ea4\u4e92</p> <p>\u6027\u80fd\u8bc4\u4f30\uff1aSPEC CPU benchmark:\u8dd1\u5206\uff0c\u6d4b\u8bd5\u6027\u80fd\u7684\u7a0b\u5e8f \u53c2\u8003\u673a\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u4e3a 1\uff0c\u5404\u90e8\u5206\u7684\u5f97\u5206\u4e3a\u6807\u51c6\u673a\u7684\u65f6\u95f4/\u5b9e\u9645\u65f6\u95f4 \u8dd1\u5206\u6807\u51c6\uff1a\u5c06\u4e0d\u540c\u90e8\u5206\u7684\u5f97\u5206\u76f8\u4e58\u3001\u5f00 n \u6b21\u65b9\u6839\uff08\u51e0\u4f55\u5e73\u5747\uff09</p> <p>\u529f\u8017\u8bc4\u4f30\uff1assj_ops\uff0c\u8868\u793a\u5355\u4f4d\u65f6\u95f4\u7684\u6027\u80fd \u4e0d\u540c\u8d1f\u8f7d\u4e0b\uff0c\u8bb0\u5f55\u6027\u80fd\uff08ssj_ops\uff09\u548c\u529f\u8017\uff08W\uff09\uff0c\u7efc\u5408\u6307\u6807 ssj_ops/Watt = \u6027\u80fd\u6c42\u548c / \u529f\u8017\u6c42\u548c Amdahl's law\uff1a\u80fd\u63d0\u9ad8\u7684\u90a3\u90e8\u5206\u6027\u80fd\uff0c\u7531\u4e0d\u53ef\u6539\u53d8\u7684\u90a3\u90e8\u5206\u7684\u5360\u6bd4\u51b3\u5b9a \u6539\u8fdb\u7684\u65f6\u95f4=\uff08\u53ef\u4ee5\u6539\u53d8\u7684/\u6539\u8fdb\u7cfb\u6570\uff09+ \u4e0d\u80fd\u6539\u53d8\u7684\u65f6\u95f4 \u8981\u4f18\u5316 common case \u8d1f\u8f7d\u5c11\u4e0d\u4e00\u5b9a\u529f\u8017\u4f4e\uff0c\u5c3d\u91cf\u4f7f CPU \u8d1f\u8f7d\u591a MIPS\uff1amillions of instruction per second\uff0cMIPS = clock rate / CPI*10^6 MIPS \u9ad8\uff0c\u6027\u80fd\u4e0d\u4e00\u5b9a\u8d8a\u597d\uff0c\u548c\u6307\u4ee4\u96c6 ISA \u6709\u5173 MIPS \u548c\u6307\u4ee4\u6570\u65e0\u5173\uff0c\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u53ea\u6709\u4e00\u4e2a MIPS\uff08\u54ea\u6015\u662f\u4e0d\u540c\u7a0b\u5e8f\uff09\uff0c\u56e0\u6b64\u4e0d\u5168\u9762</p> <p>eight great ideas:</p> <ol> <li>design for moore law\uff1a\u6bcf\u4e24\u5e74\u5355\u4f4d\u9762\u79ef\u7684\u6676\u4f53\u7ba1\u6570\u7ffb\u500d</li> <li>use abstraction to simplify design\uff1a\u5c01\u88c5\uff0cTCP/IP\uff0cISA</li> <li>make the common case fast\uff1a\u5982\u5c06 0 \u5b58\u50a8\u5728\u7279\u5b9a\u5bc4\u5b58\u5668 x0</li> <li>performance via parallelism\uff1a\u540c\u65f6\u8fdb\u884c\u540c\u4e00\u4ef6\u4e8b</li> <li>performance via pipelining\uff1a\u524d\u540e\u6b65\u9aa4\u91cd\u53e0\u8fdb\u884c\uff08\u6d17\u8863\u670d\uff09</li> <li>performance via prediction\uff1a\u9884\u6d4b\u8981\u505a\u4ec0\u4e48\u4e8b\uff0c\u5728\u5f97\u5230\u660e\u786e\u7b54\u6848\u4e4b\u524d\u8ba1\u7b97\u4e0d\u540c\u53ef\u80fd\u7684\u7ed3\u679c\uff0c\u6761\u4ef6\u662f\u8bd5\u9519\u6210\u672c\u4e0d\u5927</li> <li>hierarchy of memory\uff1a\u8d8a\u4fbf\u5b9c\u3001\u8d8a\u6162\u3001\u8d8a\u5927\uff0c\u8d8a\u653e\u5728\u5e95\u5c42\uff08\u5c11\u7528\uff09</li> <li>dependability via redundancy\uff1a\u901a\u8fc7\u5197\u4f59\u63d0\u5347\u7a0b\u5e8f\u7684\u53ef\u9760\u6027\uff0c\u5982\u591a\u4e2a\u5904\u7406\u5668\u540c\u65f6\u5904\u7406\u540c\u4e00\u8fc7\u7a0b</li> </ol> <p>\u65b0\u7684\u6469\u5c14\u5b9a\u5f8b\uff1a\u6bcf 1.5~2 \u5e74\uff0c\u667a\u80fd\u4f53\u7684\u6570\u91cf\u7ffb\u4e00\u500d</p> 8\u4e2a\u601d\u60f3\u7684\u793a\u4f8b <p>\u6c7d\u8f66\u751f\u4ea7\uff1a\u6d41\u6c34\u7ebf \u540a\u6865\uff1a\u5197\u4f59 \u98de\u673a\u8003\u8651\u98ce\u5411\uff1a\u9884\u6d4b \u7535\u68af\uff1acommon case fast \u56fe\u4e66\u9986\u653e\u4e66\u7684\u4e66\u684c\uff1ahierarchy   CMOS\u4e2d\uff0c\u95e8\u533a\u57df\u5927\uff1a\u5e76\u884c \u6280\u672f\u53d1\u5c55\uff1a\u6469\u5c14\u5b9a\u5f8b \u81ea\u9a7e\u7cfb\u7edf\u5206\u7c7b\uff1a\u5c01\u88c5</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/","title":"Chap 02 \u6307\u4ee4\u96c6","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 3224 \u4e2a\u5b57\u00a0\u00a037 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_1","title":"\u6307\u4ee4\u96c6\u4ecb\u7ecd","text":"<p>\u6307\u4ee4\u96c6\u5c06\u8f6f\u4ef6\u548c\u786c\u4ef6\u8054\u7cfb GCC \u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00 -\uff08\u7f16\u8bd1\u5668\uff09-&gt; \u6c47\u7f16\u8bed\u8a00 -\uff08\u6c47\u7f16\u5668\uff09-&gt; \u673a\u5668\u8bed\u8a00\uff0c\u4e8c\u8fdb\u5236 \u8fd9\u91cc\u5b66\u4e60\u7684\u6307\u4ee4\u96c6\u5c06\u6c47\u7f16\u548c\u673a\u5668\u8bed\u8a00\u5bf9\u5e94\u8d77\u6765</p> <p>Instruction set\uff1a\u5b9a\u4e49\u8bed\u6cd5\u7ed3\u6784\uff08syntax\uff09</p> <p>\u4e00\u6761\u6307\u4ee4\u7531 op\uff08operators\uff09\u548c oprand\uff08\u64cd\u4f5c\u5bf9\u8c61\uff09\u7ec4\u6210 RISC: Reduced Insruction Set Computer</p> <p>\u73b0\u4ee3\u8ba1\u7b97\u673a\u7684\u4e24\u6761\u539f\u7406\uff1a</p> <ul> <li>\u6307\u4ee4\u4ee5\u6570\u5b57\u5f62\u5f0f\u8868\u793a\u3002</li> <li>\u7a0b\u5e8f\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u50cf\u6570\u5b57\u4e00\u6837\u88ab\u8bfb\u53d6\u6216\u5199\u5165\u3002</li> </ul> <p>\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u4efb\u4f55\u6307\u4ee4\u96c6\u5fc5\u987b\u652f\u6301\u7b97\u672f\u8fd0\u7b97</li> <li>RISC-V \u4e2d\u6bcf\u4e00\u6761\u6307\u4ee4\u53ea\u652f\u6301\u4e00\u79cd\u64cd\u4f5c\uff0c\u5176\u4ed6\u7684\u5982 x86 \u4e2d\u6709\u4e58\u52a0\uff08\u4e3a\u4ec0\u4e48\uff1fSimplicity favors regularity\uff09</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_2","title":"\u64cd\u4f5c\u548c\u64cd\u4f5c\u6570","text":""},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_3","title":"\u64cd\u4f5c\u683c\u5f0f","text":"<p>\u683c\u5f0f\uff1a<code>\u64cd\u4f5c\u7b26 \u7ed3\u679c \u64cd\u4f5c\u65701 \u64cd\u4f5c\u65702</code></p> <p>\u793a\u4f8b RISC-V \u4e2d\u52a0\u51cf\u6cd5</p> <p>\u793a\u4f8b\uff1af=(g+h)-(i+j) RISC-V\uff1a</p> GAS<pre><code># \u793a\u4f8b\uff0c\u5b9e\u9645\u4e2dg\uff0ch\u4e0d\u80fd\u51fa\u73b0\nadd t0, g, h    # \u4e34\u65f6\u53d8\u91cft0\nadd t1, i, j    # \u4e34\u65f6\u53d8\u91cft1\nsub f, t0, t1   # f=t0-t1\n</code></pre> <p>\u7528\u5bc4\u5b58\u5668\u8868\u793a\uff08\u6807\u51c6\u7684\u6c47\u7f16\uff09\uff1a</p> GAS<pre><code>add x5, x20, x21\nadd x6, x22, x23\nsub x19, x5, x6\n</code></pre> <p>Arithmetic \u7c7b\u578b\u4e2d\uff0c\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u540e\u4e24\u4e2a\u4e3a\u6e90\u5bc4\u5b58\u5668\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_4","title":"\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570","text":"<p>\u7b97\u672f\u903b\u8f91\u64cd\u4f5c\u53ea\u80fd\u7528 register\uff0c\u4e0d\u80fd\u7528 memory\u3002 RISC-V \u4e2d\u6709 32 \u4e2a 64 \u4f4d\u5bc4\u5b58\u5668\uff0c\u4e00\u4e2a\u5bc4\u5b58\u5668\u662f\u4e00\u4e2a\u6574\u4f53\u3002 \u7ecf\u5e38\u7528\u7684\u6570\u636e\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c32 \u4f4d\u6570\u636e\u53eb\u505a word\uff0c\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d 64 \u4f4d\u6570\u636e\u53eb\u505a doubleword\u3002</p> <p>32 \u4e2a\u5bc4\u5b58\u5668\u5206\u522b\u53eb\u505a x0~x31\uff0c\u6709\u7279\u6b8a\u542b\u4e49\u3002 \u4e3a\u4ec0\u4e48\u662f 32 \u4e2a\uff1fSmaller is fast\uff0c\u901a\u8fc7 benchmark \u5bf9\u4e0d\u540c\u6570\u91cf\u6d4b\u8bd5</p> Name Register name Usage Preserved On call? x0 0 The constant value 0\uff08\u53ea\u5b58\u653e 0\uff09 n.a. x1(ra) 1 Return address(link register)\uff08\u51fd\u6570\u8fd4\u56de\u7684\u5730\u5740\uff09 yes x2(sp) 2 Stack pointer\uff08\u5806\u6808\u6307\u9488\uff09 yes x3(gp) 3 Global pointer yes x4(tp) 4 Thread pointer yes x5-x7 5-7 Temporaries \uff08\u4e34\u65f6\u5bc4\u5b58\u5668\uff09 no x8-x9 8-9 Saved \uff08saved \u5bc4\u5b58\u5668\uff09 yes x10-x17 10-17 Arguments/results \uff08\u51fd\u6570\u4f20\u53c2\uff09 no x18-x27 18-27 Saved yes x28-x31 28-31 Temporaries no"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_5","title":"\u5185\u5b58\u64cd\u4f5c\u6570","text":"<p>\u4e24\u7c7b\u6307\u4ee4\u5c06\u6570\u636e\u4ece memory \u62ff\u5230\u5bc4\u5b58\u5668\uff1a<code>load</code> \u548c <code>store</code>\u3002load \u4ece memory \u5230 register\uff0cstore \u4ece register \u5230 memory\u3002 \u56e0\u6b64 RISC-V \u88ab\u79f0\u4e3a load-store \u67b6\u6784\u3002</p> <p>Memory \u4ee5 byte \u4e3a\u5355\u4f4d\u8fdb\u884c\u7d22\u5f15\uff01 \u76f8\u90bb\u6307\u4ee4\u52a0\u56db\uff1a\u6307\u4ee4\u662f 32 \u4f4d\uff0c\u800c\u5185\u5b58\u4e2d\u4ee5 byte\uff088 \u4f4d\uff09\u4e3a\u6700\u5c0f\u5355\u4f4d\uff0c\u6bcf\u4e2a\u6307\u4ee4\u662f 4 \u4e2a byte\u3002 word \u7684\u5730\u5740\u4ece 4\u30018\u2026\u2026 \u5f00\u59cb</p> <p>align\uff1a\u6bcf\u4e2a word \u7684\u7b2c 0 \u4e2a byte \u653e\u5728\u7b2c 0 \u4e2a\u8fd8\u662f\u7b2c 3 \u4e2a byte\uff0c\u51b3\u5b9a\u662f little endian\uff08\u5c0f\u7aef\u5e8f\uff09\u8fd8\u662f big endian\uff08\u5927\u7aef\u5e8f\uff09 RISC-V \u4e2d\u91c7\u7528\u5c0f\u7aef\u5e8f\u3002</p> <ul> <li>\u5c0f\u7aef\u5e8f\uff1a\u4f4e\u5730\u5740\u653e\u5728\u4f4e\u4f4d</li> <li>\u5927\u7aef\u5e8f\uff1a\u4f4e\u5730\u5740\u653e\u5728\u9ad8\u4f4d</li> </ul> <p>\u793a\u4f8b \u5c0f\u7aef\u5e8f\u548c\u5927\u7aef\u5e8f</p> <p>(1) \u5341\u516d\u8fdb\u5236\u6570 0x\uff08\u9ad8\uff0912 34 56 78\uff08\u4f4e\uff09\uff0c\u5185\u5b58\u4e2d\u4ece\u5de6\u5230\u53f3\u4e3a\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\u3002</p> <ul> <li>\u5927\u7aef\u5e8f\uff1a\uff08\u4f4e\uff0912 34 56 78\uff08\u9ad8\uff09</li> <li>\u5c0f\u7aef\u5e8f\uff1a\uff08\u4f4e\uff0978 56 34 12\uff08\u9ad8\uff09</li> </ul> <p>(2) \u8ba1\u7b97\u793a\u4f8b</p> <ul> <li>big end, Byte1: 01; Byte2: 02 -&gt; 0x0201, 513</li> <li>little end, Byte1: 01; Byte2: 02 -&gt; 0x0102, 258</li> </ul> <p>RISC-V does not require word to be aligned\uff0c\u53ef\u4ee5\u653e\u5728\u8fb9\u754c\u4e0a\uff08\u4f46\u662f\u4e0d\u597d\u7684\u65b9\u5f0f\uff0c\u907f\u514d\uff09 e.g. \u5185\u5b58\u5bf9\u9f50\uff0c\u4e00\u6b21\u53ea\u80fd\u8bfb\u51fa 4 \u5b57\u8282\u5185\u5b58\u4e2d\u7684\u4e00\u884c\uff0c\u6709\u4e9b\u5e03\u5c40\u7684 double \u4e0d\u80fd\u4e00\u6b21\u6027\u8bfb\u51fa\uff08\u4e0d align \u7684\u7ed3\u679c\uff09</p> <p>\u793a\u4f8b</p> <p>C Code\uff1a<code>A[12]=h+A[8]</code>, h in x21, A \u7684\u57fa\u5740\uff08base address\uff09\u653e\u5728 x22\u3002</p> <p>\u4ece A[0] \u5230 A[8] \u9700\u8981 64 \u4e2a\u5b57\u8282\u7684\u504f\u79fb\u91cf\u3002\u56e0\u4e3a\u6bcf\u4e2a doubleword \u4e3a 8 \u5b57\u8282\uff0c\u7d22\u5f15\u4e3a 8\uff0c\u603b\u5171 8*8=64 \u5b57\u8282\u3002 \u5b57\u8282\u7684\u504f\u79fb\u7528 <code>\u504f\u79fb\u91cf(\u57fa\u5740)</code> \u8868\u793a\u3002</p> <p><code>ld</code>\u8868\u793a load doubleword\uff0c<code>lw</code>\u8868\u793a load word, <code>lh</code>\u8868\u793a load halfword. <code>s</code>\u5f00\u5934\u8868\u793a store\u3002</p> <p>RISC-V\uff1a</p> GAS<pre><code>ld x9, 64(x22)  # x9 &lt;- x22+64\nadd x9, x21, x9\nsd x9, 96(x22)  # x9 -&gt; x22+96\n</code></pre> <p>Register vs Memory\uff1a</p> <p>\u5bc4\u5b58\u5668\u76f4\u63a5\u96c6\u6210\u5728 CPU \u5185\u90e8\uff0c\u7531\u786c\u4ef6\u7535\u8def\u76f4\u63a5\u63a7\u5236\uff0c\u8bbf\u95ee\u51e0\u4e4e\u65e0\u5ef6\u8fdf\u3002\u800c\u5185\u5b58\uff08RAM\uff09\u5728 CPU \u5916\u90e8\uff0c\u901a\u8fc7\u603b\u7ebf\u901a\u4fe1\uff0c\u6bcf\u6b21\u8bfb\u5199\u90fd\u9700\u8981\u51e0\u5341\u5230\u4e0a\u767e\u4e2a CPU \u65f6\u949f\u5468\u671f\u3002\u51cf\u5c11\u5185\u5b58\u7684\u8bbf\u95ee\u80fd\u63d0\u5347\u6027\u80fd\u3002 \u56e0\u6b64\u5c3d\u91cf\u5c11\u4f7f\u7528 memory\u3002\u5bf9 memory \u4e2d\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5fc5\u987b load \u548c store\u3002 \u7f16\u8bd1\u5668\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u653e\u56de\u53bb\uff0c\u7528\u5f97\u591a\u7684\u653e\u5728\u5bc4\u5b58\u5668\uff0c\u7528\u5f97\u5c11\u7684\u624d\u653e\u56de\u5185\u5b58\u3002</p> <p>\u5bf9\u5e38\u6570\u7684\u4f18\u5316\uff1a</p> <p>Make common case fast\uff0c\u589e\u52a0 constant operand\uff0c\u4e0d\u7528\u5c06\u5e38\u6570\u53d6\u51fa\u3001\u653e\u5230\u5bc4\u5b58\u5668\u3001\u518d\u76f8\u52a0\u3002 \u589e\u52a0 <code>addi</code> \u6307\u4ee4\uff1a\u7acb\u5373\u6570\u76f8\u52a0\u3002\u5982 <code>addi x5, x6, 20</code> \u8868\u793a <code>x5=x6+20</code>\u3002 \u7acb\u5373\u6570\u76f4\u63a5\u5305\u542b\u5728\u6307\u4ee4\u5185\u90e8\uff0c\u5b57\u6bb5\u6709\u9650\uff0c\u4e0d\u80fd\u7279\u522b\u5927</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_6","title":"\u6307\u4ee4\u7684\u8868\u793a","text":"<p>\u6307\u4ee4\u5728\u8ba1\u7b97\u673a\u4e2d\u4e5f\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff08\u673a\u5668\u7801\uff09\uff0c\u957f\u5ea6\u4e3a 32 \u4f4d\u3002</p> <p>x0~x31 \u7684\u5bc4\u5b58\u5668\u7f16\u7801\u6210 0~31 \u7684\u6570\u3002</p> <p>\u628a\u6bcf\u4e2a\u6307\u4ee4\u6309\u7279\u5b9a\u89c4\u5219\u62c6\u6210\u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u8868\u793a\u7279\u5b9a\u542b\u4e49\u30027bit \u8868\u793a\u64cd\u4f5c\uff0c5bit \u8868\u793a\u5bc4\u5b58\u5668\u7f16\u53f7</p> <p>\u793a\u4f8b</p> <p>\u6307\u4ee4\uff1a<code>add x9, x20, x21</code> \u5341\u8fdb\u5236\u8868\u793a\u673a\u5668\u7801\uff1a0 21 20 0 9 51 0 \u6e90\u64cd\u4f5c\u6570 \u6e90\u64cd\u4f5c\u6570 0 \u76ee\u6807\u64cd\u4f5c\u6570 \u6307\u4ee4\u7f16\u53f7</p> <p>\u5341\u516d\u8fdb\u5236\u4e0e\u4e8c\u8fdb\u5236\uff1a</p> \u5341\u516d\u8fdb\u5236 \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 \u4e8c\u8fdb\u5236 0 0000 8 1000 1 0001 9 1001 2 0010 A 1010 3 0011 B 1011 4 0100 C 1100 5 0101 D 1101 6 0110 E 1110 7 0111 F 1111"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_7","title":"\u516d\u79cd\u683c\u5f0f","text":"<p>R-format</p> <p>\u64cd\u4f5c\uff1a\u5bc4\u5b58\u5668-\u5bc4\u5b58\u5668\u8fd0\u7b97\uff08\u7eaf\u5bc4\u5b58\u5668\u64cd\u4f5c\uff09</p> funct7 \u8f85\u52a9 rs2 \u6e90\u5bc4\u5b58\u5668 2 rs1 \u6e90\u5bc4\u5b58\u5668 1 funct3 \u8f85\u52a9 rd \u76ee\u6807\u5bc4\u5b58\u5668 opcode \u64cd\u4f5c 7 bits 5 bits 5 bits 3 bits 5 bits 7 bits <p>\u901a\u8fc7 funct \u53ef\u4ee5\u533a\u5206 lw, ld, lh \u7b49\u3002</p> <ul> <li><code>opcode</code>\uff1a\u51b3\u5b9a\u6307\u4ee4\u7684\u5927\u7c7b\uff08R/I/S/B/U/J\uff09\u3002</li> <li><code>funct3</code>\uff1a\u5728\u540c\u4e00\u7c7b\u4e2d\u8fdb\u4e00\u6b65\u533a\u5206\u5b50\u64cd\u4f5c\uff08\u5982\u52a0\u3001\u4e0e\u3001\u6216\u3001\u79fb\u4f4d\uff09\u3002</li> <li><code>funct7</code>\uff1a\u5728\u5b50\u64cd\u4f5c\u4e2d\u518d\u533a\u5206\u7279\u6b8a\u60c5\u51b5\uff08\u5982\u52a0/\u51cf\u3001\u903b\u8f91\u53f3\u79fb/\u7b97\u672f\u53f3\u79fb\uff09\u3002</li> </ul> <p>I-format</p> <p>\u64cd\u4f5c\uff1a\u5bc4\u5b58\u5668-\u7acb\u5373\u6570\u8fd0\u7b97\u3001\u52a0\u8f7d\uff08load\uff09\u3001\u8df3\u8f6c\u5230\u5bc4\u5b58\u5668</p> immediate \u7acb\u5373\u6570 rs1 \u6e90\u5bc4\u5b58\u5668 funct3 \u8f85\u52a9 rd \u76ee\u6807\u5bc4\u5b58\u5668 opcode \u64cd\u4f5c\u7801 12 bits 5 bits 3 bits 5 bits 7 bits <p>immediate \u8868\u793a\u7acb\u5373\u6570\u6216\u504f\u79fb\u91cf\uff0c\u7528 12 \u4f4d\u8868\u793a\uff0c\u6240\u4ee5\u8303\u56f4\u662f \\(\\pm 2^{11}\\)\u3002</p> <p>S-format</p> <p>\u64cd\u4f5c\uff1a\u5b58\u50a8\u6307\u4ee4\uff08Store\uff09</p> imm[11:5]\u7acb\u5373\u6570\u7684\u9ad8 7 \u4f4d rs2 \u6e90\u5bc4\u5b58\u5668 2 rs1 \u5b58\u50a8\u5bc4\u5b58\u5668 1 funct3 \u8f85\u52a9 imm[4:0]\u7acb\u5373\u6570\u7684\u4f4e 5 \u4f4d opcode \u64cd\u4f5c\u7801 7 bits 5 bits 5 bits 3 bits 5 bits 7 bits <p>S \u578b\u6307\u4ee4\u6ca1\u6709\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u56e0\u4e3a store \u662f\u5c06\u5bc4\u5b58\u5668\u7684\u6570\u636e\u5b58\u5230\u57fa\u5740+\u504f\u79fb\u91cf\u7684\u5730\u5740\uff0c\u4e0d\u662f\u5b58\u5230\u5bc4\u5b58\u5668\u3002</p> <p>imm[11:5] \u548c imm[4:0] \u5408\u5e76\u540e\u5f97\u5230\u7acb\u5373\u6570 imm[11:0]\uff0c\u5b58\u50a8\u5730\u5740\u504f\u79fb\u91cf\uff08\u6709\u7b26\u53f7\u6570\uff09\u3002</p> <p>SB-format</p> <p>\u64cd\u4f5c\uff1a\u6761\u4ef6\u5206\u652f\u6307\u4ee4\uff08\u5982 <code>beq</code>, <code>bne</code>, <code>blt</code> \u7b49\uff09\u3002</p> imm[12 10:5]\uff08\u7b26\u53f7\u4f4d + \u9ad8 6 \u4f4d\uff09 rs2\uff08\u6e90\u5bc4\u5b58\u5668 2\uff09 rs1\uff08\u6e90\u5bc4\u5b58\u5668 1\uff09 funct3\uff08\u64cd\u4f5c\u7c7b\u578b\uff09 imm[4:1 11]\uff08\u4f4e 4 \u4f4d + \u7b2c 11 \u4f4d\uff09 opcode\uff08\u64cd\u4f5c\u7801\uff09 7 bits 5 bits 5 bits 3 bits 5 bits 7 bits <p>\u7acb\u5373\u6570\u62fc\u63a5\u65b9\u5f0f\uff0812 \u4f4d\u6709\u7b26\u53f7\u504f\u79fb\uff0c\u6309 2 \u5b57\u8282\u5bf9\u9f50\uff0c\u5b9e\u9645\u8303\u56f4 \u00b14KB\uff09\uff1a</p> Text Only<pre><code>imm[12] | imm[10:5] | imm[4:1] | imm[11]\n</code></pre> <p>\u6700\u7ec8\u5f62\u6210\uff1a<code>imm[12:1]</code>\uff0c\u6700\u4f4e\u4f4d <code>imm[0]</code> \u9690\u542b\u4e3a 0\uff08\u56e0\u4e3a\u6307\u4ee4\u5730\u5740\u603b\u662f 2 \u5b57\u8282\u5bf9\u9f50\uff09\u3002 \u8df3\u8f6c\u76ee\u6807\u5730\u5740 = PC + sign_extend(imm[12:0])</p> <p>UJ-format</p> <p>\u64cd\u4f5c\uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff08\u5982 <code>jal</code>\uff09\u3002</p> imm[20 / 10:1 / 11 / 19:12]\uff0820 \u4f4d\u7acb\u5373\u6570\u91cd\u6392\uff09 rd\uff08\u76ee\u6807\u5bc4\u5b58\u5668\uff09 opcode\uff08\u64cd\u4f5c\u7801\uff09 20 bits 5 bits 7 bits <p>\u7acb\u5373\u6570\u62fc\u63a5\u65b9\u5f0f\uff0820 \u4f4d\u6709\u7b26\u53f7\u504f\u79fb\uff0c\u6309 2 \u5b57\u8282\u5bf9\u9f50\uff0c\u5b9e\u9645\u8303\u56f4 \u00b11MB\uff09\uff1a</p> Text Only<pre><code>imm[20] | imm[10:1] | imm[11] | imm[19:12]\n</code></pre> <p>\u6700\u7ec8\u5f62\u6210\uff1a<code>imm[20:1]</code>\uff0c<code>imm[0]</code> \u9690\u542b\u4e3a 0\u3002 \u8df3\u8f6c\u76ee\u6807\u5730\u5740 = PC + sign_extend(imm[20:0]) \u8df3\u8f6c\u540e\u7684\u8fd4\u56de\u5730\u5740\uff08PC + 4\uff09\u5199\u5165 <code>rd</code>\uff08\u901a\u5e38\u4e3a <code>x1</code>\uff0c\u5373 <code>ra</code>\uff09</p> <p>U-format</p> <p>\u64cd\u4f5c\uff1a\u52a0\u8f7d\u9ad8\u4f4d\u7acb\u5373\u6570\uff08\u5982 <code>lui</code>\uff09\u6216\u4e0e <code>jalr</code> \u914d\u5408\u6784\u6210\u5b8c\u6574\u5730\u5740\uff08\u5982 <code>auipc</code>\uff09\uff08Upper Immediate Format\uff09\u3002</p> imm[31:12]\uff08\u9ad8 20 \u4f4d\u7acb\u5373\u6570\uff09 rd\uff08\u76ee\u6807\u5bc4\u5b58\u5668\uff09 opcode\uff08\u64cd\u4f5c\u7801\uff09 20 bits 5 bits 7 bits <ul> <li>\u7acb\u5373\u6570\u89e3\u91ca\uff1a</li> <li>\u76f4\u63a5\u4f5c\u4e3a\u9ad8 20 \u4f4d\uff0c\u4f4e 12 \u4f4d\u8865 0\u3002</li> <li>\u5373\uff1a<code>imm[31:12] &lt;&lt; 12</code>\uff0c\u5f62\u6210 32 \u4f4d\u6709\u7b26\u53f7\u7acb\u5373\u6570\uff08\u4f46\u4ec5\u9ad8 20 \u4f4d\u53ef\u8bbe\uff09\u3002</li> <li>\u5178\u578b\u6307\u4ee4\uff1a</li> <li><code>lui rd, imm</code>\uff1a\u5c06 <code>imm[31:12]</code> \u52a0\u8f7d\u5230 <code>rd</code> \u7684\u9ad8 20 \u4f4d\uff0c\u4f4e 12 \u4f4d\u4e3a 0\u3002</li> <li><code>auipc rd, imm</code>\uff1a\u5c06 <code>PC + (imm[31:12] &lt;&lt; 12)</code> \u5199\u5165 <code>rd</code>\uff0c\u7528\u4e8e PC \u76f8\u5bf9\u5bfb\u5740\u3002</li> </ul> <p>U \u683c\u5f0f\u4e0d\u6d89\u53ca rs1/rs2\uff0c\u4ec5\u63d0\u4f9b\u9ad8\u4f4d\u7acb\u5373\u6570\u3002</p> <p>RISC-V \u6307\u4ee4\u683c\u5f0f\u6c47\u603b</p> <p>RISC-V \u6307\u4ee4\u683c\u5f0f\uff08RV32I\uff09</p> \u7c7b\u578b \u540d\u79f0 31\u201325 24\u201320 19\u201315 14\u201312 11\u20137 6\u20130 R Register funct7 rs2 rs1 funct3 rd opcode I Immediate imm[11:0] (12 bits) \u2014 rs1 funct3 rd opcode S Store imm[11:5] rs2 rs1 funct3 imm[4:0] opcode B Branch imm[12|10:5] rs2 rs1 funct3 imm[4:1|11] opcode U Upper Immediate imm[31:12] (20 bits) \u2014 \u2014 \u2014 rd opcode J Jump imm[20|10:1|11|19:12] \u2014 \u2014 \u2014 rd opcode \u8bf4\u660e <p>\u5b57\u6bb5\u8bf4\u660e</p> \u5b57\u6bb5 \u542b\u4e49 <code>opcode</code> \u64cd\u4f5c\u7801\uff087 \u4f4d\uff09\uff0c\u51b3\u5b9a\u6307\u4ee4\u57fa\u672c\u7c7b\u578b <code>rd</code> \u76ee\u6807\u5bc4\u5b58\u5668\uff085 \u4f4d\uff0c<code>x0</code>\u2013<code>x31</code>\uff09 <code>rs1</code>, <code>rs2</code> \u6e90\u5bc4\u5b58\u5668 1 \u548c 2\uff08\u5404 5 \u4f4d\uff09 <code>funct3</code> \u529f\u80fd\u7801\uff083 \u4f4d\uff09\uff0c\u7528\u4e8e\u533a\u5206\u540c\u7c7b\u6307\u4ee4 <code>funct7</code> \u6269\u5c55\u529f\u80fd\u7801\uff087 \u4f4d\uff09\uff0c\u4e3b\u8981\u7528\u4e8e R \u578b\u6307\u4ee4 <code>imm[...]</code> \u7acb\u5373\u6570\u5b57\u6bb5\uff0c\u4e0d\u540c\u683c\u5f0f\u62fc\u63a5\u65b9\u5f0f\u4e0d\u540c <p>\u7acb\u5373\u6570\uff08Immediate\uff09\u62fc\u63a5\u89c4\u5219</p> \u7c7b\u578b \u7acb\u5373\u6570\u62fc\u63a5\u65b9\u5f0f\uff08\u9ad8\u4f4d \u2192 \u4f4e\u4f4d\uff09 \u6700\u7ec8\u5f62\u5f0f I <code>[11:0]</code> <code>sext(imm[11:0])</code> S <code>[11:5] + [4:0]</code> \u2192 <code>[11:0]</code> <code>sext(imm[11:0])</code> B <code>[12] + [10:5] + [4:1] + [11]</code> \u2192 <code>[12:1] + 0</code> <code>sext(imm[12:1] &lt;&lt; 1)</code> U <code>[31:12]</code> <code>imm[31:12] &lt;&lt; 12</code> J <code>[20] + [10:1] + [11] + [19:12]</code> \u2192 <code>[20:1] + 0</code> <code>sext(imm[20:1] &lt;&lt; 1)</code>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_8","title":"\u903b\u8f91\u64cd\u4f5c","text":"<p>\u5de6\u79fb slli\uff0c\u53f3\u79fb srli\uff0c\u4e0e and\uff0candi\uff0c\u6216 or\uff0cori\uff0c\u5f02\u6216 xor\uff0cxori \u903b\u8f91\u79fb\u4f4d\u548c\u7b97\u672f\u79fb\u4f4d\uff1a\u903b\u8f91\u79fb\u4f4d\u65f6\u7a7a\u4f4d\u8865\u96f6\uff0c\u7b97\u672f\u53f3\u79fb\u65f6\u7a7a\u4f4d\u8865\u7b26\u53f7\u4f4d \u53ea\u6709\u7b97\u672f\u903b\u8f91\u53f3\u79fb\uff0c\u6ca1\u6709\u7b97\u672f\u903b\u8f91\u5de6\u79fb</p> <p>\u4e3a\u4ec0\u4e48\u5de6\u79fb\u53f3\u79fb\u90fd\u662f\u7acb\u5373\u6570\uff1f64 \u4f4d\u7acb\u5373\u6570\u4e5f\u80fd\u5168\u90e8\u79fb\u5b8c\uff0c\u7acb\u5373\u6570\u80fd\u8986\u76d6</p> <p>\u5de6\u53f3\u79fb\u7684\u683c\u5f0f\uff08I \u578b\uff0c\u5c06 12 \u4f4d\u7684\u7acb\u5373\u6570\u62c6\u6210\u4e24\u90e8\u5206\uff09\uff1a</p> funct6 immed rs1 funct3 rd opcode 6 bits 6 bits 5 bits 3 bits 5 bits 7 bits <ul> <li>\u5de6\u79fb\uff1a<code>sll x5, x6, x7</code>\u8868\u793a<code>x5=x6&lt;&lt;x7</code></li> <li>\u5de6\u79fb\u7acb\u5373\u6570\uff1a<code>slli x5, x6, 3</code>\u8868\u793a<code>x5=x6&lt;&lt;3</code></li> <li>\u53f3\u79fb\uff1a<code>srl x5, x6, x7</code>\u8868\u793a<code>x5=x6&gt;&gt;x7</code></li> <li>\u6309\u4f4d\u4e0e\uff1a<code>and x9, x10, x11</code>\u8868\u793a<code>x9 = x10 &amp; x11</code></li> <li>\u6309\u4f4d\u6216\uff1a<code>or x9, x10, x11</code>\u8868\u793a<code>x9 = x10 | x11</code></li> <li>\u6309\u4f4d\u5f02\u6216\uff1a<code>xor x9, x10, x11</code>\u8868\u793a<code>x9 = x10 ~ x11</code></li> <li>\u53d6\u53cd\uff1a\u901a\u8fc7\u5f02\u6216\u5b9e\u73b0\uff0c<code>xori  x9, x10, -1</code></li> </ul> <p>RISC-V \u4e2d\u6ca1\u6709 nor \u8fd0\u7b97\uff0cx86 \u4e2d\u6709\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_9","title":"\u51b3\u7b56\u6307\u4ee4","text":""},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_10","title":"\u6761\u4ef6\u8df3\u8f6c","text":"<p>\u6bd4\u8f83\u76f8\u7b49\uff1a</p> <ul> <li>\u76f8\u7b49\u8df3\u8f6c\uff1a<code>beq</code>\uff08branch if equal\uff09\uff0c<code>beq reg1, reg2, L1</code>\u8868\u793a\u5982\u679c reg1==reg2 \u5219\u8df3\u8f6c\u5230 L1</li> <li>\u4e0d\u76f8\u7b49\u8df3\u8f6c\uff1a<code>bne</code>\uff08branch if not equal\uff09\uff0c<code>bne reg1, reg2, L1</code>\u8868\u793a\u5982\u679c reg1\uff01=reg2 \u5219\u8df3\u8f6c\u5230 L1</li> </ul> <p>b \u8868\u793a branch</p> <p>\u793a\u4f8b if \u8df3\u8f6c</p> <p>C code: C<pre><code>if (i == j) goto L1;\nf = g + h;\nL1: f = f - i;\n</code></pre></p> <p>RISC-V assembly code: GAS<pre><code>    beq x21, x22, L1\n    add x19, x20, x21\nL1: sub x19, x19, x22\n</code></pre></p> <p>\u7531\u4e8e\u6307\u4ee4\u987a\u5e8f\u6267\u884c\uff0c<code>sub x19, x19, x22</code>\u59cb\u7ec8\u4f1a\u88ab\u6267\u884c \u53ef\u7528<code>beq x0, x0, EXIT</code>\u7ed3\u675f</p> <p>\u793a\u4f8b if-else</p> <p>C code: C<pre><code>if (i == j)\n    f = g + h;\nelse\n    f = g - h;\n</code></pre></p> <p>RISC-V code: GAS<pre><code>      bne x22, x23, Else    # \u6d4b\u8bd5\u6761\u4ef6\u4e00\u822c\u7528bne\uff08\u6709\u5229\u4e8e\u5206\u652f\u9884\u6d4b\uff09\uff0c\u6548\u7387\u66f4\u9ad8\n      add x19, x20, x21\n      beq x0, x0, Exit      # goto Exit\nElse: sub x19, x20, x21\nExit: ...\n</code></pre></p> <p>\u5faa\u73af\u8bed\u53e5\uff1a</p> <p>\u793a\u4f8b loop</p> GAS<pre><code>Loop: ...\n      bne x22, x21, Loop\n</code></pre> <p>\u793a\u4f8b while \u5faa\u73af</p> <p>C code: C<pre><code>while (a[i] == k)\n    i += 1;\n</code></pre></p> <p>RISCV code:\uff08\u7528\u53d8\u91cf\u540d\u4ee3\u66ff\u5bc4\u5b58\u5668\uff09 GAS<pre><code>Loop:\n    slli  addr, offset, 3\n    add   addr, addr, base\n    ld    saved1, 0(addr)   # saved1=a[i]\n    bne   saved1, k, Exit\n    addi  i, i, 1\n    beq   x0, x0, Loop\nExit:\n    ...\n</code></pre></p> <p>\u6bd4\u8f83\u8fd0\u7b97\uff1a</p> <p>set on less than (slt):\u5982\u679c\u5c0f\u4e8e\u5219\u7f6e 1 <code>slt x5, x19, x20</code>\u8868\u793a\u5982\u679c x19 &lt; x20 \u5219 x5 = 1</p> <p>\u793a\u4f8b slt</p> <p>C code: C<pre><code>if (a &lt; b) goto Less;\n</code></pre></p> <p>RISC-V code: GAS<pre><code>slt  x5, x8, x9\nbne  x5, zero, Less\n</code></pre></p> <ul> <li>\u5c0f\u4e8e\u5219\u8df3\u8f6c\uff1a<code>blt rs1, rs2, L1</code>\u5982\u679c rs1 &lt; rs2\uff0c\u5219\u8df3\u8f6c\u5230 L1</li> <li>\u5927\u4e8e\u7b49\u4e8e\u5219\u8df3\u8f6c\uff1a<code>bge rs1, rs2, L1</code>\u5982\u679c rs1 &gt;= rs2\uff0c\u5219\u8df3\u8f6c\u5230 L1</li> </ul> <p>\u533a\u5206\u6709\u7b26\u53f7\u6570\u548c\u65e0\u7b26\u53f7\u6570\uff0cblt \u548c bge \u8868\u793a\u6709\u7b26\u53f7\uff0c\u65e0\u7b26\u53f7\u6570\u540e\u52a0 u \u6ca1\u6709\u201caddu\u201d\u6307\u4ee4\uff0c\u6240\u6709\u52a0\u6cd5\u90fd\u6309\u6709\u7b26\u53f7\u6570\u5904\u7406</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_11","title":"\u65e0\u6761\u4ef6\u8df3\u8f6c","text":"<p>jump register\uff1aswitch-case \u8bed\u53e5</p> <p><code>jalr x1, 100(x6)</code>\u628a\u5f53\u524d\u5730\u5740\u653e\u5230 x1\uff08x1=PC+4, \u4e4b\u540e\u80fd\u56de\u6765\uff09\uff0c\u8df3\u5230 x6+100\uff08\u4e0d\u9700\u8981\u505a\u5224\u65ad\uff09</p> <p>switch(k)\u65f6\uff0c\u4e0d\u540c k \u7684\u503c\u7684\u5730\u65b9\u5b58\u50a8\u6307\u4ee4\u7684\u5730\u5740\uff0c\u6307\u5411\u5404\u4e2a\u6307\u4ee4 x6 \u8868\u793a\u5f53\u524d\u8df3\u8f6c\u8868\u7684\u5730\u5740\uff0cx6 \u548c k \u5de6\u79fb 3\uff08\u5b57\u7684\u5730\u5740\uff09\u540e\u7684\u503c\u76f8\u52a0\u5f97\u5230 x7\uff08\u8868\u793a\u5f53\u524d\u5730\u5740\uff09\uff0cload \u5230 x7\uff08\u4e4b\u524d\u7684 x7 \u91cc\u5b58\u7684\u662f\u53e6\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e00\u6b65\u4ece x7 \u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u52a0\u8f7d\u4e00\u4e2a 64 \u4f4d\u503c\uff0c\u5b58\u5230 x7\uff0c\u8fd9\u6837 x7 \u8868\u793a\u771f\u6b63\u7684\u76ee\u6807\u4ee3\u7801\u7684\u5730\u5740\uff09\uff0cjalr \u65f6\u4ee5 x7 \u4e2d\u5730\u5740\u8df3\u8f6c</p> <p>\u793a\u4f8b jalr</p> <p>C code: C<pre><code>switch (k) {\n    case 0: f = i + j; break;\n    case 1: f = g + h; break;\n    case 2: f = g - h; break;\n    case 3: f = i - j; break;\n}\n</code></pre></p> <p>RISC-V: GAS<pre><code>blt   x25, x0, Exit     # k&lt;0, \u8d85\u51fa\u8303\u56f4\nbge   x25, x5, Exit     # k&gt;=4, \u8d85\u51fa\u8303\u56f4\nslli  x7, x25, 3        # \u504f\u79fb\u91cf\u5b58\u5230x7\nadd   x7, x7, x6        # \u5f53\u524d\u5730\u5740\nld    x7, 0(x7)         # \u52a0\u8f7d\u76ee\u6807\u5730\u5740\njalr  x1, 0(x7)         # \u5f53\u524d\u5730\u5740\u5b58\u653e\u5230x1\uff0c\u6309x7\u8df3\u8f6c\n</code></pre></p> <p>\u5177\u4f53\u5206\u652f\u4e2d\u7528 <code>jalr x0, 0(x1)</code> \u8df3\u56de\u6765\uff0c\u56e0\u4e3a\u4e0a\u4e00\u6b65 jalr \u4e2d x1 \u5df2\u7ecf\u5b58\u50a8\u4e0b\u4e00\u6b65\u6307\u4ee4\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_12","title":"\u6307\u4ee4\u7684\u6267\u884c","text":""},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_13","title":"\u7a0b\u5e8f\u7684\u8c03\u7528","text":"<p>Bacis Block\uff08\u57fa\u672c\u5757\uff09\uff1a\u4e0d\u5305\u542b\u4efb\u4f55\u8df3\u8f6c\uff0c\u4e00\u5b9a\u662f\u987a\u5e8f\u6267\u884c \u7f16\u8bd1\u5668\u4f1a\u8bc6\u522b\u57fa\u672c\u5757\uff0c\u5bf9\u5176\u505a\u52a0\u901f \u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u79f0\u4e3a leaf procedure</p> <p>Procedure/Function\uff1a\u7a0b\u5e8f\u7684\u8c03\u7528 \u8c03\u7528\u5b58\u50a8\u7684\u5b50\u8fdb\u7a0b\uff0c\u5229\u7528\u4f20\u5165\u7684\u53c2\u6570\u5b9e\u73b0\u7279\u5b9a\u7684\u529f\u80fd \u6b65\u9aa4\uff1a</p> <ol> <li>\u5c06\u53c2\u6570\u653e\u5728\u51fd\u6570\u80fd\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e\uff08\u53ef\u80fd\u662f\u5b58\u50a8\u5668\u6216\u5bc4\u5b58\u5668\uff09</li> <li>\u901a\u8fc7 jump \u6307\u4ee4\u5c06\u63a7\u5236\u6743\u4f20\u7ed9 procedure</li> <li>\u53d6\u51fa\u9700\u8981\u7684\u5b58\u50a8\u8d44\u6e90</li> <li>\u6267\u884c\u4efb\u52a1</li> <li>\u5c06\u8fd4\u56de\u7ed3\u679c\u653e\u5728\u8c03\u7528\u8005\uff08\u4e3b\u7a0b\u5e8f\uff09\u80fd\u8bbf\u95ee\u5230\u7684\u4f4d\u7f6e</li> <li>\u5c06\u63a7\u5236\u6743\u6362\u7ed9\u4e3b\u7a0b\u5e8f</li> </ol> <p>\u8c03\u7528\u8005\u79f0\u4e3a caller\uff0c\u7528 jal\uff08jump and link\uff09\u8c03\u7528 <code>jal x1, ProcedureAddress</code> \u5c06 ProcedureAddress+4 \u653e\u5728 x1\uff08\u56e0\u4e3a ProcedureAddress \u662f\u8981\u8df3\u8f6c\u5230\u7684\u6307\u4ee4\uff0c\u56de\u6765\u65f6\u56de\u5230\u4e0b\u4e00\u6761\uff0c\u5373 +4 \u7684\u4f4d\u7f6e\uff09\uff0c\u7136\u540e\u8df3\u8f6c\u5230 ProcedureAddress\u3002 ProcedureAddress \u53ef\u4ee5\u653e\u504f\u79fb\u503c\u6216 label\u3002</p> <p>\u88ab\u8c03\u7528\u8005\u79f0\u4e3a callee\uff0c\u7528 jalr\uff08jump and link register\uff09\u8fd4\u56de <code>jalr x0, 0(x1)</code> \u8df3\u8f6c\u5230 x1 \u7684\u4f4d\u7f6e\u3002 \u4e3a\u4ec0\u4e48\u7528 x0\uff1f\u6b64\u65f6\u6267\u884c\u5230\u6700\u540e\u4e00\u6761\uff0c\u4f46\u5982\u679c\u8981\u8df3\u8f6c\u8fdb\u5165\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u4ece\u5934\u8fdb\u5165\uff0c\u6240\u4ee5\u5f53\u524d\u4f4d\u7f6e\u80af\u5b9a\u4e0d\u9700\u8981\u5b58\u50a8\u3002x0 \u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u7528 x0\u3002</p> <p>jalr \u548c jal \u80fd\u4e0d\u80fd\u4e92\u6362\u4f7f\u7528\uff1f</p> <p>caller \u80fd\u4e0d\u80fd\u7528 jalr\uff1f\u53ef\u4ee5\uff0c\u53ea\u8981\u628a\u8981\u8df3\u8f6c\u7684\u5730\u5740\u6362\u4e3a\u7edd\u5bf9\u5bfb\u5740\u3002 callee \u80fd\u4e0d\u80fd\u7528 jal\uff1f\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8c03\u7528\u65f6\u8df3\u8f6c\u5730\u5740\u56fa\u5b9a\uff0c\u4f46\u8fd4\u56de\u65f6\u5730\u5740\u4e0d\u56fa\u5b9a\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_14","title":"\u5806\u6808","text":"<p>a0~a7 (\u5bc4\u5b58\u5668 x10~x17) \u662f 8 \u4e2a\u7528\u4e8e\u5b58\u50a8\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u5bc4\u5b58\u5668\uff1b ra (\u5bc4\u5b58\u5668 x1) \u7528\u4e8e\u5b58\u50a8\u8df3\u8f6c\u540e\u8fd4\u56de\u7684\u5730\u5740</p> <p>\u538b\u6808\u65f6\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u538b\uff0c\u6808\u9876\u5728\u9ad8\u5730\u5740\uff0c\u538b\u6808\u540e\u6808\u9876\u6307\u9488\uff08sp\uff09\u4e0b\u79fb \u538b\u6808\uff1a\u5148\u4e0b\u79fb\u6808\u9876\u3001\u518d store\uff0c\u4ee5 8 \u4e3a\u5355\u4f4d\uff0c\u5982\u679c\u4e00\u6b21\u538b\u591a\u4e2a\u5219\u79fb\u52a8 8 \u7684\u500d\u6570 \u51fa\u6808\uff1a\u5148 load\u3001\u518d\u4e0a\u79fb\u6808\u9876\uff0c\u4ee5 8 \u4e3a\u5355\u4f4d\uff0c\u5982\u679c\u4e00\u6b21\u51fa\u591a\u4e2a\u5219\u79fb\u52a8 8 \u7684\u500d\u6570 pop \u7684\u6700\u540e\u4e00\u6b65\u4e00\u5b9a\u662f\u8df3\u8f6c\u56de x1</p> <p>\u793a\u4f8b push \u548c pop</p> <p>Push\uff1a sp = sp - 8</p> GAS<pre><code>addi sp, sp, -8\nsd   ..., 0(sp)\n</code></pre> <p>\u5b58\u50a8\u591a\u4e2a\u5bc4\u5b58\u5668\uff1a</p> GAS<pre><code>addi  sp, sp, -24\nsd    x5, 16(sp)\nsd    x6, 8(sp)\nsd    x20, 0(sp)\n</code></pre> <p>Pop: sp = sp + 8</p> GAS<pre><code>ld   ..., 0(sp)\naddi sp, sp, 8\n</code></pre> <p>\u5f39\u51fa\u591a\u4e2a\u5bc4\u5b58\u5668\uff1a</p> GAS<pre><code>ld    x20, 0(sp)\nld    x6, 8(sp)\nld    x5, 0(sp)\naddi  sp, sp, 24\n</code></pre> <p>leaf procedure \u4e0d\u7ba1\u5916\u90e8\u7684\u7a0b\u5e8f\uff0c\u53ea\u7ba1\u5185\u90e8\u6539\u53d8\u4e86\u54ea\u4e9b\u5bc4\u5b58\u5668\uff0c\u4fdd\u5b58\u8fd9\u4e9b\u503c\u5e76\u6267\u884c\u540e\u8fd4\u56de\u3002 \u4f46\u90e8\u5206\u5bc4\u5b58\u5668\u6ca1\u6709\u88ab\u8c03\u7528\u8005\u7528\u5230\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u538b\u6808\u548c\u5f39\u6808\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u6709\u5f88\u591a\u989d\u5916\u7684\u4fdd\u5b58\u64cd\u4f5c\u3002 \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u7ea6\u5b9a\u4e24\u7c7b\u5bc4\u5b58\u5668\uff1a t0~t6: 7 temporary registers\uff0c\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u4e0d\u4fdd\u5b58 s1~s11: 12 saved registers\uff0c\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u4f1a\u4fdd\u5b58</p> <p>caller \u5c06 t \u6216 s \u5bc4\u5b58\u5668\u538b\u6808\uff1bcallee \u5c06 ra \u548c a \u5bc4\u5b58\u5668\u538b\u6808\u3002</p> Name Register no. Usage Preserved on call x0(zero) 0 The constant value 0 n.a. x1(ra) 1 Return address(link register) yes x2(sp) 2 Stack pointer yes x3(gp) 3 Global pointer yes x4(tp) 4 Thread pointer yes x5-x7(t0-t2) 5-7 Temporaries no x8(s0/fp) 8 Saved/frame point Yes x9(s1) 9 Saved Yes x10-x17(a0-a7) 10-17 Arguments/results no x18-x27(s2-s11) 18-27 Saved yes x28-x31(t3-t6) 28-31 Temporaries No PC - Program counter Yes <p>\u793a\u4f8b \u5d4c\u5957\u8fc7\u7a0b</p> <p>C Code for n!:</p> C<pre><code>int fact(int n) {\n    if (n &lt; 1)\n        return 1;\n    else\n        return (n * fact(n - 1));\n}\n</code></pre> <p>RISC-V code</p> GAS<pre><code>fact:\n    addi  sp, sp, -16   # \u5206\u914d\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u5360\u7a7a\u95f4\n    sd    ra, 8(sp)     # ra \u4fdd\u5b58\u8fd4\u56de\u5730\u5740\n    sd    a0, 0(sp)     # a0 \u4fdd\u5b58\u53c2\u6570 n\n    addi  t0, a0, -1    # t0=n-1\n    bge   t0, zero, L1  # \u82e5 t0=n-1&gt;= 0\uff0c\u5373 n&gt;=1\uff0c\u8df3\u5230 L1\n    addi  a0, zero, 1   # \u5426\u5219\u8fd4\u56de 1\uff08\u9636\u4e58\u7ec8\u6b62\u6761\u4ef6\uff09\n    addi  sp, sp, 16    # \u56de\u6536\u6808\u7a7a\u95f4\n    jalr  zero, 0(ra)   # \u8fd4\u56de\u8c03\u7528\u8005\n\nL1:\n    addi  a0, a0, -1    # n=n-1\n    jal   ra, fact      # \u8c03\u7528 fact(n-1)\n    add   t1, a0, zero  # t1=fact(n-1)\n    ld    a0, 0(sp)     # \u53d6\u56de\u539f\u6765\u7684 n\n    ld    ra, 8(sp)     # \u53d6\u56de\u8fd4\u56de\u5730\u5740\n    add   sp, sp, 16    # \u56de\u6536\u6808\u5e27\n    mul   a0, a0, t1    # a0=n*fact(n-1)\n    jalr  zero, 0(ra)   # \u8fd4\u56de\n</code></pre> <p>\u4e3a\u4ec0\u4e48 fact \u4e2d ra \u8981\u4fdd\u5b58\uff1f\u56e0\u4e3a\u8fd9\u4e00\u6b21\u7531\u5176\u4ed6\u51fd\u6570\u8c03\u7528 fact\uff0c\u8981\u8fd4\u56de\u8c03\u7528\u8005\u7684\u4f4d\u7f6e\uff1b\u4f46 fact \u4f1a\u9012\u5f52\u8c03\u7528\uff0c\u5185\u90e8 ra \u4f1a\u8986\u76d6\u5916\u90e8\u8c03\u7528\u8005\u7684 ra\u3002\u56e0\u6b64\u5728\u521a\u8fdb\u5165\u51fd\u6570\u65f6\u8981\u4fdd\u5b58\u5916\u90e8\u7684 ra\u3002\u540c\u7406\uff0c\u5916\u90e8\u8c03\u7528\u8005\u548c\u5f53\u524d\u51fd\u6570\u90fd\u4f1a\u6539\u53d8 a0\uff0c\u56e0\u6b64\u4e5f\u8981\u5728\u5f00\u5934\u4fdd\u5b58 a0\u3002 \u4e3a\u4ec0\u4e48\u8981\u533a\u5206\u4fdd\u5b58\u548c\u4e0d\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\uff1f\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002</p> <p>\u7236\u51fd\u6570\u4fdd\u8bc1\u5b50\u51fd\u6570\u80fd\u968f\u4fbf\u4f7f\u7528\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u8fd4\u56de\u7ed9\u7236\u51fd\u6570\u65f6\u53ef\u4ee5\u88ab\u6539\u53d8\uff1b \u5b50\u51fd\u6570\u4fdd\u8bc1\u8fd4\u56de\u7ed9\u7236\u51fd\u6570\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u5b58\u50a8\u8ba1\u7b97\u7684\u503c\u3002</p> <p>\u5f53\u7a0b\u5e8f\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u7cfb\u7edf\u4f1a\u5728\u6808\u4e0a\u4e3a\u8fd9\u4e2a\u51fd\u6570\u5f00\u8f9f\u4e00\u5c0f\u5757\u533a\u57df\uff0c\u4e13\u95e8\u7528\u6765\u4fdd\u5b58\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u4e34\u65f6\u5bc4\u5b58\u5668\u4fdd\u5b58\u533a\u3001\u524d\u4e00\u4e2a\u51fd\u6570\u7684\u5e27\u6307\u9488\u3002 \u8fd9\u6574\u4e00\u5757\u533a\u57df\u5c31\u53eb\u505a\u4e00\u4e2a\u6808\u5e27\uff08stack frame\uff09\uff0c\u4e5f\u79f0\u8c03\u7528\u5e27\uff08call frame\uff09\u3002</p> <ul> <li>sp\uff08\u6808\u6307\u9488\uff09\uff1a\u6307\u5411\u5f53\u524d\u6808\u9876\uff0c\u6bcf\u5f53\u7a0b\u5e8f\u5728\u6808\u4e0a\u5206\u914d\u6216\u91ca\u653e\u5c40\u90e8\u53d8\u91cf\u3001\u4fdd\u5b58\u5bc4\u5b58\u5668\u3001\u538b\u5165\u53c2\u6570\u65f6\uff0csp \u90fd\u4f1a\u76f8\u5e94\u5730\u79fb\u52a8\u3002</li> <li>\u5728\u5927\u591a\u6570\u4f53\u7cfb\u7ed3\u6784\uff08\u5305\u62ec RISC-V\u3001ARM\u3001x86\uff09\u4e2d\uff0c\u6808\u662f\u5411\u4f4e\u5730\u5740\u589e\u957f\u7684\uff1a\u6808\u5411\u4e0b\u957f\uff0c\u6bcf\u538b\u5165\u4e00\u4e2a\u503c\uff0csp \u9012\u51cf\u3002</li> <li>fp\uff08\u5e27\u6307\u9488\uff0c\u57fa\u5740\u6307\u9488\uff09\uff1a\u6307\u5411\u5f53\u524d\u51fd\u6570\u7684\u6808\u5e27\u7684\u56fa\u5b9a\u57fa\u51c6\u4f4d\u7f6e\uff0c\u7528\u4e8e\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u3001\u4fdd\u5b58\u5bc4\u5b58\u5668\u7b49\u3002</li> <li>sp \u5728\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u591a\u6b21\u53d8\u5316\uff08push/pop\uff09\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u4f1a\u989d\u5916\u7528 fp \u8bb0\u5f55\u8be5\u51fd\u6570\u6808\u5e27\u7684\u8d77\u59cb\u53c2\u8003\u70b9\uff0c\u8fd9\u6837\u53d8\u91cf\u8bbf\u95ee\u6709\u56fa\u5b9a\u504f\u79fb\u3002\u5728\u8fdb\u7a0b\u8c03\u7528\u65f6 sp \u5f80\u540e\u79fb\uff0c\u4f46 fp \u4e0d\u53d8\u3002</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap02/#_15","title":"\u5185\u5b58\u5206\u5e03","text":"<ul> <li>Text\uff1a\u7a0b\u5e8f\u4ee3\u7801</li> <li>Static data\uff1a\u5168\u5c40\u53d8\u91cf\u3001\u5e38\u6570\u6570\u7ec4\u3001\u5e38\u6570\u5b57\u7b26\u4e32</li> <li>Dynamic data\uff1a\u5806\uff08heap\uff09</li> <li>Stack\uff1a\u81ea\u52a8\u5206\u914d\u7684\u5185\u5b58</li> </ul> <p>\u5806\u548c\u6808\u7684\u533a\u522b\uff1a</p> \u5bf9\u6bd4\u9879\u76ee \u6808\uff08Stack\uff09 \u5806\uff08Heap\uff09 \u7ba1\u7406\u65b9\u5f0f \u7531\u7f16\u8bd1\u5668 / CPU \u81ea\u52a8\u7ba1\u7406\uff08\u51fd\u6570\u8c03\u7528\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff09 \u7531\u7a0b\u5e8f\u5458\u6216\u8fd0\u884c\u5e93\u624b\u52a8\u7ba1\u7406\uff08<code>malloc/new</code>\uff0c<code>free/delete</code>\uff09 \u5b58\u50a8\u5185\u5bb9 \u51fd\u6570\u8c03\u7528\u4fe1\u606f\uff1a\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u3001\u4fdd\u5b58\u5bc4\u5b58\u5668\u7b49 \u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff08\u5982\u6570\u7ec4\u3001\u5bf9\u8c61\u3001\u94fe\u8868\u8282\u70b9\u7b49\uff09 \u5206\u914d\u65f6\u673a \u7f16\u8bd1\u671f\u786e\u5b9a\u5927\u5c0f\uff0c\u8fd0\u884c\u65f6\u5feb\u901f\u5206\u914d \u8fd0\u884c\u65f6\u52a8\u6001\u51b3\u5b9a\u5927\u5c0f \u5206\u914d\u901f\u5ea6 \u975e\u5e38\u5feb\uff08CPU \u76f4\u63a5\u6539 <code>sp</code>\uff09 \u8f83\u6162\uff08\u9700\u8981\u7cfb\u7edf\u8c03\u7528 / \u7ba1\u7406\u7a7a\u95f2\u5757\uff09 \u751f\u547d\u5468\u671f \u968f\u51fd\u6570\u8c03\u7528\u81ea\u52a8\u521b\u5efa\u3001\u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e \u7a0b\u5e8f\u5458\u63a7\u5236\uff08\u6216\u7531\u5783\u573e\u56de\u6536\u673a\u5236\u63a7\u5236\uff09 \u7a7a\u95f4\u5927\u5c0f \u8f83\u5c0f\uff08\u5982\u51e0 MB\uff09 \u8f83\u5927\uff08\u53ef\u5360\u6574\u4e2a\u5269\u4f59\u5185\u5b58\uff09 \u589e\u957f\u65b9\u5411 \u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740 \u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740 \u5178\u578b\u9519\u8bef \u6808\u6ea2\u51fa\uff08stack overflow\uff09 \u5185\u5b58\u6cc4\u6f0f\uff08memory leak\uff09 <p>\u4ee5\u5185\u5b58\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\u4e3a\u4f8b\uff08\u4ee5 Linux / RISC-V / x86_64 \u4e3a\u4f8b\uff09\uff1a</p> Text Only<pre><code>\u9ad8\u5730\u5740 \u2191\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n|   \u6808 Stack (\u5c40\u90e8\u53d8\u91cf\u3001\u8fd4\u56de\u5730\u5740)    | \u2190 \u5411\u4e0b\u589e\u957f\uff08\u4ece\u9ad8\u5730\u5740\u5f80\u4f4e\u5730\u5740\uff09\n|------------------------------------|\n|             \u2193                      |\n|            \u2191                       |\n|   \u5806 Heap (malloc/new\u5206\u914d\u533a)        | \u2190 \u5411\u4e0a\u589e\u957f\uff08\u4ece\u4f4e\u5730\u5740\u5f80\u9ad8\u5730\u5740\uff09\n|------------------------------------|\n|   \u5168\u5c40/\u9759\u6001\u6570\u636e\u533a (.bss, .data)     |\n|------------------------------------|\n|   \u4ee3\u7801\u533a (.text)                    |\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u4f4e\u5730\u5740 \u2193\n</code></pre> <p>gp \u548c tp</p> <ul> <li>gp (global pointer\uff0c\u5168\u5c40\u6307\u9488)\uff1a\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\u7684\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5168\u5c40\u9759\u6001\u6570\u636e\u533a\u7684\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u7528\u4e8e\u5feb\u901f\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf / \u9759\u6001\u53d8\u91cf\u3002</li> <li>tp (thread pointer\uff0c\u7ebf\u7a0b\u6307\u9488)\uff1a\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u63a7\u5236\u5757\u6216\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>\u6307\u4ee4\u4e2d lw \u548c lwu</p> <p>\u8bfb\u5165 32 \u4f4d\u4f46\u5bc4\u5b58\u5668 64 \u4f4d\uff0c\u9700\u8981\u628a\u8bfb\u5165\u7684 32 \u4f4d\u6269\u5c55\u4e3a 64 \u4f4d\u5bc4\u5b58\u5668\u3002 lwu \u6307\u4ee4\uff1a\u9ad8 32 \u4f4d\u81ea\u52a8\u8865\u96f6\uff1blw \u6307\u4ee4\uff1a\u9ad8 32 \u4f4d\u81ea\u52a8\u8865\u7b26\u53f7\u4f4d\u3002</p> <p>\u76f8\u5bf9\u5bfb\u5740\u548c\u7edd\u5bf9\u5bfb\u5740</p> <p>\u76f8\u5bf9\u5bfb\u5740\u4e3a\u76f8\u5bf9\u4e8e\u5f53\u524d\u7684 PC \u504f\u79fb\u3002\u5982 jal \u6307\u4ee4 <code>jal x1,100</code>\uff0c\u8df3\u8f6c\u5230\u5f53\u524d PC+100\uff1b \u7edd\u5bf9\u5bfb\u5740\u4e3a\u7ed9\u5b9a\u5bc4\u5b58\u5668\u548c\u504f\u79fb\u503c\u3002\u5982 jalr \u6307\u4ee4 <code>jalr x1,100(x5)</code>\uff0c\u8df3\u8f6c\u5230 x5+100\u3002</p> <p>\u793a\u4f8b\uff1a\u5b57\u7b26\u4e32\u62f7\u8d1d</p> GAS<pre><code>strcpy: addi  sp, sp, 8\n        sd    s3, 0(sp)         # s3\u7ed3\u679c\u5bc4\u5b58\u5668\u4fdd\u5b58\n        add   s3, zero, zero    # \u7ed3\u679c\u521d\u59cb\u5316\u4e3a\u96f6\n    L1: add   t0, s3, a1        # t0=src+i\n        lbu   t1, 0(t0)         # t1\u53d6t0\u7684\u7b2ci\u4e2a\u5b57\u8282\n        add   t2, s3, a0        # t2=dest+i\n        sb    t1, 0(t2)         # \u62f7\u8d1d\u4e00\u4e2a\u5b57\u8282\n        beq   t1, zero, L2\n        addi  s3, s3, 1\n        jal   zero, L1\n    L2: ld    s3, 0(sp)\n        addi  sp, sp, 8\n        jalr  zero, 0(x1)\n</code></pre> <p>\u5728 leaf procedure \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5148\u5c06\u6240\u6709\u4e34\u65f6\u5bc4\u5b58\u5668\u90fd\u7528\u5b8c\uff0c\u518d\u7528\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u3002</p> <p>\u5982\u679c\u5b58\u50a8 32 \u4f4d\u7684\u6570\uff1f</p> <p>lui \u6307\u4ee4 (load upper immediate)\uff1aU-type\uff0c\u7528\u4e8e\u5b58\u50a8\u7acb\u5373\u6570 \u4e8c\u5341\u4f4d\u7acb\u5373\u6570\uff0c\u653e\u5728 rd \u5bc4\u5b58\u5668\u7684\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u5168\u90e8\u7f6e\u96f6\u3002</p> <p>\u793a\u4f8b\uff1a32 \u4f4d\u6570\u4e3a 976*16^3+2304 RISC-V code\uff1a</p> GAS<pre><code>lui   s3, 976       # \u9ad8\u4f4d\uff1alui\u653e\u7f6e\naddi  s3, s3, 2304  # \u4f4e\u4f4d\uff1a\u52a0\u6cd5\u653e\u7f6e\n</code></pre> <p>\u5176\u4e2d\u9ad8\u4f4d\u901a\u8fc7\u53f3\u79fb\u5f97\u5230\uff0c\u4f4e\u4f4d\u901a\u8fc7\u4e0e\u8fd0\u7b97\u5f97\u5230\u3002</p> <p>Branch Addressing\uff1a SB-type \u4e2d\u7acb\u5373\u6570\u6ca1\u6709\u7b2c 0 \u4f4d\uff0c\u9ed8\u8ba4\u4e3a 0\u3002 \u8df3\u8f6c\u5730\u5740 = PC + \u504f\u79fb\u503c = PC + \u7acb\u5373\u6570*2</p> <p>Jump Addressing\uff1a UJ-type\uff0c\u4e8c\u5341\u4f4d\u7acb\u5373\u6570\uff0c\u8df3\u8f6c\u53ef\u4ee5\u5f88\u8fdc\u3002\u7b2c 0 \u4f4d\u4e5f\u9ed8\u8ba4\u4e3a 0\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/","title":"Chap 03 \u57fa\u672c\u7b97\u6cd5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 3457 \u4e2a\u5b57\u00a0\u00a012 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_1","title":"\u6570\u7684\u8868\u793a","text":"<p>word \u7531\u8ba1\u7b97\u673a\u7684\u4f4d\u5bbd\u51b3\u5b9a word \u662f 32 \u4f4d\uff0cdoubleword \u662f 64 \u4f4d \u6307\u4ee4\u4e5f\u662f\u7528 word \u5f62\u5f0f\u8868\u793a\uff0c\u5373\u6307\u4ee4\u662f 32bit</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_2","title":"\u6709\u7b26\u53f7\u6570","text":"<p>\u6709\u7b26\u53f7\u6570\u7684\u8868\u793a\uff1a</p> <ol> <li>sign magnitude\uff1a\u7b2c\u4e00\u4f4d\u7b26\u53f7\u4f4d\uff080 \u6b63\uff0c1 \u8d1f\uff09\uff0c\u540e\u9762\u7edd\u5bf9\u503c\uff080 \u6709\u4e24\u4e2a\uff09</li> <li>two's complement\uff1a2 \u7684\u8865\u7801\uff0c\u7b2c\u4e00\u4f4d\\(-2^n\\)</li> </ol> <p>\u4e3a\u4ec0\u4e48\u4e00\u822c\u7528\u8865\u7801\uff1f\u7b26\u53f7\u4f4d\u8868\u793a\uff0c\u5219\u7b26\u53f7\u4f4d\u548c\u540e\u9762\u8981\u5206\u5f00\u5904\u7406\uff0c\u786c\u4ef6\u5f00\u9500\u5927 \u8865\u7801\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\u96f6</p> <ul> <li>\u539f\u7801\uff1a\u7b26\u53f7\u4f4d\u8868\u793a</li> <li>\u53cd\u7801\uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4ed6\u4f4d\u53d6\u53cd</li> <li>\u8865\u7801\uff1a\u53cd\u7801+1</li> <li>\u79fb\u7801\uff1a\u8865\u7801\u7684\u7b26\u53f7\u4f4d\u53d6\u53cd\uff08\u53ea\u4f5c\u7528\u4e8e\u8d1f\u6570\uff09</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_3","title":"\u6ea2\u51fa","text":"<p>\u5224\u65ad overflow\uff08\u6709\u7b26\u53f7\u6570\uff09\uff1a</p> <ol> <li>\u6b21\u9ad8\u4f4d\u5411\u9ad8\u4f4d\u8fdb\u4f4d\uff0c\u8bb0\u4e3a c2\uff1b\u9ad8\u4f4d\u5411\u518d\u4e0a\u4e00\u4f4d\u8fdb\u4f4d\uff0c\u8bb0\u4e3a c1\u3002\u5982\u679c c1 \u548c c2 \u5f02\u6216\u4e3a 1\uff0c\u5219\u6709\u8fdb\u4f4d\u3002</li> <li>\u8003\u8651\u52a0\u51cf\u6cd5\u7ed3\u679c\u52a0\u4e00\u4f4d\uff08\u53cc\u7b26\u53f7\u4f4d\uff09\u3002\u4ee5 8 \u4f4d\u4e3a\u4f8b\uff0c\u770b\u7b2c 9 \u4f4d\u548c\u7b2c 8 \u4f4d\uff0c\u5982\u679c\u4e24\u8005\u4e0d\u540c\uff08\u5f02\u6216\u4e3a 1\uff09\uff0c\u5219\u6ea2\u51fa\u3002</li> </ol> <p>\u6ea2\u51fa\u5904\u7406\uff1a\u5ffd\u7565 / \u62a5\u7ed9 OS / \u7a0b\u5e8f\u81ea\u5df1\u5904\u7406 ALU \u68c0\u6d4b\u6ea2\u51fa\uff08\u5f02\u5e38\uff0c\u4e2d\u65ad\uff09\uff1a\u628a\u5f53\u524d\u6307\u4ee4\u7684\u5730\u5740\u5b58\u5728\u7279\u6b8a\u7684\u5bc4\u5b58\u5668 EPC\uff0c\u8df3\u5230 OS \u4e2d\u5904\u7406\u5f02\u5e38\u7684\u90e8\u5206\uff08\u6216\u5176\u4ed6\u5904\u7406\uff09 OS \u4e2d\u7ea0\u6b63\u518d\u8fd4\u56de\uff0c\u6216\u5e26\u7740\u62a5\u9519\u8fd4\u56de\u7a0b\u5e8f\uff0c\u6216\u7ec8\u6b62\u7a0b\u5e8f</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#alu","title":"ALU","text":"<p>\u6784\u5efa ALU\uff1a\u4ece\u4e00\u4f4d\u6269\u5c55\u5230\u591a\u4f4d \u5355\u4f4d\uff1a\u4e0e\uff0c\u6216\uff0c\u52a0\uff0c\u51cf\uff0c\u6bd4\u8f83\uff0c\u68c0\u6d4b\u96f6 \u6307\u4ee4\u6700\u540e\u51e0\u4f4d\u7684 operation code \u51b3\u5b9a\u6267\u884c\u54ea\u79cd\u8fd0\u7b97</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#alu_1","title":"\u4e00\u4f4d ALU","text":"<p>\u52a0\u6cd5\uff1a</p> <p>\u5168\u52a0\u5668\uff1a</p> <ul> <li>\\(\\text{sum}=A\\oplus B\\oplus C_{in}\\)</li> <li>\\(C_{out}=BC_{in}+AC_{in}+AB\\)</li> </ul> <p>n \u4f4d\u52a0\u6cd5\u9700\u8981 n \u4e2a\u5168\u52a0\u5668</p> <p>\u51cf\u6cd5\uff1a</p> <p>B \u6309\u4f4d\u53d6\u53cd\uff0ccin \u4e00\u5b9a\u662f 1\uff08\u51cf B \u7b49\u4ef7\u4e8e\u52a0 B \u7684\u8865\u7801\uff09 \u591a\u4f4d\u51cf\u6cd5\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 carry in \u662f 1\uff0c\u5176\u4f59\u4f4d\u662f 0\u3002\uff08\u603b\u7684 carry in \u662f 1\uff09</p> <p>parallel redundant select\uff1a\u63d0\u524d\u5e76\u884c\u8ba1\u7b97\u5904\u51fa cin \u662f 0 \u548c 1 \u7684\u4e24\u79cd\u53ef\u80fd\u7ed3\u679c\uff0c\u518d\u9009\u62e9\u3002\u52a0\u5feb\u901f\u5ea6</p> <p>\u6bd4\u8f83\uff1a</p> <p>slt rd rs rt: set on less than, rd \u5b58\u50a8\u7ed3\u679c\uff0c\u5bf9 rs \u548c rt \u6bd4\u8f83\u3002\u5f53 rs &lt; rt \u65f6 rd \u4e3a 1\uff0c\u5426\u5219\u4e3a 0\u3002\u5373<code>rd=(rs&lt;rt)?1:0</code> slt \u901a\u8fc7\u51cf\u6cd5\u5b9e\u73b0\u3002\u5982\u679c rs-rt&lt;0\uff0c\u5219 rd \u4e3a 1\u3002 \u5148\u5224\u65ad\u662f\u4e0d\u662f\u540c\u53f7\uff0c\u56e0\u4e3a\u5f02\u53f7\u76f8\u51cf\u4f1a\u6ea2\u51fa\u3002 slt \u4f5c\u4e3a\u7b26\u53f7\u4f4d\u7684\u68c0\u6d4b</p> <p>\u6ea2\u51fa\u68c0\u6d4b\uff1a</p> <p>\u5404\u4e2a\u8fd0\u7b97\u524d\u5148\u901a\u8fc7 overflow detection \u68c0\u6d4b\u3002</p> <p>\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f</p> <p>least significant bit\uff1aless \u4fe1\u53f7\uff0c\u8868\u793a\u662f\u6700\u4f4e\u4f4d\u7684\u8f93\u5165 most significant bit\uff1a\u6700\u9ad8\u4f4d\uff08\u7b26\u53f7\u4f4d\uff09\uff0c\u53eb\u505a set \u4fe1\u53f7\uff0c\u8868\u793a A &lt; B \u7684\u6700\u7ec8\u5224\u65ad\u7ed3\u679c \u53ea\u6709\u5728\u4e0d\u6ea2\u51fa\u7684\u60c5\u51b5\u4e0b\uff0cset \u624d\u6709\u610f\u4e49\u3002</p> <p>\u96f6\u7684\u68c0\u6d4b\uff1a</p> <p>make the common case fast \u5f97\u5230\u8ba1\u7b97\u7ed3\u679c\u540e\uff0c\u518d\u5224\u65ad\u7ed3\u679c\u662f\u4e0d\u662f\u96f6\uff08\u6309\u4f4d\u6216\u7684\u53d6\u53cd\uff09</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#alu_2","title":"\u591a\u4f4d ALU","text":"<p>\u6269\u5c55\uff1a\u4f9d\u6b21\u8ba1\u7b97\u6bcf\u4e00\u4f4d\uff0c\u8fdb\u4f4d\u4e32\u8054 ALU \u8f93\u51fa\uff1a\u662f\u4e0d\u662f 0\uff0c\u8ba1\u7b97\u7ed3\u679c\uff0c\u6709\u6ca1\u6709\u6ea2\u51fa</p> <p>Bnegate\uff1a\u628a B_invert \u548c carry in \u7ed3\u5408 \u51cf\u6cd5\u65f6\u53d6\u53cd\u548c carry in \u90fd\u662f 1\uff0c\u800c\u5728\u52a0\u6cd5\u65f6\u90fd\u662f 0\u3002\u628a\u8fd9\u4e24\u6761\u7ebf\u5408\u6210\u4e00\u6761\u7ebf\u3002</p> <p>Verilog \u4ee3\u7801\uff1a</p> Verilog<pre><code>module alu(A, B, ALU_operation, res, zero, overflow);\n    input [31:0] A, B;\n    input [2:0] ALU_operation;\n    output [31:0] res;\n    output zero;\n    wire [31:0] res_and, res_or, res_add, res_sub, res_nor, res_slt;\n    reg [31:0] res;\n    parameter one = 32'h0000_0001, zero_0 = 32'h0000_0000;\n\n    assign res_and = A &amp; B;\n    assign res_or = A | B;\n    assign res_add = A + B;\n    assign res_sub = A - B;\n    assign res_slt = (A &lt; B) ? one : zero_0;\n    always@ (A or B or ALU_operation)\n        case (ALU_operation)\n            3'b000: res = res_and;\n            3'b001: res = res_or;\n            3'b010: res = res_add;\n            3'b110: res = res_sub;\n            3'b100: res = ~(A | B);\n            3'b111: res = res_slt;\n            default: res = 32'hx;\n        endcase\n    assign zero = (res == 0) ? 1 : 0;\n\nendmodule\n</code></pre> <p>always@\u540e\u9762\u662f\u654f\u611f\u5217\u8868\uff0c\u51fa\u73b0\u518d\u7b49\u5f0f\u53f3\u8fb9\u6216\u5bfc\u81f4\u7ed3\u679c\u53d8\u5316\u7684\u6240\u6709\u503c\uff0c\u90fd\u8981\u653e\u5728\u654f\u611f\u5217\u8868\u4e2d\u3002 \u4e2d\u95f4\u503c\u5b58\u50a8\uff1aredundant select\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u8ba1\u7b97\u5f0f\u4ee3\u5165 case \u4e2d\uff0c\u5219\u53ef\u4ee5\u6267\u884c\u65f6\u4f18\u5316</p> <p>\u66f4\u5feb\u7684\u52a0\u6cd5\u5668\uff1a</p> <p>1. carry look-ahead adder (CLA)\uff1a\u6bcf\u4e2a\u8fdb\u4f4d\u7684\u5f0f\u5b50\u5c55\u5f00\u6210\u8f93\u5165\u7684\u8868\u8fbe\u5f0f\u3002  \u5341\u516d\u4f4d\uff1a\u56db\u4e2a\u4e00\u7ec4\uff0c\u76f8\u540c\u8868\u793a\uff08\u4e24\u7ea7\u52a0\u6cd5\u5668\uff09 \u3002</p> carry lookahead <p><code>G</code>\uff08Generate\uff0c\u751f\u6210\uff09\u548c <code>P</code>\uff08Propagate\uff0c\u4f20\u9012\uff09\u662f\u8fdb\u4f4d\u5148\u7b97\uff08carry lookahead\uff09\u52a0\u6cd5\u5668\u7684\u6838\u5fc3\u6982\u5ff5\u3002</p> <ul> <li>Generate g\uff1a\u8868\u793a\u672c\u4f4d\u4e00\u5b9a\u4f1a\u4ea7\u751f\u8fdb\u4f4d\uff0c\u4e0d\u4f9d\u8d56\u8f93\u5165\u8fdb\u4f4d\u3002\\(a_i\\)\u548c\\(b_i\\)\u90fd\u662f 1 \u65f6 g \u4e3a 1\u3002</li> </ul> \\[ g_i = A_i B_i \\] <ul> <li>Propagate p\uff1a\u8868\u793a\u672c\u4f4d\u4f1a\u628a\u8f93\u5165\u8fdb\u4f4d\u4f20\u7ed9\u9ad8\u4e00\u4f4d\u3002\\(a_i\\)\u548c\\(b_i\\)\u4e2d\u6709\u4e00\u4e2a\u662f 1 \u4e14 carry-in \u662f 1 \u65f6 p \u4e3a 1\u3002</li> </ul> \\[ p_i = A_i \\oplus b_i \\] <p>\u9010\u4f4d\u60c5\u51b5\uff1a\u4e0a\u4e00\u4f4d\u4ea7\u751f\u8fdb\u4f4d\u3001\u6216\u80fd\u548c\u518d\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u4e00\u8d77\u4f20\u9012\u5230\u4e0b\u4e00\u4f4d\uff0c\u5219\u4e0b\u4e00\u4f4d\u7684 carry-in \u4e3a 1\u3002</p> a b g p \u542b\u4e49 0 0 0 0 \u4e0d\u4ea7\u751f\u8fdb\u4f4d\uff0c\u4e0d\u4f20\u64ad\u8fdb\u4f4d 0 1 0 1 \u4e0d\u4ea7\u751f\uff0c\u4f46\u4f1a\u4f20\u9012\u8fdb\u4f4d 1 0 0 1 \u4e0d\u4ea7\u751f\uff0c\u4f46\u4f1a\u4f20\u9012\u8fdb\u4f4d 1 1 1 0 \u4e00\u5b9a\u4f1a\u4ea7\u751f\u8fdb\u4f4d <p>\u56e0\u6b64\u8fdb\u4f4d\u516c\u5f0f\u4e3a\uff1a</p> \\[ C_{i+1} = g_i+p_i C_i \\] <p>\u8fed\u4ee3\u4ee3\u5165\\(C_i\\)\uff0c\u5c06\u5404\u4f4d\u7684\u8fdb\u4f4d\\(C_i\\)\u7528 p\u3001g \u548c\\(C_0\\)\u8868\u793a\uff0c\u800c p\u3001g \u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u3001\u6ca1\u6709\u5ef6\u8fdf\u3002</p> <p>\u5f53\u628a\u591a\u4f4d\u5206\u4e3a\u4e00\u7ec4\u65f6\uff0c\u5b9a\u4e49\u7ec4\u4fe1\u53f7\uff1a</p> <ul> <li>\u7ec4\u4f20\u9012 P\uff08\u6574\u4e2a\u7ec4\u4f1a\u628a\u8f93\u5165\u8fdb\u4f4d\u4f20\u5230\u7ec4\u672b\u5c3e\uff09</li> </ul> \\[ P = p_{k-1} p_{k-2}\\cdots p_0 \\] <ul> <li>\u7ec4\u751f\u6210 G\uff08\u6574\u4e2a\u7ec4\u672c\u8eab\u4e00\u5b9a\u4f1a\u5728\u5185\u90e8\u4ea7\u751f\u8fdb\u4f4d\uff09</li> </ul> \\[ G = g_{k-1} + (p_{k-1} g_{k-2}) + (p_{k-1} p_{k-2} g_{k-3}) + \\cdots +(p_{k-1} \\cdots p_1 g_0) \\] <p>\u4e8e\u662f\u7ec4\u95f4\u8fdb\u4f4d\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ C_{out} = G + P C_{in} \\] <p>\u4e3e\u4f8b\uff0c4 \u4f4d\u7ec4\uff0ca=[1,0,1,1]\uff0cb=[0,1,1,0]\uff1a</p> <ul> <li>bit0: g0=0, p0=1</li> <li>bit1: g1=0, p1=1</li> <li>bit2: g2=1, p2=0</li> <li>bit3: g3=0, p3=1</li> </ul> <p>\u7ec4\u4f20\u9012 P = 1\u00b70\u00b71\u00b71 = 0 \u7ec4\u751f\u6210 G = g3 \u2228 (p3 g2) \u2228 \u2026 = 0 \u2228 (1\u00b71) = 1 \u6240\u4ee5\u65e0\u8bba\u8f93\u5165\u8fdb\u4f4d\u662f\u591a\u5c11\uff0c\u7ec4\u7684\u8f93\u51fa\u8fdb\u4f4d\u5fc5\u7136\u4e3a 1\u3002</p> <p>\u76f4\u89c2\u7406\u89e3\uff1a</p> <ul> <li>g=1 \u2192 \u201c\u6211\u81ea\u5df1\u4e00\u5b9a\u80fd\u4ea7\u51fa\u8fdb\u4f4d\u201d</li> <li>p=1 \u2192 \u201c\u6211\u4f1a\u628a\u5916\u6765\u7684\u8fdb\u4f4d\u4f20\u4e0b\u53bb\u201d</li> <li>\u7ec4 G/P \u662f\u628a\u8fd9\u903b\u8f91\u4e32\u8054\u8d77\u6765\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u51fa\u7ec4\u95f4\u8fdb\u4f4d\uff0c\u4ece\u800c\u907f\u514d\u9010\u4f4d ripple \u4f20\u9012\uff0c\u52a0\u5feb\u52a0\u6cd5\u5668\u901f\u5ea6\u3002</li> </ul> <p>\u5728 16 \u4f4d\u4e24\u7ea7\u8fdb\u4f4d\u5148\u7b97\u52a0\u6cd5\u5668\u91cc\uff0c16 \u4f4d\u88ab\u5212\u5206\u6210 4 \u4e2a\u5c0f\u7ec4\uff0c\u6bcf\u7ec4 4 \u4f4d\u3002\u6bcf\u4e2a\u5c0f\u7ec4\u5148\u8ba1\u7b97\u81ea\u5df1\u7684\u7ec4\u751f\u6210\u4fe1\u53f7 G \u548c\u7ec4\u4f20\u9012\u4fe1\u53f7 P\uff08\u4e0d\u4f9d\u8d56 C0\uff09\u3002\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u5e76\u884c\u5f97\u5230\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u4f9d\u8d56\u672c\u7ec4\u7684\u8f93\u5165\u4f4d\uff0c\u800c\u4e0d\u4f9d\u8d56\u5916\u6765\u7684\u8fdb\u4f4d\u3002</p> <p>\u6709\u4e86\u5404\u7ec4\u7684 G \u548c P\uff0c\u7ec4\u95f4\u8fdb\u4f4d\uff08C4\u3001C8\u3001C12\u3001C16\uff09\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u903b\u8f91\u5c55\u5f00\u5f0f\u5e76\u884c\u7b97\u51fa\u6765\uff0c\u4f8b\u5982\uff1a</p> \\[ C_4 = G_0 +P_0 C_0 \\] \\[ C_8 = G_1 +P_1 G_0 +P_1 P_0 C_0 \\] \\[ C_{12} = G_2 +P_2 G_1 +P_2 P_1 G_0+P_2 P_1 P_0 C0 \\] <p>\u8fd9\u4e9b\u516c\u5f0f\u90fd\u662f\u7ec4\u5408\u903b\u8f91\uff0c\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\uff0c\u4e0d\u9700\u8981\u7b49\u4f4e\u4f4d\u7684\u8fdb\u4f4d\u9010\u7ea7\u4f20\u9012\u3002</p> <p>\u800c\u7ec4\u5185\u7684\u8fdb\u4f4d\uff08C1\u3001C2\u3001C3\uff0c\u6216\u8005 C5\u3001C6\u3001C7 \u7b49\uff09\u5fc5\u987b\u4f9d\u8d56\u4e8e\u8be5\u7ec4\u7684\u8f93\u5165\u8fdb\u4f4d\u3002\u4f8b\u5982 C1 \u7684\u516c\u5f0f\u91cc\u5c31\u5305\u542b C0\uff0cC5 \u7684\u516c\u5f0f\u91cc\u5305\u542b C4\u3002\u5982\u679c\u4e0d\u77e5\u9053\u672c\u7ec4\u7684\u5165\u53e3\u8fdb\u4f4d\uff0c\u5c31\u65e0\u6cd5\u7b97\u7ec4\u5185\u7684\u9010\u4f4d\u8fdb\u4f4d\u3002\u56e0\u6b64\u5fc5\u987b\u7b49\u7ec4\u95f4\u8fdb\u4f4d\u5148\u786e\u5b9a\u4e0b\u6765\uff0c\u624d\u80fd\u5f80\u4e0b\u5c55\u5f00\u8ba1\u7b97\u3002</p> <p>\u6240\u4ee5\u987a\u5e8f\u662f\uff1a\u5148\u5e76\u884c\u4ea7\u751f\u7ec4\u95f4\u8fdb\u4f4d C4\u3001C8\u3001C12\u3001C16\uff0c\u7136\u540e\u518d\u7528\u8fd9\u4e9b\u7ed3\u679c\u53bb\u7b97\u6bcf\u4e2a\u7ec4\u5185\u90e8\u7684 C1\u3001C2\u3001C3 \u7b49\u3002\u8fd9\u6837\u65e2\u4fdd\u8bc1\u4e86\u901f\u5ea6\uff0c\u53c8\u51cf\u5c11\u4e86\u5173\u952e\u8def\u5f84\u5ef6\u8fdf\u3002</p> <p>2. carry select adder (CSA): \u5c06\u8fdb\u4f4d\u662f 0 \u548c 1 \u90fd\u8ba1\u7b97\u51fa\u6765\uff0c\u7528 c4 \u9009\u62e9\u7ed3\u679c\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_4","title":"\u4e58\u6cd5","text":"<p>\u4e58\u6cd5\uff1a\u52a0\u6cd5\u5668\u3001\u5bc4\u5b58\u5668 64bit \u76f8\u4e58\uff0c\u7ed3\u679c\u53ef\u80fd 128bit \u88ab\u4e58\u6570 multiplicand\uff0c\u4e58\u6570 multiplier</p> <p>Version 1\uff1a</p> <p>\u68c0\u9a8c\u4e58\u6570\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5982\u679c\u662f 1\uff0c\u7ed3\u679c\u52a0\u88ab\u4e58\u6570\uff0c\u5982\u679c\u662f 0 \u8df3\u8fc7\u3002\u88ab\u4e58\u6570\u5de6\u79fb\u4e00\u4f4d\uff0c\u4e58\u6570\u53f3\u79fb\u4e00\u4f4d\u3002\u5982\u679c\u8fed\u4ee3\u6570\u5c0f\u4e8e 64 \u6b21\uff0c\u91cd\u590d\u8fdb\u884c\u3002 \u88ab\u4e58\u6570\u3001\u79ef\u90fd\u8981\u7528 128 \u4f4d\u5bc4\u5b58\u5668\uff0cALU \u4e5f\u8981 128 \u4f4d\uff0c\u592a\u5927\uff01</p> <p>Version 2\uff1a</p> <p>\u539f\u5148\u9700\u8981\u7528 128 \u4f4d\u7684 ALU\uff0c\u4f46\u52a0\u6cd5\u53ea\u662f 64 \u4f4d\u3002 \u79ef\u7684\u6700\u4f4e\u4f4d\u540e\u9762\u4e0d\u53d8\uff0c\u88ab\u4e58\u6570\u5de6\u79fb\u540e\u52a0\u5230\u79ef\uff0c\u7b49\u4ef7\u4e8e\u88ab\u4e58\u6570\u52a0\u79ef\u53f3\u79fb\u3002 \u6539\u8fdb\uff1a\u68c0\u9a8c\u4e58\u6570\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5982\u679c\u662f 1\uff0c\u628a\u88ab\u4e58\u6570\u52a0\u5230\u79ef\u7684\u5de6\u534a\u90e8\u5206\uff08\u88ab\u4e58\u6570\u6700\u4f4e\u4f4d\u548c\u79ef\u7684\u4e2d\u95f4\u4f4d\u5bf9\u9f50\uff09\uff0c\u5982\u679c\u662f 0 \u8df3\u8fc7\u3002\u79ef\u53f3\u79fb\u4e00\u4f4d\uff0c\u4e58\u6570\u53f3\u79fb\u4e00\u4f4d\u3002 \u8fd9\u6837\u6bcf\u6b21\u52a0\u6cd5\u53ea\u662f\u88ab\u4e58\u6570\u548c\u79ef\u7684\u5de6\u534a\u90e8\u5206\uff0c\u53ea\u9700\u8981 64 \u4f4d ALU\u3002</p> <p>Version 3\uff1a</p> <p>\u79ef\u7528 129 \u4f4d\u5bc4\u5b58\u5668\u5b58\u50a8\uff08\u6700\u9ad8\u4f4d\u53ef\u5904\u7406\u6ea2\u51fa\uff09\uff0c\u521d\u59cb\u65f6\u7684\u540e 64 \u4f4d\u6ca1\u6709\u7528\u5230\uff0c\u5168\u90e8\u5728\u53f3\u79fb\u65f6\u79fb\u8d70\u3002\u56e0\u4e3a\u79ef\u7684\u53f3\u79fb\u548c\u4e58\u6570\u7684\u53f3\u79fb\u76f8\u540c\uff0c\u628a\u4e58\u6570\u653e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u3002 \u539f\u5148\u6bcf\u6b21\u68c0\u6d4b\u4e58\u6570\u7684\u6700\u4f4e\u4f4d\u662f\u4e0d\u662f\u96f6\uff0c\u6539\u4e3a\u68c0\u6d4b\u79ef\u7684\u6700\u540e\u4e00\u4f4d\u662f\u4e0d\u662f\u96f6</p> <p>\u6709\u7b26\u53f7\u6570\u4e58\u6cd5\uff1a</p> <p>\u4e58\u6cd5\u4e0d\u80fd\u7528\u8865\u7801\u8ba1\u7b97\u3002\u5148\u5b58\u50a8\u7b26\u53f7\u4f4d\u3001\u7edd\u5bf9\u503c\u76f8\u4e58\uff0c\u518d\u5224\u65ad\u7b26\u53f7\u4f4d\u662f\u4e0d\u662f\u4e00\u6837\u3002</p> <p>Booth \u6cd5\uff1a\uff08\u4ece\u4f4e\u4f4d\u5f00\u59cb\uff09 \u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684 1\uff0c\u51cf\uff1b\u8fde\u7eed\u51fa\u73b0\u7684 1\uff0c\u79fb\u4f4d\uff08\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff09\uff1b\u6700\u540e\u51fa\u73b0\u7684 1\uff0c\u52a0</p> Booth's Algorithm <p>Booth \u7b97\u6cd5\u662f\u4e00\u79cd\u5bf9\u4e8c\u8fdb\u5236\u6570\u8fdb\u884c\u6709\u7b26\u53f7\u4e58\u6cd5\u8fd0\u7b97\u7684\u4f18\u5316\u65b9\u6cd5\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u51cf\u5c11\u5b9e\u9645\u9700\u8981\u7684\u52a0\u6cd5\u6216\u51cf\u6cd5\u6b21\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u8fd0\u7b97\u6548\u7387\u3002\u5b83\u9002\u7528\u4e8e\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u7684\u6570\u3002</p> <p>\u5728\u666e\u901a\u7684\u4e58\u6cd5\u5668\u4e2d\uff0c\u9010\u4f4d\u626b\u63cf\u4e58\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u8be5\u4f4d\u4e3a 1\uff0c\u5c31\u52a0\u4e0a\u88ab\u4e58\u6570\u5bf9\u5e94\u7684\u79fb\u4f4d\u7248\u672c\uff0c\u5982\u679c\u8be5\u4f4d\u4e3a 0\uff0c\u5c31\u8df3\u8fc7\u3002\u8fd9\u79cd\u65b9\u6cd5\u5728\u4e58\u6570\u91cc\u6709\u5f88\u591a\u8fde\u7eed\u7684 1 \u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u5f88\u591a\u6b21\u91cd\u590d\u7684\u52a0\u6cd5\u64cd\u4f5c\u3002Booth \u7b97\u6cd5\u901a\u8fc7\u5bf9\u4e58\u6570\u7684\u4f4d\u6a21\u5f0f\u8fdb\u884c\u7f16\u7801\uff0c\u80fd\u628a\u4e00\u4e32\u8fde\u7eed\u7684 1 \u66ff\u6362\u4e3a\u4e00\u6b21\u52a0\u6cd5\u548c\u4e00\u6b21\u51cf\u6cd5\uff0c\u4ece\u800c\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570\u3002</p> \\[\\underbrace{11\\cdots 1}_{\\text{n\u4e2a1}}=1\\underbrace{00\\cdots 0}_{\\text{n\u4e2a0}}-1\\] <p>Booth \u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u89c2\u5bdf\u4e58\u6570\u7684\u76f8\u90bb\u4e24\u4f4d\uff08\u5305\u62ec\u6700\u4f4e\u4f4d\u548c\u989d\u5916\u6dfb\u52a0\u7684\u4e00\u4f4d 0\uff0c\u8bb0\u4f5c Q[-1]\uff09\u3002\u6839\u636e\u8fd9\u4e24\u4f4d\u7684\u7ec4\u5408\uff0c\u51b3\u5b9a\u5f53\u524d\u6b65\u9aa4\u662f\u5426\u9700\u8981\u5bf9\u90e8\u5206\u79ef\u52a0\u4e0a\u6216\u51cf\u53bb\u88ab\u4e58\u6570\u3002\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524d\u4f4d Q[i] = 0\uff0c\u4e0a\u4e00\u4f4d Q[i-1] = 0 \u2192 \u4e0d\u64cd\u4f5c\uff08\u90e8\u5206\u79ef\u4e0d\u53d8\uff09\u3002</li> <li>\u5982\u679c\u5f53\u524d\u4f4d Q[i] = 1\uff0c\u4e0a\u4e00\u4f4d Q[i-1] = 0 \u2192 \u90e8\u5206\u79ef\u51cf\u53bb\u88ab\u4e58\u6570\u3002</li> <li>\u5982\u679c\u5f53\u524d\u4f4d Q[i] = 0\uff0c\u4e0a\u4e00\u4f4d Q[i-1] = 1 \u2192 \u90e8\u5206\u79ef\u52a0\u4e0a\u88ab\u4e58\u6570\u3002</li> <li>\u5982\u679c\u5f53\u524d\u4f4d Q[i] = 1\uff0c\u4e0a\u4e00\u4f4d Q[i-1] = 1 \u2192 \u4e0d\u64cd\u4f5c\u3002</li> </ul> <p>\u5728\u6bcf\u4e00\u6b65\u4e4b\u540e\uff0c\u5bf9\u6574\u4e2a\u5bc4\u5b58\u5668\uff08\u90e8\u5206\u79ef + \u4e58\u6570 + Q[-1]\uff09\u505a\u4e00\u6b21\u7b97\u672f\u53f3\u79fb\uff0c\u8fd9\u6837\u9010\u6b65\u751f\u6210\u6700\u7ec8\u7ed3\u679c\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u7528 4 \u4f4d Booth \u7b97\u6cd5\u8ba1\u7b97 <code>(-3) \u00d7 (5)</code>\uff1a</p> <ul> <li>\u88ab\u4e58\u6570 M = -3\uff0c\u7528 4 \u4f4d\u8865\u7801\u8868\u793a\u662f 1101\u3002</li> <li>\u4e58\u6570 Q = 5\uff0c\u7528 4 \u4f4d\u8865\u7801\u8868\u793a\u662f 0101\u3002</li> <li>\u521d\u59cb\u90e8\u5206\u79ef A = 0000\uff0c\u6269\u5c55\u4e3a 8 \u4f4d\u6765\u8ba1\u7b97\uff0cQ[-1] = 0\u3002</li> </ul> <p>\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u68c0\u67e5 Q[0]=1, Q[-1]=0 \u2192 \u90e8\u5206\u79ef = \u90e8\u5206\u79ef - M\u3002 \u7136\u540e\u7b97\u672f\u53f3\u79fb\u3002</li> <li>\u68c0\u67e5\u65b0 Q[0], Q[-1] \u2192 \u51b3\u5b9a\u662f\u5426\u52a0\u51cf\u3002 \u6bcf\u6b21\u64cd\u4f5c\u540e\u518d\u7b97\u672f\u53f3\u79fb\u3002</li> <li>\u91cd\u590d 4 \u6b21\uff08\u56e0\u4e3a\u662f 4 \u4f4d\u6570\uff09\u3002</li> </ol> <p>\u6700\u7ec8\u7ed3\u679c\u5f97\u5230 11111111 1011\uff08\u4e8c\u8fdb\u5236\u8865\u7801\uff09\uff0c\u5373\u5341\u8fdb\u5236\u7684 -15\u3002\u8fd9\u4e2a\u4e0e -3 \u00d7 5 \u7684\u6b63\u786e\u7ed3\u679c\u4e00\u81f4\u3002</p> <p>Booth \u7b97\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u5b83\u80fd\u5feb\u901f\u5904\u7406\u4e58\u6570\u4e2d\u5305\u542b\u8fde\u7eed 1 \u7684\u60c5\u51b5\u3002\u6bd4\u5982\u666e\u901a\u4e58\u6cd5\u5668\u5728\u9047\u5230 1111 \u65f6\u4f1a\u6267\u884c 4 \u6b21\u52a0\u6cd5\uff0c\u800c Booth \u7b97\u6cd5\u53ea\u9700\u8981 1 \u6b21\u52a0\u6cd5\u548c 1 \u6b21\u51cf\u6cd5\u3002\u8fd9\u6837\u5728\u786c\u4ef6\u5b9e\u73b0\u4e0a\u53ef\u4ee5\u51cf\u5c11\u90e8\u5206\u79ef\u7d2f\u52a0\u6b21\u6570\uff0c\u63d0\u9ad8\u4e58\u6cd5\u6548\u7387\u3002</p> <p></p> <p>Faster Multiplication\uff1a</p> <p>unroll the loop\uff1a\u8ba1\u7b97\u4e58\u6570\u6240\u6709\u4f4d\u548c\u88ab\u4e58\u6570\u7684\u4e58\u6cd5\u7ed3\u679c\uff08\u5305\u542b\u79fb\u4f4d\uff09\uff0c\u4ee5\u52a0\u6cd5\u6811\u7684\u5f62\u5f0f\u4e24\u4e24\u76f8\u52a0\u3002 Cons\uff1a\u9700\u8981\u5f88\u591a\u52a0\u6cd5\u5668\uff0c\u786c\u4ef6\u6210\u672c\u5927</p> <p>RISC-V \u7684\u4e58\u6cd5\uff1a</p> <p>RISC-V \u4e2d\uff1amul, mulh, mulhu, mulhsu</p> <ul> <li><code>mul</code>\uff1a\u6267\u884c\u4e24\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u7684\u4e58\u6cd5\uff0c\u7ed3\u679c\u662f\u6709\u7b26\u53f7\u6574\u6570\u3002</li> <li><code>mulh</code>\uff1a\u6267\u884c\u4e24\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u7684\u4e58\u6cd5\uff0c\u7ed3\u679c\u662f\u9ad8 64 \u4f4d\u90e8\u5206\u3002</li> <li><code>mulhu</code>\uff1a\u6267\u884c\u4e24\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7684\u4e58\u6cd5\uff0c\u7ed3\u679c\u662f\u9ad8 64 \u4f4d\u90e8\u5206\u3002</li> <li><code>mulhsu</code>\uff1a\u6267\u884c\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u548c\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7684\u4e58\u6cd5\uff0c\u7ed3\u679c\u662f\u9ad8 64 \u4f4d\u90e8\u5206\uff08\u65e0\u7b26\u53f7\uff09\u3002</li> </ul>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_5","title":"\u9664\u6cd5","text":"<p>\u9664\u6cd5\uff1a\u4ece\u9ad8\u4f4d\u5f00\u59cb\u51cf \u9664\u6570 divisor\uff0c\u88ab\u9664\u6570 divisor\uff0c\u5546 quotient\uff0c\u4f59\u6570 remainder</p> <p>Version 1\uff1a</p> <p>\u6700\u5f00\u59cb\uff0c\u9664\u6570\u653e\u5728 128 \u4f4d\u5bc4\u5b58\u5668\u5de6\u8fb9\uff0c\u4f59\u6570\u4e3a\u88ab\u9664\u6570\u3001\u653e\u5728 128 \u4f4d\u5bc4\u5b58\u5668\u53f3\u8fb9\u3002 \u6bcf\u6b21\u4f59\u6570\u4e2d\u51cf\u9664\u6570\uff0c\u5982\u679c\u7ed3\u679c\u5c0f\u4e8e\u96f6\u8868\u793a\u591a\u51cf\u4e86\uff0c\u518d\u628a\u9664\u6570\u52a0\u56de\u6765\u3002\u5c06\u9664\u6570\u5f80\u53f3\u79fb\u3002 \u51cf\u9664\u6570\u540e\uff0c\u5982\u679c\u7ed3\u679c\u5927\u4e8e\u7b49\u4e8e\u96f6\uff0c\u5546\u5de6\u79fb\u4e00\u4f4d\u3001\u672b\u5c3e\u7f6e 1\uff1b\u5982\u679c\u5c0f\u4e8e\u96f6\uff0c\u628a\u9664\u6570\u52a0\u56de\u6765\uff0c\u5546\u5de6\u79fb\u4e00\u4f4d\u3001\u672b\u5c3e\u7f6e 0\u3002</p> <p>64 \u4f4d\u7684\u6570\uff0c\u9700\u8981 65 \u6b21\u5faa\u73af\u3002\u56e0\u4e3a\u6700\u540e\u8fd8\u9700\u8981\u4e00\u6b21\u6bd4\u8f83\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9664\u6570\uff0864 \u4f4d\uff09\u4ece remainder\uff08128 \u4f4d\uff09\u7684\u6700\u5de6\u8fb9\u5f00\u59cb\u5339\u914d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5bf9\u9f50\uff1f \u8fd9\u662f\u901a\u7528\u9664\u6cd5\u5668\uff0c\u4e0d\u786e\u5b9a\u9664\u6570\u6709\u51e0\u4f4d\uff0c\u4e0d\u80fd\u76f4\u63a5\u5bf9\u9f50\u3002</p> <p>Version 2\uff1a</p> <p>\u53f3\u79fb\u9664\u6570\u7b49\u4ef7\u4e8e\u5de6\u79fb\u4f59\u6570\u3002 \u5c06\u4f59\u6570\uff08\u88ab\u9664\u6570\uff09\u548c\u5546\u653e\u5728\u540c\u4e00\u4e2a 128 \u4f4d\u5bc4\u5b58\u5668\u3002\u4e00\u5f00\u59cb\u88ab\u9664\u6570\u653e\u5728\u6700\u53f3\u8fb9\uff0c\u9664\u6cd5\u65f6\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u51cf\u9664\u6570\uff0c\u5224\u65ad\u6b63\u8d1f\u3002 128 \u4f4d\u5bc4\u5b58\u5668\u5de6\u79fb\uff0c\u53f3\u8fb9\u7a7a\u51fa\u7684\u4f4d\u7f6e\u653e\u5546\uff08\u672b\u5c3e\u653e 0 \u6216 1\uff09\u3002\u4f59\u6570\uff08\u88ab\u9664\u6570\uff09\u548c\u5546\u540c\u6b65\u5de6\u79fb\u3002</p> <p>\u7b2c\u4e00\u6b65\u4e3a 128 \u4e3a\u5bc4\u5b58\u5668\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u5f00\u59cb\u51cf\uff1b \u6700\u540e\u4e00\u6b65\u4e3a 128 \u4f4d\u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u53f3\u79fb\u4e00\u4f4d\uff08\u56e0\u4e3a\u540c\u6b65\u5de6\u79fb\u65f6\u591a\u79fb\u4e86\u4e00\u4f4d\uff09\u3002\u56e0\u6b64 128 \u4f4d\u5bc4\u5b58\u5668\u65e2\u9700\u8981\u5de6\u79fb\u4e5f\u9700\u8981\u53f3\u79fb\u3002</p> <p>\u9664\u6cd5\u4e0d\u80fd\u5c55\u5f00\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f</p> <p></p> <p>\u6709\u7b26\u53f7\u6570\u9664\u6cd5\uff1a</p> <p>\u540c\u53f7\u76f8\u9664\u4e3a\u6b63\uff0c\u5f02\u53f7\u76f8\u9664\u4e3a\u8d1f\u3002</p> <p>\u4e00\u6b63\u4e00\u8d1f\u76f8\u9664\uff1a\u4f59\u6570\u7684\u7b26\u53f7\u548c\u88ab\u9664\u6570\u76f8\u540c\uff08\u56e0\u4e3a\u4f59\u6570\u672c\u6765\u5c31\u662f\u88ab\u9664\u6570\u7684\u4e00\u90e8\u5206\uff09</p> <p>\u6307\u4ee4\uff1adiv,rem; divu,remu\uff08\u65e0\u7b26\u53f7\uff09</p> <p>\u5f53\u9664\u6570\u662f 0 \u65f6\uff0c\u4ea7\u751f overflow\uff0c\u8981\u81ea\u5df1\u5904\u7406\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_6","title":"\u6d6e\u70b9\u6570","text":""},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_7","title":"\u6d6e\u70b9\u7684\u5b58\u50a8","text":"<p>\u6d6e\u70b9\u662f\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b sign\uff08\u7b26\u53f7\uff09\uff0csignificand\uff08fraction\uff0c\u5c3e\u6570\uff0c\u5f52\u4e00\u5316\uff09\uff0cexponent\uff08\u6307\u6570\u4f4d\uff0c\u4e58 2 \u7684\u51e0\u6b21\uff09 \u5b58\u50a8\u987a\u5e8f\uff1a\u7b26\u53f7\u3001\u6307\u6570\u3001\u5c3e\u6570</p> <p>\u7b26\u53f7\u4f4d 0 \u8868\u793a\u6b63\u6570\uff0c1 \u8868\u793a\u8d1f\u6570 \u9ed8\u8ba4\u5c3e\u6570\u7684\u5c0f\u6570\u70b9\u524d\u4e3a 1\uff0c\u8282\u7701\u4e00\u4e2a bit</p> <p>\u6d6e\u70b9\u6570\u8868\u793a\u5206\u4e3a\u5355\u7cbe\u5ea6\uff0832 \u4f4d\uff09\u548c\u53cc\u7cbe\u5ea6\uff0864 \u4f4d\uff09\uff0cRISC-V \u4e24\u79cd\u90fd\u652f\u6301\u3002</p> <ul> <li>\u5355\u7cbe\u5ea6\uff1a8 \u4f4d\u6307\u6570\uff0c23 \u4f4d\u5c3e\u6570\uff1b</li> <li>\u53cc\u7cbe\u5ea6\uff1a11 \u4f4d\u6307\u6570\uff0c52 \u4f4d\u5c3e\u6570\uff08\u5c3e\u6570\u8d8a\u591a\uff0c\u7cbe\u5ea6\u8d8a\u9ad8\uff09</li> </ul> <p>\u6307\u6570\u9ed8\u8ba4\u52a0 bias\uff0c\u5b9e\u9645\u7684\u6307\u6570\u4e3a exponent - bias\uff0c\u8fd9\u6837 exponent \u7684\u5b58\u50a8\u503c\u59cb\u7ec8\u662f\u6b63\u7684\u3002 \u5355\u7cbe\u5ea6\u7684 bias \u662f 127\uff0c\u53cc\u7cbe\u5ea6\u7684 bias \u662f 1023\u3002</p> \\[(-1)^{sign}\\cdot(1+significand)\\cdot 2^{exponent-bias}\\] <p>\u7279\u6b8a\u60c5\u51b5\uff1a</p> <ul> <li>exponent=111..., fraction=000... \u8868\u793a\u65e0\u7a77</li> <li>exponent=111..., fraction!=000... \u8868\u793a NaN\uff08e.g. \u9664\u6570\u4e3a\u96f6\uff09</li> <li>\u666e\u901a\u6570\u7684\u6307\u6570\u4e0d\u80fd\u5168 1</li> </ul> <p>exponent=0 \u8868\u793a\u975e\u89c4\u8303\u5316\u6570\u6216 0\uff0c\u6240\u4ee5\u5355\u7cbe\u5ea6\u7684\u8303\u56f4\u6700\u5c0f\u662f \\(1\\times 2^{-126}\\)\uff0c\u6700\u5c0f\u7cbe\u5ea6\u662f \\(2^{-23}\\)\uff0c\u6307\u6570\u6700\u5927\u4e3a \\(2^{127}\\)\u3002</p> <p>\u6570\u592a\u5927\u65f6 overflow\uff0c\u6570\u592a\u5c0f\u65f6 underflow\u3002</p>"},{"location":"CourseNotes/Computer%20Organization/lecture%20notes/COchap03/#_8","title":"\u6d6e\u70b9\u7684\u8ba1\u7b97","text":"<p>\u6d6e\u70b9\u8ba1\u7b97\uff1a\u5bf9\u9f50\uff08\u5316\u6210\u6307\u6570\u76f8\u540c\uff09\uff0c\u5bf9\u5e94\u6570\u76f8\u52a0\uff0c\u5f52\u4e00\u5316\uff08\u5316\u4e3a\u5c0f\u6570\u70b9\u524d\u4e3a 1\uff09\uff0c\u8fdb\u4f4d\uff08rounding\uff09\uff0c\u5f52\u4e00\u5316\u3002 \u5bf9\u9f50\u65f6\u5c0f\u7684\u5411\u5927\u7684\u53f3\u79fb\u9760\u8fd1\uff0c\u56e0\u4e3a\u8ba1\u7b97\u540e\u8d85\u8fc7\u4f4d\u6570\u9700\u8981\u4e22\u6389\u51e0\u4f4d\uff08truncation\uff09\uff0c\u8fd9\u6837\u4e22\u6389\u7684\u662f\u6743\u503c\u4f4e\u7684\u4f4d\u3002 \u4e0d\u540c\u8ba1\u7b97\u673a\u6709\u4e0d\u540c\u7684\u8fdb\u4f4d\u65b9\u6cd5</p> <p></p> <p>\u6d6e\u70b9\u4e58\u6cd5\uff1a\u5c3e\u6570\u76f8\u4e58\uff0c\u6307\u6570\u76f8\u52a0\uff0c\u6807\u51c6\u5316\uff0c\u52a0\u7b26\u53f7 \u6307\u6570\u76f8\u52a0\u65f6 bias \u52a0\u4e86\u4e24\u6b21\uff0c\u4e00\u5b9a\u8981\u51cf\u4e00\u4e2a bias</p> <p>\u6d6e\u70b9\u9664\u6cd5\uff1a\u5c0f\u6570\u76f8\u9664\uff0c\u6307\u6570\u76f8\u51cf\uff0c\u6807\u51c6\u5316\uff0c\u52a0\u7b26\u53f7 \u6307\u6570\u51cf\u5b8c\u8981\u628a bias \u52a0\u56de\u53bb</p> <p>\u5b9e\u9645\u8ba1\u7b97\u4e2d\uff0c\u4e3a\u4e86\u8ba1\u7b97\u51c6\u786e\uff08\u5bf9\u9f50\u53f3\u79fb\u65f6\u6709\u4e9b\u88ab\u4e22\u6389\uff09\uff0c\u989d\u5916\u52a0\u4e00\u4e9b\u4f4d\u3002</p> <ul> <li>guard \u4f4d\uff08\u540e\u9762\u653e\u4e00\u4f4d\u7528\u4e8e\u4fdd\u62a4\uff09</li> <li>round \u4f4d\uff08guard \u4f4d\u7684\u4e0b\u4e00\u4f4d\uff09</li> <li>sticky \u4f4d\uff08round \u4f4d\u7684\u4e0b\u4e00\u4f4d\uff0c\u6307\u6570\u5dee\u5f88\u591a\uff0c\u4e22\u6389\u4f59\u4e0b\u7684\u6570\u4e2d\uff0c\u53ea\u8981\u975e\u96f6\u5219 sticky \u4f4d\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\uff09</li> </ul> <p>sticky \u4f4d\u6709\u4e9b\u5730\u65b9\u6ca1\u6709</p> <p>ulp\uff08units in the last place\uff09\uff1a\u56db\u820d\u4e94\u5165\uff0c\u6700\u5927\u7684\u635f\u5931\u662f\u6700\u5c0f\u7cbe\u5ea6\u7684\u4e00\u534a\u3002ulp \u4f5c\u4e3a\u5355\u4f4d\uff0c\u7528\u4e8e\u8861\u91cf\u8bef\u5dee\u7684\u5927\u5c0f\u3002</p> <p>\u8fdb\u4f4d\u6a21\u5f0f\uff1a</p> <ul> <li>\u603b\u662f\u5411\u4e0a\u53d6\u6574</li> <li>\u603b\u662f\u5411\u4e0b\u53d6\u6574</li> <li>\u622a\u65ad\uff08\u76f4\u63a5\u820d\u53bb\u5c0f\u6570\u90e8\u5206\uff09</li> <li>\u56db\u820d\u4e94\u5165\u5230\u6700\u8fd1\u7684\u5076\u6570</li> </ul> <p>\u8865\u7801\u5b9a\u70b9\u6570</p> <p>\u5728\u4e8c\u8fdb\u5236\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u51e0\u79cd\u65b9\u5f0f\u8868\u793a\u5b9e\u6570\uff1a</p> \u7c7b\u578b \u7279\u70b9 \u4f8b\u5b50 \u6574\u6570\uff08integer\uff09 \u4e8c\u8fdb\u5236\u70b9\u5728\u6700\u53f3\u8fb9\uff08\u76f8\u5f53\u4e8e\u6240\u6709\u4f4d\u90fd\u662f\u6574\u6570\u90e8\u5206\uff09 <code>1011\u2082 = 11\u2081\u2080</code> \u5b9a\u70b9\u6570\uff08fixed-point\uff09 \u5c0f\u6570\u70b9\u4f4d\u7f6e\u56fa\u5b9a\uff0c\u4e0d\u968f\u6570\u503c\u53d8\u5316 <code>0.1011\u2082 = 0.6875\u2081\u2080</code> \u6d6e\u70b9\u6570\uff08floating-point\uff09 \u5c0f\u6570\u70b9\u4f4d\u7f6e\u53ef\u201c\u6d6e\u52a8\u201d\uff0c\u7531\u6307\u6570\u90e8\u5206\u63a7\u5236 IEEE 754 \u683c\u5f0f <p>\u8865\u7801\u5b9a\u70b9\u6570\u662f\u5c06\u5b9a\u70b9\u6570\u6309\u7167\u8865\u7801\u7684\u5f62\u5f0f\u53d8\u4e3a\u6709\u7b26\u53f7\u6570</p> <ul> <li>\u5c0f\u6570\u70b9\u56fa\u5b9a\u5728\u6700\u9ad8\u4f4d\u5de6\u8fb9</li> <li>\u6700\u9ad8\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c\u6743\u503c\u4e3a-1\uff0c1 \u8868\u793a\u8d1f\u6570\u3001 0 \u8868\u793a\u6b63\u6570</li> <li>\u7b2c\u4e8c\u4f4d\u5f00\u59cb\u4f9d\u6b21\u6743\u503c\u4e3a 0.5\u30010.125\u2026\u2026</li> </ul> <p>\u5177\u4f53\u8ba1\u7b97\u65f6\uff0c\u4ecd\u53ef\u4ee5\u6309\u7167\u5148\u6c42\u6b63\u6570\u3001\u518d\u53d6\u53cd\u52a0\u4e00\u7684\u65b9\u6cd5\u5f97\u5230\u8865\u7801\u3002</p> <p>\u8865\u7801\u5b9a\u70b9\u6570\u53ef\u4ee5\u8868\u793a-1 \u5230\u63a5\u8fd1 1 \u7684\u5c0f\u6570\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a n \u4f4d\u8865\u7801\u5b9a\u70b9\u6570\uff0c\u5047\u8bbe\u5c0f\u6570\u70b9\u5728\u6700\u9ad8\u4f4d\u5de6\u8fb9\uff1a</p> \\[ x = -b_{n-1} + \\sum_{i=0}^{n-2} b_i \\cdot 2^{-(n-1-i)} \\] <p>\u5176\u4e2d \\(b_{n-1}\\) \u662f\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"CourseNotes/Cultural%20Anthropolog/CAlec%2001/","title":"\u7eea\u8bba","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 984 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Cultural%20Anthropolog/CAlec%2001/#_1","title":"\u4eba\u7c7b\u5b66\u4ecb\u7ecd","text":"<p>\u4f5c\u4e3a\u77e5\u8bc6\u7684\u4eba\u7c7b\u5b66\uff1a\u201c\u4ed6\u8005\u201d\u7684\u5386\u53f2\u548c\u6587\u5316\u3002</p> <p>\u4f5c\u4e3a\u5b66\u79d1\u7684\u4eba\u7c7b\u5b66\u7684\u51fa\u73b0\uff1a\u5730\u7406\u5927\u53d1\u73b0\u540e\u65b0\u7684\u6c11\u65cf\uff0c\u63cf\u7ed8\u8fd9\u4e9b\u6c11\u65cf\u7684\u4e00\u822c\u6027\u672f\u8bed\u51fa\u73b0\uff0c\u6784\u6210\u65b0\u7684\u5b66\u79d1\u9886\u57df\u201c\u4eba\u7c7b\u5b66\u201d \u77e5\u8bc6\u5b66\u79d1\u5316\u548c\u4e13\u4e1a\u5316\uff0c\u521b\u7acb\u4e86\u751f\u4ea7\u77e5\u8bc6\u3001\u57f9\u517b\u77e5\u8bc6\u521b\u9020\u8005\u7684\u6c38\u4e45\u6027\u5236\u5ea6\u673a\u6784\u3002\u73b0\u5b9e\u88ab\u5206\u6210\u4e0d\u540c\u7684\u77e5\u8bc6\u7fa4\uff0c\u56e0\u6b64\u7cfb\u7edf\u5316\u8981\u6c42\u638c\u63e1\u4e13\u95e8\u7684\u77e5\u8bc6\uff0c\u591a\u5143\u5b66\u79d1\u521b\u7acb\u3002</p> <p>\u5b66\u79d1\u6807\u5fd7\uff1a</p> <ul> <li>\u7530\u91ce\u8c03\u67e5\u4e0e\u6c11\u65cf\u5fd7\uff0c\u4f5c\u4e3a\u4e00\u79cd\u201c\u975e\u7406\u6027\u201d\u529b\u91cf\u7684\u201c\u7530\u91ce\u76f4\u89c9\u201d</li> <li>\u6587\u5316\u3001\u4ed6\u8005\u4e0e\u81ea\u6211\u2014\u2014\u7530\u91ce\u4e2d\u7684\u8bed\u8a00\u5b66\u4e60\u3001\u8c03\u67e5\u5468\u671f\u3001\u53c2\u4e0e\u89c2\u5bdf</li> <li>\u201c\u751f\u6d3b\u65b9\u5f0f\u201d\u5373\u6587\u5316\uff0c\u5e95\u5c42\u7acb\u573a</li> <li>\u201c\u53cd\u89c2\u81ea\u6211\u7684\u955c\u5b50\u201d\uff0c\u7814\u7a76\u4ed6\u8005\u662f\u4e3a\u4e86\u53cd\u89c2\u81ea\u6211</li> </ul> <p>\u6587\u5316\u662f\u5171\u4eab\u7684\uff1a\u67cf\u5a01\u590f\u5bfa\u4e4b\u4e89\uff0c\u6587\u5316\u9057\u4ea7\u662f\u4e0d\u80fd\u5171\u4eab\u7684\uff08\uff1f\uff09 \u6587\u5316\u662f\u4e60\u5f97\u7684\uff1a\u6fe1\u5316\u662f\u4ee3\u9645\u4f20\u627f\uff0c\u6db5\u5316\u662f\u4e0d\u540c\u6587\u5316\u63a5\u89e6 \u6587\u5316\u662f\u8c61\u5f81\u7684\uff1a\u4eba\u7c7b\u884c\u4e3a\u6e90\u4e8e\u5bf9\u8c61\u5f81\u7b26\u53f7\u7684\u8fd0\u7528\uff0c\u201c\u98ce\u8bed\u8005\u201d \u6587\u5316\u662f\u6574\u5408\u7684\uff1a\u5171\u4eab\u7684\u6838\u5fc3\u4ef7\u503c\u5f62\u5851\u201c\u6587\u5316\u6a21\u5f0f\u201d</p> \u67cf\u5a01\u590f\u5bfa\u4e4b\u4e89 <p>\u67cf\u5a01\u590f\u5bfa\u4e4b\u4e89 = \u6cf0\u56fd\u548c\u67ec\u57d4\u5be8\u4e4b\u95f4\u7684 \u9886\u571f\u4e89\u7aef\u3002</p> <ul> <li>\u5bfa\u5e99\uff1a\u67cf\u5a01\u590f\u5bfa\uff08Preah Vihear Temple\uff09\uff0c11\u4e16\u7eaa\u9ad8\u68c9\u5e1d\u56fd\u5efa\u9020\uff0c\u4f4d\u4e8e\u6cf0\u67ec\u8fb9\u5883\u5c71\u5730\u3002</li> <li>\u8d77\u56e0\uff1a1962\u5e74\u56fd\u9645\u6cd5\u9662\u88c1\u51b3\u5bfa\u5e99\u5c5e\u4e8e\u67ec\u57d4\u5be8\uff0c\u4f46\u5468\u8fb94.6\u5e73\u65b9\u516c\u91cc\u571f\u5730\u4e3b\u6743\u672a\u660e\u786e\u3002</li> <li>\u5bfc\u706b\u7d22\uff1a2008\u5e74\u5bfa\u5e99\u88ab\u5217\u4e3a\u4e16\u754c\u6587\u5316\u9057\u4ea7\uff0c\u6cf0\u56fd\u53cd\u5bf9\uff0c\u51b2\u7a81\u5347\u7ea7\u3002</li> <li>\u7ed3\u679c\uff1a2013\u5e74\u56fd\u9645\u6cd5\u9662\u518d\u6b21\u5224\u5b9a\uff0c\u5bfa\u5e99\u53ca\u9644\u8fd1\u5730\u533a\u5f52\u67ec\u57d4\u5be8\u3002</li> </ul> <p>\ud83d\udc49 \u7b80\u5355\u8bf4\uff0c\u5c31\u662f\uff1a\u5bfa\u5e99\u5f52\u67ec\u57d4\u5be8\uff0c\u4f46\u8fb9\u754c\u5212\u5206\u957f\u671f\u5f15\u53d1\u6cf0\u67ec\u6469\u64e6\u3002</p> \u98ce\u8bed\u8005 <p>\u98ce\u8bed\u8005 (Windtalkers) \u6700\u8457\u540d\u7684\u662f\u6307 \u4e8c\u6218\u671f\u95f4\u7684\u201c\u7eb3\u74e6\u970d\u5bc6\u7801\u901a\u4fe1\u5458\u201d\u3002</p> <ul> <li>\u7f8e\u56fd\u62db\u52df\u4e86\u7eb3\u74e6\u970d\u65cf\uff08Navajo\uff09\u7684\u539f\u4f4f\u6c11\u58eb\u5175\uff0c\u7528\u4ed6\u4eec\u7684\u8bed\u8a00\u6765\u52a0\u5bc6\u519b\u4e8b\u901a\u8baf\u3002</li> <li>\u7eb3\u74e6\u970d\u8bed\u975e\u5e38\u590d\u6742\uff0c\u5916\u4eba\u51e0\u4e4e\u65e0\u6cd5\u7406\u89e3\uff0c\u5f53\u65f6\u6ca1\u6709\u6587\u5b57\u7cfb\u7edf\uff0c\u76f8\u5f53\u4e8e\u201c\u5929\u7136\u7684\u5bc6\u7801\u201d\u3002</li> <li>\u4ed6\u4eec\u5728\u592a\u5e73\u6d0b\u6218\u573a\uff08\u5982\u786b\u78fa\u5c9b\u6218\u5f79\uff09\u4e2d\u53d1\u6325\u4e86\u5de8\u5927\u4f5c\u7528\uff0c\u4fdd\u8bc1\u4e86\u7f8e\u519b\u901a\u8baf\u5b89\u5168\u3002</li> <li>2002\u5e74\u6709\u4e00\u90e8\u7535\u5f71\u5c31\u53eb \u300aWindtalkers\u300b\uff08\u4e2d\u6587\u8bd1\u540d\u300a\u98ce\u8bed\u8005\u300b\uff09\uff0c\u8bb2\u7684\u5c31\u662f\u8fd9\u6bb5\u5386\u53f2\u3002</li> </ul> <p>\u6bd4\u8f83\u89c2\uff1a\u5171\u65f6\u6027\u6bd4\u8f83\u548c\u5386\u53f2\u6027\u6bd4\u8f83 \u6574\u4f53\u89c2\uff1a\u628a\u4eba\u7c7b\u7684\u4f53\u8d28\u548c\u884c\u4e3a\u7b49\u6240\u6709\u65b9\u9762\u8054\u7cfb\u8d77\u6765 \u6587\u5316\u76f8\u5bf9\u89c2\uff1a\u4e0d\u80fd\u7528\u666e\u904d\u3001\u5171\u540c\u3001\u7edd\u5bf9\u7684\u6807\u51c6\u8861\u91cf\u4e00\u79cd\u6587\u5316\u7684\u4ef7\u503c</p> <p>\u4e3b\u4f4d\uff08\u6211\u4eec\uff09\u3001\u5ba2\u4f4d\uff08\u4f60\u4eec\uff09\uff0c\u4e24\u4e2a\u4e0d\u540c\u7684\u89d2\u5ea6\u89c2\u5bdf\u4eba\u4eec\u7684\u601d\u60f3\u548c\u884c\u4e3a</p>"},{"location":"CourseNotes/Cultural%20Anthropolog/CAlec%2001/#_2","title":"\u201c\u597d\u5403 \u6587\u5316\u4e0e\u98df\u7269\u4e4b\u8c1c\u201d","text":"<ul> <li>\u6d3b\u7740\u7684\u60c5\u611f\u4ef7\u503c &gt; \u4f5c\u4e3a\u98df\u7269\u7684\u4ef7\u503c\uff1a\u966a\u4f34</li> <li>\u4f5c\u4e3a\u98df\u7269\u7684\u4ef7\u503c &gt; \u6d3b\u7740\u7684\u60c5\u611f\u4ef7\u503c\uff1a\u98df\u7269</li> </ul> <p>\u91cf\u5316\u7684\u5206\u6790\u4f53\u7cfb</p> <p>\u5317\u6781\u54c8\u96f7\u4eba\uff0c\u72d7\u4f5c\u4e3a\u62c9\u96ea\u6a47\u7684\u8fd0\u8f7d\u5de5\u5177\uff1a\u5de5\u5177\u6027\u4e5f\u80fd\u7f14\u7ed3\u60c5\u611f</p> <p>\u8bed\u8a00\u662f\u4eba\u7c7b\u7406\u89e3\u4e16\u754c\u7684\u65b9\u5f0f</p> <p>You are what you eat.</p> <p>\u5ba0\u7269\u7684\u4ef7\u503c\u4ece\u7269\u8d28\u529f\u80fd\u8f6c\u5411\u7cbe\u795e\u529f\u80fd \uff08\u9a6c\u65af\u6d1b\u7684\u9700\u6c42\u91d1\u5b57\u5854\uff09</p> <p>\u98df\u7269\u9002\u5e94\u4e0d\u540c\u5730\u533a\u7684\u53e3\u5473\u504f\u597d</p> <p>\u676d\u5dde\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u201c\u7f8e\u98df\u8352\u6f20\u201d\uff1f</p> <ol> <li>\u65c5\u6e38\u57ce\u5e02\uff0c\u9884\u5236\u83dc</li> <li>\u98df\u7269\u7684\u5730\u57df\u6027</li> <li>\u4e0d\u540c\u9636\u5c42\u7684\u8ba4\u77e5\u5dee\u5f02</li> <li>\u57ce\u5e02\u6807\u7b7e</li> </ol>"},{"location":"CourseNotes/Cultural%20Anthropolog/CAlec%2001/#_3","title":"\u4e2d\u534e\u6587\u5316\u7684\u7279\u70b9","text":"<p>\u4e00\u6761\u6761\u7684\u9610\u91ca\u53ea\u662f\u6587\u5316\u89c4\u5219\u7684\u5177\u8c61\u7684\u8bf4\u660e\uff0c\u4e0d\u80fd\u660e\u786e\u7684\u754c\u5b9a\u3002 \u65e0\u9650\u7684\u7ef4\u5ea6</p> <p>\u6587\u660e\u7684\u7279\u70b9\u672c\u8d28\u662f\u601d\u60f3\u53f2\u3002</p> <p>\u6587\u5316\u662f\u751f\u6d3b\u65b9\u5f0f\u6216\u751f\u4ea7\u65b9\u5f0f\uff0cculture</p> <p>\u6587\u5316\u662f\u4eba\u4e0e\u81ea\u7136\u7684\u5173\u7cfb\uff0c\u6587\u660e\u662f\u4eba\u76f8\u5bf9\u52a8\u7269\u7684\u5173\u7cfb</p> <p>\u5eb7\u5fb7\uff1a\u6587\u660e\u662f\u5916\u663e\u7684</p> <p>\u6587\u660e\u7684\u6d88\u901d\u4e0d\u662f\u4e00\u8e74\u800c\u5c31\uff0c\u800c\u662f\u957f\u65f6\u95f4\u4ee5\u975e\u81ea\u4e3b\u6587\u660e\u7684\u5f62\u6001\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u540e\uff0c\u88ab\u4e00\u6b21\u6b21\u5165\u4fb5\u4e00\u6b21\u6b21\u8986\u76d6\uff0c\u53c8\u6ca1\u6709\u4ea7\u751f\u539f\u751f\u7684\u653f\u6743\u6216\u6062\u590d\u539f\u751f\u7684\u6587\u5316\uff0c\u6162\u6162\u7184\u706d\u3002</p> <p>\u9057\u5fd8\u4e0e\u6b7b\u4ea1</p>"},{"location":"CourseNotes/Engineering%20Graphics/EG01/","title":"\u70b9\u7ebf\u9762\u7684\u6295\u5f71","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 762 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Engineering%20Graphics/EG01/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u6c34\u5e73\u6295\u5f71\uff0c\u6b63\u9762\u6295\u5f71\uff0c\u4fa7\u9762\u6295\u5f71\uff0c\u540c\u540d\u6295\u5f71\uff0c\u91cd\u5f71\u70b9\uff0c\u8ff9\u7ebf\uff08\u4e0d\u4e00\u5b9a\u6709\uff09 \u6c34\u5e73\u7ebf\uff0c\u6b63\u5e73\u7ebf\uff0c\u4fa7\u5e73\u7ebf\uff1b\u94c5\u5782\u7ebf\uff0c\u6b63\u5782\u7ebf\uff0c\u4fa7\u5782\u7ebf \u548c H\u3001V\u3001W \u9762\u7684\u5939\u89d2\uff1a\\(\\alpha\\), \\(\\beta\\), \\(\\gamma\\)</p>"},{"location":"CourseNotes/Engineering%20Graphics/EG01/#_2","title":"\u70b9\u3001\u7ebf\u3001\u9762","text":"<p>\u4e00\u822c\u4f4d\u7f6e\u7684\u7ebf/\u9762\uff0c\u7531\u4e24\u4e2a\u6295\u5f71\u5373\u53ef\u786e\u5b9a</p> <p>\u70b9\u5728\u7ebf\u4e0a\uff1a\u6295\u5f71\u90fd\u5728\u7ebf\u4e0a\uff0c\u4e14\u6bd4\u4f8b\u76f8\u540c</p> <p>\u5782\u76f4\u7684\u6027\u8d28\uff1a\u4e24\u6761\u76f8\u4e92\u5782\u76f4\u7684\u7ebf\uff0c\u5982\u679c\u4e00\u6761\u5e73\u884c\u4e8e\u9762 S\uff0c\u5219\u8fd9\u4e24\u6761\u7ebf\u5728\u9762 S \u4e0a\u7684\u6295\u5f71\u4e5f\u5782\u76f4\u3002</p> <p>\u4e24\u5e73\u9762\u5e73\u884c\uff1a\u4e24\u76f8\u4ea4\u76f4\u7ebf\u5206\u522b\u5e73\u884c\uff0c\u6216\u6709\u79ef\u805a\u6027\u7684\u90a3\u7ec4\u6295\u5f71\u5e73\u884c</p> <p>\u5e73\u9762\u4e0e\u76f4\u7ebf\u4ea4\u70b9\u7684\u4e24\u4fa7\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u53ef\u89c1\uff08\u7c97\u5b9e\u7ebf\uff09\u4e00\u4e2a\u4e0d\u53ef\u89c1\uff08\u7ec6\u865a\u7ebf\uff09\u3002\u7528\u7aef\u70b9\u91cd\u5f71\u70b9\u5224\u65ad\u3002</p>"},{"location":"CourseNotes/Engineering%20Graphics/EG01/#_3","title":"\u4f5c\u5782\u7ebf","text":"<p>\u4f5c\u4e24\u76f4\u7ebf\u7684\u516c\u5782\u7ebf\uff1f</p> <p>esp. \u901a\u8fc7\u5176\u4e2d\u4e00\u6761\u76f4\u7ebf\uff0c\u80fd\u5224\u65ad\u516c\u5782\u7ebf\u4e3a\u7279\u6b8a\u76f4\u7ebf\u3002</p> <p>e.g. \u4e00\u6761\u4e3a\u94c5\u5782\u7ebf\uff0c\u5219\u516c\u5782\u7ebf\u4e3a\u6c34\u5e73\u7ebf\uff0c\u516c\u5782\u7ebf\u4e0e\u53e6\u4e00\u6761\u76f4\u7ebf\u5728H\u9762\u7684\u6295\u5f71\u5782\u76f4\u3002</p> \u4f8b\u9898 <p></p> <p>\u8fc7\u70b9\u4f5c\u5e73\u9762\uff0c\u4e0e\u53e6\u4e00\u76f4\u7ebf\u5782\u76f4\uff1f</p> <p>\u8fc7\u70b9\u5206\u522b\u4f5c\u6c34\u5e73\u7ebf\u3001\u6b63\u5e73\u7ebf\uff0c\u5728\u8fd9\u4e24\u6761\u7ebf\u4e0a\u5206\u522b\u53d6\u4e00\u70b9\uff0c\u6784\u6210\u5e73\u9762\u3002</p> \u4f8b\u9898 <p></p> <p>\u8fc7\u70b9\u4f5c\u76f4\u7ebf\uff0c\u4e0e\u53e6\u4e00\u5e73\u9762\u5782\u76f4\uff1f</p> <p>\u627e\u5e73\u9762\u7684\u6c34\u5e73\u7ebf\uff0c\u6240\u4f5c\u76f4\u7ebf\u4e0e\u5176\u5728 H \u9762\u6295\u5f71\u5782\u76f4\uff0c\u5f97\u5230\u53e6\u4e00\u7aef\u70b9\u6c34\u5e73\u6295\u5f71\u7684\u8f68\u8ff9\uff1b</p> <p>\u627e\u5e73\u9762\u7684\u6b63\u5e73\u7ebf\uff0c\u6240\u4f5c\u76f4\u7ebf\u4e0e\u5176\u5728 V \u9762\u6295\u5f71\u5782\u76f4\uff0c\u5f97\u5230\u53e6\u4e00\u7aef\u70b9\u6b63\u9762\u6295\u5f71\u7684\u8f68\u8ff9\uff1b</p> <p>\u5728\u4e24\u6761\u8f68\u8ff9\u4e0a\u5404\u53d6\u4e00\u70b9\uff0c\u6ee1\u8db3\u957f\u5bf9\u6b63\uff0c\u5373\u4e3a\u53e6\u4e00\u7aef\u70b9\u3002</p> \u4f8b\u9898 <p></p> <p></p> <p>\u8fc7\u70b9\u4f5c\u5e73\u9762\uff0c\u4e0e\u53e6\u4e00\u5e73\u9762\u5782\u76f4\uff1f</p> <p>\u5148\u6839\u636e\u4e0a\u4e00\u6761\uff0c\u4f5c\u76f4\u7ebf\u4e0e\u53e6\u4e00\u5e73\u9762\u5782\u76f4\uff1b</p> <p>\u518d\u4efb\u53d6\u4e00\u70b9\uff0c\u6784\u6210\u5e73\u9762\u3002\u5782\u7ebf\u6240\u5728\u7684\u5e73\u9762\u4e00\u5b9a\u4e0e\u53e6\u4e00\u5e73\u9762\u5782\u76f4\u3002</p>"},{"location":"CourseNotes/Engineering%20Graphics/EG01/#_4","title":"\u6c42\u4ea4\u70b9","text":"<p>\u6c42\u76f4\u7ebf\u548c\u5e73\u9762\u7684\u4ea4\u70b9\uff1f</p> <p>esp. \u76f4\u7ebf\u4e3a\u7279\u6b8a\u4f4d\u7f6e\uff08\u5728\u67d0\u4e2a\u9762\u6295\u5f71\u79ef\u805a\u4e3a\u4e00\u6761\u7ebf\uff09\u6216\u5e73\u9762\u4e3a\u7279\u6b8a\u4f4d\u7f6e\u3002</p> <ol> <li>\u5e73\u9762\u7279\u6b8a\uff1a\u5728\u5e73\u9762\u79ef\u805a\u7684\u6295\u5f71\u9762\u786e\u5b9a\u4ea4\u70b9\uff0c\u6839\u636e\u7ebf\u5728\u53e6\u4e00\u4e2a\u9762\u4e5f\u786e\u5b9a\u4ea4\u70b9\u3002\u5224\u65ad\u53ef\u89c1\u6027\u3002</li> <li>\u76f4\u7ebf\u7279\u6b8a\uff1a\u5728\u76f4\u7ebf\u79ef\u805a\u7684\u6295\u5f71\u9762\uff0c\u8fc7\u9762\u4e0a\u4e00\u70b9\u4f5c\u76f4\u7ebf\u6295\u5f71\u70b9\u6240\u5728\u7684\u76f4\u7ebf\uff0c\u518d\u4f5c\u8fd9\u6761\u76f4\u7ebf\u5728\u53e6\u4e00\u4e2a\u9762\u7684\u6295\u5f71\uff0c\u7531\u6b64\u786e\u5b9a\u53e6\u4e00\u4e2a\u9762\u7684\u4ea4\u70b9\u3002</li> </ol> <p>\u6c42\u5e73\u9762\u548c\u5e73\u9762\u7684\u4ea4\u7ebf\uff1f</p> <p>esp. \u4e00\u4e2a\u5e73\u9762\u4e3a\u7279\u6b8a\u4f4d\u7f6e\u3002</p> <p>\u7531\u5e73\u9762\u79ef\u805a\u7684\u6295\u5f71\u9762\uff0c\u5224\u65ad\u4ea4\u70b9\u4f4d\u7f6e\uff1b</p> <p>\u5bf9\u9f50\u5230\u53e6\u4e00\u4e2a\u9762\u4e0a\u4e24\u5e73\u9762\u76f8\u4ea4\u7684\u533a\u57df\uff0c\u786e\u5b9a\u4ea4\u70b9\u4f4d\u7f6e\uff1b</p> <p>\u6b64\u65f6\u4e24\u5e73\u9762\u76f8\u4ea4\u90e8\u5206\u7684\u53ef\u89c1\u6027\u90fd\u4e0d\u786e\u5b9a\uff0c\u5224\u65ad\u53ef\u89c1\u6027\u3002</p> \u4f8b\u9898 <p></p> <p>\u6c42\u4e00\u822c\u4f4d\u7f6e\u76f4\u7ebf\u548c\u5e73\u9762\u7684\u4ea4\u70b9\uff1f</p> <p>\u5148\u5047\u8c61\u8fc7\u76f4\u7ebf\u7684\u94c5\u5782\u9762\uff0c\u6c42\u94c5\u5782\u9762\u548c\u5e73\u9762\u7684\u4ea4\u7ebf\u3002\u5373\u4ea4\u7ebf\u7684\u6c34\u5e73\u6295\u5f71\u4e3a\u5e73\u9762\u3001\u76f4\u7ebf\u6c34\u5e73\u6295\u5f71\u7684\u4ea4\u7ebf\u3002</p> <p>\u7531\u94c5\u5782\u9762\u4ea4\u7ebf\u7684\u6c34\u5e73\u6295\u5f71\uff0c\u5f97\u5230\u94c5\u5782\u9762\u4ea4\u7ebf\u7684\u6b63\u9762\u6295\u5f71\u3002</p> <p>\u4ea4\u70b9\u5728\u94c5\u5782\u9762\u4ea4\u7ebf\u4e0a\u3002\u7531\u6b63\u9762\u6295\u5f71\u786e\u5b9a\u4ea4\u70b9\u4f4d\u7f6e\u3002</p> \u4f8b\u9898 <p></p> <p>\u6c42\u4e0e V \u9762\u3001H \u9762\u7b49\u8ddd\u79bb\u70b9\u7684\u8f68\u8ff9\uff1f</p> <p>p23-25.</p> <p>\u6c42\u4fa7\u5782\u9762\u7684\u6b63\u9762\u6295\u5f71\uff1f</p> <p>p26-30(3).</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/0.%20%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/","title":"0. \u6570\u636e\u7ed3\u6784\u590d\u4e60","text":"<p>\u70b9\u51fb\u4e0b\u8f7d\u201c\u6570\u636e\u7ed3\u6784\u590d\u4e60\uff082016\u5e74\u4e0b\uff09.doc\u201d</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/","title":"1. \u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/#class-one","title":"Class One","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(f(n))\\):\u4e0a\u754c \\(\\Omega(f(n))\\):\u4e0b\u754c \\(\\Theta(f(n))\\):\u6700\u597d\u6700\u574f\u60c5\u51b5\u7684\u5e73\u5747   \\(o(f(n))\\):\u771f\u4e0a\u754c(\u6700\u574f\u60c5\u51b5\u4e0b\u4e0a\u754c)  </p> <p>nlogn \u63a8\u5bfc: \uff08\u8fd9\u4e00\u6bb5\u663e\u793a\u653e\u5f03\u4fee\u6539\u4e86\u3002\u3002\uff09 \\(\\(\\begin{aligned} T(n) &amp;= 2T\\left(\\frac{n}{2}\\right) + Cn \\\\[1.5ex] T(\\frac{n}{2}) &amp;= 2T(\\frac{n}{4}) + Cn \\\\[1.5ex] &amp;\\ \\, \\vdots \\\\ \\end{aligned}\\)\\)</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","title":"10. \u7f51\u7edc\u6d41\u95ee\u9898\u548c\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 648 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#compassclass-ten","title":":compass:Class Ten","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#network-flow-problems","title":"Network Flow Problems \u7f51\u7edc\u6d41\u95ee\u9898","text":"<p>\u57ce\u5e02\u6539\u9020\u6d89\u53ca\u5730\u4e0b\u7ba1\u7f51\u5de5\u7a0b\u3002\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6709\u4e0d\u540c\u7ba1\u9053\uff0c\u4e0d\u540c\u7ba1\u9053\u7684\u6d41\u91cf\u4e0d\u540c\uff0c\u7528\u6709\u5411\u56fe\u8868\u793a\u3002\u8981\u6c42\u8ba1\u7b97\u51fa\u6700\u5927\u6d41\u91cf\u3002 \u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p>\u904d\u5386\u56fe\uff0c\u627e\u5230\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5927\u6d41\u91cf\u4e3a\u7ba1\u9053\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002 \u7136\u540e\u6bcf\u6761\u8fb9\u51cf\u53bb\u53d6\u5230\u7684\u8def\u5f84\u6700\u5927\u6d41\u91cf\uff0c\u5269\u4f59\u56fe\u91cd\u65b0\u904d\u5386\u3002 \u76f4\u5230\u6ca1\u6709\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u65f6\uff0c\u5f97\u5230\u7684\u6d41\u91cf\u548c\u4e3a\u6700\u5927\u6d41\u91cf\u3002</p> <p>\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u9009\u62e9\u8def\u5f84\u65f6\u53ef\u80fd\u4e0e\u5176\u4ed6\u8def\u5f84\u51b2\u7a81\uff0c\u5bfc\u81f4\u5176\u4ed6\u8def\u5f84\u4e0a\u8def\u5f84\u88ab\u5220\u9664\u3002 \u4fee\u6539\uff1a\u5efa\u7acb\u53cd\u6094\u673a\u5236\uff0c\u67d0\u6761\u7ebf\u6bb5\u6d41\u5411\u53ef\u6539\u53d8\u3002 \u5177\u4f53\u64cd\u4f5c\uff1a</p> <p>\u5728\u67d0\u6761\u8def\u5f84\u5220\u9664\u540e\uff0c\u6dfb\u52a0\u6d41\u91cf\u76f8\u540c\u7684\u53cd\u5411\u8fb9\u3002\u76f8\u5f53\u4e8e\u5c06\u6765\u53ef\u4ee5\u53cd\u6094\uff0c\u91cd\u65b0\u7ecf\u8fc7\u88ab\u5220\u9664\u7684\u8fb9\u3002 \u76f4\u5230\u6240\u6709\u548c\u8d77\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u6307\u5411\u8d77\u70b9\uff0c\u7ec8\u6b62\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T=O(f\\cdot \\left| E\\right|)\\)\uff0cf \u662f\u6700\u5927\u6d41\u91cf \u6539\u8fdb\uff1a</p> <ol> <li>\u4e0b\u4e00\u6b65\u6709\u4e0d\u540c\u9009\u62e9\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u6d41\u91cf\u5927\u7684\u8fb9\u3002</li> <li>\u6bcf\u6b21\u9009\u62e9\u8fb9\u6700\u5c11\u3002</li> </ol> <p>\u8fdb\u4e00\u6b65\u5f3a\u5316\uff1a\u6700\u5927\u6d41\u91cf\u53ef\u80fd\u6709\u4e0d\u540c\u8def\u5f84\uff0c\u5404\u4e2a\u8def\u5f84\u901a\u8fc7\u65f6\u6709\u4ee3\u4ef7\u3002\u9700\u8981\u627e\u5230\u6700\u5927\u6d41\u91cf\u4e14\u6700\u4f4e\u4ee3\u4ef7\u7684\u8def\u5f84\u3002</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#mininum-spanning-tree","title":"\u6700\u5c0f\u751f\u6210\u6811(Mininum Spanning Tree)","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u6743\u91cd\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002 \u8d2a\u5fc3\u7b97\u6cd5(Greedy Method) \u6570\u5b66\u4f18\u5316\uff1a\u7ed9\u5b9a\u51fd\u6570\u548c\u533a\u95f4\uff0c\u6c42\u51fd\u6570\u5728\u533a\u95f4\u4e0a\u7684\u6700\u5927\u503c\u3002\u968f\u673a\u9009\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u8fd9\u4e2a\u70b9\u7684\u503c f(x0)\u3002\u5230\u5de6\u53f3 x0+d\uff0cx0-d\uff0c\u53d6\u4e09\u4e2a\u503c\u4e2d\u6700\u5927\u503c\u3002\u6bcf\u6b21\u627e\u5de6\u53f3 d \u7684\u8ddd\u79bb\u3002\u5f53\u5de6\u53f3\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u503c\u65f6\u505c\u6b62\u3002 \u8fd9\u79cd\u65b9\u6cd5\u53d6\u5230\u5c40\u90e8\u6700\u4f18\u89e3\u3002 \u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6bcf\u6b21\u79fb\u52a8\u65f6\u6709\u4e00\u5b9a\u6982\u7387\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002</p> <p>\u5982\u4f55\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff1f</p> <ol> <li>prim\uff1a\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\u3002 <p>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\uff0c\u627e\u548c\u5b83\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\u52a0\u5165\u3002 \u518d\u627e\u548c\u8fd9\u4e2a\u5c40\u90e8\u7684\u6811\u548c\u5916\u90e8\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\uff08\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u5c40\u90e8\u7684\u6811\u4e2d\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\u5728\u6811\u5916\uff09\uff0c\u52a0\u5165\u3002 \u91cd\u590d\u627e\u6700\u77ed\u8fb9\u3001\u52a0\u5165\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5728\u6811\u5185\u3002</p> </li> <li>kruskal\uff1a\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff08\u9009\u62e9 n-1 \u6761\u8fb9\uff0c\u4f7f\u5f97\u5b83\u6784\u6210\u6811\u4e14\u6743\u503c\u548c\u6700\u5c0f\uff09\u3002 <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\u4ece\u6700\u77ed\u8fb9\u5f00\u59cb\uff0c\u6bcf\u6b21\u653e\u4e00\u6761\u8fb9\u8fdb\u53bb \u68c0\u67e5\u662f\u5426\u6784\u6210\u56de\u8def\uff08\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u8fde\u901a\uff09\uff0c\u5982\u679c\u6784\u6210\u56de\u8def\u5219\u8df3\u8fc7\u3002 \u5f53\u653e\u5165\u7684\u8fb9\u6570\u5230\u8fbe n-1 \u65f6\u505c\u6b62\u3002</p> </li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#dfs","title":"DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"C<pre><code>void dfs(\u70b9 v) {\n  vis[v] = true;\n  for (\u4e0ev\u76f8\u8fde\u7684\u70b9w) {\n    if (!vis[w]) {\n      dfs(w);\n    }\n  }\n}\n</code></pre> <p>\u5982\u679c\u6574\u4f53\u4e0d\u8fde\u901a\uff0c\u5728\u5916\u9762\u5957 for \u5faa\u73af\u904d\u5386\u56fe\u4e2d\u6240\u6709\u70b9\u3002</p> C<pre><code>void dfsConn(\u56fe g) {\n  for (g\u4e2d\u7684\u70b9v) {\n    if (!vis[v]) {\n      dfs(v);\n      // ????\n    }\n  }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/","title":"11. \u53cc\u8fde\u901a\u56fe\u548c\u6b27\u62c9\u56de\u8def","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 479 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#class-eleven","title":"Class Eleven","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_1","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"C<pre><code>void dfs(\u70b9v) {\n    for (\u4e0ev\u76f8\u90bb\u7684\u70b9w) {\n        if (w\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7) {\n            dfs(w);\n        }\n    }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_2","title":"\u5224\u65ad\u8fde\u901a\u5757","text":"C<pre><code>void solve(\u56fe g) {\n    for (g\u4e2d\u7684\u70b9v) {\n        if (\u6ca1\u8bbf\u95ee\u8fc7v) {\n            dfs(v);\n            cnt++;\n        }\n    }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_3","title":"\u53cc\u8fde\u901a\u56fe\u95ee\u9898","text":"<p>\u53cc\u8fde\u901a\uff1a\u4efb\u610f\u5220\u9664\u8282\u70b9\u540e\uff0c\u56fe\u4e0d\u5206\u88c2\u6210\u4e24\u4e2a \u5220\u9664\u540e\u56fe\u5206\u88c2\u7684\u70b9\u6210\u4e3a articulation\uff08\u5173\u8282\u70b9\uff09\uff0c\u6ca1\u6709 articulation \u7684\u56fe\u662f biconnected\u3002 \u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e2d\u95f4\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\uff0c\u4e5f\u662f\u53cc\u8fde\u901a\u56fe\u3002 biconnected component: a maximum biconnected subgraph. \u5173\u952e\u662f\u627e\u5230\u5173\u8282\u70b9</p> <p>dfs \u5bf9\u56fe\u8fdb\u884c\u6574\u7406\uff0c\u6839\u636e dfs \u987a\u5e8f\u5f62\u6210\u6811\u3002\u8d77\u70b9\u662f\u6839\u7ed3\u70b9\uff0c\u901a\u8fc7 v \u627e\u5230 w\uff0c\u5219 v \u662f w \u7684\u7236\u8282\u70b9\u3002 \u8f6c\u5316\u540e\u7f3a\u5c11\u90e8\u5206\u8fb9\uff0c\u5728\u6811\u4e2d\u8865\u4e0a\u3002 \u8fd9\u4e9b\u65b0\u6dfb\u52a0\u7684\u8fb9\u4e00\u5b9a\u8fde\u63a5\u7956\u5148\u548c\u540e\u88d4\uff0c\u6210\u4e3a back edge\u3002\uff08\u5982\u679c\u8fde\u63a5\u4e0d\u540c\u5206\u652f\u7684\u8fb9\uff0c\u4e00\u5b9a\u901a\u8fc7\u8fd9\u6761\u8fb9 dfs \u65f6\u76f4\u63a5\u8bbf\u95ee\u5230\u3002\uff09</p> <p>\u4ec0\u4e48\u70b9\u662f\u5173\u8282\u70b9\uff1f</p> <ol> <li>\u81f3\u5c11\u542b\u4e24\u4e2a\u513f\u5b50\u7684\u6839\u8282\u70b9</li> <li>\u6240\u6709\u513f\u5b50\u90fd\u6ca1\u6709\u5411\u4e0a\u7684\u56de\u8fb9\u3002</li> </ol> <p>\u540c\u4e00\u5206\u652f\u4e0a\u7528\u6570\u5b57\u8868\u793a\u5c42\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u5c42\u7ea7\u8d8a\u5927\u3002\u56de\u8fb9\u5c06\u4f4e\u5c42\u6b21\u4e0e\u9ad8\u5c42\u6b21\u7684\u5173\u7cfb\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u7684\u5c42\u7ea7 num\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u548c\u6240\u6709\u513f\u5b50\u7684\u6700\u9ad8\u5c42\u7ea7 low\u3002 \u5f53\u5b58\u5728\u4e00\u4e2a\u5206\u652f\u7684 low&lt; num\uff0c\u8be5\u70b9\u4e3a\u5173\u8282\u70b9\u3002</p> Text Only<pre><code>low(u) = min{num(u),\n             min{low(w) | w is a child of u},\n             min{num(w) | (u,w) is a back edge} }\n</code></pre> <p>u is an articulation point iff:</p> <ol> <li>u is the root and has et least 2 children</li> <li>u is not the root, and has at least 1 child such that low(child) &gt;= num(u)</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_4","title":"\u6b27\u62c9\u56de\u8def\u95ee\u9898","text":"<p>\u6b27\u62c9\u56de\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u5c06\u6240\u6709\u8fb9\u8d70\u4e00\u904d\u5e76\u56de\u5230\u8d77\u70b9\u3002 \u7ed3\u8bba\uff1a\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002 \u6240\u6709\u70b9\u7684\u5ea6\u4e4b\u548c\u4e00\u5b9a\u662f\u5076\u6570\u3002 \u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u6709\u4e24\u4e2a\uff0c\u4e00\u5b9a\u80fd\u4ece\u5176\u4e2d\u4e00\u4e2a\u70b9\u51fa\u53d1\u8d70\u8fc7\u6240\u6709\u8fb9\u5230\u8fbe\u53e6\u5916\u4e00\u4e2a\u70b9\u3002</p> <p>\u600e\u4e48\u6784\u9020\u89e3\uff1f</p> <p>\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1 dfs\uff0c\u6700\u540e\u4e00\u5b9a\u56de\u5230\u8d77\u70b9\uff0c\u4f46\u4e0d\u4e00\u5b9a\u628a\u6240\u6709\u8fb9\u8d70\u5b8c\u3002 \uff08\u6bcf\u4e2a\u70b9\u5165\u548c\u51fa\u7684\u6b21\u6570\u4e00\u5b9a\u76f8\u7b49\uff09 \u5220\u9664 dfs \u56de\u5230\u8d77\u70b9\u540e\u7ecf\u8fc7\u7684\u8def\uff0c\u5269\u4e0b\u7684\u6240\u6709\u70b9\u7684\u5ea6\u8fd8\u662f\u90fd\u4e3a\u5076\u6570\u3002 \u5728\u8def\u5f84\u4e0a\u9009\u53d6\u8fd8\u6709\u8fb9\u7684\u70b9\u7ee7\u7eed dfs\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u8d70\u5b8c\u3002</p> <p>\u54c8\u5bc6\u5c14\u987f\u56de\u8def\u95ee\u9898\uff08\u65c5\u884c\u5546\u95ee\u9898\uff09 \u5c06\u6240\u6709\u70b9\u90fd\u8d70\u4e00\u904d</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/","title":"12. \u5e0c\u5c14\uff0c\u5806\uff0c\u5f52\u5e76\uff0c\u5feb\u901f\u6392\u5e8f","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 811 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#banjoclass-twelve","title":":banjo:Class Twelve","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_1","title":"\u6392\u5e8f","text":"<p>\u7b80\u5355\u6392\u5e8f\uff1a</p> <ol> <li>\u9009\u62e9\u6392\u5e8f seection\uff1a\u6bcf\u6b21\u627e\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5728\u672b\u5c3e</li> <li>\u4ea4\u6362\u6392\u5e8f exchange\uff1a\u4ece\u5934\u5230\u5c3e\u904d\u5386\uff0c\u770b\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u662f\u5426\u7b26\u5408\uff0c\u4f4d\u7f6e\u4e0d\u5bf9\u5219\u4ea4\u6362\uff08\u5192\u6ce1\uff09</li> <li>\u63d2\u5165\u6392\u5e8f insertion\uff1a\u6bcf\u6b21\u4e4b\u524d\u7684\u5143\u7d20\u90fd\u6392\u597d\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4f7f\u5176\u4fdd\u6301\u6392\u5e8f\u7684\u7279\u6027\u3002    \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n^2)    \u4f46\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u540c\uff0c\u9009\u62e9\u6392\u5e8f\u4e3a O(n^2)\uff0c\u5192\u6ce1\u6392\u5e8f\u53ef\u901a\u8fc7\u6807\u7b7e\u4f18\u5316\uff0c\u63d2\u5165\u6392\u5e8f\u6700\u4f18\u4e3a O(n)\u3002</li> </ol> <p>inversion \u9006\u5e8f\u5bf9\uff1a\u5927\u7684\u5728\u524d\u5c0f\u7684\u5728\u540e\uff0c\u6210\u4e3a\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002 \u5982\u679c\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217\uff0c\u6700\u591a n(n-1)/2 \u4e2a\u9006\u5e8f\u5bf9\uff0c\u5e73\u5747\u7ea6 nn/4 \u4e2a\u9006\u5e8f\u3002 \u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u5bf9\u8c03\uff0c\u6539\u53d8\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002 \u6392\u5e8f\u7b97\u6cd5\u7a81\u7834\uff1a\u8df3\u7740\u6bd4\u8f83 \u5e0c\u5c14\u6392\u5e8f\uff1a\u5206\u7ec4\u6bd4\u8f83+\u63d2\u5165\u6392\u5e8f</p> <p>\u5206\u6cbb\u6cd5\uff1a\u5f52\u5e76\u6392\u5e8f T(n)=2T(n/2)+Cn =&gt; T(n)=O(nlogn)</p> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u9009\u62e9 pivot\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002</p> <p>\u5806\u6392\u5e8f\uff1a\u6784\u5efa\u6811\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5927\u540e\u3002\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u662f\u7b2c\u4e8c\u5927\u3002</p> <p>\u6876\u6392\u5e8f\uff1a</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5148\u6309\u4e2a\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u6392\u6210\u5e8f\u5217\u3002\u518d\u6309\u5341\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u518d\u6309\u767e\u4f4d\u6570\u2026\u2026\u6700\u540e\u6392\u6210\u4ece\u5c0f\u5230\u5927\u7684\u5e8f\u5217\u3002 \u5faa\u73af\u7684\u6b21\u6570\u7b49\u4e8e\u4f4d\u6570\u3002</p> <p>\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\uff1a\u76f8\u7b49\u7684\u5143\u7d20\u6392\u5e8f\u524d\u540e\u987a\u5e8f\u662f\u4e0d\u662f\u76f8\u540c\u3002</p> <p>\u63d2\u5165\u6392\u5e8f\u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f.\u5982\u679c\u8f93\u5165\u6570\u636e\u57fa\u672c\u6392\u597d,\u5219\u6392\u5e8f\u65f6\u95f4\u77ed.</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_2","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u8de8\u533a\u57df\u6bd4\u8f83:\u5206\u7ec4</p> <p>\u5c06\u6570\u636e\u95f4\u9694\u5206\u7ec4,\u6bcf\u7ec4\u6392\u5e8f \u51cf\u5c11\u7ec4\u6570,\u518d\u5c06\u6bcf\u7ec4\u6392\u5e8f \u7ee7\u7eed\u51cf\u5c11\u5206\u7ec4,\u76f4\u5230\u53ea\u5206\u4e00\u7ec4,\u5b8c\u6210\u6392\u5e8f</p> <p>\u82e5\u6570\u636e\u57fa\u672c\u6709\u5e8f,\u63d2\u5165\u6392\u5e8f\u65f6\u95f4\u63a5\u8fd1\u7ebf\u6027. \u5206\u7ec4\u591a,\u5355\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e;\u5206\u7ec4\u5c11\u65f6,\u6570\u636e\u63a5\u8fd1\u6709\u5e8f,\u65f6\u95f4\u7ebf\u6027. \u5f00\u59cb\u65f6\u5206 k \u7ec4,\u7ec4\u5185\u6709\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5168\u90e8\u6709\u5e8f\u7684 1/k.</p> C<pre><code>void shellsort(int arr[], int n) {\n    for (int step = n / 2; step &gt; 0; step /= 2) {  // step\u8868\u793a\u6b65\u957f\n        for (int i = step; i &lt; n; i++) {\n            int tmp = arr[i];\n            int j;\n            for (j = i; j &gt;= step; j -= step) {  // \u63d2\u5165\u6392\u5e8f\n                if (tmp &lt; arr[j - step])\n                    arr[j] = arr[j - step];\n                else\n                    break;\n            }\n            arr[j] = tmp;\n        }\n    }\n}\n</code></pre> <p>\u6309<code>step = n / 2; step &gt; 0; step /= 2</code>\u5206\u7ec4,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6:\\(O(N^2)\\) Hibbard's Increment Sequence: \u6309\\(step=2^k-1\\)\u5206\u7ec4</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_3","title":"\u5806\u6392\u5e8f","text":"<p>\u65b9\u6cd5 1(\u4e0d\u597d)</p> C<pre><code>void heapsort(int arr[]) {\n    BuildHeap(H);\n    for (int i = 0; i &lt; n; i++)\n        tmpH[i] = DeleteMin(H);\n    for (int i = 0; i &lt; n; i++)\n        H[i] = tmpH[i];\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6:\\(N\\log N-N\\log\\log N\\)</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_4","title":"\u5f52\u5e76\u6392\u5e8f(\u5206\u6cbb\u6cd5)","text":"<p>\u5148\u5206\u522b\u6392\u5e8f,\u518d merge. \u65f6\u95f4\u590d\u6742\u5ea6: \u5206\u6210\u4e24\u7ec4:\\(O(1)\\) \u9012\u5f52\u5c06\u4e24\u7ec4\u5206\u522b\u6392\u5e8f:\\(2T(N/2)\\) merge: \\(O(N)\\)</p> <p>quicksort: merge \u7684\u6b65\u9aa4\u51cf\u5c0f\u65f6\u95f4.\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4. \u8fd9\u6837\u5206\u7ec4\u4e0d\u4e00\u5b9a\u662f n/2 \u7684\u4e24\u7ec4,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(i)+T(N-i)\\)</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u907f\u514d\u6bcf\u6b21\u8c03\u7528\u751f\u6210temp\u4e34\u65f6\u6570\u7ec4,\u5728\u5916\u90e8\u540c\u4e00\u7533\u8bf7temp,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid merge(int a[],\n           int left,\n           int leftend,\n           int right,\n           int temp[]) {  // \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\n    int i, j, k;\n    i = left;\n    j = leftend + 1;\n    k = left;\n\n    while (i &lt;= leftend &amp;&amp; j &lt;= right) {\n        if (a[i] &lt;= a[j])\n            temp[k++] = a[i++];\n        else\n            temp[k++] = a[j++];\n    }\n    while (i &lt;= leftend)\n        temp[k++] = a[i++];\n    while (j &lt;= right)\n        temp[k++] = a[j++];\n}\n\n// \u8bbe\u8ba1\u6210\u9012\u5f52\u51fd\u6570,\u5fc5\u987b\u5c06\u8fb9\u754c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid mergesort(int a[],\n               int left,\n               int right,\n               int temp[]) {  // \u6392\u5e8f\uff0c\u7528temp\u4e34\u65f6\u5b58\u50a8\n    if (left &gt;= right)\n        return;\n\n    int mid = (left + right) / 2;\n    mergesort(a, left, mid, temp);\n    mergesort(a, mid + 1, right, temp);\n    merge(a, left, mid, right, temp);\n    for (int i = left; i &lt;= right; i++) {\n        a[i] = temp[i];\n    }\n}\n\nint main() {\n    int a[101], tempa[101];\n    int n;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;a[i]);\n    }\n    mergesort(a, 0, n - 1, tempa);\n\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"%d \", a[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83 \u548c\\(T(n)=2T(n/2)+Cn\\)\u6bd4\u8f83 \\(T(n)=3T(n/2)+Cn\\): \u66f4\u590d\u6742 \\(T(n)=2T(n/3)+Cn\\): \u66f4\u7b80\u5355</p> <p>\u4e34\u65f6\u6570\u7ec4</p> <ol> <li>\u5916\u90e8\u7edf\u4e00\u7533\u8bf7,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165</li> <li>\u6bcf\u6b21\u5408\u5e76\u65b0\u7533\u8bf7\u7a7a\u95f4</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u7a7a\u95f4(\u590d\u6742)</li> <li>\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u6570\u7ec4,\u4e00\u4e2a\u6392\u5e8f\u65f6\u5360\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4</li> <li>\u4e09\u4e2a\u5df2\u6392\u5e8f\u6570\u7ec4\u5408\u5e76,\u7528\u5806(??)</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_5","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5173\u952e:\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4.</p> <p>\u96be\u70b9:</p> <ol> <li>\u600e\u4e48\u9009\u62e9 pivot</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u6570\u7ec4</li> </ol> <p>\u9009\u62e9 pivot \u7684\u65b9\u6cd5:</p> <ol> <li>\u9009\u7b2c\u4e00\u4e2a(\u4e0d\u597d)</li> <li>\u968f\u673a\u9009\u62e9(\u4ecd\u4e0d\u597d)</li> <li>\u5934,\u5c3e,\u4e2d\u95f4\u503c\u4e09\u4e2a\u4e2d\u9009\u4e2d\u95f4\u503c</li> <li>\u4e94\u7b49\u5206\u70b9\u9009\u4e2d\u95f4\u503c</li> <li>\u968f\u4fbf\u9009\u4e00\u4e2a\u5206\u7ec4,\u770b\u4e24\u7ec4\u662f\u5426\u5747\u5300(\u53ef \u00bc \u4e3a\u754c),\u82e5\u5747\u5300\u5219\u7ee7\u7eed\u8fdb\u884c,\u82e5\u4e0d\u5747\u5300\u5219\u91cd\u6765(\u6309\u671f\u671b\u4e3a\u505a\u4e24\u6b21)</li> </ol> <p>\u8499\u5854\u5361\u6d1b:\u505a\u7279\u5b9a\u6b21\u6570,\u505a\u5b8c\u540e\u505c\u6b62,\u4e0d\u7ba1\u662f\u5426\u7b26\u5408\u6700\u4f73\u6761\u4ef6 \u62c9\u65af\u7ef4\u52a0\u65af:\u6309\u7279\u5b9a\u8981\u6c42,\u82e5\u4e00\u76f4\u4e0d\u7b26\u5408\u8981\u6c42\u5219\u4e00\u76f4\u8fdb\u884c</p> <p>\u4f46\u662f,\u6570\u7ec4\u5c0f\u65f6\u9009 pivot \u5feb\u6392\u6548\u7387\u4f4e. \u5728\u6570\u7ec4\u89c4\u6a21\u5c0f\u4e8e\u9608\u503c\u65f6,\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u6392\u5e8f.</p> <p>\u600e\u4e48\u539f\u5730\u5206\u7c7b?</p> <p>\u4e24\u8fb9\u626b\u63cf</p> <p>\u57fa\u51c6\u5143\u7d20\u653e\u5728\u6700\u540e \u6307\u9488 i \u653e\u5728\u5f00\u5934,\u6bd4 pivot \u5c0f\u65f6\u5411\u53f3\u8d70,&gt;=\u65f6\u505c\u4e0b \u6307\u9488 j \u653e\u5728\u7ed3\u5c3e,\u6bd4 pivot \u5927\u65f6\u5411\u5de6\u8d70,&lt;=\u65f6\u505c\u4e0b \u90fd\u505c\u4e0b\u65f6\u4ea4\u6362 i \u548c j \u7684\u503c \u76f4\u5230 i==j \u6216 i&gt;j,\u5c06 pivot \u653e\u5728\u6700\u7ec8\u4f4d\u7f6e</p> <p>\u4e00\u8fb9\u626b\u63cf</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f\u5c0f\u7684\u4e00\u5806\u548c\u5927\u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u5927,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u5c0f,\u548c\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362(\u9700\u8981\u6807\u8bb0\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e)</p> <p>\u8377\u5170\u65d7\u95ee\u9898 \u4e09\u79cd\u6570\u636e\u6392\u5e8f</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f R \u7684\u4e00\u5806,G \u7684\u4e00\u5806,B \u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u662f B,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u662f G,\u548c B \u5806\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6362 \u5982\u679c\u6307\u9488\u5904\u662f R,\u6307\u9488\u5904\u5143\u7d20\u653e\u5728 G \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,G \u5806\u7b2c\u4e00\u4e2a\u653e\u5728 B \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,B \u5806\u7b2c\u4e00\u4e2a\u653e\u5728\u6307\u9488\u4f4d\u7f6e</p> <p>\u6307\u9488\u79fb\u52a8\u8981\u6c42:\u7ef4\u62a4\u626b\u8fc7\u7684\u533a\u57df\u7b26\u5408\u8981\u6c42. \u53cc\u8fb9\u626b\u63cf:\u5de6\u6307\u9488\u5de6\u4fa7\u90fd\u5c0f,\u53f3\u6307\u9488\u53f3\u4fa7\u90fd\u5927 \u4e00\u8fb9\u626b\u63cf:\u6307\u9488\u5de6\u4fa7\u662f\u5206\u597d\u7684\u5806</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/","title":"13. \u5faa\u73af\u4e0d\u53d8\u5f0f\u548c\u533a\u5757\u94fe","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 575 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#class-thirteen","title":"Class Thirteen","text":"<p>\u5faa\u73af\u4e0d\u53d8\u5f0f</p> <p>cutoff\uff1a\u5f53\u6570\u7ec4\u4e2d\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u8be5\u503c\u65f6\uff0c\u4e0d\u518d\u8c03\u7528\u9012\u5f52\uff08\u9632\u6b62\u5c0f\u6570\u7ec4\u65f6\u6548\u7387\u4f4e\uff09</p> Text Only<pre><code>int median3(int a[], int left, int right) {\n    if (a[left] &lt; a[mid])\n        \u4ea4\u6362\u5de6\uff0c\u4e2d\uff1b\n    if (a[left] &lt; a[right])\n        \u4ea4\u6362\u5de6\uff0c\u53f3\uff1b\n    if (a[mid] &lt; a[right])\n        \u4ea4\u6362\u4e2d\uff0c\u53f3\uff1b\n    // \u6b64\u65f6\u5df2\u8fbe\u5230\u5de6 &lt; \u4e2d &lt; \u53f3\n    \u4ea4\u6362\u4e2d\uff0c\u53f3-1\uff1b // \u5c06pivot \u653e\u5728\u7aef\u4f4d\n    return a[right - 1];\n}\n</code></pre> Text Only<pre><code>void Qsort(int a[], int let, int right) {\n    if (left + cutoff &lt;= right) {\n        for ( ; ; ) {\n            while (a[++i] &lt; pivot) ;\n            while (a[- -j] &gt; pivot) ;\n            if (i &lt; j) swap(i, j);\n            else break;\n        }\n    } else {\n        InsertionSort(a);\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a T(N) = T(i) + T(N-i-1) + cN \u6700\u574f\uff1aT(N) = T(N-1) + cN, T(N) = O(N^2) \u6700\u597d\uff1aT(N) = 2T(N/2) +cN, T(N) = O(N logN)</p> <p>\u95ee\u9898\uff1a\u7ed9 n \u4e2a\u6574\u6570\uff0c\u6c42\u7b2c k \u5927\u7684\u6570</p> <ol> <li>\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53d6\u7b2c k \u4e2a -&gt; O(N logN)</li> <li>\u627e\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002\u5982\u679c\u5927\u7684\u5143\u7d20\u6709 k-1 \u4e2a\uff0c\u5219\u7b2c k \u4f4d\u57fa\u51c6\u5143\u7d20\uff1b\u5982\u679c\u5c0f\u4e8e k-1 \u4e2a\uff0c\u4ece\u5927\u7684\u5143\u7d20\u4e2d\u627e\uff1b\u2026\u2026\u5c0f\uff0c\u4ece\u5c0f\u7684\u5143\u7d20\u4e2d\u627e -&gt; O(1+\u00bd+\u00bc+\u2026N)=O(N)</li> </ol> <p>\u5927\u7ed3\u6784\u7684\u6392\u5e8f\u95ee\u9898 \u548c\u6570\u7ec4\u6392\u5e8f\u4e0d\u540c\uff0c\u5927\u7ed3\u6784\u4ea4\u6362\u7684\u4ee3\u4ef7\u9ad8\u3002\u7528 keyword \u4ee3\u66ff\uff0c\u6839\u636e\u5927\u7ed3\u6784\u7684\u6027\u8d28\u5bf9 keyword \u6392\u5e8f\u3002 \u5173\u952e\u95ee\u9898\uff1a\u7ed9\u5b9a\u7b2c\u51e0\u4e2a\u5143\u7d20\u653e\u5230\u7f16\u53f7\u51e0\u7684\u4f4d\u7f6e\uff0c\u600e\u4e48\u91cd\u65b0\u7f16\u6392\u6570\u7ec4\uff1f\uff1f</p> <p>\u8bc1\u660e\uff1a\u901a\u8fc7\u6bd4\u8f83\u3001\u4ea4\u6362\uff0c\u4e0d\u53ef\u80fd\u627e\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e O(N logN)\u7684\u7b97\u6cd5 \u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5\uff0c\u90fd\u5bf9\u5e94\u4e00\u4e2a\u51b3\u7b56\u6811\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u6bd4\u8f83\u8bed\u53e5\uff0c\u5206\u652f\u8868\u793a T \u6216 F \u7684\u60c5\u5f62\uff0c\u53f6\u8282\u70b9\u4e3a\u6700\u7ec8\u6392\u5e8f\u7ed3\u679c\u3002 \u53f6\u8282\u70b9\u603b\u6570\u4e3a n\uff01\uff0c\u5219\u6811\u7684\u9ad8\u5ea6\u81f3\u5c11 log N\uff01\u3002 O(log N!) = O(N logN)</p> <p>\u4e0d\u7528\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u5c0f\u4e8e O(N logN)\uff1a\u5982\u6876\u6392\u5e8f\u3002</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5206\u522b\u6309\u4e2a\u4f4d\u6570\u3001\u5341\u4f4d\u6570\u2026\u2026\u8fdb\u884c\u6876\u6392\u5e8f\u3002\uff08\u6700\u4e0d\u91cd\u8981\u7684\u6570\u5f00\u59cb\uff09 \u6bcf\u6b21\u6392\u5e8f\u65f6\u6309\u4e0a\u4e00\u6b21\u6392\u5e8f\u7ed3\u679c\u904d\u5386\u3002\u5148\u628a\u4e00\u4e2a\u6876\u4e2d\u7684\u6570\u4f9d\u6b21\u904d\u5386\u5b8c\uff0c\u518d\u904d\u5386\u4e0b\u4e00\u4e2a\u6876\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u9700\u8981 O(logN)\u7684\u7a7a\u95f4\u3002\uff08\u9012\u5f52\u9700\u8981\u4e0d\u65ad\u538b\u6808\uff09</p> <p>\u7a33\u5b9a\u6027\uff1a \u63d2\u5165\u6392\u5e8f \u7a33\u5b9a \u5806\u6392\u5e8f \u4e0d\u7a33\u5b9a\uff08\u6ca1\u6709\u4f9d\u6b21\u6bd4\u8f83\uff09 \u5206\u7ec4\u6392\u5e8f \u4e0d\u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \u4e0d\u7a33\u5b9a</p> <p>\u8fd8\u53ef\u80fd\u8003\uff1a\u7ecf\u8fc7\u51e0\u8f6e\u540e\u6570\u636e\u5e8f\u5217\uff0c\u5224\u65ad\u662f\u4ec0\u4e48\u6392\u5e8f\u65b9\u6cd5</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#_1","title":"\u54c8\u5e0c","text":"<p>\u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\uff0c\u5bf9\u6bcf\u4e2a x \u751f\u6210 y\uff0c\u4e14\u4e0d\u540c x \u5f97\u5230\u4e0d\u540c\u7684 y\u3002</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#_2","title":"\u533a\u5757\u94fe\u5e94\u7528","text":"<p>\u76ee\u7684\uff1a\u8ba9\u6570\u7ec4\u4e0d\u53ef\u7be1\u6539\u4e0d\u53ef\u66ff\u4ee3 \u6570\u636e\u7ec4\u7ec7\u548c\u7ba1\u7406\u6280\u672f\uff1a\u6570\u636e\u5e93\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u533a\u5757\u94fe\uff08\u589e\u67e5\uff09 \u6838\u5fc3\u601d\u60f3\uff1a</p> <ol> <li>\u628a\u6570\u636e\u653e\u5728\u591a\u4e2a\u5730\u65b9\uff08\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f\uff09\uff0c\u591a\u4e2a\u5907\u4efd</li> <li>\u628a\u6570\u636e\u524d\u540e\u5173\u8054</li> </ol> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u8bb0\u5f55\u7684\u6240\u6709\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u533a\u5757\u3002 \u5c06\u5404\u4e2a\u533a\u5757\u4e32\u8054\uff0c\u5f62\u6210\u533a\u5757\u94fe\u3002 \u600e\u4e48\u5c06\u6570\u636e\u4e32\u8054\uff1f\u7528\u54c8\u5e0c\u51fd\u6570\u3002 \u7ed9\u6bcf\u4e2a\u533a\u5757\u7f16\u53f7\uff0c\u524d\u4e00\u4e2a\u7f16\u53f7\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e0b\u4e00\u4e2a\u7f16\u53f7\u3002 \uff08\u54c8\u5e0c\u503c\u53ef\u4ee5\u4f5c\u4e3a index\uff0c\u8fd9\u91cc\u4f5c\u4e3a\u6570\u636e\u7684\u6307\u7eb9\uff09</p> <p>\u4f5c\u7528\uff1a\u5efa\u7acb\u53ef\u4fe1\u673a\u5236</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/","title":"14. \u6bd4\u7279\u5e01\u548c\u54c8\u5e0c","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1085 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#class-fourteen","title":"Class Fourteen","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_1","title":"\u6bd4\u7279\u5e01","text":"<p>\u53d1\u884c:\u6bd4\u7279\u5e01\u603b\u91cf\u4e00\u5b9a,\u6bcf\u5341\u5206\u949f\u53d1\u884c,\u6bcf\u56db\u5e74\u6bcf\u5341\u5206\u949f\u53d1\u884c\u91cf\u51cf\u534a \u6d41\u901a</p> <ul> <li>\u600e\u4e48\u8bc1\u660e\u662f\u81ea\u5df1\u7684? \u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93,\u6bcf\u4e2a\u4eba\u6709\u8d26\u53f7\u548c\u5bc6\u7801</li> <li>\u600e\u4e48\u9632\u6b62\"\u53cc\u82b1\"? \u6bcf\u4e2a\u8d26\u53f7\u8bb0\u5f55\u4f59\u989d</li> </ul> <p>\u6bd4\u7279\u5e01\u4e0d\u53d7\u7edf\u4e00\u63a7\u5236,\u4e0d\u80fd\u5efa\u7acb\u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93.\u91c7\u7528\u5206\u5e03\u5f0f\u8d26\u672c. \u89e3\u51b3\u5206\u5e03\u5f0f\u8d26\u672c\u4e4b\u95f4\u53ef\u80fd\u4e0d\u540c\u7684\u95ee\u9898:\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u9009\u62e9\u4e00\u4e2a\u4eba\u8bb0\u5f55,\u5c06\u8d26\u672c\u590d\u5236\u540e\u5206\u53d1,\u540e\u7eed\u53ef\u8865\u5145</p> <p>\u65b0\u4ea4\u6613\u521b\u5efa -&gt; \u4ea4\u6613\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u9a8c\u8bc1 -&gt; \u9a8c\u8bc1\u7ed3\u679c\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u5199\u5165\u8d26\u672c</p> <p>\u8bb0\u8d26\u6709\u597d\u5904,\u7ade\u4e89\u8ba1\u7b97\u901f\u5ea6.\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u503c,\u8ba1\u7b97\u8f93\u5165\u503c.(\u5bb9\u6613\u5f62\u6210\u5171\u8bc6) \u77ff\u673a:\u4e13\u95e8\u8ba1\u7b97\u8f93\u5165\u503c\u7684\u8ba1\u7b97\u673a \u77ff\u6c60:\u591a\u53f0\u77ff\u673a \u6316\u77ff:\u731c\u8f93\u5165\u503c</p> <p>\u600e\u4e48\u63a7\u5236\u8f93\u51fa\u503c y? y \u6709 128 \u4f4d.\u5982\u679c 128 \u4f4d\u5168\u90e8\u968f\u673a\u751f\u6210,\u6700\u5927\u6709 2^128 \u79cd,\u8ba1\u7b97\u65f6\u95f4\u5f88\u957f. \u6839\u636e\u6700\u8fd1\u6316\u77ff\u7684\u8ba1\u7b97\u673a\u6570\u91cf,\u9650\u5236 y \u4e2d 0 \u7684\u4e2a\u6570,\u4fdd\u8bc1 10 \u5206\u949f\u5de6\u53f3\u80fd\u6316\u5230.</p> <p>\u667a\u80fd\u5408\u7ea6:\u666e\u901a\u7a0b\u5e8f,\u7528\u6765\u6267\u884c\u5408\u540c\u89c4\u5b9a\u7684\u67d0\u4e9b\u6761\u6b3e. \u95ee\u9898:\u7a0b\u5e8f\u5728\u4fe1\u606f\u7a7a\u95f4,\u600e\u4e48\u5224\u65ad\u7269\u7406\u7a7a\u95f4\u4e2d\u662f\u5426\u5b8c\u6210\u4e1a\u52a1? \u89e3\u51b3:\u627e\u4e2d\u95f4\u5a92\u4ecb,\u8bc1\u660e\u4e1a\u52a1\u5b8c\u6210. \u9632\u6b62\u4e2d\u95f4\u5a92\u4ecb\u9020\u5047:\u5c06\u6570\u636e\u4f20\u5165\u533a\u5757\u94fe</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_2","title":"\u54c8\u5e0c","text":"<p>\u54c8\u5e0c\u51fd\u6570:\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4,\u54c8\u5e0c\u503c\u4ee3\u8868\u4f4d\u7f6e(\u533a\u5757\u94fe\u4e2d\u4ee3\u8868\u6307\u7eb9) \u5e94\u7528: \u5b57\u5178,\u641c\u7d22\u5f15\u64ce({\u952e:\u503c}) \u641c\u7d22\u5f15\u64ce:\u7528\u722c\u866b\u722c\u53d6\u6240\u6709\u7f51\u9875\u4fe1\u606f,\u5c06\u9875\u9762\u770b\u6210\u8282\u70b9,\u6784\u6210\u5de8\u5927\u7684\u56fe -&gt; \u53ef\u80fd\u7531\u4e0d\u540c\u8def\u5f84\u5230\u8fbe\u540c\u4e00\u4e2a\u7f51\u9875,\u9700\u8981\u5bf9\u7f51\u9875\u505a\u6807\u8bb0(URL \u5730\u5740),\u5b58\u50a8\u5230 URL \u96c6\u5408 -&gt; \u76f4\u63a5\u6bd4\u8f83 URL \u5219\u65f6\u95f4\u957f,\u5229\u7528\u54c8\u5e0c\u51fd\u6570,\u8ba1\u7b97 URL \u7684\u54c8\u5e0c\u503c</p> <p>\u5012\u6392\u7d22\u5f15:\u6309\u5173\u952e\u8bcd\u5b58\u50a8. \u67e5\u8be2\u65f6\u627e\u4e0d\u540c\u5173\u952e\u8bcd\u7684\u4ea4\u96c6</p> <p>\u54c8\u5e0c\u8868:\u8ba1\u7b97\u51fa f(x)\u653e\u5230\u4e00\u884c identifier density : n/T (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u7b97\u51fa\u7684\u503c\u7684\u6240\u6709\u53ef\u80fd\u503c\u7684\u603b\u6570) loading density : n/(sb) (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / (slots * buckets))</p> <p>collision : \u4e0d\u540c\u8f93\u5165\u503c\u6709\u76f8\u540c\u8f93\u51fa overflow : \u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570\u5927\u4e8e\u7a7a\u95f4\u603b\u6570(\u540c\u4e00\u8f93\u51fa\u503c\u5bf9\u5e94\u7684\u8f93\u5165\u503c\u6570\u91cf &gt; slots)</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_3","title":"\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1","text":"<p>\u8981\u6c42:: \u5bb9\u6613\u8ba1\u7b97,\u8f93\u51fa\u5747\u5300</p> <p>\u6574\u6570:</p> <ol> <li>\u6c42\u4f59\u6cd5: x -&gt; x%p,\u4e00\u822c\u53d6 p \u4e3a\u7d20\u6570</li> <li>\u6298\u53e0\u6cd5: \u5c06\u957f\u6574\u6570\u6620\u5c04\u4e3a\u4e24\u4f4d\u6570,\u5219\u4e24\u4f4d\u4e00\u6bb5\u518d\u76f8\u52a0,\u4e2d\u95f4\u53ef\u4ee5\u98a0\u5012\u7b49</li> <li>\u5e73\u65b9\u53d6\u4e2d: \u5e73\u65b9\u540e\u53d6\u4e2d\u95f4\u7684\u4e00\u6bb5,\u4f7f\u7ed3\u679c\u80fd\u88ab\u591a\u4f4d\u5f71\u54cd</li> <li>\u5206\u6790\u6cd5</li> </ol> <p>\u5b57\u7b26\u4e32: \u5b57\u7b26\u4e32\u600e\u4e48\u53d8\u6210\u6570\u636e?</p> <ol> <li>\u76f8\u52a0\u6c42\u4f59\u6570. \u9632\u6b62\u8f93\u51fa\u503c\u96c6\u4e2d\u5728\u8f83\u5c0f\u503c,\u53ef\u4ee5<code>str[0]+str[1]*27+str[2]*27*27...</code>.(\u7528 32 \u4ee3\u66ff 27 \u53ef\u52a0\u5feb\u8ba1\u7b97,\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u4e58\u4e00\u6b21,\u6bcf\u6b21\u52a0\u65b0\u7684\u503c\u518d\u79fb\u4f4d)</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_4","title":"\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","text":"<ol> <li>seperate chaining \u94fe\u5730\u5740\u6cd5</li> </ol> C<pre><code>struct HashTbl {\n  int tableSize;\n  List *theList;\n};\n</code></pre> <p><code>theList</code>\u4e2d\u5b58\u50a8\u5e26\u5934\u94fe\u8868</p> <ol> <li>open address \u5f00\u653e\u5730\u5740\u6cd5 <code>h(k) + f(i)</code>,\u51b2\u7a81\u65f6<code>i++</code>\u6216<code>+-i</code>,f(i)\u4e3a\u7ebf\u6027\u65f6\u79f0\u4e3a\u7ebf\u6027\u63a2\u6d4b    \u5220\u9664\u65f6\u53ef\u80fd\u5224\u65ad\u9519\u8bef,\u6545\u5220\u9664\u65f6\u8981\u505a\u6807\u8bb0    average search time \u5e73\u5747\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6240\u6709 search time \u76f8\u52a0\u6c42\u5e73\u5747    \u5e73\u5747\u4e0d\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6309\u5165\u53e3\u5206\u7c7b</li> </ol> <p>\u7ebf\u6027\u63a2\u6d4b\u51b2\u7a81\u591a,\u6362\u6210\u4e8c\u6b21\u63a2\u6d4b,\u4f9d\u6b21\u8c03\u6574\u4e3a<code>f(i)=i^2</code>, <code>f(i)=i^3</code>..., \u8d85\u51fa\u8303\u56f4\u65f6\u6c42\u6a21\u8fd4\u56de    \u4e8c\u6b21\u63a2\u6d4b\u53ef\u80fd\u53d1\u751f\u4e8c\u6b21\u805a\u96c6    \u7f3a\u70b9:\u4e0d\u4e00\u5b9a\u80fd\u63a2\u6d4b\u5230\u7a7a\u4f4d</p> <ol> <li>\u516c\u5171\u533a\u57df    \u51b2\u7a81\u65f6\u5f00\u8f9f\u7edf\u4e00\u7684\u65b0\u533a\u57df\uff0c\u5b58\u653e\u51b2\u7a81\u503c\u3002\u6bcf\u6b21\u8bbf\u95ee\u65f6\u5148\u770b\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u7a7a\u8868\u793a\u8981\u8bbf\u95ee\u7684\u6570\u4e0d\u5728\uff1b\u6709\u6570\u518d\u770b\u65b0\u533a\u57df\uff0c\u8bbf\u95ee\u8981\u8bbf\u95ee\u7684\u503c\u3002</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_5","title":"\u8865\u5145","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#loading-density","title":"Loading Density \u662f\u4ec0\u4e48","text":"<p>1. \u5b9a\u4e49 Loading Density\uff08\u4e5f\u79f0\u4e3a Load Factor\uff0c\u88c5\u8f7d\u56e0\u5b50\uff09\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5df2\u5b58\u50a8\u5143\u7d20\u6570\u91cf\u4e0e\u54c8\u5e0c\u8868\u603b\u5bb9\u91cf\u7684\u6bd4\u503c\uff1a [ \\text{Loading Density} = \\frac{\\text{\u5df2\u63d2\u5165\u7684\u5143\u7d20\u6570\u91cf}}{\\text{\u54c8\u5e0c\u8868\u7684\u603b\u69fd\u4f4d\u6570\uff08Size\uff09}} ]</p> <p>2. \u4f5c\u7528</p> <ul> <li>\u8861\u91cf\u7a7a\u95f4\u5229\u7528\u7387\uff1a\u503c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u54c8\u5e0c\u8868\u8d8a\u201c\u6ee1\u201d\u3002</li> <li>\u5f71\u54cd\u6027\u80fd\uff1a</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\u8d8a\u9ad8\uff0c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u8d8a\u5927\uff0c\u67e5\u627e/\u63d2\u5165\u64cd\u4f5c\u53ef\u80fd\u53d8\u6162\u3002</li> <li>\u901a\u5e38\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff08\u5982 0.7\uff09\uff0c\u8d85\u8fc7\u65f6\u89e6\u53d1\u6269\u5bb9\uff08Rehashing\uff09\u3002</li> </ul> <p>3. \u4e0e\u51b2\u7a81\u7684\u5173\u7cfb</p> <ul> <li>\u4f4e\u88c5\u8f7d\u5bc6\u5ea6\uff08&lt;0.5\uff09\uff1a\u51b2\u7a81\u6982\u7387\u4f4e\uff0c\u4f46\u7a7a\u95f4\u6d6a\u8d39\u8f83\u591a\u3002</li> <li>\u9ad8\u88c5\u8f7d\u5bc6\u5ea6\uff08&gt;0.7\uff09\uff1a\u51b2\u7a81\u6982\u7387\u663e\u8457\u589e\u52a0\uff0c\u7ebf\u6027\u63a2\u6d4b\u7b49\u65b9\u6cd5\u7684\u6027\u80fd\u4e0b\u964d\u3002</li> </ul> <p>\u5e38\u89c1\u7b56\u7565\uff1a</p> <ul> <li>\u5f53\u88c5\u8f7d\u5bc6\u5ea6\u8d85\u8fc7\u9608\u503c\uff08\u5982 0.75\uff09\uff0c\u54c8\u5e0c\u8868\u4f1a\u6269\u5bb9\uff08\u901a\u5e38\u52a0\u500d\u5927\u5c0f\uff09\uff0c\u5e76\u91cd\u65b0\u54c8\u5e0c\u6240\u6709\u5143\u7d20\u3002</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/","title":"15. \u54c8\u5e0c\u52a8\u6001\u67e5\u627e","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 324 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#class-fifteen","title":"Class Fifteen","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_1","title":"\u54c8\u5e0c\u52a8\u6001\u67e5\u627e\u95ee\u9898","text":"<ol> <li>\u67e5\u627e\u6811\uff0c\u53ea\u8981\u89e3\u51b3\u6811\u7684\u5e73\u8861\u7684\u95ee\u9898</li> <li>\u8ba1\u7b97\uff0c\u8bbe\u8ba1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09</li> </ol> <p>\u907f\u514d\u51b2\u7a81\uff1a</p> <ol> <li>\u727a\u7272\u7a7a\u95f4\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</li> </ol> <p>\u5f00\u653e\u5730\u5740\u6cd5,\u4e8c\u6b21\u63a2\u6d4b Thm. \u5982\u679c\u6ee1\u8db3:</p> <ol> <li>\u6c42\u4f59\u65f6\u7528\u7d20\u6570</li> <li>\u81f3\u5c11\u6709\u4e00\u534a\u4f4d\u7f6e\u7a7a    \u5219\u53ef\u4ee5\u8bc1\u660e\u6709\u65b0\u7684\u5143\u7d20,\u5219\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e.</li> </ol> <p>Pf:\u9996\u5148\u8bc1\u660e,\u5982\u679c i,j \u6ee1\u8db3\\(0&lt;i\\neq j\\le tablesize/2\\), \u5219</p> <p>$(h(x)+i^2)\\% tablesize \\neq (h(x)+j^2)\\%tablesize $.</p> C<pre><code>position find (int key, hash H) {\n  position pos;\n  int colliNum;\n  pos = hash(key, H.size());\n  while (H[pos]\u975e\u7a7a &amp;&amp; H[pos].Element != key) {\n    pos += 2 * ++colliNum - 1;   // \u5c06\u5e73\u65b9\u53d8\u4e3a\u4e582\uff0c\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\n    if (pos &gt; H.size())\n      pos -= H.size();\n  }\n  return pos;\n}\n</code></pre> <p>f(i)\u4e5f\u53ef\u4ee5\u65f6\u54c8\u5e0c\u51fd\u6570(double hash \u65b9\u6cd5) \u793a\u4f8b\uff1a<code>f(i) = i * hash(key)</code>, <code>f(i) = R - i * hash(key)</code></p> <p>Rehashing \u65b9\u6cd5 \u5c06\u539f\u6765\u7684\u54c8\u5e0c\u8868\u6269\u5927\u4e00\u500d\uff0c\u5c06\u539f\u6765\u5176\u4e2d\u6240\u6709\u5143\u7d20\u91cd\u65b0\u7b97\u4e00\u904d \u4ec0\u4e48\u65f6\u5019\u9700\u8981 rehash\uff1f\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u63d2\u5165\u65f6\u51b2\u7a81\u591a\uff0c\u8bbe\u7f6e\u51e0\u6b21\u63d2\u5165\u4e2d\u51b2\u7a81\u5728\u51e0\u6b21\u4ee5\u4e0a\uff0c\u8fdb\u884c rehash</li> <li>\u8868\u7684\u88c5\u8f7d\u7387\u8d85\u8fc7\u8bbe\u5b9a\u65f6 rehash</li> <li>\u63d2\u5165\u65f6\u627e\u4e0d\u5230\u4f4d\u7f6e</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_2","title":"\u53e6\u5916","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_3","title":"\u5806\u5408\u5e76","text":"<p>\u6bcf\u6b21\u53d6\u4e24\u6811\u9876\u70b9\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u5408\u6210\u540e\u9876\u70b9\uff0c\u4e00\u9897\u5b50\u6811\u76f4\u63a5\u4f5c\u4e3a\u5408\u5e76\u540e\u9876\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u548c\u5408\u5e76\u524d\u7684\u53e6\u4e00\u4e2a\u6811\u5408\u5e76\uff08\u9012\u5f52\uff09 \u6700\u5de6\u5806\uff1a\u4e0d\u7ef4\u62a4\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u6027\uff0c\u5168\u90e8\u504f\u5411\u5de6\u8fb9</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_4","title":"\u9700\u8981\u719f\u7ec3\u638c\u63e1\u7684\u7a0b\u5e8f","text":"<p>\u51fa\u5165\u6808\uff0c\u51fa\u5165\u961f\u5217\uff0c\u4e8c\u53c9\u6811\u7684\u5de6\u4e2d\u53f3\u5c42\u6b21\u904d\u5386\uff0c\u975e\u9012\u5f52\u904d\u5386\uff0c\u5806\u7684\u63d2\u5165\u5220\u9664\uff0c\u67e5\u627e\u6811\u7684\u67e5\u627e\u63d2\u5165\u5220\u9664\uff0c \u56fe\u7684 bfs dfs\uff0c\u6700\u77ed\u8def\u5f84\uff0c\u62d3\u6251\u6392\u5e8f\uff0c \uff08\u68ee\u6797\u7684\u904d\u5386\uff09</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/","title":"15.5 \u4e00\u4e9b\u4ee3\u7801","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 850 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/#_1","title":"\u8bfe\u4e0a\u590d\u4e60","text":"<p>\u7ebf\u6027\u8868 \u987a\u5e8f\u5b58\u50a8\uff1a\u6570\u7ec4 \u94fe\u5f0f\u5b58\u50a8\uff1a\u94fe\u8868 \u6570\u7ec4\u4e0e\u94fe\u8868\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9 \u94fe\u8868\u7684\u64cd\u4f5c \u5178\u578b\u4e60\u9898\uff1a\u5b9e\u73b0\u5355\u94fe\u8868\u7684\u539f\u5730\u9006\u8f6c\uff08\u5faa\u73af\u4e0d\u53d8\u5f0f\uff09\uff0c \u5206\u522b\u7528\u4e00\u5143\u591a\u9879\u5f0f\u7684\u4e24\u79cd\u8868\u793a\u5b9e\u73b0\u591a\u9879\u5f0f\u52a0\u6cd5</p> <p>\u5806\u6808 \u987a\u5e8f\u6808\uff1a\u6570\u7ec4\uff0ctop++, top-- lianzhan\uff1a\u94fe\u8868\uff0ctop \u5373\u5934\u6307\u9488 \u5e94\u7528\uff1a\u62ec\u53f7\u5339\u914d\u68c0\u9a8c\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0cn \u8282\u6c49\u8bfa\u5854\u95ee\u9898\uff08\u5178\u578b\u9012\u5f52\uff09\uff0c\u8ff7\u5bab\u95ee\u9898 \u5feb\u901f\u6392\u5e8f\u9012\u5f52\u7528\u5806\u6808\u600e\u4e48\u5b9e\u73b0\uff1f\u6bcf\u6b21\u9012\u5f52\u5076\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4ee3\u8868\u8d77\u70b9\u7ec8\u70b9\u5927\u5c0f\uff0c\u4e00\u79cd\u65b9\u6cd5\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\u4ece\u5806\u6808\u4e2d\u629b\u51fa\u5143\u7d20\uff0c\u62c6\u6210\u4e24\u4e2a\u518d\u538b\u5230\u5806\u6808\u4e2d \u53ef\u4ee5\u628a\u6240\u6709\u9012\u5f52\u7528\u5faa\u73af\u5b9e\u73b0\uff0c\u6838\u5fc3\u662f\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d \u8ff7\u5bab\u95ee\u9898\uff1a\u7528\u6570\u7ec4\u8868\u793a\u8ff7\u5bab\uff0c0 \u8868\u793a\u901a\u8def\uff0c1 \u8868\u793a\u5899\u3002\u4e00\u76f4\u6cbf\u7740\u67d0\u4e2a\u65b9\u5411\u8d70\u3002\u6bcf\u6b21\u5c06\uff08\u4f4d\u7f6e\u5750\u6807\uff0c\u65b9\u5411\u9009\u62e9\uff09\u538b\u6808\uff0c\u56de\u5934\u8868\u793a\u5148\u4e0d\u65ad\u538b\u6808\u518d\u4e0d\u65ad\u629b\u51fa\u3002\u56de\u6eaf\u6cd5\u3002</p> <p>\u4e24\u4e2a\u5806\u6808\u5b9e\u73b0\u961f\u5217 \u5165\u961f\uff1a \u5982\u679c\u6808 1 \u6ee1\u4f46\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u4e2d\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u5c06\u65b0\u5143\u7d20\u653e\u5165\u6808 1 \u5982\u679c\u6808 1 \u6709\u5143\u7d20\u4f46\u6ca1\u6ee1\uff0c\u5c06\u6808 2 \u5012\u56de\u6808 1\uff0c\u518d\u65b0\u5143\u7d20\u5165\u6808 \u51fa\u961f\uff1a \u5982\u679c\u6808 2 \u6709\u5143\u7d20\uff0c\u76f4\u63a5\u629b\u51fa \u5982\u679c\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u6240\u6709\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u629b\u51fa</p> <p>\u518d\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u5b9e\u73b0\u7a7a\u95f4\u5171\u4eab\uff1a \u4e24\u5934\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u653e\u3002\u6ee1\u7684\u5224\u5b9a\uff1a<code>top_right == top_left + 1</code></p> <p>\u6811\uff0clevel \u548c degree \u4e2d\u5e8f\u904d\u5386\u65f6\uff0cn \u5728 m \u524d\u7684\u6761\u4ef6\u662f\uff1an \u5728 m \u7684\u5de6\u65b9 \u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u5b9a\u4e49\u672a\u6811\u7684\u76f4\u5f84\u3002\u7ed9\u5b9a\u6811\u6c42\u76f4\u5f84</p> <p>\u7ed9\u5b9a\u94fe\u8868\u8868\u793a\u7684\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811</p> <p>\u5de6\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u53f3\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u6839\u8282\u70b9\u6bd4\u5de6\u513f\u5b50\u6253\uff0c\u6bd4\u53f3\u513f\u5b50\u5c0f\uff0c\u662f\u4e0d\u662f\u67e5\u627e\u6811\uff1f \u4e0d\u662f \u5de6\u8fb9\u662f\u5806\uff0c\u53f3\u8fb9\u662f\u5806\uff0c\u6839\u6bd4\u5de6\u53f3\u513f\u5b50\u5927\uff0c\u662f\u4e0d\u662f\u5806\uff1f \u662f</p> <p>\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u53ef\u4e0d\u53ef\u80fd\u662f\u67e5\u627e\u987a\u5e8f \u521d\u59cb\u4e3a\u8d1f\u65e0\u7a77\u5230\u6b63\u65e0\u7a77\u3002\u6bcf\u6b21\u78b0\u5230\u5c0f\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u5de6\u8fb9\u754c\uff1b\u78b0\u5230\u5927\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u53f3\u8fb9\u754c\u3002</p> <p>\u6811\u7684\u53cc\u4eb2\u8868\u793a\u6cd5\u548c\u5b69\u5b50\u8868\u793a\u6cd5\uff0c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\u3002</p> <p>\u56fe\u7684\u8868\u793a\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u90bb\u63a5\u8868\uff0c\u9006\u90bb\u63a5\u8868\uff0c\u5341\u5b57\u94fe\u8868\uff08\u6709\u5411\u56fe\uff09</p> <p>\u7528 Floyd \u7b97\u6cd5\u5224\u65ad\u56fe\u662f\u5426\u6709\u56de\u8def\uff1f Floyd\uff1a\u90bb\u63a5\u77e9\u9635\u7684\u5e42\u76f8\u52a0\u3002\u68c0\u67e5\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\uff0c\u5982\u679c\u5bf9\u89d2\u7ebf\u4e0a\u6709\u975e\u96f6\u5143\uff0c\u5219\u6709\u73af\u3002</p> <p>\u7ed9\u5b9a\u6751\u5e84\u548c\u4e0d\u540c\u6751\u5e84\u95f4\u9053\u8def\u7684\u957f\u5ea6\u3002\u5bfb\u627e\u4f4d\u7f6e\uff0c\u4f7f\u5176\u5230\u5404\u4e2a\u6751\u5e84\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u3002</p> <p>\u54c8\u5e0c\uff0c\u6c42\u7b49\u6982\u7387\u6210\u529f\u4e0e\u4e0d\u6210\u529f\u67e5\u627e\u7684\u5e73\u5747\u67e5\u627e\u6b21\u6570\u3002</p> <p>\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u548c\u54c8\u5e0c\u7ed3\u679c\uff0c\u6c42\u6700\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff1a\u6784\u5efa\u6709\u5411\u56fe\uff0c\u6c42\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\u5217</p> <p>\u6392\u5e8f\u7684\u8f85\u52a9\u7a7a\u95f4 \u5806\u6392\u5e8f\uff1a\u65e0\u8f85\u52a9\u7a7a\u95f4 \u5feb\u901f\u6392\u5e8f\uff1a\u9012\u5f52\u9700\u8981\u6808\u7a7a\u95f4 \u5f52\u5e76\u6392\u5e8f\uff1a\u989d\u5916\u9700\u8981\u6570\u7ec4</p> <p>\u6392\u5e8f\u7b97\u6cd5\u662f\u5426\u7a33\u5b9a\uff1a\u9700\u8981\u4ea4\u6362\u7684\u80af\u5b9a\u4e0d\u7a33\u5b9a</p> <p>\u5f88\u5927\u7684\u6570\u636e\uff0c\u5728\u4e0d\u5b8c\u5168\u6392\u5e8f\u7684\u524d\u63d0\u4e0b\u627e\u51fa\u524d m \u5c0f\u7684\u5143\u7d20\uff1a \u5efa\u7acb\u5927\u5c0f\u4e3a m \u7684\u5806\uff0c\u5c06\u6240\u6709\u5143\u7d20\u4f9d\u6b21\u63d2\u5165</p> <p>\u7528\u5feb\u901f\u6392\u5e8f\u627e\u5230\u7b2c k \u5927\u7684\u5143\u7d20</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u975e\u9012\u5f52\u7b97\u6cd5\uff1f \u5c06\u9012\u5f52\u8f6c\u5316\u4e3a\u5faa\u73af\uff1f</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/#_2","title":"\u4e00\u4e9b\u4ee3\u7801","text":"<p>BST.c</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElementType;\ntypedef struct TNode* Position;\ntypedef Position BinTree; /* \u4e8c\u53c9\u6811\u7c7b\u578b */\nstruct TNode {            /* \u6811\u7ed3\u70b9\u5b9a\u4e49 */\n    ElementType Data;     /* \u7ed3\u70b9\u6570\u636e */\n    BinTree Left;         /* \u6307\u5411\u5de6\u5b50\u6811 */\n    BinTree Right;        /* \u6307\u5411\u53f3\u5b50\u6811 */\n};\n\nPosition Find(ElementType X, BinTree BST) {\n    if (!BST)\n        return NULL; /*\u67e5\u627e\u5931\u8d25*/\n    if (X &gt; BST-&gt;Data)\n        return Find(X, BST-&gt;Right); /*\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else if (X &lt; BST-&gt;Data)\n        return Find(X, BST-&gt;Left); /*\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else                           /* X == BST-&gt;Data */\n        return BST;                /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n}\n\nPosition IterFind(ElementType X, BinTree BST) {\n    while (BST) {\n        if (X &gt; BST-&gt;Data)\n            BST = BST-&gt;Right; /*\u5411\u53f3\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else if (X &lt; BST-&gt;Data)\n            BST = BST-&gt;Left; /*\u5411\u5de6\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else                 /* X == BST-&gt;Data */\n            return BST;      /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n    }\n    return NULL; /*\u67e5\u627e\u5931\u8d25*/\n}\n\nPosition FindMin(BinTree BST) {\n    if (!BST)\n        return NULL; /*\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd4\u56deNULL*/\n    else if (!BST-&gt;Left)\n        return BST; /*\u627e\u5230\u6700\u5de6\u53f6\u7ed3\u70b9\u5e76\u8fd4\u56de*/\n    else\n        return FindMin(BST-&gt;Left); /*\u6cbf\u5de6\u5206\u652f\u7ee7\u7eed\u67e5\u627e*/\n}\n\nPosition FindMax(BinTree BST) {\n    if (BST)\n        while (BST-&gt;Right) /*\u6cbf\u53f3\u5206\u652f\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u6700\u53f3\u53f6\u7ed3\u70b9*/\n            BST = BST-&gt;Right;\n    return BST;\n}\n\nBinTree Insert(BinTree BST, ElementType X) {\n    if (!BST) { /* \u82e5\u539f\u6811\u4e3a\u7a7a\uff0c\u751f\u6210\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u641c\u7d22\u6811 */\n        BST = (BinTree)malloc(sizeof(struct TNode));\n        BST-&gt;Data = X;\n        BST-&gt;Left = BST-&gt;Right = NULL;\n    } else { /* \u5f00\u59cb\u627e\u8981\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e */\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Insert(BST-&gt;Left, X); /*\u9012\u5f52\u63d2\u5165\u5de6\u5b50\u6811*/\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Insert(BST-&gt;Right, X); /*\u9012\u5f52\u63d2\u5165\u53f3\u5b50\u6811*/\n        /* else X\u5df2\u7ecf\u5b58\u5728\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a */\n    }\n    return BST;\n}\n\nBinTree Delete(BinTree BST, ElementType X) {\n    Position Tmp;\n    if (!BST)\n        printf(\"\u8981\u5220\u9664\u7684\u5143\u7d20\u672a\u627e\u5230\");\n    else {\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Delete(BST-&gt;Left, X); /* \u4ece\u5de6\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Delete(BST-&gt;Right, X); /* \u4ece\u53f3\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else {                                  /* BST\u5c31\u662f\u8981\u5220\u9664\u7684\u7ed3\u70b9 */\n            /* \u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u6709\u5de6\u53f3\u4e24\u4e2a\u5b50\u7ed3\u70b9 */\n            if (BST-&gt;Left &amp;&amp; BST-&gt;Right) {\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5c0f\u7684\u5143\u7d20\u586b\u5145\u5220\u9664\u7ed3\u70b9 */\n                Tmp = FindMin(BST-&gt;Right);\n                BST-&gt;Data = Tmp-&gt;Data;\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u6700\u5c0f\u5143\u7d20 */\n                BST-&gt;Right = Delete(BST-&gt;Right, BST-&gt;Data);\n            } else { /* \u88ab\u5220\u9664\u7ed3\u70b9\u6709\u4e00\u4e2a\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                Tmp = BST;\n                if (!BST-&gt;Left) /* \u53ea\u6709\u53f3\u5b69\u5b50\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                    BST = BST-&gt;Right;\n                else /* \u53ea\u6709\u5de6\u5b69\u5b50 */\n                    BST = BST-&gt;Left;\n                free(Tmp);\n            }\n        }\n    }\n    return BST;\n}\n</code></pre> <p>\u8868\u8fbe\u5f0f\u6811</p> C<pre><code>/*\n\u4e8c\u5143\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8054\u7cfb\u5230\u4e8c\u53c9\u6811:\n\u4ee5\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\u4f5c\u4e3a\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u4ee5\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u975e\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u5176\u4e24\u68f5\u5b50\u6811\u662f\u5b83\u7684\u8fd0\u7b97\u5bf9\u8c61,\n\u5b50\u6811\u53ef\u4ee5\u662f\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u590d\u6742\u8868\u8fbe\u5f0f.\n\n\u7b97\u5f0f\u8868\u8fbe\u5f0f\u548c\u8868\u8fbe\u5f0f\u6811\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\n    \u8868\u8fbe\u5f0f\u6811\u7684\u5148\u6839\u904d\u5386\uff1a\u524d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u4e2d\u6839\u904d\u5386\uff1a\u4e2d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u540e\u6839\u904d\u5386\uff1a\u540e\u7f00\u8868\u8fbe\u5f0f\n\n\u6784\u5efa\u8868\u8fbe\u5f0f\u6811:\n1. \u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u4e2d\u7f00\u5f62\u5f0f\uff1a(4+1*(5-2))-6/3\n2. \u9996\u5148\u5c06\u6bcf\u4e2a\u8fd0\u7b97\u52a0\u4e0a\u62ec\u53f7\uff0c\u533a\u5206\u4f18\u5148\u7ea7\uff0c\u5f97\u5230(4+(1*(5-2)))-(6/3)\n3. \u62ec\u53f7\u5916\u7684-\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c(4+(1*(5-2)))\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c(6/3)\u4f5c\u4e3a\u53f3\u5b50\u6811\uff1b\n4. \u9012\u5f52\u7684\u8f6c\u63624+(1*(5-2))\uff0c+\u6700\u4e3a\u6839\u8282\u70b9\uff0c4\u662f\u5de6\u5b50\u6811\uff0c\n    (1*(5-2))\u662f\u53f3\u5b50\u6811\u3002*\u662f\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c1\u662f\u5de6\u5b50\u6811\uff0c(5-2)\u662f\u53f3\u5b50\u6811\u3002\n    \u6700\u540e\u8ba1\u7b97(5-2)\uff0c-\u662f\u6839\u8282\u70b9\uff0c5\u662f\u5de6\u5b50\u6811\uff0c2\u662f\u53f3\u5b50\u6811\u3002\n\u6784\u9020\u597d\u8868\u8fbe\u5f0f\u6811\u4e4b\u540e\uff0c\u524d\u7f00\u8868\u8fbe\u5f0f\u548c\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53ef\u6839\u636e\u5148\u6839\u904d\u5386\u548c\u540e\u6839\u904d\u5386\u5f97\u5230\u3002\n    \u524d\u7f00\u8868\u8fbe\u5f0f\uff1a- + 4 * 1 - 5 2 / 6 3\n    \u540e\u7f00\u8868\u8fbe\u5f0f\uff1a4 1 5 2 - * + 6 3 / -\n*/\n\n#include &lt;stdio.h&gt;\n#define MAXN 1000\n\nint lch[MAXN], rch[MAXN];\nchar op[MAXN];\nint nc = 0;  // \u7ed3\u70b9\u6570\n\nint build_tree(char* s, int x, int y) {\n    int i, c1 = -1, c2 = -1, p = 0;\n    int u;\n    if (y - x == 1)  // \u4ec5\u4e00\u4e2a\u5b57\u7b26\uff0c\u5efa\u7acb\u5355\u72ec\u7ed3\u70b9\n    {\n        u = ++nc;\n        lch[u] = rch[u] = 0;\n        op[u] = s[x];\n        return u;\n    }\n    for (i = x; i &lt; y; i++) {\n        switch (s[i]) {\n            case '(':\n                p++;\n                break;\n            case ')':\n                p--;\n                break;\n            case '+':\n            case '-':\n                if (!p)\n                    c1 = i;\n                break;\n            case '*':\n            case '/':\n                if (!p)\n                    c2 = i;\n                break;\n        }\n    }\n    if (c1 &lt; 0)\n        c1 = c2;  // \u627e\u4e0d\u5230\u62ec\u53f7\u5916\u7684\u52a0\u51cf\u53f7\uff0c\u5c31\u7528\u4e58\u9664\u53f7\n    if (c1 &lt; 0)\n        return build_tree(s, x + 1, y - 1);  // \u6574\u4e2a\u8868\u8fbe\u5f0f\u88ab\u4e00\u5bf9\u62ec\u53f7\u62ec\u8d77\u6765\n    u = ++nc;\n    lch[u] = build_tree(s, x, c1);\n    rch[u] = build_tree(s, c1 + 1, y);\n    op[u] = s[c1];\n    return u;\n}\n</code></pre> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811</p> C<pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u7ebf\u7d22\u4e8c\u53c9\u6811\ntypedef struct ThreadNode {\n    int data;\n    struct ThreadNode *left, *right;\n    int ltag, rtag;  // tag\u4e3a0\u8868\u793a\u6709\u5b69\u5b50\n} ThreadNode;\n\n// \u6307\u5411\u5f53\u524d\u8bbf\u95ee\u53d8\u91cf\u7684\u524d\u9a71\nThreadNode* pre = NULL;\n\nvoid visit(ThreadNode* node);\n\n// \u521d\u59cb\u5316\u8282\u70b9\nThreadNode* initNode() {\n    ThreadNode* Node = (ThreadNode*)malloc(sizeof(ThreadNode));\n    Node-&gt;left = NULL;\n    Node-&gt;right = NULL;\n    Node-&gt;ltag = 0;  // \u9ed8\u8ba4\u8282\u70b9\u6709\u5de6\u53f3\u5b69\u5b50\n    Node-&gt;rtag = 0;\n    return Node;\n}\n\n// \u63d2\u5165\u65b0\u8282\u70b9\u5e76\u8d4b\u503c\nbool insertNode(ThreadNode* node, int data, int contain) {\n    ThreadNode* newNode = initNode();\n    // contain\u4e3a0\u65f6\u5411\u5de6\u63d2\u5165,\u4e3a1\u65f6\u5411\u53f3\u63d2\u5165\n    if (node-&gt;left == NULL &amp;&amp; contain == 0) {\n        node-&gt;left = newNode;\n        newNode-&gt;data = data;\n        return true;\n    } else if (node-&gt;right == NULL &amp;&amp; contain == 1) {\n        node-&gt;right = newNode;\n        newNode-&gt;data = data;\n        return true;\n    }\n    free(newNode);\n    return false;\n}\n\n// \u8fb9\u4e2d\u5e8f\u904d\u5386\u8fb9\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid InThread(ThreadNode* node) {\n    if (node != NULL) {\n        InThread(node-&gt;left);   // \u904d\u5386\u5de6\u5b50\u6811\n        visit(node);            // \u8bbf\u95ee\u6839\u8282\u70b9\n        InThread(node-&gt;right);  // \u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n\n// \u521b\u5efa\u4e2d\u5e8f\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid createInThread(ThreadNode* node) {\n    // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf\n    pre = NULL;\n    InThread(node);\n    // \u6700\u540e\u4e00\u4e2a\u904d\u5386\u7684\u8282\u70b9\u7684\u540e\u7ee7\u8bbe\u7f6e\u4e3aNULL\n    pre-&gt;right = NULL;\n    pre-&gt;rtag = 1;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u5148\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* FirstNode(ThreadNode* node) {\n    // \u5f53\u4e3a\u7a7a\u65f6\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;ltag == 0) {\n        node = node-&gt;left;\n    }\n    return node;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u540e\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* LastNode(ThreadNode* node) {\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;rtag == 0) {\n        node = node-&gt;right;\n    }\n    return node;\n}\n\n// \u8bbf\u95ee\u6839\u8282\u70b9\nvoid visit(ThreadNode* node) {\n    if (node-&gt;left == NULL) {\n        node-&gt;left = pre;\n        node-&gt;ltag = 1;\n    }\n\n    if (pre != NULL &amp;&amp; pre-&gt;right == NULL) {\n        pre-&gt;right = node;\n        pre-&gt;rtag = 1;\n    }\n    pre = node;\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u540e\u7ee7\u8282\u70b9\nThreadNode* NextNode(ThreadNode* p) {\n    if (p-&gt;rtag == 0) {\n        return FirstNode(p-&gt;right);\n    }\n    return p-&gt;right;\n}\n\nvoid visit0(ThreadNode* thread_node) {\n    printf(\"%d  \", thread_node-&gt;data);\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u904d\u5386\nvoid Inorder(ThreadNode* rootNode) {\n    for (ThreadNode* p = FirstNode(rootNode); p != NULL; p = NextNode(p)) {\n        visit0(p);\n    }\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u524d\u9a71\u8282\u70b9\nThreadNode* BeforeNode(ThreadNode* p) {\n    if (p-&gt;ltag == 0) {\n        return LastNode(p-&gt;left);\n    }\n    return p-&gt;left;\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u9006\u5e8f\u904d\u5386\nvoid InorderNi(ThreadNode* rootNode) {\n    for (ThreadNode* p = LastNode(rootNode); p != NULL; p = BeforeNode(p)) {\n        visit0(p);\n    }\n}\n\nint main(void) {\n    // \u521d\u59cb\u5316\u4e8c\u53c9\u6811\n    ThreadNode* rootNode = initNode();\n    // \u6d4b\u8bd5\u6839\u8282\u70b9\u63d2\u5165\u6570\u636e\n    rootNode-&gt;data = 1;\n    printf(\"\u6839\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;data);\n    // \u6d4b\u8bd5\u5f80\u4e8c\u53c9\u6811\u521b\u5efa\u8282\u70b9\n    insertNode(rootNode, 2, 0);\n    insertNode(rootNode, 3, 1);\n    printf(\"\u7b2c\u4e8c\u5c42\u5de6\u8282\u70b9\u6570\u636e:%d\\n\u7b2c\u4e8c\u5c42\u53f3\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;left-&gt;data,\n           rootNode-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left, 4, 1);\n    insertNode(rootNode-&gt;right, 5, 1);\n    printf(\"\u7b2c\u4e09\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\u7b2c\u4e09\u5c42\u7b2c\u4e8c\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;data, rootNode-&gt;right-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left-&gt;right, 6, 0);\n    printf(\"\u7b2c\u56db\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u5de6\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;left-&gt;data);\n\n    createInThread(rootNode);\n\n    printf(\"\u4e2d\u5e8f\u904d\u5386:\\n\");\n    Inorder(rootNode);\n    printf(\"\\n\u9006\u4e2d\u5e8f\u904d\u5386:\\n\");\n    InorderNi(rootNode);\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/","title":"2. \u6700\u5927\u8fde\u7eed\u548c\u5b50\u6570\u7ec4","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 97 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#class-two","title":"Class Two","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#_1","title":"\u6700\u5927\u548c\u8fde\u7eed\u5b50\u6570\u7ec4","text":"<ol> <li>\u66b4\u529b\u6cd5:O(n^3)</li> <li>\u66b4\u529b\u6cd5\u4f18\u5316:O(n^2) \u786e\u5b9a i \u540e,\u904d\u5386 j \u65f6\u5373\u5b8c\u6210\u6c42\u548c</li> </ol> C<pre><code>int MaxSum(int a[],int len) {\n    int nsum,maxsum;\n    maxsum=0;\n    for (int i=0;i&lt;len;i++) {\n        nsum=0;\n        for (int j=1;j&lt;len;j++) {\n            nsum+=a[j]; //j\u53f3\u79fb\u65f6\u52a0\n            if (nsum&gt;maxsum) maxsum=nsum;\n        }\n    }\n    return maxsum;\n}\n</code></pre> <ol> <li>\u641c\u7d22\u533a\u95f4+\u524d\u7f00\u548c:O(n^2)</li> <li>\u5206\u6cbb\u6cd5:O(nlogn) \u5206\u6210\u5de6\u534a\u8fb9,\u53f3\u534a\u8fb9,\u4e2d\u95f4</li> </ol> C<pre><code>int MaxSum(int l,int r) {\n    if (l==r) return a[l]; //\u8fd4\u56de\u6761\u4ef6\n\n    int mid=(l+r)&gt;&gt;1;\n    int max1=MaxSum(l,mid); //\u8ba1\u7b97\u5de6\u534a\u8fb9\n    int max2=MaxSUm(mid,r); //\u8ba1\u7b97\u53f3\u534a\u8fb9\n\n    int max3,lmax=0,rmax=0,sum=0;\n    for (int i=mid;i&gt;=l;i--) {\n        sum+=a[i];\n        lmax=max(lmax,sum);\n    }\n    sum=0;\n    for (int i=mid+a;i&lt;=r;i++) {\n        sum+=a[i];\n        ramx=max(ramx,sum);\n    }\n    max3=lmax+rmax;\n\n    return max(max1,max2,max3);\n}\n</code></pre> <ol> <li>\u7ebf\u6027 dp:O(n) \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:<code>dp[i]=max(dp[i-1]+a[i],a[i])</code></li> <li>\u626b\u63cf\u6cd5:O(n)</li> </ol> C<pre><code>int MaxSum() {\n    int res=-INF,sum=0;\n    for (int i=1;i&lt;=len;i++) {\n        if (sum&lt;0) sum=a[i];\n        else sum+=a[i];\n\n        res=max(res,sum);\n    }\n    return res;\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#_2","title":"\u94fe\u8868(\u7565)","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#hw2","title":"HW2","text":"<p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient? A.doubly linked list B.singly linked circular list C.doubly linked circular list with a dummy head node D.sequential list \u8bbf\u95ee\u968f\u673a\u8282\u70b9:\u76f8\u540c \u6700\u540e\u4f4d\u7f6e:\u5faa\u73af\u94fe\u8868\u53ef\u901a\u8fc7\u865a\u62df\u5934\u7ed3\u70b9\u540e\u79fb\u4e00\u4f4d\u76f4\u63a5\u627e\u5230\u6700\u540e\u4e00\u4f4d</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"3. \u5806\u6808\u548c\u961f\u5217","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 965 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#class-three","title":"Class Three","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_1","title":"\u5f15\u8a00","text":"<ul> <li>Taylor \u5c55\u5f00\u672c\u8d28\u662f\u591a\u9879\u5f0f\u903c\u8fd1\u590d\u6742\u51fd\u6570,\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u4e5f\u662f\u903c\u8fd1,\u7528\u6570\u636e\u8bad\u7ec3\u6c42\u51fa\u6743\u91cd,\u5f97\u5230\u6570\u636e\u7ed3\u6784.</li> <li>\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784(\u5173\u7cfb).\u901a\u8fc7\u4e0d\u65ad\u6539\u8fdb\u6570\u636e\u7ed3\u6784,\u83b7\u5f97\u667a\u80fd.</li> <li>\u5747\u644a\u4ee3\u4ef7\u5206\u6790:\u5c06\u4ee3\u4ef7\u4e0e\u7ed3\u6784\u7ed3\u5408.</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_2","title":"\u6709\u5e8f\u7684\u5e8f\u5217\u662f\u7ebf\u6027\u8868","text":"<p>\u591a\u9879\u5f0f(The Polynomial ADT)</p> <ul> <li>\u7528\u6570\u7ec4\u8868\u793a\u591a\u9879\u5f0f.\u4e3a\u4e86\u9632\u6b62\u7a00\u758f\u6570\u7ec4\u6d6a\u8d39\u7a7a\u95f4,\u53ea\u8868\u793a\u975e\u96f6\u9879.\u4f7f\u7528\u7ed3\u6784\u6570\u7ec4\u6216\u94fe\u8868.</li> </ul> <p>\u591a\u91cd\u7ebf\u6027\u8868</p> <ul> <li>e.g. \u8868\u793a\u5f88\u591a\u5b66\u751f\u9009\u51e0\u95e8\u8bfe.\u5217\u51fa\u5b66\u751f\u4e3a\u5217,\u8bfe\u7a0b\u4e3a\u884c\u7684\u7a00\u758f\u77e9\u9635.\u53ea\u8868\u793a\u9009\u7684\u8282\u70b9\u5e76\u6309\u7eb5\u5411,\u6a2a\u5411\u8fde\u6210\u94fe\u8868.</li> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u7eb5\u5411,\u6a2a\u5411\u4e24\u4e2a\u94fe\u8868\u4e2d.</li> </ul> <p>\u5185\u5b58\u7ba1\u7406</p> <ul> <li>\u600e\u4e48\u7ba1\u7a7a\u95f2\u4f4d\u7f6e?\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u600e\u4e48\u5206\u914d,\u91ca\u653e\u5185\u5b58.\u7528\u94fe\u8868\u7ba1\u7406</li> <li>\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u5206\u914d\u76f8\u5bf9\u4f4d\u7f6e(\u76f8\u5bf9\u5730\u5740),\u7b49\u4ee3\u7801\u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4(\u7edd\u5bf9\u5730\u5740)</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_3","title":"\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b","text":"<ol> <li>\u7406\u60f3\u60c5\u51b5\u4e0b,\u7533\u8bf7\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u90fd\u76f8\u540c,\u5185\u5b58\u4e2d\u5229\u7528\u4e00\u5c0f\u5757\u4f5c\u4e3a\u6307\u9488\u8868\u793a\u5730\u5740,\u5c06\u4e0d\u540c\u5730\u5740\u4e32\u6210\u94fe\u8868,\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4.</li> <li>malloc \u7533\u8bf7\u7a7a\u95f4\u65f6,\u5206\u914d\u5934\u4e0a\u7684\u7a7a\u95f2\u7a7a\u95f4\u7684\u6307\u9488.\u4fee\u6539\u94fe\u8868,\u5c06\u5934\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e.</li> <li>free \u91ca\u653e\u7a7a\u95f4\u65f6,\u5c06\u91ca\u653e\u7684\u7a7a\u95f4\u8fde\u5230\u5934\u6307\u9488.</li> <li>\u4f7f\u7528\u65f6\u95f4\u957f\u540e,\u5185\u5b58\u7684\u94fe\u8868\u66f4\u65e0\u5e8f,\u4f46\u5934\u8282\u70b9\u59cb\u7ec8\u7ef4\u6301\u5934.</li> <li>\u5b9e\u9645\u60c5\u51b5\u4e2d,\u7533\u8bf7\u548c\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u4efb\u610f,\u6bcf\u4e2a\u8282\u70b9\u5927\u5c0f\u4e0d\u540c.\u6b64\u65f6\u6bcf\u4e2a\u8282\u70b9\u4e2d\u5305\u542b\u8fd9\u4e2a\u8282\u70b9\u5927\u5c0f,\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4\u4f4d\u7f6e,\u6807\u8bb0\u8be5\u7a7a\u95f4\u662f\u5426\u88ab\u5360\u7528\u7684\u6807\u8bb0 flag \u8fd9\u4e09\u4e2a\u4fe1\u606f.</li> <li>\u6bcf\u6b21\u7533\u8bf7\u65f6,\u5148\u770b\u8be5\u8282\u70b9\u5927\u5c0f\u662f\u5426\u6ee1\u8db3.\u82e5\u8282\u70b9\u5c0f,\u770b\u4e0b\u4e00\u4e2a\u8282\u70b9;\u82e5\u8282\u70b9\u6ee1\u8db3,\u4ece\u8be5\u8282\u70b9\u4e2d\u5207\u4e00\u5757.</li> <li>\u9632\u6b62\u591a\u6b21\u4f7f\u7528\u540e\u5185\u5b58\u788e\u7247\u5316,\u91ca\u653e\u5185\u5b58\u65f6\u5c3d\u91cf\u4f7f\u4e0b\u4e00\u5757\u6216\u4e0a\u4e00\u5757\u8fde\u7eed.\u6839\u636e\u8be5\u8282\u70b9\u5927\u5c0f\u627e\u5230\u4e0b\u4e00\u8282\u70b9,\u68c0\u67e5\u4e0b\u4e00\u8282\u70b9\u7684 flag.</li> <li>\u4e3a\u4e86\u80fd\u548c\u524d\u4e00\u8282\u70b9,\u9700\u8981\u5728\u8282\u70b9\u672b\u5c3e\u52a0 size,next,flag \u4fe1\u606f.</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#the-stack-adt","title":"\u5806\u6808(The Stack ADT)","text":"<p>\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97</p> <ul> <li>\u6bcf\u6b21\u9047\u5230\u8fd0\u7b97\u7b26\u53f7,\u8ba1\u7b97\u524d\u4e24\u4e2a\u6570,\u5e76\u538b\u5165\u8ba1\u7b97\u7ed3\u679c.</li> <li>\u600e\u4e48\u628a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53d8\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f?</li> <li>\u9047\u5230\u6570,\u653e\u5165;\u9047\u5230\u7b26\u53f7,\u8bb0\u4f4f.\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u9ad8,\u9ad8\u7684\u51fa\u53bb;\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u4f4e,\u8bb0\u4f4f\u65b0\u7b26\u53f7;\u5982\u679c\u5df2\u6709\u7684\u548c\u65b0\u7684\u4f18\u5148\u7ea7\u4e00\u6837,\u5148\u8bfb\u5230\u7684\u51fa\u53bb.</li> <li>\u7531\u62ec\u53f7\u600e\u4e48\u529e?\u5c06\u62ec\u53f7\u89c6\u4e3a\u8fd0\u7b97.\u5de6\u62ec\u53f7\u4f18\u5148\u7ea7\u4f4e.\u9047\u5230\u53f3\u62ec\u53f7\u629b\u51fa\u4e4b\u524d\u7684\u7b26\u53f7,\u76f4\u5230\u5de6\u62ec\u53f7.</li> </ul> <p>\u5806\u6808\u4e0e\u51fd\u6570\u8c03\u7528</p> <ul> <li>\u8fde\u7eed\u591a\u6b21\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u6267\u884c\u540e\u56de\u7b54\u4e0a\u4e00\u4e2a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u5229\u7528\u5806\u6808:\u5148\u653e main \u51fd\u6570,\u518d\u6bcf\u6b21\u8c03\u7528\u4e00\u6b21\u538b\u5165\u51fd\u6570\u540d.\u6bcf\u6b21\u8fd4\u56de\u65f6\u6808\u9876\u7684\u51fd\u6570\u4e3a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u89e3\u51b3\u9012\u5f52\u8c03\u7528\u7684\u95ee\u9898.</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#the-queue-adt","title":"\u961f\u5217(The Queue ADT)","text":"<ul> <li>\u7528\u94fe\u8868\u5b9e\u73b0\u65f6,front \u5220\u9664\u5143\u7d20,rear \u63d2\u5165\u5143\u7d20(front \u6307\u5411 next,\u5220\u9664\u540e\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u4e0b\u4e00\u4e2a).</li> <li>\u6307\u9488\u6307\u5411\u53f3,\u5219\u4ece\u53f3\u63d2\u5165,\u4ece\u5de6\u5220\u9664</li> <li>\u961f\u5217\u7a7a\u95f4\u7528\u6ee1\u540e\u600e\u4e48\u529e?\u5faa\u73af\u961f\u5217.</li> <li>\u5faa\u73af\u961f\u5217\u7a7a\u548c\u6ee1:front==rear+1(\u53d6\u4f59)</li> <li>\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u5224\u65ad?\u961f\u5217\u4e2d n \u4e2a\u4f4d\u7f6e,\u5171\u6709 n+1 \u4e2d\u60c5\u51b5,\u4f46 front \u548c rear \u7684\u72b6\u6001\u5171\u6709 n \u79cd(\u4fe1\u606f\u91cf\u4e0d\u591f)</li> <li>\u600e\u4e48\u589e\u52a0\u4fe1\u606f?\u52a0\u5165 tag,\u63d2\u5165\u65f6\u8bbe\u7f6e\u4e3a 1,\u5220\u9664\u65f6\u8bbe\u7f6e\u4e3a 0.\u65e0\u6cd5\u5224\u65ad\u65f6\u770b tag.</li> <li>\u6216\u8005\u4f7f\u961f\u5217\u72b6\u6001\u4e00\u5171 n \u79cd.\u7a7a\u65f6 rear+1==front,\u4e00\u4e2a\u5143\u7d20\u65f6 front==rear,\u6ee1\u65f6 front==rear+2.</li> <li>\u4e00\u822c\u4f7f\u7528 rear \u4e0d\u6307\u5b9e\u9645\u7684\u4f4d\u7f6e,\u800c\u662f\u6307\u4e0b\u4e00\u4e2a\u8981\u653e\u7684\u4f4d\u7f6e.\u7a7a:<code>front\\==rear</code>,\u6ee1:<code>front\\==rear+1</code>.</li> <li>\u6216\u8005 front \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e(\u54d1\u5934),\u7a7a:front==rear,\u6ee1:front==rear+1.</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/","title":"4. \u6811\u7684\u6982\u5ff5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 903 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#class-four","title":"Class Four","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_1","title":"\u535a\u5f08\u6811","text":"<ul> <li>\u7528\u6811\u89e3\u51b3\u96f6\u548c\u535a\u5f08\u7684\u95ee\u9898(e.g.\u68cb\u7c7b)</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8868\u793a\u4e0b\u4e00\u6b65\u6240\u6709\u53ef\u80fd\u7684\u8d70\u6cd5,\u4f7f\u7528 minmax \u7b97\u6cd5\u548c\\(\\alpha\\beta\\)\u526a\u679d</li> <li>\u6838\u5fc3 1:\u8bc4\u4f30\u6bcf\u4e2a\u8282\u70b9.AlphaGo:\u6839\u636e\u4e4b\u524d\u4eba\u7c7b\u68cb\u8c31\u5b66\u4e60,\u8ba1\u7b97\u5404\u79cd\u68cb\u5c40\u83b7\u80dc\u6982\u7387(\u6536\u76ca)</li> <li>\u6838\u5fc3 2:\u81ea\u5df1\u5c42\u53d6 max,\u5bf9\u624b\u5c42\u53d6 min</li> <li>\u5bf9\u56f4\u68cb\u800c\u8a00 minmax \u8ba1\u7b97\u91cf\u592a\u5927,\u5229\u7528\u8499\u7279\u5361\u6d1b\u6309\u6982\u7387\u9009\u62e9\u65b9\u5411</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_2","title":"\u6811\u7684\u6982\u5ff5","text":"<ul> <li>\u6811\u548c\u56fe\u7684\u533a\u522b:\u6811\u4e00\u5b9a\u8fde\u901a,\u6ca1\u6709\u56de\u8def.</li> <li>\u5bf9\u4e8e\u56fe\u800c\u8a00,\u8fde\u901a,\u6ca1\u56de\u8def,n \u4e2a\u70b9 n-1 \u6761\u8fb9,\u8fd9\u4e09\u4e2a\u6761\u4ef6\u77e5\u4e8c\u63a8\u4e00</li> <li>\u68ee\u6797:\u6811\u7684\u96c6\u5408</li> <li>degree of tree:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u4e2a\u513f\u5b50;degree of graph:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u6761\u51fa\u8fb9</li> <li>\u6811\u4e0a\u4efb\u4f55\u4e24\u70b9\u4e4b\u95f4\u7684 path \u4e00\u5b9a\u552f\u4e00</li> <li>depth:\u8be5\u70b9\u5230\u6839\u7684\u8ddd\u79bb</li> <li>height:\u8be5\u70b9\u5230\u6700\u4f4e\u70b9\u7684\u8ddd\u79bb</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_3","title":"\u6811\u7684\u5b9e\u73b0","text":"<ul> <li>\u7528\u94fe\u8868,\u600e\u4e48\u89e3\u51b3\u6bcf\u4e2a\u8282\u70b9\u513f\u5b50\u6570\u4e0d\u786e\u5b9a\u7684\u95ee\u9898?\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u4ec5\u6709 FirstChild,NextSibling \u4e24\u4e2a\u6307\u9488</li> <li>\u8fd9\u6837\u7684\u6811\u5373\u5316\u4e3a\u4e8c\u53c9\u6811</li> <li>\u5229\u7528\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6784\u5efa\u6811\uff1a</li> <li>\u8bfb\u5165\u6570,\u5b58\u50a8\u6307\u9488</li> <li>\u8bfb\u5165\u7b26\u53f7,\u629b\u51fa\u4e24\u4e2a\u6570,\u5c06\u7b26\u53f7\u7684\u6307\u9488\u538b\u5165,\u629b\u51fa\u7684\u6570\u4f5c\u4e3a\u8be5\u7b26\u53f7\u7684\u513f\u5b50</li> <li>\u8868\u8fbe\u5f0f\u524d\u5e8f\u904d\u5386\u5f97\u5230\u524d\u5e8f\u8868\u8fbe\u5f0f\uff0c\u540e\u5e8f\u904d\u5386\u5f97\u5230\u540e\u5e8f\u8868\u8fbe\u5f0f</li> <li>\u904d\u5386\u7684\u672c\u8d28:\u5c06\u4e8c\u7ef4\u7ed3\u6784\u53d8\u6210\u4e00\u7ef4\u7684\u5e8f\u5217</li> <li>\u7ebf\u7d22\u6811:\u6839\u8282\u70b9\u548c\u53f6\u8282\u70b9\u6d6a\u8d39\u7684\u6307\u9488\u6307\u5411\u904d\u5386\u65f6\u7684\u524d\u4e00\u4e2a\u70b9\u548c\u540e\u4e00\u4e2a\u70b9.\u9700\u8981\u6807\u8bb0\u662f\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fd8\u662f\u6839\u6216\u53f6\u7684\u6307\u9488.\u6bcf\u6b21\u5224\u65ad\u662f\u4e0d\u662f\u7ebf\u7d22.</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u53ef\u589e\u52a0\u54d1\u5934\u8282\u70b9.</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#hw4","title":"HW4","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_4","title":"\u4e8c\u53c9\u6811\u6982\u5ff5","text":"<ul> <li>\u6811\u7684\u5ea6\uff1a\u4e00\u4e2a\u8282\u70b9\u6709 m \u4e2a\u5206\u53c9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u5c31\u4e3a m\u3002\u53f6\u5b50\u8282\u70b9\u7684\u5ea6\u4e3a 0\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5206\u53c9\u3002\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u5ea6\u53ea\u6709 0\uff0c1\uff0c2 \u8fd9\u4e09\u79cd\uff0c\u5176\u4e2d\u4e3a 0 \u7684\u80af\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\uff1amax(\u5de6\u5b50\u6811\u6df1\u5ea6\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6)+1\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u5206\u7c7b</li> <li>\u6ee1\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u4e14\u6709\u4e2a\\(2^k-1\\)\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u6ee1\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u7684\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3a i\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811(AVL \u6811)\uff1a\u5b83\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28</li> <li>\u5728\u4e8c\u53c9\u6811\u4e0a\u7684\u7b2c i \u5c42\u4e0a\u81f3\u591a\u6709\\(2^{i-1}\\)\u4e2a\u8282\u70b9(i&gt;=1)</li> <li>\u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u81f3\u591a\u6709\\(2^k-1\\)\u4e2a\u8282\u70b9(k &gt;= 1)</li> <li>\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u6761\u6027\u8d28\uff1an0\u3001n1\u3001n2 \u5206\u522b\u4ee3\u8868\u5ea6\u6570\u4e3a 0\u30011\u30012 \u7684\u8282\u70b9\u603b\u6570\u3002n \u4e3a\u603b\u7ed3\u70b9\u6570\uff0c\u5219\u6709\uff1a     n=\u6240\u6709\u8282\u70b9\u5ea6\u4e4b\u548c+1 (\u6240\u6709\u6811\u7684\u6027\u8d28)     \\(n_0=n_2+1;\\) (\u6ee1\u4e8c\u53c9\u6811\\(n_0=2^k,n_2=2^k-1\\),\u975e\u6ee1\u4e8c\u53c9\u6811\\(n_0,n_2\\)\u540c\u65f6\u51cf\u5c0f)     \\(n=n_0+n_1+n_2;\\) \\(\u5206\u652f\u603b\u7ebf=n-1=n_1+2n_2;\\) (\u8fde\u901a\u65e0\u56de\u8def\u56fe\u7684\u8fb9\u4e3a n-1\uff0c\u5c06 n0 \u7528 n2 \u4ee3\u5165)</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_5","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ol> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> </li> <li> <p>\u5bf9\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6309\u7167\u67d0\u79cd\u904d\u5386\u65b9\u5f0f\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u53eb\u4f5c\u7ebf\u7d22\u5316\uff0c\u88ab\u7ebf\u7d22\u5316\u4e86\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u7ebf\u7d22\u4e8c\u53c9\u6811(Threaded binary tree)\u3002</p> </li> <li> <p>\u5f15\u5165\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u76ee\u7684\u662f\uff1a\u52a0\u5feb\u67e5\u627e\u7ed3\u70b9\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u6784\u9020</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784\uff1alchild ltag data rtag rchild</p> </li> <li>ltag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u5de6\u513f\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u524d\u9a71.rtag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u53f3\u5b69\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u540e\u7ee7.</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/","title":"5. \u6811\u7684\u904d\u5386\u548c\u7279\u6b8a\u7684\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 575 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#class-five","title":"Class Five","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_1","title":"\u524d\u5e8f,\u4e2d\u5e8f,\u540e\u5e8f\u548c\u6808","text":"<ul> <li>\u524d\u5e8f,\u4e2d\u5e8f\u63a8\u540e\u5e8f:\u524d\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u4e2d\u5e8f,\u540e\u5e8f\u63a8\u524d\u5e8f:\u540e\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u524d\u5e8f,\u540e\u5e8f\u63a8\u4e2d\u5e8f:\u4e0d\u80fd\u5b9e\u73b0,\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u5b50\u6811\u5728\u5de6\u8fd8\u662f\u5728\u53f3.</li> <li>e.g. \u524d\u5e8f AB,\u540e\u5e8f BA</li> <li>\u6811\u7684\u5806\u6808\u64cd\u4f5c:\u4e00\u76f4\u5411\u5de6 push \u5230\u5e95,\u5230\u53f6\u8282\u70b9\u65f6 pop \u4e00\u4e2a\u5143\u7d20,\u518d\u4ece pop \u51fa\u7684\u5143\u7d20\u5f00\u59cb\u5411\u53f3\u8d70.</li> <li>\u6808\u63a8\u524d\u5e8f:push \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u4e2d\u5e8f:pop \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u540e\u5e8f:</li> <li>\u7b2c\u4e00\u4e2a push \u7684\u662f\u6839.</li> <li>\u540e\u9762 push \u7684\u5143\u7d20,\u5982\u679c\u524d\u4e00\u4e2a\u662f push,\u5219\u662f\u5de6\u513f\u5b50;\u5982\u679c\u524d\u4e00\u4e2a\u662f pop,\u5219\u662f pop \u51fa\u5143\u7d20\u7684\u53f3\u513f\u5b50</li> <li>\u6811\u548c\u6808</li> <li>\u6bcf\u4e2a\u5408\u6cd5\u7684\u5806\u6808\u64cd\u4f5c\u5e8f\u5217,\u90fd\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u6811.</li> <li>m \u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811,\u5171\u6709 Catalan(n)\u79cd.\\(C_n=\\sum\\limits_{i=0}^{n-1}C_iC_{n-i-1}\\)</li> <li>Catalan \u6570\u9012\u63a8:m \u4e2a\u8282\u70b9\u5de6\u53f3\u5206\u914d</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_2","title":"\u51e0\u79cd\u7279\u6b8a\u7684\u6811","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#skewed-binary-trees","title":"Skewed Binary Trees \u504f\u659c\u4e8c\u53c9\u6811","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#complete-binary-trees","title":"Complete Binary Trees \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<ul> <li>\u4f18\u70b9:\u80fd\u7528\u6570\u7ec4\u5b58\u50a8</li> <li>\u7b2c k \u5c42,\u8fd9\u4e00\u5c42\u6700\u591a\u8282\u70b9\u6570\u4e3a\\(2^{k-1}\\),\u6240\u6709\u5c42\u6700\u591a\u8282\u70b9\u6570\\(2_k-1\\)</li> <li>\\(n_0=n_2+1\\)   Pf:\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n0+n1+n2;\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n1+2n2.\u8054\u7acb\u4e24\u5f0f\u5f97\u5230.</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#binary-search-trees","title":"Binary Search Trees \u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u5de6\u5b50\u6811\u5747\u6bd4\u5176\u5c0f,\u53f3\u5b50\u6811\u90fd\u6bd4\u5176\u5927.</p> <ul> <li>find:\u6bcf\u6b21\u5411\u5de6\u6216\u5411\u53f3\u67e5\u627e   \u4f7f\u7528\u5c3e\u9012\u5f52\u5b9e\u73b0.\u6240\u6709\u5c3e\u9012\u5f52\u90fd\u80fd\u5316\u6210\u5faa\u73af.</li> <li>insert:\u5148\u5411\u5de6\u6216\u5411\u53f3\u627e\u5230\u5408\u9002\u4f4d\u7f6e,\u8d70\u5230 NULL \u65f6 malloc \u5185\u5b58,\u5c06 NULL \u53d8\u4e3a\u8282\u70b9.</li> <li>delete:</li> <li>\u6ca1\u6709\u513f\u5b50\u6216\u53ea\u6709 1 \u4e2a\u513f\u5b50:\u76f4\u63a5\u5220\u9664</li> <li>\u6709 2 \u4e2a\u513f\u5b50:\u4ece\u5de6\u5b50\u6811\u627e\u6700\u5927\u503c(\u6216\u53f3\u5b50\u6811\u627e\u6700\u5c0f\u503c),\u66ff\u6362\u8981\u5220\u9664\u7684\u8282\u70b9,\u518d\u5728\u5de6(\u6216\u53f3)\u5b50\u6811\u79cd\u5220\u9664\u76f8\u5e94\u503c.      PS:\u6bcf\u6b21\u5220\u9664\u64cd\u4f5c\u591a,\u53ef\u4f7f\u7528\u61d2\u6807\u8bb0(lazy tag).</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_3","title":"\u5e73\u8861\u6811","text":"<p>\u51e0\u79cd\u51b3\u5b9a\u662f\u5426\u5e73\u8861\u7684\u6307\u6807:</p> <ol> <li>AVL \u6811(\u5e73\u8861\u6811)    \u7531\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u51b3\u5b9a.\u4efb\u610f\u8282\u70b9,\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u76f8\u5dee\u4e3a 0 \u6216 1,\u8ba4\u4e3a\u6811\u5e73\u8861.</li> <li>\u7ea2\u9ed1\u6811    \u5c06\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u6216\u9ed1.\u4efb\u610f\u5206\u652f\u6ee1\u8db3: 1. \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e3a\u7ea2 2. \u7ea2\u8282\u70b9\u6570\u76f8\u540c 3. \u9ed1\u8282\u70b9\u4e0d\u76f8\u90bb    \u5219\u8ba4\u4e3a\u8be5\u6811\u5e73\u8861.    \u5e73\u8861\u7684\u7ea2\u9ed1\u6811\u6700\u957f\u5206\u652f\u548c\u6700\u77ed\u5206\u652f\u6700\u591a\u76f8\u5dee 1 \u500d.</li> <li>B+\u6811    \u6ee1\u8db3\u6240\u6709\u5206\u652f\u8282\u70b9\u6570\u6700\u591a\u4e3a m,\u6700\u5c11\u4e3a m/2,\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u6811,\u8ba4\u4e3a\u5e73\u8861.    B+\u6811\u5e94\u7528\u4e8e\u6570\u636e\u5e93\u7ba1\u7406.</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/","title":"5.5 \u4e00\u4e9b\u9898\u76ee\u548c\u7b14\u8bb0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1604 \u4e2a\u5b57\u00a0\u00a035 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_1","title":"\u4e00\u4e9b\u5224\u65ad\u9898","text":"<p>\uff08\u7c98\u8d34\u81ea csdn\uff0c\u4e0d\u786e\u4fdd\u6b63\u786e\uff09</p> <p>1-1 \u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F 1-2 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F 1-3 \u6570\u636e\u7ed3\u6784\u6982\u5ff5\u5305\u62ec\u6570\u636e\u4e4b\u95f4\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u6570\u636e\u7684\u8fd0\u7b97\u4e09\u4e2a\u65b9\u9762\u3002T 1-4 \u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u7c7b\u578b\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u636e\u9879\u6784\u6210\u3002T 1-5 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u8bf4\u660e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5b83\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u7ed3\u6784\u3002F 1-6 2N \u548c N \u5177\u6709\u76f8\u540c\u7684\u589e\u957f\u901f\u5ea6\u3002F 1-7 \u7b97\u6cd5\u5206\u6790\u7684\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002T 1-8 n! is O(n^n).T 1-9 O(N2) is the same as O(1+2+3+\u22ef+N).T 1-10 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002T 1-11 \u82e5\u67d0\u7ebf\u6027\u8868\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5b58\u53d6\u4efb\u4e00\u6307\u5b9a\u5e8f\u53f7\u7684\u5143\u7d20\u548c\u5728\u6700\u540e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u8fd0\u7b97\uff0c\u5219\u5229\u7528\u987a\u5e8f\u8868\u5b58\u50a8\u6700\u8282\u7701\u65f6\u95f4\u3002T 1-12 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u63d2\u5165\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-13 (neuDS)\u5728\u987a\u5e8f\u8868\u4e2d\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5176\u5bf9\u5e94\u7684\u7269\u7406\u4f4d\u7f6e\u4e5f\u662f\u76f8\u90bb\u7684\u3002T 1-14 (neuDS)\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T 1-15 (neuDS)\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\u3002F 1-16 (neuDS)\u5728\u987a\u5e8f\u8868\u4e0a\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u65f6\u9700\u8981\u79fb\u52a8\u5143\u7d20\u7684\u4e2a\u6570\u4e0e\u5f85\u63d2\u5165\u6216\u5f85\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\u65e0\u5173\u3002F 1-17 (neuDS)\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f\u53ea\u80fd\u7528\u4e8e\u5b58\u50a8\u7ebf\u6027\u7ed3\u6784\u3002F 1-18 \u5728\u5177\u6709 N \u4e2a\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-19 \u82e5\u7528\u94fe\u8868\u6765\u8868\u793a\u4e00\u4e2a\u7ebf\u6027\u8868\uff0c\u5219\u8868\u4e2d\u5143\u7d20\u7684\u5730\u5740\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002F 1-20 \u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F 1-21 \u901a\u8fc7\u5bf9\u5806\u6808 S \u64cd\u4f5c\uff1aPush(S,1), Push(S,2), Pop(S), Push(S,3), Pop(S), Pop(S)\u3002\u8f93\u51fa\u7684\u5e8f\u5217\u4e3a\uff1a123\u3002F 1-22 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\uff0c\u8f93\u51fa\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f i\uff0c\u5219\u7b2c j \u4e2a\u8f93\u51fa\u5143\u7d20\u662f j\u2212i\u22121\u3002F 1-23 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a{1, 2, 3, 4, 5}\uff0c\u5219\u4e0d\u53ef\u80fd\u5f97\u5230{3, 4, 1, 2, 5}\u8fd9\u6837\u7684\u51fa\u6808\u5e8f\u5217\u3002T 1-24 \u6808\u548c\u961f\u5217\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u65e2\u53ef\u4ee5\u662f\u987a\u5e8f\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u94fe\u5f0f\u65b9\u5f0f\u3002T 1-25 \u6808\u5e95\u5143\u7d20\u662f\u4e0d\u80fd\u5220\u9664\u7684\u5143\u7d20\u3002F 1-26 \u987a\u5e8f\u6808\u4e2d\u5143\u7d20\u503c\u7684\u5927\u5c0f\u662f\u6709\u5e8f\u7684\u3002F 1-27 \u5728 n \u4e2a\u5143\u7d20\u8fde\u7eed\u8fdb\u6808\u4ee5\u540e\uff0c\u5b83\u4eec\u7684\u51fa\u6808\u987a\u5e8f\u548c\u8fdb\u6808\u987a\u5e8f\u4e00\u5b9a\u6b63\u597d\u76f8\u53cd\u3002T 1-28 \u6808\u9876\u5143\u7d20\u548c\u6808\u5e95\u5143\u7d20\u6709\u53ef\u80fd\u662f\u518b\u4e00\u4e2a\u5143\u7d20\u3002T 1-29 \u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u5728\u8868\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u3002 T 1-30 \u94fe\u6808\u7684\u63d2\u5165\u5728\u6808\u9876\uff0c\u5220\u9664\u5728\u6808\u5e95\u3002F 1-31 \u6240\u8c13\u201c\u5faa\u73af\u961f\u5217\u201d\u662f\u6307\u7528\u5355\u5411\u5faa\u73af\u94fe\u8868\u6216\u8005\u5faa\u73af\u6570\u7ec4\u8868\u793a\u7684\u961f\u5217\u3002F 1-32 \u5728\u7528\u6570\u7ec4\u8868\u793a\u7684\u5faa\u73af\u961f\u5217\u4e2d\uff0cfront \u503c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e rear \u503c\u3002F 1-33 \u5faa\u73af\u961f\u5217\u6267\u884c\u51fa\u961f\u64cd\u4f5c\u65f6\u4f1a\u5f15\u8d77\u5927\u91cf\u5143\u7d20\u7684\u79fb\u52a8\u3002F 1-34 \u961f\u5217\u4e2d\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u53eb\u961f\u5934\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u53eb\u961f\u5c3e\u3002 F 1-35 \u961f\u5217\u7ed3\u6784\u7684\u987a\u5e8f\u5b58\u50a8\u4f1a\u4ea7\u751f\u5047\u6ea2\u51fa\u73b0\u8c61\u3002 T 1-36 \u4e8c\u53c9\u6811\u901a\u5e38\u6709\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002T 1-37 \u5728\u542b\u6709 n \u4e2a\u7ed3\u70b9\u7684\u6811\u4e2d\uff0c\u8fb9\u6570\u53ea\u80fd\u662f n-1 \u6761\u3002T 1-38 \u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u82e5\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5b83\u5fc5\u662f\u6811\u53f6\u3002T 1-39 \u4e00\u68f5\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7528\u81ea\u7136\u6570\u4f9d\u6b21\u7f16\u53f7\uff0c\u5219\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a 2i(2i&lt; n),\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u662f 2i+1(2i+1&lt; n)\u3002F 1-40 \u7528\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u5bfc\u51fa\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002F\uff1f 1-41 \u4e8c\u53c9\u6811\u53ea\u80fd\u7528\u4e8c\u53c9\u94fe\u8868\u8868\u793a\u3002F 1-42 \u6811\u5f62\u7ed3\u6784\u4e2d\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb\u3002T 1-43 \u5ea6\u4e3a\u4e8c\u7684\u6811\u5c31\u662f\u4e8c\u53c9\u6811\u3002F \u4e8c\u53c9\u6811\u8fd8\u8981\u6709\u533a\u5206\u5de6\u53f3\u513f\u5b50\u7684\u987a\u5e8f 1-44 \u67d0\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002T 1-45 \u67d0\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002F 1-46 \u4e00\u68f5\u6709 124 \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u53f6\u7ed3\u70b9\u4e2a\u6570\u662f\u786e\u5b9a\u7684\u3002T 1-47 \u4efb\u4f55\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u540c\u4e00\u5c42\u7684\u7ed3\u70b9\u4ece\u5de6\u5230\u53f3\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-48 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u67e5\u627e\u548c\u6298\u534a\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\u3002F 1-49 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002F 1-50 \u82e5\u4e00\u641c\u7d22\u6811\uff08\u67e5\u627e\u6811\uff09\u662f\u4e00\u4e2a\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5219\u8be5\u6811\u7684\u6700\u5927\u503c\u4e00\u5b9a\u5728\u53f6\u7ed3\u70b9\u4e0a F 1-51 N \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u6709\u591a\u79cd\uff0c\u5176\u4e2d\u6811\u9ad8\u6700\u5c0f\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u6700\u4f73\u7684\u3002 T \u6839\u8282\u70b9\u9009\u53d6\u4e0d\u540c\uff0cBST \u4e0d\u540c 1-52 \u4e2d\u6839\u904d\u5386\u4e8c\u53c9\u67e5\u627e\u6811\u6240\u5f97\u5e8f\u5217\u4e00\u5b9a\u662f\u6709\u5e8f\u5e8f\u5217\u3002T 1-53 \u5728\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u90fd\u6bd4\u5de6\u5b69\u5b50\u5173\u952e\u5b57\u5927\uff0c\u6bd4\u53f3\u5b69\u5b50\u5173\u952e\u5b57\u5c0f\u3002T 1-54 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u67e5\u627e\u6548\u7387\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u9ad9\u5ea6\u6709\u5173\u3002T 1-55 \u4efb\u4f55\u6700\u5c0f\u5806\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002F 1-56 \u4efb\u4f55\u6700\u5c0f\u5806\u4e2d\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u4e00\u53f6\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-57 \u5bf9 N\uff08\u22652\uff09\u4e2a\u6743\u503c\u5747\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6784\u9020\u54c8\u592b\u66fc\u6811\uff0c\u5219\u6811\u4e2d\u4efb\u4e00\u975e\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u4e0b\u4e00\u5c42\u4efb\u4e00\u7ed3\u70b9\u7684\u6743\u503c\u3002T 1-58 \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u6700\u4f18\u7684\u524d\u7f00\u7801\u3002\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u96c6\u53ca\u5176\u5b57\u7b26\u9891\u7387\uff0c\u5176\u54c8\u592b\u66fc\u7f16\u7801\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002F \u591a\u4e2a\u5b57\u7b26\u9891\u7387\u76f8\u540c\u65f6\uff0c\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\u53ef\u4ea4\u6362\uff0c\u53ef\u80fd\u5bfc\u81f4\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e0d\u552f\u4e00 1-59 \u54c8\u592b\u66fc\u6811\u662f\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u6811\uff0c\u8def\u5f84\u4e0a\u6743\u503c\u8f83\u5927\u7684\u7ed3\u70b9\u79bb\u6839\u8f83\u8fd1\u3002F\uff1f 1-60 \u65e0\u5411\u8fde\u901a\u56fe\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e4b\u548c\u4e3a\u5076\u6570\u3002T 1-61 \u65e0\u5411\u8fde\u901a\u56fe\u8fb9\u6570\u4e00\u5b9a\u5927\u4e8e\u9876\u70b9\u4e2a\u6570\u51cf 1\u3002F \u53ef\u4ee5\u7b49\u4e8e 1-62 \u7528\u90bb\u63a5\u8868\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002F 1-63 \u7528\u90bb\u63a5\u77e9\u9635\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002T 1-64 \u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u8fb9\u4e4b\u548c\u7684 2 \u500d\u3002T 1-65 \u5728\u4efb\u4e00\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u4e4b\u548c\u3002T 1-66 \u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u5806\u6808\u5b9e\u73b0\u3002F 1-67 \u5982\u679c\u65e0\u5411\u56fe G \u5fc5\u987b\u8fdb\u884c\u4e24\u6b21\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u624d\u80fd\u8bbf\u95ee\u5176\u6240\u6709\u9876\u70b9\uff0c\u5219 G \u4e2d\u4e00\u5b9a\u6709\u56de\u8def\u3002F 1-68 \u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56fe\uff0c\u5176\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u3002F 1-69 \u82e5\u6709\u5411\u56fe\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u5373\u4f7f\u4e0d\u7528\u8bbf\u95ee\u6807\u5fd7\u4f4d\u540c\u4e00\u7ed3\u70b9\u4e5f\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u4e24\u6b21\u3002F 1-70 \u5728\u4e00\u4e2a\u6709\u6743\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5 b \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u662f 12\uff0c\u4e14 c \u5230 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u4e3a 2 \u7684\u8fb9\uff0c\u5219 c \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u5c0f\u4e8e 10\u3002T 1-71 P \u662f\u9876\u70b9 S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c\u8be5\u56fe\u4e2d\u7684\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u90fd\u52a0 1\uff0cP \u4ecd\u7136\u662f S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\u3002F 1-72 \u5bf9\u4e8e\u5e26\u6743\u65e0\u5411\u56fe G = (V, E)\uff0cM \u662f G \u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219 M \u4e2d\u4efb\u610f\u4e24\u70b9 V1 \u5230 V2 \u7684\u8def\u5f84\u4e00\u5b9a\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002F 1-73 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u5f52\u5e76\u8d9f\u6570\u7684\u6570\u91cf\u7ea7\u662f O(NlogN)\u3002F 1-74 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u9700\u8981\u7684\u989d\u5916\u7a7a\u95f4\u4e3a O(N)\u3002F 1-75 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff0c\u6bd4\u8f83\u6b21\u6570\u548c\u79fb\u52a8\u6b21\u6570\u5206\u522b\u4e3a O(N2)\u548c O(N)\u3002T 1-76 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(NlogN)\u3002F 1-77 \u5e0c\u5c14\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-78 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-79 \u8981\u4ece 50 \u4e2a\u952e\u503c\u4e2d\u627e\u51fa\u6700\u5927\u7684 3 \u4e2a\u503c\uff0c\u9009\u62e9\u6392\u5e8f\u6bd4\u5806\u6392\u5e8f\u5feb\u3002T 1-80 \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u6216\u8005\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u6b21\u5e73\u65b9\u7ea7 O(N * logN)\uff0c\u5219\u8be5\u6392\u5e8f\u7b97\u6cd5\u4e00\u5b9a\u662f\u4e0d\u7a33\u5b9a\u7684\u3002F 1-81 \u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u82e5\u8981\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u9700\u8981\u5efa\u7acb\u5927\u6839\u5806\u3002T 1-82 \u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u5806\u3002T 1-83 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002F 1-84 \u5185\u6392\u5e8f\u8981\u6c42\u6570\u636e\u4e00\u5b9a\u8981\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8\u3002F 1-85 \u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u662f\u6307\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u6bd4\u8f83\u6b21\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e14\u7b97\u6cd5\u80fd\u591f\u7ec8\u6b62\u3002F 1-86 \u5f53\u5f85\u6392\u5e8f\u8bb0\u5f55\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u6216\u8005\u5df2\u7ecf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u65f6\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u6700\u7701\u3002F 1-87 \u5feb\u901f\u6392\u5e8f\u7684\u901f\u5ea6\u5728\u6240\u6709\u6392\u5e8f\u65b9\u6cd5\u4e2d\u4e3a\u6700\u5feb\uff0c\u800c\u4e14\u6240\u9700\u9644\u52a0\u7a7a\u95f4\u4e5f\u6700\u5c11\u3002F 1-88 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-89 \u5feb\u901f\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-90 \u7528\u5e0c\u5c14(shell)\u65b9\u6cd5\u6392\u5e8f\u65f6\uff0c\u82e5\u5173\u952e\u5b57\u7684\u521d\u59cb\u6392\u5e8f\u6742\u4e71\u65e0\u5e8f\uff0c\u5219\u6392\u5e8f\u6548\u7387\u5c31\u4f4e\u3002F 1-91 \u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n2)\uff0c\u4e0d\u53d7\u6570\u636e\u521d\u59cb\u6392\u5217\u7684\u5f71\u54cd\u3002T 1-92 \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(n2)\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(nlog2n)\uff0c\u6240\u4ee5\u5feb\u901f\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u6548\u7387\u597d\u3002F 1-93 \uff08101,88,46,70,34,39,45,58,66,10\uff09\u662f\u5806\u3002T 1-94 \u6709\u4e00\u5927\u6839\u5806\uff0c\u5806\u4e2d\u4efb\u610f\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u5747\u5927\u4e8e\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u5173\u952e\u5b57\uff0c\u5219\u5176\u5177\u6709\u6700\u5c0f\u503c\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5e76\u53ef\u80fd\u5728\u5806\u7684\u6700\u540e\u4e24\u5c42\u4e2d\u3002T 1-95 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5f52\u5e76\u6392\u5e8f\u90fd\u6bd4\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u5feb\u3002F 1-96 \u5728\u6563\u5217\u8868\u4e2d\uff0c\u6240\u8c13\u540c\u4e49\u8bcd\u5c31\u662f\u88ab\u4e0d\u540c\u6563\u5217\u51fd\u6570\u6620\u5c04\u5230\u540c\u4e00\u5730\u5740\u7684\u4e24\u4e2a\u5143\u7d20\u3002F 1-97 \u5c06 M \u4e2a\u5143\u7d20\u5b58\u5165\u7528\u957f\u5ea6\u4e3a S \u7684\u6570\u7ec4\u8868\u793a\u7684\u6563\u5217\u8868\uff0c\u5219\u8be5\u8868\u7684\u88c5\u586b\u56e0\u5b50\u4e3a M/S\u3002T 1-98 \u5728\u6563\u5217\u4e2d\uff0c\u51fd\u6570\u201c\u63d2\u5165\u201d\u548c\u201c\u67e5\u627e\u201d\u5177\u6709\u540c\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002T 1-99 \u5373\u4f7f\u628a 2 \u4e2a\u5143\u7d20\u6563\u5217\u5230\u6709 100 \u4e2a\u5355\u5143\u7684\u8868\u4e2d\uff0c\u4ecd\u7136\u6709\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002T 1-100 \u5c06 10 \u4e2a\u5143\u7d20\u6563\u5217\u5230 100 000 \u4e2a\u5355\u5143\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002F</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#hw","title":"HW \u603b\u7ed3","text":"<p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The time complexity of the function which calculates \\(F_N\\) recursively is \\(\\Theta(N!)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\\( T(N)=T(N-1)+T(N-2)+O(1)\\),\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(\\phi^n)\\).</p> <p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The space complexity of the function which calculates \\(F_N\\) recursively is:</p> <ul> <li>[ ] A. \\(O(\\log N)\\)</li> <li>[x] B. \\(O(N)\\)</li> <li>[ ] C. \\(O(F_N)\\)</li> <li>[ ] D. \\(O(N!)\\)</li> </ul> <p>\u6bcf\u4e2a\\(F(N)\\)\u867d\u7136\u5728\u4e0d\u540c\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4ea7\u751f,\u4f46\u662f\u5b58\u50a8\u5728\u7edf\u4e00\u7a7a\u95f4,\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\).</p> <p>For a sequentially stored linear list of length \\(N\\), the time complexities for deleting the first element and inserting the last element are \\(O(1)\\) and \\(O(N)\\), respectively.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u901a\u5e38\u6307\u7684\u662f\u6570\u7ec4\uff08Array\uff09\u6216\u987a\u5e8f\u8868\uff08Sequential List\uff09\uff0c\u5176\u7279\u70b9\u662f\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u4e14\u5fc5\u987b\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u3002 \u5220\u9664\u7b2c\u4e00\u4e2a\u540e\uff0c\u540e\u9762\u7684\u6240\u6709\u5143\u7d20\u90fd\u9700\u8981\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u4ee5\u586b\u8865\u7a7a\u7f3a\uff0c\u65f6\u95f4\u4e3a\\(O(N)\\). \u5982\u679c\u6570\u7ec4\u7a7a\u95f4\u8db3\u591f\uff08\u672a\u6ee1\uff09\uff0c\u76f4\u63a5\u5728 A[N] \u7684\u4f4d\u7f6e\u5199\u5165\u65b0\u5143\u7d20\uff0c\u65e0\u9700\u79fb\u52a8\u5176\u4ed6\u5143\u7d20,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\).</p> <p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient?</p> <ul> <li>[ ] A. doubly linked list</li> <li>[ ] B. singly linked circular list</li> <li>[ ] C. doubly linked circular list with a dummy head node</li> <li>[x] D. sequential list</li> </ul> <p>\u94fe\u8868\u4e0d\u80fd\u5feb\u901f\u968f\u673a\u8bbf\u95ee \u800c\u63d2\u5165\u5220\u9664\u53ea\u9700\u8981\u5bf9\u672b\u5c3e\u8fdb\u884c,\u7ebf\u6027\u8868\u64cd\u4f5c\u65f6\u4e0d\u7528\u79fb\u52a8\u5176\u4ed6\u4f4d.</p> <p>It is always possible to represent a tree by a one-dimensional integer array.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u6811\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u7528\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u4e00\u7ef4\u6570\u7ec4\uff09\u8868\u793a\u3002\u5e38\u89c1\u7684\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u6811\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ol> <li>\u7236\u8282\u70b9\u8868\u793a\u6cd5\uff1a\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7d22\u5f15\u3002</li> <li>\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\uff1a\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5144\u5f1f\u3002\uff08\u8fd9\u91cc\u8981\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e0d\u7b26\u5408\uff09</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u8868\u793a\uff1a\u8865\u5168\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u7ec4\u6309\u5c42\u7ea7\u987a\u5e8f\u5b58\u50a8\u3002</li> </ol> <p>\u5173\u952e\u5728\u4e8e\u5b58\u50a8\u7684\u4e0d\u662f\u8282\u70b9\u7684\u6570\u503c\uff0c\u800c\u662f\u8282\u70b9\u7684\u7f16\u53f7\u3002</p> <p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>n=2016\uff0cn1=16 n=n0+n1+n2 \u603b\u8fb9\u6570\uff1a e=n-1 =n0+n1+n2 -1(\u6811\u7684\u6027\u8d28\uff1a\u8fb9\u6570=\u70b9\u6570-1) e=n1+2*n2 \u7ed3\u8bba: n2=n0 -1 n=n1+2*n2 -1 2*n2=1001,\u4e0d\u5b58\u5728</p> <p>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</p> <ul> <li>[ ] A. 5</li> <li>[ ] B. 6</li> <li>[ ] C. 7</li> <li>[x] D. 8</li> </ul> <p>\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u6307\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u76f4\u63a5\u540e\u4ee3\uff09\u7684\u6570\u91cf\u3002\u5b83\u7684\u201c\u5ea6\u201d\u5c31\u662f\u5b83\u62e5\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\uff08\u5373\u76f4\u63a5\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u6570\uff09\u3002 Given a tree of degree 3 \u4ec0\u4e48\u610f\u601d\uff1f\u6811\u7684 degree \u901a\u5e38\u6307\u8282\u70b9\u7684\u6700\u5927\u5ea6\u6570\uff08\u5373\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u5927\u5b50\u8282\u70b9\u6570\uff09\u3002\u8fd9\u91cc\"degree 3 \u7684\u6811\"\u53ef\u80fd\u6307\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u6700\u591a\u6709 3 \u4e2a\u5b50\u8282\u70b9\uff08\u5373 3 \u53c9\u6811\uff0cternary tree\uff09\u3002 n2=3, n3=2 n0+n1+n2+n3-1=n1+2*n2+3*n3 n0+n1+5-1=n1+12 n0=8</p> <p>If a general tree \\( T \\) is converted into a binary tree \\( BT \\), then which of the following \\( BT \\) traversals gives the same sequence as that of the post-order traversal of \\( T \\)?</p> <ul> <li>[ ] A. Pre-order traversal</li> <li>[x] B. In-order traversal</li> <li>[ ] C. Post-order traversal</li> <li>[ ] D. Level-order traversal</li> </ul> <p>\u600e\u4e48\u628a\u666e\u901a\u7684\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\uff1f</p> <ol> <li>\u9009\u62e9\u6839\u8282\u70b9\uff1a</li> <li>\u4fdd\u6301\u539f\u6811\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002</li> <li>\u5904\u7406\u5b50\u8282\u70b9\uff1a</li> <li>\u5c06\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u5176\u5de6\u5b69\u5b50\uff08left child\uff09\u3002</li> <li>\u5c06\u8be5\u8282\u70b9\u7684\u5176\u4ed6\u5b50\u8282\u70b9\uff08\u6309\u987a\u5e8f\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08right siblings\uff09\u3002</li> <li>\u9012\u5f52\u5e94\u7528\uff1a</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u8282\u70b9\u9012\u5f52\u5e94\u7528\u76f8\u540c\u7684\u89c4\u5219\u3002</li> </ol> <p>\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u540e\u7684\u4e2d\u5e8f\u904d\u5386\u7b49\u4ef7\u4e8e\u539f\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002</p> <p>In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u3002 \u540c\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u5de6\u8fb9\u7684\u4e00\u5b9a\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u7684\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002 \u6240\u4ee5\u4ece\u5de6\u5230\u53f3\u4e00\u5b9a\u5355\u8c03\u9012\u589e\u3002</p> <p>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u5982\u679c 4 \u548c 6 \u662f\u5144\u5f1f\uff0c5 \u4e00\u5b9a\u662f\u7236\u4eb2\uff1b \u5982\u679c 4 \u548c 6 \u5728\u540c\u4e00\u5c42\u4f46\u4e0d\u76f8\u90bb\uff0c5 \u4e00\u5b9a\u5728\u4e2d\u95f4\uff0c\u77db\u76fe\uff1b \u5982\u679c 4 \u548c 6 \u76f8\u90bb\u4f46\u4e0d\u662f\u5144\u5f1f\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b:</p> Text Only<pre><code>      5\n     / \\\n    3   7\n   / \\ / \\\n  1  4 6  8\n</code></pre> <p>In a max-heap with \\( n \\) (\\( &gt; 1 \\)) elements, the array index of the minimum key may be ____.</p> <ul> <li>[ ] A. 1</li> <li>[ ] B. \\(\\lfloor n/2 \\rfloor - 1\\)</li> <li>[ ] C. \\(\\lfloor n/2 \\rfloor\\)</li> <li>[x] D. \\(\\lfloor n/2 \\rfloor + 2\\)</li> </ul> <p>\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\u3002 \u4e00\u5171 n \u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6700\u540e\u4e00\u5c42\u7b2c\u4e00\u4e2a\u662f\\(2^{n-1}\\)\uff0c\u6700\u540e\u4e00\u4e2a\u662f\\(2^n-1\\)\uff0c \u603b\u8282\u70b9\u6570\\(2^{n-1} &lt; N &lt;2^n-1\\)\uff0c\\(\\lfloor N/2 \\rfloor + 1\\)\u5f97\u5230\u6700\u540e\u4e00\u884c\u7b2c\u4e00\u4e2a</p> <p>Using the linear algorithm to build a min-heap from the sequence {15, 26, 32, 8, 7, 20, 12, 13, 5, 19}, and then insert 6. Which one of the following statements is FALSE?</p> <ul> <li>[ ] A. The root is 5</li> <li>[ ] B. The path from the root to 26 is {5, 6, 8, 26}</li> <li>[x] C. 32 is the left child of 12</li> <li>[ ] D. 7 is the parent of 19 and 15</li> </ul> <p>Using the linear algorithm to build a min-heap \u662f\u600e\u4e48\u6837\u5efa\u5806\uff1f \u5efa\u5806\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u81ea\u5e95\u5411\u4e0a\uff08Bottom-up\uff0cLinear-time Heapify\uff09\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u548c\u5176\u5b50\u6811\u53d8\u4e3a\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> <li>\u9010\u4e2a\u63d2\u5165\uff08Top-down\uff0cIncremental Heap Construction\uff09\uff1a\u6392\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6570\u63d2\u5165\u5230\u6700\u540e\u518d\u8c03\u6574\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)\u3002</li> </ol> <p>If a \\(d\\)-heap is stored as an array, for an entry located in position \\(i\\), the parent, the first child and the last child are at:</p> <ul> <li>[ ] A. \\(\\lceil (i + d - 2) / d \\rceil\\), \\((i - 2)d + 2\\), and \\((i - 1)d + 1\\)</li> <li>[ ] B. \\(\\lceil (i + d - 1) / d \\rceil\\), \\((i - 2)d + 1\\), and \\((i - 1)d\\)</li> <li>[ ] C. \\(\\lfloor (i + d - 2) / d \\rfloor\\), \\((i - 1)d + 2\\), and \\(id + 1\\)</li> <li>[ ] D. \\(\\lfloor (i + d - 1) / d \\rfloor\\), \\((i - 1)d + 1\\), and \\(id\\)</li> </ul> <p>d-heap \u4ec0\u4e48\u610f\u601d? d-heap \u662f\u5806\uff08Heap\uff09\u7684\u4e00\u79cd\u6cdb\u5316\u5f62\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 d \u4e2a\u5b50\u8282\u70b9\uff08\u800c\u975e\u4e8c\u53c9\u5806\u7684 2 \u4e2a\u5b50\u8282\u70b9\uff09\u3002\u5b83\u662f\u5b8c\u5168 d \u53c9\u6811\uff08Complete d-ary Tree\uff09\u3002 \u53ef\u7528 d=3 \u4ee3\u5165\u9a8c\u8bc1\uff0c\u6392\u9664\u9519\u8bef\u9009\u9879</p> <p>If a binary search tree of \\(N\\) nodes is complete, which one of the following statements is FALSE?</p> <ul> <li>[ ] A. the average search time for all nodes is \\(O(\\log N)\\)</li> <li>[ ] B. the minimum key must be at a leaf node</li> <li>[x] C. the maximum key must be at a leaf node</li> <li>[ ] D. the median node must either be the root or in the left subtree</li> </ul> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u8981\u6c42\u4e0a\u9762\u5168\u6ee1\uff0c\u6700\u540e\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u586b\uff0c\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811\u3002 BST \u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\u6811\u7684\u9ad8\u5ea6\u3002\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f\\(log(N)\\),\u6545\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\\(O(\\log N)\\)\u3002 \u4e2d\u4f4d\u6570\uff08median node\uff09\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u5947\u6570\u4e2a\u8282\u70b9\uff1a\u6b63\u4e2d\u95f4\u7684\u8282\u70b9\uff08\u7b2c \\(\\lfloor(N/2)\\rfloor\\)\u4e2a\uff09\u3002</li> <li>\u5076\u6570\u4e2a\u8282\u70b9\uff1a\u4e2d\u95f4\u4e24\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c N/2 \u4e2a\u8282\u70b9\uff0c\u79f0\u4e3a\u4e0b\u4e2d\u4f4d\u6570\uff09\u3002</li> </ul> <p>N \u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u662f\u6839\uff1bN \u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5728\u5de6\u5b50\u6811\u4e2d\u3002</p> <p>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than \\(N/2\\), but not \\(O(\\log N)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u901a\u8fc7\u6309\u5927\u5c0f\u5408\u5e76\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7\\(O(\\log N)\\)\uff08\u5176\u4e2d N \u662f\u603b\u5143\u7d20\u6570\uff09\u3002</p> <p>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</p> <ul> <li>[ ] A. 1 and -6</li> <li>[x] B. 4 and -5</li> <li>[ ] C. 8 and -5</li> <li>[ ] D. 8 and -6</li> </ul> <p>disjoint set \u662f\u4ec0\u4e48\uff1f \u5e76\u67e5\u96c6 \u4e60\u60ef\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1aroot \u548c merge\uff0c\u521d\u59cb\u5316\u4e3a\u81ea\u73af \u4e0a\u8bfe\u8bb2\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1a\u6240\u6709\u7684\u6839\u4e3a\u8d1f\u6570\uff0c\u7edd\u5bf9\u503c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f</p> <p>A relation \\( R \\) is defined on a set \\( S \\). If for every element \\( e \\) in \\( S \\), \"\\( e \\, R \\, e \\)\" is always true, then \\( R \\) is said to be ____ over \\( S \\).</p> <ul> <li>[ ] A. consistent</li> <li>[ ] B. symmetric</li> <li>[ ] C. transitive</li> <li>[x] D. reflexive</li> </ul> <p>\u5728\u6570\u5b66\u4e2d\uff0c\u5173\u7cfb \\( R \\) \u5728\u96c6\u5408 \\( S \\) \u4e0a\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u91cd\u8981\u6027\u8d28\uff1a</p> <ol> <li> <p>\u81ea\u53cd\u6027\uff08Reflexive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( e \\in S \\)\uff0c\u6709 \\( e \\, R \\, e \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u5b9e\u6570\u4e0a\u7684\u201c\u2264\u201d\u5173\u7cfb\u662f\u81ea\u53cd\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u5b9e\u6570 \\( x \\)\uff0c\\( x \\leq x \\) \u90fd\u6210\u7acb\u3002</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff08Symmetric\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\)\uff0c\u90a3\u4e48 \\( b \\, R \\, a \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c=\u201d\u5173\u7cfb\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a = b \\)\uff0c\u90a3\u4e48 \\( b = a \\)\u3002</p> </li> <li> <p>\u4f20\u9012\u6027\uff08Transitive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b, c \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\) \u4e14 \\( b \\, R \\, c \\)\uff0c\u90a3\u4e48 \\( a \\, R \\, c \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c\u2264\u201d\u5173\u7cfb\u662f\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a \\leq b \\) \u4e14 \\( b \\leq c \\)\uff0c\u90a3\u4e48 \\( a \\leq c \\)\u3002</p> </li> <li> <p>\u4e00\u81f4\u6027\uff08Consistent\uff09\uff1a</p> </li> <li>\u8fd9\u4e2a\u672f\u8bed\u5728\u5173\u7cfb\u7684\u6027\u8d28\u4e2d\u4e0d\u5e38\u89c1\uff0c\u901a\u5e38\u4e0d\u662f\u5173\u7cfb\u7684\u57fa\u672c\u6027\u8d28\u4e4b\u4e00\u3002\u53ef\u80fd\u662f\u6307\u5173\u7cfb\u5728\u67d0\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00\u81f4\u6027\uff0c\u4f46\u4e00\u822c\u4e0d\u4f5c\u4e3a\u5173\u7cfb\u7684\u6807\u51c6\u6027\u8d28\u3002</li> </ol> <p>\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F</p> <p>\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6570\u636e\u9879\uff08Data Item\uff09\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5143\u7d20\uff08Data Element\uff09\u3002</p> <ul> <li>\u6570\u636e\u9879\uff1a\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u6570\u636e\u5355\u4f4d\uff0c\u4e5f\u79f0\u4e3a\u5b57\u6bb5\u6216\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u5b66\u751f\u7684\u201c\u5b66\u53f7\u201d\u6216\u201c\u59d3\u540d\u201d\u662f\u4e00\u4e2a\u6570\u636e\u9879\u3002</li> <li>\u6570\u636e\u5143\u7d20\uff1a\u662f\u7531\u82e5\u5e72\u6570\u636e\u9879\u7ec4\u6210\u7684\uff0c\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b66\u751f\u7684\u5b8c\u6574\u8bb0\u5f55\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u3001\u5e74\u9f84\u7b49\u6570\u636e\u9879\uff09\u662f\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u9879\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> <li>\u6216\u201c\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F</p> <p>\u9519\u8bef\u539f\u56e0\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u7684\u5b9a\u4e49\u662f\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u975e\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u903b\u8f91\u7ed3\u6784\uff1a\u63cf\u8ff0\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u8054\u65b9\u5f0f\uff08\u5982\u7ebf\u6027\u7ed3\u6784\u3001\u6811\u5f62\u7ed3\u6784\u3001\u56fe\u7ed3\u6784\u7b49\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5b66\u751f\u8bb0\u5f55\uff08\u6570\u636e\u5143\u7d20\uff09\u6309\u5b66\u53f7\u987a\u5e8f\u6392\u5217\u662f\u7ebf\u6027\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5c5e\u4e8e\u6570\u636e\u5143\u7d20\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u662f\u7269\u7406\u5b58\u50a8\u6216\u5177\u4f53\u5b9e\u73b0\u7684\u8303\u7574\u3002</li> </ul> <p>\u6df7\u6dc6\u903b\u8f91\u7ed3\u6784\u4e0e\u7269\u7406\u7ed3\u6784\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u662f\u62bd\u8c61\u7684\uff08\u5982\u94fe\u8868\u3001\u6811\uff09\uff0c\u4e0e\u5b58\u50a8\u65e0\u5173\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u63a5\u8fd1\u7269\u7406\u5b58\u50a8\uff08\u5982\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u6392\u5217\uff09\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T</p> <p>\u968f\u673a\u5b58\u53d6\u662f\u6307\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b58\u50a8\u4ecb\u8d28\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u6309\u987a\u5e8f\u904d\u5386\u524d\u9762\u7684\u6570\u636e\u3002\u8fd9\u79cd\u8bbf\u95ee\u65b9\u5f0f\u7684\u7279\u70b9\u662f\u8bbf\u95ee\u65f6\u95f4\u4e0e\u6570\u636e\u4f4d\u7f6e\u65e0\u5173\uff0c\u65e0\u8bba\u6570\u636e\u5b58\u50a8\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u80fd\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u76f4\u63a5\u8bfb\u53d6\u6216\u5199\u5165\u3002</p> <p>\u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F</p> <p>1. \u4e8c\u5206\u67e5\u627e\u7684\u524d\u63d0\u662f\u201c\u968f\u673a\u5b58\u53d6\u201d \u4e8c\u5206\u67e5\u627e\uff08Binary Search\uff09\u7684\u6838\u5fc3\u64cd\u4f5c\u662f \u201c\u901a\u8fc7\u4e0b\u6807\u76f4\u63a5\u8bbf\u95ee\u4e2d\u95f4\u5143\u7d20\u201d\uff08\u5373 <code>arr[mid]</code>\uff09\uff0c\u8fd9\u8981\u6c42\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u652f\u6301 \u968f\u673a\u5b58\u53d6\uff08Random Access\uff09\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6570\u7ec4\uff1a\u901a\u8fc7\u4e0b\u6807\u53ef\u5728 \\( O(1) \\) \u65f6\u95f4\u5185\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\u3002</li> <li>\u652f\u6301\u968f\u673a\u5b58\u53d6\u7684\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u52a8\u6001\u6570\u7ec4\uff09\u3002</li> </ul> <p>\u4f46 \u5355\u5411\u94fe\u8868\uff08Singly Linked List\uff09 \u7684\u5b58\u50a8\u7279\u6027\u662f\uff1a</p> <ul> <li>\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\uff1a\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff08\u5982 <code>list[5]</code>\uff09\u3002</li> <li>\u5fc5\u987b\u987a\u5e8f\u904d\u5386\uff1a\u8981\u8bbf\u95ee\u7b2c \\( k \\) \u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u9010\u4e2a\u79fb\u52a8 \\( k-1 \\) \u6b21\u3002</li> </ul> <p>\u5728\u4efb\u610f\u4e00\u68f5\u975e\u7a7a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5220\u9664\u67d0\u7ed3\u70b9\u540e\u53c8\u5c06\u5176\u63d2\u5165\uff0c\u5219\u6240\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u5220\u9664\u524d\u539f\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\u3002 F</p> <p>\u5220\u9664\u975e\u53f6\u8282\u70b9\u540e\u8be5\u70b9\u88ab\u5176\u4ed6\u8282\u70b9\u4ee3\u66ff\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\u3002\u91cd\u65b0\u63d2\u5165\u540e\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\uff0c\u4e00\u5b9a\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_2","title":"\u4e00\u4e9b\u7b14\u8bb0","text":"<ul> <li>\u961f\u5217\u5047\u6ea2\u51fa\u662f\u4ec0\u4e48\uff1f\u961f\u5934\u5df2\u6ee1\uff0c\u961f\u5c3e\u7a7a\uff0c\u4f46\u4f1a\u8bef\u8ba4\u4e3a\u961f\u5217\u5df2\u6ee1\u3002\u53ef\u7528\u5faa\u73af\u961f\u5217\u89e3\u51b3\u3002</li> <li>\u5ea6\u4e3a 2 \u7684\u6811\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u6811\u3002\u4e8c\u53c9\u6811\u8981\u6c42\u6240\u6709\u8282\u70b9\u7684\u5ea6&lt;=2\uff0c\u4e14\u5b50\u8282\u70b9\u6709\u987a\u5e8f\u3002\u53ef\u80fd\u5b58\u5728\u6811\u7684\u5b50\u8282\u70b9\u65e0\u987a\u5e8f\uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u5b50\u8282\u70b9\u4e0d\u5f71\u54cd\u6811\u7684\u5b9a\u4e49\u3002</li> <li>\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u4e0d\u4e00\u5b9a\u80fd\u63a8\u51fa\u540e\u5e8f\u904d\u5386\u3002\u8981\u6c42\u4e3a\u4e8c\u53c9\u6811\uff08\u6216\u666e\u901a\u6811\u4f46\u5b50\u8282\u70b9\u6709\u987a\u5e8f\uff09\u3002</li> <li>\u81ea\u7136\u6570\u8ba4\u4e3a\u5305\u62ec\u96f6\u5417\uff1f\u5305\u62ec\u3002</li> <li>\u56fe\u4e2d\u9876\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u3002\u6709\u5411\u56fe\u5206\u5165\u5ea6\u548c\u51fa\u5ea6\u3002</li> <li>\u6df1\u5ea6\u4f18\u5148\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6570\u636e\u7ed3\u6784\uff1aDFS \u8c03\u7528\u5806\u6808\uff0c\u5b9e\u73b0\u6df1\u5ea6\u4f18\u5148\uff1bBFS \u8c03\u7528\u961f\u5217\uff0c\u4fdd\u8bc1\u6309\u5c42\u904d\u5386\u3002</li> <li>\u6709\u5411\u56fe\u4e2d\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u540c\u4e00\u8282\u70b9\u4e5f\u53ef\u80fd\u88ab\u591a\u6b21\u8bbf\u95ee\u3002\u56e0\u4e3a\u540c\u4e00\u8282\u70b9\u5165\u5ea6\u53ef\u80fd\u5927\u4e8e 1\uff0c\u5373\u53ef\u80fd\u88ab\u591a\u4e2a\u8282\u70b9\u6307\u5411\uff0c\u904d\u5386\u65f6\u53ef\u901a\u8fc7\u6bcf\u4e2a\u6307\u5411\u5b83\u7684\u8282\u70b9\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u3002</li> <li>\u5806\u6392\u5e8f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5927\u6839\u5806\uff1b\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5c0f\u6839\u5806\u3002\u56e0\u4e3a\u5806\u6392\u5e8f\u7684\u89c4\u5b9a\u64cd\u4f5c\u4e3a\u5806\u9876\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362\u3002</li> <li>\u867d\u7136\u7ed9\u51fa\u5173\u952e\u5b57\u5e8f\u5217\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u4f46\u4f9d\u6b21\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u80fd\u4e0d\u4e00\u6837\u3002</li> <li>\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u56fe\u4e2d\u662f\u5426\u6709\u73af\u3002\u6392\u5e8f\u65f6\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u52a0\u5165\uff0c\u5e76\u4f9d\u6b21\u4e3a\u57fa\u7840\u4fee\u6539\u5176\u4ed6\u70b9\u7684\u5165\u5ea6\u3002\u82e5\u6240\u6709\u70b9\u90fd\u88ab\u6392\u5e8f\uff0c\u5219\u6ca1\u6709\u73af\uff08DAG\uff09\uff1b\u82e5\u6709\u7684\u70b9\u6ca1\u6709\u88ab\u6392\u5e8f\uff0c\u5219\u6709\u73af\u3002</li> <li>Partial order is a precedence relation which is both transitive and irreflexive.\u504f\u5e8f\u5173\u7cfb\u662f\u4e00\u79cd\u4f18\u5148\u5173\u7cfb\uff0c\u6ee1\u8db3\u4f20\u9012\u6027\u548c\u975e\u81ea\u53cd\u6027\u3002</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#aoe-aov","title":"AOE \u7f51\u548c AOV \u7f51\u662f\u4ec0\u4e48","text":"<p>AOE \u7f51\uff08Activity On Edge network\uff09\uff0c\u5373\u8fb9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\u7edc\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u5de5\u7a0b\u9879\u76ee\u4e2d\u6d3b\u52a8\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u3002</p> <p>AOE \u7f51\u4e0e AOV \u7f51\u7684\u533a\u522b\uff1a</p> \u7279\u6027 AOE \u7f51 AOV \u7f51\uff08Activity On Vertex\uff09 \u8868\u793a\u65b9\u5f0f \u8fb9\u8868\u793a\u6d3b\u52a8\uff0c\u9876\u70b9\u8868\u793a\u4e8b\u4ef6 \u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u4f9d\u8d56\u5173\u7cfb \u6743\u503c \u8fb9\u6709\u6743\u503c\uff08\u6d3b\u52a8\u65f6\u95f4\uff09 \u8fb9\u65e0\u6743\u503c\uff08\u4ec5\u8868\u793a\u987a\u5e8f\uff09 \u5e94\u7528\u91cd\u70b9 \u8ba1\u7b97\u5173\u952e\u8def\u5f84\u548c\u5de5\u671f \u62d3\u6251\u6392\u5e8f\uff08\u786e\u5b9a\u6d3b\u52a8\u6267\u884c\u987a\u5e8f\uff09"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_3","title":"\u81ea\u5e95\u5411\u4e0a\u548c\u9010\u4e2a\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83","text":"<p>\u81ea\u5e95\u5411\u4e0a\u5efa\u5806\uff08Bottom-up Heap Construction\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u800c\u975e\u76f4\u89c2\u8ba4\u4e3a\u7684 O(n log n)\uff0c\u8fd9\u662f\u7531\u5806\u7684\u6811\u72b6\u7ed3\u6784\u7279\u6027\u548c\u6bcf\u5c42\u8282\u70b9\u6570\u4e0e\u8c03\u6574\u6210\u672c\u7684\u5e73\u8861\u51b3\u5b9a\u7684\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a</p> <p>1. \u590d\u6742\u5ea6\u5206\u6790\u7684\u6570\u5b66\u63a8\u5bfc \u5047\u8bbe\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6\u4e3a h = log\u2082n\uff0c\u5404\u5c42\u8282\u70b9\u6570\u548c\u8c03\u6574\u6210\u672c\u5982\u4e0b\uff1a</p> \u5c42\u7ea7\uff08\u4ece\u4e0b\u5230\u4e0a\uff09 \u8282\u70b9\u6570 \u6700\u591a\u4e0b\u6c89\u6b65\u6570\uff08\u9ad8\u5ea6\uff09 \u7b2c h \u5c42\uff08\u53f6\u5b50\uff09 \u2248 n/2 0\uff08\u65e0\u9700\u8c03\u6574\uff09 \u7b2c h-1 \u5c42 \u2248 n/4 1 \u7b2c h-2 \u5c42 \u2248 n/8 2 ... ... ... \u7b2c 0 \u5c42\uff08\u6839\uff09 1 h <p>\u603b\u8c03\u6574\u6b21\u6570 T(n) \u4e3a\u5404\u5c42\u8282\u70b9\u6570 \u00d7 \u5176\u4e0b\u6c89\u6b65\u6570\u4e4b\u548c\uff1a [ T(n) = \\sum{i=0}^{h-1} (\\text{\u7b2c } i \\text{ \u5c42\u8282\u70b9\u6570}) \\times (\\text{\u4e0b\u6c89\u6b65\u6570}) = \\sum \\cdot i ]}^{h-1} \\frac{n}{2^{i+1}</p> <p>\u7b80\u5316\u6c42\u548c\uff08\u4ee4 k = h - i\uff09\uff1a [ T(n) \\leq n \\sum{k=1}^{h} \\frac{k}{2^{k+1}} &lt; n \\sum = n \\cdot 2 = O(n) ]}^{\\infty} \\frac{k}{2^{k} \uff08\u6ce8\uff1a\u7ea7\u6570 \\(\\sum\\_{k=1}^{\\infty} \\frac{k}{2^k} = 2\\) \u662f\u6536\u655b\u7684\uff09</p> <p>2. \u76f4\u89c2\u7406\u89e3</p> <ul> <li>\u5927\u90e8\u5206\u8282\u70b9\u4f4d\u4e8e\u5e95\u5c42\uff1a\u7ea6 n/2 \u7684\u53f6\u5b50\u8282\u70b9\u65e0\u9700\u8c03\u6574\uff0cn/4 \u7684\u8282\u70b9\u53ea\u9700\u4e0b\u6c89 1 \u6b65\u3002</li> <li>\u9ad8\u5c42\u8282\u70b9\u5c11\u4f46\u4ee3\u4ef7\u9ad8\uff1a\u4ec5\u6709 1 \u4e2a\u6839\u8282\u70b9\u9700\u4e0b\u6c89 h \u6b65\uff0c\u4f46\u56e0\u5176\u6570\u91cf\u6781\u5c11\uff081 \u4e2a\uff09\uff0c\u5bf9\u603b\u590d\u6742\u5ea6\u7684\u8d21\u732e\u88ab\u4f4e\u5c42\u8282\u70b9\u5e73\u8861\u3002</li> </ul> <p>3. \u5bf9\u6bd4\u81ea\u9876\u5411\u4e0b\u5efa\u5806\uff08O(n log n)\uff09</p> <ul> <li>\u81ea\u9876\u5411\u4e0b\uff08\u63d2\u5165\u5f0f\u5efa\u5806\uff09\uff1a   \u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\u5e76\u6267\u884c \u4e0a\u6d6e\uff08Sift Up\uff09\uff0c\u5171 n \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6700\u574f O(log n)\uff0c\u603b\u590d\u6742\u5ea6 O(n log n)\u3002</li> <li>\u81ea\u5e95\u5411\u4e0a\uff1a   \u5229\u7528\u5df2\u6709\u5b50\u6811\u7ed3\u6784\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u8c03\u6574\uff0c\u8d8a\u4e0a\u5c42\u8282\u70b9\u8c03\u6574\u6b21\u6570\u8d8a\u591a\uff0c\u4f46\u8282\u70b9\u6570\u6307\u6570\u7ea7\u51cf\u5c11\uff0c\u603b\u548c\u6536\u655b\u4e3a O(n)\u3002</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_4","title":"\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6\u603b\u8868</p> \u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u4f18\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u9002\u7528\u573a\u666f \u5192\u6ce1\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u6559\u5b66\u3001\u5c0f\u89c4\u6a21\u6570\u636e \u9009\u62e9\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u7b80\u5355\u5b9e\u73b0\uff0c\u4ea4\u6362\u6b21\u6570\u5c11 \u63d2\u5165\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u5c0f\u89c4\u6a21\u6216\u90e8\u5206\u6709\u5e8f\u6570\u636e \u5e0c\u5c14\u6392\u5e8f \\(O(n^{1.3})\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u4e2d\u7b49\u89c4\u6a21\u6570\u636e\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u5316\u7248 \u5f52\u5e76\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n)\\) \u7a33\u5b9a \u5927\u89c4\u6a21\u6570\u636e\uff0c\u5916\u90e8\u6392\u5e8f \u5feb\u901f\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n^2)\\) \\(O(n \\log n)\\) \\(O(\\log n)\\)~\\(O(n)\\) \u4e0d\u7a33\u5b9a \u901a\u7528\u9ad8\u6548\uff0c\u5185\u5b58\u6392\u5e8f \u5806\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u9700\u8981\u539f\u5730\u6392\u5e8f \u8ba1\u6570\u6392\u5e8f \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u975e\u8d1f\u6574\u6570\uff0c\u8303\u56f4 k \u8f83\u5c0f \u6876\u6392\u5e8f \\(O(n + k)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(n + k)\\) \u7a33\u5b9a \u6570\u636e\u5747\u5300\u5206\u5e03 \u57fa\u6570\u6392\u5e8f \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u591a\u5173\u952e\u5b57\u6392\u5e8f\uff08\u5982\u5b57\u7b26\u4e32\uff09 <p>\u5173\u952e\u8bf4\u660e</p> <ol> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u5e73\u5747\u6027\u80fd\u6700\u4f18\uff0c\u4f46\u6700\u574f\u60c5\u51b5\uff08\u5982\u5df2\u6392\u5e8f\u6570\u7ec4\uff09\u9000\u5316\u4e3a \\(O(n^2)\\)\uff0c\u53ef\u901a\u8fc7\u968f\u673a\u5316\u67a2\u8f74\u907f\u514d\u3002</p> </li> <li>\u5806\u6392\u5e8f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\uff0c\u4f46\u5e38\u6570\u56e0\u5b50\u8f83\u5927\uff0c\u5b9e\u9645\u6162\u4e8e\u5feb\u901f\u6392\u5e8f\u3002</li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a\u5747\u57fa\u4e8e\u975e\u6bd4\u8f83\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a81\u7834 \\(O(n \\log n)\\)\uff0c\u4f46\u9700\u7279\u5b9a\u6761\u4ef6\uff08\u5982\u6570\u636e\u8303\u56f4\u6709\u9650\uff09\u3002</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u539f\u5730\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\u3002</p> </li> <li> <p>\u9012\u5f52\u5f00\u9500\uff1a\u5feb\u901f\u6392\u5e8f\u5e73\u5747 \\(O(\\log n)\\)\uff08\u9012\u5f52\u6808\uff09\uff0c\u6700\u574f \\(O(n)\\)\uff1b\u5f52\u5e76\u6392\u5e8f\u9700 \\(O(n)\\) \u989d\u5916\u7a7a\u95f4\u3002</p> </li> <li> <p>\u7a33\u5b9a\u6027\uff1a</p> </li> <li>\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5f52\u5e76\u3001\u5192\u6ce1\uff09\u4fdd\u6301\u76f8\u7b49\u5143\u7d20\u7684\u539f\u59cb\u987a\u5e8f\uff0c\u9002\u7528\u4e8e\u591a\u5173\u952e\u5b57\u6392\u5e8f\u3002</li> <li>\u4e0d\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5feb\u901f\u3001\u5806\u6392\u5e8f\uff09\u53ef\u80fd\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002</li> </ol> <p>\u5404\u7b97\u6cd5\u7279\u70b9\u53ca\u9002\u7528\u573a\u666f</p> <ol> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u5e73\u5747\u6548\u7387\u6700\u9ad8\uff0c\u7f13\u5b58\u53cb\u597d\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u6700\u574f\u60c5\u51b5\u6027\u80fd\u5dee\uff0c\u9700\u4f18\u5316\u67a2\u8f74\u9009\u62e9\u3002</li> <li> <p>\u9002\u7528\uff1a\u901a\u7528\u573a\u666f\uff0c\u5185\u5b58\u6392\u5e8f\uff08\u5982 C++ <code>std::sort</code>\uff09\u3002</p> </li> <li> <p>\u5f52\u5e76\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u7a33\u5b9a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u9700\u989d\u5916\u7a7a\u95f4\u3002</li> <li> <p>\u9002\u7528\uff1a\u5916\u90e8\u6392\u5e8f\uff08\u5927\u6570\u636e\u6587\u4ef6\uff09\u3001\u94fe\u8868\u6392\u5e8f\u3002</p> </li> <li> <p>\u5806\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u539f\u5730\u6392\u5e8f\uff0c\u65e0\u6700\u574f\u60c5\u51b5\u98ce\u9669\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u7f13\u5b58\u4e0d\u53cb\u597d\uff0c\u5b9e\u9645\u901f\u5ea6\u8f83\u6162\u3002</li> <li> <p>\u9002\u7528\uff1a\u5185\u5b58\u53d7\u9650\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002</p> </li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a</p> </li> <li>\u4f18\u70b9\uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> <li>\u7f3a\u70b9\uff1a\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8981\u6c42\uff08\u5982\u8303\u56f4\u5c0f\u3001\u5747\u5300\u5206\u5e03\uff09\u3002</li> <li>\u9002\u7528\uff1a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\uff08\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\uff09\u3002</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_5","title":"\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u5404\u79cd\u57fa\u672c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u4e00\u3001\u6808\uff08Stack\uff09 \u6808\u901a\u5e38\u7528 \u6570\u7ec4 \u6216 \u94fe\u8868 \u5b9e\u73b0\uff0c\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff1a</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u6808 <code>push</code> \\(O(1)\\) \u76f4\u63a5\u6dfb\u52a0\u5230\u6808\u9876 \u51fa\u6808 <code>pop</code> \\(O(1)\\) \u76f4\u63a5\u79fb\u9664\u6808\u9876\u5143\u7d20 \u67e5\u770b\u6808\u9876 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u6808\u9876\u5143\u7d20\uff0c\u4e0d\u5220\u9664 \u5224\u7a7a <code>isEmpty</code> \\(O(1)\\) \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a \u641c\u7d22\u5143\u7d20 \\(O(n)\\) \u9700\u8981\u904d\u5386\u6240\u6709\u5143\u7d20 <p>\u4e8c\u3001\u961f\u5217\uff08Queue\uff09 1. \u666e\u901a\u961f\u5217\uff08\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u961f <code>enqueue</code> \\(O(1)\\) \u6dfb\u52a0\u5230\u961f\u5c3e \u51fa\u961f <code>dequeue</code> \\(O(1)\\) \u79fb\u9664\u961f\u5934\u5143\u7d20\uff08\u94fe\u8868\u5b9e\u73b0\uff09 \\(O(n)\\) \u6570\u7ec4\u5b9e\u73b0\u9700\u79fb\u52a8\u5143\u7d20\uff08\u82e5\u7528\u5faa\u73af\u6570\u7ec4\u4f18\u5316\u4e3a \\(O(1)\\)\uff09 \u67e5\u770b\u961f\u5934 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u961f\u5934\u5143\u7d20 <p>2. \u4f18\u5148\u961f\u5217\uff08Priority Queue\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u57fa\u4e8e\u5806\uff08Heap\uff09\u5b9e\u73b0 \u5220\u9664\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(\\log n)\\) \u5806\u8c03\u6574 \u67e5\u770b\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(1)\\) \u8bbf\u95ee\u5806\u9876\u5143\u7d20 <p>\u4e09\u3001\u6811\uff08Tree\uff09 1. \u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff0c\u672a\u5e73\u8861\uff09</p> \u64cd\u4f5c \u5e73\u5747 \u6700\u574f\uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \\(O(n)\\) \u4f9d\u8d56\u6811\u7684\u9ad8\u5ea6 \u5220\u9664 \\(O(\\log n)\\) \\(O(n)\\) \u67e5\u627e \\(O(\\log n)\\) \\(O(n)\\) <p>2. \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff08AVL/\u7ea2\u9ed1\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u65cb\u8f6c\u64cd\u4f5c\u4fdd\u6301\u5e73\u8861 \u5220\u9664 \\(O(\\log n)\\) \u67e5\u627e \\(O(\\log n)\\) <p>3. \u5806\uff08Heap\uff0c\u4ee5\u4e8c\u53c9\u5806\u4e3a\u4f8b\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 <code>push</code> \\(O(\\log n)\\) \u4e0a\u6d6e\u8c03\u6574 \u5220\u9664\u5806\u9876 <code>pop</code> \\(O(\\log n)\\) \u4e0b\u6c89\u8c03\u6574 \u67e5\u770b\u5806\u9876 <code>peek</code> \\(O(1)\\) \u6784\u5efa\u5806 <code>heapify</code> \\(O(n)\\) \u4ece\u65e0\u5e8f\u6570\u7ec4\u6784\u5efa\u5806 <p>4. Trie\uff08\u5b57\u5178\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165/\u5220\u9664 \\(O(L)\\) \\(L\\) \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6 \u67e5\u627e \\(O(L)\\) <p>\u56db\u3001\u56fe\uff08Graph\uff09 1. \u56fe\u7684\u8868\u793a\u65b9\u5f0f</p> <ul> <li> <p>\u90bb\u63a5\u77e9\u9635\uff1a</p> </li> <li> <p>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(1)\\)</p> </li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(V)\\)\uff08\\(V\\) \u4e3a\u9876\u70b9\u6570\uff09</li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V^2)\\)</p> </li> <li> <p>\u90bb\u63a5\u8868\uff1a</p> </li> <li>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(k)\\)\uff08\\(k\\) \u4e3a\u76f8\u90bb\u8282\u70b9\u6570\uff09</li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(k)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V + E)\\)\uff08\\(E\\) \u4e3a\u8fb9\u6570\uff09</li> </ul> <p>2. \u5e38\u89c1\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6</p> \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \\(O(V + E)\\) \u90bb\u63a5\u8868\u8868\u793a \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 \\(O(V + E)\\) Dijkstra\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O((V + E) \\log V)\\) \u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u65e0\u8d1f\u6743\u8fb9\uff09 Bellman-Ford \\(O(VE)\\) \u5141\u8bb8\u8d1f\u6743\u8fb9 Floyd-Warshall \\(O(V^3)\\) \u591a\u6e90\u6700\u77ed\u8def\u5f84 \u62d3\u6251\u6392\u5e8f \\(O(V + E)\\) \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09 Kruskal\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09 \\(O(E \\log E)\\) \u57fa\u4e8e\u5e76\u67e5\u96c6\u4f18\u5316 Prim\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O(E \\log V)\\)"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_6","title":"\u6808,\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808","text":"<p>\u6808\u5206\u4e3a\u987a\u5e8f\u6808(\u6570\u7ec4\u5b58\u50a8)\u548c\u94fe\u5f0f\u6808(\u94fe\u8868\u5b58\u50a8)\u4e24\u79cd.</p> \u7279\u6027 \u987a\u5e8f\u6808 \u666e\u901a\u6808\uff08\u6cdb\u6307\uff09 \u5b9e\u73b0\u65b9\u5f0f \u6570\u7ec4\uff08\u8fde\u7eed\u5185\u5b58\uff09 \u4e0d\u9650\u5b9a\uff08\u53ef\u80fd\u662f\u94fe\u5f0f\u6808\u3001\u987a\u5e8f\u6808\u7b49\uff09 \u5b58\u50a8\u7ed3\u6784 \u5185\u5b58\u8fde\u7eed \u53ef\u80fd\u8fde\u7eed\uff08\u987a\u5e8f\u6808\uff09\u6216\u975e\u8fde\u7eed\uff08\u94fe\u5f0f\u6808\uff09 \u5bb9\u91cf \u56fa\u5b9a\u5927\u5c0f\uff08\u9700\u9884\u5206\u914d\uff09 \u53ef\u56fa\u5b9a\uff08\u987a\u5e8f\u6808\uff09\u6216\u52a8\u6001\uff08\u94fe\u5f0f\u6808\uff09 \u6269\u5bb9\u6210\u672c \u9700\u590d\u5236\u5168\u90e8\u5143\u7d20\uff08\u9ad8\u6210\u672c\uff09 \u94fe\u5f0f\u6808\u52a8\u6001\u6269\u5c55\uff08\u4f4e\u6210\u672c\uff09 \u64cd\u4f5c\u901f\u5ea6 \u6240\u6709\u64cd\u4f5c \\( O(1) \\)\uff08\u65e0\u6307\u9488\u5f00\u9500\uff09 \u94fe\u5f0f\u6808\u64cd\u4f5c\u9700\u7ef4\u62a4\u6307\u9488\uff08\u4ecd\u4e3a \\( O(1) \\)\uff09 \u9002\u7528\u573a\u666f \u5143\u7d20\u6570\u91cf\u5df2\u77e5\u3001\u9ad8\u9891\u64cd\u4f5c \u5143\u7d20\u6570\u91cf\u4e0d\u786e\u5b9a\u6216\u9700\u9891\u7e41\u589e\u5220"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_7","title":"\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868","text":"<p>\u4e0d\u53cd\u8f6c\u94fe\u8868\uff0c\u9012\u5f52\u5012\u5e8f\u8f93\u51fa:</p> <ol> <li>\u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9</li> <li>\u5728\u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u503c</li> </ol> <p>\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868:</p> C<pre><code>void printReverse(Node* head) {\n  if (head == NULL) // \u8fd4\u56de\u6761\u4ef6:\u7a7a\u94fe\u8868\n   return;\n\n  printReverse(head-&gt;next); // \u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9\n  printf(\"%d \", head-&gt;data); // \u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u6570\u636e\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_8","title":"\u4e2d\u7f00\u8f6c\u540e\u7f00","text":"<p>\u6570\u636e\u7ed3\u6784:stack,\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7b26;output,\u7528\u4e8e\u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f \u6b65\u9aa4:</p> <ol> <li>\u8f93\u5165\u53d8\u91cf:\u76f4\u63a5\u653e\u5165 output</li> <li>\u8f93\u5165(:\u653e\u5165 stack</li> <li>\u8f93\u5165):\u5c06 stack \u4e2d(\u4e4b\u524d\u7684\u7b26\u53f7\u5168\u90e8\u5f39\u51fa,\u653e\u5165 output</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u9ad8\u7684\u8fd0\u7b97\u7b26:\u653e\u5165 stack</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u4f4e\u7684\u8fd0\u7b97\u7b26:\u5f39\u51fa\u4f18\u5148\u7ea7\u9ad8\u7684\u6808\u9876\u7b26\u53f7,\u518d\u5c06\u8be5\u7b26\u53f7\u653e\u5165 stack</li> <li>\u8f93\u5165\u7ed3\u675f:\u5c06 stack \u4e2d\u5269\u4f59\u7b26\u53f7\u4f9d\u6b21\u5f39\u51fa,\u653e\u5165 output    \u4ee3\u7801:</li> </ol> C<pre><code>char postfix[N]; // \u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f\nchar stk[N];     // \u5b58\u653e\u8fd0\u7b97\u7b26\n\nvoid infixToPostfix (char* infix, char* postfix) {\n  for (int i = 0; i &lt; \u8868\u8fbe\u5f0f\u957f\u5ea6; i++) {\n    char ch = infix[i];\n    int j = 0; // \u8ddf\u8e2apostfix\u4e2d\u4f4d\u7f6e\n    if (ch\u662f\u6570\u5b57\u6216\u53d8\u91cf) {\n      postfix[j++] = ch;\n    } else if (ch == '(') {\n      push(stk, ch);\n    } else if (ch == ')') {\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876 != '(') {\n        postfix[j++] = pop(stk);\n      }\n      pop(stk); // \u5f39\u51fa\u5de6\u62ec\u53f7\n    } else {    // \u8fd0\u7b97\u7b26\u5904\u7406\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876\u5143\u7d20\u4f18\u5148\u7ea7 &gt;= ch\u7684\u4f18\u5148\u7ea7) {\n        postfix[j++] = pop(stk);\n      }\n      push(stk, ch);\n    }\n  }\n  while (\u6808\u975e\u7a7a) { // \u5f39\u51fa\u5269\u4f59\u8fd0\u7b97\u7b26\n    postfix[j++] = pop(stk);\n  }\n  postfix[j] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#bst","title":"BST \u6811\u64cd\u4f5c","text":"<p>\u7279\u70b9:\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5c0f,\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5927. BST \u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9 BST \u6811\u63d2\u5165:</p> <ol> <li>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e:\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5927,\u5f80\u5de6\u8d70;\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5c0f,\u5f80\u53f3\u8d70</li> <li>\u65b0\u5efa\u8282\u70b9\u5e76\u8fde\u63a5(\u63d2\u5165\u5f62\u6210\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u53f6\u8282\u70b9)    BST \u6811\u5220\u9664:</li> <li>\u53f6\u8282\u70b9:\u76f4\u63a5\u5220\u9664</li> <li>\u6709\u4e00\u4e2a\u513f\u5b50:\u5220\u9664\u7236\u4eb2,\u7528\u513f\u5b50\u4ee3\u66ff</li> <li>\u6709\u4e24\u4e2a\u513f\u5b50:\u627e\u5230\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u5e76\u5220\u9664,\u5220\u9664\u6839,\u7528\u8be5\u8282\u70b9\u4ee3\u66ff</li> </ol> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* insert(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return \u5efa\u7acb\u65b0\u8282\u70b9; // \u8fd4\u56de\u6761\u4ef6\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = insert(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = insert(rt\u7684\u53f3\u5b50\u6811, val);\n  }\n  return rt;\n}\n</code></pre> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u5faa\u73af,\u6570\u7ec4):</p> C<pre><code>void insert(int* bst, int val) {\n  if (bst[1]\u4e3a\u521d\u59cb\u503c) {\n    bst[1] = val; // val\u662f\u6839\n    return;\n  }\n\n  int cur = 1; // \u4ece\u6839\u5f00\u59cb\n  if (val &lt; bst[cur]) {\n    if (cur\u5de6\u5b50\u6811\u7a7a) {\n      bst[cur * 2] = val;\n      break;\n    } else {\n      cur = cur * 2;   // \u4e0b\u79fbcur\n    }\n  } else if (val &gt; bst[cur]) {\n    if (cur\u53f3\u5b50\u6811\u7a7a) {\n      bst[cur * 2 + 1] = val;\n      break;\n    } else {\n      cur = cur *2 + 1; // \u4e0b\u79fbcur\n    }\n  } else { // val\u5df2\u5b58\u5728\n    break;\n  }\n}\n</code></pre> <p>BST \u6811\u5220\u9664\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* delete(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return rt;\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = delete(rt\u7684\u53f3\u5b50\u6811, val);\n  } else { // \u8981\u5220\u9664rt\n    // \u60c5\u51b51:\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\n    if (rt\u7684\u5de6\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u53f3\u513f\u5b50;\n      free(rt);\n      return tmp;\n    } else if (rt\u7684\u53f3\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u5de6\u513f\u5b50;\n      free(rt);\n      return tmp;\n    }\n    // \u60c5\u51b52:rt\u6709\u4e24\u4e2a\u513f\u5b50\n    BSTNode* tmp = rt\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9;\n    rt\u7684\u503c = tmp\u7684\u503c;\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, tmp\u7684\u503c);\n  }\n  return rt;\n}\n</code></pre> <p>\u8f85\u52a9\u51fd\u6570,\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u8282\u70b9:</p> C<pre><code>BSTNode* findMax(BSTNode* node) {\n  while (node\u7684\u5de6\u5b50\u6811\u975e\u7a7a) {\n    node = node\u7684\u5de6\u513f\u5b50;\n  }\n  return node;\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#avl","title":"AVL \u6811\u5e73\u8861","text":"<p>\u5e73\u8861\u56e0\u5b50 BF:\u5de6\u5b50\u6811\u9ad8\u5ea6-\u53f3\u5b50\u6811\u9ad8\u5ea6 \u5e73\u8861\u56e0\u5b50\u7edd\u5bf9\u503c\u9700\u8981&lt;=1 \u6bcf\u6b21\u63d2\u5165\u6216\u5220\u9664\u540e\u901a\u8fc7\u65cb\u8f6c\u4fdd\u6301\u5e73\u8861</p> \u5931\u8861\u7c7b\u578b \u5931\u8861\u8282\u70b9 BF \u5931\u8861\u8282\u70b9\u513f\u5b50 BF \u65cb\u8f6c\u65b9\u5f0f LL \u578b 2 \u5de6 1 \u53f3\u65cb RR \u578b -2 \u53f3 -1 \u5de6\u65cb LR \u578b 2 \u5de6 -1 \u5de6\u65cb\u5de6\u513f\u5b50,\u7136\u540e\u53f3\u65cb RL \u578b -2 \u53f3 1 \u53f3\u65cb\u53f3\u513f\u5b50,\u7136\u540e\u5de6\u65cb <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* leftRotate(AVLNode *y) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *x = y-&gt;right;\n    AVLNode *B = x-&gt;left;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    x-&gt;left = y;\n    y-&gt;right = B; // \u51b2\u7a81\u7684\u5de6\u513f\u5b50\u53d8\u4e3a\u53f3\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0y\uff0c\u518d\u66f4\u65b0x\uff09\n    updateHeight(y);\n    updateHeight(x);\n\n    return x; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: y x  / \\  x -- \u5de6\u65cb(y) \u2192 y C /  \\  B C B</p> <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* rightRotate(AVLNode *x) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *y = x-&gt;left;\n    AVLNode *B = y-&gt;right;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    y-&gt;right = x;\n    x-&gt;left = B; // \u51b2\u7a81\u7684\u53f3\u513f\u5b50\u53d8\u4e3a\u5de6\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0x\uff0c\u518d\u66f4\u65b0y\uff09\n    updateHeight(x);\n    updateHeight(y);\n\n    return y; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: x y / / \\  y -- \u53f3\u65cb(x) \u2192 A x /  / A B B</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_9","title":"\u5806\u7684\u64cd\u4f5c(\u5927\u6839\u5806\u4e3a\u4f8b)","text":"<p>\u5927\u6839\u5806\u7684\u7279\u70b9:\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9,\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6240\u6709\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u503c \u5806\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5c06\u666e\u901a\u5b8c\u5168\u4e8c\u53c9\u6811\u6539\u4e3a\u5927\u6839\u5806:</p> <p>\u4ece\u7b2c\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\u5012\u7740\u904d\u5386,\u5c06\u6bcf\u4e2a\u5b50\u6811\u6539\u4e3a\u5806 (1) \u5982\u679c\u6839\u7684\u503c\u5927\u4e8e\u5de6\u53f3\u513f\u5b50,continue (2) \u5982\u679c\u6839\u7684\u503c\u5c0f\u4e8e\u4e00\u4e2a\u513f\u5b50,\u7528\u8be5\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb (3) \u5982\u679c\u6839\u6bd4\u4e24\u4e2a\u513f\u5b50\u90fd\u5c0f,\u7528\u8f83\u5927\u7684\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb</p> <p>\u5927\u6839\u5806\u4e2d\u63d2\u5165\u5143\u7d20:</p> <ol> <li>\u63d2\u5165\u672b\u5c3e</li> <li>\u4e0a\u6d6e\u5230\u6b63\u786e\u4f4d\u7f6e</li> </ol> <p>\u5927\u6839\u5806\u6392\u5e8f:</p> <ol> <li>\u5efa\u7acb\u5927\u6839\u5806</li> <li>\u5c06\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362,\u8c03\u6574\u672a\u6392\u5e8f\u7684\u90e8\u5206,\u76f4\u5230\u5168\u90e8\u6392\u5e8f</li> </ol> <p>\u5806\u5316:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u5c06i\u4e3a\u6839\u7684\u5b50\u6811\u5806\u5316\nvoid heapify(int* arr, int n, int i) {\n  int largest = i;\n  if (\u5de6\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u5de6\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u5de6\u513f\u5b50\u4f4d\u7f6e;\n  }\n  if (\u53f3\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u53f3\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u53f3\u513f\u5b50\u4f4d\u7f6e;\n  }\n\n  if (largest != i) {\n    \u4ea4\u6362arr[i]\u548carr[largest];\n    heapify(arr, n, largest);  // \u9012\u5f52\u8c03\u6574\u53d7\u5f71\u54cd\u7684\u5b50\u6811\n  }\n}\n\n// \u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u8f6c\u6362\u4e3a\u5927\u6839\u5806\nvoid buildMaxHeap(int arr[], int n) {\n    // \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u524d\u904d\u5386\u5230\u6839\u8282\u70b9\n    for (int i = n / 2 - 1; i &gt;= 0; i--) {\n        heapify(arr, n, i);\n    }\n}\n</code></pre> <p>\u5806\u4e2d\u63d2\u5165\u8282\u70b9:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u4e0a\u6d6e\nvoid siftUp(int* heap, int idx) {\n  while (idx &gt; 0) {\n    int pa = idx\u7236\u4eb2\u7684\u7d22\u5f15;\n  }\n  if (heap[idx] &gt; heap[pa]) {\n    \u4ea4\u6362heap[idx]\u548cheap[pa];\n    idx = pa; // \u66f4\u65b0\u7d22\u5f15,\u5411\u4e0a\u68c0\u67e5\n  } else {\n    break;\n  }\n}\n\n// \u5411\u5927\u6839\u5806\u4e2d\u63d2\u5165\u65b0\u5143\u7d20\nvoid insertMaxHeap(int* heap, int size, int capacity, int val) {\n  if (size &gt; capacity)\n    return;\n\n  heap[size++] = val; // \u6dfb\u52a0\u5230\u672b\u5c3e\n  siftUp(heap, size-1);\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/","title":"6. \u5806\u7684\u5b9e\u73b0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 199 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#class-five","title":"Class Five","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_1","title":"\u4f18\u5148\u961f\u5217(\u5806)","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_2","title":"\u76ee\u6807\u529f\u80fd","text":"<p>insert \u548c delete,\u4e14\u6bcf\u6b21 delete \u5220\u9664\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_3","title":"\u5b9e\u73b0(\u5c0f\u6839\u5806\u4e3a\u4f8b)","text":"<ul> <li>\u51e0\u79cd\u4f20\u7edf\u65b9\u6cd5:\u6570\u7ec4,\u94fe\u8868,\u6709\u5e8f\u6570\u7ec4,\u6709\u5e8f\u94fe\u8868...</li> <li>\u5c0f\u6839\u5806:\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5b83\u6240\u5728\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9(order property).</li> <li>\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u662f\u4ece\u5c0f\u5230\u5927.\u6bcf\u6b21\u63d2\u5165\u65b0\u8282\u70b9\u65f6,\u5728\u5f53\u524d\u8282\u70b9\u8c03\u6210\u4ece\u5c0f\u5230\u5927\u5373\u53ef.(\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f,\u7531 i \u8ddf i-1 \u6bd4\u6362\u6210 i \u8ddf i/2 \u6bd4)</li> <li>\u4e00\u5c42\u4e00\u5c42\u63d2\u5165,\u5f97\u5230\u5b8c\u5168\u4e8c\u53c9\u6811(structure property).</li> <li>\u591a\u53c9\u5806?\u6811\u7684\u9ad8\u5ea6\u964d\u4f4e,\u4f46\u603b\u65f6\u95f4\u4e0d\u53d8.</li> <li>\u63d2\u5165:</li> </ul> C<pre><code>// \u63d2\u5165\u5143\u7d20\nbool Insert(Heap H, int x){\n  if (\u5806\u5df2\u6ee1) return false\n\n  i\u8868\u793a\u5f53\u524d\u5806\u7684\u5927\u5c0f(\u539f\u5148\u5927\u5c0f+1)\n  for (i\u7684\u7236\u4eb2\u6bd4i\u5904\u7684\u503c\u5927,i/2) {\n    i\u7684\u7236\u4eb2\u4e0b\u79fb\u5230i\u5904\n  }\n  // \u6b64\u65f6i\u7684\u7236\u4eb2\u6bd4i\u5c0f,i\u8868\u793a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u7b2ci\u4f4d\u7684\u503c\u8d4b\u4e3ax\n}\n\n// \u5220\u9664(\u5c0f\u6839\u5806)\nint DeleteMin(Heap H) {\n  if (\u5806\u662f\u7a7a\u7684)\n    return ERROR\n\n  min\u8868\u793a\u6700\u5c0f\u503c(\u6839)\n  x\u8868\u793a\u5f53\u524d\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20(\u5806\u7684\u5927\u5c0f\u4e3a\u539f\u5148\u5927\u5c0f-1)\n  pa\u8868\u793a\u904d\u5386\u7684\u8282\u70b9,child\u8868\u793a\u8f83\u5c0f\u7684\u5b50\u8282\u70b9\n\n  for (pa\u4ece\u6839\u5f00\u59cb,pa\u7684\u513f\u5b50\u4e0d\u8d85\u8fc7\u5806\u7684\u5927\u5c0f,pa\u66f4\u65b0\u4e3achild) {\n    \u5047\u8bbe\u8f83\u5c0f\u7684child\u662fpa\u7684\u5de6\u513f\u5b50\n    if (child\u4e0d\u662f\u6700\u540e\u4e00\u4e2a,\u800c\u4e14\u53f3\u513f\u5b50\u7684\u503c\u66f4\u5c0f) {\n      child\u66f4\u65b0\u4e3apa\u7684\u53f3\u513f\u5b50\n    }\n\n    if (child\u7684\u503c\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5927)\n      break\n    else\n      pa\u7684\u503c\u4e0b\u79fb\u5230child\n  }\n\n  // \u6b64\u65f6pa\u8868\u793ax\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u5c06\u7b2cpa\u4f4d\u8d4b\u4e3ax\n\n  return min\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_4","title":"\u52a8\u6001\u7b49\u4ef7\u5173\u7cfb","text":"<p>\u7ed9\u5b9a\u5143\u7d20\u548c\u51e0\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb,\u6c42\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u662f\u5426\u7b49\u4ef7.</p> Text Only<pre><code>// \u6784\u5efa\nwhile (\u8bfb\u5165a\u548cb\u7b49\u4ef7) {\n  if (a\u7684\u96c6\u5408!=b\u7684\u96c6\u5408) {\n    \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n  }\n}\n\n// \u67e5\u8be2\n\u8bfb\u5165\u4e24\u4e2a\u8981\u67e5\u8be2\u7684\u5143\u7d20\nif (a\u7684\u96c6\u5408==b\u7684\u96c6\u5408) {\n  print (true)\n}\n</code></pre> <p>\u7528\u6570\u7ec4\u8868\u793a:\u4e0b\u6807\u4ee3\u8868\u5143\u7d20,\u503c\u4ee3\u8868\u6839</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/","title":"7. \u5e76\u67e5\u96c6\u548c\u56fe","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1010 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#cloud_with_lightning_and_rainclass-seven","title":":cloud_with_lightning_and_rain:Class Seven","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_1","title":"\u8003\u8bd5\u9898\u578b","text":"<p>\u9009\u62e9\u9898,\u51fd\u6570\u586b\u7a7a,\u51fd\u6570\u7f16\u7a0b\u9898(1 \u9898)</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_2","title":"\u7b49\u4ef7\u7c7b\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u96c6\u5408,\u7ed9\u5b9a\u8c01\u548c\u8c01\u7b49\u4ef7,\u6839\u636e\u6b64\u7b49\u4ef7\u5212\u5206\u96c6\u5408. e.g.\u8c01\u548c\u8c01\u662f\u4e00\u7ec4,\u56fe\u4e2d\u6700\u5c0f\u751f\u6210\u6811(\u57ce\u5e02\u4e4b\u95f4\u8fde\u901a\u9053\u8def\u7684\u6700\u5c0f\u957f\u5ea6) \u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u79cd\u65b9\u6cd5:</p> <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\u751f\u6210\u7684\u56fe\u68c0\u9a8c. \u5f53\u653e\u5165\u8fb9\u540e\u5f62\u6210\u56de\u8def\u65f6,\u8be5\u8fb9\u4e0d\u6b63\u786e. \u6838\u5fc3\u662f\u7ed9\u5b9a\u4e00\u6761\u8fb9,\u5224\u5b9a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u5c5e\u4e8e\u4ec0\u4e48\u96c6\u5408.\u5982\u679c\u5728\u540c\u4e00\u7ec4,\u653e\u5165;\u5728\u4e0d\u540c\u7ec4,\u4e0d\u653e\u5165. \u7528<code>find</code>\u51fd\u6570\u5b9e\u73b0,\u540c\u4e00\u7ec4\u7684\u70b9\u7528<code>union</code>\u8fde\u63a5.</p> <ul> <li>\u7528\u6811\u8868\u793a:\u8fd9\u6837\u7684\u6811\u4e0d\u9700\u8981\u627e\u513f\u5b50,\u53ea\u9700\u8981\u627e\u7236\u4eb2.\u56e0\u6b64\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u7236\u4eb2.</li> <li>\u7528\u6570\u7ec4\u8868\u793a:\u7d22\u5f15\u4ee3\u8868\u5f53\u524d\u8282\u70b9,\u6570\u503c\u4ee3\u8868\u4e0a\u4e00\u4e2a\u7236\u4eb2.\u5982\u679c<code>s[i]==0</code>,\u8868\u793a\u662f\u6839.   \u96c6\u5408\u7684\u5e76:<code>s[rt1]=rt2</code>.</li> </ul> <p>\u627e\u5230 parent \u7684\u4ee3\u7801:</p> Text Only<pre><code>  while (s[i]&gt;0) {\n    i=s[i];\n  }\n  return i;\n</code></pre> <ul> <li>\u5408\u5e76\u65b9\u6cd5:union by height,union by size(\u53ef\u63a8\u5bfc\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7\\(log_2 N\\)),\u6bcf\u6b21\u8c03\u6574\u8f83\u5c0f\u7684\u6811</li> <li>\u600e\u4e48\u5224\u65ad\u6811\u7684\u5927\u5c0f?\u4e4b\u524d\u6811\u6839\u7528 0 \u8868\u793a,\u53ef\u4ee5\u7528\u8d1f\u6570\u8868\u793a\u6811\u6839,\u6570\u503c\u7684\u7edd\u5bf9\u503c\u8868\u793a\u6811\u7684\u5927\u5c0f.<code>s[root]=-size</code>.</li> <li>\u8def\u5f84\u538b\u7f29:\u627e\u5230\u6811\u6839\u65f6,\u8fd9\u4e00\u6761\u8def\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u7ecf\u8fc7.\u5c06\u8fd9\u6761\u8def\u4e0a\u7684\u8282\u70b9\u90fd\u76f4\u63a5\u6307\u5411\u6811\u6839.</li> </ul> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  if (s[x]&lt;=0)               // \u662f\u6811\u6839\n    return\n  else\n    return s[x]=find(s[x],s) // \u627ex\u4e0a\u4e00\u4e2a\u7236\u4eb2\u7684\u6839,\u5e76\u7528\u6839\u66f4\u65b0s[x]\n}\n</code></pre> <p>\u6216\u4f7f\u7528\u4e24\u5c42\u5faa\u73af:</p> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  for (root=x;s[root]&gt;0;root=s[root]); // \u4e0d\u65ad\u66f4\u65b0root,\u5148\u627e\u5230\u6839\n\n  for (trail=x;trail!=root;trail=lead) {\n    lead=s[trail]; // \u7528\u4e8e\u4fdd\u5b58\u8def\u5f84\u4e0a\u7684\u503c\n    s[trail]=root; // \u5c06\u8def\u5f84\u4e0a\u7684\u503c\u66f4\u65b0\u4e3a\u6839\n  }\n\n  return root;\n}\n</code></pre> <p>\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\u8fd1\u4f3c\u5e38\u91cf.</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_3","title":"\u56fe","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_4","title":"\u4eba\u5de5\u667a\u80fd\u539f\u7406","text":"<p>\u7528\u7b80\u7b54\u7684\u6a21\u578b\u5b9e\u73b0\u590d\u6742\u7684\u6620\u5c04.\u5176\u4e2d\u7684\u53d8\u91cf\u662f\u6743\u91cd. \u8bbe\u8ba1\u8bc4\u4f30\u51fd\u6570\u5224\u65ad\u8bbe\u8ba1\u7684\u6a21\u578b\u548c\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u8ddd,\u6210\u4e3a\u8bef\u5dee\u51fd\u6570\\(L(w_i)\\).\u8be5\u51fd\u6570\u662f\u6743\u91cd\\(w_i\\)\u7684\u51fd\u6570.\u4e0d\u65ad\u8c03\u6574\u6743\u91cd\u4f7f\u8be5\u51fd\u6570\u7684\u503c\u6700\u5c0f. \u76f8\u5f53\u4e8e\u6c42\u51fd\u6570\u7684\u6781\u5c0f\u503c.\u5411\u5bfc\u6570\u4e3a\u96f6\u7684\u65b9\u5411\u8c03\u6574.\u5229\u7528\u7684\u65b9\u6cd5\u4e3a\u68af\u5ea6\u9012\u964d\u6cd5. \u795e\u7ecf\u7f51\u7edc\u7684\u672c\u8d28\u662f\u56fe.\u5927\u6a21\u578b\u8bad\u7ec3\u7684\u672c\u8d28\u662f\u5c06\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784.</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_5","title":"\u56fe\u7684\u63cf\u8ff0","text":"<ul> <li>G(V,E)\u5206\u522b\u8868\u793a\u70b9,\u8fb9</li> <li>\u4e00\u822c\u8003\u8651:\u6ca1\u6709\u81ea\u73af,\u6ca1\u6709\u91cd\u8fb9</li> <li>\u5b8c\u5168\u56fe:\u6240\u6709\u80fd\u8fde\u7684\u8fb9\u90fd\u8fde\u63a5.\u65e0\u5411\u56fe\u8fb9\u7684\u6761\u6570\u4e3a\\(C_n^2\\).</li> <li>\u5b50\u56fe:\u70b9\u548c\u8fb9\u90fd\u662f\u5b50\u96c6</li> <li>\u8def\u5f84:\u70b9\u7684\u5e8f\u5217,\u4efb\u4f55\u524d\u540e\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5</li> <li>\u8def\u5f84\u957f\u5ea6:\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u6761\u8fb9</li> <li>\u7b80\u5355\u8def\u5f84:\u8def\u5f84\u4e0a\u7684\u70b9\u6ca1\u6709\u91cd\u53e0</li> <li>\u73af:\u7b80\u5355\u8def\u5f84,\u4e14\u5934\u5c3e\u8fde\u63a5</li> <li>\u8fde\u901a\u56fe:\u65e0\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u90fd\u662f\u8fde\u901a\u7684;\u6709\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u80fd\u8d70\u5230.</li> <li>\u8fde\u901a\u5b50\u56fe(component):\u6700\u5927\u7684\u8fde\u901a\u7684\u5b50\u56fe</li> <li>\u6811:\u8fde\u901a\u7684,\u6ca1\u6709\u56de\u8def\u7684\u56fe</li> <li>DAG(directed acyclic graph):\u6709\u5411\u65e0\u73af\u56fe,\u8282\u70b9\u524d\u540e\u6709\u4f9d\u8d56\u5173\u7cfb</li> <li>\u5f3a\u8fde\u901a\u56fe(strong connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u6709\u5411\u56fe</li> <li>\u5f31\u8fde\u901a\u56fe(weakly connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u65e0\u5411\u56fe</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component)</li> <li>\u5ea6(degree):\u6bcf\u4e2a\u70b9\u6709\u51e0\u4e2a\u70b9\u548c\u5b83\u8fde\u901a</li> <li>\u5165\u5ea6(in-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u6709\u591a\u5c11\u5176\u4ed6\u70b9\u6307\u5411\u5b83</li> <li>\u51fa\u5ea6(out-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u5b83\u6307\u5411\u51e0\u4e2a\u5176\u4ed6\u70b9</li> </ul>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_6","title":"\u56fe\u7684\u8868\u793a(\u6709\u5411\u56fe)","text":"<p>\u90bb\u63a5\u8868:\u628a\u6240\u6709\u8be5\u70b9\u51fa\u53bb\u7684\u8fb9\u90fd\u7528\u94fe\u8868\u4e32\u5728\u4e00\u8d77 \u9006\u90bb\u63a5\u8868:\u5c06\u6307\u5411\u8be5\u70b9\u7684\u70b9\u4e32\u5728\u4e00\u8d77. \u90bb\u63a5\u8868\u548c\u9006\u90bb\u63a5\u8868\u5b8c\u6574\u5730\u8868\u793a\u6574\u4e2a\u56fe</p> <p>\u5341\u5b57\u94fe\u8868(\u53ea\u7528\u4e8e\u6709\u5411\u56fe):\u7528\u8282\u70b9\u8868\u793a\u8fb9,\u6bcf\u4e2a\u8282\u70b9\u6709 4 \u4e2a\u5206\u91cf,\u5206\u522b\u4e3a 2 \u4e2a\u6570\u636e\u548c 2 \u4e2a\u6307\u9488.\u7528\u6570\u7ec4\u8868\u793a\u6240\u6709\u8282\u70b9.\u6570\u7ec4\u4e2d vi \u6307\u5411 vi \u5f00\u5934\u7684\u8282\u70b9. \u524d\u9762\u7684\u6307\u9488\u8868\u793a\u7b2c\u4e00\u4e2a\u6570\u636e\u6307\u5411\u8c01,\u7b2c\u4e8c\u4e2a\u6307\u9488\u8868\u793a\u4ec0\u4e48\u6570\u636e\u6307\u5411\u7b2c\u4e8c\u4e2a\u6570\u636e.</p> <p>\u591a\u91cd\u94fe\u8868 multilist(\u53ea\u7528\u4e8e\u65e0\u5411\u56fe):\u6570\u7ec4\u51fa\u53d1\u7684\u6bcf\u4e2a\u70b9\u5c06\u542b\u6709\u8be5\u70b9\u7684\u8282\u70b9\u4e32\u5728\u4e00\u8d77.</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_7","title":"\u56fe\u7684\u4f5c\u7528","text":"<ol> <li>\u793e\u7fa4\u6316\u6398:\u5c06\u4e0d\u540c\u4eba\u4e4b\u95f4\u7684\u8054\u7cfb\u8868\u793a\u6210\u56fe.\u6839\u636e\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u5212\u5206\u793e\u7fa4.</li> <li>\u4e00\u79cd\u5224\u65ad\u793e\u7fa4\u662f\u5426\u7d27\u5bc6\u7684\u65b9\u6cd5:\u91cc\u9762\u7684\u8fb9\u548c\u5916\u9762\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6bd4\u503c</li> <li>\u53ef\u4ee5\u6839\u636e\u70b9\u7684\u5165\u5ea6,\u51fa\u5ea6\u7684\u6743\u91cd\u5224\u65ad\u70b9\u7684\u6027\u8d28</li> </ol>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/","title":"8. \u62d3\u6251\u6392\u5e8f\u548cDijkstra","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 263 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#class-eight","title":"Class Eight","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#_1","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>\u4f8b\u5b50:   \u4e0d\u540c\u8bfe\u7a0b\u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb,\u6709\u4e9b\u8bfe\u7a0b\u9700\u8981\u5176\u4ed6\u8bfe\u4f5c\u4e3a\u524d\u7f6e\u8bfe\u7a0b.\u7528\u56fe\u8868\u793a\u4f9d\u8d56\u5173\u7cfb,\u6709\u4ee5\u4e0b\u5173\u7cfb:</li> <li>\u5f62\u6210\u65e0\u56de\u8def\u7684\u6709\u5411\u56fe(DAG,\u6709\u5411\u65e0\u73af\u56fe)</li> <li>\u7528\u70b9\u6216\u8fb9\u8868\u793a\u8981\u7d20(AOV)</li> <li>\u76ee\u6807:   \u6839\u636e\u8bfe\u7a0b\u7684\u4f9d\u8d56\u5173\u7cfb,\u5217\u51fa\u4e0d\u77db\u76fe\u7684\u9009\u8bfe\u7684\u987a\u5e8f.</li> <li>\u62d3\u6251\u6392\u5e8f\u65b9\u6cd5:</li> </ul> <ol> <li>\u627e\u5230\u7b2c\u4e00\u95e8:\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9</li> <li>\u6bcf\u627e\u5230\u4e00\u4e2a\u70b9\u540e,\u5220\u9664\u8be5\u70b9.(\u6bcf\u6b21\u5904\u7406\u540e\u56fe\u53d1\u751f\u4e00\u70b9\u6539\u52a8.)\u4fee\u6539\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6.</li> <li>\u6bcf\u6b21\u968f\u673a\u9009\u53d6\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9,\u91cd\u590d\u524d\u4e24\u6b65.</li> </ol> <ul> <li>\u90e8\u5206\u6709\u5e8f(partial order)   \u6709\u4e9b\u70b9\u6709\u5e8f,\u6709\u4e9b\u70b9\u65e0\u5e8f</li> <li>\u4ee3\u7801:</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  for (int cnt = 0; cnt &lt; \u70b9\u7684\u603b\u6570; cnt++) {\n    int v = \u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9;\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w)\n      w\u7684\u5165\u5ea6--; // \u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1,\u6839\u636e\u8fd9\u4e2a\u70b9\u4fee\u6539\u5468\u56f4\u70b9\u7684\u4fe1\u606f\n  }\n}\n</code></pre> <ul> <li>\u600e\u4e48\u67e5\u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9?   \u6784\u5efa\u961f\u5217.\u6bcf\u6b21\u4fee\u6539\u5165\u5ea6\u65f6\u5982\u679c\u6539\u540e\u4e3a\u96f6,\u52a0\u5165\u961f\u5217.</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  \u961f\u5217 Q;\n  for (\u904d\u5386\u6240\u6709\u70b9v) {\n    if (v\u7684\u5165\u5ea6 == 0)\n      enqueue(v, Q);\n  }\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w) {\n      if (--w\u7684\u5165\u5ea6 == 0)\n        enqueue(w, Q);\n    }\n  }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#_2","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898","text":"<p>\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898:Dijkstra</p> <ol> <li>\u521d\u59cb\u5316\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e3a\u65e0\u7a77\u5927</li> <li>\u627e\u51fa\u6ca1\u6709\u88ab\u62d3\u5c55\u8fc7\u4e14\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9</li> <li>\u5c06\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u5df2\u7ecf\u62d3\u5c55\u8fc7</li> <li>(\u5229\u7528\u8be5\u70b9\u4fee\u6539\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7684\u4fe1\u606f.)\u5224\u65ad\u65b0\u6dfb\u52a0\u7684\u8def\u5f84\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u539f\u6709\u957f\u5ea6,\u5982\u679c\u5c0f\u4e8e\u5219\u66f4\u65b0\u957f\u5ea6</li> </ol> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nconst int N = 1e3 + 5;\nconst ll inf = 4e18;\n\nstruct Node {\n    int x, w;  // x\u8868\u793a\u51fa\u70b9\uff0cw\u8868\u793a\u6743\u503c\n};\nvector&lt;Node&gt; g[N];\nll d[N], n, m;\n\nvoid dijkstra(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));  // \u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7,\u6bcf\u4e2a\u70b9\u53ea\u88ab\u62d3\u5c55\u4e00\u6b21\n\n    for (int i = 1; i &lt;= n; i++) {\n        // \u627e\u51fa\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9\n        int u = 1;\n        for (int j = 1; j &lt;= n; j++) {\n            if (vis[u] || (!vis[j] &amp;&amp; d[j] &lt; d[u]))\n                u = j;\n        }\n\n        vis[u] = true;  // \u8868\u793au\u5df2\u7ecf\u62d3\u5c55\u8fc7\n\n        // \u6b64\u65f6d[u]\u5df2\u7ecf\u4e3a\u6700\u4f18\n        for (auto&amp; [v, w] : g[u]) {\n            if (!vis[v] &amp;&amp; d[v] &gt; d[u] + w)\n                d[v] = d[u] + w;\n        }\n    }\n}\n\n// \u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5bfb\u627e\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\nvoid dijkstra1(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7\n\n    priority_queue&lt;Node&gt; pq;\n    pq.push((Node){st, d[st]});  // \u8d77\u70b9\u4f5c\u4e3a\u62d3\u5c55\u70b9\n\n    while (pq.size()) {\n        int x = pq.top().x;\n        pq.pop();\n\n        if (vis[x])\n            continue;\n        vis[x] = true;\n\n        for (auto&amp; [y, w] : g[x]) {\n            if (!vis[y] &amp;&amp; d[y] &gt; d[x] + w) {\n                d[y] = d[x] + w;\n                pq.push((Node){y, d[y]});\n            }\n        }\n    }\n}\n\nvoid solve() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, w;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        if (u != v)\n            g[u].push_back({v, w});\n    }\n\n    dijkstra1(1);\n\n    cout &lt;&lt; (d[n] &gt;= 4e18 ? -1 : d[n]) &lt;&lt; '\\n';\n}\n\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int _ = 1;\n    while (_--)\n        solve();\n    return 0;\n}\n</code></pre> <p>\u4e0d\u9002\u7528\u4e8e\u8d1f\u8fb9\u60c5\u51b5:\u88ab\u62d3\u5c55\u8fc7\u4e00\u6b21\u540e\u4e0d\u518d\u62d3\u5c55 \u8d1f\u8fb9\u4ee3\u7801:</p> C<pre><code>void dijkstra(\u56fe g) {\n  \u961f\u5217 Q;\n  enqueue(\u6e90\u70b9, Q);\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    for (v\u6307\u5411\u7684\u70b9w) {\n      if (v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6 &lt; w\u7684\u8ddd\u79bb) {\n        w\u7684\u8ddd\u79bb = v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6;\n        if (w\u4e0d\u5728Q\u4e2d)\n          enqueue(w, Q);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/9.%20Floyd%E5%92%8CAOE%E7%BD%91/","title":"9. Floyd\u548cAOE\u7f51","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 458 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#class-nine","title":"Class Nine","text":""},{"location":"CourseNotes/Fundamental%20Data%20Structure/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#all-pairs-shortest-paths","title":"\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)","text":"<p>\u4e00\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1a\u7b97\u4e00\u884c\uff08n \u4e2a\u503c\uff09 \u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)\uff1a\u7b97\u4e00\u4e2a\u77e9\u9635\uff08n*n \u77e9\u9635\uff09</p> <p>\u52a8\u6001\u89c4\u5212\uff1a \u5927\u95ee\u9898\u5206\u89e3\u4e3a\u5c0f\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5206\u6cbb\u6cd5\u6216\u9012\u5f52\u65f6\u5c0f\u95ee\u9898\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\uff0c\u6548\u7387\u4f4e\uff08\u5206\u6cbb\u6cd5\u662f top-down\uff0c\u4ece\u4e0a\u5230\u4e0b\u8ba1\u7b97\uff09\u3002 \u52a8\u6001\u89c4\u5212\u4e3a botton-up\uff0c\u5148\u6c42\u57fa\u7840\u89e3\u518d\u6c42\u9ad8\u5c42\u89e3\u3002\u57fa\u7840\u89e3\u53ef\u80fd\u6709\u5f88\u591a\uff0c\u9700\u8981\u7528\u6570\u7ec4\u7b49\u7ed3\u6784\u5b58\u50a8\u3002 \u5206\u6790\u95ee\u9898\u7684\u601d\u8def\u662f top-down\uff0c\u89e3\u7b54\u95ee\u9898\u7684\u6d41\u7a0b\u662f botton-up\u3002</p> <p>\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff1a D(i,j)\u8868\u793a vi \u51fa\u53d1\u5230 vj \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e2d\u95f4\u53ef\u80fd\u7ecf\u8fc7\u70b9\u96c6\u3002 \u5982\u679c\u4e2d\u95f4\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u70b9\uff08\u4e3a\u7a7a\u96c6\uff09\uff0c\u7b54\u6848\u4e3a\u8fb9\u957f\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1 \u8fd9\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5230 vj\uff0c\u548c vi \u5230 v1 \u518d v1 \u5230 vj\uff08\u8fd9\u4e24\u6bb5\u4e4b\u95f4\u90fd\u662f\u7a7a\u96c6\uff09\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1\uff0cv2 \u4e24\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\uff0c\u548c vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 v2 \u518d\u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\u3002</p> <p>Floyd \u521d\u59cb\u5316\uff1a\u8fb9\u6216\u65e0\u7a77\u5927 \u72b6\u6001\u8f6c\u79fb\uff1a\u5141\u8bb8\u7ecf\u8fc7\u70b9 \u57fa\u672c\u6846\u67b6:</p> C<pre><code>for (\u4e2d\u8f6c\u70b9k)\n    for (\u8d77\u70b9i)\n        for (\u7ec8\u70b9j)\n        //\u5224\u65ad\u662f\u5426\u66f4\u65b0\n        d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n</code></pre>"},{"location":"CourseNotes/Fundamental%20Data%20Structure/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#aoe-activity-on-edge","title":"AOE \u7f51(Activity On Edge)","text":"<p>\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u6709\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u505a\u3002\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u65f6\u95f4\u70b9\uff0c\u6240\u6709\u5165\u8fb9\u7684\u4efb\u52a1\u90fd\u5b8c\u6210\u540e\u624d\u80fd\u505a\u8282\u70b9\u4ee5\u540e\u7684\u4efb\u52a1\u3002 \u4e3a\u4ec0\u4e48\u627e\u5173\u952e\u8def\u5f84\uff1f\u5982\u679c\u8981\u628a\u65f6\u95f4\u7f29\u77ed\uff0c\u9700\u8981\u52a0\u5feb\u54ea\u4e9b\u4efb\u52a1\u624d\u80fd\u4f7f\u6574\u4f53\u65f6\u95f4\u51cf\u5c11\u3002 \u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff1a\u6240\u6709\u4e4b\u524d\u7684\u652f\u8def\u6240\u9700\u65f6\u95f4\u7684\u6700\u5927\u503c \u53ef\u80fd\u5efa\u7acb dummy activity\uff08\u6240\u9700\u65f6\u95f4\u4e3a 0\uff09\uff0c\u5efa\u7acb\u4e0d\u540c\u4efb\u52a1\u4e4b\u95f4\u7684\u5173\u8054\u3002</p> <p>EC(Early Complete time)\uff1amax{\u6240\u6709\u5165\u70b9\u7684 EC + \u5165\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u6700\u5c11\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\uff09 LC(Last Complete time)\uff1amin{\u6240\u6709\u51fa\u70b9\u7684 LC - \u51fa\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u80fd\u5077\u61d2\u591a\u957f\u65f6\u95f4\uff0c\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u51fa\u53d1\uff09 \u5982\u679c\u8282\u70b9\u7684 EC == LC\uff0c\u8be5\u70b9\u662f\u5173\u952e\u70b9\u3002\u5173\u952e\u70b9\u7ec4\u6210\u5173\u952e\u8def\u5f84\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy00/","title":"\u6570\u5b66\u57fa\u7840","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 559 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy00/#_1","title":"\u6570\u5b66\u57fa\u7840","text":"<p>\u7b97\u7b26 nabla\uff1a</p> \\[\\vec{\\nabla}=\\frac{\\partial}{\\partial x}\\vec{i}+\\frac{\\partial}{\\partial y}\\vec{j}+\\frac{\\partial}{\\partial z}\\vec{k}\\]"},{"location":"CourseNotes/General%20Physics%20II/Phy00/#_2","title":"\u68af\u5ea6","text":"<p>\u6807\u91cf\u51fd\u6570\\(f=f(x,y,z)\\)\u7684\u68af\u5ea6\uff0c\u8f93\u5165\u4e3a\u6807\u91cf\u3001\u8f93\u51fa\u4e3a\u77e2\u91cf\uff1a</p> \\[\\vec{\\nabla}f=\\frac{\\partial f}{\\partial x}\\vec{i}+\\frac{\\partial f}{\\partial y}\\vec{j}+\\frac{\\partial f}{\\partial z}\\vec{k}\\] <p>\u8bbe\\(\\vec{\\nabla}f\\)\u548c\\(d\\vec{l}\\)\u4e4b\u95f4\u7684\u5939\u89d2\u4e3a\\(\\theta\\)\uff0c\u5219</p> \\[df=|\\vec{\\nabla}f||d\\vec{l}|\\cos\\theta,\\quad|\\vec{\\nabla}f|=\\frac{df_{max}}{|d\\vec{l}|}\\] <p>\u5373\u68af\u5ea6\u662f\u5bfc\u6570\u4e0b\u964d\u6700\u5feb\u7684\u65b9\u5411\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy00/#_3","title":"\u6563\u5ea6","text":"<p>\u77e2\u91cf\u51fd\u6570\\(f=(P(x,y,z), Q(x,y,z), R(x,y,z))\\)\u7684\u6563\u5ea6\uff0c\u8f93\u5165\u4e3a\u77e2\u91cf\u3001\u8f93\u51fa\u4e3a\u6807\u91cf\uff1a</p> \\[\\vec{\\nabla}\\cdot \\vec{f}=P_x'+Q_y'+R_z'\\] <p>\u6563\u5ea6\u8868\u793a\u5355\u4f4d\u7acb\u65b9\u4f53\u4e2d\u77e2\u91cf\u573a\u7ebf\u7684\u51c0\u6d41\u51fa\u91cf\uff08\u5047\u8c61\u7acb\u65b9\u4f53\uff0c\\(P_x'\\)\u8868\u793a x \u65b9\u5411\u76f8\u5bf9\u7684\u4e24\u4e2a\u9762\u7684\u51c0\u6d41\u51fa\u91cf\uff0cetc.\uff09\u3002\u6563\u5ea6\u5927\u4e8e\u96f6\uff0c\u8868\u793a\u6e90\uff1b\u6563\u5ea6\u5c0f\u4e8e\u96f6\uff0c\u8868\u793a\u6c47\uff1b\u6563\u5ea6\u7b49\u4e8e\u96f6\uff0c\u8868\u793a\u65e0\u6e90\u3002</p> <p>\u6563\u5ea6\u5b9a\u7406\uff08\u9ad8\u65af\u5b9a\u7406\uff09\uff1a</p> \\[\\oint_{\\tau}\\vec{A}\\cdot\\mathrm{d}\\vec{S}=\\int_{\\tau}(\\vec{\\nabla}\\cdot\\vec{A})\\mathrm{d}\\tau\\] \u8bc1\u660e <p>\u5f85\u8865\u5145\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy00/#_4","title":"\u65cb\u5ea6","text":"<p>\u77e2\u91cf\u51fd\u6570\\(f=(P(x,y,z), Q(x,y,z), R(x,y,z))\\)\u7684\u65cb\u5ea6\uff0c\u8f93\u5165\u4e3a\u77e2\u91cf\u3001\u8f93\u51fa\u4e3a\u77e2\u91cf\uff1a</p> \\[ \\begin{align*} \\vec{\\nabla}\\times \\vec{f}&amp;=\\begin{vmatrix} \\vec{i} &amp; \\vec{j} &amp; \\vec{k} \\\\ \\frac{\\partial}{\\partial x} &amp; \\frac{\\partial}{\\partial y} &amp; \\frac{\\partial}{\\partial z} \\\\ P &amp; Q &amp; R \\end{vmatrix} \\\\ &amp;= \\left(\\frac{\\partial R}{\\partial y} - \\frac{\\partial Q}{\\partial z}\\right)\\vec{i} + \\left(\\frac{\\partial P}{\\partial z} - \\frac{\\partial R}{\\partial x}\\right)\\vec{j} + \\left(\\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\right)\\vec{k} \\end{align*} \\] \u65cb\u5ea6\u7684\u51e0\u4f55\u542b\u4e49 <p>\u4ec0\u4e48\u662f\"\u6709\u65cb\"\uff1f</p> <p>\u9996\u5148\u7406\u89e3\"\u65cb\"\u7684\u6982\u5ff5\uff1a - \u6709\u65cb\uff1a\u77e2\u91cf\u573a\u6709\"\u73af\u7ed5\"\u6216\"\u6da1\u65cb\"\u7684\u6027\u8d28\uff0c\u5c31\u50cf\u6f29\u6da1\u4e2d\u7684\u6c34\u6d41 - \u65e0\u65cb\uff1a\u77e2\u91cf\u573a\u6ca1\u6709\u73af\u7ed5\u6027\u8d28\uff0c\u5c31\u50cf\u5e73\u884c\u76f4\u6d41\u7684\u6c34\u6d41 - \u65cb\u5ea6\uff1a\u8861\u91cf\u77e2\u91cf\u573a\u5728\u67d0\u70b9\u9644\u8fd1\u7684\"\u65cb\u8f6c\u5f3a\u5ea6\"</p> <p>\u65cb\u5ea6\u7684\u7269\u7406\u672c\u8d28</p> <p>\u65cb\u5ea6\u5b9e\u9645\u4e0a\u8861\u91cf\u7684\u662f\uff1a\u5355\u4f4d\u9762\u79ef\u5185\u77e2\u91cf\u573a\u7684\u73af\u6d41\u5f3a\u5ea6</p> <p>\u6570\u5b66\u63a8\u5bfc\uff1a\u4e3a\u4ec0\u4e48\u65cb\u5ea6\u8868\u793a\u65cb\u8f6c\u5f3a\u5ea6</p> <p>\u8ba9\u6211\u8be6\u7ec6\u89e3\u91ca\u65cb\u5ea6\u516c\u5f0f\u4e2dz\u5206\u91cf\u7684\u542b\u4e49\uff1a</p> <p>z\u5206\u91cf\uff1a</p> <p>\\(\\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\)</p> <p>\u60f3\u8c61\u5728xy\u5e73\u9762\u4e0a\u6709\u4e00\u4e2a\u5c0f\u77e9\u5f62\uff0c\u8fb9\u957f\u4e3a\\(\\Delta x\\)\u548c\\(\\Delta y\\)\uff1a</p> <p>1. \u6cbf\u7740\u77e9\u5f62\u8fb9\u754c\u7684\u73af\u6d41</p> <p>\u6cbf\u77e9\u5f62\u8fb9\u754c\u9006\u65f6\u9488\u65b9\u5411\u8ba1\u7b97\u73af\u6d41\uff1a - \u5e95\u8fb9\uff1a\u4ece\\((x, y)\\)\u5230\\((x+\\Delta x, y)\\)\uff0c\u8d21\u732e\\(P(x,y) \\cdot \\Delta x\\) - \u53f3\u8fb9\uff1a\u4ece\\((x+\\Delta x, y)\\)\u5230\\((x+\\Delta x, y+\\Delta y)\\)\uff0c\u8d21\u732e\\(Q(x+\\Delta x,y) \\cdot \\Delta y\\) - \u9876\u8fb9\uff1a\u4ece\\((x+\\Delta x, y+\\Delta y)\\)\u5230\\((x, y+\\Delta y)\\)\uff0c\u8d21\u732e\\(-P(x,y+\\Delta y) \\cdot \\Delta x\\) - \u5de6\u8fb9\uff1a\u4ece\\((x, y+\\Delta y)\\)\u5230\\((x, y)\\)\uff0c\u8d21\u732e\\(-Q(x,y) \\cdot \\Delta y\\)</p> <p>2. \u603b\u73af\u6d41</p> \\[\\Gamma = P(x,y)\\Delta x + Q(x+\\Delta x,y)\\Delta y - P(x,y+\\Delta y)\\Delta x - Q(x,y)\\Delta y\\] <p>3. \u5229\u7528\u6cf0\u52d2\u5c55\u5f00</p> <ul> <li>\\(Q(x+\\Delta x,y) \\approx Q(x,y) + \\frac{\\partial Q}{\\partial x}\\Delta x\\)</li> <li>\\(P(x,y+\\Delta y) \\approx P(x,y) + \\frac{\\partial P}{\\partial y}\\Delta y\\)</li> </ul> <p>\u4ee3\u5165\u5f97\uff1a</p> \\[ \\Gamma \\approx \\frac{\\partial Q}{\\partial x}\\Delta x \\Delta y - \\frac{\\partial P}{\\partial y}\\Delta x \\Delta y = \\left(\\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\right)\\Delta x \\Delta y\\] <p>4. \u5355\u4f4d\u9762\u79ef\u7684\u73af\u6d41\uff08\u65cb\u5ea6\u7684z\u5206\u91cf\uff09</p> \\[(\\vec{\\nabla}\\times \\vec{f})_z = \\frac{\\Gamma}{\\Delta x \\Delta y} = \\frac{\\partial Q}{\\partial x} - \\frac{\\partial P}{\\partial y}\\] <p>\u4e3a\u4ec0\u4e48\u65cb\u5ea6\u4e0d\u4e3a\u96f6\u8868\u793a\u6709\u65cb\uff1f</p> <p>\u6838\u5fc3\u7406\u89e3\uff1a\u65cb\u5ea6\u8861\u91cf\u7684\u662f\u73af\u6d41\u5bc6\u5ea6</p> <ul> <li>\u65cb\u5ea6 \u2260 0\uff1a\u51c0\u73af\u6d41 \u2260 0 \u2192 \u5b58\u5728\u65cb\u8f6c\u8d8b\u52bf \u2192 \u6709\u65cb</li> <li>\u65cb\u5ea6 = 0\uff1a\u51c0\u73af\u6d41 = 0 \u2192 \u65e0\u65cb\u8f6c\u8d8b\u52bf \u2192 \u65e0\u65cb</li> </ul> <p>\u5177\u4f53\u4f8b\u5b50</p> <p>\u4f8b\u5b501\uff1a\u7eaf\u65cb\u8f6c\u573a\uff08\u6709\u65cb\uff09</p> \\[\\vec{f} = (-y, x, 0)\\] <p>\u8ba1\u7b97z\u5206\u91cf\uff1a</p> \\[(\\vec{\\nabla}\\times \\vec{f})_z = \\frac{\\partial x}{\\partial x} - \\frac{\\partial(-y)}{\\partial y} = 1 - (-1) = 2\\] <p>\u8fd9\u8868\u793a\u7ed5z\u8f74\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u65cb\u5ea6\u4e0d\u4e3a\u96f6\uff0c\u6240\u4ee5\u6709\u65cb\u3002</p> <p>\u4f8b\u5b502\uff1a\u5f84\u5411\u573a\uff08\u65e0\u65cb\uff09</p> \\[\\vec{f} = (x, y, 0)\\] <p>\u8ba1\u7b97z\u5206\u91cf\uff1a</p> \\[(\\vec{\\nabla}\\times \\vec{f})_z = \\frac{\\partial y}{\\partial x} - \\frac{\\partial x}{\\partial y} = 0 - 0 = 0\\] <p>\u8fd9\u662f\u4ece\u539f\u70b9\u5411\u5916\u53d1\u6563\u7684\u573a\uff0c\u867d\u7136\u4e0d\u662f\u5e73\u884c\u6d41\uff0c\u4f46\u6ca1\u6709\u65cb\u8f6c\uff0c\u6240\u4ee5\u65e0\u65cb\u3002</p> <p>\u4f8b\u5b503\uff1a\u526a\u5207\u6d41\uff08\u6709\u65cb\uff09</p> \\[\\vec{f} = (y, 0, 0)\\] <p>\u8ba1\u7b97z\u5206\u91cf\uff1a</p> \\[(\\vec{\\nabla}\\times \\vec{f})_z = \\frac{\\partial 0}{\\partial x} - \\frac{\\partial y}{\\partial y} = 0 - 1 = -1\\] <p>\u65cb\u5ea6\u5b9a\u7406\uff08\u65af\u6258\u514b\u65af\u5b9a\u7406\uff09\uff1a</p> \\[\\oint_C\\vec{A}\\cdot\\mathrm{d}\\vec{l}=\\int_S(\\vec{\\nabla}\\times\\vec{A})\\cdot\\mathrm{d}\\vec{S}\\] \u8bc1\u660e <p>\u5f85\u8865\u5145\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy00/#_5","title":"\u62c9\u666e\u62c9\u65af\u7b97\u5b50","text":"<p>\u6807\u91cf\u51fd\u6570\\(f=f(x,y,z)\\)\u4f5c\u7528\u7ed9\u62c9\u666e\u62c9\u65af\u7b97\u5b50\uff1a</p> \\[ \\begin{align*} \\Delta f&amp;=\\nabla\\cdot\\nabla f \\\\ &amp;=(\\frac{\\partial}{\\partial x},\\frac{\\partial}{\\partial y},\\frac{\\partial}{\\partial z})\\cdot(f_x',f_y',f_z') \\\\ &amp;=f_{xx}''+f_{yy}''+f_{zz}'' \\end{align*} \\]"},{"location":"CourseNotes/General%20Physics%20II/Phy01/","title":"\u5e93\u4f26\u5b9a\u5f8b\uff0c\u9ad8\u65af\u5b9a\u5f8b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1598 \u4e2a\u5b57\u00a0\u00a012 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_1","title":"\u5e93\u4ed1\u5b9a\u5f8b","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_2","title":"\u7535\u5076\u6781\u5b50","text":"<p>\u7535\u5076\u6781\u5b50\u7535\u5076\u6781\u8ddd\u4e3a d\uff0c\u6240\u6c42\u70b9\u8ddd\u51e0\u4f55\u4e2d\u5fc3\u8ddd\u79bb\u4e3a r\uff0c\u5939\u89d2\u4e3a\\(\\phi\\)\uff0c\u5219\u7535\u573a\uff1a</p> \\[\\vec{E_p}=\\frac{1}{4\\pi\\varepsilon_0 r^3}\\left[-\\vec{p}+\\frac{3\\vec{r}(\\vec{r}\\cdot\\vec{p})}{r^2}\\right]\\] \u8bc1\u660e <p></p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_3","title":"\u6709\u9650\u957f\u5e26\u7535\u76f4\u5bfc\u7ebf","text":"<p>\u5bfc\u7ebf\u957f 2L\uff0c\u5e26\u7535\u91cf q\uff0c\u6240\u6c42\u70b9\u8ddd\u79bb\u5bfc\u7ebf\u4e2d\u5fc3\u8ddd\u79bb\u4e3a z\uff0c\u5728\u540c\u4e00\u6c34\u5e73\u9762\u4e0a\uff0c\u5219\u7535\u573a\uff1a</p> \\[\\vec{E}=\\frac{q}{4\\pi\\varepsilon_0}\\frac{1}{z\\sqrt{z^2+L^2}}\\hat{k}\\] \u8bc1\u660e <p></p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_4","title":"\u6709\u9650\u5927\u5e26\u7535\u5e73\u9762","text":"<p>\u5e73\u9762\u957f 2L\uff0c\u5bbd 2b\uff0c\u6240\u6c42\u70b9\u548c\u51e0\u4f55\u4e2d\u5fc3\u5728\u540c\u4e00\u7ad6\u76f4\u9762\u5185\uff0c\u8ddd\u79bb\u5e73\u9762\u8ddd\u79bb\u4e3a z\uff08z &lt;&lt; L\uff09\uff0c\u5219\u7535\u573a\uff1a</p> \\[\\vec{E}=\\frac{\\sigma}{\\pi\\varepsilon_0}\\cdot\\arctan(\\frac{b}{z})\\hat{k}\\] \u8bc1\u660e <p></p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_5","title":"\u5706\u73af\u3001\u7403\u58f3\u3001\u7403\u4f53","text":"<p>\u5706\u73af\uff1a\u6309\u89d2\u5ea6\u5206\u6210\u4e00\u6bb5\u6bb5\u5706\u5f27</p> <p>\u5747\u5300\u5e26\u7535\u7403\u58f3\uff1a\u7eb5\u5411\u5206\u6210\u5706\u73af\uff0c\u6bcf\u4e2a\u5706\u73af\u7684\u5bbd\u5ea6\u6309\u7eb5\u5207\u9762\u89d2\u5ea6\u5212\u5206\uff0c\u6700\u7ec8\u4e3a\u5173\u4e8e\u89d2\u5ea6\u7684\u79ef\u5206\u3002</p> \\[\\mathrm{d}q=2\\pi R\\sin\\theta\\text{(\u5706\u73af\u5468\u957f)}\\cdot R\\mathrm{d}\\theta\\text{(\u5706\u73af\u5bbd\u5ea6)}\\cdot\\sigma\\text{(\u7535\u8377\u9762\u5bc6\u5ea6)}\\] <p>\u7403\u58f3\u5185\uff1a\u5bf9\u4efb\u610f\u4e00\u70b9\uff0c\u53d6\u76f8\u5bf9\u7684\u4e24\u5757\u7403\u9762\uff0c\u7528\u7acb\u4f53\u89d2\u8ba1\u7b97\u9762\u79ef\u3002\u76f8\u5bf9\u7403\u9762\u5728\u8be5\u70b9\u7684\u7535\u573a\u5f3a\u5ea6\u62b5\u6d88\u3002</p> <p>\u5747\u5300\u5e26\u7535\u7403\u4f53\uff1a\u7403\u5916\u5e73\u65b9\u53cd\u6bd4\uff0c\u7403\u5185\u6b63\u6bd4\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_6","title":"\u51e0\u70b9\u6ce8\u610f","text":"<p>\u51e0\u79cd\u500d\u7387\uff1a</p> \u524d\u7f00 \u7b26\u53f7 \u500d\u6570 \u6570\u503c\u8868\u793a femto f \\(10^{-15}\\) \\(1 \\, \\text{fC} = 10^{-15} \\, \\text{C}\\) micro \\(\\mu\\) \\(10^{-6}\\) \\(1 \\, \\mu\\text{C} = 10^{-6} \\, \\text{C}\\) milli m \\(10^{-3}\\) \\(1 \\, \\text{mA} = 10^{-3} \\, \\text{A}\\) centi c \\(10^{-2}\\) \\(1 \\, \\text{cm} = 10^{-2} \\, \\text{m}\\) deci d \\(10^{-1}\\) \\(1 \\, \\text{dm} = 10^{-1} \\, \\text{m}\\) kilo k \\(10^{3}\\) \\(1 \\, \\text{kJ} = 10^{3} \\, \\text{J}\\) mega M \\(10^{6}\\) \\(1 \\, \\text{MG} = 10^{6} \\, \\text{g}\\) giga G \\(10^{9}\\) \\(1 \\, \\text{GB} = 10^{9} \\, \\text{B}\\) tera T \\(10^{12}\\) \\(1 \\, \\text{TB} = 10^{12} \\, \\text{B}\\) \u76f8\u5bf9\u8fd0\u52a8\u4e0b\u89c2\u5bdf\u7535\u573a\u548c\u78c1\u573a\uff1f <p>\u5047\u8bbe\u4e00\u65e0\u9650\u957f\u76f4\u5bfc\u7ebf\uff0c\u7535\u8377\u4ee5\u6052\u5b9a\u901f\u5ea6 v \u5411\u53f3\u8fd0\u52a8\u3002</p> <p>case1\uff1a\u4eba\u9759\u6b62\u3002\u6b64\u65f6\u7535\u8377\u4ea7\u751f\u7535\u573a\uff0c\u8fd0\u52a8\u7684\u7535\u8377\u4ea7\u751f\u78c1\u573a\u3002</p> <p>case2\uff1a\u4eba\u4e5f\u4ee5\u6052\u5b9a\u901f\u5ea6 v \u5411\u53f3\u8fd0\u52a8\uff0c\u6b64\u65f6\u7535\u8377\u548c\u4eba\u76f8\u5bf9\u9759\u6b62\uff0c\u5728\u8be5\u53c2\u8003\u7cfb\u4e2d\u78c1\u573a\u4e3a\u96f6\u3002</p> <p>case2 \u4e2d\u89c2\u5bdf\u8005\u901f\u5ea6\u4e3a\\(v\\)\uff0c\u6839\u636e\u76f8\u5bf9\u8bba\u957f\u5ea6\u7f29\u77ed\uff0c\u89c2\u5bdf\u5230\u7684\u7535\u8377\u5bc6\u5ea6\u4e3a\\(\\lambda'=\\gamma\\lambda\\)\uff0c\u5176\u4e2d\\(\\gamma=\\frac{1}{\\sqrt{1+v^2 / c^2}}\\)\u4e3a\u6d1b\u4f26\u5179\u56e0\u5b50\u3001\\(\\lambda\\)\u4e3a case1 \u4e2d\u7684\u7535\u8377\u5bc6\u5ea6\u3002\u7531\u4e8e case2 \u4e2d\u7535\u8377\u5bc6\u5ea6\u66f4\u5927\uff0c\u7535\u573a\u66f4\u5f3a\uff0c\u201c\u8865\u507f\u201d\u4e86\u78c1\u573a\u7684\u6d88\u5931\u3002</p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u7535\u573a\u548c\u78c1\u573a\u662f\u540c\u4e00\u7269\u7406\u5b9e\u4f53\u5728\u4e0d\u540c\u53c2\u8003\u7cfb\u4e2d\u7684\u8868\u73b0\u3002</p> \u8fd0\u52a8\u7535\u8377\u4e0d\u6ee1\u8db3\u5e93\u4f26\u5b9a\u5f8b\uff1f <p>\u5e93\u4f26\u5b9a\u5f8b\u7684\u9002\u7528\u8303\u56f4</p> <p>\u5e93\u4f26\u5b9a\u5f8b\uff1a</p> \\[\\vec{F} = k\\frac{q_1 q_2}{r^2}\\hat{r}\\] <p>\u4ec5\u9002\u7528\u4e8e\u9759\u6b62\u7535\u8377\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u5f53\u7535\u8377\u8fd0\u52a8\u65f6\uff0c\u60c5\u51b5\u53d8\u5f97\u590d\u6742\u5f97\u591a\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8fd0\u52a8\u7535\u8377\u4e0d\u6ee1\u8db3\u5e93\u4f26\u5b9a\u5f8b\uff1f</p> <ol> <li>\u78c1\u573a\u7684\u4ea7\u751f</li> </ol> <p>\u8fd0\u52a8\u7535\u8377\u4f1a\u4ea7\u751f\u78c1\u573a\uff1a</p> \\[\\vec{B} = \\frac{\\mu_0}{4\\pi}\\frac{q\\vec{v}\\times\\hat{r}}{r^2}\\] <p>\u8fd9\u4e2a\u78c1\u573a\u4f1a\u5bf9\u5176\u4ed6\u8fd0\u52a8\u7535\u8377\u4ea7\u751f\u6d1b\u4f26\u5179\u529b\uff1a</p> \\[\\vec{F}_{magnetic} = q\\vec{v}\\times\\vec{B}\\] <ol> <li>\u7535\u573a\u7684\u53d8\u5316</li> </ol> <p>\u8fd0\u52a8\u7535\u8377\u7684\u7535\u573a\u4e0d\u518d\u662f\u7b80\u5355\u7684\u5e93\u4f26\u573a\uff0c\u800c\u662f\uff1a</p> \\[\\vec{E} = \\frac{1}{4\\pi\\varepsilon_0}\\frac{q}{r^2}\\frac{(1-\\beta^2)}{(1-\\beta^2\\sin^2\\theta)^{3/2}}\\hat{r}\\] <p>\u5176\u4e2d \\(\\beta = v/c\\)\uff0c\\(\\theta\\) \u662f\u901f\u5ea6\u65b9\u5411\u4e0e\u4f4d\u7f6e\u77e2\u91cf\u7684\u5939\u89d2\u3002</p> <ol> <li>\u76f8\u5bf9\u8bba\u6548\u5e94</li> </ol> <p>\u9ad8\u901f\u8fd0\u52a8\u65f6\uff0c\u8fd8\u9700\u8981\u8003\u8651\uff1a - \u957f\u5ea6\u6536\u7f29 - \u65f6\u95f4\u81a8\u80c0 - \u8d28\u91cf-\u80fd\u91cf\u7b49\u6548</p> <p>\u8003\u8651\u4e00\u4e2a\u9759\u6b62\u7535\u8377\u548c\u4e00\u4e2a\u8fd0\u52a8\u7535\u8377\u3002\u524d\u8005\u5bf9\u540e\u8005\u7684\u529b\u6ee1\u8db3\u5e93\u4f26\u5b9a\u5f8b\uff0c\u800c\u540e\u8005\u5bf9\u524d\u8005\u7684\u529b\u4e0d\u6ee1\u8db3\u5e93\u4f26\u5b9a\u5f8b\u3002\u6b64\u65f6\u725b\u987f\u7b2c\u4e09\u5b9a\u5f8b\u4e0d\u6210\u7acb\uff01</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_7","title":"\u9ad8\u65af\u5b9a\u7406","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_8","title":"\u9ad8\u65af\u5b9a\u7406\u8868\u8ff0","text":"<p>\u9ad8\u65af\u5b9a\u7406\uff1a\u5c01\u95ed\u66f2\u9762\u7684\u7535\u901a\u91cf\u6b63\u6bd4\u4e8e\u66f2\u9762\u56f4\u6210\u533a\u57df\u5185\u7684\u7535\u8377\u603b\u91cf\u3002</p> \\[\\iint\\vec{E}\\cdot\\mathrm{d}\\vec{S}=\\frac{Q_{in}}{\\varepsilon_0}\\] <p>\u7a7a\u95f4\u89d2\uff1a</p> \\[\\mathrm{d}\\Omega=\\frac{\\hat{r}\\cdot \\mathrm{d}\\vec{S}}{r^2}\\] <p>\u5176\u4e2d \\(\\hat{r}\\) \u4e3a\u5355\u4f4d\u5f84\u77e2\uff0c\u5206\u5b50\u4e2d \\(\\hat{r}\\cdot \\mathrm{d}\\vec{S}\\) \u5c06\u9762\u5143\u8f6c\u5316\u4e3a\u4e0e\u5f84\u77e2\u5782\u76f4\u3002</p> <p>\u7535\u901a\u91cf\u6b63\u8d1f\uff1a\u53d6\u66f2\u9762\u7684\u5916\u6cd5\u5411\u5411\u91cf\u3002\u7535\u573a\u7ebf\u7a7f\u51fa\u66f2\u9762\uff0c\u7535\u901a\u91cf\u4e3a\u6b63\uff1b\u7a7f\u5165\u66f2\u9762\uff0c\u7535\u901a\u91cf\u4e3a\u8d1f\u3002</p> <p>\u9ad8\u65af\u9762\u5916\u7684\u7535\u8377\u5bf9\u603b\u901a\u91cf\u6ca1\u6709\u8d21\u732e\uff0c\u4f46\u4e0d\u662f\u5bf9\u603b\u573a\u5f3a\u6ca1\u6709\u8d21\u732e\u3002\u603b\u573a\u5f3a\u7531\u7a7a\u95f4\u5185\u6240\u6709\u7535\u8377\u5171\u540c\u6784\u6210\u3002</p> <p>\u7535\u573a\u65b9\u5411\uff1a</p> <p>\u9ad8\u65af\u5b9a\u7406\u53ea\u80fd\u5f97\u5230\u7535\u573a\u5927\u5c0f\u3002\u8981\u5224\u65ad\u7535\u573a\u65b9\u5411\uff0c\u9700\u8981\u7ed3\u5408\u65cb\u8f6c\u4e0d\u53d8\u6027\u3001\u955c\u50cf\u53cd\u5c04\u4e0d\u53d8\u6027\u7b49\u6027\u8d28\u3002</p> <p>\u4efb\u610f\u4e00\u70b9\u7535\u573a \\(E\\) \u53ef\u4ee5\u5206\u4e3a\u8f74\u77e2\u91cf \\(E_r\\)\uff0c\u6781\u77e2\u91cf \\(E_{\\phi}\\)\u3001\\(E_{\\theta}\\) \u4e09\u4e2a\u5206\u91cf\u3002</p> <ul> <li>\u7403\u5bf9\u79f0\uff1a</li> </ul> <p>\u70b9\u7535\u8377\u9ad8\u65af\u5b9a\u7406</p> <p>\u4efb\u610f\u5c01\u95ed\u66f2\u9762\u4e00\u70b9\u7535\u8377\uff0c\u8ba1\u7b97\u7535\u901a\u91cf\uff1a</p> \\[\\mathrm{d}\\Phi=\\vec{E}\\cdot \\mathrm{d}\\vec{A}=\\frac{\\mathrm{d}q}{4\\pi\\varepsilon_0 r^2}\\cdot r^2\\Omega=\\frac{\\mathrm{d}q}{4\\pi\\varepsilon_0 }\\Omega\\] <p>\u5176\u4e2d\\(r^2\\Omega\\)\u5c06\u66f2\u9762\u8f6c\u5316\u4e3a\u6b63\u6295\u5f71\u3002</p> \\[\\Phi=\\oint\\mathrm{d}\\Omega=\\frac{q}{\\varepsilon_0}\\] <p>\u540c\u7406\u53ef\u5f97\u5bf9\u70b9\u7535\u8377\u5916\u7684\u5c01\u95ed\u66f2\u9762\uff0c\u540c\u4e00\u7a7a\u95f4\u89d2\u5185\u7684\u4e24\u5757\u533a\u57df\u901a\u91cf\u548c\u4e3a\u96f6\uff0c\u6545\u6574\u4f53\u7684\u901a\u91cf\u4e3a\u96f6\u3002</p> <p>\u9ad8\u65af\u9762\u80fd\u4e0d\u80fd\u901a\u8fc7\u70b9\u7535\u8377\uff1f</p> <p>\u5f53\u70b9\u7535\u8377\u5728\u9ad8\u65af\u9762\u4e0a\uff0c\u600e\u4e48\u8ba1\u7b97\uff1f</p> <p>\u8fd9\u79cd\u60c5\u51b5\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u70b9\u7535\u8377\u7684\u5b9a\u4e49\u51b3\u5b9a\u4e0d\u8003\u8651\u5b83\u7684\u5927\u5c0f\u3001\u5f62\u72b6\uff0c\u4e5f\u4e0d\u8003\u8651\u70b9\u7535\u8377\u201c\u88ab\u7a7f\u8fc7\u201d\u7684\u60c5\u5f62\u3002</p> <p>\u9ad8\u65af\u5b9a\u7406\u548c\u65af\u6258\u514b\u65af\u5b9a\u7406</p> <p>\u9ad8\u65af\u5b9a\u7406\uff1a</p> <p>\u5047\u8bbe\u5c01\u95ed\u66f2\u9762 S\uff0c\u56f4\u6210\u4f53\u79ef V\u3002 \u5219 S \u7684\u901a\u91cf\uff0c\u5373\u77e2\u91cf\u5bf9 S \u7684\u9762\u79ef\u5206\uff0c\u7b49\u4e8e\u6563\u5ea6\u5bf9 V \u7684\u4f53\u79ef\u5206\u3002 \u901a\u91cf\u4e3a\u6b63\uff0c\u8868\u793a\u6e90\uff1b\u901a\u91cf\u4e3a\u8d1f\uff0c\u8868\u793a\u6c47\u3002</p> <p>\u5bf9\u4e8e\u7535\u573a\uff1a</p> <p>\u5bf9\u4e8e\u4efb\u610f\u7684\u5c0f\u7acb\u65b9\u4f53\uff08dx, dy, dz\uff09\uff0c\u6709</p> <p>\u901a\u91cf = \u603b\u7535\u8377\u91cf/\u4ecb\u7535\u5e38\u6570 = \u7535\u8377\u5bc6\u5ea6/\u4ecb\u7535\u5e38\u6570 * \u4f53\u79ef \u901a\u91cf = \u6563\u5ea6 * \u4f53\u79ef</p> <p>\u56e0\u6b64\u5bf9\u6bcf\u4e2a\u5c0f\u7acb\u65b9\u4f53\uff0c\u6563\u5ea6 = \u7535\u8377\u5bc6\u5ea6/\u4ecb\u7535\u5e38\u6570</p> \\[ \\begin{align} \\vec{\\nabla}\\cdot\\vec{E}=\\frac{\\rho}{\\varepsilon_0} \\end{align} \\] <p>\u800c\u4efb\u610f\u5c01\u95ed\u66f2\u9762\u56f4\u6210\u7684\u4f53\u79ef\uff0c\u53ef\u770b\u4f5c\u65e0\u6570\u4e2a\u5c0f\u7acb\u65b9\u4f53\u7684\u96c6\u5408\u3002\u901a\u91cf\u7b49\u4e8e\u6563\u5ea6\u7684\u4f53\u79ef\u5206\uff0c\u800c\u6bcf\u4e2a\u6563\u5ea6\u7528\u201c\u7535\u8377\u5bc6\u5ea6/\u4ecb\u7535\u5e38\u6570\u201d\u66ff\u6362\uff0c\u5f97\u5230\u4efb\u610f\u4f53\u79ef\u6ee1\u8db3(1)\u5f0f\u3002</p> <p>\u65af\u6258\u514b\u65af\u5b9a\u7406\uff1a</p> <p>\u5047\u8bbe\u5c01\u95ed\u66f2\u7ebf\u4e3a l\uff0c\u56f4\u6210\u66f2\u9762 S\u3002 \u5219 l \u7684\u73af\u6d41\uff0c\u5373\u77e2\u91cf\u5bf9 l \u7684\u7ebf\u79ef\u5206\uff0c\u7b49\u4e8e\u65cb\u5ea6\u5bf9 S \u7684\u9762\u79ef\u5206\u3002 \u73af\u6d41\u4e3a\u6b63\uff0c\u8868\u793a\u9006\u65f6\u9488\uff1b\u73af\u6d41\u4e3a\u8d1f\uff0c\u8868\u793a\u987a\u65f6\u9488\uff1b\u73af\u6d41\u4e3a\u96f6\uff0c\u8868\u793a\u65e0\u65cb\u3002</p> <p>\u9759\u7535\u573a\u662f\u65e0\u65cb\u573a\uff1a</p> \\[\\vec{\\nabla}\\times\\vec{E}=0\\]"},{"location":"CourseNotes/General%20Physics%20II/Phy01/#_9","title":"\u5e38\u89c1\u7535\u573a\u5f3a\u5ea6","text":"\u7535\u8377\u5206\u5e03 \u9ad8\u65af\u9762\u9009\u62e9 \u7535\u573a\u5f3a\u5ea6\u8868\u8fbe\u5f0f \u8bf4\u660e \u65e0\u9650\u957f\u76f4\u5bfc\u7ebf\uff08\u7ebf\u7535\u8377\u5bc6\u5ea6\uff09 \u5706\u67f1\u5f62\u9ad8\u65af\u9762\uff08\u4ee5\u5bfc\u7ebf\u4e3a\u8f74\u5fc3\uff09 \\(E = \\frac{\\lambda}{2 \\pi \\varepsilon_0 r}\\) \u5176\u4e2d \\(\\lambda\\) \u4e3a\u7ebf\u7535\u8377\u5bc6\u5ea6\uff0c\\(r\\) \u4e3a\u5230\u5bfc\u7ebf\u7684\u5f84\u5411\u8ddd\u79bb \u65e0\u9650\u5927\u5e73\u677f\uff08\u9762\u7535\u8377\u5bc6\u5ea6\uff09 \u5e73\u884c\u4e8e\u5e73\u677f\u7684\u9ad8\u65af\u9762\uff08\u4e0e\u5e73\u677f\u5e73\u884c\uff09 \\(E = \\frac{\\sigma}{2 \\varepsilon_0}\\) \u5176\u4e2d \\(\\sigma\\) \u4e3a\u9762\u7535\u8377\u5bc6\u5ea6\uff0c\u7535\u573a\u5f3a\u5ea6\u5728\u5e73\u677f\u4e24\u4fa7\u76f8\u7b49\uff0c\u4e14\u4e0e\u8ddd\u79bb\u65e0\u5173 \u7403\u58f3\uff08\u5916\u90e8\uff0c\u9762\u7535\u8377\u5bc6\u5ea6\uff09 \u7403\u5f62\u9ad8\u65af\u9762\uff08\u534a\u5f84\u5927\u4e8e\u7403\u58f3\u534a\u5f84\uff09 \\(E = \\frac{Q_{\\text{enc}}}{4 \\pi \\varepsilon_0 r^2}\\) \\(Q_{\\text{enc}}\\) \u662f\u7403\u58f3\u5185\u90e8\u7684\u603b\u7535\u8377\uff0c\\(r\\) \u662f\u8ddd\u79bb\u7403\u5fc3\u7684\u5f84\u5411\u8ddd\u79bb \u7403\u58f3\uff08\u5185\u90e8\uff0c\u9762\u7535\u8377\u5bc6\u5ea6\uff09 \u7403\u5f62\u9ad8\u65af\u9762\uff08\u534a\u5f84\u5c0f\u4e8e\u7403\u58f3\u534a\u5f84\uff09 \\(E = 0\\) \u7531\u4e8e\u5bf9\u79f0\u6027\uff0c\u7403\u58f3\u5185\u90e8\u7684\u7535\u573a\u4e3a\u96f6 \u5747\u5300\u5e26\u7535\u7403\u4f53\uff08\u5916\u90e8\uff0c\u4f53\u7535\u8377\u5bc6\u5ea6\uff09 \u7403\u5f62\u9ad8\u65af\u9762\uff08\u534a\u5f84\u5927\u4e8e\u7403\u4f53\u534a\u5f84\uff09 \\(E = \\frac{Q_{\\text{enc}}}{4 \\pi \\varepsilon_0 r^2}\\) \u5916\u90e8\u7535\u573a\u4e0e\u70b9\u7535\u8377\u76f8\u540c\uff0c\u9075\u5faa\u5e73\u65b9\u53cd\u6bd4\u5b9a\u5f8b \u5747\u5300\u5e26\u7535\u7403\u4f53\uff08\u5185\u90e8\uff0c\u4f53\u7535\u8377\u5bc6\u5ea6\uff09 \u7403\u5f62\u9ad8\u65af\u9762\uff08\u534a\u5f84\u5c0f\u4e8e\u7403\u4f53\u534a\u5f84\uff09 \\(E = \\frac{\\rho r}{3 \\varepsilon_0}\\) \u5176\u4e2d \\(\\rho\\) \u4e3a\u4f53\u7535\u8377\u5bc6\u5ea6\uff0c\u7535\u573a\u5f3a\u5ea6\u968f \\(r\\) \u589e\u5927\u800c\u589e\u5927 <p>\u51e0\u70b9\u6ce8\u610f\uff1a</p> <ul> <li>\u542b\\(\\mathrm{d}r/\\sqrt{r^2+z^2}\\)\u7684\u79ef\u5206\uff1a\u4ee4\\(r=z\\tan\\theta\\)\uff0c\u5219\\(\\mathrm{d}r=z\\sec ^2\\theta\\mathrm{d}\\theta\\)\uff0c\\(r^2+z^2=z^2\\sec ^2\\theta\\)</li> <li>\u5747\u5300\u7403\u58f3\u5916\uff1a\u6309\u89d2\u5ea6\\(\\theta\\)\u5206\u5272\u4e3a\u5706\u73af\uff0c\\(\\mathrm{d}q=2\\pi R\\sin\\theta\\cdot R\\mathrm{d}\\theta\\cdot \\sigma\\)</li> <li>\u7403\u58f3\u5185\u7535\u573a\uff1a\u7a7a\u95f4\u89d2\u76f8\u5bf9\u4e24\u5757\uff0c\u6cd5\u5411\u91cf\u5939\u89d2\u76f8\u7b49\uff0c\u7535\u8377\u4e0e\u8ddd\u79bb\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u7535\u573a\u548c\u4e3a\u96f6</li> <li>\u5728\u6709\u9650\u957f\u7684\u5bfc\u4f53\u53d6\u7535\u8377\u5143</li> <li>\u6709\u539a\u5ea6\u7684\u5e26\u7535\u5e73\u677f\uff0c\u6c42\u7a7a\u95f4\u5185\u7535\u573a\uff1a\u533a\u5206\u5e73\u677f\u5185\u3001\u5916\uff01</li> </ul>"},{"location":"CourseNotes/General%20Physics%20II/Phy02/","title":"\u7535\u52bf\uff0c\u5bfc\u4f53","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1739 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_1","title":"\u7535\u52bf","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_2","title":"\u7535\u52bf\u5b9a\u4e49","text":"<p>\u9759\u7535\u573a\u662f\u4fdd\u5b88\u573a\uff0c\u6240\u4ee5\u80fd\u5b9a\u4e49\u9759\u7535\u52bf\u3002</p> <p>\u7535\u52bf\uff08\u76f8\u5bf9\u65e0\u7a77\u8fdc\u53c2\u8003\u70b9\uff09\uff1a</p> \\[ V(\\vec{r}) = -\\int_{\\infty}^{\\vec{r}} \\vec{E} \\cdot d\\vec{l} \\] <p>\u7535\u573a\u5f3a\u5ea6\u662f\u7535\u52bf\u7684\u68af\u5ea6\uff0c\u7535\u52bf\u662f\u7535\u573a\u5f3a\u5ea6\u7684\u79ef\u5206\uff0c\u5373\\(\\vec{E}=-\\nabla V\\)\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_3","title":"\u7535\u52bf\u8ba1\u7b97","text":"<p>\u8ba1\u7b97\u7535\u52bf\u7684\u65b9\u6cd5\u5206\u4e3a\u4e24\u79cd\uff1a\u4ece\u8be5\u70b9\u79fb\u52a8\u5230\u7535\u52bf\u96f6\u70b9\u505a\u7684\u529f\uff0c\u7535\u52bf\u53e0\u52a0\u3002</p> <p>\u4e00\u822c\u8ba4\u4e3a\u65e0\u7a77\u8fdc\u5904\u4e3a\u7535\u52bf\u96f6\u70b9\u3002\u4f46\u65e0\u9650\u5927\u5e26\u7535\u5e73\u9762\u6216\u65e0\u9650\u957f\u5bfc\u7ebf\u7684\u7535\u52bf\u65e0\u7edd\u5bf9\u96f6\u70b9\uff08\u5426\u5219\u4efb\u610f\u4f4d\u7f6e\u7535\u52bf\u4e3a\u65e0\u7a77\u5927\uff09\uff0c\u9700\u6307\u5b9a\u53c2\u8003\u4f4d\u7f6e\u3002</p> <p>\u793a\u4f8b \u7535\u5076\u6781\u5b50\u7535\u52bf</p> <p>\u7535\u5076\u6781\u5b50\uff0cq\uff0cd\uff0c\u5916\u4e00\u70b9 P\uff0c\u8ddd\u79bb d\uff0cP \u5230\u4e2d\u5fc3\u70b9\u4e0e\u6b63\u8d1f\u4e2d\u5fc3\u8fde\u7ebf\u7684\u5939\u89d2\u4e3a\\(\\theta\\)\uff0c\u6c42 P \u70b9\u7535\u52bf\u3002</p> \\[ \\begin{align*} V_P&amp;=\\frac{1}{4\\pi\\varepsilon_0}\\left(\\frac{q}{r_+}+\\frac{-q}{r_-}\\right)\\\\ &amp;=\\frac{q}{4\\pi\\varepsilon_0}\\frac{r_--r_+}{r_+r_-} \\end{align*} \\] <p>\u7531\u4e8e\\(r\\gg d\\)\uff0c\u8fd1\u4f3c\\(r_--r_+ = d\\cos\\theta\\)\uff0c\\(r_+r_- = r^2\\)\uff0c\u5219</p> \\[V_P=\\frac{1}{4\\pi\\varepsilon_0}\\frac{qd\\cos\\theta}{r^2}=\\frac{1}{4\\pi\\varepsilon_0}\\frac{p}{r^2}\\] <p>\u5176\u4e2d p \u4e3a\u7535\u5076\u6781\u77e9\u3002</p> <p>\u7535\u5076\u6781\u5b50\u5728\u5916\u7535\u573a\u4e2d\uff1a</p> <ul> <li>\u529b\u77e9\uff1a\\(\\vec{\\tau} = \\vec{p} \\times \\vec{E}\\)</li> <li>\u52bf\u80fd\uff1a\\(U = -\\vec{p} \\cdot \\vec{E}\\)</li> </ul> <p>\u7535\u5076\u6781\u5b50\u503e\u5411\u4e8e\u8f6c\u5411\u4e0e\u5916\u7535\u573a\u5e73\u884c\u4ee5\u964d\u4f4e\u52bf\u80fd\u3002</p> <p>\u4e00\u4e2a\u7ed3\u8bba</p> <p>\u8bc1\u660e\uff1a\u5728\u771f\u7a7a\u9759\u7535\u573a\u4e2d\u51e1\u662f\u7535\u573a\u7ebf\u90fd\u662f\u5e73\u884c\u76f4\u7ebf\u7684\u5730\u65b9\uff0c\u7535\u573a\u5f3a\u5ea6\u7684\u5927\u5c0f\u5b9a\u5904\u5904\u76f8\u7b49\uff1b\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u51e1\u662f\u7535\u573a\u5f3a\u5ea6\u7684\u65b9\u5411\u5904\u5904\u76f8\u540c\u7684\u5730\u65b9\uff0c\u7535\u573a\u5f3a\u5ea6\u7684\u5927\u5c0f\u5fc5\u5b9a\u5904\u5904\u76f8\u7b49\u3002 \u3010\u63d0\u793a\uff1a\u5229\u7528\u9ad8\u65af\u5b9a\u7406\u548c\u4f5c\u529f\u4e0e\u8def\u5f84\u65e0\u5173\u7684\u6027\u8d28\uff0c\u5206\u522b\u8bc1\u660e\u6cbf\u540c\u4e00\u7535\u573a\u7ebf\u548c\u6cbf\u540c\u4e00\u7b49\u52bf\u9762\u4e0a\u4e24\u70b9\u7684\u573a\u5f3a\u76f8\u7b49\u3002\u3011</p> <p>\u7ed3\u8bba\uff1a\u5728\u771f\u7a7a\u9759\u7535\u573a\u7684\u67d0\u4e00\u533a\u57df\u91cc\uff0c\u82e5\u7535\u573a\u7ebf\u90fd\u662f\u5e73\u884c\u76f4\u7ebf\uff08\u65b9\u5411\u5904\u5904\u76f8\u540c\uff09\uff0c\u5219\u7535\u573a\u5f3a\u5ea6\u7684\u5927\u5c0f\u5904\u5904\u76f8\u7b49\uff08\u8be5\u533a\u57df\u5185 \\(|\\mathbf E|\\) \u4e3a\u5e38\u6570\uff09\u3002</p> <p>\u8bc1\u660e\u5206\u4e24\u6b65\uff0c\u5206\u522b\u5bf9\u5e94\u63d0\u793a\u4e2d\u7684\u4e24\u79cd\u601d\u8def\uff1a</p> <ul> <li>(1) \u6cbf\u540c\u4e00\u7535\u573a\u7ebf\u4e24\u70b9\u7684\u573a\u5f3a\u76f8\u7b49\uff08\u7528\u9ad8\u65af\u5b9a\u5f8b\uff09</li> </ul> <p>\u53d6\u4e00\u6839\u6781\u7ec6\u7684\u201c\u9ad8\u65af\u67f1\u201d\uff08\u6216\u79f0\u201c\u901a\u91cf\u7ba1\u201d\uff09\uff1a\u4fa7\u9762\u4e0e\u7535\u573a\u7ebf\u5e73\u884c\uff0c\u4e24\u7aef\u76d6\u4e3a\u4e0e\u7535\u573a\u7ebf\u5782\u76f4\u7684\u5c0f\u5706\u7247\uff0c\u7aef\u76d6\u5206\u522b\u843d\u5728\u540c\u4e00\u6761\u7535\u573a\u7ebf\u4e0a\u4e24\u70b9 (P)\u3001(Q)\uff0c\u7aef\u76d6\u9762\u79ef\u76f8\u540c\u4e3a (A)\u3002\u7531\u4e8e\u662f\u9759\u7535\u771f\u7a7a\u4e14\u67f1\u5185\u65e0\u81ea\u7531\u7535\u8377\uff0c</p> \\[ \\oiint_S \\mathbf E\\cdot d\\mathbf A=\\frac{Q_{\\text{enc}}}{\\varepsilon_0}=0. \\] <p>\u4fa7\u9762\u4e0e \\(\\mathbf E\\) \u5e73\u884c\uff0c\u4fa7\u9762\u901a\u91cf\u4e3a 0\uff1b\u4ec5\u4e24\u7aef\u76d6\u6709\u901a\u91cf\uff0c\u4e14\u6cd5\u5411\u76f8\u53cd\uff0c\u5f97</p> \\[ E(P),A - E(Q),A = 0\\quad\\Rightarrow\\quad E(P)=E(Q). \\] <p>\u6545\u540c\u4e00\u6761\u7535\u573a\u7ebf\u4e0a\u4efb\u610f\u4e24\u70b9\u573a\u5f3a\u5927\u5c0f\u76f8\u7b49\u3002</p> <p>\u76f4\u89c2\uff1a\u65e0\u6e90\u4f7f\u901a\u91cf\u6cbf\u201c\u901a\u91cf\u7ba1\u201d\u5b88\u6052\uff1b\u800c\u5728\u201c\u5e73\u884c\u76f4\u7ebf\u201d\u51e0\u4f55\u4e0b\uff0c\u7aef\u9762\u76f8\u540c\uff0c\u6545 (|\\mathbf E|) \u4e0d\u53d8\u3002</p> <ul> <li>(2) \u540c\u4e00\u7b49\u52bf\u9762\u4e0a\u4e24\u70b9\u7684\u573a\u5f3a\u76f8\u7b49\uff08\u7528\u4f5c\u529f\u4e0e\u8def\u5f84\u65e0\u5173\uff09</li> </ul> <p>\u53d6\u4e00\u4e2a\u6781\u5c0f\u77e9\u5f62\u56de\u8def (P\\to P'\\to Q'\\to Q\\to P)\uff0c\u5176\u4e2d\uff1a</p> <p>\\(P\\to Q\\) \u4e0e \\(P'\\to Q'\\) \u4e24\u6bb5\u6cbf\u7535\u573a\u7ebf\u65b9\u5411\uff08\u76f8\u4e92\u5e73\u884c\uff09\uff1b \\(Q\\to Q'\\) \u4e0e \\(P'\\to P\\) \u4e24\u6bb5\u6cbf\u540c\u4e00\u7b49\u52bf\u9762\uff08\u4e0e (\\mathbf E) \u5782\u76f4\uff09\u3002</p> <p>\u9759\u7535\u573a\u4fdd\u5b88\uff0c\u95ed\u5408\u73af\u8def\u4f5c\u529f\u4e3a\u96f6\uff1a</p> \\[ \\oint \\mathbf E\\cdot d\\mathbf l = 0. \\] <p>\u800c\u5728\u7b49\u52bf\u6bb5\u4e0a \\(\\mathbf E\\cdot d\\mathbf l=0\\)\uff0c\u6545\u4ec5\u4e24\u6761\u201c\u6cbf\u573a\u7ebf\u201d\u7684\u8fb9\u6709\u8d21\u732e\u3002\u53d6\u5b83\u4eec\u957f\u5ea6\u540c\u4e3a \\(\\delta \\ell\\) \u5e76\u4ee4\u77e9\u5f62\u65e0\u9650\u5c0f\uff0c\u5219</p> \\[ E(P),\\delta \\ell - E(Q),\\delta \\ell = 0\\quad\\Rightarrow\\quad E(P)=E(Q). \\] <p>\u4e8e\u662f\u540c\u4e00\u7b49\u52bf\u9762\u4e0a\u76f8\u90bb\u4e24\u70b9\u573a\u5f3a\u76f8\u7b49\uff0c\u8fdb\u800c\u5904\u5904\u76f8\u7b49\u3002</p> <ul> <li>(3) \u5f52\u7ed3\u5230\u201c\u65b9\u5411\u5904\u5904\u76f8\u540c \u21d2 \u5927\u5c0f\u5904\u5904\u76f8\u7b49\u201d</li> </ul> <p>\u7ed9\u5b9a\u533a\u57df\u5185\u4efb\u53d6\u4e24\u70b9 (A,B)\u3002\u6cbf\u7b49\u52bf\u9762\u4ece \\(A\\) \u5e73\u79fb\u5230\u4e0e \\(B\\) \u540c\u4e00\u7535\u573a\u7ebf\u4e0a\u7684\u70b9 \\(A'\\)\uff08\u7528\u6b65\u9aa4 2\uff1a\\(E(A)=E(A')\\)\uff09\uff1b\u518d\u6cbf\u8be5\u7535\u573a\u7ebf\u4ece \\(A'\\) \u5230 \\(B\\)\uff08\u7528\u6b65\u9aa4 1\uff1a\\(E(A')=E(B)\\)\uff09\u3002\u4e8e\u662f</p> \\[ E(A)=E(A')=E(B). \\] <p>\u6545\u8be5\u533a\u57df \\(|\\mathbf E|\\) \u4e3a\u5e38\u6570\uff0c\u8bc1\u6bd5\u3002</p> <p>\u5e38\u89c1\u7535\u8377\u5206\u5e03\u7684\u7535\u52bf:</p> \u7535\u8377\u5206\u5e03 \u7535\u52bf \\(V(r)\\) \u70b9\u7535\u8377 \\(q\\) \\(\\displaystyle V = \\frac{1}{4\\pi\\varepsilon_0} \\frac{q}{r}\\) \u5747\u5300\u5e26\u7535\u7403\u58f3\uff08\u603b\u7535\u8377 \\(Q\\)\uff0c\u534a\u5f84 \\(R\\)\uff09 \\(\\displaystyle V = \\begin{cases} \\dfrac{1}{4\\pi\\varepsilon_0} \\dfrac{Q}{R}, &amp; r \\leq R \\\\[6pt] \\dfrac{1}{4\\pi\\varepsilon_0} \\dfrac{Q}{r}, &amp; r &gt; R \\end{cases}\\) \u5747\u5300\u5e26\u7535\u7403\u4f53\uff08\u4f53\u7535\u8377\u5bc6\u5ea6 \\(\\rho\\)\uff09 \\(\\displaystyle V = \\begin{cases} \\dfrac{1}{4\\pi\\varepsilon_0} \\dfrac{Q}{2R} \\left(3 - \\dfrac{r^2}{R^2}\\right), &amp; r \\leq R \\\\[6pt] \\dfrac{1}{4\\pi\\varepsilon_0} \\dfrac{Q}{r}, &amp; r &gt; R \\end{cases}\\) \u65e0\u9650\u957f\u76f4\u5bfc\u7ebf\uff08\u7ebf\u5bc6\u5ea6 \\(\\lambda\\)\uff09 \u4e0d\u80fd\u53d6\u65e0\u7a77\u8fdc\u4e3a\u96f6\u52bf\u70b9\uff1b\u901a\u5e38\u53d6\u67d0\u70b9 \\(r_0\\) \u4e3a\u53c2\u8003\uff1a\\(\\displaystyle V(r) = -\\frac{\\lambda}{2\\pi\\varepsilon_0} \\ln\\left(\\frac{r}{r_0}\\right)\\)"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_4","title":"\u7535\u52bf\u80fd","text":"<p>\u5e26\u7535\u7cfb\u7edf\u7684\u603b\u9759\u7535\u80fd\u7531\u5404\u5e26\u7535\u4f53\u7684\u76f8\u4e92\u4f5c\u7528\u80fd(interaction energy)\u548c\u6bcf\u4e2a\u5e26\u7535\u4f53\u7684\u81ea\u80fd(self-energy)\u7ec4\u6210\u3002 \u628a\u6bcf\u4e2a\u5e26\u7535\u4f53\u770b\u4f5c\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u6574\u4f53\uff0c\u5c06\u5404\u5e26\u7535\u4f53\u4ece\u65e0\u9650\u8fdc\u79fb\u5230\u73b0\u5728\u4f4d\u7f6e\u6240\u4f5c\u7684\u529f\uff0c\u7b49\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u80fd\uff1b\u628a\u6bcf\u4e2a\u5e26\u7535\u4f53\u4e0a\u7684\u5404\u90e8\u5206\u7535\u8377\u4ece\u65e0\u9650\u5206\u6563\u7684\u72b6\u6001\u805a\u96c6\u8d77\u6765\u65f6\u6240\u4f5c\u7684\u529f\uff0c\u7b49\u4e8e\u8fd9\u4e2a\u5e26\u7535\u4f53\u7684\u81ea\u80fd\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_5","title":"\u70b9\u7535\u8377\u7ec4\u7684\u76f8\u4e92\u4f5c\u7528\u80fd","text":"<p>\u70b9\u7535\u8377 \\(q\\) \u5728\u7535\u52bf \\(V\\) \u4e2d\u7684\u76f8\u4e92\u4f5c\u7528\u80fd\uff1a</p> \\[ U = qV \\] <p>\u70b9\u7535\u8377\u7ec4\u7684\u76f8\u4e92\u4f5c\u7528\u80fd\uff1a</p> \\[ \\begin{align} U &amp;=\\frac{1}{8\\pi\\varepsilon_0}\\sum_{i=1}^n \\sum_{j=1}^n \\frac{q_i q_j}{r_{ij}} \\\\ &amp;= \\frac{1}{2} \\sum_i q_i V_i \\end{align} \\] <p>(2) \u4e2d \\(V_i\\) \u662f\u9664 \\(q_i\\) \u5916\u5176\u4ed6\u7535\u8377\u5728 \\(q_i\\) \u5904\u4ea7\u751f\u7684\u7535\u52bf\u3002</p> <p>\u793a\u4f8b \u7403\u58f3\u7535\u52bf\u80fd</p> <p>\u5747\u5300\u5e26\u7535\u7403\u58f3\uff0cq\uff0cR\uff0c\u6c42\u7535\u52bf\u80fd\u3002</p> <p>(\u8fd9\u91cc\u65b9\u6cd5\u4e00\u4e2d\u5c06\u7403\u58f3\u770b\u6210\u7535\u8377\u5143\u7684\u7ec4\u5408\uff0c\u6c42\u76f8\u4e92\u4f5c\u7528\u80fd\uff0c\u5b9e\u9645\u4e0a\u4e3a\u7403\u58f3\u7684\u81ea\u80fd\uff1b\u65b9\u6cd5\u4e8c\u76f4\u63a5\u6c42\u7403\u58f3\u81ea\u80fd\u3002)</p> <p>(1) \u6bcf\u4e2a\u70b9\u7535\u52bf\u80fd\u90fd\u662f\u7535\u8377\u5143\u4e58\u7403\u58f3\u8868\u9762\u7535\u52bf\uff0c\u603b\u7535\u52bf\u80fd\u4e3a\u79ef\u5206</p> \\[U=\\frac{1}{2}\\int_0^q \\frac{q}{4\\pi\\varepsilon_0 R}\\mathrm{d}q'=\\frac{q^2}{8\\pi\\varepsilon_0 R}\\] <p>(2) \u5df2\u7ecf\u5747\u5300\u5206\u5e03\u4e86\u7535\u8377 q'\uff0c\u518d\u4ece\u65e0\u7a77\u8fdc\u5904\u79fb\u6765 dq'\uff0c\u76f4\u5230\u7535\u8377\u4e3a q\u3002\u6bcf\u6b21\u505a\u7684\u529f\u4e3a dq'\u4e58\u8868\u9762\u7535\u52bf\uff0c\u7403\u58f3\u7535\u52bf\u80fd\u4e3a\u505a\u7684\u529f</p> \\[U=\\int_0^q \\frac{q'}{4\\pi\\varepsilon_0 R}\\mathrm{d}q'=\\frac{q^2}{8\\pi\\varepsilon_0 R}\\]"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_6","title":"\u7535\u8377\u8fde\u7eed\u5206\u5e03\u65f6\u7684\u9759\u7535\u80fd","text":"<p>\u4ee5\u4f53\u7535\u8377\u5206\u5e03\u4e3a\u4f8b\uff0c\u6211\u4eec\u628a\u8fde\u7eed\u7684\u5e26\u7535\u4f53\u5206\u5272\u6210\u8bb8\u591a\u4f53\u79ef\u5143 \\(\\Delta V_i\\)\uff0c\u8bbe\u7535\u8377\u7684\u4f53\u5bc6\u5ea6\u4e3a \\(\\rho_e\\)\uff0c\u5219\u6bcf\u5757\u4f53\u79ef\u5143\u5185\u7684\u7535\u91cf\u4e3a \\(\\Delta q_i = \\rho_e \\, \\Delta V_i\\)\uff0c\u4e8e\u662f\u6709</p> \\[ W_e = \\frac{1}{2} \\sum_i \\rho_e \\, \\Delta V_i \\, U_i, \\] <p>\u53d6 \\(\\Delta V_i \\to 0\\) \u7684\u6781\u9650\uff0c\u4e0a\u5f0f\u8fc7\u6e21\u5230\u4f53\u79ef\u5206\uff1a</p> \\[ W_e = \\frac{1}{2} \\iiint \\rho_e U \\, \\mathrm{d}V \\] <p>\uff08\u4e0a\u8ff0\u79ef\u5206\u610f\u5473\u7740\u5e26\u7535\u4f53\u5185\u7684\u7535\u8377\u5df2\u88ab\u65e0\u9650\u5206\u5272\uff0c\u56e0\u800c\u6211\u4eec\u5f97\u5230\u7684\u5df2\u4e0d\u4ec5\u662f\u76f8\u4e92\u4f5c\u7528\u80fd \\(W_{\\text{\u4e92}}\\)\uff0c\u800c\u662f\u5305\u62ec\u81ea\u80fd\u5728\u5185\u7684\u603b\u9759\u7535\u80fd \\(W_e\\) \u4e86\u3002\uff09</p> <p>\u540c\u7406\uff0c\u5bf9\u4e8e\u7ebf\u7535\u8377\u548c\u9762\u7535\u8377\u6c42\u9759\u7535\u80fd\uff1a</p> <ul> <li>\u7ebf\u7535\u8377\uff1a\\(W_e = \\frac{1}{2} \\int \\eta_e U \\, \\mathrm{d}l\\)</li> <li>\u9762\u7535\u8377\uff1a\\(W_e = \\frac{1}{2} \\iint \\sigma_e U \\, \\mathrm{d}S\\)</li> <li>\u4f53\u7535\u8377\uff1a\\(W_e = \\frac{1}{2} \\iiint \\rho_e U \\, \\mathrm{d}V\\)</li> </ul> <p>\u793a\u4f8b \u5747\u5300\u7403\u58f3\u548c\u7403\u4f53\u7684\u9759\u7535\u80fd</p> <p></p> <p>\u9759\u7535\u81ea\u80fd\u4e0e\u57fa\u672c\u7c92\u5b50\u7406\u8bba</p> <p>\u7531\u4e0a\u8ff0\u9759\u7535\u81ea\u80fd\u8ba1\u7b97\u53ef\u77e5\uff0c\u5982\u679c\u5c06\u7535\u5b50\u770b\u4f5c\u70b9\u7535\u8377\uff0c\u5219\u81ea\u80fd\u65e0\u7a77\u5927\uff0c\u9020\u6210\u201c\u53d1\u6563\u56f0\u96be\u201d\u3002\u5982\u679c\u770b\u4f5c\u534a\u5f84 \\(r_c\\) \u7684\u7403\uff0c\u5219\u7403\u58f3\u3001\u7403\u4f53\u6a21\u578b\u81ea\u80fd\u4e0d\u540c\uff0c\u5373\u81ea\u80fd\u4e0e\u7535\u8377\u5206\u5e03\u6709\u5173\uff0c\u4f46\u90fd\u662f \\(e^2/4\\pi\\varepsilon_0 r_c\\) \u6570\u91cf\u7ea7\u3002</p> <p>\u6839\u636e\u76f8\u5bf9\u8bba\u8d28\u80fd\u5173\u7cfb\uff0c\\(W=mc^2\\)\uff0c\u5047\u8bbe \\(W\\) \u5168\u90e8\u6765\u81ea\u9759\u7535\u81ea\u80fd\uff0c\u4e14\u53d6\u8868\u8fbe\u5f0f\u4e3a \\(e^2/4\\pi\\varepsilon_0 r_c\\)\uff0c\u5219\u53ef\u5bfc\u51fa\u7535\u5b50\u7684\u534a\u5f84 \\(r_c\\)\uff1a</p> \\[r_c=\\frac{e^2}{4\\pi\\varepsilon_0 mc^2}\\approx 2.8\\times 10^{-15}\\mathrm{m}\\] <p>\\(r_c\\) \u79f0\u4e3a\u7535\u5b50\u7684\u7ecf\u5178\u534a\u5f84\u3002</p> <p>\u73b0\u4ee3\u7684\u57fa\u672c\u7c92\u5b50\u7406\u8bba\u5927\u591a\u5efa\u7b51\u5728\u70b9\u6a21\u578b\u4e0a\uff0c\u901a\u5e38\u91c7\u7528\u70b9\u6a21\u578b\u4f1a\u5bfc\u81f4\u4e0a\u8ff0\u53d1\u6563\u56f0\u96be\uff1b\u4f46\u4e0d\u91c7\u7528\u70b9\u6a21\u578b\uff0c\u4ece\u76f8\u5bf9\u8bba\u548c\u91cf\u5b50\u7406\u8bba\u8003\u8651\uff0c\u53c8\u4f1a\u51fa\u73b0\u5176\u4ed6\u4e00\u7cfb\u5217\u95ee\u9898\u3002\u8fd9\u662f\u73b0\u4ee3\u57fa\u672c\u7c92\u5b50\u7406\u8bba\u4e2d\u5e7f\u6cdb\u5b58\u5728\u7684\u4e00\u4e2a\u57fa\u672c\u77db\u76fe\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_7","title":"\u5bfc\u4f53","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy02/#_8","title":"\u9759\u7535\u5e73\u8861","text":"<p>\u9759\u7535\u5e73\u8861\u65f6\uff0c\u5bfc\u4f53\u5185\u90e8\u4efb\u610f\u533a\u57df\u7535\u8377\u7684\u4ee3\u6570\u548c\u4e3a\u96f6\u3002\u7535\u8377\u53ea\u5206\u5e03\u5728\u5bfc\u4f53\u8868\u9762\u3002</p> <p>\u8868\u9762\u7535\u573a\u4e0e\u7535\u8377\u9762\u5bc6\u5ea6\u6210\u6b63\u6bd4\uff0c\u7535\u8377\u9762\u5bc6\u5ea6\u4e0e\u66f2\u7387\u534a\u5f84\u6210\u53cd\u6bd4\u3002</p> <p>\u7c97\u7565\u8bf4\u660e \u7535\u8377\u9762\u5bc6\u5ea6\u4e0e\u66f2\u7387\u534a\u5f84\u5012\u6570\u6210\u53cd\u6bd4</p> <p>\u4e24\u4e2a\u5e26\u7535\u7403\uff0c\u4e00\u4e2a\u4e3a q1, R1, \\(\\sigma_1\\)\uff0c\u53e6\u4e00\u4e2a\u4e3a q2, R2, \\(\\sigma_2\\)\u3002\u4e24\u8005\u76f8\u8ddd\u65e0\u7a77\u8fdc\uff08\u7535\u52bf\u4e92\u4e0d\u5f71\u54cd\uff09\u3002</p> <p>\u67d0\u4e00\u65f6\u523b\u7528\u5bfc\u7ebf\u5c06\u4e24\u4e2a\u7403\u8fde\u63a5\uff0c\u8fde\u63a5\u540e\u7535\u8377\u91cd\u65b0\u5206\u5e03\uff0c\u4f7f\u4e24\u8005\u7535\u52bf\u76f8\u7b49\uff0c\u5373</p> \\[\\frac{1}{4\\pi\\varepsilon_0}\\frac{q_1'}{R_1}=\\frac{1}{4\\pi\\varepsilon_0}\\frac{q_2'}{R_2}\\Rightarrow \\frac{q_1'}{q_2'}=\\frac{R_2}{R_1}\\] <p>\u82e5\u5bfc\u4f53\u6709\u7a7a\u8154\uff0c\u5219\u7a7a\u8154\u5185\u8868\u9762\u51c0\u7535\u8377\u7b49\u4e8e\u7a7a\u8154\u5185\u51c0\u7535\u8377\u3002</p> <p>\u51e0\u70b9\u6ce8\u610f\uff1a</p> <ul> <li>\u591a\u4e2a\u5bfc\u4f53\u7684\u7cfb\u7edf\uff0c\u6c42\u7535\u52bf\uff1a\u5148\u8ba1\u7b97\u7535\u573a\u5206\u5e03\uff0c\u518d\u79ef\u5206\u5f97\u5230\u7535\u52bf</li> <li>\u591a\u4e2a\u5bfc\u4f53\u3001\u591a\u4e2a\u672a\u77e5\u6570\uff1a\u4ee5\u201c\u5bfc\u4f53\u5185\u90e8\u7535\u573a\u4e3a\u96f6\u201d\u4e3a\u7ea6\u675f\u6761\u4ef6</li> </ul> <p>\u793a\u4f8b \u9762\u5bc6\u5ea6\u8ba1\u7b97</p> <p></p> <p>\u9759\u7535\u5c4f\u853d\uff1a</p> <ol> <li>\u7a7a\u8154\u5bfc\u4f53\u53ef\u5c4f\u853d\u5916\u90e8\u7535\u573a\u5bf9\u5185\u90e8\u7684\u5f71\u54cd</li> <li>\u63a5\u5730\u5bfc\u4f53\u53ef\u5c4f\u853d\u5185\u90e8\u7535\u573a\u5bf9\u5916\u90e8\u7684\u5f71\u54cd</li> </ol>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/","title":"\u7535\u5bb9\uff0c\u7535\u4ecb\u8d28","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1616 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_1","title":"\u7535\u5bb9","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_2","title":"\u7535\u5bb9\u5b9a\u4e49","text":"<p>\u7535\u5bb9 \\(C\\)\uff1a</p> \\[ C = \\frac{Q}{V} \\] <p>\u5176\u4e2d \\(Q\\) \u4e3a\u4e00\u4e2a\u6781\u677f\u7535\u8377\u91cf\uff0c\\(V\\) \u4e3a\u4e24\u6781\u677f\u95f4\u7535\u52bf\u5dee\u3002</p> <p>\u7535\u5bb9\u5668\uff1a\u82e5\u5bfc\u4f53 A\uff08\u5047\u8bbe\u5e26\u6b63\u7535\uff09\u65c1\u8fb9\u653e\u4e00\u4e2a\u51c0\u7535\u8377\u4e3a\u96f6\u7684\u5bfc\u4f53 B\uff0c\u7531\u4e8e\u611f\u5e94\uff0cB \u4e2d\u8d1f\u7535\u8377\u79bb A \u66f4\u8fd1\uff0cA \u7684\u7535\u52bf\u4e0b\u964d\uff0c\u800c A \u5e26\u7535\u91cf\u4e0d\u53d8\uff0c\u6545\u7535\u5bb9\u589e\u52a0\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_3","title":"\u5e38\u89c1\u7535\u5bb9","text":"\u7c7b\u578b \u7ed3\u6784\u793a\u610f \u7535\u5bb9\u8868\u8fbe\u5f0f \u8bf4\u660e \u5e73\u884c\u677f\u7535\u5bb9\u5668 \u4e24\u4e2a\u9762\u79ef\u4e3a (A)\u3001\u95f4\u8ddd\u4e3a (d) \u7684\u5e73\u884c\u91d1\u5c5e\u677f \\( C = \\dfrac{\\varepsilon_0 \\varepsilon_r A}{d} \\) \u6700\u5e38\u89c1\u7c7b\u578b\uff1b\u82e5\u4e3a\u771f\u7a7a\uff0c\\(\\varepsilon_r = 1\\) \u5706\u67f1\u5f62\u7535\u5bb9\u5668 \u4e24\u4e2a\u540c\u8f74\u5706\u67f1\u5bfc\u4f53\uff0c\u957f\u5ea6 (L)\uff0c\u534a\u5f84 (a,b) ((b&gt;a)) \\( C = \\dfrac{2\\pi \\varepsilon_0 \\varepsilon_r L}{\\ln(b/a)} \\) \u7528\u4e8e\u540c\u8f74\u7535\u7f06\u7ed3\u6784 \u7403\u5f62\u7535\u5bb9\u5668 \u4e24\u4e2a\u540c\u5fc3\u7403\u58f3\uff0c\u534a\u5f84 (a,b) ((b&gt;a)) \\( C = 4\\pi \\varepsilon_0 \\varepsilon_r \\dfrac{ab}{b-a} \\) \u5e38\u7528\u4e8e\u7406\u8bba\u8ba1\u7b97 \u5b64\u7acb\u5bfc\u4f53\u7403 \u534a\u5f84\u4e3a (R) \u7684\u5355\u72ec\u7403\u4f53 \\( C = 4\\pi \\varepsilon_0 R \\) \u53ef\u89c6\u4e3a\u5916\u7403\u58f3\u5728\u65e0\u7a77\u8fdc\u5904\u7684\u7403\u5f62\u7535\u5bb9\u5668 \u591a\u5c42\u5e73\u884c\u677f\u7535\u5bb9\u5668\u5e76\u8054 (n) \u4e2a\u6781\u677f\uff0c\u95f4\u8ddd\u5747\u4e3a (d)\uff0c\u9762\u79ef (A) \\( C\\_{\\text{\u603b}} = (n-1)\\dfrac{\\varepsilon_0 \\varepsilon_r A}{d} \\) \u76f8\u5f53\u4e8e (n-1) \u4e2a\u7535\u5bb9\u5e76\u8054 \u540c\u8f74\u7535\u7f06\uff08\u5355\u4f4d\u957f\u5ea6\uff09 \u5185\u5916\u5bfc\u4f53\u534a\u5f84 (a,b) \\( C' = \\dfrac{2\\pi \\varepsilon_0 \\varepsilon_r}{\\ln(b/a)} \\) \u7535\u7f06\u6bcf\u5355\u4f4d\u957f\u5ea6\u7684\u7535\u5bb9 \u5e73\u884c\u5bfc\u7ebf\uff08\u5355\u4f4d\u957f\u5ea6\uff09 \u5bfc\u7ebf\u534a\u5f84 \u00ae\uff0c\u95f4\u8ddd (D) \\( C' = \\dfrac{\\pi \\varepsilon_0 \\varepsilon_r}{\\ln(D/r)} \\) \u9ad8\u538b\u8f93\u7535\u7ebf\u5e38\u7528\u8fd1\u4f3c <p>\u5907\u6ce8 \u76f8\u5bf9\u4ecb\u7535\u5e38\u6570</p> <p>\\(\\varepsilon_r\\) \u662f\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570\uff08relative permittivity\uff0c\u4e5f\u5e38\u53eb dielectric constant\uff0c\u4e2d\u6587\uff1a\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570/\u4ecb\u7535\u5e38\u6570\u6bd4\uff09\u3002\u5b83\u8868\u793a\u67d0\u79cd\u4ecb\u8d28\u76f8\u5bf9\u4e8e\u771f\u7a7a\u80fd\u88ab\u7535\u6781\u5316\u7684\u201c\u5f3a\u5f31\u201d\u3002\u5f62\u5f0f\u4e0a\uff1a</p> \\[ \\varepsilon = \\varepsilon_r,\\varepsilon_0 \\] <p>\u5176\u4e2d \\(\\varepsilon\\) \u662f\u4ecb\u8d28\u7684\u4ecb\u7535\u5e38\u6570\uff0c\\(\\varepsilon_0\\) \u662f\u771f\u7a7a\u4ecb\u7535\u5e38\u6570\uff08\u7ea6 \\(8.854\\times10^{-12}\\ \\mathrm{F/m}\\)\uff09\u3002\\(\\varepsilon_r\\) \u65e0\u91cf\u7eb2\u3002</p> <p>\u7269\u7406\u4e0a\u8868\u793a\u4ec0\u4e48\uff1f</p> <ul> <li>\u5bfc\u4f53\u677f\u95f4\u653e\u5165\u4ecb\u8d28\uff0c\u4f1a\u88ab\u7535\u573a\u6781\u5316\uff08\u5206\u5b50/\u539f\u5b50\u7535\u5076\u6781\u77e9\u53d6\u5411\u6216\u4f4d\u79fb\uff09\uff0c\u5728\u6781\u677f\u8868\u9762\u4ea7\u751f\u675f\u7f1a\u7535\u8377\uff0c\u524a\u5f31\u677f\u95f4\u573a\u5f3a\uff0c\u7b49\u6548\u589e\u52a0\u7535\u5bb9\u3002</li> <li>\u653e\u5165\u4ecb\u8d28\u540e\u7684\u7535\u5bb9\uff1a\\(C=\\varepsilon A/d=\\varepsilon_r\\varepsilon_0 A/d\\)\u3002\u6240\u4ee5\u7535\u5bb9\u63d0\u9ad8\u4e86 \\(\\varepsilon_r\\) \u500d\u3002</li> </ul> <p>\u6ce8\uff1a</p> <ul> <li>\u5b64\u7acb\u5bfc\u4f53\u7403\u53ef\u89c6\u4e3a\u5916\u7403\u534a\u5f84 \\(b \\to \\infty\\) \u7684\u540c\u5fc3\u7403\u7535\u5bb9\u5668\u7279\u4f8b\u3002</li> <li>\u6240\u6709\u516c\u5f0f\u5747\u5047\u8bbe\u6781\u677f/\u5bfc\u4f53\u95f4\u4e3a\u771f\u7a7a\uff1b\u82e5\u586b\u5145\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570\u4e3a \\(\\kappa\\) \u7684\u7535\u4ecb\u8d28\uff0c\u53ea\u9700\u5c06 \\(\\varepsilon_0 \\to \\kappa\\varepsilon_0\\)\u3002</li> <li>\u540c\u8f74\u5706\u67f1\u516c\u5f0f\u9002\u7528\u4e8e\u201c\u957f\u5706\u7b52\u8fd1\u4f3c\u201d\uff0c\u8fb9\u7f18\u6548\u5e94\u5ffd\u7565\u3002</li> </ul>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_4","title":"\u7535\u5bb9\u5668\u4e32\u5e76\u8054","text":"<p>\u4e32\u8054\uff1a</p> \\[ \\frac{1}{C_{\\text{eq}}} = \\sum \\frac{1}{C_i} \\] <p>\u5e76\u8054\uff1a</p> \\[ C_{\\text{eq}} = \\sum C_i \\] <ul> <li>\u7535\u5bb9\u5668\u4e32\u8054\uff0c\u63d0\u9ad8\u8010\u538b\uff1b\u7535\u5bb9\u5668\u5e76\u8054\uff0c\u63d0\u9ad8\u7535\u5bb9\u3002</li> <li>\u4e32\u8054\u7535\u5bb9\u7684\u7535\u91cf\u76f8\u7b49\uff0c\u5e76\u8054\u7535\u5bb9\u7684\u7535\u538b\u76f8\u7b49\u3002</li> </ul> <p>\u5bf9\u4e8e\u4e24\u4e2a\u65e0\u9650\u5927\u7684\u5e73\u884c\u5e73\u9762\u5e26\u7535\u5bfc\u4f53\u677f\u6765\u8bf4\uff1a</p> <ul> <li>\u76f8\u5411\u7684\u4e24\u9762\u4e0a\uff0c\u7535\u8377\u7684\u9762\u5bc6\u5ea6\u603b\u662f\u5927\u5c0f\u76f8\u7b49\u800c\u7b26\u53f7\u76f8\u53cd</li> <li>\u76f8\u80cc\u7684\u4e24\u9762\u4e0a\uff0c\u7535\u8377\u7684\u9762\u5bc6\u5ea6\u603b\u662f\u5927\u5c0f\u76f8\u7b49\u800c\u7b26\u53f7\u76f8\u540c</li> </ul>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_5","title":"\u7535\u5bb9\u5668\u50a8\u80fd","text":"<p>\u7535\u5bb9\u5668\u4e2d\u50a8\u5b58\u7684\u7535\u52bf\u80fd\u4e3a\uff1a</p> \\[W=\\frac{1}{2}CU^2=\\frac{Q^2}{2C}\\] <p>esp. \u5e73\u884c\u677f\u7535\u5bb9\u5668\uff1a</p> \\[W=\\frac{1}{2}\\varepsilon_0 E^2 \\Omega\\] <p>\u5176\u4e2d \\(\\Omega\\) \u8868\u793a\u7535\u5bb9\u5668\u7684\u4f53\u79ef\u3002</p> <p>\u5b9a\u4e49\u80fd\u91cf\u5bc6\u5ea6 \\(u\\)\uff0c\u8868\u793a\u5355\u4f4d\u4f53\u79ef\u5185\u7535\u573a\u50a8\u5b58\u7684\u80fd\u91cf\uff0c\u5176\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[u=\\frac{U}{\\Omega}=\\frac{1}{2}\\varepsilon_0 E^2\\] <p>\u7531\u4e8e\u7535\u52bf\u80fd\u662f\u80fd\u91cf\u5bc6\u5ea6\u5bf9\u4f53\u79ef\u7684\u79ef\u5206\uff0c\u53ef\u4ee5\u901a\u8fc7 \\(u\\) \u8ba1\u7b97\u4efb\u610f\u7535\u573a\u5206\u5e03\u7684\u603b\u7535\u52bf\u80fd\u3002 \u6bcf\u4e00\u70b9\u7684\u7535\u573a -&gt; \u6bcf\u4e00\u70b9\u7684\u80fd\u91cf\u5bc6\u5ea6 -&gt; \u79ef\u5206\u5f97\u5230\u7535\u52bf\u80fd</p> <p>\u6216\u53ef\u7528\u80fd\u91cf\u5bc6\u5ea6\u8ba1\u7b97\u5916\u529b\u505a\u529f\uff1a\\(W=u\\cdot \\Delta\\Omega\\)\uff08\u6216\u79ef\u5206\uff09</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_6","title":"\u7535\u573a\u7684\u552f\u4e00\u6027\u5b9a\u7406","text":"<p>\u82e5\u5e72\u5bfc\u4f53\u5b58\u5728\u65f6\uff0c\u5728\u7ed9\u5b9a\u6761\u4ef6\u4e0b\uff0c\u7a7a\u95f4\u7684\u7535\u573a\u5206\u5e03\u548c\u7535\u8377\u5206\u5e03\u552f\u4e00\u786e\u5b9a\u3002</p> <ol> <li>\u7ed9\u5b9a\u6bcf\u4e2a\u5bfc\u4f53\u4e0a\u7684\u7535\u91cf</li> <li>\u7ed9\u5b9a\u6bcf\u4e2a\u5bfc\u4f53\u7684\u7535\u52bf</li> <li>\u7ed9\u5b9a\u4e00\u4e9b\u5bfc\u4f53\u4e0a\u7684\u7535\u91cf\uff0c\u4ee5\u53ca\u53e6\u5916\u5bfc\u4f53\u7684\u7535\u52bf</li> </ol> <p>\uff08\u7565\uff09</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_7","title":"\u7535\u4ecb\u8d28","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_8","title":"\u6781\u6027\u5206\u5b50","text":"<p>\u6750\u6599\u5206\u5b50\u5206\u4e3a\u65e0\u6781\u5206\u5b50\u548c\u6709\u6781\u5206\u5b50\u3002 \u65e0\u6781\u5206\u5b50\u6b63\u8d1f\u4e2d\u5fc3\u91cd\u5408\uff0c\u7535\u573a\u4e2d\u53d1\u751f\u4f4d\u79fb\u6781\u5316\uff08\u6b63\u8d1f\u4e2d\u5fc3\u5206\u79bb\uff0c\u4f53\u73b0\u51fa\u6781\u6027\uff09\uff1b\u6709\u6781\u5206\u5b50\u6b63\u8d1f\u4e2d\u5fc3\u4e0d\u91cd\u5408\uff0c\u65e0\u7535\u573a\u65f6\u5206\u5e03\u6742\u4e71\uff0c\u6709\u7535\u573a\u65f6\u53d1\u751f\u53d6\u5411\u6781\u5316\u3002</p> <p>\u6781\u5316\u5f3a\u5ea6 \\(\\vec{P}\\) \u8868\u793a\u7535\u5076\u6781\u77e9\u7684\u4f53\u5bc6\u5ea6\uff0c\u5b9a\u4e49\uff1a</p> \\[\\vec{p}=\\lim_{\\Delta V\\to 0}\\frac{\\iiint_{\\Delta V}\\mathrm{d}\\vec{p}}{\\Delta V}\\] <p>\u4e5f\u80fd\u5c06\u6781\u5316\u5f3a\u5ea6\u8868\u793a\u4e3a\u7535\u5076\u6781\u77e9\u4e58\u6570\u5bc6\u5ea6\uff1a</p> \\[\\vec{P}=n\\vec{p}\\]"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_9","title":"\u6781\u5316\u7535\u6548\u5e94","text":"<p>\u7edd\u7f18\u4f53\u53ea\u80fd\u524a\u5f31\u7535\u573a\uff0c\u4e0d\u80fd\u5b8c\u5168\u62b5\u6d88\u3002\u8bb0\u5916\u7535\u573a\u4e3a \\(E_f\\)\uff0c\u6781\u5316\u7535\u573a\u4e3a \\(E_p\\)\uff0c\u603b\u573a\u5f3a\u4e3a \\(E\\)\u3002</p> <p>\u5747\u5300\u3001\u5404\u5411\u540c\u6027\u7684\u4ecb\u8d28\u4e2d\uff0c\u6781\u5316\u5f3a\u5ea6\u4e0e\u6781\u5316\u7535\u573a\u6210\u6b63\u6bd4\uff1a</p> \\[\\vec{P}=\\varepsilon_0 \\chi\\vec{E}\\] <p>\u5176\u4e2d \\(\\chi\\) \u4e3a\u6781\u5316\u7387\uff0c\u548c\u6750\u6599\u672c\u8eab\u6709\u5173\u3002</p> <p>\u6781\u5316\u5f3a\u5ea6\u7684\u901a\u91cf\u7b49\u4e8e\u8868\u9762\u7535\u8377\u5bc6\u5ea6\u7684\u603b\u91cf\uff08\u5982\u679c\u8ba4\u4e3a\u7535\u8377\u53ea\u5206\u5e03\u5728\u8868\u9762\u4e0a\uff0c\u5185\u90e8\u6ca1\u6709\u81ea\u7531\u7535\u8377\uff0c\u5219\u53f3\u8fb9\u4e3a\u66f2\u9762\u5305\u56f4\u7684\u7535\u8377\uff09\uff1a</p> \\[ \\begin{align*} \\iint_S \\vec{P}\\mathrm{d}\\vec{S}&amp;=\\iint_S nq\\vec{l}\\cdot\\mathrm{d}\\vec{S} \\\\ &amp;=\\iint_S nq\\vec{l}\\mathrm{d}V \\\\ &amp;=-q_{in} \\end{align*} \\] <p>\u5fae\u5206\u5f62\u5f0f\uff1a\u6781\u5316\u5f3a\u5ea6\u7684\u6563\u5ea6\u662f\u8be5\u70b9\u7535\u8377\u4f53\u5bc6\u5ea6\u7684\u8d1f\u503c\uff1a</p> \\[\\nabla\\cdot\\vec{P}=-\\rho_P\\] <p>\u5982\u679c\u8ba4\u4e3a\u7535\u8377\u53ea\u5206\u5e03\u5728\u8868\u9762\u4e0a\uff0c\u5219\u4f53\u5bc6\u5ea6\u4e3a\u9762\u5bc6\u5ea6\uff0c\u4efb\u610f\u95ed\u5408\u66f2\u9762\u6781\u5316\u5f3a\u5ea6\u7684\u548c\u4e3a\u96f6\u3002\u4e14\u6709\u7535\u8377\u9762\u5bc6\u5ea6\u7b49\u4e8e\u6781\u5316\u5f3a\u5ea6\u7684\u6cd5\u5411\u5206\u91cf\uff1a</p> \\[\\sigma_P=\\vec{P}\\cdot\\hat{n}=P_n\\] <p>\u6781\u5316\u5f3a\u5ea6\u53ea\u5305\u542b\u8868\u9762\u7684\u6781\u5316\u7535\u8377\uff0c\u800c\u7535\u573a\u9ad8\u65af\u5b9a\u7406\u5305\u542b\u66f2\u9762\u5185\u6240\u6709\u7535\u8377\uff0c\u5373\u6781\u5316\u7535\u8377\u548c\u81ea\u7531\u7535\u8377\u4e4b\u548c\u3002\u4e24\u8005\u76f8\u52a0\u53ef\u5f97\u5230\u7edd\u7f18\u4f53\u5185\u90e8\u7684\u81ea\u7531\u7535\u8377\uff1a</p> \\[\\iint(\\varepsilon_0\\vec{E}+\\vec{P})\\cdot\\mathrm{d}\\vec{S}=\\sum q_{free}\\] <p>\u8bf4\u660e\u7814\u7a76 \\(\\varepsilon_0\\vec{E}+\\vec{P}\\) \u8fd9\u4e2a\u91cf\u53ef\u4ee5\u4e0d\u8003\u8651\u6781\u5316\u7535\u8377\u7684\u5f71\u54cd\u3002\u5c06\u5176\u5b9a\u4e49\u4e3a\u7535\u4f4d\u79fb \\(\\vec{D}\\)\uff0c\u5176\u4e2d\u7684 \\(E\\) \u4e3a\u603b\u7535\u573a\uff0c\u800c\u4e0d\u662f\u6781\u5316\u7535\u573a\u6216\u5916\u90e8\u7535\u573a\u3002\u7535\u4f4d\u79fb\u7684\u901a\u91cf\u7b49\u4e8e\u66f2\u9762\u5185\u81ea\u7531\u7535\u8377\u7684\u603b\u91cf\u3002</p> <p>\u7535\u4f4d\u79fb\u5e76\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u53ef\u4ee5\u53ea\u5c06\u5176\u7406\u89e3\u4e3a\u4e00\u79cd\u4ee3\u6570\u53d8\u5f62\u3002</p> <p>\u53c8\u56e0\u4e3a \\(\\vec{p}=\\varepsilon_0 \\chi\\vec{E}\\)\uff0c\u4ee3\u5165\u5f97\uff1a</p> \\[\\iint(\\varepsilon_0 (1+\\chi)\\vec{E})\\cdot\\mathrm{d}\\vec{S}=\\sum q_{f}\\] <p>\u5c06 \\(1+\\chi\\) \u5b9a\u4e49\u4e3a\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570 \\(\\varepsilon_r\\)\uff0c\u5c06 \\(\\varepsilon=\\varepsilon_0\\varepsilon_r\\) \u5b9a\u4e49\u4e3a\u7edd\u5bf9\u4ecb\u7535\u5e38\u6570\u3002</p> <p>\u6545\u7535\u4f4d\u79fb\u7b49\u4e8e\u7edd\u5bf9\u4ecb\u7535\u5e38\u6570\u4e58\u7535\u573a\u5f3a\u5ea6 \\(\\vec{D}=\\varepsilon_0\\varepsilon_r\\vec{E}\\)\u3002</p> <p>\u5b9e\u9645\u4e2d\uff0c\u7531\u4e8e\u8fb9\u7f18\u6548\u5e94\uff0c\u8fb9\u7f18\u7684\u7535\u573a\u6709\u5207\u5411\u7684\u5206\u91cf\uff0c\u4f7f\u5f97\u63d2\u5165\u7684\u7535\u4ecb\u8d28\u4f1a\u53d7\u5230\u5411\u91cc\u7684\u529b\u3002</p> <p>\u5bf9\u67d0\u4e9b\u6750\u6599\uff0c\u53bb\u6389\u5916\u573a\u540e\u7535\u5076\u6781\u77e9\u77e2\u91cf\u548c\u4e0d\u6062\u590d\u4e3a\u96f6\uff0c\u800c\u662f\u9700\u8981\u52a0\u53cd\u5411\u7684\u7535\u573a\u624d\u80fd\u53d8\u4e3a\u96f6\u3002\u8fd9\u79cd\u6750\u6599\u88ab\u6210\u4e3a\u94c1\u7535\u6750\u6599\u3002 \u793a\u4f8b\uff1a\u538b\u7535\u9676\u74f7\uff0c\u7528\u4e8e\u8d85\u58f0\u53d1\u751f\u5668\u3001\u626b\u63cf\u96a7\u9053\u663e\u5fae\u955c\u3001\u52a0\u6e7f\u5668\u7b49\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy03/#_10","title":"\u754c\u9762\u8fde\u7eed\u6027","text":"<p>\u5047\u8bbe\u6709\u4e24\u79cd\u76f8\u5bf9\u4ecb\u7535\u5e38\u6570\u4e0d\u540c\u7684\u7535\u4ecb\u8d28\uff0c\u8003\u8651\u754c\u9762\u90e8\u5206\u3002\u5047\u8bbe\u6cd5\u5411\u91cf\u4e3a\u4ece \\(\\varepsilon_{r1}\\) \u6307\u5411 \\(\\varepsilon_{r2}\\)\uff0c\u4e24\u79cd\u7535\u4ecb\u8d28\u5728\u754c\u9762\u4e0a\u7684\u7535\u8377\u9762\u5bc6\u5ea6\u5206\u522b\u4e3a \\(\\sigma_{p1}\\) \u548c \\(\\sigma_{p2}\\)\u3002</p> <p>\u603b\u7535\u8377\u9762\u5bc6\u5ea6\uff1a</p> \\[\\sigma_P=\\sigma_{p1}+\\sigma_{p2}\\] <p>\u5bf9\u6bcf\u79cd\u7535\u4ecb\u8d28\uff0c\u9762\u5bc6\u5ea6\u7b49\u4e8e\u6781\u5316\u5f3a\u5ea6\u7684\u6cd5\u5411\u5206\u91cf\uff1a</p> \\[ \\sigma_{p1}=P_{1n} \\\\ \\sigma_{p2}=P_{2n} \\] <p>\u6545\u6781\u5316\u5f3a\u5ea6\u6cd5\u5411\u5206\u91cf\u7684\u53d8\u5316\u7b49\u4e8e\u7535\u8377\u9762\u5bc6\u5ea6\uff1a</p> \\[\\sigma_P=P_{1n}-P_{2n}\\] <p>\u7535\u4ecb\u8d28\u7684\u9ad8\u65af\u5b9a\u7406\uff0c\u5f97\u5230\u7535\u4f4d\u79fb\u6cd5\u5411\u5206\u91cf\u7684\u53d8\u5316\u91cf\u7b49\u4e8e\u81ea\u7531\u7535\u8377\u9762\u5bc6\u5ea6\uff1a</p> \\[D_{2n}-D_{1n}=\\sigma_f\\] <p>\u5f53\u754c\u9762\u4e0a\u6ca1\u6709\u81ea\u7531\u7535\u8377\u65f6\uff0c\u7535\u4f4d\u79fb\u5728\u6cd5\u5411\u4e0a\u8fde\u7eed\u3002</p> <p>\u5229\u7528\u9759\u7535\u573a\u7684\u73af\u8def\u5b9a\u7406\uff0c\u5728\u754c\u9762\u5904\u53d6\u9ad8\u5ea6\u5f88\u5c0f\u7684\u73af\u8def\uff0c\u53ef\u5f97\u5230\u603b\u7535\u573a\u7684\u5207\u5411\u5206\u91cf\u76f8\u7b49\uff08\u5728\u4efb\u610f\u6761\u4ef6\u4e0b\u6210\u7acb\uff09\u3002</p> <p>\u7c7b\u4f3c\u5149\u5b66\u6298\u5c04\uff1a</p> \\[\\frac{\\tan\\theta_1}{\\tan\\theta_2}=\\frac{E_{1t}/E_{1n}}{E_{2t}/E_{2n}}=\\frac{E_{2n}}{E_{1n}}=\\frac{\\varepsilon_{r1}}{\\varepsilon_{r2}}\\]"},{"location":"CourseNotes/General%20Physics%20II/Phy04/","title":"\u6b27\u59c6\u5b9a\u5f8b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 274 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy04/#_1","title":"\u7535\u6d41","text":""},{"location":"CourseNotes/General%20Physics%20II/Phy04/#_2","title":"\u7535\u6d41\u5bc6\u5ea6","text":"<p>\u7535\u6d41\u5bc6\u5ea6 \\(\\vec{j}\\) \u7528\u4e8e\u63cf\u8ff0\u7a7a\u95f4\u4e2d\u4efb\u4e00\u70b9\u7684\u7535\u6d41\u5f3a\u5ea6\uff0c\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\vec{j}=\\frac{\\mathrm{d}i}{\\mathrm{d}S_{\\perp}}=\\frac{\\mathrm{d}q}{\\mathrm{d}t\\mathrm{d}S_{\\perp}}\\] <p>\u901a\u8fc7\u5c01\u95ed\u66f2\u9762\u7684\u7535\u6d41\u5bc6\u5ea6\u7684\u901a\u91cf\uff0c\u7b49\u4e8e\u66f2\u9762\u5185\u7535\u8377\u53d8\u5316\u91cf\u7684\u8d1f\u503c\uff08\u56e0\u4e3a\u6d41\u51fa\u7684\u901a\u91cf\u4e3a\u6b63\uff09\uff1a</p> \\[\\oint_S\\vec{j}\\mathrm{d}\\vec{S}=-\\frac{\\mathrm{d}q}{\\mathrm{d}t}\\] <p>\u5bf9\u4e8e\u7a33\u6052\u7535\u6d41\uff08stationary current\uff09\uff0c\u7535\u6d41\u5bc6\u5ea6\u7684\u901a\u91cf\u59cb\u7ec8\u4e3a\u96f6\u3002\u7535\u6d41\u5bc6\u5ea6\u7ebf\u4e3a\u95ed\u5408\u66f2\u7ebf\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy04/#_3","title":"\u6f02\u79fb\u901f\u5ea6","text":"<p>\u5916\u52a0\u7535\u573a\u540e\uff0c\u7535\u8377\u4ecd\u505a\u65e0\u89c4\u5219\u8fd0\u52a8\uff0c\u4f46\u76f8\u6bd4\u65e0\u7535\u573a\u65f6\u6709\u6cbf\u7535\u573a\u65b9\u5411\u7684\u504f\u79fb\u3002\u79f0\u504f\u79fb\u7684\u901f\u5ea6\u4e3a\u6f02\u79fb\u901f\u5ea6 \\(v_d\\)\uff0c\u7528\u6f02\u79fb\u901f\u5ea6\u8868\u793a\u7535\u8377\u8fd0\u52a8\u7684\u901f\u5ea6\u3002  </p> <p>\u7535\u6d41\u5f3a\u5ea6\u4e0e\u6f02\u79fb\u901f\u5ea6\u6210\u6b63\u6bd4\uff08n\u8868\u793a\u7535\u8377\u7684\u6570\u5bc6\u5ea6\uff09\uff1a</p> \\[ \\begin{align*} I&amp;=\\frac{\\Delta q}{\\Delta t}=\\frac{v_d\\Delta t\\Delta S\\cdot n\\cdot e}{\\Delta t}=env_d\\Delta S \\\\ j&amp;=\\frac{I}{\\Delta S}=env_d \\end{align*} \\] <p>\u82e5\u8f7d\u6d41\u5b50\u4e3a\u7535\u5b50\uff0c\u5219\u7535\u6d41\u5bc6\u5ea6\u4e0e\u6f02\u79fb\u901f\u5ea6\u65b9\u5411\u76f8\u53cd\uff0c\\(\\vec{j}=-en\\vec{v_d}\\)\u3002</p>"},{"location":"CourseNotes/General%20Physics%20II/Phy04/#_4","title":"\u6b27\u59c6\u5b9a\u5f8b\u7684\u5fae\u89c2\u5f62\u5f0f","text":"<p>\u8003\u8651\u4e00\u5c0f\u6bb5\u5706\u67f1\uff0c\u7535\u52bf\u5dee\u4e3a \\(\\mathrm{d}u\\)\uff0c\u622a\u9762\u79ef\u4e3a \\(\\mathrm{d}s\\)\u3002\u6839\u636e\u5b8f\u89c2\u6b27\u59c6\u5b9a\u5f8b\uff0c\u6709\uff1a</p> \\[\\mathrm{d}I=\\frac{\\mathrm{d}U}{\\mathrm{d}R}\\] <p>\u5c06\u7535\u6d41\u5bc6\u5ea6\u3001\u7535\u963b\u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\uff0c\u5f97\uff1a</p> \\[j\\mathrm{d}S=\\frac{1}{\\rho}\\frac{\\mathrm{d}U}{\\mathrm{d}l}\\mathrm{d}S\\] <p>\u5c06\u7535\u573a\u5f3a\u5ea6\u7b49\u4e8e\u7535\u52bf\u5dee\u6bd4\u957f\u5ea6\u4ee3\u5165\uff0c\u5f97\uff1a</p> \\[J=\\frac{1}{\\rho}E=\\sigma E\\] <p>\u5373\u6b27\u59c6\u5b9a\u5f8b\u7684\u5fae\u89c2\u5f62\u5f0f\u3002\u5176\u4e2d \\(\\rho\\) \u4e3a\u7535\u963b\u7387\uff0c\\(\\sigma\\) \u4e3a\u7535\u5bfc\u7387\u3002</p>"},{"location":"CourseNotes/Guohua/GHlec01/","title":"lec 01 \u4e2d\u56fd\u7ed8\u753b\u7684\u672c\u4f53\u6570\u636e","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 708 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_1","title":"\u4e2d\u56fd\u7ed8\u753b\u7684\u672c\u4f53\u6570\u636e","text":"<p>\u4e2d\u56fd\u7ed8\u753b\u7684\u672c\u4f53\u6570\u636e\u5305\u542b\u56db\u4e2a\u90e8\u5206\uff1a\u5168\u5c40\u3001\u753b\u5fc3\u3001\u9898\u8dcb\u3001\u5370\u7ae0</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_2","title":"\u5168\u5c40","text":"<p>\u4e3b\u9898\uff1a</p> <ul> <li>\u5c71\u6c34\u8302\u6797\uff1a\u5c71\u6c34\u6709\u53ef\u884c\u8005\uff0c\u6709\u53ef\u671b\u8005\uff0c\u6709\u53ef\u6e38\u8005\uff0c\u6709\u53ef\u5c45\u8005</li> <li>\u53e4\u4eba\u60c5\u6001\uff1a\u6709\u751f\u52a8\u4e4b\u53ef\u72b6\uff0c\u987b\u795e\u97f5\u800c\u540e\u5168</li> <li>\u82b1\u679c\u7fce\u79bd\uff1a\u4f53\u5236\u6e05\u6f88\uff0c\u4f5c\u7528\u758f\u901a\uff0c\u987e\u76fc\u76f8\u5e94</li> </ul> <p>\u6750\u8d28\uff1a</p> <ul> <li>\u7ee2\u672c\uff1a\u5149\u6ed1\u7ec6\u817b\uff0c\u9002\u5408\u5de5\u7b14</li> <li>\u7eb8\u672c\uff1a\u5438\u58a8\u6027\u5f3a\uff0c\u9002\u5408\u5199\u610f\u3001\u6e32\u67d3</li> </ul> <p>\u7ee2\u672c\u4ef7\u9ad8\uff0c\u7eb8\u672c\u4ef7\u5ec9\uff0c\u5b8b\u4ee3\u540e\u7eb8\u672c\u5360\u636e\u4e3b\u6d41\u3002</p> <p>\u7ee2\u672c\u548c\u7eb8\u672c\u7684\u6750\u8d28\u3001\u7f16\u5236\u65b9\u6cd5\u4e0d\u540c\uff0c\u7eb9\u7406\u4e0d\u540c\uff0c\u7b97\u6cd5\u5904\u7406\u4e0d\u540c\u3002 \u7ee2\u672c\u9700\u8981\u66f4\u9ad8\u7cbe\u5ea6\u8bbe\u5907\u91c7\u96c6\uff0c\u7eb8\u672c\u7531\u4e8e\u6e32\u67d3\u9700\u8981\u4f7f\u7528\u6ee4\u6ce2\u5668\uff08\u5206\u6790\u8fb9\u754c\u7b49\uff09</p> <p>\u5f62\u5236\uff1a</p> <ul> <li>\u7acb\u8f74\uff1a\u7ad6\u5e45\u7684\u6302\u8f74\uff0c\u53ef\u81ea\u7531\u5377\u8d77\u6536\u85cf\uff0c\u4fbf\u4e8e\u5355\u5e45\u4f5c\u54c1\u7684\u5c55\u793a</li> <li>\u6761\u5c4f\uff1a\u4e00\u7cfb\u5217\u5c3a\u5bf8\u76f8\u5f53\u7684\u7acb\u8f74</li> <li>\u4e2d\u5802\uff1a\u60ac\u6302\u4e8e\u5385\u5802\u90d1\u91cd\u7684\u5de8\u5e45\u7acb\u8f74</li> <li>\u6a2a\u5e45\uff1a\u60ac\u6302\u4e8e\u5ba4\u5185</li> <li>\u957f\u5377\uff1a\u753b\u5e45\u8f83\u957f\u7684\u6a2a\u5e45\uff0c\u9002\u5408\u5e73\u94fa\u6848\u5934\uff0c\u8868\u73b0\u5386\u53f2\u4eba\u7269\u3001\u98ce\u4fd7\u6545\u4e8b</li> <li>\u518c\u9875\uff1a\u901a\u5e38\u662f\u82e5\u5e72\u65b9\u5f62\u3001\u5706\u5f62\u3001\u6247\u9762\u7b49\u9875\u5b50\u96c6\u88c5\u6210\u518c</li> <li>\u6247\u9762\uff1a\u5305\u62ec\u6298\u6247\u548c\u56e2\u6247\uff0c\u4fbf\u4e8e\u968f\u8eab\u643a\u5e26</li> <li>\u955c\u5fc3\uff1a\u901a\u8fc7\u6258\u88f1\u540e\u7684\u753b\u5fc3</li> </ul> <p>\u6784\u56fe\uff1a</p> <p>\u51b3\u5b9a\u753b\u9762\u4e2d\u5404\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u548c\u7a7a\u95f4\u5173\u7cfb\u3002</p> <ul> <li>\u4e24\u7ebf\u6784\u56fe</li> <li>\u4e09\u7ebf\u6784\u56fe\uff1a\u4e3b\u7ebf\u3001\u8f85\u7ebf\u548c\u7834\u7ebf</li> <li>\u6298\u679d\u5f0f\u6784\u56fe\uff1a\u82b1\u9e1f</li> </ul> <p>\u4eba\u7269\u753b\uff1a</p> <ul> <li>\u4e2d\u5fc3\u6784\u56fe\uff1a\u8096\u50cf\u753b</li> <li>\u53d9\u4e8b\u6027\u6784\u56fe\uff1a\u97e9\u7199\u8f7d\u591c\u5bb4\u56fe</li> <li>\u957f\u5377\u5f0f\u6784\u56fe\uff1a\u7c2a\u82b1\u4ed5\u5973\u56fe</li> </ul> <p>\u8272\u5f69</p> <p>\u60c5\u611f\uff1a</p> <p>\u57fa\u4e8e AI \u7684\u60c5\u611f\u5206\u7c7b \u901a\u8fc7\u5bf9\u56fd\u753b\u4e2d\u4e0d\u540c\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u6355\u83b7\u8272\u5f69\u3001\u7ebf\u6761\u3001\u7b14\u89e6\u3001\u4eae\u5ea6\u7b49\u8ba1\u7b97\u60c5\u611f</p> <p>\u753b\u4f5c\u4f20\u8fbe\u7684\u6c14\u97f5\u3001\u7b14\u89e6\u7684\u8868\u73b0\uff0c\u7528\u4e8e\u8868\u8fbe\u56fd\u753b\u4e2d\u4e0d\u540c\u7684\u60c5\u611f</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_3","title":"\u753b\u5fc3","text":"<p>SAM \u7b97\u6cd5\uff1a\u56fe\u50cf\u5206\u5272\u548c\u8bc6\u522b</p> <p>\u7269\u8c61\u5c42 -&gt; \u610f\u8c61\u5c42 -&gt; \u6587\u5316\u5c42</p> <p>\u7b14\u6cd5\uff1a</p> <ul> <li>\u76b4\u6cd5\uff0c\u62ab\u9ebb\u76b4\u3001\u89e3\u7d22\u76b4</li> <li>\u63cf\u6cd5\uff1a\u9ad8\u53e4\u6e38\u4e1d\u63cf\uff0c\u7434\u5f26\u63cf</li> </ul> <p>\u76f8\u4f3c\u753b\u3001\u76f8\u4f3c\u753b\u4f5c\u8005</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_4","title":"\u5370\u7ae0","text":"<p>\u5370\u7ae0\u7c7b\u578b\uff1a\u5f15\u9996\u7ae0\u3001\u62e6\u8fb9\u7ae0\u3001\u62e6\u8170\u3001\u538b\u89d2\u7ae0\u3001\u59d3\u540d\u5370\u3001\u5b57\u53f7\u5370\u2026\u2026</p> <p>\u6839\u636e\u5370\u7ae0\u7684\u8bc6\u522b\u5224\u65ad\u753b\u4f5c\u7684\u6d41\u4f20\u8f68\u8ff9</p> <p>OCR \u8bc6\u522b\u5370\u6587\u7684\u4fe1\u606f</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_5","title":"\u6587\u5316\u9057\u4ea7\u5143\u6570\u636e\u6807\u51c6","text":"<p>\u6587\u5316\u9057\u4ea7\u6838\u5fc3\u5143\u7d20\u7684\u96c6\u5408</p> <p>MCP\uff1a\u4fe1\u606f\u4ea4\u6362\u6807\u51c6</p>"},{"location":"CourseNotes/Guohua/GHlec01/#_6","title":"\u4e2d\u56fd\u7ed8\u753b\u7684\u8ba1\u7b97\u5206\u6790\u4efb\u52a1","text":"<p>\u6570\u5b57\u5316 -&gt; \u6570\u636e\u5316 -&gt; \u6570\u667a\u5316</p> <p>\u6570\u5b57\u5316\uff1a</p> <p>\u65e0\u635f\u4fdd\u5b58\u3001\u5e7f\u6cdb\u4f20\u64ad \u9ad8\u7cbe\u5ea6\u626b\u63cf\u3001\u6444\u5f71\uff0c\u8272\u5f69\u8fd8\u539f</p> <p>\u6570\u636e\u5316\uff1a</p> <p>\u5bf9\u6570\u5b57\u5316\u540e\u7684\u4e2d\u56fd\u7ed8\u753b\u6570\u636e\u8fdb\u884c\u7ed3\u6784\u5316\u548c\u7ec4\u7ec7\uff0c\u63d0\u9ad8\u7ba1\u7406\u6548\u7387\u548c\u5229\u7528\u4ef7\u503c</p> <p>\u5206\u7c7b\u3001\u6574\u7406\u3001\u6807\u6ce8\uff0c\u8d4b\u4e88\u66f4\u660e\u786e\u7684\u6807\u7b7e\uff0c\u4fbf\u4e8e\u68c0\u7d22</p> <p>\u6570\u667a\u5316\uff1a</p> <p>\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u5bf9\u4e2d\u56fd\u7ed8\u753b\u6570\u636e\u8fdb\u884c\u6df1\u5ea6\u5206\u6790\uff0c\u6316\u6398\u5176\u5185\u5728\u4ef7\u503c\uff0c\u4e3a\u521b\u65b0\u5e94\u7528\u63d0\u4f9b\u53ef\u80fd</p> <p>\u6570\u5b57\u6566\u714c\u9879\u76ee</p>"},{"location":"CourseNotes/Guohua/GHlec02/","title":"GHlec02","text":""},{"location":"CourseNotes/Guohua/GHlec02/#_1","title":"\u4e2d\u56fd\u7ed8\u753b\u7684\u6570\u636e\u6807\u6ce8","text":"<p>\u6570\u636e\u6807\u6ce8\uff1a\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u7528\u4e8e\u8bad\u7ec3\u548c\u8bc4\u4f30\u7b97\u6cd5\u7684\u6570\u636e\uff0c\u83b7\u5f97\u9ad8\u7cbe\u5ea6\u6a21\u578b</p> <p>\u5e94\u7528\uff1a\u56fe\u50cf\u5206\u7c7b\u3001\u8bed\u4e49\u5206\u5272\u3001\u76ee\u6807\u68c0\u6d4b\u3001\u5b9e\u4f8b\u5206\u5272</p> <p>\u6807\u6ce8\u8fc7\u7a0b\uff1a\u5236\u5b9a\u6807\u51c6\u3001\u91c7\u96c6\u3001\u52a0\u5de5\u3001\u6807\u6ce8\u3001\u7ba1\u7406</p> <p>\u52a8\u6001\u5171\u8bc6\u7b97\u6cd5\uff1a</p> <p>\u4e0d\u540c\u7684\u540c\u4e49\u8bcd\u96c6\u5f62\u6210\u5171\u8bc6\u7684\u9608\u503c\u4e0d\u540c\u3002\u52a8\u6001\u786e\u5b9a\u5171\u8bc6\u7684\u9608\u503c\uff08e.g. \u4fe1\u606f\u5206\u6570\u9608\u503c\uff09</p>"},{"location":"CourseNotes/Probability/PRO01/","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 774 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Probability/PRO01/#_1","title":"\u4e8b\u4ef6\u6982\u5ff5","text":"<ul> <li>\u968f\u673a\u8bd5\u9a8c\uff1a\u5bf9\u968f\u673a\u73b0\u8c61\u7684\u8bd5\u9a8c</li> <li>\u6837\u672c\u7a7a\u95f4\uff1a\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u7684\u96c6\u5408</li> <li>\u6837\u672c\u70b9\uff1a\u4e00\u4e2a\u7ed3\u679c</li> <li>\u968f\u673a\u4e8b\u4ef6\uff1a\u6837\u672c\u7a7a\u95f4\u7684\u5b50\u96c6</li> <li>\u57fa\u672c\u4e8b\u4ef6\uff1a\u53ea\u6709\u4e00\u4e2a\u6837\u672c\u70b9\u7684\u968f\u673a\u4e8b\u4ef6</li> <li>\u4e8b\u4ef6\u53d1\u751f\uff1a\u7ed3\u679c\u5305\u542b\u4e8e\u4e8b\u4ef6</li> <li>\u5fc5\u7136\u4e8b\u4ef6\uff1a\u5168\u96c6</li> <li>\u4e0d\u53ef\u80fd\u4e8b\u4ef6\uff1a\u7a7a\u96c6</li> </ul>"},{"location":"CourseNotes/Probability/PRO01/#_2","title":"\u4e8b\u4ef6\u8fd0\u7b97","text":"<ul> <li>\u548c\u4e8b\u4ef6\uff1a\\(A\\cup B\\)</li> <li>\u79ef\u4e8b\u4ef6\uff1a\\(A\\cap B=AB\\)</li> <li>\u4e92\u4e0d\u76f8\u5bb9\uff08\u4e92\u65a5\uff09\uff1a\\(A\\cap B=\\varnothing\\)</li> <li>\u9006\u4e8b\u4ef6\uff08\u5bf9\u7acb\u4e8b\u4ef6\uff09\uff1a\\(A\\cup B=S\\,\\text{and}\\, A\\cap B=\\varnothing\\)</li> <li>\u5dee\u4e8b\u4ef6\uff1a\\(A-B\\)</li> </ul>"},{"location":"CourseNotes/Probability/PRO01/#_3","title":"\u9891\u7387\u4e0e\u6982\u7387\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u9891\u6570\uff1an \u6b21\u8bd5\u9a8c\u4e2d\u53d1\u751f\u6b21\u6570</li> <li>\u9891\u7387\uff1an \u6b21\u4e2d\u9891\u6570/n \u7684\u6bd4\u503c</li> <li>\u6982\u7387\uff1a\u9891\u7387\u7684\u6781\u9650</li> <li>\u53e4\u5178\u6982\u578b\uff1a\u6709\u9650\u4e2a\u6837\u672c\u70b9\uff0c\u7b49\u6982\u7387</li> <li>\u6761\u4ef6\u6982\u7387\uff1a\\(P(A|B)\\)\u8868\u793a B \u53d1\u751f\u7684\u6761\u4ef6\u4e0b A \u53d1\u751f\u7684\u6982\u7387</li> <li>\u5b8c\u5907\u4e8b\u4ef6\u7ec4\uff1a\u5212\u5206\u6574\u4e2a\u6837\u672c\u7a7a\u95f4\u7684\u4e00\u7ec4\u4e8b\u4ef6</li> <li>\u5148\u9a8c\u6982\u7387\uff1a\u8d1d\u53f6\u65af\u516c\u5f0f\u4e2d\\(P(B_j)\\)</li> <li>\u540e\u9a8c\u6982\u7387\uff1a\u8d1d\u53f6\u65af\u516c\u5f0f\u4e2d\\(P(B_j|A)\\)</li> <li>\u76f8\u4e92\u72ec\u7acb\uff1a\\(P(AB)=P(A)P(B)\\)\uff0c\u79ef\u4e8b\u4ef6\u7684\u6982\u7387\u7b49\u4e8e\u6982\u7387\u7684\u79ef</li> <li>\u72ec\u7acb\u8bd5\u9a8c\uff1a\u8bd5\u9a8c\u7ed3\u679c\u4e92\u4e0d\u5f71\u54cd</li> <li>\u91cd\u590d\u8bd5\u9a8c\uff1a\u76f8\u540c\u6761\u4ef6\u4e0b\u7684\u8bd5\u9a8c</li> </ul> <p>\u6982\u7387\u6709\u53ef\u5217\u53ef\u52a0\u6027\uff0c\u5982\u679c\u6709\u4e00\u5217\u4e24\u4e24\u4e92\u4e0d\u76f8\u5bb9\u7684\u4e8b\u4ef6 \\(A_1, A_2, A_3, \\dots\\)\uff0c\u90a3\u4e48</p> \\[ P\\Bigl(\\bigcup*{i=1}^{+\\infty} A_i\\Bigr) = \\sum*{i=1}^{+\\infty} P(A_i). \\] <p>\u5e76\u975e\u6240\u6709\u6982\u7387\u90fd\u80fd\u76f4\u63a5\u76f8\u52a0\uff0c\u6bd4\u5982\u7ebf\u6bb5\u4e0a\u5355\u70b9\u7684\u6982\u7387\u90fd\u4e3a 0\uff0c\u4f46\u6574\u4e2a\u533a\u95f4\u7684\u6982\u7387\u4e3a 1\u3002</p>"},{"location":"CourseNotes/Probability/PRO01/#_4","title":"\u57fa\u672c\u516c\u5f0f","text":"<p>\u5fb7\u6469\u6839\u5f8b\uff1a</p> \\[\\overline{\\bigcup_{j=1}^n A_j}=\\bigcap_{j=1}^n\\overline{A_j}\\] \\[\\overline{\\bigcap_{j=1}^n A_j}=\\bigcup_{j=1}^n\\overline{A_j}\\] <p>\u5dee\u96c6\u7684\u6982\u7387\u8fd0\u7b97\uff1a</p> \\[P(A-B)=P(A)-P(AB)\\] <p>\u5bb9\u65a5\u539f\u7406\uff1a</p> <p>\u81f3\u5c11\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f = \u6240\u6709\u5947\u6570\u4e2a\u4e8b\u4ef6\u53d1\u751f\u6982\u7387\u6c42\u548c - \u6240\u6709\u5076\u6570\u4e8b\u4ef6\u53d1\u751f\u6982\u7387\u6c42\u548c</p> \\[P\\left(\\bigcup_{j=1}^n A_j\\right)=\\sum_{j=1}^n P(A_j)-\\sum_{i&lt;j}P(A_i A_j)+\\sum_{i&lt;j&lt;k}P(A_i A_j A_k)-\\cdots +(-1)^{n-1}P(A_1 A_2\\cdots A_n)\\] <p>\u6761\u4ef6\u6982\u7387\u4e58\u6cd5\uff1a</p> \\[P(AB)=P(A)P(A|B)=P(B)P(B|A)\\] <p>\u5168\u6982\u7387\u516c\u5f0f\uff1a</p> <p>\\(B_1,B_2\\cdots B_n\\)\u662f\u6574\u4e2a\u6837\u672c\u7a7a\u95f4\u7684\u5212\u5206\uff0c\u5219</p> \\[P(A)=\\sum_{j=1}^n P(B_j)P(A|B_j)\\] <p>\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a</p> <p>\\(B_1,B_2\\cdots B_n\\)\u662f\u6574\u4e2a\u6837\u672c\u7a7a\u95f4\u7684\u5212\u5206\uff0c\u5219</p> \\[P(B_k|A)=\\frac{P(B_k A)}{P(A)}=\\frac{P(B_k)P(A|B_k)}{\\displaystyle \\sum_{j=1}^n P(B_j)P(A|B_j)}\\] <p>\u5176\u4ed6\uff1a</p> \\[P(AB\\cup BC\\cup AC)=P(AB)+P(BC)+P(AC)-2P(ABC)\\]"},{"location":"CourseNotes/Probability/PRO01/#_5","title":"\u51e0\u9053\u4f8b\u9898","text":"<p>\u4f8b\u9898 1 \u9519\u6392\u95ee\u9898\u6982\u7387</p> <p>n \u5361\u7247\u968f\u673a\u6392\u5217\uff0cA=\u201c\u81f3\u5c11\u4e00\u5f20\u5361\u7247\u7684\u5e8f\u53f7\u548c\u4f4d\u7f6e\u4e0d\u4e00\u6837\u201d\u3002\u5f53 n \u8d8b\u5411\u4e8e\u65e0\u7a77\u65f6\uff0c\u6c42 P\uff08A\uff09\uff1f</p> <p>\u8bbe Ai=\u201c\u7b2c i \u5f20\u5361\u7247\u7684\u5e8f\u53f7\u548c\u4f4d\u7f6e\u4e0d\u4e00\u6837\u201d</p> \\[ \\begin{align} P(A)&amp;=P(A_1\\cup\\cdots A_n) \\\\ &amp;=\\sum P(A_i)-\\sum P(A_i A_j)+\\cdots +(-1)^{n-1}P(A_1\\cdots A_n) \\\\ &amp;=C_n^1 P(A_1)-C_n^2 P(A_1 A_2)+\\cdots +(-1)^{n-1}P(A_1\\cdots A_n) \\end{align} \\] <p>\uff082\uff09\u662f\u56e0\u4e3a\u5bb9\u65a5\u539f\u7406\uff0c\uff083\uff09\u662f\u56e0\u4e3a\u6bcf\u4e2a Ai \u7b49\u4ef7\u3002</p> <p>\u53c8\u56e0\u4e3a</p> \\[C_n^k=\\frac{n!}{k!(n-k)!}\\, , \\, P(A_1\\cdots A_k)=\\frac{(n-k)!}{n!}\\] <p>\u6709</p> \\[P(A)=1-\\frac{1}{2!}+\\frac{1}{3!}-\\cdots\\,\\to 1-\\frac{1}{e}\\] <p>\u4f8b\u9898 2 \u53d6\u724c\u95ee\u9898</p> <p>52 \u5f20\u724c\u53d6 13 \u5f20</p> <p>\uff081\uff09A=\u201c\u6070\u597d 2 \u5f20\u7ea2\u6843\uff0c3 \u5f20\u65b9\u5757\u201d</p> <p>\u6bcf\u79cd\u53d6\u724c\u7ed3\u679c\u7b49\u53ef\u80fd\u3002</p> \\[P(A)=\\frac{C_{13}^2 C_{13}^3 C_{26}^8}{C_{52}^{13}}\\] <p>\uff082\uff09B=\u201c\u53d6\u7684 13 \u5f20\u4e2d\u81f3\u5c11 2 \u5f20\u7ea2\u6843\u201d</p> <p>\u4ece\u53cd\u9762\u6c42\u89e3\uff0c\u53cd\u9762\u4e3a 0 \u5f20\u30011 \u5f20\u7ea2\u6843\u3002</p> \\[P(B)=1-\\frac{C_{13}^0 C_{39}^{13}}{C_{52}^{13}}-\\frac{C_{13}^1 C_{39}^{12}}{C_{52}^{13}}\\] <p>\u53e6\u4e00\u79cd\u60f3\u6cd5\uff1f</p> <p>\u5148\u4fdd\u8bc1 2 \u5f20\u7ea2\u6843\uff0c\u5176\u4f59 11 \u5f20\u4ece\u53d6\u5b8c\u4e24\u5f20\u5269\u4e0b\u7684 51 \u5f20\u4e2d\u4efb\u610f\u53d6\uff1f</p> \\[P(B)=\\frac{C_{13}^2 C_{51}^{11}}{C_{52}^{13}}\\] <p>\u4e3a\u4ec0\u4e48\u4e0d\u5bf9\uff1a\u76f8\u540c\u7684\u7ea2\u6843\u65b9\u6848\uff0c\u6bcf\u6b21\u9009\u53d6\u7684\u201c\u56fa\u5b9a\u7684\u201d\u7ea2\u6843\u4e0d\u540c\uff0c\u5bfc\u81f4\u91cd\u590d\u8ba1\u6570\u3002</p> <p>\u4f8b\u9898 3 \u7528\u6982\u7387\u5224\u65ad\u6761\u4ef6</p> <p>\u67d0\u63a5\u5f85\u7ad9 12 \u6b21\u63a5\u5f85\u90fd\u5728\u5468\u4e8c\u6216\u5468\u56db\uff0c\u80fd\u4e0d\u80fd\u8ba4\u4e3a\u63a5\u5f85\u65f6\u95f4\u6709\u89c4\u5b9a\uff1f</p> <p>\u5047\u8bbe\u6bcf\u5929\u7b49\u6982\u7387\uff0c\u5373\u63a5\u5f85\u65f6\u95f4\u6ca1\u6709\u89c4\u5b9a\uff0c\u4e0a\u8ff0\u53d1\u751f\u7684\u6982\u7387\u4e3a\\((\\frac{2}{7)^{12}}\\)\uff0c\u4e3a\u5c0f\u6982\u7387\u4e8b\u4ef6\u3002</p> <p>\u5c0f\u6982\u7387\u4e8b\u4ef6\u53d1\u751f\uff0c\u8bf4\u660e\u5047\u8bbe\u9519\u8bef\u3002\u63a5\u5f85\u65f6\u95f4\u6709\u89c4\u5b9a\u3002</p> <p>\u4f8b\u9898 4 \u62bd\u7b7e\u95ee\u9898</p> <p>a \u767d\u7403 b \u7ea2\u7403\uff0ca+b \u4e2a\u4eba\uff0c\u4e0d\u653e\u56de\u53d6\u7403\uff0c\u6c42\u7b2c k \u4e2a\u4eba\u53d6\u5230\u7ea2\u7403\u7684\u6982\u7387\uff1f</p> <p>\u5c06\u53d6\u7403\u770b\u4f5c\u6240\u6709\u7403\u5206\u914d\u5230 a+b \u4e2a\u7a7a\u4f4d\u4e0a\uff0c\u6bcf\u79cd\u5206\u914d\u65b9\u5f0f\u7b49\u53ef\u80fd\uff0c\u603b\u7684\u53ef\u80fd\u5206\u914d\u65b9\u5f0f\u4e3a\\((a+b)!\\)</p> <p>\u5bf9\u4e8e\u7b2c k \u4e2a\u4eba\uff0c\u7b2c k \u4f4d\u4e00\u5b9a\u4e3a\u7ea2\uff0c\u6709\\(a\\)\u79cd\u53ef\u80fd\uff1b\u5269\u4f59 k-1 \u4f4d\u968f\u673a\uff0c\u6709\\((a+b-1)!\\)\u79cd\u53ef\u80fd\u3002</p> \\[P(A_k)=\\frac{a\\cdot(a+b-1)\\cdots 1}{(a+b-1)\\cdots 1}=\\frac{a\\cdot(a+b-1)!}{(a+b)!}=\\frac{a}{a+b}\\] <p>\u62bd\u7b7e\u95ee\u9898\u4e2d\uff0c\u62bd\u5230\u7684\u6982\u7387\u4e0e\u62bd\u7b7e\u6b21\u5e8f\u65e0\u5173\u3002</p> <p>\u51e0\u9053\u4f8b\u9898</p> <p></p>"},{"location":"CourseNotes/Probability/PRO02/","title":"\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1360 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/Probability/PRO02/#_1","title":"\u968f\u673a\u53d8\u91cf","text":"<p>\u968f\u673a\u53d8\u91cf\u5206\u4e3a\u79bb\u6563\u578b\u548c\u8fde\u7eed\u578b\u3002</p> <p>\u8bbe \\(X\\) \u4e3a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c</p> \\[P\\{X=x_k\\}=p_k\\] <p>\u79f0\u4e3a \\(X\\) \u7684\u6982\u7387\u5206\u5e03\u7387\u6216\u6982\u7387\u5206\u5e03\u5f8b\u6216\u6982\u7387\u5206\u5e03\u5217\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_2","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03","text":""},{"location":"CourseNotes/Probability/PRO02/#0-1","title":"0-1 \u5206\u5e03","text":"<p>X \u53ea\u6709 0 \u548c 1 \u4e24\u79cd\u53d6\u503c\uff0c\u4e14 1 \u7684\u6982\u7387\u4e3a p\uff0c\u79f0 X \u670d\u4ece\u53c2\u6570\u4e3a p \u7684 0-1 \u5206\u5e03\uff0c\u4e5f\u79f0\u4e24\u70b9\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X\\sim 0-1(p)\\) \u6216 \\(X\\sim B(1,p)\\)\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_3","title":"\u4e8c\u9879\u5206\u5e03","text":"<p>\u4e8c\u9879\u5206\u5e03\u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a\uff1a</p> \\[P\\{X=k\\}=C_n^k p^k (1-p)^{n-k},\\, k=1,2,\\cdots ,n.\\] <p>n \u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c\u4e2d\uff0c\u6bcf\u6b21 A \u53d1\u751f\u7684\u6982\u7387\u4e3a p\u3002\u8bbe X \u4e3a n \u6b21\u8bd5\u9a8c\u4e2d A \u53d1\u751f\u7684\u6b21\u6570\uff0c\u5219\u79f0 X \u670d\u4ece\u7ed9\u53c2\u6570\u4e3a (n,p) \u7684\u4e8c\u9879\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X\\sim B(n,p)\\)\u3002</p> <p>\u4e8c\u9879\u5206\u5e03\u7684\u6761\u4ef6\uff1a\u72ec\u7acb\u8bd5\u9a8c\uff0c\u5373\u5404\u6b21\u8bd5\u9a8c\u4e0d\u76f8\u4e92\u5f71\u54cd\u3002 \u4ece\u5f88\u5927\u6570\u91cf\u7684\u6837\u672c\u4e2d\u53d6\u6837\uff0c\u53ef\u8ba4\u4e3a\u662f\u72ec\u7acb\u8bd5\u9a8c\u3002</p> <p>\u6982\u7387\u76f8\u540c\u3001\u8bd5\u9a8c\u6b21\u6570\u589e\u5927\uff0c\u6700\u53ef\u80fd\u7684\u51fa\u73b0\u6b21\u6570\u589e\u5927\u3001\u6700\u5927\u6982\u7387\u51cf\u5c0f\u3002</p> <p>\u8bd5\u9a8c\u6b21\u6570\u5f88\u5927\u65f6\uff0c\u53ef\u5c06\u4e8c\u9879\u5206\u5e03\u89c6\u4e3a\u6b63\u6001\u5206\u5e03\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_4","title":"\u6cca\u677e\u5206\u5e03","text":"<p>\u6cca\u677e\u5206\u5e03\u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a\uff1a</p> \\[P\\{X=k\\}=\\frac{e^{-\\lambda}\\lambda ^k}{k!},\\, k=1,2,\\cdots ,n.\\] <p>\u79f0\u4e3a X \u670d\u4ece\u53c2\u6570\u4e3a \\(\\lambda\\) \u7684\u6cca\u677e\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X\\sim P(\\lambda)\\)\u3002</p> <p>\u5f53 n \u8db3\u591f\u5927\u3001p \u5145\u5206\u5c0f\u65f6\uff0c\u4e14 np \u4fdd\u6301\u9002\u5f53\u5927\u5c0f\u65f6\uff0c\u53c2\u6570\u4e3a (n,p) \u7684\u4e8c\u9879\u5206\u5e03\u53ef\u8fd1\u4f3c\u4e3a\u6cca\u677e\u5206\u5e03\u3002</p> <p>\u4e8c\u9879\u5206\u5e03\u8fd1\u4f3c\u4e3a\u6cca\u677e\u5206\u5e03</p> <p>\u8bbe \\(X\\sim B(n,p)\\)\uff0c\u4e14 \\(np=\\lambda\\)\uff0c\u5219</p> \\[ \\begin{align*} P(X = k) &amp;= \\binom{n}{k} p^k (1 - p)^{n - k} \\\\ &amp;= \\frac{n(n-1)\\cdots(n - k + 1)}{k!}\\cdot \\left(\\frac{\\lambda}{n}\\right)^k \\left(1 - \\frac{\\lambda}{n}\\right)^{n - k} \\\\ &amp;= \\frac{n(n-1)\\cdots(n - k + 1)}{n^k} \\cdot \\frac{\\lambda^k}{k!} \\cdot \\left(1 - \\frac{\\lambda}{n}\\right)^n \\cdot \\left(1 - \\frac{\\lambda}{n}\\right)^{-k} \\end{align*} \\] <p>\u5f53 \\(n \\to \\infty\\) \u4e14 \\(p \\to 0\\) \u65f6\uff0c</p> \\[\\frac{n(n-1)\\cdots(n - k + 1)}{n^k}\\approx 1,\\,\\left(1 - \\frac{\\lambda}{n}\\right)^n\\approx e^{-\\lambda},\\, \\left(1 - \\frac{\\lambda}{n}\\right)^{k}\\approx 1\\] <p>\u6545\u6709</p> \\[P\\{X=k\\}=\\frac{e^{-\\lambda}\\lambda ^k}{k!},\\, k=1,2,\\cdots ,n.\\] <p>\u6cca\u677e\u5206\u5e03\u7684\u573a\u666f\uff1a</p> <ul> <li>\u4e00\u5927\u6279\u6837\u672c\u4e2d\u7684\u53d1\u751f\u6b21\u6570</li> <li>\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u53d1\u751f\u6b21\u6570</li> </ul>"},{"location":"CourseNotes/Probability/PRO02/#_5","title":"\u8d85\u51e0\u4f55\u5206\u5e03","text":"<p>\u8d85\u51e0\u4f55\u5206\u5e03\u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a\uff1a</p> \\[ P\\{X = k\\} = \\frac{C_M^k \\, C_{N-M}^{\\,n-k}}{C_N^n}, \\quad k = \\max(0, n - (N - M)), \\dotsc, \\min(n, M). \\] <p>\u8bbe\u6709 \\(N\\) \u4e2a\u7269\u54c1\uff0c\u5176\u4e2d \\(M\\) \u4e2a\u4e3a\u201c\u6210\u529f\u201d\u7c7b\uff08\u5982\u6b21\u54c1\u3001\u7ea2\u7403\u7b49\uff09\uff0c\\(N - M\\) \u4e2a\u4e3a\u201c\u5931\u8d25\u201d\u7c7b\u3002 \u4ece\u4e2d\u4e0d\u653e\u56de\u5730\u968f\u673a\u62bd\u53d6 \\(n\\) \u4e2a\u7269\u54c1\uff0c\u8bbe \\(X\\) \u4e3a\u62bd\u5230\u7684\u201c\u6210\u529f\u201d\u7c7b\u7269\u54c1\u7684\u4e2a\u6570\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\((N, M, n)\\) \u7684\u8d85\u51e0\u4f55\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X \\sim H(N, M, n)\\)\u3002</p> <p>\u793a\u4f8b \u8d85\u51e0\u4f55\u5206\u5e03</p> <p>\u888b\u5b50\u4e2d\u6709 N \u4e2a\u7403\uff0ca \u4e2a\u767d\u7403 b \u4e2a\u7ea2\u7403 (a+b=N)\uff0c\u4ece\u4e2d\u65e0\u653e\u56de\u53d6 n \u4e2a\u7403\uff0c\u8bbe\u6bcf\u6b21\u53d6\u5230\u5404\u79cd\u7403\u7684\u6982\u7387\u76f8\u7b49\u3002\u82e5\u5176\u4e2d\u6709 X \u4e2a\u767d\u7403\uff0c\u6c42 X \u7684\u5206\u5e03\u5217\u3002</p> <p>\u8d85\u51e0\u4f55\u5206\u5e03\u7684\u6761\u4ef6\uff1a\u6709\u9650\u603b\u4f53\u3001\u4e0d\u653e\u56de\u62bd\u6837\u3002 \u4e0e\u4e8c\u9879\u5206\u5e03\u4e0d\u540c\uff0c\u8d85\u51e0\u4f55\u5206\u5e03\u7684\u5404\u6b21\u62bd\u53d6\u4e0d\u72ec\u7acb\uff0c\u56e0\u4e3a\u6bcf\u6b21\u62bd\u53d6\u4f1a\u6539\u53d8\u603b\u4f53\u7ec4\u6210\u3002</p> <p>\u5f53\u603b\u4f53\u5bb9\u91cf \\(N\\) \u5f88\u5927\uff0c\u800c\u62bd\u6837\u6570\u91cf \\(n\\) \u76f8\u5bf9\u8f83\u5c0f\u65f6\uff08\u901a\u5e38 \\(n/N \\leq 0.05\\)\uff09\uff0c\u4e0d\u653e\u56de\u62bd\u6837\u5bf9\u6982\u7387\u5f71\u54cd\u5fae\u5f31\uff0c\u6b64\u65f6\u8d85\u51e0\u4f55\u5206\u5e03\u53ef\u7528\u4e8c\u9879\u5206\u5e03\u8fd1\u4f3c\uff0c\u5373</p> \\[ X \\sim H(N, M, n) \\approx B\\!\\left(n, \\, p = \\frac{M}{N}\\right). \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03\u7684\u671f\u671b\u4e0e\u65b9\u5dee\u5206\u522b\u4e3a\uff1a</p> \\[ \\mathbb{E}[X] = n \\frac{M}{N}, \\qquad \\mathrm{Var}(X) = n \\frac{M}{N} \\left(1 - \\frac{M}{N}\\right) \\frac{N - n}{N - 1}. \\] <p>\u5176\u4e2d \\(\\frac{N - n}{N - 1}\\) \u79f0\u4e3a\u6709\u9650\u603b\u4f53\u6821\u6b63\u56e0\u5b50\uff0c\u4f53\u73b0\u4e86\u4e0d\u653e\u56de\u62bd\u6837\u5bf9\u65b9\u5dee\u7684\u51cf\u5c0f\u4f5c\u7528\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_6","title":"\u51e0\u4f55\u5206\u5e03","text":"<p>\u51e0\u4f55\u5206\u5e03\u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a\uff1a</p> \\[ P\\{X = k\\} = (1 - p)^{k - 1} p, \\quad k = 1, 2, 3, \\dotsc \\] <p>\u8fdb\u884c\u4e00\u7cfb\u5217\u72ec\u7acb\u91cd\u590d\u7684\u4f2f\u52aa\u5229\u8bd5\u9a8c\uff0c\u6bcf\u6b21\u8bd5\u9a8c\u4e2d\u4e8b\u4ef6 \\(A\\)\uff08\u201c\u6210\u529f\u201d\uff09\u53d1\u751f\u7684\u6982\u7387\u4e3a \\(p\\)\uff08\\(0 &lt; p \\leq 1\\)\uff09\u3002 \u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u8868\u793a\u9996\u6b21\u51fa\u73b0\u6210\u529f\u6240\u9700\u7684\u8bd5\u9a8c\u6b21\u6570\uff0c\u5219\u79f0 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(p\\) \u7684\u51e0\u4f55\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X \\sim G(p)\\)\u3002</p> <p>\u793a\u4f8b \u51e0\u4f55\u5206\u5e03</p> <p>\u72ec\u7acb\u91cd\u590d\u8bd5\u9a8c\u4e2d\u6bcf\u6b21\u8bd5\u9a8c\u6709\u4e24\u4e2a\u7ed3\u679c\uff1a\\(A, \\overline{A}\\)\uff0c\u4e14\u6bcf\u6b21\u8bd5\u9a8c\u4e2d A \u51fa\u73b0\u7684\u6982\u7387\u4e0d\u53d8\uff0c\u8bb0\u4e3a p\u3002\u8bbe\u76f4\u81f3 A \u9996\u6b21\u53d1\u751f\u65f6\u6240\u9700\u7684\u8bd5\u9a8c\u6b21\u6570\u4e3a X\uff0c\u6c42 X \u7684\u5206\u5e03\u5217\u3002</p> <p>\u51e0\u4f55\u5206\u5e03\u7684\u6761\u4ef6\uff1a</p> <ul> <li>\u5404\u6b21\u8bd5\u9a8c\u76f8\u4e92\u72ec\u7acb\uff1b</li> <li>\u6bcf\u6b21\u8bd5\u9a8c\u53ea\u6709\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u8d25\u201d\u4e24\u79cd\u7ed3\u679c\uff1b</li> <li>\u6210\u529f\u6982\u7387 \\(p\\) \u6052\u5b9a\u4e0d\u53d8\uff1b</li> <li>\u5173\u6ce8\u7684\u662f\u7b2c\u4e00\u6b21\u6210\u529f\u53d1\u751f\u5728\u7b2c\u51e0\u6b21\u8bd5\u9a8c\u3002</li> </ul> <p>\u51e0\u4f55\u5206\u5e03\u5177\u6709\u65e0\u8bb0\u5fc6\u6027\uff08memoryless property\uff09\uff1a</p> \\[ P(X &gt; m + n \\mid X &gt; m) = P(X &gt; n), \\quad \\forall\\, m, n \\in \\mathbb{N}. \\] <p>\u8fd9\u610f\u5473\u7740\uff0c\u65e0\u8bba\u5df2\u7ecf\u5931\u8d25\u4e86\u591a\u5c11\u6b21\uff0c\u672a\u6765\u4ecd\u9700\u7b49\u5f85\u7684\u8bd5\u9a8c\u6b21\u6570\u7684\u5206\u5e03\u4e0e\u521d\u59cb\u60c5\u51b5\u76f8\u540c\u3002</p> <p>\u51e0\u4f55\u5206\u5e03\u7684\u671f\u671b\u4e0e\u65b9\u5dee\u5206\u522b\u4e3a\uff1a</p> \\[ \\mathbb{E}[X] = \\frac{1}{p}, \\qquad \\mathrm{Var}(X) = \\frac{1 - p}{p^2}. \\]"},{"location":"CourseNotes/Probability/PRO02/#_7","title":"\u5e15\u65af\u5361\u5206\u5e03\uff08\u8d1f\u4e8c\u9879\u5206\u5e03\uff09","text":"<p>\u5e15\u65af\u5361\u5206\u5e03\u53c8\u79f0\u4e3a\u8d1f\u4e8c\u9879\u5206\u5e03\uff08Negative Binomial Distribution\uff09\uff0c\u662f\u51e0\u4f55\u5206\u5e03\u7684\u63a8\u5e7f\u5f62\u5f0f\u3002</p> <p>\u5e15\u65af\u5361\u5206\u5e03\u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a\uff1a</p> \\[ P\\{X = k\\} = \\binom{k - 1}{r - 1} p^r (1 - p)^{k - r}, \\quad k = r, r + 1, r + 2, \\dotsc \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(p\\) \u4e3a\u6bcf\u6b21\u8bd5\u9a8c\u6210\u529f\u7684\u6982\u7387\uff08\\(0 &lt; p \\le 1\\)\uff09\uff1b</li> <li>\\(r\\) \u4e3a\u5e0c\u671b\u6210\u529f\u7684\u603b\u6b21\u6570\uff08\u6b63\u6574\u6570\uff09\uff1b</li> <li>\\(X\\) \u8868\u793a\u83b7\u5f97\u7b2c \\(r\\) \u6b21\u6210\u529f\u6240\u9700\u7684\u8bd5\u9a8c\u6b21\u6570\u3002</li> </ul> <p>\u8fdb\u884c\u4e00\u7cfb\u5217\u76f8\u4e92\u72ec\u7acb\u4e14\u6210\u529f\u6982\u7387\u4e3a \\(p\\) \u7684\u4f2f\u52aa\u5229\u8bd5\u9a8c\uff0c\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u8868\u793a\u7b2c \\(r\\) \u6b21\u6210\u529f\u53d1\u751f\u65f6\u7684\u8bd5\u9a8c\u6b21\u6570\uff0c\u5219 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\((r, p)\\) \u7684\u5e15\u65af\u5361\u5206\u5e03\uff0c\u8bb0\u4f5c\\(X \\sim \\mathrm{Pascal}(r, p)\\) \u6216 \\(X \\sim \\mathrm{NB}(r, p)\\)\u3002</p> <p>\u793a\u4f8b \u5e15\u65af\u5361\u5206\u5e03</p> <p>\u72ec\u7acb\u91cd\u590d\u8bd5\u9a8c\u4e2d\u6bcf\u6b21\u8bd5\u9a8c\u6709\u4e24\u4e2a\u7ed3\u679c\uff1a\\(A, \\overline{A}\\)\uff0c\u4e14\u6bcf\u6b21\u8bd5\u9a8c\u4e2d A \u51fa\u73b0\u7684\u6982\u7387\u4e0d\u53d8\uff0c\u8bb0\u4e3a p\u3002\u8bbe\u76f4\u81f3 A \u53d1\u751f r \u6b21\u65f6\u6240\u9700\u7684\u8bd5\u9a8c\u6b21\u6570\u4e3a X\uff0c\u6c42 X \u7684\u5206\u5e03\u5217\u3002</p> <p>\u5e15\u65af\u5361\u5206\u5e03\u7684\u671f\u671b\u4e0e\u65b9\u5dee\u5206\u522b\u4e3a\uff1a</p> \\[ \\mathbb{E}[X] = \\frac{r}{p}, \\qquad \\mathrm{Var}(X) = \\frac{r(1 - p)}{p^2}. \\] <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u83b7\u5f97 \\(r\\) \u6b21\u6210\u529f\u6240\u9700\u7684\u5e73\u5747\u8bd5\u9a8c\u6b21\u6570\u662f \\(r\\) \u500d\u7684\u51e0\u4f55\u5206\u5e03\u671f\u671b\uff08\u56e0\u4e3a\u6bcf\u6b21\u6210\u529f\u5e73\u5747\u9700 \\(1/p\\) \u6b21\u8bd5\u9a8c\uff09\u3002</p> <p>\u5e15\u65af\u5361\u5206\u5e03\u4e0e\u51e0\u4f55\u5206\u5e03</p> <p>\u5f53 \\(r = 1\\) \u65f6\uff0c\u5e15\u65af\u5361\u5206\u5e03\u9000\u5316\u4e3a\u51e0\u4f55\u5206\u5e03\uff1a</p> \\[ \\mathrm{NB}(1, p) = G(p) \\] <p>\u56e0\u6b64\uff0c\u5e15\u65af\u5361\u5206\u5e03\u53ef\u4ee5\u770b\u4f5c\u662f\u201c\u51e0\u4f55\u5206\u5e03\u7684\u591a\u6b21\u6210\u529f\u63a8\u5e7f\u201d\u3002</p> <p>\u5e15\u65af\u5361\u5206\u5e03\u4e0e\u4e8c\u9879\u5206\u5e03</p> \u5206\u5e03 \u56fa\u5b9a\u4ec0\u4e48\uff1f \u968f\u673a\u4ec0\u4e48\uff1f \u4e8c\u9879\u5206\u5e03 \\(B(n, p)\\) \u8bd5\u9a8c\u603b\u6b21\u6570 \\(n\\) \u6210\u529f\u6b21\u6570 \\(X\\) \u8d1f\u4e8c\u9879\u5206\u5e03 \\(\\text{NB}(r, p)\\) \u6210\u529f\u6b21\u6570 \\(r\\) \u8bd5\u9a8c\u603b\u6b21\u6570 \\(X\\) <p>\u4e8c\u8005\u4e92\u4e3a\u201c\u5bf9\u5076\u201d\uff1a\u4e00\u4e2a\u56fa\u5b9a\u8bd5\u9a8c\u6b21\u6570\u770b\u6210\u529f\u6570\uff0c\u4e00\u4e2a\u56fa\u5b9a\u6210\u529f\u6b21\u6570\u770b\u8bd5\u9a8c\u6570\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_8","title":"\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u51fd\u6570","text":"<p>\\(X\\) \u4e3a\u968f\u673a\u53d8\u91cf\uff0c\\(x\\) \u4e3a\u4efb\u610f\u5b9e\u6570\uff0c\u51fd\u6570</p> \\[F(x)=P\\{X\\le x\\}\\] <p>\u79f0\u4e3a\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570, \u7b80\u79f0\u5206\u5e03\u51fd\u6570 (distribution function)\u3002</p> <p>\u6709\u5206\u5e03\u51fd\u6570\u6c42\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\uff1a</p> <p>\u5bf9\u4efb\u610f\u5b9e\u6570 \\(x_1, x_2\\)\uff0c\u6709</p> \\[P\\{x_1\\le X\\le x_2\\}=F(x_2)-F(x_1)\\] <p>\u8fd9\u8bf4\u660e \\(X\\) \u843d\u5728\u533a\u95f4 \\((x_1, x_2]\\) \u7684\u6982\u7387\u4e3a\u4e24\u7aef\u70b9\u5904\u5206\u5e03\u51fd\u6570\u503c\u4e4b\u5dee\u3002\u4e5f\u5c31\u662f\u8bf4, \u5982\u679c \\(X\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\) \u5df2\u77e5, \u5c31\u53ef\u4ee5\u6c42\u51fa\u4e8b\u4ef6 \\(\\{X \\in (x_1, x_2]\\}\\) \u7684\u6982\u7387\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e</p> \\[P\\{X=x_0\\}=F(x_0+0)-F(x_0-0)\\] <p>\u5373 \\(P\\{X=x_0\\}\\) \u70b9\u7684\u6982\u7387\u4e3a\u6982\u7387\u5206\u5e03\u51fd\u6570\u7684\u53f3\u6781\u9650\u51cf\u5de6\u6781\u9650\u3002\u5982\u679c \\(X\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\) \u5df2\u77e5, \u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u70b9\u7684\u6982\u7387\u3002</p> <p>\u5f53 \\(X\\) \u4e3a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u65f6, \u8bbe \\(X\\) \u7684\u6982\u7387\u5206\u5e03\u5f8b\u4e3a \\(P\\{X = x_i\\} = p_i, i = 1, 2, \\cdots\\), \u5219 \\(X\\) \u7684\u5206\u5e03\u51fd\u6570\u4e3a</p> \\[ F(x) = P\\{X \\leq x\\} = \\sum_{x_i \\leq x} P\\{X = x_i\\}, \\] <p>\u5373 \\(F(x)\\) \u4e3a\u6ee1\u8db3 \\(x_i \\leq x\\) \u7684\u4e00\u5207 \\(x_i\\) \u7684\u76f8\u5e94\u7684\u6982\u7387\u4e4b\u548c.</p> <p>\u5206\u5e03\u51fd\u6570\u7684\u6027\u8d28:</p> <ul> <li>\\(F(x)\\) \u5355\u8c03\u4e0d\u51cf</li> <li>\\(0 \\leq F(x) \\leq 1\\), \u4e14\u6709 \\(\\lim_{a \\to -\\infty} F(a) = 0\\), \\(\\lim_{b \\to +\\infty} F(b) = 1\\), \u7b80\u8bb0\u4e3a \\(F(-\\infty) = 0\\), \\(F(+\\infty) = 1\\)</li> <li>\\(F(x+0) = F(x)\\), \u5373 \\(F(x)\\) \u662f\u53f3\u8fde\u7eed\u51fd\u6570</li> </ul>"},{"location":"CourseNotes/Probability/PRO02/#_9","title":"\u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf","text":"<p>\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf \\(X\\), \u5176\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\), \u82e5\u5b58\u5728\u4e00\u4e2a\u975e\u8d1f\u7684\u5b9e\u503c\u51fd\u6570 \\(f(x)\\), \\(-\\infty &lt; x &lt; +\\infty\\), \u4f7f\u5f97\u5bf9\u4efb\u610f\u5b9e\u6570 \\(x\\), \u6709</p> \\[ F(x) = \\int_{-\\infty}^{x} f(t) \\mathrm{d}t, \\] <p>\u5219\u79f0 \\(X\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf, \u79f0 \\(f(x)\\) \u4e3a \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (probability density function), \u7b80\u79f0\u5bc6\u5ea6\u51fd\u6570.</p> <p>\u5bc6\u5ea6\u51fd\u6570\u7684\u6027\u8d28:</p> <ul> <li>\\(f(x) \\geq 0\\).</li> <li>\\(\\int_{-\\infty}^{+\\infty} f(x) \\mathrm{d}x = 1\\).</li> <li>\u5bf9\u4efb\u610f\u5b9e\u6570 \\(x_1, x_2\\) (\\(x_1 &lt; x_2\\)),\\(P\\{x_1 &lt; X \\leq x_2\\} = F(x_2) - F(x_1) = \\int_{x_1}^{x_2} f(t) \\mathrm{d}t\\)</li> </ul> <p>\u51e0\u70b9\u6ce8\u610f\uff1a</p> <ul> <li>\u5bf9\u8fde\u7eed\u968f\u673a\u53d8\u91cf\uff0c\u6709\u9650\u4e2a\u70b9\u7684\u6982\u7387\u4e3a\u96f6\uff0c\u6545\u5927\u4e8e\u7b49\u4ef7\u4e8e\u5927\u4e8e\u7b49\u4e8e\u3001\u5c0f\u4e8e\u7b49\u4ef7\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u3002</li> <li>\u8003\u8651\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\uff0c\u5982\u679c\u662f\u79bb\u6563\u578b\uff0c\u5219\u6c42\u5206\u5e03\u5217\uff1b\u5982\u679c\u662f\u8fde\u7eed\u578b\uff0c\u5219\u6c42\u5206\u5e03\u51fd\u6570\u3002</li> <li>\u8fde\u7eed\u6027\u53d8\u91cf\u7684\u7ea6\u675f\u6761\u4ef6\uff1a</li> <li>\\(F(+\\infty)=1\\)</li> <li>\\(\\int_{-\\infty}^{+\\infty}f(x)\\mathrm{d}x=1\\)</li> </ul>"},{"location":"CourseNotes/Probability/PRO02/#_10","title":"\u5747\u5300\u5206\u5e03","text":"<p>\u5747\u5300\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> \\[ f(x)=\\begin{cases} \\frac{1}{b-a},&amp; x\\in (a,b) \\\\ 0,&amp; \\text{Other} \\end{cases} \\] <p>\u82e5 X \u5728 (a,b) \u6216 [a,b] \u4e0a\u5747\u5300\u5206\u5e03\uff0c\u8bb0\u4e3a \\(X\\sim U(a,b)\\) \u6216 \\(X\\sim U[a,b]\\)\u3002</p> <p>\u843d\u5728\u5747\u5300\u5206\u5e03\u533a\u95f4\u5185\u7684\u5b50\u533a\u95f4\uff0c\u6982\u7387\u4e0e\u8d77\u59cb\u4f4d\u7f6e\u65e0\u5173\uff0c\u53ea\u4e0e\u957f\u5ea6\u6709\u5173\u3002\u5373\uff1a</p> \\[a&lt;s&lt;s+L&lt;b \\Rightarrow P(s&lt;X&lt;x+L)=\\frac{L}{b-a}\\]"},{"location":"CourseNotes/Probability/PRO02/#_11","title":"\u6307\u6570\u5206\u5e03","text":"<p>\u6307\u6570\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> \\[ f(x)=\\begin{cases} \\lambda e^{-\\lambda x},&amp; x&gt;0\\\\ 0,&amp;x\\le 0 \\end{cases} \\] <p>\u8bb0\u4e3a \\(X\\sim E(\\lambda)\\)\u3002</p> <p>\u6307\u6570\u5206\u5e03\u7684\u5206\u5e03\u51fd\u6570\uff1a</p> \\[ F(x)=\\begin{cases} 1- e^{-\\lambda x},&amp; x&gt;0\\\\ 0,&amp;x\\le 0 \\end{cases} \\] <p>\u6307\u6570\u5206\u5e03\u7684\u65e0\u8bb0\u5fc6\u6027\uff1a\u4e00\u4e2a\u4e8b\u4ef6\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u95f4\u6bb5\u5185\u53d1\u751f\u7684\u6982\u7387\uff0c\u4e0e\u5b83\u5df2\u7ecf\u7b49\u5f85\u4e86\u591a\u4e45\u65e0\u5173\u3002\u5373\u5df2\u7ecf\u53d1\u751f\u7684\u4e0d\u5f71\u54cd\u672a\u6765\u53d1\u751f\u7684\u3002\u5373\uff1a</p> \\[ P(X &gt; s + t \\mid X &gt; s) = P(X &gt; t) \\] <p>\u8bc1\u660e\uff1a\u5229\u7528\u6761\u4ef6\u6982\u7387\u516c\u5f0f\uff0c</p> \\[ P(X &gt; s + t \\mid X &gt; s) = \\frac{P(X &gt; s + t)}{P(X &gt; s)} \\] <p>\u7531\u4e8e \\( P(X &gt; x) = e^{-\\lambda x} \\)\uff08\u7531\u5206\u5e03\u51fd\u6570\u53ef\u5f97\uff09\uff0c\u4ee3\u5165\u5f97\uff1a</p> \\[ \\frac{e^{-\\lambda (s + t)}}{e^{-\\lambda s}} = e^{-\\lambda t} = P(X &gt; t) \\] <p>\u6307\u6570\u5206\u5e03\u7684\u5e94\u7528\uff1a\u5bff\u547d\uff0c\u7b49\u5f85\u65f6\u95f4\u2026\u2026</p> <p>\u4e3a\u4ec0\u4e48\u53ea\u6709\u6307\u6570\u5206\u5e03\u6709\u8fd9\u4e2a\u6027\u8d28\uff1f</p> <p>\u53ef\u4ee5\u8bc1\u660e\uff1a\u5728\u6240\u6709\u8fde\u7eed\u578b\u975e\u8d1f\u968f\u673a\u53d8\u91cf\u4e2d\uff0c\u53ea\u6709\u6307\u6570\u5206\u5e03\u6ee1\u8db3\u65e0\u8bb0\u5fc6\u6027\u3002</p> <p>\u7b80\u8981\u601d\u8def\uff1a \u8bbe \\( X \\geq 0 \\) \u8fde\u7eed\uff0c\u4e14\u6ee1\u8db3 \\( P(X &gt; s+t \\mid X &gt; s) = P(X &gt; t) \\) \u5bf9\u6240\u6709 \\( s,t \\geq 0 \\) \u6210\u7acb\u3002 \u4ee4 \\( g(t) = P(X &gt; t) \\)\uff0c\u5219\u6709\u51fd\u6570\u65b9\u7a0b\uff1a</p> \\[ g(s + t) = g(s) g(t) \\] <p>\u5728\u8fde\u7eed\u6027\u6761\u4ef6\u4e0b\uff0c\u552f\u4e00\u89e3\u4e3a \\( g(t) = e^{-\\lambda t} \\)\uff0c\u5373\u6307\u6570\u5206\u5e03\u7684\u751f\u5b58\u51fd\u6570\u3002</p> <p>\u6307\u6570\u5206\u5e03\u4e0e\u51e0\u4f55\u5206\u5e03\u7684\u5173\u7cfb</p> <ul> <li>\u51e0\u4f55\u5206\u5e03\u662f\u79bb\u6563\u578b\u4e2d\u552f\u4e00\u5177\u6709\u65e0\u8bb0\u5fc6\u6027\u7684\u5206\u5e03\uff08\u63cf\u8ff0\u9996\u6b21\u6210\u529f\u6240\u9700\u7684\u8bd5\u9a8c\u6b21\u6570\uff09\u3002</li> <li>\u6307\u6570\u5206\u5e03\u53ef\u770b\u4f5c\u51e0\u4f55\u5206\u5e03\u5728\u65f6\u95f4\u8fde\u7eed\u5316\u540e\u7684\u6781\u9650\u5f62\u5f0f\u3002</li> </ul>"},{"location":"CourseNotes/Probability/PRO02/#_12","title":"\u6b63\u6001\u5206\u5e03","text":"<p>\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> \\[f(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\] <p>\u8bb0\u4e3a \\(X\\sim N(\\mu, \\sigma^2)\\)\u3002\u5176\u4e2d \\(\\mu\\) \u4e3a\u4f4d\u7f6e\u53c2\u6570\uff0c\u8868\u793a\u5cf0\u503c\u4f4d\u7f6e\uff1b\\(\\sigma\\) \u4e3a\u5c3a\u5ea6\u53c2\u6570\uff0c\u8868\u793a\u79bb\u6563\u7a0b\u5ea6\u3002\\(\\sigma\\) \u8d8a\u5927\uff0c\u79bb\u6563\u7a0b\u5ea6\u8d8a\u5927\uff0c\u5bc6\u5ea6\u51fd\u6570\u56fe\u50cf\u8d8a\u4f4e\u77ee\u3002</p> <p>\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u5173\u4e8e \\(x=\\mu\\) \u5bf9\u79f0</li> <li>\u6700\u5927\u503c\u4e3a \\(\\frac{1}{\\sqrt{2\\pi}\\sigma}\\)\uff0c\u5728 \\(x=\\mu\\) \u5904\u53d6\u5230</li> <li>\\(\\mu\\pm\\sigma\\) \u662f\u5bc6\u5ea6\u51fd\u6570\u7684\u62d0\u70b9</li> </ul>"},{"location":"CourseNotes/Probability/PRO02/#_13","title":"\u6807\u51c6\u6b63\u6001\u5206\u5e03","text":"<p>\u5f53 \\(\\mu=0,\\, \\sigma=1\\) \u65f6\uff0c\u79f0 \\(X\\) \u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(X\\sim N(0,1)\\)\u3002</p> <p>\u8bb0\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(\\phi(x)\\) \uff1a</p> \\[\\phi(x)=\\frac{1}{\\sqrt{2\\pi}}\\cdot e^{-x^2/2}\\] <p>\u8bb0\u5206\u5e03\u51fd\u6570\u4e3a \\(\\Phi(x)\\) \uff1a</p> \\[\\Phi(x)=\\int_{-\\infty}^x \\frac{1}{\\sqrt{2\\pi}}e^{-t^2/2}\\mathrm{d}t\\] <p>\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28\uff1a</p> <ul> <li>\\(\\phi(x)=\\phi(-x)\\)</li> <li>\\(\\Phi(x)+\\Phi(-x)=1\\)</li> </ul> <p>\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\u53ef\u7528\u67e5\u8868\u5f97\u5230\u3002 \u6807\u51c6\u6b63\u6001\u5206\u5e03\u8868\u4e2d\uff0cx \u4ece 0 \u5f00\u59cb\uff0c\u6982\u7387\u4ece 0.5 \u5f00\u59cb\u3002 \u67e5\u8868\u5206\u4e3a\u6b63\u5411\u67e5\u8868\u548c\u53cd\u5411\u67e5\u8868\u3002\u6b63\u5411\u67e5\u8868\u4e2d\uff0c\u5de6\u4fa7\u680f\u8868\u793a\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\uff0c\u4e0a\u65b9\u7b2c\u4e00\u884c\u8868\u793a\u5c0f\u6570\u70b9\u540e\u7b2c\u4e09\u4f4d\uff1b\u53cd\u5411\u67e5\u8868\u4e2d\uff0c\u5982\u679c\u6982\u7387\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u5219\u53d6\u4e2d\u503c\uff0c\u5982\u679c\u8981\u67e5\u7684\u6982\u7387\u5c0f\u4e8e 0.5\uff0c\u5148\u8f6c\u5316\u4e3a 0.5~1 \u8303\u56f4\u3002</p>"},{"location":"CourseNotes/Probability/PRO02/#_14","title":"\u4e00\u822c\u6b63\u6001\u5206\u5e03","text":"<p>\u8ba1\u7b97\u4e00\u822c\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\uff1a</p> \\[F(x)=\\int_{-\\infty}^x \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(t-\\mu)^2}{2\\sigma^2}}\\mathrm{d}t\\] <p>\u4ee4 \\(\\frac{t-\\mu}{\\sigma}=z\\)\uff0c\u5219\u4e0a\u5f0f\u8f6c\u5316\u4e3a\uff1a</p> \\[F(x)=\\int_{-\\infty}^{\\frac{x-\\mu}{\\sigma}}\\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{z^2}{2}}\\cdot\\mathrm{d}z\\] <p>\u5373\uff1a</p> \\[F(x)=\\Phi(\\frac{x-\\mu}{\\sigma})\\] <p>\u793a\u4f8b\uff0c\u6c42 \\(P(|x-\\mu|&lt;k\\sigma)\\)\uff1a</p> \\[ \\begin{align*} P(|x-\\mu|&lt;k\\sigma)&amp;=P(\\mu-k\\sigma&lt;X&lt;\\mu+k\\sigma) \\\\ &amp;\\triangleq P(a&lt;X&lt;b) \\\\ &amp;=\\Phi(\\frac{a-\\mu}{\\sigma})-\\Phi(\\frac{b-\\mu}{\\sigma}) \\\\ &amp;=2\\Phi(k)-1 \\end{align*} \\]"},{"location":"CourseNotes/Probability/PRO02/#_15","title":"\u4e0d\u540c\u968f\u673a\u53d8\u91cf\u7684\u5173\u7cfb","text":"<p>\u5df2\u77e5 \\(X\\) \u7684\u5206\u5e03\uff0c\\(Y=g(X)\\)\uff0c\u6c42 \\(Y\\) \u7684\u5206\u5e03\uff1a\u5148\u770b \\(Y\\) \u6982\u7387\u975e\u96f6\u7684\u8303\u56f4\uff0c\u5728\u8303\u56f4\u5185\u5c06 \\(Y\\) \u8f6c\u5316\u4e3a \\(X\\) \u8ba1\u7b97\u3002\u76ee\u6807\u4e3a\u7528 \\(X\\) \u7684\u51fd\u6570\u8868\u793a \\(Y\\)\u3002</p> <p>\u6c42\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a\u5206\u5e03\u51fd\u6570\u6c42\u5bfc</p> <p>\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\u7ebf\u6027\u53d8\u6362\u540e\u6b63\u6001\u6027\u4e0d\u53d8\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/","title":"\u673a\u5668\u4eba\u63a7\u5236","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 679 \u4e2a\u5b57\u00a0\u00a025 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_1","title":"\u8d28\u70b9\u8fd0\u52a8\u5b66\uff08\u5929\u4f53\u7cfb\u7edf\u6a21\u62df\uff09","text":"<ul> <li> <p>\u663e\u5f0f\u79ef\u5206</p> </li> <li> <p>\u7528\u5f53\u524d\u901f\u5ea6\u66f4\u65b0\u4f4d\u7f6e\uff0c\u7528\u5f53\u524d\u52a0\u901f\u5ea6\u66f4\u65b0\u901f\u5ea6</p> </li> <li> <p>\u6240\u6709\u72b6\u6001\u66f4\u65b0\u90fd\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u6570\u503c\u7a33\u5b9a\u6027\u5dee</p> </li> <li> <p>\u534a\u9690\u5f0f\u79ef\u5206</p> </li> <li> <p>\u7528\u5f53\u524d\u52a0\u901f\u5ea6\u66f4\u65b0\u901f\u5ea6\uff0c\u7528\u65b0\u901f\u5ea6\u66f4\u65b0\u4f4d\u7f6e</p> </li> <li>\u6570\u503c\u7a33\u5b9a\u6027\u8f83\u9ad8</li> </ul> <p>\u663e\u5f0f\u79ef\u5206\u51fd\u6570\uff1a</p> Python<pre><code>@ti.kernel\ndef update_explicit_euler():\n    for i in range(N):\n        pos[i] += vel[i] * dt\n        vel[i] += force[i] / mass[i] * dt\n</code></pre> <p>\u534a\u9690\u5f0f\u79ef\u5206\u51fd\u6570\uff1a</p> Python<pre><code>@ti.kernel\ndef update_semi_implicit_euler():\n    for i in range(N):\n        vel[i] += force[i] / mass[i] * dt\n        pos[i] += vel[i] * dt\n</code></pre> Solar System \u5b8c\u6574\u4ee3\u7801 Python<pre><code>import taichi as ti\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nti.init(ti.gpu)  # ti.cpu / ti.gpu\n\n# Simulation parameters\n# \u533a\u5206\u663e\u5f0f\u548c\u534a\u9690\u5f0f\uff1adt=6e-6\ndt = 3e-5\nG = 1\nN = 5\n\n# Mass, initial positions and velocities\nmass_np = np.array([20000.0, 1000.0, 2000.0, 150.0, 20.0], dtype=np.float32)\npos_np = np.array([[0.3, 0.7], [0.3, 0.6], [0.3, 0.5], [0.4, 0.4], [0.35, 0.4]], dtype=np.float32)\nvel_np = np.array([[0, 0], [280, 0], [260, 0], [140, 0], [180, 20]], dtype=np.float32)\n\n# Planet radius for rendering\nplanet_radius = np.array([max(1, x**(1/3)) for x in mass_np], dtype=np.float32)\n\n# Taichi fields\nmass = ti.field(ti.f32, N)\npos = ti.Vector.field(2, ti.f32, N)\nvel = ti.Vector.field(2, ti.f32, N)\nforce = ti.Vector.field(2, ti.f32, N)\n\nmass.from_numpy(mass_np)\npos.from_numpy(pos_np)\nvel.from_numpy(vel_np)\n\n# History\nMAX_HISTORY = 1000\nhistory = ti.Vector.field(2, ti.f32, shape=(N, MAX_HISTORY))\nhistory_idx = ti.field(ti.i32, shape=N)\ntraj_np = np.zeros((N, MAX_HISTORY, 2), dtype=np.float32)\n\n# \u5b9a\u4e49\u6bcf\u4e2a\u5929\u4f53\u7684\u8f68\u8ff9\u989c\u8272\ntraj_colors = np.array([\n    0x63b2ee,\n    0xeddd86 ,\n    0x76da91,\n    0xf89588,\n    0x7cd6cf\n], dtype=np.int32)\n\n\n@ti.kernel\ndef clear_force():\n    for i in range(N):\n        force[i] = ti.Vector([0.0, 0.0])\n\n\n@ti.kernel\ndef compute_force():\n    for i in range(N):\n        for j in range(i + 1, N):\n            dist = pos[i] - pos[j]\n            radius = dist.norm() + 1e-6\n            f = G * mass[i] * mass[j] / (radius ** 3) * dist\n            force[j] += f\n            force[i] -= f\n\n@ti.kernel\ndef update_explicit_euler():\n    for i in range(N):\n        pos[i] += vel[i] * dt\n        vel[i] += force[i] / mass[i] * dt\n\n\n@ti.kernel\ndef update_semi_implicit_euler():\n    for i in range(N):\n        vel[i] += force[i] / mass[i] * dt\n        pos[i] += vel[i] * dt\n\n\n@ti.kernel\ndef record_history():\n    for i in range(N):\n        idx = history_idx[i] % MAX_HISTORY\n        history[i, idx] = pos[i]\n        history_idx[i] += 1\n\n\n@ti.kernel\ndef copy_history_to_numpy(traj_np: ti.types.ndarray()):\n    for i in range(N):\n        for j in range(MAX_HISTORY):\n            traj_np[i, j, 0] = history[i, j][0]\n            traj_np[i, j, 1] = history[i, j][1]\n\n\ndef update():\n    clear_force()\n    compute_force()\n    update_semi_implicit_euler()\n    # update_explicit_euler()\n\n@ti.kernel\ndef compute_energy() -&gt; ti.f32:\n    total_energy = 0.0\n    for i in range(N):\n        kinetic = 0.5 * mass[i] * vel[i].dot(vel[i])\n        potential = 0.0\n        for j in range(N):\n            if i != j:\n                dist = (pos[i] - pos[j]).norm() + 1e-6\n                potential -= G * mass[i] * mass[j] / dist\n        total_energy += kinetic + potential\n    return total_energy\n\n\ngui = ti.GUI('N-body problem', (1024, 1024))\nt = 0\n\n\n# \u8bb0\u5f55\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u80fd\u91cf\nenergies = []\n\nwhile gui.running:\n    t += 1\n    update()\n    record_history()\n\n    if t % 10 == 0:\n        gui.clear(0x000000)\n        copy_history_to_numpy(traj_np)\n\n        # \u7ed8\u5236\u8f68\u8ff9\uff0c\u6bcf\u6761\u8f68\u8ff9\u5206\u6bb5\u7ed8\u5236\uff0c\u9632\u6b62\u9996\u5c3e\u8fde\u7ebf\n        for i in range(N):\n            color = int(traj_colors[i])  # \u4f7f\u7528\u5bf9\u5e94\u7684\u989c\u8272\n            idx = history_idx[i] % MAX_HISTORY\n            length = min(history_idx[i], MAX_HISTORY)\n            if length &lt; MAX_HISTORY:\n                traj = traj_np[i, :length]\n                for j in range(1, length):\n                    gui.line(traj[j-1], traj[j], radius=1, color=color)\n            else:\n                # \u5386\u53f2\u6570\u7ec4\u5df2\u6ee1\uff0c\u5206\u4e24\u6bb5\u7ed8\u5236\n                traj_part1 = traj_np[i, idx:]\n                for j in range(1, len(traj_part1)):\n                    gui.line(traj_part1[j-1], traj_part1[j], radius=1, color=color)\n                traj_part2 = traj_np[i, :idx]\n                for j in range(1, len(traj_part2)):\n                    gui.line(traj_part2[j-1], traj_part2[j], radius=1, color=color)\n\n        # \u7ed8\u5236\u884c\u661f\n        gui.circles(pos.to_numpy(), color=0xdcdcdc, radius=planet_radius)\n        gui.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_2","title":"\u524d\u5411\u8fd0\u52a8\u5b66\uff08\u673a\u68b0\u81c2\u8ba1\u7b97\uff09","text":""},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_3","title":"\u4e8c\u7ef4\u5355\u652f\u673a\u68b0\u81c2","text":"<p>\u524d\u5411\u52a8\u529b\u5b66\uff1a\u7531\u5173\u8282\u89d2\u5ea6\u7684\u5217\u8868\u8ba1\u7b97\u672b\u7aef\u4f4d\u7f6e</p> <p>\u4ece\u7b2c 0 \u4e2a\u5173\u8282\uff08\u8f74\uff09\u5f00\u59cb\uff0c\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u5173\u8282\uff0c\u6bcf\u4e2a\u673a\u68b0\u81c2\u7684\u89d2\u5ea6\u4e3a\u4e4b\u524d\u6240\u6709\u5173\u8282\u5904\u89d2\u5ea6\u7684\u7d2f\u52a0\u3002 \u6bcf\u4e2a\u5173\u8282\u76f8\u5bf9\u4e0a\u4e00\u4e2a\u5173\u8282\u7684\u79fb\u52a8\u4e3a\u673a\u68b0\u81c2\u957f\u5ea6*\u5f53\u524d\u89d2\u5ea6\uff0c\u5373$\\mathrm{d}x=len\\times\\cos\\theta $ ,$\\mathrm{d}y=len\\times\\sin\\theta $\u3002 \u6bcf\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e\u4e3a\u4e0a\u4e00\u4e2a\u5173\u8282\u7684\u4f4d\u7f6e+\u76f8\u5bf9\u79fb\u52a8\u91cf</p> <p>\u4ee3\u7801\uff1a</p> Python<pre><code>def forward_kinematics(angles_rad):\n    positions = [np.array([0.0, 0.0])] # \u672b\u7aef\u4f4d\u7f6e\n    current_angle = 0.0 # \u6bcf\u4e2a\u5173\u8282\u5f53\u524d\u89d2\u5ea6\n    current_pos = np.array([0.0, 0.0])\n\n    # \u4ece\u8f74\u5f00\u59cb\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u5173\u8282\n    for i in range(n_links):\n        current_angle += angles_rad[i] # \u66f4\u65b0\u5173\u8282\u7684\u89d2\u5ea6\n        dx = link_lengths[i] * np.cos(current_angle) # \u66f4\u65b0xy\n        dy = link_lengths[i] * np.sin(current_angle)\n        current_pos = current_pos + np.array([dx, dy]) # \u66f4\u65b0\u672b\u7aef\u4f4d\u7f6e\n        positions.append(current_pos.copy())\n\n    return np.array(positions)\n</code></pre> \u5b8c\u6574\u4ee3\u7801 Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.widgets import Slider, Button\n\nfrom matplotlib import rcParams\n\nrcParams['font.family'] = 'serif'\nrcParams['mathtext.fontset'] = 'cm'\nrcParams['axes.linewidth'] = 1.2\nrcParams['xtick.direction'] = 'in'\nrcParams['ytick.direction'] = 'in'\nrcParams['xtick.major.size'] = 6\nrcParams['ytick.major.size'] = 6\n\n# \u673a\u68b0\u81c2\u53c2\u6570\nlink_lengths = [2.0, 1.5, 1.0]  # \u957f\u5ea6\nn_links = len(link_lengths)  # \u673a\u68b0\u81c2\u603b\u6570\n\n\n# \u524d\u5411\u52a8\u529b\u5b66\uff0c\u7531\u5173\u8282\u89d2\u5ea6\u7684\u5217\u8868\u8ba1\u7b97\u672b\u7aef\u4f4d\u7f6e\ndef forward_kinematics(angles_rad):\n    positions = [np.array([0.0, 0.0])] # \u672b\u7aef\u4f4d\u7f6e\n    current_angle = 0.0 # \u6bcf\u4e2a\u5173\u8282\u5f53\u524d\u89d2\u5ea6\n    current_pos = np.array([0.0, 0.0])\n\n    # \u4ece\u8f74\u5f00\u59cb\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u5173\u8282\n    for i in range(n_links):\n        current_angle += angles_rad[i] # \u66f4\u65b0\u5173\u8282\u7684\u89d2\u5ea6\n        dx = link_lengths[i] * np.cos(current_angle) # \u66f4\u65b0xy\n        dy = link_lengths[i] * np.sin(current_angle)\n        current_pos = current_pos + np.array([dx, dy]) # \u66f4\u65b0\u672b\u7aef\u4f4d\u7f6e\n        positions.append(current_pos.copy())\n\n    return np.array(positions)\n\n\n# \u53ef\u89c6\u5316\u8bbe\u7f6e\nfig, ax = plt.subplots()\nplt.subplots_adjust(left=0.1, bottom=0.35)  # space for sliders\n\narm_line, = ax.plot([], [], 'o-', lw=4, color='blue', label='Links')\nend_point, = ax.plot([], [], 'ro', label='End-Effector')  # single point\nax.set_xlim(-sum(link_lengths) - 0.5, sum(link_lengths) + 0.5)\nax.set_ylim(-sum(link_lengths) - 0.5, sum(link_lengths) + 0.5)\nax.set_aspect('equal')\nax.grid(True)\nax.set_title(\"Interactive 2D Robotic Arm\")\nax.legend()\n\ncoord_text = ax.text(0.02, 0.95, \"\", transform=ax.transAxes, fontsize=10,\n                    verticalalignment='top', bbox=dict(facecolor='white', alpha=0.6))\n\n# \u6ed1\u52a8\u6761\u8bbe\u7f6e\nsliders = []\nfor i in range(n_links):\n    ax_slider = plt.axes([0.1, 0.25 - i * 0.07, 0.8, 0.03])  # x, y, width, height\n    slider = Slider(ax_slider, f'Joint {i + 1} (deg)', -180.0, 180.0, valinit=0.0)\n    sliders.append(slider)\n\n\n# \u663e\u793a\u66f4\u65b0\ndef update(val):\n    joint_angles = [s.val for s in sliders] # \u4ece\u6ed1\u52a8\u6761\u83b7\u53d6\u89d2\u5ea6\u53c2\u6570\n    angles_rad = [np.deg2rad(a) for a in joint_angles]\n    positions = forward_kinematics(angles_rad)\n\n    # \u66f4\u65b0\u7ed8\u5236\u673a\u68b0\u81c2\n    arm_line.set_data(positions[:, 0], positions[:, 1])\n\n    # \u66f4\u65b0\u672b\u7aef\u5750\u6807\u663e\u793a\n    x_e, y_e = positions[-1, 0], positions[-1, 1]\n    end_point.set_data([x_e], [y_e])\n    coord_text.set_text(f'End-Effector (x, y) = ({x_e:.3f}, {y_e:.3f})')\n\n    fig.canvas.draw_idle()\n\n\nfor s in sliders:\n    s.on_changed(update)\n\n# \u91cd\u7f6e\u6309\u94ae\u8bbe\u8ba1\nreset_ax = plt.axes([0.8, 0.05, 0.1, 0.04])\nbutton = Button(reset_ax, 'Reset', color='lightgray', hovercolor='lightblue')\n\n\ndef reset(event):\n    for s in sliders:\n        s.reset()\n\n\nbutton.on_clicked(reset)\n\n# \u8d77\u59cb\u60c5\u51b5\nupdate(None)\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_4","title":"\u4e8c\u7ef4\u5206\u53c9\u673a\u68b0\u81c2","text":"<p>\u5982\u679c\u673a\u68b0\u81c2\u5206\u53c9\uff0c\u5f00\u59cb\u51e0\u4e2a\u5173\u8282\u5171\u4eab\uff0c\u540e\u9762\u7684\u5173\u8282\u5bf9\u5e94\u4e0d\u540c\u673a\u68b0\u81c2\uff0c\u5148\u8ba1\u7b97\u5171\u4eab\u90e8\u5206\uff0c\u518d\u4f9d\u6b21\u8ba1\u7b97\u5404\u4e2a\u5206\u652f\u3002</p> <p>\u4ee3\u7801\uff1a\uff08\u4ee5\u4e00\u4e2a\u5206\u652f\u4e3a\u4f8b\uff09</p> Python<pre><code>def forward_kinematics(angle_rad_base, angles_rad_1, angles_rad_2):\n    # \u8ba1\u7b97\u5171\u4eab\u7684\u5173\u8282\u4f4d\u7f6e\n    base_positions = [np.array([0.0, 0.0])]\n    base_end = [np.array([0.0, 0.0])]\n    base_angle = 0.0\n    for i in range(n_linds_base):\n        base_angle += angle_rad_base[i]\n        dx = base_joint_length[i] * np.cos(base_angle)\n        dy = base_joint_length[i] * np.sin(base_angle)\n        base_end += np.array([dx, dy])\n        base_positions.append(base_end.copy())\n\n    # \u8ba1\u7b97\u5206\u652f1\u7684\u4f4d\u7f6e\uff08\u4ece\u5206\u53c9\u5173\u8282\u5f00\u59cb\uff09\n    positions_1 = [base_end.copy()]\n    current_angle_1 = base_angle\n    current_pos_1 = base_end.copy()\n    for i in range(n_links_1):\n        current_angle_1 += angles_rad_1[i]\n        dx = link_lengths_1[i] * np.cos(current_angle_1)\n        dy = link_lengths_1[i] * np.sin(current_angle_1)\n        current_pos_1 += np.array([dx, dy])\n        positions_1.append(current_pos_1.copy())\n\n    # \u8ba1\u7b97\u5206\u652f2\u7684\u4f4d\u7f6e\uff08\u4ece\u5206\u53c9\u5173\u8282\u5f00\u59cb\uff09\n    positions_2 = [base_end.copy()]\n    current_angle_2 = base_angle\n    current_pos_2 = base_end.copy()\n    for i in range(n_links_2):\n        current_angle_2 += angles_rad_2[i]\n        dx = link_lengths_2[i] * np.cos(current_angle_2)\n        dy = link_lengths_2[i] * np.sin(current_angle_2)\n        current_pos_2 += np.array([dx, dy])\n        positions_2.append(current_pos_2.copy())\n\n    return np.array(base_positions), np.array(positions_1), np.array(positions_2)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_5","title":"\u4e09\u7ef4\u673a\u68b0\u81c2","text":"<p>\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7528\\(theta\\)\u548c\\(phi\\)\u4e24\u4e2a\u53c2\u6570\u5b9a\u4e49\u65b9\u5411\uff0c\\(theta\\)\u8868\u793a\u4e0e Z \u8f74\u7684\u5939\u89d2\uff08\u6781\u89d2\uff09\uff0c\\(phi\\)\u8868\u793a\u5728 XY \u5e73\u9762\u7684\u6295\u5f71\u4e0e X \u8f74\u7684\u5939\u89d2\uff08\u65b9\u4f4d\u89d2\uff09</p> <p>\u4e09\u7ef4\u548c\u4e8c\u7ef4\u7684\u76f8\u5bf9\u6027\u533a\u522b\uff1a</p> <ul> <li>2D \u5e38\u7528\u76f8\u5bf9\u89d2\u5ea6\uff0c\u6bcf\u4e2a\u5173\u8282\u7684\u89d2\u5ea6\u8868\u793a\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u5173\u8282\u7684\u89d2\u5ea6</li> <li>3D \u5e38\u7528\u7edd\u5bf9\u89d2\u5ea6\uff0c\u6bcf\u4e2a\u5173\u8282\u7684\u89d2\u5ea6\u8868\u793a\u5728\u5168\u5c40\u5750\u6807\u7cfb\u4e2d\u7684\u65b9\u5411\uff0c\u89d2\u5ea6\u4e0d\u7528\u7d2f\u52a0</li> </ul> <p>\u5148\u4ece\\(theta\\)\u548c\\(phi\\)\u7684\u7403\u5750\u6807\u53d8\u6362\u5230\u7b1b\u5361\u5c14\u7cfb\uff0c\u5f97\u5230\u65b9\u5411\u5411\u91cf d\uff1a</p> \\[ \\vec{d}=\\begin{bmatrix} \\sin\\theta\\cos\\phi \\\\ \\sin\\theta\\sin\\phi \\\\ \\cos\\theta \\end{bmatrix} \\] <p>\u6bcf\u4e2a\u5173\u8282\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u5173\u8282\u7684\u79fb\u52a8\u91cf\u4e3a\u65b9\u5411 d \u4e58\u6807\u91cf\u957f\u5ea6</p> <p>\u4ee3\u7801\uff1a</p> Python<pre><code>def forward_kinematics(angles_rad):\n    positions = [np.array([0.0, 0.0, 0.0])]  # \u672b\u7aef\u4f4d\u7f6e\u521d\u59cb\u5316\n    current_pos = np.array([0.0, 0.0, 0.0])  # \u5f53\u524d\u5173\u8282\u4f4d\u7f6e\n\n    # \u904d\u5386\u6bcf\u4e2a\u5173\u8282\n    for i in range(n_links):\n        # \u83b7\u53d6\u5f53\u524d\u5173\u8282\u7684theta\u548cphi\u89d2\u5ea6\n        theta, phi = angles_rad[i]\n\n        # \u8ba1\u7b97\u65b9\u5411\u5411\u91cf (\u4f7f\u7528\u7403\u5750\u6807\u5230\u7b1b\u5361\u5c14\u5750\u6807\u7684\u8f6c\u6362)\n        direction = np.array([\n            np.sin(theta) * np.cos(phi),\n            np.sin(theta) * np.sin(phi),\n            np.cos(theta)\n        ])\n\n        # \u8ba1\u7b97\u65b0\u7684\u4f4d\u7f6e\n        displacement = link_lengths[i] * direction\n        current_pos += displacement  # \u66f4\u65b0\u672b\u7aef\u4f4d\u7f6e\n        positions.append(current_pos.copy())\n\n    return np.array(positions)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_6","title":"\u9006\u5411\u8fd0\u52a8\u5b66\uff08\u4e8c\u7ef4\u673a\u68b0\u81c2\uff09","text":"<p>\u9006\u5411\u8fd0\u52a8\u5b66\uff1a\u5df2\u77e5\u672b\u7aef\u4f4d\u7f6e\uff0c\u6c42\u6bcf\u4e2a\u5173\u8282\u7684\u89d2\u5ea6</p>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_7","title":"\u51e0\u4f55\u6cd5\uff08\u4e24\u8282\u4e3a\u4f8b\uff09","text":"<p>\u5206\u522b\u4ee5\u8f74\u7ebf\u3001\u672b\u7aef\u76ee\u6807\u4f4d\u7f6e\u4e3a\u5706\u5fc3\uff0c\u4ee5\u7b2c\u4e00\u3001\u7b2c\u4e8c\u6bb5\u673a\u68b0\u81c2\u957f\u5ea6\u4e3a\u534a\u5f84\u753b\u5706\uff0c\u4e24\u4e2a\u5706\u4ea4\u70b9\u4e3a\u5173\u8282\u7684\u4f4d\u7f6e\u3002</p> \\[ \\begin{cases} \\begin{align*} a^2+h^2&amp;=l_1^2 \\\\ (d-a)^2+h^2&amp;=l_2^2 \\end{align*} \\end{cases} \\] \\[d^2+2ad=l_2^2-l_1^2\\] \\[ a=\\frac{l_2^2-l_1^2-d^2}{2d}\\] <p>\u4ee3\u7801\uff1a</p> Python<pre><code>def inverse_kinematics_geom(target, elbow_up=True, ax=None):\n    global warning_text\n    x, y = target\n    d = np.sqrt(x ** 2 + y ** 2)\n\n    # \u68c0\u67e5\u662f\u5426\u53ef\u8fbe\n    if d &gt; l1 + l2:\n        # \u7f29\u653e\u76ee\u6807\u70b9\n        scale = (l1 + l2) / d\n        x *= scale\n        y *= scale\n        d = l1 + l2\n        # \u663e\u793a\u7ea2\u8272\u8b66\u544a\n        if ax is not None:\n            if warning_text is not None:\n                warning_text.remove()\n            warning_text = ax.text(0.5, 0.95, \"Cannot reach!\", color='red',\n                                   fontsize=14, ha='center', va='top',\n                                   transform=ax.transAxes)\n    else:\n        if warning_text is not None:\n            warning_text.remove()\n            warning_text = None\n\n    # \u5706\u4ea4\u70b9\u516c\u5f0f\n    a = (l1 ** 2 - l2 ** 2 + d ** 2) / (2 * d)\n    h = np.sqrt(np.clip(l1 ** 2 - a ** 2, 0, None))\n    x2 = a * x / d\n    y2 = a * y / d\n    rx = -y * (h / d)\n    ry = x * (h / d)\n\n    if elbow_up:\n        joint = np.array([x2 + rx, y2 + ry])\n    else:\n        joint = np.array([x2 - rx, y2 - ry])\n\n    theta1 = np.arctan2(joint[1], joint[0])\n    theta2 = np.arctan2(y - joint[1], x - joint[0]) - theta1\n    return np.array([theta1, theta2]), joint\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_8","title":"\u68af\u5ea6\u4e0b\u964d\u6cd5","text":"<p>\u4ece\u521d\u59cb\u6761\u4ef6\u5f00\u59cb\uff0c\u5148\u7528\u6b63\u5411\u8fd0\u52a8\u5b66\u8ba1\u7b97\u5f53\u524d\u672b\u7aef\u4f4d\u7f6e\u3002</p> <p>\u8ba1\u7b97\u8bef\u5dee<code>error</code>\u4e3a\u76ee\u6807\u4f4d\u7f6e\u548c\u5f53\u524d\u672b\u7aef\u4f4d\u7f6e\u4e4b\u95f4\u7684\u504f\u5dee\u5411\u91cf\uff0c\u76ee\u7684\u662f\u4f7f\u8fd9\u4e2a\u91cf\u6700\u5c0f\u5316\u3002\u5f53\u8bef\u5dee\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\u65f6\u505c\u6b62\u8ba1\u7b97\u3002</p> <p>\u96c5\u53ef\u6bd4\u77e9\u9635<code>J</code>\u8868\u793a\u672b\u7aef\u4f4d\u7f6e\u5bf9\u5f53\u524d\u5173\u8282\u89d2\u5ea6\u7684\u504f\u5bfc\uff1a</p> \\[\\delta \\mathbf{p} = J \\cdot \\delta \\theta, \\quad J=\\frac{\\partial\\mathbf{p}}{\\partial \\theta}\\] <p>\u8ba1\u7b97\u96c5\u53ef\u6bd4\u77e9\u9635\u65b9\u6cd5\uff1a\u7ed9\u5f53\u524d\u89d2\u5ea6\u589e\u52a0\u5fae\u5c0f\u91cf<code>delta</code>\uff0c\u8ba1\u7b97\u672b\u7aef\u79fb\u52a8\u8ddd\u79bb\uff0c\u8ddd\u79bb/\u589e\u52a0\u7684\u89d2\u5ea6\u5f97\u5230\u96c5\u53ef\u6bd4\u77e9\u9635\u3002</p> <p><code>J</code>\u7684\u8f6c\u7f6e\u7528\u4e8e\u8868\u793a\u53cd\u5411\u4f20\u64ad\uff0c\u5373\u7528\u672b\u7aef\u4f4d\u7f6e\u53d8\u5316\u53cd\u5411\u8ba1\u7b97\u5f97\u5230\u6bcf\u4e2a\u5173\u8282\u7684\u89d2\u5ea6\u53d8\u5316\u3002</p> <p>\u5e0c\u671b\u6539\u53d8\u5c0f\u89d2\u5ea6\u540e\u4f7f\u8bef\u5dee\u5411\u91cf\u6700\u5c0f\uff0c\u5373\uff1a</p> \\[ \\mathrm{error}=J\\cdot \\mathrm{delta}\\] <p>\u68af\u5ea6\u4e0b\u964d\u6cd5\u66f4\u65b0\u89d2\u5ea6\uff1a\u89d2\u5ea6\u589e\u91cf = \u5b66\u4e60\u7387 * \u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8f6c\u7f6e\u548c\u8bef\u5dee\u5411\u91cf\u7684\u4e58\u79ef</p> <ul> <li>\u5b66\u4e60\u7387<code>lr</code>\uff1a\u51b3\u5b9a\u6bcf\u6b21\u8c03\u6574\u5173\u8282\u89d2\u5ea6\u7684\u6b65\u957f\u5927\u5c0f\uff0c\u6bcf\u6b21\u8ba1\u7b97\u589e\u91cf\u540e\u4e58\u5b66\u4e60\u7387\u8868\u793a\u5b9e\u9645\u8c03\u6574\u7684\u503c</li> <li>\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8f6c\u7f6e\u548c\u8bef\u5dee\u5411\u91cf\u7684\u4e58\u79ef<code>J.T@error</code>\uff1a\u5f97\u5230\u6bcf\u4e2a\u5173\u8282\u89d2\u5ea6\u7684\u8c03\u6574\u589e\u91cf</li> </ul> <p>\u4ee3\u7801\uff1a</p> Python<pre><code>def inverse_kinematics(target, initial_angles, lr=0.05, iterations=200):\n    angles = np.array(initial_angles, dtype=float)\n    for _ in range(iterations):\n        # \u8ba1\u7b97\u5f53\u524d\u672b\u7aef\u7684\u4f4d\u7f6e\n        positions = forward_kinematics(angles)\n        end_pos = positions[-1]\n\n        # \u8ba1\u7b97\u8bef\u5dee\n        error = target - end_pos\n        # \u8bef\u5dee\u5c0f\u4e8e\u9608\u503c\u65f6\u505c\u6b62\n        if np.linalg.norm(error) &lt; 1e-3:\n            break\n\n        # \u8ba1\u7b97\u96c5\u53ef\u6bd4\u77e9\u9635\uff0c\u7528\u4e8e\u4f18\u5316\n        J = np.zeros((2, n_links))\n        delta = 1e-5\n        for i in range(n_links):\n            # \u8ba1\u7b97\u504f\u5bfc\u6570\n            perturbed = angles.copy()\n            perturbed[i] += delta\n            new_pos = forward_kinematics(perturbed)[-1]\n            J[:, i] = (new_pos - end_pos) / delta\n\n        # \u89d2\u5ea6\u589e\u91cf=\u6b65\u957f*\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8f6c\u7f6e*\u504f\u5dee\n        d_theta = lr * J.T @ error\n        # \u66f4\u65b0\u89d2\u5ea6\n        angles += d_theta\n\n    return angles\n</code></pre> \u5b8c\u6574\u4ee3\u7801 Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.widgets import Button\nfrom matplotlib.widgets import Slider\n\nfrom matplotlib import rcParams\n\nrcParams['font.family'] = 'serif'\nrcParams['mathtext.fontset'] = 'cm'\nrcParams['axes.linewidth'] = 1.2\nrcParams['xtick.direction'] = 'in'\nrcParams['ytick.direction'] = 'in'\nrcParams['xtick.major.size'] = 6\nrcParams['ytick.major.size'] = 6\n\n# \u673a\u68b0\u81c2\u53c2\u6570\nlink_lengths = [2.0, 1.5, 1.0]\nn_links = len(link_lengths)\ntotal_len = 0\nfor l in link_lengths:\n    total_len += l\n\n\n# \u524d\u5411\u8fd0\u52a8\u5b66\ndef forward_kinematics(angles_rad):\n    positions = [np.array([0.0, 0.0])]\n    current_angle = 0.0\n    current_pos = np.array([0.0, 0.0])\n    for i in range(n_links):\n        current_angle += angles_rad[i]\n        dx = link_lengths[i] * np.cos(current_angle)\n        dy = link_lengths[i] * np.sin(current_angle)\n        current_pos = current_pos + np.array([dx, dy])\n        positions.append(current_pos.copy())\n    return np.array(positions)\n\n\n# \u9006\u5411\u8fd0\u52a8\u5b66\ndef inverse_kinematics(target, initial_angles, lr=0.05, iterations=200):\n    angles = np.array(initial_angles, dtype=float)\n    for _ in range(iterations):\n        # \u8ba1\u7b97\u5f53\u524d\u672b\u7aef\u7684\u4f4d\u7f6e\n        positions = forward_kinematics(angles)\n        end_pos = positions[-1]\n\n        # \u8ba1\u7b97\u8bef\u5dee\n        error = target - end_pos\n        # \u8bef\u5dee\u5c0f\u4e8e\u9608\u503c\u65f6\u505c\u6b62\n        if np.linalg.norm(error) &lt; 1e-3:\n            break\n\n        # \u8ba1\u7b97\u96c5\u53ef\u6bd4\u77e9\u9635\uff0c\u7528\u4e8e\u4f18\u5316\n        J = np.zeros((2, n_links))\n        delta = 1e-5\n        for i in range(n_links):\n            # \u8ba1\u7b97\u504f\u5bfc\u6570\n            perturbed = angles.copy()\n            perturbed[i] += delta\n            new_pos = forward_kinematics(perturbed)[-1]\n            J[:, i] = (new_pos - end_pos) / delta\n\n        # \u89d2\u5ea6\u589e\u91cf=\u6b65\u957f*\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u8f6c\u7f6e*\u504f\u5dee\n        d_theta = lr * J.T @ error\n        # \u66f4\u65b0\u89d2\u5ea6\n        angles += d_theta\n\n    return angles\n\n\n# \u7528\u672b\u7aef\u7ed8\u5236\u5706\ndef circle_trajectory(radius=2.0, points=100):\n    t = np.linspace(0, 2 * np.pi, points)\n    return np.vstack([radius * np.cos(t), radius * np.sin(t)]).T\n\n\n# \u7528\u672b\u7aef\u7ed8\u5236\u6b63\u65b9\u5f62\ndef square_trajectory(side=2.0, points=100):\n    half = side / 2\n    p = []\n    for t in np.linspace(-half, half, points // 4, endpoint=False):\n        p.append([t, -half])\n    for t in np.linspace(-half, half, points // 4, endpoint=False):\n        p.append([half, t])\n    for t in np.linspace(half, -half, points // 4, endpoint=False):\n        p.append([t, half])\n    for t in np.linspace(half, -half, points // 4, endpoint=False):\n        p.append([-half, t])\n    return np.array(p)\n\n\n# \u7528\u672b\u7aef\u7ed8\u5236\u4e94\u89d2\u661f\ndef star_trajectory(radius=1.0, points=100):\n    # \u4e94\u89d2\u661f\u9876\u70b9\u89d2\u5ea6\uff085\u4e2a\u9876\u70b9\uff09\n    angles = np.linspace(0, 2 * np.pi, 6)[:-1]  # 0~2pi\uff0c\u53bb\u6389\u91cd\u590d\u7684\u9876\u70b9\n    # \u4e94\u89d2\u661f\u8fde\u7ebf\u987a\u5e8f\uff08\u4e94\u89d2\u661f\u7684\u8df3\u7ebf\u987a\u5e8f\uff09\n    order = [0, 2, 4, 1, 3, 0]  # \u56de\u5230\u8d77\u70b9\n    # \u751f\u6210\u9876\u70b9\u5750\u6807\n    vertices = np.array([[radius * np.cos(angles[i]), radius * np.sin(angles[i])] for i in range(5)])\n\n    # \u751f\u6210\u8f68\u8ff9\u70b9\n    trajectory = []\n    points_per_edge = points // 5  # \u6bcf\u6761\u8fb9\u5206\u914d\u70b9\u6570\n    for i in range(5):\n        start = vertices[order[i]]\n        end = vertices[order[i + 1]]\n        for t in np.linspace(0, 1, points_per_edge, endpoint=False):\n            trajectory.append(start + t * (end - start))\n\n    return np.array(trajectory)\n\n\n# \u53ef\u89c6\u5316\nfig, ax = plt.subplots()\nplt.subplots_adjust(bottom=0.25)\n\narm_line, = ax.plot([], [], 'o-', lw=4, color='blue', label='Robot Arm')\ntarget_dot, = ax.plot([], [], 'rx', label='Target')\ntraj_line, = ax.plot([], [], 'g--', lw=1, label='Trajectory')  # \u8f68\u8ff9\u7ebf\n\nax.set_aspect('equal')\nax.grid(True)\nax.set_xlim(-6, 6)\nax.set_ylim(-6, 6)\nax.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))\nax.set_title(\"Inverse Kinematics\")\n\ncoord_text = ax.text(0.02, 0.95, \"\", transform=ax.transAxes, fontsize=10,\n                    verticalalignment='top', bbox=dict(facecolor='white', alpha=0.6))\n\n# \u7a97\u53e3\u63a7\u5236\nrunning = [False]\ntrajectory_type = ['circle']\ntrajectory = circle_trajectory()\nstep = [0]\nangles = [0.0, 0.0, 0.0]\nend_effector_history = []\n\n\ndef update_frame(frame):\n    if not running[0]:\n        return\n\n    idx = step[0] % len(trajectory)\n    target = trajectory[idx]\n    target_dot.set_data([target[0]], [target[1]])\n\n    new_angles = inverse_kinematics(target, angles)\n    pos = forward_kinematics(new_angles)\n    arm_line.set_data(pos[:, 0], pos[:, 1])\n\n    # \u66f4\u65b0\u672b\u7aef\u8f68\u8ff9\n    end_effector_history.append(pos[-1])\n    traj_array = np.array(end_effector_history)\n    traj_line.set_data(traj_array[:, 0], traj_array[:, 1])\n\n    coord_text.set_text(f\"Step: {step[0]}\\nTarget: ({target[0]:.2f}, {target[1]:.2f})\")\n    angles[:] = new_angles\n    step[0] += 1\n    fig.canvas.draw_idle()\n    fig.canvas.start_event_loop(0.05)\n\n\ndef start(event):\n    running[0] = True\n    while running[0]:\n        update_frame(None)\n\n\ndef stop(event):\n    running[0] = False\n\n\ndef switch(event):\n    size = size_slider.val  # \u83b7\u53d6\u5f53\u524d\u6ed1\u52a8\u6761\u503c\n    if trajectory_type[0] == 'circle':\n        trajectory_type[0] = 'square'\n        trajectory[:] = square_trajectory(side=size)\n    elif trajectory_type[0] == 'square':\n        trajectory_type[0] = 'star'\n        trajectory[:] = star_trajectory(radius=size)\n    else:\n        trajectory_type[0] = 'circle'\n        trajectory[:] = circle_trajectory(radius=size)\n\n    # \u91cd\u7f6e\u72b6\u6001\n    step[0] = 0\n    angles[:] = [0.0, 0.0, 0.0]\n    end_effector_history.clear()\n    arm_line.set_data([], [])\n    traj_line.set_data([], [])\n    target_dot.set_data([], [])\n\n\n# \u6309\u94ae\u8bbe\u7f6e\nstart_ax = plt.axes([0.1, 0.05, 0.1, 0.04])\nstop_ax = plt.axes([0.25, 0.05, 0.1, 0.04])\nswitch_ax = plt.axes([0.4, 0.05, 0.2, 0.04])\nstart_btn = Button(start_ax, 'Start', color='lightgreen', hovercolor='lime')\nstop_btn = Button(stop_ax, 'Stop', color='lightcoral', hovercolor='red')\nswitch_btn = Button(switch_ax, 'Switch Trajectory', color='lightblue', hovercolor='skyblue')\n\nstart_btn.on_clicked(start)\nstop_btn.on_clicked(stop)\nswitch_btn.on_clicked(switch)\n\n# \u6ed1\u52a8\u6761\u8bbe\u7f6e\nsize_ax = plt.axes([0.65, 0.05, 0.25, 0.03])\nsize_slider = Slider(size_ax, 'Size', 0.5, 6.0, valinit=2.0)  # \u6700\u5c0f0.5\uff0c\u6700\u59274\uff0c\u521d\u59cb2\n\n\ndef update_size(val):\n    size = size_slider.val\n    # \u6e05\u9664\u4e4b\u524d\u7684\u8b66\u544a\u6587\u5b57\n    if hasattr(update_size, \"warning_text\") and update_size.warning_text:\n        update_size.warning_text.remove()\n        update_size.warning_text = None\n\n    # \u5982\u679c size \u8d85\u8fc7\u603b\u957f\u5ea6\uff0c\u663e\u793a\u7ea2\u8272\u63d0\u793a\n    if size &gt; total_len:\n        update_size.warning_text = ax.text(0.5, 0.95, 'Too long!', color='red',\n                                        fontsize=12, ha='center', va='top',\n                                        transform=ax.transAxes)\n    else:\n        update_size.warning_text = None\n\n    if trajectory_type[0] == 'circle':\n        trajectory[:] = circle_trajectory(radius=size)\n    elif trajectory_type[0] == 'square':\n        trajectory[:] = square_trajectory(side=size)\n    elif trajectory_type[0] == 'star':\n        trajectory[:] = star_trajectory(radius=size)\n    step[0] = 0\n    end_effector_history.clear()\n\n\nsize_slider.on_changed(update_size)\n\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_9","title":"\u89e3\u6790\u6cd5","text":"<p>\u5217\u6570\u5b66\u8868\u8fbe\u5f0f\u6c42\u89e3</p> <p>\u4ee3\u7801\uff1a\u7565 \u5176\u5b9e\u662f ai \u5199\u7684\u6709 bug\uff0c\u4e0d\u653e\u8fd9\u91cc\u4e86</p>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_10","title":"\u6709\u9650\u5dee\u5206\u6cd5","text":"<p>\u6709\u9650\u5dee\u5206\u6cd5\uff08FDM\uff09\u7528\u4e8e\u8ba1\u7b97\u68af\u5ea6</p> <p>\u6709\u9650\u5dee\u5206\u6cd5\u7528\u4e8e\u6570\u503c\u8ba1\u7b97\u5bfc\u6570\uff0c\u5b83\u901a\u8fc7\u8ba1\u7b97\u51fd\u6570\u503c\u7684\u53d8\u5316\u7387\u6765\u8fd1\u4f3c\u5bfc\u6570\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\)\uff0c\u5176\u5bfc\u6570 \\(f'(x)\\) \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u516c\u5f0f\u8fdb\u884c\u8fd1\u4f3c\uff1a</p> <ul> <li>\u524d\u5411\u5dee\u5206\u6cd5\uff1a</li> </ul> \\[ f'(x) \\approx \\frac{f(x + h) - f(x)}{h} \\] <ul> <li>\u540e\u5411\u5dee\u5206\u6cd5\uff1a</li> </ul> \\[ f'(x) \\approx \\frac{f(x) - f(x - h)}{h} \\] <ul> <li>\u4e2d\u5fc3\u5dee\u5206\u6cd5\uff08\u7cbe\u5ea6\u66f4\u9ad8\uff09\uff1a</li> </ul> \\[ f'(x) \\approx \\frac{f(x + h) - f(x - h)}{2h} \\] <p>\u5176\u4e2d \\(h\\) \u662f\u4e00\u4e2a\u5c0f\u7684\u589e\u91cf\uff0c\u901a\u5e38\u9009\u53d6\u975e\u5e38\u5c0f\u7684\u6570\u503c\uff08\u5982 \\(h = 1e-6\\)\uff09\u3002</p> <p>Pros\uff1a</p> <ul> <li>\u5b9e\u73b0\u7b80\u5355\uff1a\u9002\u7528\u4e8e\u6ca1\u6709\u590d\u6742\u5fae\u5206\u5de5\u5177\u7684\u60c5\u51b5\u3002</li> <li>\u901a\u7528\u6027\u5f3a\uff1a\u53ef\u4ee5\u7528\u6765\u8fd1\u4f3c\u4efb\u4f55\u7c7b\u578b\u7684\u51fd\u6570\u7684\u5bfc\u6570\u3002</li> </ul> <p>Cons\uff1a</p> <ul> <li>\u6548\u7387\u8f83\u4f4e\uff1a\u6bcf\u6b21\u8ba1\u7b97\u5bfc\u6570\u90fd\u9700\u8981\u591a\u6b21\u8ba1\u7b97\u51fd\u6570\u503c\uff0c\u5c24\u5176\u5728\u591a\u7ef4\u95ee\u9898\u4e2d\u4f1a\u975e\u5e38\u4f4e\u6548\u3002</li> <li>\u7cbe\u5ea6\u53d7\u9650\uff1a\u53d6 \\(h\\) \u7684\u503c\u65f6\u9700\u8981\u6743\u8861\u8ba1\u7b97\u7cbe\u5ea6\u4e0e\u6570\u503c\u7a33\u5b9a\u6027\uff0c\u4e14\u53ef\u80fd\u5f15\u5165\u6570\u503c\u8bef\u5dee\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_11","title":"\u81ea\u52a8\u5fae\u5206\u6cd5","text":"<p>\u81ea\u52a8\u5fae\u5206\u6cd5\u540c\u6837\u7528\u4e8e\u8ba1\u7b97\u51fd\u6570\u7684\u5bfc\u6570\u6216\u68af\u5ea6\uff0c\u53ef\u8c03\u7528 python \u4e2d autograd \u6216 jax</p> <p>\u4e0b\u9762\u4e3a jax \u7684\u7248\u672c\uff0c\u5176\u4e2d<code>loss_fn</code>\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u5e0c\u671b\u4f7f\u8fd9\u4e2a\u503c\u6700\u5c0f\u3002</p> <p>\u4ee3\u7801\uff1a</p> Python<pre><code># \u524d\u5411\u8fd0\u52a8\u5b66 (jax \u7248\u672c)\ndef forward_kinematics_jax(angles):\n    positions = [jnp.array([0.0, 0.0])]\n    current_angle = 0.0\n    current_pos = jnp.array([0.0, 0.0])\n    for i in range(n_links):\n        current_angle += angles[i]\n        dx = link_lengths[i] * jnp.cos(current_angle)\n        dy = link_lengths[i] * jnp.sin(current_angle)\n        current_pos = current_pos + jnp.array([dx, dy])\n        positions.append(current_pos)\n    return jnp.stack(positions)\n\n# \u9006\u5411\u8fd0\u52a8\u5b66 (jax\u81ea\u52a8\u5fae\u5206)\ndef inverse_kinematics_autodiff(target, initial_angles, lr=0.05, iterations=200):\n    angles = jnp.array(initial_angles, dtype=float)\n\n    # \u635f\u5931\u51fd\u6570\uff1a\u672b\u7aef\u6267\u884c\u5668\u4e0e\u76ee\u6807\u70b9\u7684\u8ddd\u79bb\u5e73\u65b9\n    def loss_fn(angles):\n        end_pos = forward_kinematics_jax(angles)[-1]\n        return jnp.sum((end_pos - target) ** 2)\n\n    grad_fn = jax.grad(loss_fn)\n\n    for _ in range(iterations):\n        gradients = grad_fn(angles)\n        if jnp.linalg.norm(gradients) &lt; 1e-6:\n            break\n        angles = angles - lr * gradients\n\n    return np.array(angles)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/rigid-body%20kinematics/#_12","title":"\u521a\u4f53\u52a8\u529b\u5b66\uff08\u673a\u5668\u4eba\u4eff\u771f\uff09","text":"<p>\u7565</p> <p>\u4ee3\u7801\u8bf4\u660e\u89c1\u4e0b\u4e00\u4e2a\u6587\u4ef6\u201crigid_body \u4ee3\u7801\u8bf4\u660e\u201d \uff08ai \u53c2\u4e0e\uff0c\u4ec5\u4f9b\u53c2\u8003\uff09</p> rigid_body.py \u5b8c\u6574\u4ee3\u7801 Python<pre><code>from robot_config import robots\nimport sys\nimport taichi as ti\nimport math\nimport numpy as np\nimport os\nimport pickle\nimport cv2\n\nreal = ti.f32\nti.init(default_fp=real)\n\nmax_steps = 4096\nvis_interval = 256\noutput_vis_interval = 16\nsteps = 2048\nassert steps * 2 &lt;= max_steps\n\nvis_resolution = 1024\n\nscalar = lambda: ti.field(dtype=real)\nvec = lambda: ti.Vector.field(2, dtype=real)\n\nloss = scalar()\n\nuse_toi = False\n\nx = vec()\nv = vec()\nrotation = scalar()\n# angular velocity\nomega = scalar()\n\nhalfsize = vec()\n\ninverse_mass = scalar()\ninverse_inertia = scalar()\n\nv_inc = vec()\nx_inc = vec()\nrotation_inc = scalar()\nomega_inc = scalar()\n\nhead_id = 3\ngoal = vec()\n\nn_objects = 0\n# target_ball = 0\nelasticity = 0.0\nground_height = 0.1\ngravity = -9.8\nfriction = 1.0\npenalty = 1e4\ndamping = 10\n\ngradient_clip = 30\nspring_omega = 30\ndefault_actuation = 0.05\n\nn_springs = 0\nspring_anchor_a = ti.field(ti.i32)\nspring_anchor_b = ti.field(ti.i32)\n# spring_length = -1 means it is a joint\nspring_length = scalar()\nspring_offset_a = vec()\nspring_offset_b = vec()\nspring_phase = scalar()\nspring_actuation = scalar()\nspring_stiffness = scalar()\n\nn_sin_waves = 10\n\nn_hidden = 32\nweights1 = scalar()\nbias1 = scalar()\nhidden = scalar()\nweights2 = scalar()\nbias2 = scalar()\nactuation = scalar()\n\n\ndef n_input_states():\n    return n_sin_waves + 6 * n_objects + 2\n\n\ndef allocate_fields():\n    ti.root.dense(ti.i,\n                max_steps).dense(ti.j,\n                                n_objects).place(x, v, rotation,\n                                                    rotation_inc, omega, v_inc,\n                                                    x_inc, omega_inc)\n    ti.root.dense(ti.i, n_objects).place(halfsize, inverse_mass,\n                                        inverse_inertia)\n    ti.root.dense(ti.i, n_springs).place(spring_anchor_a, spring_anchor_b,\n                                        spring_length, spring_offset_a,\n                                        spring_offset_b, spring_stiffness,\n                                        spring_phase, spring_actuation)\n    ti.root.dense(ti.ij, (n_hidden, n_input_states())).place(weights1)\n    ti.root.dense(ti.ij, (n_springs, n_hidden)).place(weights2)\n    ti.root.dense(ti.i, n_hidden).place(bias1)\n    ti.root.dense(ti.i, n_springs).place(bias2)\n    ti.root.dense(ti.ij, (max_steps, n_springs)).place(actuation)\n    ti.root.dense(ti.ij, (max_steps, n_hidden)).place(hidden)\n    ti.root.place(loss, goal)\n    ti.root.lazy_grad()\n\n\ndt = 0.001\nlearning_rate = 1.0\n\n\n@ti.kernel\ndef nn1(t: ti.i32):\n    for i in range(n_hidden):\n        actuation = 0.0\n        for j in ti.static(range(n_sin_waves)):\n            actuation += weights1[i, j] * ti.sin(spring_omega * t * dt +\n                                                2 * math.pi / n_sin_waves * j)\n        for j in ti.static(range(n_objects)):\n            offset = x[t, j] - x[t, head_id]\n            # use a smaller weight since there are too many of them\n            actuation += weights1[i, j * 6 + n_sin_waves] * offset[0] * 0.05\n            actuation += weights1[i,\n                                j * 6 + n_sin_waves + 1] * offset[1] * 0.05\n            actuation += weights1[i, j * 6 + n_sin_waves + 2] * v[t,\n                                                                j][0] * 0.05\n            actuation += weights1[i, j * 6 + n_sin_waves + 3] * v[t,\n                                                                j][1] * 0.05\n            actuation += weights1[i, j * 6 + n_sin_waves +\n                                4] * rotation[t, j] * 0.05\n            actuation += weights1[i, j * 6 + n_sin_waves + 5] * omega[t,\n                                                                    j] * 0.05\n\n        actuation += weights1[i, n_objects * 6 + n_sin_waves] * goal[None][0]\n        actuation += weights1[i,\n                            n_objects * 6 + n_sin_waves + 1] * goal[None][1]\n        actuation += bias1[i]\n        actuation = ti.tanh(actuation)\n        hidden[t, i] = actuation\n\n\n@ti.kernel\ndef nn2(t: ti.i32):\n    for i in range(n_springs):\n        act = 0.0\n        for j in ti.static(range(n_hidden)):\n            act += weights2[i, j] * hidden[t, j]\n        act += bias2[i]\n        act = ti.tanh(act)\n        actuation[t, i] = act\n\n\n@ti.func\ndef rotation_matrix(r):\n    return ti.Matrix([[ti.cos(r), -ti.sin(r)], [ti.sin(r), ti.cos(r)]])\n\n\n@ti.kernel\ndef initialize_properties():\n    for i in range(n_objects):\n        inverse_mass[i] = 1.0 / (4 * halfsize[i][0] * halfsize[i][1])\n        inverse_inertia[i] = 1.0 / (4 / 3 * halfsize[i][0] * halfsize[i][1] *\n                                    (halfsize[i][0] * halfsize[i][0] +\n                                    halfsize[i][1] * halfsize[i][1]))\n\n\n@ti.func\ndef to_world(t, i, rela_x):\n    rot = rotation[t, i]\n    rot_matrix = rotation_matrix(rot)\n\n    rela_pos = rot_matrix @ rela_x\n    rela_v = omega[t, i] * ti.Vector([-rela_pos[1], rela_pos[0]])\n\n    world_x = x[t, i] + rela_pos\n    world_v = v[t, i] + rela_v\n\n    return world_x, world_v, rela_pos\n\n\n@ti.func\ndef apply_impulse(t, i, impulse, location, toi_input):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    delta_v = impulse * inverse_mass[i]\n    delta_omega = (location - x[t, i]).cross(impulse) * inverse_inertia[i]\n\n    toi = ti.min(ti.max(0.0, toi_input), dt)\n\n    ti.atomic_add(x_inc[t + 1, i], toi * (-delta_v))\n    ti.atomic_add(rotation_inc[t + 1, i], toi * (-delta_omega))\n\n    ti.atomic_add(v_inc[t + 1, i], delta_v)\n    ti.atomic_add(omega_inc[t + 1, i], delta_omega)\n\n\n@ti.kernel\ndef collide(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    for i in range(n_objects):\n        hs = halfsize[i]\n        for k in ti.static(range(4)):\n            # the corner for collision detection\n            offset_scale = ti.Vector([k % 2 * 2 - 1, k // 2 % 2 * 2 - 1])\n\n            corner_x, corner_v, rela_pos = to_world(t, i, offset_scale * hs)\n            corner_v = corner_v + dt * gravity * ti.Vector([0.0, 1.0])\n\n            # Apply impulse so that there's no sinking\n            normal = ti.Vector([0.0, 1.0])\n            tao = ti.Vector([1.0, 0.0])\n\n            rn = rela_pos.cross(normal)\n            rt = rela_pos.cross(tao)\n            impulse_contribution = inverse_mass[i] + (rn) ** 2 * \\\n                                inverse_inertia[i]\n            timpulse_contribution = inverse_mass[i] + (rt) ** 2 * \\\n                                    inverse_inertia[i]\n\n            rela_v_ground = normal.dot(corner_v)\n\n            impulse = 0.0\n            timpulse = 0.0\n            new_corner_x = corner_x + dt * corner_v\n            toi = 0.0\n            if rela_v_ground &lt; 0 and new_corner_x[1] &lt; ground_height:\n                impulse = -(1 +\n                            elasticity) * rela_v_ground / impulse_contribution\n                if impulse &gt; 0:\n                    # friction\n                    timpulse = -corner_v.dot(tao) / timpulse_contribution\n                    timpulse = ti.min(friction * impulse,\n                                    ti.max(-friction * impulse, timpulse))\n                    if corner_x[1] &gt; ground_height:\n                        toi = -(corner_x[1] - ground_height) / ti.min(\n                            corner_v[1], -1e-3)\n\n            apply_impulse(t, i, impulse * normal + timpulse * tao,\n                        new_corner_x, toi)\n\n            penalty = 0.0\n            if new_corner_x[1] &lt; ground_height:\n                # apply penalty\n                penalty = -dt * penalty * (\n                    new_corner_x[1] - ground_height) / impulse_contribution\n\n            apply_impulse(t, i, penalty * normal, new_corner_x, 0)\n\n\n@ti.kernel\ndef apply_spring_force(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    for i in range(n_springs):\n        a = spring_anchor_a[i]\n        b = spring_anchor_b[i]\n        pos_a, vel_a, rela_a = to_world(t, a, spring_offset_a[i])\n        pos_b, vel_b, rela_b = to_world(t, b, spring_offset_b[i])\n        dist = pos_a - pos_b\n        length = dist.norm() + 1e-4\n\n        act = actuation[t, i]\n\n        is_joint = spring_length[i] == -1\n\n        target_length = spring_length[i] * (1.0 + spring_actuation[i] * act)\n        if is_joint:\n            target_length = 0.0\n        impulse = dt * (length -\n                        target_length) * spring_stiffness[i] / length * dist\n\n        if is_joint:\n            rela_vel = vel_a - vel_b\n            rela_vel_norm = rela_vel.norm() + 1e-1\n            impulse_dir = rela_vel / rela_vel_norm\n            impulse_contribution = inverse_mass[a] + \\\n            impulse_dir.cross(rela_a) ** 2 * inverse_inertia[\n                                    a] + inverse_mass[b] + impulse_dir.cross(rela_b) ** 2 * \\\n                                inverse_inertia[\n                                    b]\n            # project relative velocity\n            impulse += rela_vel_norm / impulse_contribution * impulse_dir\n\n        apply_impulse(t, a, -impulse, pos_a, 0.0)\n        apply_impulse(t, b, impulse, pos_b, 0.0)\n\n\n@ti.kernel\ndef advance_toi(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    for i in range(n_objects):\n        s = math.exp(-dt * damping)\n        v[t, i] = s * v[t - 1, i] + v_inc[t, i] + dt * gravity * ti.Vector(\n            [0.0, 1.0])\n        x[t, i] = x[t - 1, i] + dt * v[t, i] + x_inc[t, i]\n        omega[t, i] = s * omega[t - 1, i] + omega_inc[t, i]\n        rotation[t, i] = rotation[t - 1,\n                                i] + dt * omega[t, i] + rotation_inc[t, i]\n\n@ti.kernel\ndef compute_loss(t: ti.i32):\n    loss[None] = (x[t, head_id] - goal[None]).norm()\n\n\ngui = ti.GUI('Rigid Body Simulation', (512, 512), background_color=0xFFFFFF)\n\n\ndef forward(output=None, visualize=True):\n    initialize_properties()\n\n    interval = vis_interval\n    total_steps = steps\n    if output:\n        print(output)\n        interval = output_vis_interval\n        file = f'results/{output}'\n        path = os.path.join(dir_path, file)\n        os.makedirs(path, exist_ok=True)\n        total_steps *= 2\n\n    goal[None] = [0.9, 0.15]\n    for t in range(1, total_steps):\n        nn1(t - 1)\n        nn2(t - 1)\n        collide(t - 1)\n        apply_spring_force(t - 1)\n        advance_toi(t)\n\n\n        if (t + 1) % interval == 0 and visualize:\n\n            for i in range(n_objects):\n                points = []\n                for k in range(4):\n                    offset_scale = [[-1, -1], [1, -1], [1, 1], [-1, 1]][k]\n                    rot = rotation[t, i]\n                    rot_matrix = np.array([[math.cos(rot), -math.sin(rot)],\n                                        [math.sin(rot),\n                                            math.cos(rot)]])\n\n                    pos = np.array([x[t, i][0], x[t, i][1]\n                                    ]) + offset_scale * rot_matrix @ np.array(\n                                        [halfsize[i][0], halfsize[i][1]])\n\n                    points.append((pos[0], pos[1]))\n\n                for k in range(4):\n                    gui.line(points[k],\n                            points[(k + 1) % 4],\n                            color=0x0,\n                            radius=2)\n\n            for i in range(n_springs):\n\n                def get_world_loc(i, offset):\n                    rot = rotation[t, i]\n                    rot_matrix = np.array([[math.cos(rot), -math.sin(rot)],\n                                        [math.sin(rot),\n                                            math.cos(rot)]])\n                    pos = np.array([[x[t, i][0]], [\n                        x[t, i][1]\n                    ]]) + rot_matrix @ np.array([[offset[0]], [offset[1]]])\n                    return pos\n\n                pt1 = get_world_loc(spring_anchor_a[i], spring_offset_a[i])\n                pt2 = get_world_loc(spring_anchor_b[i], spring_offset_b[i])\n\n                color = 0xFF2233\n\n                if spring_actuation[i] != 0 and spring_length[i] != -1:\n                    a = actuation[t - 1, i] * 0.5\n                    color = ti.rgb_to_hex((0.5 + a, 0.5 - abs(a), 0.5 - a))\n\n                if spring_length[i] == -1:\n                    gui.line(pt1, pt2, color=0x000000, radius=9)\n                    gui.line(pt1, pt2, color=color, radius=7)\n                else:\n                    gui.line(pt1, pt2, color=0x000000, radius=7)\n                    gui.line(pt1, pt2, color=color, radius=5)\n\n            gui.line((0.05, ground_height - 5e-3),\n                    (0.95, ground_height - 5e-3),\n                    color=0x0,\n                    radius=5)\n\n            path = None\n            if output:\n                file = f'results/{output}/{t:04d}.png'\n                path = os.path.join(dir_path, file)\n            if path:\n                img = gui.get_image()\n                img_u8 = (np.clip(img, 0, 1) * 255).astype(np.uint8)\n                img_u8 = cv2.rotate(img_u8, cv2.ROTATE_90_COUNTERCLOCKWISE)\n                _, buf = cv2.imencode('.png', img_u8)\n                with open(path, \"wb\") as f:\n                    buf.tofile(f)  # \u8fd9\u4e2a\u5199\u6cd5\u652f\u6301\u4e2d\u6587\u8def\u5f84\n            gui.show()\n\n    loss[None] = 0\n    compute_loss(steps - 1)\n\n\n@ti.kernel\ndef clear_states():\n    for t in range(0, max_steps):\n        for i in range(0, n_objects):\n            v_inc[t, i] = ti.Vector([0.0, 0.0])\n            x_inc[t, i] = ti.Vector([0.0, 0.0])\n            rotation_inc[t, i] = 0.0\n            omega_inc[t, i] = 0.0\n\n\ndef setup_robot(objects, springs, h_id):\n    global head_id\n    head_id = h_id\n    global n_objects, n_springs\n    n_objects = len(objects)\n    n_springs = len(springs)\n    allocate_fields()\n\n    print('n_objects=', n_objects, '   n_springs=', n_springs)\n\n    for i in range(n_objects):\n        x[0, i] = objects[i][0]\n        halfsize[i] = objects[i][1]\n        rotation[0, i] = objects[i][2]\n\n    for i in range(n_springs):\n        s = springs[i]\n        spring_anchor_a[i] = s[0]\n        spring_anchor_b[i] = s[1]\n        spring_offset_a[i] = s[2]\n        spring_offset_b[i] = s[3]\n        spring_length[i] = s[4]\n        spring_stiffness[i] = s[5]\n        if s[6]:\n            spring_actuation[i] = s[6]\n        else:\n            spring_actuation[i] = default_actuation\n\n\ndef optimize(visualize=True):\n    for i in range(n_hidden):\n        for j in range(n_input_states()):\n            weights1[i, j] = np.random.randn() * math.sqrt(\n                2 / (n_hidden + n_input_states())) * 0.5\n\n    for i in range(n_springs):\n        for j in range(n_hidden):\n            # TODO: n_springs should be n_actuators\n            weights2[i, j] = np.random.randn() * math.sqrt(\n                2 / (n_hidden + n_springs)) * 1\n\n    losses = []\n    for iter in range(20):\n        clear_states()\n\n        with ti.ad.Tape(loss):\n            forward(visualize=visualize)\n\n        print('Iter=', iter, 'Loss=', loss[None])\n\n        total_norm_sqr = 0\n        for i in range(n_hidden):\n            for j in range(n_input_states()):\n                total_norm_sqr += weights1.grad[i, j]**2\n            total_norm_sqr += bias1.grad[i]**2\n\n        for i in range(n_springs):\n            for j in range(n_hidden):\n                total_norm_sqr += weights2.grad[i, j]**2\n            total_norm_sqr += bias2.grad[i]**2\n\n        print(total_norm_sqr)\n\n        gradient_clip = 0.2\n        scale = learning_rate * min(\n            1.0, gradient_clip / (total_norm_sqr**0.5 + 1e-4))\n        for i in range(n_hidden):\n            for j in range(n_input_states()):\n                weights1[i, j] -= scale * weights1.grad[i, j]\n            bias1[i] -= scale * bias1.grad[i]\n\n        for i in range(n_springs):\n            for j in range(n_hidden):\n                weights2[i, j] -= scale * weights2.grad[i, j]\n            bias2[i] -= scale * bias2.grad[i]\n\n        losses.append(loss[None])\n    return losses\n\ndef main():\n    setup_robot(*robots[robot_id]())\n\n    if cmd == 'plot':\n        ret = {}\n        for toi in [False, True]:\n            ret[toi] = []\n            for i in range(5):\n                losses = optimize(toi=toi, visualize=False)\n                ret[toi].append(losses)\n        path = os.path.join(dir_path, 'losses.pkl')\n        pickle.dump(ret, open(path, 'wb'))\n        print(f\"Losses saved to {path}\")\n    else:\n        optimize(visualize=True)\n\n    clear_states()\n    forward('final{}'.format(robot_id), visualize=True)\n\n\nif __name__ == '__main__':\n    dir_path = os.path.dirname(os.path.realpath(__file__))\n    robot_id = 1 # robot_id=0, 1, 2\n    cmd = 'train' # train/plot\n    main()\n</code></pre> robot_config.py \u5b8c\u6574\u4ee3\u7801 Python<pre><code>import math\n\nobjects = []\nsprings = []\n\n\ndef add_object(x, halfsize, rotation=0):\n    objects.append([x, halfsize, rotation])\n    return len(objects) - 1\n\n\n# actuation 0.0 will be translated into default actuation\ndef add_spring(a, b, offset_a, offset_b, length, stiffness, actuation=0.0):\n    springs.append([a, b, offset_a, offset_b, length, stiffness, actuation])\n\n\ndef robotA():\n    add_object(x=[0.3, 0.25], halfsize=[0.15, 0.03])\n    add_object(x=[0.2, 0.15], halfsize=[0.03, 0.02])\n    add_object(x=[0.3, 0.15], halfsize=[0.03, 0.02])\n    add_object(x=[0.4, 0.15], halfsize=[0.03, 0.02])\n    add_object(x=[0.4, 0.3], halfsize=[0.005, 0.03])\n\n    l = 0.12\n    s = 15\n    add_spring(0, 1, [-0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 1, [-0.1, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 2, [-0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 2, [0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 3, [0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 3, [0.1, 0.00], [0.0, 0.0], l, s)\n    # -1 means the spring is a joint\n    add_spring(0, 4, [0.1, 0], [0, -0.05], -1, s)\n\n    return objects, springs, 0\n\n\ndef robotC():\n    add_object(x=[0.3, 0.25], halfsize=[0.15, 0.03])\n    add_object(x=[0.2, 0.15], halfsize=[0.03, 0.02])\n    add_object(x=[0.3, 0.15], halfsize=[0.03, 0.02])\n    add_object(x=[0.4, 0.15], halfsize=[0.03, 0.02])\n\n    l = 0.12\n    s = 15\n    add_spring(0, 1, [-0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 1, [-0.1, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 2, [-0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 2, [0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 3, [0.03, 0.00], [0.0, 0.0], l, s)\n    add_spring(0, 3, [0.1, 0.00], [0.0, 0.0], l, s)\n\n    return objects, springs, 3\n\n\nl_thigh_init_ang = 10\nl_calf_init_ang = -10\nr_thigh_init_ang = 10\nr_calf_init_ang = -10\ninitHeight = 0.15\n\nhip_pos = [0.3, 0.5 + initHeight]\nthigh_half_length = 0.11\ncalf_half_length = 0.11\n\nfoot_half_length = 0.08\n\n\ndef rotAlong(half_length, deg, center):\n    ang = math.radians(deg)\n    return [\n        half_length * math.sin(ang) + center[0],\n        -half_length * math.cos(ang) + center[1]\n    ]\n\n\nhalf_hip_length = 0.08\n\n\ndef robotLeg():\n    #hip\n    add_object(hip_pos, halfsize=[0.06, half_hip_length])\n    hip_end = [hip_pos[0], hip_pos[1] - (half_hip_length - 0.01)]\n\n    #left\n    l_thigh_center = rotAlong(thigh_half_length, l_thigh_init_ang, hip_end)\n    l_thigh_end = rotAlong(thigh_half_length * 2.0, l_thigh_init_ang, hip_end)\n    add_object(l_thigh_center,\n            halfsize=[0.02, thigh_half_length],\n            rotation=math.radians(l_thigh_init_ang))\n    add_object(rotAlong(calf_half_length, l_calf_init_ang, l_thigh_end),\n            halfsize=[0.02, calf_half_length],\n            rotation=math.radians(l_calf_init_ang))\n    l_calf_end = rotAlong(2.0 * calf_half_length, l_calf_init_ang, l_thigh_end)\n    add_object([l_calf_end[0] + foot_half_length, l_calf_end[1]],\n            halfsize=[foot_half_length, 0.02])\n\n    #right\n    add_object(rotAlong(thigh_half_length, r_thigh_init_ang, hip_end),\n            halfsize=[0.02, thigh_half_length],\n            rotation=math.radians(r_thigh_init_ang))\n    r_thigh_end = rotAlong(thigh_half_length * 2.0, r_thigh_init_ang, hip_end)\n    add_object(rotAlong(calf_half_length, r_calf_init_ang, r_thigh_end),\n            halfsize=[0.02, calf_half_length],\n            rotation=math.radians(r_calf_init_ang))\n    r_calf_end = rotAlong(2.0 * calf_half_length, r_calf_init_ang, r_thigh_end)\n    add_object([r_calf_end[0] + foot_half_length, r_calf_end[1]],\n            halfsize=[foot_half_length, 0.02])\n\n    s = 200\n\n    thigh_relax = 0.9\n    leg_relax = 0.9\n    foot_relax = 0.7\n\n    thigh_stiff = 5\n    leg_stiff = 20\n    foot_stiff = 40\n\n    #left springs\n    add_spring(0, 1, [0, (half_hip_length - 0.01) * 0.4],\n            [0, -thigh_half_length],\n            thigh_relax * (2.0 * thigh_half_length + 0.22), thigh_stiff)\n    add_spring(1, 2, [0, thigh_half_length], [0, -thigh_half_length],\n            leg_relax * 4.0 * thigh_half_length, leg_stiff, 0.08)\n    add_spring(\n        2, 3, [0, 0], [foot_half_length, 0],\n        foot_relax *\n        math.sqrt(pow(thigh_half_length, 2) + pow(2.0 * foot_half_length, 2)),\n        foot_stiff)\n\n    add_spring(0, 1, [0, -(half_hip_length - 0.01)], [0.0, thigh_half_length],\n            -1, s)\n    add_spring(1, 2, [0, -thigh_half_length], [0.0, thigh_half_length], -1, s)\n    add_spring(2, 3, [0, -thigh_half_length], [-foot_half_length, 0], -1, s)\n\n    #right springs\n    add_spring(0, 4, [0, (half_hip_length - 0.01) * 0.4],\n            [0, -thigh_half_length],\n            thigh_relax * (2.0 * thigh_half_length + 0.22), thigh_stiff)\n    add_spring(4, 5, [0, thigh_half_length], [0, -thigh_half_length],\n            leg_relax * 4.0 * thigh_half_length, leg_stiff, 0.08)\n    add_spring(\n        5, 6, [0, 0], [foot_half_length, 0],\n        foot_relax *\n        math.sqrt(pow(thigh_half_length, 2) + pow(2.0 * foot_half_length, 2)),\n        foot_stiff)\n\n    add_spring(0, 4, [0, -(half_hip_length - 0.01)], [0.0, thigh_half_length],\n            -1, s)\n    add_spring(4, 5, [0, -thigh_half_length], [0.0, thigh_half_length], -1, s)\n    add_spring(5, 6, [0, -thigh_half_length], [-foot_half_length, 0], -1, s)\n\n    return objects, springs, 3\n\n\ndef robotB():\n    body = add_object([0.15, 0.25], [0.1, 0.03])\n    back = add_object([0.08, 0.22], [0.03, 0.10])\n    front = add_object([0.22, 0.22], [0.03, 0.10])\n\n    rest_length = 0.22\n    stiffness = 50\n    act = 0.03\n    add_spring(body,\n            back, [0.08, 0.02], [0.0, -0.08],\n            rest_length,\n            stiffness,\n            actuation=act)\n    add_spring(body,\n            front, [-0.08, 0.02], [0.0, -0.08],\n            rest_length,\n            stiffness,\n            actuation=act)\n\n    add_spring(body, back, [-0.08, 0.0], [0.0, 0.03], -1, stiffness)\n    add_spring(body, front, [0.08, 0.0], [0.0, 0.03], -1, stiffness)\n\n    return objects, springs, body\n\n\nrobots = [robotA, robotB, robotLeg]\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/","title":"rigid_body\u4ee3\u7801\u8bf4\u660e","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1445 \u4e2a\u5b57\u00a0\u00a09 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#_1","title":"\u4e8c\u7ef4\u521a\u4f53\u52a8\u529b\u5b66\u4eff\u771f\u4ee3\u7801\u8bf4\u660e\u6587\u6863","text":"<p>\u6ce8\u610f</p> <p>Partly generated by chatgpt</p>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#1-apply_impulse","title":"1. <code>apply_impulse()</code>\u51fd\u6570","text":"<p>\u8fd9\u662f\u51b2\u91cf\u65bd\u52a0\u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u6307\u5b9a\u7269\u4f53\u65bd\u52a0\u51b2\u91cf\u5e76\u66f4\u65b0\u5176\u8fd0\u52a8\u72b6\u6001\u3002</p> <p>\u51fd\u6570\u4e2d\uff0c\u6839\u636e\u51b2\u91cf-\u52a8\u91cf\u5b9a\u7406\u8ba1\u7b97\u51b2\u91cf\u5bf9\u7269\u4f53\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\u7684\u5f71\u54cd\uff0c\u540c\u65f6\u8003\u8651\u51b2\u91cf\u4f5c\u7528\u70b9\u4ea7\u751f\u7684\u529b\u77e9\u6548\u5e94\u3002</p> <p>\u53e6\u5916\uff0c\u8fd8\u5904\u7406\u4e86\u78b0\u649e\u65f6\u95f4\u4fee\u6b63\uff08TOI\uff09\uff0c\u901a\u8fc7\u8c03\u6574\u7269\u4f53\u5728\u78b0\u649e\u65f6\u523b\u4e4b\u524d\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u89d2\u5ea6\u6765\u907f\u514d\u7a7f\u900f\u95ee\u9898\u3002</p> <p>\u6240\u6709\u7684\u72b6\u6001\u66f4\u65b0\u90fd\u901a\u8fc7\u539f\u5b50\u64cd\u4f5c\u7d2f\u52a0\u5230\u4e0b\u4e00\u65f6\u95f4\u6b65\u7684\u589e\u91cf\u6570\u7ec4\u4e2d\uff0c\u786e\u4fdd\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002</p> Python<pre><code>@ti.func\ndef apply_impulse(t, i, impulse, location, toi_input):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    \"\"\"\n    :param t: \u5f53\u524d\u65f6\u95f4\n    :param i: \u7269\u4f53\u7684\u7d22\u5f15\n    :param impulse: \u65bd\u52a0\u7684\u51b2\u91cf\u5411\u91cf\n    :param location: \u65bd\u52a0\u529b\u7684\u4e16\u754c\u5750\u6807\n    :param toi_input: \u78b0\u649e\u65f6\u95f4\u4fee\u6b63\uff0ctime of impact\n    :return:\n    \"\"\"\n    # 1. \u8ba1\u7b97\u589e\u91cf\n    \"\"\"\u901f\u5ea6\u7684\u589e\u91cf=\u51b2\u91cf/\u8d28\u91cf\"\"\"\n    delta_v = impulse * inverse_mass[i]\n\n    # location - x[t, i]\uff1a\u51b2\u91cf\u4f5c\u7528\u70b9\u5230\u7269\u4f53\u8d28\u5fc3\u7684\u5411\u91cf\uff08v\uff09\n    \"\"\"\u89d2\u901f\u5ea6\u7684\u589e\u91cf=v x \u51b2\u91cf\u5411\u91cf / \u8f6c\u52a8\u60ef\u91cf\"\"\"\n    delta_omega = (location - x[t, i]).cross(impulse) * inverse_inertia[i]\n\n    # \u4fdd\u8bc1TOI\u4e0d\u5c0f\u4e8e0\u3001\u4e0d\u5927\u4e8edt\uff0c\u907f\u514d\u51b2\u91cf\u8fc7\u5ea6\u65bd\u52a0\u5bfc\u81f4\u7269\u4f53\u4e0d\u7a33\u5b9a\n    toi = ti.min(ti.max(0.0, toi_input), dt)\n\n    # 2. \u66f4\u65b0\u53c2\u6570\n    # \u4fee\u6b63\u4f4d\u7f6e\n    # x_inc[t + 1, i]\uff1a\u4f4d\u7f6e\u589e\u91cf\uff1btoi * (-delta_v)\uff1a\u78b0\u649e\u65f6\u95f4\u524d\u4ea7\u751f\u7684\u4f4d\u79fb*\u4fee\u6b63\u4f4d\u7f6e\u65b9\u5411\n    ti.atomic_add(x_inc[t + 1, i], toi * (-delta_v))\n\n    # \u4fee\u6b63\u65cb\u8f6c\u89d2\u5ea6\n    ti.atomic_add(rotation_inc[t + 1, i], toi * (-delta_omega))\n\n    # \u628a\u51b2\u91cf\u5bf9\u901f\u5ea6\u7684\u5f71\u54cd\u52a0\u5230\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u901f\u5ea6\u589e\u91cf\u4e0a\n    ti.atomic_add(v_inc[t + 1, i], delta_v)\n\n    # \u628a\u51b2\u91cf\u5bf9\u89d2\u901f\u5ea6\u7684\u5f71\u54cd\u52a0\u5230\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u89d2\u901f\u5ea6\u589e\u91cf\u4e0a\n    ti.atomic_add(omega_inc[t + 1, i], delta_omega)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#2-collide","title":"2. <code>collide()</code>\u51fd\u6570","text":"<p>\u8fd9\u662f\u5730\u9762\u78b0\u649e\u68c0\u6d4b\u548c\u54cd\u5e94\u51fd\u6570\uff0c\u7528\u4e8e\u5904\u7406\u6240\u6709\u7269\u4f53\u4e0e\u5730\u9762\u7684\u78b0\u649e\u7269\u7406\u4eff\u771f\u3002</p> <p>\u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u7269\u4f53\u7684\u56db\u4e2a\u89d2\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u89d2\u70b9\u6267\u884c\u5b8c\u6574\u7684\u78b0\u649e\u68c0\u6d4b\u6d41\u7a0b\uff1a \u9996\u5148\u5e94\u7528\u91cd\u529b\u5f71\u54cd\u66f4\u65b0\u901f\u5ea6\uff0c\u7136\u540e\u68c0\u6d4b\u89d2\u70b9\u662f\u5426\u4f1a\u4e0e\u5730\u9762\u53d1\u751f\u78b0\u649e\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u78b0\u649e\u5219\u8ba1\u7b97\u5e76\u65bd\u52a0\u53cd\u5f39\u51b2\u91cf\u548c\u6469\u64e6\u529b\u3002</p> <p>\u51fd\u6570\u8fd8\u5305\u542b\u65f6\u95f4\u4fee\u6b63\u673a\u5236\u6765\u5904\u7406\u7a7f\u900f\u95ee\u9898\uff0c\u4ee5\u53ca\u7f5a\u51fd\u6570\u6cd5\u4f5c\u4e3a\u6700\u540e\u7684\u5b89\u5168\u7f51\u6765\u4fee\u590d\u4efb\u4f55\u6b8b\u7559\u7684\u6570\u503c\u8bef\u5dee\u5bfc\u81f4\u7684\u7a7f\u900f\u73b0\u8c61\u3002 \u6574\u4e2a\u8fc7\u7a0b\u786e\u4fdd\u7269\u4f53\u80fd\u591f\u771f\u5b9e\u5730\u5728\u5730\u9762\u4e0a\u53cd\u5f39\u3001\u6ed1\u52a8\u548c\u505c\u6b62\u3002</p> Python<pre><code>@ti.kernel\ndef collide(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    \"\"\"\n    :param t: \u5f53\u524d\u65f6\u95f4\u6b65\n    :return:\n    \"\"\"\n    # \u904d\u5386\u6240\u6709\u7269\u4f53i\n    for i in range(n_objects):\n        # hs\u8868\u793a\u7269\u4f53\u534a\u5bbd\u534a\u9ad8\uff0c\u7528\u4e2d\u5fc3\u70b9\u8ba1\u7b97\u7269\u4f53\u89d2\u70b9\u5750\u6807\n        hs = halfsize[i]\n\n        # \u904d\u5386\u77e9\u5f62\u7269\u4f53\u76844\u4e2a\u89d2k\n        for k in ti.static(range(4)):\n            # k\u4e3a0123\u65f6\uff0coffset_scale\u5206\u522b\u8868\u793a[-1,-1], [1,-1], [-1,1], [1,1], \u5373\u5de6\u4e0b\u89d2\u3001\u53f3\u4e0b\u89d2\u3001\u5de6\u4e0a\u89d2\u3001\u53f3\u4e0a\u89d2\n            offset_scale = ti.Vector([k % 2 * 2 - 1, k // 2 % 2 * 2 - 1])\n\n            # \u8c03\u7528to_world\u51fd\u6570\uff0c\u5c06\u89d2\u70b9\u4ece\u7269\u4f53\u5c40\u90e8\u5750\u6807\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\n            # corner_x, corner_v, rela_pos\u5206\u522b\u8868\u793a\u89d2\u70b9\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u76f8\u5bf9\u8d28\u5fc3\u7684\u5411\u91cf\n            corner_x, corner_v, rela_pos = to_world(t, i, offset_scale * hs)\n\n            # \u589e\u52a0\u91cd\u529b\u5bf9\u901f\u5ea6\u7684\u5f71\u54cd\n            \"\"\"\u901f\u5ea6\u589e\u91cf = \u91cd\u529b\u5927\u5c0f * \u91cd\u529b\u65b9\u5411\u5411\u91cf * \u65f6\u95f4\u6b65\u957f\"\"\"\n            corner_v = corner_v + dt * gravity * ti.Vector([0.0, 1.0])\n\n            # \u5b9a\u4e49\u5730\u9762\u5411\u91cf\n            normal = ti.Vector([0.0, 1.0])  # \u6cd5\u5411\u91cf\uff1a\u7ad6\u76f4\u5411\u4e0a\n            tao = ti.Vector([1.0, 0.0])  # \u5207\u5411\u91cf\uff1a\u6c34\u5e73\n\n            # \u8ba1\u7b97\u529b\u77e9\u81c2\u7684\u957f\u5ea6\n            \"\"\"\u529b\u77e9\u81c2\u5927\u5c0f = \u8d28\u5fc3\u5230\u89d2\u70b9\u5411\u91cf\u957f\u5ea6 * sin\u5939\u89d2\uff1b\u65b9\u5411\u4e3a\u53c9\u4e58\u65b9\u5411\"\"\"\n            rn = rela_pos.cross(normal)  # \u6cd5\u7ebf\u65b9\u5411\u7684\u529b\u77e9\u81c2\n            rt = rela_pos.cross(tao)  # \u5207\u7ebf\u65b9\u5411\u7684\u529b\u77e9\u81c2\n\n            # \u8ba1\u7b97\u51b2\u91cf\u5bf9\u901f\u5ea6\u7684\u5f71\u54cd\n            \"\"\"\n                \u603b\u901f\u5ea6\u53d8\u5316 = \u5e73\u79fb\u4ea7\u751f\u7684\u901f\u5ea6\u53d8\u5316 + \u65cb\u8f6c\u4ea7\u751f\u7684\u901f\u5ea6\u53d8\u5316\n                          = J/m + (J*r/I)*r\n                          = J * (1/m + r^2/I)\n            \"\"\"\n            impulse_contribution = inverse_mass[i] + (rn) ** 2 * \\\n                                   inverse_inertia[i]  # \u7528\u4e8e\u6cd5\u7ebf\u65b9\u5411\u7684\u51b2\u91cf\n            timpulse_contribution = inverse_mass[i] + (rt) ** 2 * \\\n                                    inverse_inertia[i]  # \u7528\u4e8e\u5207\u7ebf\u65b9\u5411\u7684\u51b2\u91cf\n\n            # \u70b9\u4e58\u8ba1\u7b97\u89d2\u70b9\u6cbf\u6cd5\u7ebf\u65b9\u5411\u7684\u901f\u5ea6\n            rela_v_ground = normal.dot(corner_v)\n\n            # \u521d\u59cb\u5316\n            impulse = 0.0  # \u6cbf\u6cd5\u7ebf\u7684\u53cd\u5f39\u51b2\u91cf\n            timpulse = 0.0  # \u6cbf\u5207\u5411\u7684\u6469\u64e6\u51b2\u91cf\n            new_corner_x = corner_x + dt * corner_v  # \u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u89d2\u70b9\u7684\u4f4d\u7f6e\n            toi = 0.0  # \u65f6\u95f4\u4fee\u6b63\n\n            # \u68c0\u67e5\u89d2\u70b9\u662f\u5426\u6b63\u5728\u649e\u5411\u5730\u9762\n            # \u5982\u679c\u901f\u5ea6\u671d\u5411\u5730\u9762\uff0c\u4e14\u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u7a7f\u8fc7\u5730\u9762\uff0c\u5219\u548c\u5730\u9762\u78b0\u649e\n            if rela_v_ground &lt; 0 and new_corner_x[1] &lt; ground_height:\n\n                # \u8ba1\u7b97\u51b2\u91cf\uff0c\u9632\u6b62\u7269\u4f53\u7ee7\u7eed\u4e0b\u6c89\uff0c\u4f7f\u5176\u4ee5\u4e00\u5b9a\u901f\u5ea6\u53cd\u5f39\n                \"\"\"\n                    elasticity\uff1a\u5f39\u6027\u7cfb\u6570\n                    1 + elasticity\uff1a\u6062\u590d\u56e0\u5b50\n                    impulse_contribution\uff1a\u65bd\u52a0\u5355\u4f4d\u51b2\u91cf\u65f6\u901f\u5ea6\u7684\u53d8\u5316\u91cf\n                    \u51b2\u91cf\u5927\u5c0f = \u6062\u590d\u56e0\u5b50 * \u4e0b\u843d\u901f\u5ea6 / impulse_contribution\n                    \u8d1f\u53f7\u4fdd\u8bc1\u51b2\u91cf\u65b9\u5411\u548c\u4e0b\u843d\u65b9\u5411\u76f8\u53cd\n                \"\"\"\n                impulse = -(1 +\n                            elasticity) * rela_v_ground / impulse_contribution\n\n                # \u5982\u679c\u9700\u8981\u65bd\u52a0\u5411\u4e0a\u51b2\u91cf\uff0c\u6267\u884c\u4e0b\u9762\u4ee3\u7801\n                if impulse &gt; 0:\n\n                    # \u6839\u636e\u89d2\u70b9\u5207\u5411\u901f\u5ea6\u8ba1\u7b97\u963b\u529b\n                    \"\"\"\n                        timpulse_contribution\uff1a\u65bd\u52a0\u5355\u4f4d\u51b2\u91cf\u65f6\u6c34\u5e73\u901f\u5ea6\u7684\u53d8\u5316\u91cf\n                        \u6469\u64e6\u529b = \u6c34\u5e73\u901f\u5ea6 / timpulse_contribution\uff1a\u65bd\u52a0\u5355\u4f4d\u51b2\u91cf\u65f6\u6c34\u5e73\u901f\u5ea6\u7684\u53d8\u5316\u91cf\n                    \"\"\"\n                    timpulse = -corner_v.dot(tao) / timpulse_contribution\n\n                    # \u6469\u64e6\u5927\u5c0f\u9700\u8981\u5c0f\u4e8e\u538b\u529b*\u6469\u64e6\u7cfb\u6570\n                    timpulse = ti.min(friction * impulse,\n                                      ti.max(-friction * impulse, timpulse))\n\n                    # \u65f6\u95f4\u4fee\u6b63\uff1a\u7531\u4e8e\u65f6\u95f4\u6b65\u957f\u56fa\u5b9a\uff0c\u7269\u4f53\u53ef\u80fd\u5728\u4e00\u5e27\u5185\u76f4\u63a5\u7a7f\u8fc7\u5730\u9762\n                    # \u5982\u679c\u89d2\u70b9\u8fd8\u5728\u5730\u9762\u4e0a\u65b9\n                    if corner_x[1] &gt; ground_height:\n\n                        # \u8ba1\u7b97\u78b0\u649e\u65f6\u95f4\n                        \"\"\"\n                            \u8fd0\u52a8\u65b9\u7a0b\uff1ah = h0 + v*t\n                            \u78b0\u649e\u65f6\uff1aground_height = corner_x[1] + corner_v[1]*toi\n\n                        \"\"\"\n                        toi = -(corner_x[1] - ground_height) / ti.min(corner_v[1], -1e-3)\n\n            # \u5bf9\u7269\u4f53\u65bd\u52a0\u78b0\u649e\u51b2\u91cf\uff0c\u8ba9\u7269\u4f53\u4ea7\u751f\u6b63\u786e\u7684\u53cd\u5f39\u548c\u6469\u64e6\u6548\u679c\n            # \u8c03\u7528\u51fd\u6570apply_impulse\uff0cimpulse * normal + timpulse * tao\u8868\u793a\u5207\u5411\u548c\u6cd5\u5411\u5408\u6210\u540e\u7684\u5411\u91cf\n            apply_impulse(t, i, impulse * normal + timpulse * tao, new_corner_x, toi)\n\n            # \u5904\u7406\u7279\u6b8a\u60c5\u51b5\uff0c\u65bd\u52a0\u60e9\u7f5a\u63a8\u52a8\u89d2\u70b9\u56de\u5230\u5730\u9762\n            penalty = 0.0\n\n            # \u5982\u679c\u89d2\u70b9\u4ecd\u7136\u7a7f\u900f\u5730\u9762\n            if new_corner_x[1] &lt; ground_height:\n\n                # \u8ba1\u7b97\u60e9\u7f5a\u51b2\u91cf\uff0c\u4fdd\u8bc1\u89d2\u70b9\u4e0d\u4f1a\u7a7f\u900f\u5730\u9762\n                \"\"\"\u5b9a\u4e49\u60e9\u7f5a\u4e3a\uff1a penalty\u53c2\u6570 * \u7a7f\u900f\u7684\u6df1\u5ea6 / \u201c\u7b49\u6548\u8d28\u91cf\u201d * \u65f6\u95f4\u6b65\u957f\"\"\"\n                penalty = -dt * penalty * (\n                        new_corner_x[1] - ground_height) / impulse_contribution\n\n            # \u8c03\u7528\u51fd\u6570apply_impulse\uff0c\u65bd\u52a0\u60e9\u7f5a\u51b2\u91cf\n            apply_impulse(t, i, penalty * normal, new_corner_x, 0)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#3-apply_spring_force","title":"3. <code>apply_spring_force()</code>\u51fd\u6570","text":"<p>\u8fd9\u662f\u5e76\u884c\u5904\u7406\u5f39\u7c27\u548c\u5173\u8282\u7684\u51fd\u6570\u3002</p> <p>\u51fd\u6570\u6839\u636e\u6bcf\u4e2a\u5f39\u7c27\u7684\u5f53\u524d\u957f\u5ea6\u3001\u53d7\u51b2\u91cf\u5f71\u54cd\u7684\u76ee\u6807\u957f\u5ea6\uff0c\u8ba1\u7b97\u51fa\u76f8\u5e94\u7684\u5f39\u6027\u529b\u51b2\u91cf\uff0c\u5e76\u8c03\u7528 apply_impulse \u51fd\u6570\u65bd\u52a0\u51b2\u91cf\u3002</p> <p>\u5bf9\u4e8e\u4f5c\u4e3a\u5173\u8282\u7684\u8fde\u63a5\uff0c\u4f1a\u989d\u5916\u8ba1\u7b97\u5e76\u65bd\u52a0\u4e00\u4e2a\u963b\u5c3c\u51b2\u91cf\u6765\u6d88\u9664\u8fde\u63a5\u70b9\u95f4\u7684\u76f8\u5bf9\u901f\u5ea6\uff0c\u4ee5\u589e\u5f3a\u7a33\u5b9a\u6027\u3002</p> Python<pre><code>@ti.kernel\ndef apply_spring_force(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    \"\"\"\n    :param t: \u5f53\u524d\u65f6\u95f4\n    :return:\n    \"\"\"\n\n    # \u904d\u5386\u6240\u6709\u5f39\u7c27\u5173\u8282i\n    for i in range(n_springs):\n\n        # a\u3001b\u8868\u793a\u5f53\u524d\u5f39\u7c27\u8fde\u63a5\u7684\u4e24\u4e2a\u7269\u4f53\u7d22\u5f15\n        a = spring_anchor_a[i]\n        b = spring_anchor_b[i]\n\n        # \u8c03\u7528to_world\u5c06\u5f39\u7c27\u7aef\u70b9\u504f\u79fb\u91cf\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\n        # pos_a, vel_a, rela_a\u5206\u522b\u8868\u793a\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u76f8\u5bf9\u8d28\u5fc3\u7684\u5411\u91cf\n        pos_a, vel_a, rela_a = to_world(t, a, spring_offset_a[i])\n        pos_b, vel_b, rela_b = to_world(t, b, spring_offset_b[i])\n\n        # \u8ba1\u7b97\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u5411\u91cf\uff0c\u5373\u5f39\u7c27\u7684\u5411\u91cf\n        dist = pos_a - pos_b\n\n        # \u8ba1\u7b97\u5f53\u524d\u5f39\u7c27\u957f\u5ea6\uff0c\u52a01e-4\u9632\u6b62\u9664\u4ee5\u96f6\n        length = dist.norm() + 1e-4\n\n        # \u8ba1\u7b97\u5f53\u524d\u65f6\u95f4\u6b65\u5f39\u7c27\u7684\u6fc0\u6d3b\u91cf\n        # actuation[t, i]\u8868\u793a\u5728\u65f6\u95f4\u6b65t\uff0c\u5f39\u7c27i\u7684\u6fc0\u6d3b\u7a0b\u5ea6\n        act = actuation[t, i]\n\n        # \u5224\u65ad\u5f53\u524d\u5f39\u7c27\u662f\u5426\u662f\u5173\u8282\u7ea6\u675f\n        # spring_length[i] == -1\u8868\u793a\u662f\u5173\u8282\uff0c\u6ca1\u6709\u957f\u5ea6\u53d8\u5316\uff0c\u53ea\u8fde\u63a5\u7269\u4f53\n        is_joint = spring_length[i] == -1\n\n        # \u8ba1\u7b97\u5f39\u7c27\u76ee\u6807\u957f\u5ea6\n        \"\"\"\n            spring_length[i]\uff1a\u5f39\u7c27\u7684\u57fa\u7840\u957f\u5ea6\n            spring_actuation[i]\uff1a\u5f39\u7c27\u7684\u6fc0\u6d3b\u80fd\u529b\u7cfb\u6570\uff08\u80fd\u53d8\u5316\u591a\u5c11\u6bd4\u4f8b\uff09\n            act\uff1a\u5f53\u524d\u7684\u6fc0\u6d3b\u4fe1\u53f7\uff08-1\u52301\u4e4b\u95f4\uff09\n            target_length\uff1a\u8ba1\u7b97\u51fa\u7684\u76ee\u6807\u957f\u5ea6\n\n            \u76ee\u6807\u957f\u5ea6 = \u57fa\u7840\u957f\u5ea6 \u00d7 (1 + \u53d8\u5316\u6bd4\u4f8b)\n            \u53d8\u5316\u6bd4\u4f8b = \u6fc0\u6d3b\u80fd\u529b \u00d7 \u6fc0\u6d3b\u4fe1\u53f7\n        \"\"\"\n        target_length = spring_length[i] * (1.0 + spring_actuation[i] * act)\n\n        # \u5982\u679c\u662f\u5173\u8282\uff0c\u4e24\u4e2a\u70b9\u91cd\u5408\uff0c\u957f\u5ea6\u4e3a\u96f6\n        if is_joint:\n            target_length = 0.0\n\n        # \u8ba1\u7b97\u51b2\u91cf\n        \"\"\"\u51b2\u91cf = \u5f39\u7c27\u4f38\u957f\u91cf * \u5f39\u7c27\u521a\u5ea6 / \u65b9\u5411\u5411\u91cf\"\"\"\n        impulse = dt * (length -\n                        target_length) * spring_stiffness[i] / length * dist\n\n        # \u5982\u679c\u662f\u5173\u8282\uff0c\u8fdb\u4e00\u6b65\u8ba1\u7b97\n        if is_joint:\n\n            # \u8ba1\u7b97\u4e24\u4e2a\u7aef\u70b9\u7684\u76f8\u5bf9\u901f\u5ea6\n            rela_vel = vel_a - vel_b\n\n            # \u8ba1\u7b97\u76f8\u5bf9\u901f\u5ea6\u7684\u5927\u5c0f\uff0c\u52a00.1\u9632\u6b62\u9664\u4ee5\u96f6\n            rela_vel_norm = rela_vel.norm() + 1e-1\n\n            # \u8ba1\u7b97\u963b\u5c3c\u65b9\u5411\uff0c\u548c\u76f8\u5bf9\u8fd0\u52a8\u65b9\u5411\u76f8\u53cd\n            impulse_dir = rela_vel / rela_vel_norm\n\n            # \u8ba1\u7b97\u51b2\u91cf\u5bf9\u901f\u5ea6\u7684\u8d21\u732e\n            \"\"\"\u51b2\u91cf\u7684\u8d21\u732e = \u7269\u4f53A/B\u7684\u5e73\u79fb\u8d21\u732e + \u7269\u4f53A/B\u7684\u65cb\u8f6c\u8d21\u732e\"\"\"\n            impulse_contribution = inverse_mass[a] + impulse_dir.cross(rela_a)**2 * inverse_inertia[a] + \\\n                                   inverse_mass[b] + impulse_dir.cross(rela_b)**2 * inverse_inertia[b]\n\n            # \u5c06\u5173\u8282\u4e24\u7aef\u7684\u76f8\u5bf9\u901f\u5ea6\u6295\u5f71\u5230\u51b2\u91cf\u65b9\u5411\n            \"\"\"\u51b2\u91cf\u589e\u52a0\u91cf = \u76f8\u5bf9\u901f\u5ea6\u5927\u5c0f / \u201c\u6709\u6548\u8d28\u91cf\u201d * \u65b9\u5411\u5411\u91cf\"\"\"\n            impulse += rela_vel_norm / impulse_contribution * impulse_dir\n\n        # \u8c03\u7528apply_impulse\u51fd\u6570\uff0c\u5bf9\u4e24\u4e2a\u7aef\u70b9\u65bd\u52a0\u51b2\u91cf\uff0c\u4fdd\u8bc1\u4f5c\u7528\u529b\u7b49\u4e8e\u53cd\u4f5c\u7528\u529b\n        apply_impulse(t, a, -impulse, pos_a, 0.0)\n        apply_impulse(t, b, impulse, pos_b, 0.0)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#4-advance_toi","title":"4. <code>advance_toi()</code>\u51fd\u6570","text":"<p>\u8fd9\u662f\u5c06\u5404\u4e2a\u53c2\u6570\u63a8\u8fdb\u5230\u5f53\u524d\u65f6\u95f4\u6b65\u7684\u51fd\u6570\u3002</p> <p>\u51fd\u6570\u57fa\u4e8e\u534a\u9690\u5f0f\u79ef\u5206\u6cd5\uff0c\u66f4\u65b0\u6bcf\u4e2a\u7269\u4f53\u7684\u901f\u5ea6\u3001\u4f4d\u7f6e\u3001\u89d2\u901f\u5ea6\u548c\u65cb\u8f6c\u89d2\u5ea6\u3002</p> <p>\u540c\u65f6\u5f15\u5165\u963b\u5c3c\u8870\u51cf\u4e0e\u5916\u90e8\u51b2\u91cf\u7684\u4fee\u6b63\u9879\uff0c\u786e\u4fdd\u8fd0\u52a8\u72b6\u6001\u65e2\u7b26\u5408\u7269\u7406\u89c4\u5f8b\uff0c\u53c8\u80fd\u5b9e\u65f6\u54cd\u5e94\u78b0\u649e\u3001\u7ea6\u675f\u6216\u4ea4\u4e92\u3002</p> Python<pre><code>@ti.kernel\ndef advance_toi(t: ti.i32):\n    # *********\u6bcf\u884c\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca************\n    \"\"\"\n    :param t: \u5f53\u524d\u65f6\u95f4\n    :return:\n    \"\"\"\n\n    # \u904d\u5386\u6240\u6709\u7269\u4f53\n    for i in range(n_objects):\n\n        # s\u8868\u793a\u963b\u5c3c\u56e0\u5b50\n        \"\"\"\u963b\u5c3c\u56e0\u5b50 = e ^ {\u65f6\u95f4\u6b65\u957f * \u963b\u5c3c\u7cfb\u6570}\"\"\"\n        s = ti.exp(-dt * damping)\n\n        # \u534a\u9690\u5f0f\u79ef\u5206\u6cd5\n        # \u66f4\u65b0\u7269\u4f53i\u5728\u5f53\u524d\u65f6\u95f4\u6b65t\u7684\u901f\u5ea6\n        \"\"\"\n            \u5f53\u524d\u901f\u5ea6 = \u4e0a\u4e00\u65f6\u523b\u901f\u5ea6 \u00d7 \u963b\u5c3c\u8870\u51cf \n                      + \u5916\u90e8\u51b2\u91cf\u5f15\u8d77\u7684\u901f\u5ea6\u589e\u91cf \n                      + \u5f53\u524d\u91cd\u529b\u4ea7\u751f\u7684\u901f\u5ea6\u589e\u91cf\n        \"\"\"\n        v[t, i] = s * v[t - 1, i] + v_inc[t, i] + dt * gravity * ti.Vector([0.0, 1.0])\n\n        # \u66f4\u65b0\u7269\u4f53i\u5728\u5f53\u524d\u65f6\u95f4\u6b65t\u7684\u4f4d\u7f6e\n        \"\"\"\n            \u5f53\u524d\u4f4d\u7f6e = \u4e0a\u4e00\u65f6\u523b\u4f4d\u7f6e\n                      + \u5f53\u524d\u7531\u901f\u5ea6\u5f15\u8d77\u7684\u4f4d\u79fb\n                      + \u5916\u90e8\u7684\u4f5c\u7528\u5f15\u8d77\u7684\u4f4d\u79fb\u7a81\u53d8\n        \"\"\"\n        x[t, i] = x[t - 1, i] + dt * v[t, i] + x_inc[t, i]\n\n        # \u66f4\u65b0\u7269\u4f53i\u7684\u89d2\u901f\u5ea6\n        \"\"\"\n            \u5f53\u524d\u89d2\u901f\u5ea6 = \u4e0a\u4e00\u65f6\u523b\u89d2\u901f\u5ea6 \u00d7 \u963b\u5c3c\u8870\u51cf\u56e0\u5b50\n                        + \u5916\u90e8\u4f5c\u7528\u5f15\u8d77\u7684\u89d2\u901f\u5ea6\u7a81\u53d8\n        \"\"\"\n        omega[t, i] = s * omega[t - 1, i] + omega_inc[t, i]\n\n        # \u66f4\u65b0\u7269\u4f53i\u7684\u65cb\u8f6c\u89d2\u5ea6\n        \"\"\"\n            \u5f53\u524d\u65cb\u8f6c\u89d2\u5ea6 = \u4e0a\u4e00\u65f6\u523b\u89d2\u5ea6 \n                          + \u5f53\u524d\u7531\u89d2\u901f\u5ea6\u5f15\u8d77\u7684\u65cb\u8f6c\u589e\u91cf\n                          + \u5916\u90e8\u4f5c\u7528\u5f15\u8d77\u7684\u65cb\u8f6c\u4fee\u6b63\n        \"\"\"\n        rotation[t, i] = rotation[t - 1, i] + dt * omega[t, i] + rotation_inc[t, i]\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#_2","title":"\u5176\u4ed6\u90e8\u5206","text":""},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#1","title":"1. \u521d\u59cb\u5316\u4e0e\u914d\u7f6e\u90e8\u5206","text":"<ul> <li><code>ti.init(default_fp=real)</code>\uff1a\u521d\u59cb\u5316 Taichi \u8ba1\u7b97\u73af\u5883\uff0c\u8bbe\u5b9a\u6d6e\u70b9\u7cbe\u5ea6\u4e3a <code>f32</code>\uff0832\u4f4d\u6d6e\u70b9\u6570\uff09\u3002</li> <li><code>max_steps</code>, <code>steps</code>, <code>vis_interval</code>, <code>output_vis_interval</code>\uff1a\u63a7\u5236\u4eff\u771f\u6700\u5927\u6b65\u6570\u3001\u4eff\u771f\u6b65\u6570\u3001\u53ef\u89c6\u5316\u66f4\u65b0\u95f4\u9694\u548c\u8f93\u51fa\u56fe\u50cf\u66f4\u65b0\u95f4\u9694\u3002</li> <li><code>x</code>, <code>v</code>, <code>rotation</code>, <code>omega</code>, <code>halfsize</code>, <code>inverse_mass</code>, <code>inverse_inertia</code>, etc.\uff1a\u5b9a\u4e49\u673a\u5668\u4eba\u7269\u4f53\u7684\u7269\u7406\u5c5e\u6027\uff0c\u5305\u62ec\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u65cb\u8f6c\u89d2\u5ea6\u3001\u89d2\u901f\u5ea6\u3001\u7269\u4f53\u7684\u5c3a\u5bf8\u3001\u9006\u8d28\u91cf\u4e0e\u9006\u8f6c\u52a8\u60ef\u91cf\u7b49\u3002</li> <li><code>loss</code>, <code>goal</code>\uff1a\u7528\u4e8e\u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u548c\u76ee\u6807\u4f4d\u7f6e\u3002</li> <li><code>n_objects</code>, <code>n_springs</code>\uff1a\u5206\u522b\u8868\u793a\u7269\u4f53\u7684\u6570\u91cf\u4e0e\u5f39\u7c27\u8fde\u63a5\u4ef6\uff08\u5173\u8282\uff09\u7684\u6570\u91cf\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#2","title":"2. \u795e\u7ecf\u7f51\u7edc\u90e8\u5206","text":"<ul> <li> <p><code>nn1(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c\u4e00\u5c42\uff08\u9690\u85cf\u5c42\uff09\u7684\u6fc0\u6d3b\u503c\u3002\u8be5\u7f51\u7edc\u7684\u8f93\u5165\u5305\u62ec\u5468\u671f\u6027\u6ce2\u5f62\uff08\u6b63\u5f26\u6ce2\uff09\u4ee5\u53ca\u7269\u4f53\u7684\u72b6\u6001\uff08\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u65cb\u8f6c\u89d2\u5ea6\u7b49\uff09\u3002\u6700\u7ec8\u7684\u8f93\u51fa\u7528\u4e8e\u63a7\u5236\u673a\u5668\u4eba\u7684\u5173\u8282\uff08\u5f39\u7c27\u7684\u6fc0\u6d3b\u91cf\uff09\u3002</p> </li> <li>\u4f7f\u7528\u6b63\u5f26\u6ce2\u6a21\u62df\u5468\u671f\u6027\u7684\u884c\u4e3a\uff0c\u5e76\u8003\u8651\u6bcf\u4e2a\u7269\u4f53\u7684\u76f8\u5bf9\u72b6\u6001\uff08\u4f4d\u7f6e\u3001\u901f\u5ea6\u7b49\uff09\u3002</li> <li> <p><code>nn2(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u7b2c\u4e8c\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5c06\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u4f20\u9012\u7ed9\u7b2c\u4e8c\u5c42\u7f51\u7edc\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u5f39\u7c27\uff08\u5173\u8282\uff09\u7684\u63a7\u5236\u4fe1\u53f7\uff08<code>actuation</code>\uff09\u3002\u8fd9\u662f\u6700\u7ec8\u63a7\u5236\u6bcf\u4e2a\u5f39\u7c27\u7684\u6fc0\u6d3b\u91cf\u3002</p> </li> <li><code>weights1</code>\u3001<code>weights2</code>\uff1a\u4ee3\u8868\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\u77e9\u9635\u3002</li> <li><code>bias1</code>\u3001<code>bias2</code>\uff1a\u4ee3\u8868\u795e\u7ecf\u7f51\u7edc\u7684\u504f\u7f6e\u9879\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#3","title":"3. \u7269\u7406\u4eff\u771f\u90e8\u5206","text":"<ul> <li> <p><code>initialize_properties()</code>\uff1a</p> </li> <li> <p>\u521d\u59cb\u5316\u7269\u4f53\u7684\u9006\u8d28\u91cf\u548c\u9006\u8f6c\u52a8\u60ef\u91cf\u3002\u8d28\u91cf\u548c\u8f6c\u52a8\u60ef\u91cf\u662f\u7269\u4f53\u7269\u7406\u8fd0\u52a8\u7684\u5173\u952e\u53c2\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u78b0\u649e\u3001\u8fd0\u52a8\u548c\u53cd\u5f39\u884c\u4e3a\u3002</p> </li> <li> <p><code>to_world(t, i, rela_x)</code>\uff1a</p> </li> <li> <p>\u5c06\u7269\u4f53\u5c40\u90e8\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\uff08<code>rela_x</code>\uff09\u8f6c\u6362\u5230\u4e16\u754c\u5750\u6807\u4e2d\uff0c\u8fd4\u56de\u7269\u4f53\u5728\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u4ee5\u53ca\u76f8\u5bf9\u8d28\u5fc3\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>apply_impulse(t, i, impulse, location, toi_input)</code>\uff1a</p> </li> <li> <p>\u89c1\u7b2c\u4e00\u90e8\u5206</p> </li> <li> <p><code>collide(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u89c1\u7b2c\u4e8c\u90e8\u5206</p> </li> <li> <p><code>apply_spring_force(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u89c1\u7b2c\u4e09\u90e8\u5206</p> </li> <li> <p><code>advance_toi(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u89c1\u7b2c\u56db\u90e8\u5206</p> </li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#4","title":"4. \u635f\u5931\u51fd\u6570\u8ba1\u7b97\u90e8\u5206","text":"<ul> <li> <p><code>compute_loss(t: ti.i32)</code>\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u635f\u5931\u51fd\u6570\uff0c\u7528\u4e8e\u8bc4\u4f30\u5f53\u524d\u63a7\u5236\u7b56\u7565\u7684\u6548\u679c\u3002\u635f\u5931\u51fd\u6570\u6709\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206\uff08\u7ecf\u8fc7\u6211\u4fee\u6539\uff09\uff1a</p> <ol> <li>\u5934\u90e8\u9ad8\u5ea6\u5956\u52b1\uff08\u8d8a\u9ad8\u8d8a\u597d\uff0c\u6743\u91cd\u5927\uff09\u3002</li> <li>\u6c34\u5e73\u4f4d\u79fb\u5956\u52b1\uff08\u5411\u53f3\u8d70\u5f97\u8d8a\u8fdc\u8d8a\u597d\uff0c\u6743\u91cd\u8f83\u5c0f\uff09\u3002</li> <li>\u603b\u7684\u635f\u5931\u662f\u8fd9\u4e24\u4e2a\u5956\u52b1\u7684\u52a0\u6743\u548c\u3002</li> </ol> </li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#5","title":"5. \u4eff\u771f\u4e0e\u4f18\u5316\u8fc7\u7a0b","text":"<ul> <li> <p><code>forward(output=None, visualize=True)</code>\uff1a</p> </li> <li> <p>\u6267\u884c\u4eff\u771f\uff0c\u66f4\u65b0\u7269\u4f53\u7684\u72b6\u6001\uff08\u4f4d\u7f6e\u3001\u901f\u5ea6\u7b49\uff09\uff0c\u5e76\u901a\u8fc7 <code>nn1</code> \u548c <code>nn2</code> \u8ba1\u7b97\u63a7\u5236\u4fe1\u53f7\uff0c\u63a7\u5236\u5f39\u7c27\u7684\u6fc0\u6d3b\u3002</p> </li> <li>\u6bcf\u9694\u4e00\u5b9a\u6b65\u6570\u66f4\u65b0\u4e00\u6b21\u53ef\u89c6\u5316\uff0c\u5c06\u7269\u4f53\u548c\u5f39\u7c27\u7684\u72b6\u6001\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u3002</li> <li>\u652f\u6301\u5c06\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u53ef\u89c6\u5316\u7ed3\u679c\u4fdd\u5b58\u4e3a\u56fe\u50cf\u3002</li> <li> <p><code>optimize(visualize=True)</code>\uff1a</p> </li> <li> <p>\u4f7f\u7528\u53cd\u5411\u4f20\u64ad\uff08<code>ti.ad.Tape</code>\uff09\u6765\u4f18\u5316\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\u3002\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6cd5\u8c03\u6574\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u3002</p> </li> <li>\u8fdb\u884c\u82e5\u5e72\u6b21\u8fed\u4ee3\u4f18\u5316\uff0c\u5e76\u66f4\u65b0\u7f51\u7edc\u6743\u91cd\u548c\u504f\u7f6e\u9879\u3002</li> <li>\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u8ba1\u7b97\u68af\u5ea6\uff0c\u5e76\u8fdb\u884c\u68af\u5ea6\u88c1\u526a\uff08<code>gradient_clip</code>\uff09\uff0c\u907f\u514d\u68af\u5ea6\u7206\u70b8\u3002</li> <li>\u6700\u7ec8\u7684\u4f18\u5316\u76ee\u6807\u662f\u4f7f\u673a\u5668\u4eba\u7684\u884c\u4e3a\u7b26\u5408\u9884\u671f\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#6","title":"6. \u53ef\u89c6\u5316\u90e8\u5206","text":"<ul> <li> <p><code>gui = ti.GUI('Rigid Body Simulation', (512, 512))</code>\uff1a</p> </li> <li> <p>\u521d\u59cb\u5316 Taichi \u7684 GUI \u754c\u9762\uff0c\u7528\u4e8e\u5c55\u793a\u4eff\u771f\u7ed3\u679c\u3002</p> </li> <li> <p><code>gui.line()</code> \u548c <code>gui.circle()</code>\uff1a</p> </li> <li> <p>\u7ed8\u5236\u7269\u4f53\u3001\u5f39\u7c27\u3001\u5173\u8282\u7b49\u5728\u5c4f\u5e55\u4e0a\u7684\u53ef\u89c6\u5316\u6548\u679c\u3002<code>gui.line</code> \u7ed8\u5236\u7269\u4f53\u7684\u56db\u6761\u8fb9\uff08\u7269\u4f53\u7684\u8f6e\u5ed3\uff09\uff0c<code>gui.circle</code> \u7ed8\u5236\u7269\u4f53\u7684\u5706\u5f62\u811a\u3002</p> </li> <li> <p><code>gui.show()</code>\uff1a</p> </li> <li> <p>\u66f4\u65b0\u5e76\u5c55\u793a\u5f53\u524d\u4eff\u771f\u72b6\u6001\u3002\u6bcf\u6b21\u8c03\u7528 <code>gui.show()</code>\uff0c\u90fd\u5237\u65b0\u663e\u793a\u5185\u5bb9\uff0c\u5c06\u7269\u4f53\u3001\u5f39\u7c27\u7b49\u4fe1\u606f\u5b9e\u65f6\u5c55\u793a\u5728\u754c\u9762\u4e0a\u3002</p> </li> </ul>"},{"location":"CourseNotes/robot%20control/practical/robot%20intro/#7-main","title":"7. \u4e3b\u51fd\u6570 (<code>main</code>)","text":"<ul> <li> <p><code>setup_robot(*robots[robot_id]())</code>\uff1a</p> </li> <li> <p>\u521d\u59cb\u5316\u673a\u5668\u4eba\u7684\u72b6\u6001\uff0c\u52a0\u8f7d\u4e0d\u540c\u7684\u673a\u5668\u4eba\u5de5\u5177\u914d\u7f6e\u3002<code>robot_id</code> \u9009\u62e9\u4e0d\u540c\u7684\u673a\u5668\u4eba\u914d\u7f6e\u3002</p> </li> <li> <p><code>optimize()</code>\uff1a</p> </li> <li> <p>\u4f18\u5316\u795e\u7ecf\u7f51\u7edc\uff0c\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u8c03\u6574\u7f51\u7edc\u53c2\u6570\uff0c\u8bad\u7ec3\u673a\u5668\u4eba\u8fdb\u884c\u76ee\u6807\u4f18\u5316\u3002</p> </li> <li> <p><code>forward('final{}'.format(robot_id), visualize=True)</code>\uff1a</p> </li> <li> <p>\u6267\u884c\u4eff\u771f\uff0c\u5e76\u5c06\u4eff\u771f\u7ed3\u679c\u53ef\u89c6\u5316\u3002\u6700\u540e\u5c06\u4eff\u771f\u7ed3\u679c\u4fdd\u5b58\u4e3a\u56fe\u50cf\uff08\u5982 PNG \u683c\u5f0f\uff09\u3002</p> </li> </ul>"},{"location":"CourseNotes/robot%20control/practical/scanner/","title":"\u6fc0\u5149\u626b\u63cf\u4eea\u548c\u70b9\u4e91\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 431 \u4e2a\u5b57\u00a0\u00a09 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/practical/scanner/#3d","title":"3D\u626b\u63cf\u4eea\u4f7f\u7528","text":"<p>\u5de5\u4ef6\u524d\u671f\u51c6\u5907\uff1a</p> <ol> <li>\u8868\u9762\u5904\u7406\uff1a\u6df1\u8272\u6d45\u8272\u53ef\u4ee5\uff0c\u955c\u9762\u548c\u73bb\u7483\u4e0d\u80fd\u76f4\u63a5\u626b\uff08\u663e\u50cf\u5242\u2026\uff09  </li> <li>\u6807\u8bb0\u70b9\u7c98\u8d34\uff1a\u5e73\u9762\u4e14\u66f2\u7387\u5c0f\u7684\u4f4d\u7f6e\uff0c\u907f\u514d\u8fb9\u89d2\u7b49\u7279\u5f81\u70b9\uff1b\u65e0\u89c4\u5219\u7c98\u8d34\uff0c\u907f\u514d\u5171\u7ebf\u3001\u7b49\u8170\u4e09\u89d2\u5f62\uff08\u5e73\u9762\u62fc\u63a5\uff09\uff1b\u516c\u5171\u533a\u57df\u7684\u6807\u8bb0\u70b9\u5927\u4e8e 4 \u4e2a\uff1b\u5747\u5300\u7c98\u8d34  </li> <li>\u5236\u5b9a\u626b\u63cf\u7b56\u7565\uff08\u62fc\u63a5\uff09\uff1a\u6fc0\u5149\u70b9\u62fc\u63a5\uff0c\u9760\u7279\u5f81\u8fdb\u884c\u62fc\u63a5\uff1b\u6807\u8bb0\u70b9\u62fc\u63a5</li> </ol> <p>\u53c2\u6570\uff1a</p> <ol> <li>\u70b9\u5bc6\u5ea6\uff1a\u6fc0\u5149\u70b9\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u6570\u503c\u8d8a\u5927\uff0c\u70b9\u8d8a\u7a00\u758f\u3002\u7cbe\u5ea6\u9ad8 0.2-0.3\uff0c\u6807\u51c6\u4ef6 0.5  </li> <li>\u66dd\u5149\u503c\uff1a\u6fc0\u5149\u7ebf\u7684\u4eae\u6697\u7a0b\u5ea6\u3002\u6d45\u8272\u6697\uff08\u53cd\u5149\u591a\uff09\uff0c\u9ed8\u8ba4 1\uff1b\u6b63\u5e38 5\uff1b\u6df1\u9ed1\u8272 7  </li> <li>\u626b\u63cf\u6a21\u5f0f\uff1a\u6807\u8bb0\u70b9/\u6fc0\u5149\u9762\u7247\u3002\u5148\u626b\u6807\u8bb0\u70b9\uff0c\u518d\u626b\u9762\u7247  </li> <li>\u6807\u8bb0\u70b9\uff1a\u6309\u5927\u5c0f\u52fe\u9009  </li> <li>\u9ed1\u4eae\u6a21\u5f0f\uff1a\u6df1\u8272\u6216\u53cd\u5149\u7269\u4f53\u52fe\u9009  </li> </ol> <p>\u626b\u63cf\u8fc7\u7a0b\uff1a</p> <p>\u65b0\u5efa\u6587\u4ef6\uff0c\u8bbe\u7f6e\u53c2\u6570\u3002\u6309 M \u5f00\u59cb\u626b\u63cf\u3002+-\u4f7f\u8f6f\u4ef6\u4e0a\u56fe\u50cf\u653e\u5927\u7f29\u5c0f\u3002\u4e00\u9762\u626b\u63cf\u5b8c\u540e\u7ed3\u675f\uff0c\u70b9\u51fb\u6dfb\u52a0\uff0c\u7ffb\u9762\u7ee7\u7eed\u626b\u63cf\u3002</p> <p>\u6570\u636e\u5904\u7406\uff1a</p> <ol> <li>\u80cc\u666f\u5e73\u9762\uff1a\u5e73\u9762\u4ee5\u4e0b\u5220\u9664  </li> <li>\u8fde\u63a5\u9879\uff1a\u9009\u4e3b\u4f53\uff0c\u53cd\u9009\uff0c\u5220\u9664  </li> <li>\u975e\u8fde\u63a5\u9879\uff1a\u9009\u53d6\u8fde\u63a5\u7684\u4e00\u7247\u70b9  </li> <li>\u5b64\u7acb\u70b9\uff1a\u5b64\u7acb\u7684\u4e00\u4e2a\u70b9  </li> </ol> <p>\u5408\u5e76\uff1a</p> <ol> <li>\u6807\u8bb0\u70b9\u5408\u5e76\uff1a\u9009\u4e2d\u516c\u5171\u9762\u4e0a\u7684\u6807\u8bb0\u70b9  </li> <li>\u6fc0\u5149\u70b9\u5408\u5e76\uff1a\u5728\u516c\u5171\u9762\u4e0a\u70b9  </li> </ol> <p>\u7f51\u683c\u5316\uff1a</p> <p>\u4e09\u89d2\u9762\u7247\u5904\u7406</p> <p>\u4fdd\u5b58\uff1a</p> <p>\u4fdd\u5b58\u540e\u4e3a\u7f51\u683c\u6587\u4ef6\uff0c.stl\u3002\u5c01\u88c5\u524d\u4e3a.asc \u683c\u5f0f\u6587\u4ef6\u3002</p> <p>\u6807\u8bb0\u70b9\u989c\u8272\u72b6\u6001\uff1a</p> <ol> <li>\u7eff\u8272\uff1a\u5f53\u524d\u89c6\u91ce\u4e2d\u770b\u5230\u7684\u6807\u8bb0\u70b9  </li> <li>\u767d\u8272\uff1a\u5df2\u7ecf\u626b\u63cf\u5b8c\u6574\u7684\u70b9  </li> <li>\u84dd\u8272\uff1a\u5f53\u524d\u6ca1\u6709\u626b\u63cf\u5230\u7684\u70b9  </li> </ol> <p>\u7cbe\u7ec6\u626b\u63cf\uff1a</p> <p>\u9009\u500d\u7387\uff1b\u70b9\u7cbe\u7ec6\u626b\u63cf\uff0c\u9009\u4e2d\u626b\u63cf\u533a\u57df\uff1b\u70b9\u7cbe\u7ec6\u626b\u63cf\uff0c\u9000\u51fa\uff1b\u5f00\u59cb\u626b\u63cf\u3002\u53cc\u51fb M \u5207\u6362\u626b\u63cf\u6a21\u5f0f\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/scanner/#pcl","title":"PCL","text":""},{"location":"CourseNotes/robot%20control/practical/scanner/#maincpp","title":"main.cpp","text":"C++<pre><code>#include &lt;fstream&gt;\n\n#include \"file.h\"\n#include \"visualizer.h\"\n#include \"tools.h\"\n\n#include \"mls_custom.h\"\n\nint main()\n{\n    std::string read_file_path = \"D:/NaiLong1.asc\"; // asc\u683c\u5f0f\u70b9\u4e91 \u5b58\u50a8\u8def\u5f84\n    std::string save_file_path = \"D:/NaiLong.ply\"; // ply\u7f51\u683c\u6570\u636e \u5b58\u50a8\u8def\u5f84\n\n    // 0\u3001\u8bfb\u53d6asc\u683c\u5f0f\u70b9\u4e91\u6570\u636e\n    pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr point_cloud;\n    if (!readAscFile(read_file_path, point_cloud)) {\n        printf(\"read %s failed!\\n\", read_file_path.c_str());\n        system(\"pause\");\n        return -1;\n    }\n    showPointCloud(point_cloud, true); // 1\n\n    // 1\u3001\u8ba1\u7b97\u5f53\u524d\u70b9\u4e91\u89e3\u6790\u5ea6\n    float resolution = compute_resolution(point_cloud);\n\n    // 2\u3001\u91cd\u65b0\u8ba1\u7b97\u6cd5\u5411\u91cf\n    pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr point_normals;\n    compute_normals(point_cloud, resolution, point_normals);\n    showPointCloud(point_normals, true); // 2\n    // 2.5 \u6821\u6b63\u4e0b\u6cd5\u5411\u91cf\n    correct_normals(point_cloud, point_normals);\n    showPointCloud(point_normals, true); // 3\n\n    {   // \u5229\u7528\u81ea\u5df1\u4fee\u6539\u7684\u4ee3\u7801\u8ba1\u7b97\u6cd5\u5411\u91cf\uff08\u672a\u4f5c\u6548\u7387\u4f18\u5316\uff09\n        pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr mls_normals;\n        compute_mls_custom(point_cloud, resolution, mls_normals);\n        showPointCloud(mls_normals, true); // \u81ea\u5df1\u4fee\u6539\uff0c\u4e0d\u7528\u6821\u6b63\uff0c\u5c11\u4e86\u4e00\u6b21\u5168\u90e8\u6570\u636e\u7684\u904d\u5386 // 4\n    }\n\n    // 3\u3001\u5254\u9664\u79bb\u7fa4\u70b9\n    pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr sor_points;\n    sor_filter(point_normals, sor_points);\n    //showPointCloud2ViewPort(point_normals, sor_points); // \u5982\u679c\u754c\u9762\u4e2d\u4e0d\u663e\u793a\u6309\u4e0br\u952e\uff0c\u590d\u4f4d\u4e0b\u89c6\u89d2\n    showPointCloud(point_normals, sor_points); // 5\n\n    // 4\u3001\u8fdb\u884cmls\u6ee4\u6ce2\n    pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr mls_points;\n    mls_filter(sor_points, resolution, mls_points);\n    showPointCloud(sor_points, mls_points); // 6\n    //showPointCloud(mls_points, true);\n\n    // 5\u3001\u5e73\u9762\u5206\u5272\n    pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr seg_points;\n    plane_segmentation(mls_points, seg_points);\n    showPointCloud(mls_points, seg_points);  // 7\n\n    // 6\u3001\u7f51\u683c\u5316\n    pcl::PolygonMesh::Ptr poly_mesh;\n    triangulation(seg_points, resolution, poly_mesh);\n    showPolygonMesh(poly_mesh);\n\n    // 7\u3001\u4fdd\u5b58\u7f51\u683c\u6570\u636e\n    savePlyFile(save_file_path, poly_mesh);\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/scanner/#toolscpp","title":"tools.cpp","text":"C++<pre><code>#include \"tools.h\"\n\n#include &lt;pcl/filters/statistical_outlier_removal.h&gt;\n#include &lt;pcl/surface/mls.h&gt;\n#include &lt;pcl/surface/gp3.h&gt;\n#include &lt;pcl/features/normal_3d.h&gt;\n#define PCL_NO_PRECOMPILE // SACSegmentation \u672a\u5bfc\u51faPointNormal\u7c7b\u578b\uff0c\u9700\u8981\u7f16\u8bd1\u6a21\u677f\n#include &lt;pcl/segmentation/sac_segmentation.h &gt;\n#include &lt;pcl/filters/extract_indices.h&gt;\n\n/**\n* @brief \u5254\u9664\u79bb\u7fa4\u70b9\n* @param [in] point_cloud \u5f85\u6ee4\u6ce2\u70b9\u4e91\n* @param [out] filter_cloud \u6ee4\u6ce2\u7ed3\u679c\n* @return\n*/\nvoid sor_filter(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud\n    , pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; filter_cloud)\n{\n    /* \u53c2\u6570\u8bbe\u7f6e:\n    * \u6bcf\u4e2a\u70b9\u8981\u5206\u6790\u7684\u90bb\u5c45\u6570\u8bbe\u7f6e\u4e3a50\uff0c\u6807\u51c6\u5dee\u4e58\u6570\u4e3a1\u3002\n    * \u8fd9\u610f\u5473\u7740\uff0c\u6240\u6709\u5230\u67e5\u8be2\u70b9\u7684\u8ddd\u79bb\u5927\u4e8e1\u4e2a\u6807\u51c6\u5dee\u7684\u70b9\u90fd\u5c06\u88ab\u6807\u8bb0\u4e3a\u79bb\u7fa4\u503c\u5e76\u88ab\u5220\u9664\u3002\n    */\n\n    filter_cloud = std::make_shared&lt;pcl::PointCloud&lt;pcl::PointNormal&gt;&gt;();\n\n    pcl::StatisticalOutlierRemoval&lt;pcl::PointNormal&gt; sor; // \u521b\u5efa\u5bf9\u8c61\n    sor.setInputCloud(point_cloud); // \u8bbe\u7f6e\u70b9\u4e91\n    sor.setMeanK(20); // \u8bbe\u7f6e\u5747\u503c\u53c2\u6570k\n    sor.setStddevMulThresh(2.0); // \u8bbe\u7f6e\u9608\u503c\n    sor.filter(*filter_cloud);\n}\n\n/**\n* @brief \u8ba1\u7b97\u6cd5\u5411\u91cf\n* @param [in] point_cloud \u8f93\u5165\u7684\u70b9\u4e91\n* @param [in] resolution \u70b9\u4e91\u89e3\u6790\u5ea6\n* @param [out] new_cloud \u8ba1\u7b97\u6cd5\u5411\u91cf\u540e\u7684\u70b9\u4e91\n* @return\n*/\nvoid compute_normals(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud\n    , const float&amp; resolution\n    , pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; new_cloud)\n{\n    new_cloud = std::make_shared&lt;pcl::PointCloud&lt;pcl::PointNormal&gt;&gt;();\n\n    // \u8ba1\u7b97\u6cd5\u5411\u91cf\n    pcl::NormalEstimation&lt;pcl::PointNormal, pcl::PointNormal&gt; nest;\n    nest.setRadiusSearch(5 * resolution); // \u8bbe\u7f6e\u62df\u5408\u65f6\u90bb\u57df\u641c\u7d22\u534a\u5f84\uff0c\u6700\u597d\u7528\u6a21\u578b\u5206\u8fa8\u7387\u7684\u500d\u6570\n    //nest.setKSearch(10); // \u8bbe\u7f6e\u62df\u5408\u65f6\u91c7\u7528\u7684\u70b9\u6570\n    nest.setInputCloud(point_cloud);\n    nest.compute(*new_cloud);\n\n    // NormalEstimation \u8ba1\u7b97\u6cd5\u5411\u91cf\u7684\u7ed3\u679c\uff0c\u4f1a\u628a\u70b9\u5750\u6807\u4e22\u6389\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c\u8fc7\u6765\n    for (int idx = 0; idx &lt; point_cloud-&gt;size(); ++idx) {\n        new_cloud-&gt;points[idx].getVector3fMap() = point_cloud-&gt;points[idx].getVector3fMap();\n    }\n}\n\n/**\n* @brief mls\u6ee4\u6ce2\n* @param [in] point_cloud \u5f85\u6ee4\u6ce2\u70b9\u4e91\n* @param [in] resolution \u70b9\u4e91\u89e3\u6790\u5ea6\n* @param [out] filter_cloud \u6ee4\u6ce2\u7ed3\u679c\n* @return\n*/\nvoid mls_filter(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud\n    , const float&amp; resolution\n    , pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; filter_cloud)\n{\n    filter_cloud = std::make_shared&lt;pcl::PointCloud&lt;pcl::PointNormal&gt;&gt;();\n\n    // \u6784\u5efakdtree\uff0c\u65b9\u4fbf\u641c\u7d22\u90bb\u57df\u6570\u636e\n    pcl::search::KdTree&lt;pcl::PointNormal&gt;::Ptr kdtree = std::make_shared&lt;pcl::search::KdTree&lt;pcl::PointNormal&gt;&gt;();\n    kdtree-&gt;setInputCloud(point_cloud);\n\n    pcl::MovingLeastSquares&lt;pcl::PointNormal, pcl::PointNormal&gt; mls;\n    mls.setInputCloud(point_cloud);\n    mls.setComputeNormals(false); // \u662f\u5426\u8ba1\u7b97\u6cd5\u5411\u91cf\uff0c\u5982\u679c\u8ba1\u7b97\uff08True\uff09\uff0c\u53ef\u80fd\u4f1a\u53cd\uff0c\u5219\u9700\u8981\u6821\u6b63\u4e00\u4e0b\n    mls.setPolynomialOrder(3); //MLS\u62df\u5408\u66f2\u7ebf\u7684\u9636\u6570\n    mls.setSearchMethod(kdtree);\n    mls.setSearchRadius(5 * resolution); // \u62df\u5408\u66f2\u9762\u641c\u7d22\u534a\u5f84\n    // Reconstruct\n    mls.process(*filter_cloud);\n}\n\n/**\n* @brief \u5e73\u9762\u5206\u5272\uff0c\u5254\u9664\u5e73\u9762\u6570\u636e\n* @param [in] point_cloud \u8f93\u5165\u7684\u70b9\u4e91\n* @param [out] filter_cloud \u5206\u5272\u540e\u7ed3\u679c\n* @return\n*/\nvoid plane_segmentation(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud\n    , pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; filter_cloud)\n{\n    filter_cloud = std::make_shared&lt;pcl::PointCloud&lt;pcl::PointNormal&gt;&gt;();\n\n    pcl::SACSegmentation&lt;pcl::PointNormal&gt; seg;\n    pcl::PointIndices::Ptr inliers(new pcl::PointIndices);\n    pcl::ModelCoefficients::Ptr coefficients(new pcl::ModelCoefficients);\n    seg.setOptimizeCoefficients(true);\n    seg.setModelType(pcl::SACMODEL_PLANE); // \u9009\u62e9\u5e73\u9762\n    seg.setMethodType(pcl::SAC_RANSAC); // RANSAC \u65b9\u6cd5\n    seg.setMaxIterations(20); // \u6700\u5927\u8fed\u4ee3\u6b21\u6570\n    //seg.setMaxIterations(50); // \u6700\u5927\u8fed\u4ee3\u6b21\u6570\n    seg.setDistanceThreshold(1.0); // \u9608\u503c\n    seg.setInputCloud(point_cloud);\n    seg.segment(*inliers, *coefficients);\n\n    // \u53bb\u9664\u5e73\u9762\u5185\u70b9\n    pcl::ExtractIndices&lt;pcl::PointNormal&gt; extract;\n    extract.setInputCloud(point_cloud);\n    extract.setIndices(inliers);\n\n    extract.setNegative(true);\n    extract.filter(*filter_cloud);\n}\n\n/**\n* @brief \u70b9\u4e91\u7f51\u683c\u5316\n* @param [in] point_cloud \u8f93\u5165\u7684\u70b9\u4e91\n* @param [in] resolution \u70b9\u4e91\u89e3\u6790\u5ea6\n* @param [out] poly_mesh \u7f51\u683c\u6570\u636e\n* @return\n*/\nvoid triangulation(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud\n    , const float&amp; resolution\n    , pcl::PolygonMesh::Ptr&amp; poly_mesh)\n{\n    poly_mesh = std::make_shared&lt;pcl::PolygonMesh&gt;();\n\n    // \u6784\u5efakdtree\uff0c\u65b9\u4fbf\u641c\u7d22\u90bb\u57df\u6570\u636e\n    pcl::search::KdTree&lt;pcl::PointNormal&gt;::Ptr kdtree = std::make_shared&lt;pcl::search::KdTree&lt;pcl::PointNormal&gt;&gt;();\n    kdtree-&gt;setInputCloud(point_cloud);\n\n    pcl::GreedyProjectionTriangulation&lt;pcl::PointNormal&gt; gp3;\n    gp3.setSearchRadius(5 * resolution); // \u8bbe\u7f6e\u8fd1\u90bb\u641c\u7d22\u534a\u5f84\n    gp3.setMu(2.5); //\u8bbe\u7f6e\u6700\u8fd1\u90bb\u8ddd\u79bb\u7684\u4e58\u5b50\uff0c\u4ee5\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u7ec8\u641c\u7d22\u534a\u5f84\n    gp3.setMaximumNearestNeighbors(20); //\u8bbe\u7f6e\u641c\u7d22\u7684\u6700\u8fd1\u90bb\u70b9\u7684\u6700\u5927\u6570\u91cf\n    gp3.setMaximumSurfaceAngle(M_PI / 4); // 45 degrees\uff08pi\uff09\u6700\u5927\u5e73\u9762\u89d2\n    gp3.setMinimumAngle(M_PI / 18); // 10 degrees \u6bcf\u4e2a\u4e09\u89d2\u7684\u6700\u5c0f\u89d2\u5ea6\n    gp3.setMaximumAngle(2 * M_PI / 3); // 120 degrees \u6bcf\u4e2a\u4e09\u89d2\u7684\u6700\u5927\u89d2\u5ea6\n    gp3.setNormalConsistency(false); //\u5982\u679c\u6cd5\u5411\u91cf\u4e00\u81f4\uff0c\u8bbe\u7f6e\u4e3atrue\n\n    gp3.setInputCloud(point_cloud);\n    gp3.setSearchMethod(kdtree);\n    gp3.reconstruct(*poly_mesh);\n}\n\n/**\n* @brief \u8ba1\u7b97\u70b9\u4e91\u89e3\u6790\u5ea6\uff08\u7c97\u7565\uff09\n* @param [in] point_cloud \u8f93\u5165\u7684\u70b9\u4e91\n* @return resolution \u70b9\u4e91\u89e3\u6790\u5ea6\n*/\ndouble compute_resolution(const pcl::PointCloud&lt;pcl::PointNormal&gt;::ConstPtr&amp; point_cloud)\n{\n    double resolution = 0.0;\n    int numberOfPoints = 0;\n    int nres;\n    std::vector&lt;int&gt; indices(2);\n    std::vector&lt;float&gt; squaredDistances(2);\n\n    // \u6784\u5efakdtree\uff0c\u65b9\u4fbf\u641c\u7d22\u90bb\u57df\u6570\u636e\n    pcl::search::KdTree&lt;pcl::PointNormal&gt;::Ptr kdtree = std::make_shared&lt;pcl::search::KdTree&lt;pcl::PointNormal&gt;&gt;();\n    kdtree-&gt;setInputCloud(point_cloud);\n\n    for (size_t i = 0; i &lt; point_cloud-&gt;size(); ++i)\n    {\n        if (std::isnan((*point_cloud)[i].x)) // \u5254\u9664nan\u503c\n            continue;\n\n        nres = kdtree-&gt;nearestKSearch(i, 2, indices, squaredDistances); // \u7b2c\u4e00\u4e2a\u662f\u8be5\u70b9\u672c\u8eab\n        if (nres == 2)\n        {\n            resolution += sqrt(squaredDistances[1]);\n            ++numberOfPoints; // \u6700\u8fd1\u70b9\u7684\u8ddd\u79bb\n        }\n    }\n    if (numberOfPoints != 0)\n        resolution /= numberOfPoints; // \u5e73\u5747\u8ddd\u79bb\u5f53\u4f5c\u89e3\u6790\u5ea6\n\n    return resolution;\n}\n\n/**\n* @brief \u4fee\u6b63\u70b9\u4e91\u6cd5\u5411\u91cf\u65b9\u5411\n* @param [in] ref_cloud \u53c2\u8003\u7684\u70b9\u4e91\n* @param [in][out] correct_cloud \u5f85\u4fee\u6b63\u7684\u70b9\u4e91\n* @return\n*/\nvoid correct_normals(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; ref_cloud\n    , pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; correct_cloud)\n{\n    if (nullptr == ref_cloud || nullptr == correct_cloud\n        || ref_cloud-&gt;size() != correct_cloud-&gt;size()) {\n        return;\n    }\n\n    for (int idx = 0; idx &lt; ref_cloud-&gt;size(); ++idx) {\n        const pcl::Vector3fMap&amp; ref_nor = ref_cloud-&gt;points[idx].getNormalVector3fMap();\n        const pcl::Vector3fMap&amp; correct_nor = correct_cloud-&gt;points[idx].getNormalVector3fMap();\n        if (ref_nor.dot(correct_nor) &lt; 0) { // \u6cd5\u5411\u91cf\u65b9\u5411\u53cd\u4e86\uff0c\u9700\u8981\u6821\u6b63\n            correct_cloud-&gt;points[idx].normal_x *= -1;\n            correct_cloud-&gt;points[idx].normal_y *= -1;\n            correct_cloud-&gt;points[idx].normal_z *= -1;\n        }\n    }\n}\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/scanner/#visualizercpp","title":"visualizer.cpp","text":"C++<pre><code>#include \"visualizer.h\"\n\n/**\n* @brief \u663e\u793a\u70b9\u4e91\n* @param [in] point_cloud \u5f85\u663e\u793a\u70b9\u4e91\n* @param [in] show_normals \u662f\u5426\u663e\u793a\u6cd5\u5411\u91cf\n* @return\n*/\nvoid showPointCloud(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud, bool show_normals)\n{\n    pcl::visualization::PCLVisualizer viewer; // \u5b9a\u4e49\u5bf9\u8c61\n    viewer.setBackgroundColor(0, 0, 0); // \u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0crgb \n\n    pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointNormal&gt; red(point_cloud, 255, 0, 0); // rgb\n    // \u5c06\u70b9\u4e91\u8bbe\u7f6e\u989c\u8272\uff0c\u9ed8\u8ba4\u767d\u8272\n    viewer.addPointCloud&lt;pcl::PointNormal&gt;(point_cloud, red, \"point_cloud\");\n\n    if (show_normals) {\n        int level = 5; // \u591a\u5c11\u6761\u6cd5\u5411\u91cf\u96c6\u5408\u663e\u793a\u6210\u4e00\u6761\n        float scale = 2.0; // \u6cd5\u5411\u91cf\u957f\u5ea6\n        viewer.addPointCloudNormals&lt;pcl::PointNormal&gt;(point_cloud, level, scale, \"point_normals\");\n    }\n\n    viewer.spin(); // \u963b\u585e\u5f0f\u663e\u793a\n}\n\n/**\n* @brief \u540c\u4e00\u4e2a\u89c6\u53e3\uff0c\u663e\u793a\u4e24\u4e2a\u70b9\u4e91\n* @param [in] point_cloud_1 \u5f85\u663e\u793a\u70b9\u4e911\uff08\u7ea2\u8272\uff09\n* @param [in] point_cloud_2 \u5f85\u663e\u793a\u70b9\u4e911\uff08\u7eff\u8272\uff09\n* @return\n*/\nvoid showPointCloud(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud_1, \n    const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud_2)\n{\n    pcl::visualization::PCLVisualizer viewer; // \u5b9a\u4e49\u5bf9\u8c61\n    viewer.setBackgroundColor(0, 0, 0); // \u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0crgb \n\n    pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointNormal&gt; red(point_cloud_1, 255, 0, 0); // rgb\n    // \u5c06\u70b9\u4e91\u8bbe\u7f6e\u989c\u8272\uff0c\u9ed8\u8ba4\u767d\u8272\n    viewer.addPointCloud&lt;pcl::PointNormal&gt;(point_cloud_1, red, \"point_cloud_1\");\n    //\u5c06\u70b9\u6309\u7167\u5927\u5c0f\u4e3a3\u663e\u793a\n    viewer.setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE, 3, \"point_cloud_1\");\n\n    pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointNormal&gt; green(point_cloud_2, 0, 255, 0); // rgb\n    // \u5c06\u70b9\u4e91\u8bbe\u7f6e\u989c\u8272\uff0c\u9ed8\u8ba4\u767d\u8272\n    viewer.addPointCloud&lt;pcl::PointNormal&gt;(point_cloud_2, green, \"point_cloud_2\");\n    //\u5c06\u70b9\u6309\u7167\u5927\u5c0f\u4e3a5\u663e\u793a\n    viewer.setPointCloudRenderingProperties(pcl::visualization::PCL_VISUALIZER_POINT_SIZE, 5, \"point_cloud_2\");\n\n    viewer.spin(); // \u963b\u585e\u5f0f\u663e\u793a\n}\n\n/**\n* @brief \u5206\u5de6\u53f3\u4e24\u4e2a\u89c6\u53e3\uff0c\u663e\u793a\u4e24\u4e2a\u70b9\u4e91\n* @param [in] point_cloud_1 \u5f85\u663e\u793a\u70b9\u4e911\uff08\u7ea2\u8272\uff09\n* @param [in] point_cloud_2 \u5f85\u663e\u793a\u70b9\u4e911\uff08\u7eff\u8272\uff09\n* @return\n* @note \u5982\u679c\u4e0d\u663e\u793a\u6309\u4e0br\u952e\n*/\nvoid showPointCloud2ViewPort(const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud_1,\n    const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud_2)\n{\n    // \u5b9a\u4e49\u5bf9\u8c61\n    pcl::visualization::PCLVisualizer viewer;\n\n    int v1(1); // viewport\n    viewer.createViewPort(0.0, 0.0, 0.5, 1.0, v1);\n    viewer.setBackgroundColor(0, 0, 0, v1);\n    pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointNormal&gt; red(point_cloud_1, 255, 0 , 0); // rgb\n    viewer.addPointCloud&lt;pcl::PointNormal&gt;(point_cloud_1, red, \"point_cloud_1\", v1);\n\n    int v2(2);// viewport\n    viewer.createViewPort(0.5, 0.0, 1.0, 1.0, v2);\n    viewer.setBackgroundColor(0, 0, 0, v2);\n    pcl::visualization::PointCloudColorHandlerCustom&lt;pcl::PointNormal&gt; green(point_cloud_2, 0, 255, 0); // rgb\n    viewer.addPointCloud&lt;pcl::PointNormal&gt;(point_cloud_2, green, \"point_cloud_2\", v2);\n\n    viewer.spin();\n}\n\n\n/**\n* @brief \u663e\u793a\u7f51\u683c\u6570\u636e\n* @param [in] poly_mesh \u5f85\u663e\u793a\u7f51\u683c\u6570\u636e\n* @return\n*/\nvoid showPolygonMesh(const pcl::PolygonMesh::Ptr&amp; poly_mesh)\n{\n    pcl::visualization::PCLVisualizer viewer; // \u5b9a\u4e49\u5bf9\u8c61\n\n    viewer.addPolygonMesh(*poly_mesh, \"poly_mesh\");\n\n    viewer.spin();\n}\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/scanner/#filecpp","title":"file.cpp","text":"C++<pre><code>#include \"file.h\"\n#include &lt;fstream&gt;\n\n/**\n* @brief \u8bfb\u53d6asc\u683c\u5f0f\u70b9\u4e91\uff08x y z nx ny nz\uff09\n* @param [in] path \u6587\u4ef6\u8def\u5f84\n* @param [out] point_cloud \u8bfb\u53d6\u7684\u70b9\u4e91\u6570\u636e\n* @return\n*/\nbool readAscFile(std::string path, pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud)\n{\n    std::ifstream in_stream;\n    in_stream.open(path);\n    if (!in_stream.is_open()) {\n        return false;\n    }\n\n    point_cloud = std::make_shared&lt;pcl::PointCloud&lt;pcl::PointNormal&gt;&gt;();\n\n    float x, y, z;\n    float nx, ny, nz;\n    pcl::PointNormal pt;\n    while (!in_stream.eof()) {\n        in_stream &gt;&gt; x &gt;&gt; y &gt;&gt; z; // \u81ea\u5b9a\u4e49asc\u683c\u5f0f\uff1a x y z nx ny nz\n        in_stream &gt;&gt; nx &gt;&gt; ny &gt;&gt; nz;\n\n        if (!in_stream.eof()) {\n            pt.x = x; pt.y = y; pt.z = z;\n            pt.normal_x = nx; pt.normal_y = ny; pt.normal_z = nz;\n\n            point_cloud-&gt;push_back(pt);\n        }\n    }\n    in_stream.close();\n\n    return true;\n}\n\n/**\n* @brief \u4fdd\u5b58asc\u683c\u5f0f\u70b9\u4e91\uff08x y z nx ny nz\uff09\n* @param [in] path \u6587\u4ef6\u8def\u5f84\n* @param [in] point_cloud \u4fdd\u5b58\u7684\u70b9\u4e91\u6570\u636e\n* @return\n*/\nbool saveAscFile(std::string path, const pcl::PointCloud&lt;pcl::PointNormal&gt;::Ptr&amp; point_cloud)\n{\n    std::ofstream out_stream;\n    out_stream.open(path);\n    if (!out_stream.is_open()) {\n        return false;\n    }\n\n    for (int idx = 0; idx &lt; point_cloud-&gt;size(); ++idx) {\n        out_stream\n            &lt;&lt; point_cloud-&gt;points[idx].x &lt;&lt; \" \"\n            &lt;&lt; point_cloud-&gt;points[idx].y &lt;&lt; \" \"\n            &lt;&lt; point_cloud-&gt;points[idx].z &lt;&lt; \" \"\n            &lt;&lt; point_cloud-&gt;points[idx].normal_x &lt;&lt; \" \"\n            &lt;&lt; point_cloud-&gt;points[idx].normal_y &lt;&lt; \" \"\n            &lt;&lt; point_cloud-&gt;points[idx].normal_z &lt;&lt; \" \\n\";\n    }\n    out_stream.close();\n\n    return true;\n}\n\n/**\n* @brief \u4fdd\u5b58ply\u7f51\u683c\u6570\u636e\n* @param [in] path \u6587\u4ef6\u8def\u5f84\n* @param [in] poly_mesh \u4fdd\u5b58\u7684\u7f51\u683c\u6570\u636e\n* @return\n*/\nbool savePlyFile(std::string path, const pcl::PolygonMesh::Ptr&amp; poly_mesh)\n{\n    int ret = pcl::io::savePLYFileBinary(path, *poly_mesh);\n    return (0 == ret);\n}\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/","title":"Taichi\u7b80\u4ecb","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 465 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6ce8\u610f</p> <p>Generated by claude</p> <p>\u7ed3\u5408<code>Solar System.py</code>\u7528\u5230\u7684Taichi\u76f8\u5173\u5185\u5bb9</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u662f\u4e00\u4e2a\u4f7f\u7528Taichi\u6846\u67b6\u5b9e\u73b0\u7684N\u4f53\u5f15\u529b\u7cfb\u7edf\u6a21\u62df\u7a0b\u5e8f\u3002\u8ba9\u6211\u8be6\u7ec6\u8bb2\u89e3\u5176\u4e2d\u7528\u5230\u7684Taichi\u77e5\u8bc6\u70b9\uff1a</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#1-taichi","title":"1. Taichi\u521d\u59cb\u5316","text":"<p>Python<pre><code>ti.init(ti.gpu)  # ti.cpu / ti.gpu\n</code></pre> - <code>ti.init()</code> \u7528\u4e8e\u521d\u59cb\u5316Taichi\u8fd0\u884c\u65f6\u73af\u5883 - \u53c2\u6570\u53ef\u4ee5\u9009\u62e9 <code>ti.gpu</code>\uff08GPU\u52a0\u901f\uff09\u6216 <code>ti.cpu</code>\uff08CPU\u8fd0\u884c\uff09</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#2-taichi","title":"2. Taichi\u6570\u636e\u7ed3\u6784","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#field","title":"Field\uff08\u573a\uff09","text":"Python<pre><code>mass = ti.field(ti.f32, N)                    # \u6807\u91cf\u573a\npos = ti.Vector.field(2, ti.f32, N)           # 2D\u5411\u91cf\u573a  \nvel = ti.Vector.field(2, ti.f32, N)           # 2D\u5411\u91cf\u573a\nforce = ti.Vector.field(2, ti.f32, N)         # 2D\u5411\u91cf\u573a\nhistory = ti.Vector.field(2, ti.f32, shape=(N, MAX_HISTORY))  # \u591a\u7ef4\u5411\u91cf\u573a\n</code></pre> <ul> <li>\u6807\u91cf\u573a\uff1a<code>ti.field(\u6570\u636e\u7c7b\u578b, \u5f62\u72b6)</code> - \u5b58\u50a8\u5355\u4e2a\u6570\u503c</li> <li>\u5411\u91cf\u573a\uff1a<code>ti.Vector.field(\u7ef4\u5ea6, \u6570\u636e\u7c7b\u578b, \u5f62\u72b6)</code> - \u5b58\u50a8\u5411\u91cf\u6570\u636e</li> <li>\u6570\u636e\u7c7b\u578b\uff1a<code>ti.f32</code>\uff0832\u4f4d\u6d6e\u70b9\uff09\u3001<code>ti.i32</code>\uff0832\u4f4d\u6574\u6570\uff09\u7b49</li> <li>\u5f62\u72b6\u53c2\u6570\uff1a\u53ef\u4ee5\u662f\u5355\u4e2a\u6570\u5b57\u6216tuple\uff0c\u5b9a\u4e49field\u7684\u7ef4\u5ea6</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_1","title":"\u6570\u636e\u4f20\u8f93","text":"Python<pre><code>mass.from_numpy(mass_np)    # \u4ecenumpy\u6570\u7ec4\u590d\u5236\u6570\u636e\u5230Taichi field\npos.to_numpy()              # \u5c06Taichi field\u6570\u636e\u590d\u5236\u5230numpy\u6570\u7ec4\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#3-taichikernel","title":"3. Taichi\u6838\u51fd\u6570\uff08Kernel\uff09","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#tikernel","title":"@ti.kernel\u88c5\u9970\u5668","text":"<p>\u6240\u6709\u7528<code>@ti.kernel</code>\u88c5\u9970\u7684\u51fd\u6570\u90fd\u4f1a\u88ab\u7f16\u8bd1\u6210\u9ad8\u6027\u80fd\u7684\u5e76\u884c\u4ee3\u7801\uff1a</p> Python<pre><code>@ti.kernel\ndef clear_force():\n    for i in range(N):\n        force[i] = ti.Vector([0.0, 0.0])\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_2","title":"\u6838\u51fd\u6570\u7279\u70b9","text":"<ul> <li>\u5e76\u884c\u6267\u884c\uff1afor\u5faa\u73af\u4f1a\u81ea\u52a8\u5e76\u884c\u5316</li> <li>\u7c7b\u578b\u6ce8\u89e3\uff1a\u8fd4\u56de\u503c\u9700\u8981\u7c7b\u578b\u6ce8\u89e3\uff0c\u5982 <code>-&gt; ti.f32</code></li> <li>\u53c2\u6570\u7c7b\u578b\uff1a\u5916\u90e8\u6570\u7ec4\u9700\u8981\u7528 <code>ti.types.ndarray()</code> \u6ce8\u89e3</li> </ul> Python<pre><code>@ti.kernel\ndef copy_history_to_numpy(traj_np: ti.types.ndarray()):\n    # \u5904\u7406\u5916\u90e8numpy\u6570\u7ec4\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#4","title":"4. \u5e76\u884c\u8ba1\u7b97\u6a21\u5f0f","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_3","title":"\u81ea\u52a8\u5e76\u884c\u5316","text":"Python<pre><code>@ti.kernel\ndef compute_force():\n    for i in range(N):                    # \u5916\u5c42\u5faa\u73af\u5e76\u884c\u5316\n        for j in range(i + 1, N):         # \u5185\u5c42\u5faa\u73af\u4e32\u884c\n            # \u8ba1\u7b97\u5f15\u529b...\n</code></pre> <ul> <li>\u6700\u5916\u5c42\u7684range\u5faa\u73af\u4f1a\u88ab\u81ea\u52a8\u5e76\u884c\u5316</li> <li>\u5d4c\u5957\u5faa\u73af\u4fdd\u6301\u4e32\u884c\uff0c\u786e\u4fdd\u8ba1\u7b97\u6b63\u786e\u6027</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_4","title":"\u5411\u91cf\u64cd\u4f5c","text":"Python<pre><code>dist = pos[i] - pos[j]              # \u5411\u91cf\u51cf\u6cd5\nradius = dist.norm()                # \u5411\u91cf\u6a21\u957f\nf = G * mass[i] * mass[j] / (radius ** 3) * dist  # \u5411\u91cf\u6807\u91cf\u8fd0\u7b97\n</code></pre> <p>Taichi\u5185\u7f6e\u4e86\u4e30\u5bcc\u7684\u5411\u91cf\u8fd0\u7b97\u64cd\u4f5c\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#5","title":"5. \u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_5","title":"\u9ad8\u6548\u7684\u5185\u5b58\u8bbf\u95ee","text":"Python<pre><code>@ti.kernel\ndef update_semi_implicit_euler():\n    for i in range(N):\n        vel[i] += force[i] / mass[i] * dt    # \u76f4\u63a5\u8bbf\u95eefield\u5143\u7d20\n        pos[i] += vel[i] * dt\n</code></pre> <ul> <li>\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95eefield\u5143\u7d20</li> <li>Taichi\u4f1a\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f</li> </ul>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#6","title":"6. \u6570\u636e\u7c7b\u578b\u7cfb\u7edf","text":"Python<pre><code>history_idx = ti.field(ti.i32, shape=N)     # 32\u4f4d\u6574\u6570\nmass = ti.field(ti.f32, N)                  # 32\u4f4d\u6d6e\u70b9\n</code></pre> <p>\u5e38\u7528\u6570\u636e\u7c7b\u578b\uff1a - <code>ti.i32</code>, <code>ti.i64</code>\uff1a\u6574\u6570\u7c7b\u578b - <code>ti.f32</code>, <code>ti.f64</code>\uff1a\u6d6e\u70b9\u7c7b\u578b</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#7","title":"7. \u4e0e\u5916\u90e8\u5e93\u7684\u96c6\u6210","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#gui","title":"\u4e0eGUI\u7cfb\u7edf\u96c6\u6210","text":"Python<pre><code>gui = ti.GUI('N-body problem', (1024, 1024))\ngui.circles(pos.to_numpy(), color=0xffffff, radius=planet_radius)\n</code></pre> <p>Taichi\u63d0\u4f9b\u4e86\u7b80\u5355\u7684GUI\u7cfb\u7edf\u7528\u4e8e\u53ef\u89c6\u5316\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#8","title":"8. \u6027\u80fd\u4f18\u5316\u6280\u5de7","text":""},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_6","title":"\u6570\u503c\u7a33\u5b9a\u6027","text":"Python<pre><code>radius = dist.norm() + 1e-6    # \u907f\u514d\u9664\u96f6\u9519\u8bef\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_7","title":"\u5faa\u73af\u5c55\u5f00\u548c\u5411\u91cf\u5316","text":"<p>Taichi\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8fdb\u884c\u5404\u79cd\u4f18\u5316\uff0c\u5305\u62ec\u5faa\u73af\u5c55\u5f00\u3001\u5411\u91cf\u5316\u7b49\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/taichi%20intro/#_8","title":"\u6838\u5fc3\u4f18\u52bf","text":"<ol> <li>\u7b80\u5355\u6613\u7528\uff1aPython\u8bed\u6cd5\uff0c\u4f46\u6027\u80fd\u63a5\u8fd1C++</li> <li>\u81ea\u52a8\u5e76\u884c\uff1a\u65e0\u9700\u624b\u52a8\u7ba1\u7406\u7ebf\u7a0b</li> <li>\u8de8\u5e73\u53f0\uff1a\u540c\u6837\u7684\u4ee3\u7801\u53ef\u5728CPU/GPU\u4e0a\u8fd0\u884c</li> <li>\u5185\u5b58\u9ad8\u6548\uff1a\u4f18\u5316\u7684\u5185\u5b58\u5e03\u5c40\u548c\u8bbf\u95ee\u6a21\u5f0f</li> </ol> <p>\u8fd9\u4e2aN\u4f53\u6a21\u62df\u5c55\u793a\u4e86Taichi\u5728\u79d1\u5b66\u8ba1\u7b97\u4e2d\u7684\u5f3a\u5927\u80fd\u529b\uff0c\u901a\u8fc7\u7b80\u6d01\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u9ad8\u6027\u80fd\u7684\u7269\u7406\u6a21\u62df\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/video/","title":"OpenCV\u89c6\u9891\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 3365 \u4e2a\u5b57\u00a0\u00a034 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u5b9e\u9a8c\u5185\u5bb9\uff1a\u7ed9\u5b9a\u4e00\u6bb5\u9759\u6001\u80cc\u666f\u7684\u76ee\u6807\u8fd0\u52a8\u89c6\u9891\uff0c\u901a\u8fc7\u80cc\u666f\u5efa\u6a21\u83b7\u53d6\u573a\u666f\u7684\u80cc\u666f\u56fe\u50cf\uff08\u4e0d\u5305\u542b\u76ee\u6807\uff09\uff0c\u5e76\u8fdb\u884c\u56fe\u50cf\u53bb\u566a</p> <p>\u89c6\u9891\u7531\u4e00\u7cfb\u5217\u8fde\u7eed\u7684\u56fe\u50cf\u5e27\u7ec4\u6210</p> <p>\u89c6\u9891\u5199\u5165\uff1a\u58f0\u660e\u4fdd\u5b58\u8def\u5f84\uff0c\u683c\u5f0f\uff0c\u5e27\u7387\uff0c\u5206\u8fa8\u7387</p> <p>\u9759\u6001\u89c6\u9891\u7684\u80cc\u666f\u5efa\u6a21</p> <p>\u5747\u503c\u6cd5\uff1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53d6N\u5e27\u89c6\u9891\u56fe\u50cf\u5e8f\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u70b9\uff0c\u5728\u8fd9N\u5e27\u56fe\u50cf\u5728\u6b64\u70b9\u5747\u503c\u4e3a\u8be5\u70b9\u80cc\u666f\u56fe\u50cf\u4e2d\u7684\u7070\u5ea6\u503c</p> <p>\u4e2d\u503c\u6cd5\uff1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53d6N\u5e27\u89c6\u9891\u56fe\u50cf\u5e8f\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u70b9\uff0c\u5728\u8fd9N\u5e27\u56fe\u50cf\u5728\u6b64\u70b9\u5904\u7684N\u4e2a\u50cf\u7d20\u503c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6392\u5e8f\u540e\u7684\u4e2d\u503c\u4f5c\u4e3a\u8be5\u70b9\u80cc\u666f\u56fe\u50cf\u4e2d\u7684\u7070\u5ea6\u503c</p>"},{"location":"CourseNotes/robot%20control/practical/video/#_1","title":"\u57fa\u7840\u64cd\u4f5c","text":""},{"location":"CourseNotes/robot%20control/practical/video/#_2","title":"\u8bfb\u53d6\u89c6\u9891\u5e76\u4fdd\u5b58\u5e27","text":"<p>\u8981\u6355\u83b7\u89c6\u9891\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a VideoCapture \u5bf9\u8c61\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u8bfb\u53d6\u89c6\u9891\u5e76\u5c06\u6bcf\u4e00\u5e27\u4fdd\u5b58\u5230 frame \u6587\u4ef6\u5939\u7684\u793a\u4f8b\uff1a</p> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f20\u9012\u89c6\u9891\u6587\u4ef6\u7684\u8def\u5f84\u521b\u5efa\u4e86\u4e00\u4e2a VideoCapture \u5bf9\u8c61\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 while \u5faa\u73af\u901a\u8fc7 read() \u65b9\u6cd5\u8bfb\u53d6\u89c6\u9891\u7684\u6bcf\u4e00\u5e27\u3002\u5982\u679c\u5e27\u8bfb\u53d6\u6210\u529f\uff0c\u6211\u4eec\u4f7f\u7528 imwrite() \u65b9\u6cd5\u4fdd\u5b58\u8be5\u5e27\u3002\u6700\u540e\uff0c\u6211\u4eec\u91ca\u653e VideoCapture \u5bf9\u8c61\u3002</p> Python<pre><code>import cv2\nimport os\n\nfolder=os.path.exists('frame')\n\n# \u68c0\u67e5\u2018frame\u2019\u6587\u4ef6\u5939\u662f\u5426\u5b58\u5728\n# \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u6587\u4ef6\u5939\nif not folder:\n    os.makedirs('frame')\n    print('new folder...')\n    print('OK')\nelse:\n    print('There is this folder!')\n\n# \u5e27\u7f16\u53f7\nnumber=0\n\n# \u521b\u5efaVideoCapture\u5bf9\u8c61\ncap=cv2.VideoCapture('video.mp4')\n\nwhile True:\n    # \u4ece\u89c6\u9891\u4e2d\u8bfb\u53d6\u4e00\u5e27\n    ret,frame=cap.read()\n\n    # \u5e27\u7f16\u53f7\u589e\u52a0\n    number=number+1\n    if ret:\n        # \u4fdd\u5b58\u5e27\n        cv2.imwrite(f\"./frame/save{number}.jpg\",frame)\n\n    # \u9000\u51fa\u5faa\u73af\n    else:\n        break\n\nprint('Saved in the frame folder.')\n\nprint('Success!')\n\n# \u91ca\u653eVideoCapture\u5bf9\u8c61\ncap.release()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_3","title":"\u5199\u5165\u5e76\u4fdd\u5b58\u89c6\u9891","text":"<p>\u8981\u5199\u5165\u5e76\u4fdd\u5b58\u89c6\u9891\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a VideoWriter \u5bf9\u8c61\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5982\u4f55\u5199\u5165\u5e76\u4fdd\u5b58\u89c6\u9891\u7684\u793a\u4f8b\uff1a</p> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f20\u9012\u89c6\u9891\u6587\u4ef6\u7684\u8def\u5f84\u521b\u5efa\u4e86\u4e00\u4e2a VideoCapture \u5bf9\u8c61\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 get() \u65b9\u6cd5\u83b7\u53d6\u89c6\u9891\u5e27\u7684\u5c3a\u5bf8\u548c\u5e27\u7387\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4f20\u9012\u8f93\u51fa\u6587\u4ef6\u540d\u3001fourcc \u7f16\u7801\u3001\u5e27\u7387\u548c\u5e27\u5c3a\u5bf8\u521b\u5efa\u4e86\u4e00\u4e2a VideoWriter \u5bf9\u8c61\u3002fourcc \u7f16\u7801\u662f\u4e00\u4e2a\u56db\u5b57\u8282\u7f16\u7801\uff0c\u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u7f16\u89e3\u7801\u5668\u3002\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 XVID \u7f16\u89e3\u7801\u5668\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 while \u5faa\u73af\u901a\u8fc7 read() \u65b9\u6cd5\u8bfb\u53d6\u89c6\u9891\u7684\u6bcf\u4e00\u5e27\u3002\u5982\u679c\u5e27\u8bfb\u53d6\u6210\u529f\uff0c\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff08\u4f8b\u5982\uff0c\u5e94\u7528\u6ee4\u955c\uff09\uff0c\u5e76\u4f7f\u7528 VideoWriter \u5bf9\u8c61\u7684 write() \u65b9\u6cd5\u5c06\u5176\u5199\u5165\u8f93\u51fa\u89c6\u9891\u3002\u6700\u540e\uff0c\u6211\u4eec\u91ca\u653e VideoCapture \u548c VideoWriter \u5bf9\u8c61\u3002</p> Python<pre><code>import cv2\n\n# \u521b\u5efa\u4e00\u4e2a VideoCapture \u5bf9\u8c61\ncap = cv2.VideoCapture('video.mp4')\n\n# \u83b7\u53d6\u89c6\u9891\u5e27\u7684\u5c3a\u5bf8\u548c\u5e27\u7387\nwidth = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))\nheight = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\nfps = int(cap.get(cv2.CAP_PROP_FPS))\n\n# \u521b\u5efa\u4e00\u4e2a VideoWriter \u5bf9\u8c61\nfourcc = cv2.VideoWriter_fourcc(*'XVID')\nout = cv2.VideoWriter('output.avi', fourcc, fps, (width, height))\n\nwhile True:\n    # \u4ece\u89c6\u9891\u4e2d\u8bfb\u53d6\u4e00\u5e27\n    ret, frame = cap.read()\n\n    if ret:\n        # \u5904\u7406\u5e27\n        # ...\n        # \u5c06\u5904\u7406\u540e\u7684\u5e27\u5199\u5165\u8f93\u51fa\u89c6\u9891\n        out.write(frame)\n\n    else:\n        break\n\nprint('Succeed in saving!')\n\n# \u91ca\u653e VideoCapture \u548c VideoWriter \u5bf9\u8c61\ncap.release()\nout.release()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_4","title":"\u56fe\u50cf\u76f4\u65b9\u56fe","text":"<p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 cv2.imread() \u4ee5\u7070\u5ea6\u683c\u5f0f\u8bfb\u53d6\u56fe\u50cf\u6587\u4ef6\u3002\u7136\u540e\uff0c\u4f7f\u7528 cv2.calcHist() \u6216 numpy.histogram() \u8ba1\u7b97\u76f4\u65b9\u56fe\u3002\u6700\u540e\uff0c\u4f7f\u7528 matplotlib \u7ed8\u5236\u76f4\u65b9\u56fe\u5e76\u901a\u8fc7 savefig() \u4fdd\u5b58\u3002</p> Python<pre><code>import cv2\nimport matplotlib.pyplot as plt\n\n# \u8bfb\u53d6\u56fe\u50cf\uff0c\u7070\u5ea6\u683c\u5f0f\nimage_path = 'test.jpg'\nimg = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)\n\n# \u8ba1\u7b97\u76f4\u65b9\u56fe\nhist = cv2.calcHist([img], [0], None, [256], [0, 256])\n\n# \u53ef\u89c6\u5316\u76f4\u65b9\u56fe\nplt.figure()\nplt.title('Grayscale Histogram')\nplt.xlabel('Pixel Intensity')\nplt.ylabel('Frequency')\nplt.plot(hist, color='black')\nplt.xlim([0, 256])\n\n# \u4fdd\u5b58\u7ed8\u56fe\nsave_path = 'histogram.png'\nplt.savefig(save_path)\n\nprint(f'Saved as: {save_path}')\n</code></pre> <p><code>calcHist</code>\u53c2\u6570\uff1a</p> <ul> <li> <p>\u7b2c1\u4e2a\u53c2\u6570 <code>[img]</code>\uff1a\u56fe\u50cf\u6570\u636e\uff0c\u653e\u5728\u5217\u8868\u91cc\uff0c\u56e0\u4e3a\u53ef\u4ee5\u4e00\u6b21\u5904\u7406\u591a\u5f20\u56fe\u50cf\u3002</p> </li> <li> <p>\u8fd9\u91cc\u662f\u5355\u5f20\u56fe\uff0c\u6240\u4ee5\u5199 <code>[img]</code>\u3002</p> </li> <li> <p>\u7b2c2\u4e2a\u53c2\u6570 <code>[0]</code>\uff1a\u8981\u8ba1\u7b97\u7684\u901a\u9053\u7d22\u5f15\u3002</p> </li> <li> <p>\u7070\u5ea6\u56fe\u53ea\u6709\u4e00\u4e2a\u901a\u9053\uff08\u7d22\u5f15 0\uff09\u3002</p> </li> <li> <p>\u5f69\u8272\u56fe\uff1a0=B\uff0c1=G\uff0c2=R\u3002</p> </li> <li> <p>\u7b2c3\u4e2a\u53c2\u6570 <code>None</code>\uff1a\u63a9\u6a21\uff08mask\uff09\uff0c\u5982\u679c\u4e0d\u60f3\u5bf9\u6574\u5e45\u56fe\u50cf\u8ba1\u7b97\u76f4\u65b9\u56fe\uff0c\u800c\u662f\u9009\u5b9a\u90e8\u5206\u533a\u57df\uff0c\u5c31\u5728\u8fd9\u91cc\u4f20\u5165\u63a9\u6a21\u3002</p> </li> <li> <p><code>None</code> \u8868\u793a\u4f7f\u7528\u6574\u5f20\u56fe\u50cf\u3002</p> </li> <li> <p>\u7b2c4\u4e2a\u53c2\u6570 <code>[256]</code>\uff1a\u76f4\u65b9\u56fe\u7684 bins\uff08\u67f1\u5b50\u6570\uff09\uff0c\u5373\u7070\u5ea6\u503c\u5212\u5206\u7684\u533a\u95f4\u4e2a\u6570\u3002</p> </li> <li> <p>256 \u8868\u793a 0~255 \u5171 256 \u4e2a\u7070\u5ea6\u7ea7\u3002</p> </li> <li> <p>\u7b2c5\u4e2a\u53c2\u6570 <code>[0, 256]</code>\uff1a\u7070\u5ea6\u503c\u8303\u56f4\u3002</p> </li> <li> <p>\u901a\u5e38\u662f <code>[0, 256]</code>\uff0c\u56e0\u4e3a OpenCV \u76f4\u65b9\u56fe\u4e0a\u9650\u662f\u975e\u5305\u542b\u578b\uff08\u4e0d\u5305\u542b 256\uff09\u3002</p> </li> </ul>"},{"location":"CourseNotes/robot%20control/practical/video/#_5","title":"\u904d\u5386\u50cf\u7d20","text":"<ol> <li>\u4f7f\u7528 cv2.VideoCapture() \u8bfb\u53d6\u89c6\u9891\u3002  </li> <li>\u901a\u8fc7 cap.read() \u9010\u5e27\u8bfb\u53d6\u89c6\u9891\u3002  </li> <li>\u5bf9\u6bcf\u4e00\u5e27\uff08\u672c\u8d28\u662f NumPy \u6570\u7ec4\uff09\u7528\u53cc\u91cd\u6216\u4e09\u91cd\u5faa\u73af\uff08\u7070\u5ea6\u56fe\u7528\u53cc\u91cd\uff0c\u5f69\u8272\u56fe\u7528\u4e09\u91cd\uff09\u904d\u5386\u50cf\u7d20\u3002</li> </ol> Python<pre><code>import cv2\n\n# \u6253\u5f00\u89c6\u9891\u6587\u4ef6\ncap = cv2.VideoCapture('video.mp4')\n\n# \u5224\u65ad\u662f\u5426\u6253\u5f00\u6210\u529f\nif not cap.isOpened():\n    print('Failed to open the video.')\n    exit()\n\n# \u5e27\u6570\nframe_count = 0\n\n# \u9010\u5e27\u8bfb\u53d6\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    frame_count += 1\n    print(f\"Processing frame {frame_count}.\")\n\n    # \u6bcf\u4e00\u5e27\u7684\u5927\u5c0f(H,W,C)\n    height, width, channel = frame.shape\n\n    for y in range(height):\n        for x in range(width):\n            # \u83b7\u53d6RGB\u4e09\u4e2a\u901a\u9053\u503c\n            b, g, r = frame[y, x]\n            # \u5904\u7406\u50cf\u7d20\n            # ...\n            pass\n\n# \u91ca\u653e\u89c6\u9891\u5bf9\u8c61\ncap.release()\nprint('Finished!')\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_6","title":"\u5747\u503c\u6cd5\u80cc\u666f\u5efa\u6a21","text":"<ol> <li>\u8bfb\u53d6\u89c6\u9891\uff1a\u7528 cv2.VideoCapture() \u6253\u5f00\u89c6\u9891\u6587\u4ef6\u3002  </li> <li>\u9009\u62e9 N \u5e27\uff1a\u53ef\u4ee5\u9009\u62e9\u89c6\u9891\u7684\u524d N \u5e27\uff0c\u6216\u8005\u6bcf\u9694\u82e5\u5e72\u5e27\u91c7\u6837\u3002  </li> <li>\u7d2f\u52a0\u50cf\u7d20\u503c\uff1a\u5bf9\u6bcf\u4e00\u5e27\uff0c\u5c06\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u503c\u7d2f\u52a0\u5230\u4e00\u4e2a\u7d2f\u52a0\u6570\u7ec4\u4e2d\u3002   </li> <li>\u6c42\u5747\u503c\uff1a\u7d2f\u52a0\u5b8c\u6210\u540e\uff0c\u5c06\u7d2f\u52a0\u503c\u9664\u4ee5\u5e27\u6570 N\uff0c\u5f97\u5230\u6bcf\u4e2a\u50cf\u7d20\u7684\u5e73\u5747\u503c\uff0c\u5373\u80cc\u666f\u989c\u8272\u503c\u3002</li> </ol> Python<pre><code>import cv2\nimport numpy as np\n\n# \u89c6\u9891\u8def\u5f84\nvideo_path = 'video.mp4'\ncap = cv2.VideoCapture(video_path)\n\n# \u8bbe\u7f6e\u5e27\u6570\nN = 50 # \u603b\u5904\u7406\u5e27\u6570\ncount = 0 # \u5df2\u5904\u7406\u5e27\u6570\n\n# \u8bfb\u53d6\u7b2c\u4e00\u5e27\u83b7\u53d6\u5c3a\u5bf8\nret, frame = cap.read()\nif not ret:\n    print('Cannot read the video!')\n    exit()\n\n# \u6bcf\u4e00\u5e27\u7684\u53c2\u6570(H,W,C)\nheight, width, channels = frame.shape\n\n# \u521d\u59cb\u5316\u7d2f\u52a0\u6570\u7ec4\uff08\u6d6e\u70b9\u578b\uff09\naccumulate = np.zeros((height, width, channels), dtype=np.float32)\n\n# \u5c06\u7b2c\u4e00\u5e27\u52a0\u5165\u7d2f\u52a0\naccumulate += frame\ncount += 1\n\nwhile count &lt; N:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    accumulate += frame\n    count += 1\n\n# \u6c42\u5747\u503c\nbackground = (accumulate / count).astype(np.uint8)\n\n# \u9ad8\u65af\u6ee4\u6ce2\u5e73\u6ed1\u80cc\u666f\uff0c\u6d88\u9664\u9b3c\u5f71\nbackground_smooth = cv2.GaussianBlur(background, (7, 7), 0)\n\n# \u5de6\u8fb9\u662f\u539f\u59cb\u5747\u503c\u80cc\u666f\uff0c\u53f3\u8fb9\u662f\u5e73\u6ed1\u540e\u7684\u80cc\u666f\ncombined = np.hstack((background, background_smooth))\n\n# \u4fdd\u5b58\u80cc\u666f\u56fe\u50cf\ncv2.imwrite('background_comparison.png', combined)\nprint('Comparison image saved!')\n\ncap.release()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_7","title":"\u4e2d\u503c\u6cd5\u80cc\u666f\u5efa\u6a21","text":"<ol> <li>\u8bfb\u53d6\u89c6\u9891\uff0c\u9009\u62e9 N \u5e27\u3002  </li> <li>\u5c06 N \u5e27\u5b58\u5165\u6570\u7ec4\uff08\u6bcf\u5e27\u4e3a (H, W, C)\uff09\u3002  </li> <li>\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u70b9\u6cbf\u65f6\u95f4\u8f74\u53d6 N \u4e2a\u50cf\u7d20\u503c\uff0c\u8ba1\u7b97\u4e2d\u503c\uff08np.median\uff09\u3002  </li> <li>\u5f97\u5230\u80cc\u666f\u56fe\u50cf\u3002</li> </ol> Python<pre><code>import cv2\nimport numpy as np\n\n# \u89c6\u9891\u8def\u5f84\nvideo_path = 'video.mp4'\ncap = cv2.VideoCapture(video_path)\n\n# \u8bbe\u7f6e\u4f7f\u7528\u7684\u5e27\u6570\nN = 50\ncount = 0\nframes = []\n\n# \u8bfb\u53d6\u524dN\u5e27\nwhile count &lt; N:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    frames.append(frame.astype(np.float32)) # \u8f6c\u6d6e\u70b9\uff0c\u907f\u514d\u6ea2\u51fa\n    count += 1\n\ncap.release()\n\nif len(frames) == 0:\n    print('Failed to read any frames.')\n    exit()\n\n# \u5c06\u5e27\u5806\u53e0\u4e3a(N,H,W,C)\nstacked_frames = np.stack(frames, axis=0)\n\n# \u6cbf\u65f6\u95f4\u8f74\u8ba1\u7b97\u4e2d\u503c\nbackground = np.median(stacked_frames, axis=0).astype(np.uint8)\n\n# \u4fdd\u5b58\u80cc\u666f\u56fe\u50cf\ncv2.imwrite('background_median_color.png', background)\nprint('Background saved!')\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_8","title":"\u524d\u666f\u63d0\u53d6\u548c\u8bc6\u522b","text":""},{"location":"CourseNotes/robot%20control/practical/video/#2","title":"\u4efb\u52a1 2 \u00b7 \u57fa\u4e8e\u80cc\u666f\u5dee\u5206\u7684\u524d\u666f\u5efa\u6a21\u4e0e\u8fd0\u52a8\u68c0\u6d4b","text":"<p>\u76ee\u6807\uff1a\u5229\u7528\u4efb\u52a1 1 \u7684\u80cc\u666f\u56fe\u6216\u5728\u7ebf\u66f4\u65b0\u7684\u80cc\u666f\uff0c\u63d0\u53d6\u524d\u666f\u5927\u9f20\u673a\u5668\u4eba\uff0c\u5b8c\u6210\u76ee\u6807\u68c0\u6d4b\u4e0e\u53ef\u89c6\u5316\u3002 \u8f93\u51fa\uff1a\u68c0\u6d4b\u53ef\u89c6\u5316\u89c6\u9891 <code>outputs/detect_vis.mp4</code>\uff0c\u4ee5\u53ca\u5173\u952e\u5e27\u53ef\u89c6\u5316\u4e0e\u7b80\u5355\u6307\u6807\u3002</p> <p>\u8bc4\u5206\uff1a</p> <ul> <li>1.1 \u56fe\u50cf\u5904\u7406\u57fa\u7840</li> <li>1.2 \u9759\u6001\u80cc\u666f\u5dee\u5206</li> <li>1.3 \u8f6e\u5ed3\u7b5b\u9009 + \u6700\u5c0f\u5916\u63a5\u77e9\u5f62\uff08minAreaRect\uff09\u5b9e\u73b0\u76ee\u6807\u68c0\u6d4b\u548c\u8ddf\u8e2a</li> <li>1.4 \u6269\u5c55\u4efb\u52a1\uff08+\u5206\uff09\uff1a\u5bf9\u6bd4 OpenCV \u80cc\u666f\u5efa\u6a21\u5668</li> </ul> Python<pre><code># %pip install opencv-python numpy matplotlib ipywidgets -q\nimport cv2, numpy as np, math, time\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nfrom IPython.display import Video, display\n\nfrom matplotlib import pyplot as plt\nfrom matplotlib import font_manager, rcParams\n# \u5728 Windows \u4e0a\u5e38\u89c1\u7684\u4e2d\u6587\u5b57\u4f53\u4f18\u5148\u7ea7\u5217\u8868\n_candidate_fonts = [\n    \"SimHei\",            # \u9ed1\u4f53\n    \"Microsoft YaHei\",   # \u5fae\u8f6f\u96c5\u9ed1\n    \"SimSun\",            # \u5b8b\u4f53\n    \"KaiTi\",             # \u6977\u4f53\n]\nrcParams['font.sans-serif'] = _candidate_fonts\nrcParams['axes.unicode_minus'] = False  # \u4f7f\u5750\u6807\u8f74\u7b49\u80fd\u6b63\u5e38\u663e\u793a\u8d1f\u53f7\nprint(\"Matplotlib \u4e2d\u6587\u5b57\u4f53\u8bbe\u7f6e\u5b8c\u6210\uff1a\", rcParams['font.sans-serif'])\n\nDATA = Path(\"data\")\nOUT = Path(\"outputs\")\nDATA.mkdir(exist_ok=True); OUT.mkdir(exist_ok=True)\n\nvideo_path = str(DATA/\"demo.mp4\")\nbg_path = str(DATA/\"bg_estimated.jpg\")\nprint(\"\u89c6\u9891\uff1a\", video_path)\nprint(\"\u80cc\u666f\uff1a\", bg_path)\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#_9","title":"\u56fe\u50cf\u5904\u7406\u57fa\u7840","text":"<p>\u672c\u8282\u5c06\u7ed9\u51fa\u4efb\u52a12\u4e2d\u201c\u80cc\u666f\u5dee\u5206\u2192\u9608\u503c\u5316\u2192\u5f62\u6001\u5b66\u5904\u7406\u201d\u7684\u6838\u5fc3\u6b65\u9aa4\u6d89\u53ca\u5230\u7684\u77e5\u8bc6\u70b9\uff1a\u6982\u5ff5\u3001\u6570\u5b66\u5b9a\u4e49/\u76f4\u89c9\u3001\u5178\u578b\u53c2\u6570\u3001\u5e38\u89c1\u5751\u3001\u793a\u4f8b\u4ee3\u7801\u3002 \u5efa\u8bae\u8bfe\u5802\uff1a\u6bcf\u4f4d\u540c\u5b66\u5148\u5355\u72ec\u8fd0\u884c\u6bcf\u4e2a\u77e5\u8bc6\u70b9\u7684\u4f8b\u5b50\uff0c\u518d\u628a\u5b83\u4eec\u6309\u201c\u5dee\u5206\u2192\u9608\u503c\u2192\u5f00/\u95ed\u201d\u7684\u987a\u5e8f\u7ec4\u5408\u8d77\u6765\u5b8c\u6210\u68c0\u6d4b\u3002</p> <p>\u6f14\u793a\u9ed8\u8ba4\u4f7f\u7528 <code>data/room.mp4</code> \u548c <code>outputs/bg_estimated.jpg</code>\uff1b\u5982\u672a\u751f\u6210\uff0c\u8bf7\u5148\u5b8c\u6210\u4efb\u52a11\u3002</p>"},{"location":"CourseNotes/robot%20control/practical/video/#1cv2absdiff","title":"\u77e5\u8bc6\u70b9 1\uff1a<code>cv2.absdiff</code> \u2014\u2014 \u50cf\u7d20\u7ea7\u7edd\u5bf9\u5dee\u5206\uff08\u80cc\u666f\u5dee\u5206/\u5e27\u95f4\u5dee\u5206\uff09","text":"<p>\u4f5c\u7528\uff1a\u8861\u91cf\u4e24\u5f20\u56fe\u5bf9\u5e94\u50cf\u7d20\u7684\u5f3a\u5ea6\u5dee\u5f02\uff0c\u7528\u4e8e\u628a\u201c\u53d8\u5316/\u8fd0\u52a8\u201d\u7684\u533a\u57df\u51f8\u663e\u51fa\u6765\u3002 \u6570\u5b66\uff1a\u5bf9\u6bcf\u4e2a\u50cf\u7d20 \\((x,y)\\) \u548c\u901a\u9053 \\(c\\)\uff0c\\(D(x,y,c) = |I_1(x,y,c) - I_2(x,y,c)|\\)\u3002 \u4e24\u79cd\u5e38\u89c1\u7528\u6cd5\uff1a 1) \u80cc\u666f\u5dee\u5206\uff1a<code>absdiff(\u5f53\u524d\u5e27, \u80cc\u666f)</code> \u2192 \u9002\u5408\u9759\u6001\u80cc\u666f\u3002  </p> <p>2) \u5e27\u95f4\u5dee\u5206\uff1a<code>absdiff(\u5f53\u524d\u5e27, \u4e0a\u4e00\u5e27)</code> \u2192 \u9002\u5408\u6162\u53d8\u5316\u5149\u7167\u4f46\u4f1a\u5bf9\u4f4e\u901f\u7269\u4f53\u4e0d\u654f\u611f\u3002</p> <p>\u8981\u70b9 &amp; \u5751\uff1a - \u5148\u505a\u7070\u5ea6\u5316\u53ef\u51cf\u5c11\u566a\u58f0\u548c\u901a\u9053\u5dee\u5f02\uff1b\u5f69\u8272\u5dee\u5206\u6709\u65f6\u4f1a\u653e\u5927\u989c\u8272\u6296\u52a8\u3002 - \u5dee\u5206\u524d\u53ef\u505a\u8f7b\u5fae\u5e73\u6ed1\uff08\u9ad8\u65af/\u5747\u503c\uff09\u6291\u5236\u4f20\u611f\u5668\u566a\u58f0\u3002 - \u8f93\u5165\u7c7b\u578b\u901a\u5e38\u662f <code>uint8</code>\uff0c<code>absdiff</code> \u5df2\u5904\u7406\u4e86\u6ea2\u51fa/\u7b26\u53f7\u95ee\u9898\u3002</p> <p>\u4e0b\u9762\u4ee3\u7801\u5c55\u793a\u80cc\u666f\u5dee\u5206\u4e0e\u5e27\u95f4\u5dee\u5206\u7684\u53ef\u89c6\u5316\uff1a</p> Python<pre><code># \u51c6\u5907\u5355\u5e27\u793a\u4f8b\ncap = cv2.VideoCapture(str(Path(\"data\")/\"demo.mp4\"))\nok, f1 = cap.read()\nok2, f2 = cap.read()  # \u4e0b\u4e00\u5e27\uff08\u7528\u4e8e\u5e27\u95f4\u5dee\u5206\uff09\ncap.release()\n\nbg = cv2.imread(str(Path(\"data\")/\"bg_estimated.jpg\"), cv2.IMREAD_COLOR)\nassert f1 is not None and bg is not None, \"\u8bf7\u5148\u5b8c\u6210\u4efb\u52a11\u5e76\u786e\u4fdd\u5b58\u5728 data/room.mp4 \u4e0e outputs/bg_estimated.jpg\"\n\n# \u9884\u5904\u7406\uff1a\u8f6c\u7070\u5ea6 &amp; \u8f7b\u5fae\u6a21\u7cca\uff08\u53ef\u8c03\uff09\ng1 = cv2.GaussianBlur(cv2.cvtColor(f1, cv2.COLOR_BGR2GRAY), (5,5), 0)\ng2 = cv2.GaussianBlur(cv2.cvtColor(f2, cv2.COLOR_BGR2GRAY), (5,5), 0)\ngbg = cv2.GaussianBlur(cv2.cvtColor(bg, cv2.COLOR_BGR2GRAY), (5,5), 0)\n\n# TODO\uff1a\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2aabsdiff\u51fd\u6570\ndiff_bg = cv2.absdiff(g1, gbg)  # \u80cc\u666f\u5dee\u5206\ndiff_fr = cv2.absdiff(g2, g1)   # \u5e27\u95f4\u5dee\u5206\n\nfig, ax = plt.subplots(1,3, figsize=(12,4))\nax[0].imshow(cv2.cvtColor(f1, cv2.COLOR_BGR2RGB)); ax[0].set_title(\"\u539f\u59cb\u5e27\")\nax[1].imshow(diff_bg, cmap=\"gray\"); ax[1].set_title(\"\u80cc\u666f\u5dee\u5206 absdiff(frame, bg)\")\nax[2].imshow(diff_fr, cmap=\"gray\"); ax[2].set_title(\"\u5e27\u95f4\u5dee\u5206 absdiff(frame_t, frame_t-1)\")\nfor a in ax: a.axis(\"off\")\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#2cv2threshold","title":"\u77e5\u8bc6\u70b9 2\uff1a<code>cv2.threshold</code> \u2014\u2014 \u9608\u503c\u5316\u628a\u5dee\u5206\u56fe\u8f6c\u4e3a\u4e8c\u503c\u524d\u666f","text":"<p>\u4f5c\u7528\uff1a\u5c06\u7070\u5ea6\u5dee\u5206\u56fe\u8f6c\u6362\u4e3a\u4e8c\u503c\u63a9\u7801\uff08\u524d\u666f=1/\u80cc\u666f=0\uff09\u3002 \u57fa\u672c\u5f62\u5f0f\uff1a<code>_, mask = cv2.threshold(diff, T, 255, cv2.THRESH_BINARY)</code> \u5176\u4e2d\\(T\\)\u662f\u9608\u503c\u3002</p> <p>\u9009\u62e9\u9608\u503c\u7684\u4e09\u79cd\u601d\u8def\uff1a 1) \u56fa\u5b9a\u9608\u503c\uff08\u8bfe\u5802\u63a8\u8350\u8d77\u70b9\uff09\uff1a\u5982 \\(T \\in [25,35]\\)\u3002  </p> <p>2) OTSU \u81ea\u52a8\u9608\u503c\uff1a<code>cv2.THRESH_BINARY+cv2.THRESH_OTSU</code>\uff0c\u5bf9\u53cc\u5cf0\u76f4\u65b9\u56fe\u6709\u6548\u3002  </p> <p>3) \u81ea\u9002\u5e94\u9608\u503c\uff1a\u9002\u5408\u5149\u7167\u4e0d\u5747\uff08\u672c\u4efb\u52a1\u5148\u4e0d\u5f3a\u5236\uff09\u3002</p> <p>\u5e38\u89c1\u5751\uff1a\u9608\u503c\u8fc7\u5c0f \u2192 \u566a\u58f0\uff1b\u8fc7\u5927 \u2192 \u76ee\u6807\u65ad\u88c2/\u6f0f\u68c0\u3002\u5efa\u8bae\u914d\u5408\u76f4\u65b9\u56fe\u89c2\u5bdf\u3002</p> <p>\u793a\u4f8b\uff1a\u56fa\u5b9a\u9608\u503c vs OTSU\uff1a</p> <p>Opencv\u5b98\u65b9\u6587\u6863\uff1ahttps://docs.opencv.org/4.x/d7/d4d/tutorial_py_thresholding.html</p> Python<pre><code># \u590d\u7528\u4e0a\u4e00\u8282\u7684 diff_bg\ndiff = diff_bg.copy()\n\n# \u56fa\u5b9a\u9608\u503c\nT = 28\n_, m_fixed = cv2.threshold(diff, T, 255, cv2.THRESH_BINARY)\n\n# OTSU\uff08\u4f1a\u5ffd\u7565\u624b\u52a8\u9608\u503c\uff0c\u8fd4\u56de\u81ea\u52a8T\uff09\n_, m_otsu = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n\nfig, ax = plt.subplots(1,4, figsize=(12,4))\nax[0].hist(diff.ravel(), bins=50); ax[0].set_title(\"\u5dee\u5206\u76f4\u65b9\u56fe\")\nax[1].imshow(diff, cmap=\"gray\"); ax[1].set_title(\"\u5dee\u5206\u56fe\")\nax[2].imshow(m_fixed, cmap=\"gray\"); ax[2].set_title(f\"\u56fa\u5b9a\u9608\u503c T={T}\")\nax[3].imshow(m_otsu, cmap=\"gray\"); ax[3].set_title(\"OTSU \u81ea\u52a8\u9608\u503c\")\nfor a in ax: a.axis(\"off\")\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#3","title":"\u77e5\u8bc6\u70b9 3\uff1a\u5f62\u6001\u5b66\u64cd\u4f5c\u53ca\u8fde\u901a\u57df","text":"<p>\u56fe\u50cf\u7684\u5f62\u6001\u5b66\u64cd\u4f5c\u5e38\u7528\u4e8e\u4e8c\u503c\u56fe\u50cf\u7684\u5904\u7406\uff0c\u57fa\u4e8e\u7ed3\u6784\u5143\u7d20 (structuring element, kernel)\uff0c \u53ef\u5b9e\u73b0\u566a\u58f0\u53bb\u9664\u3001\u5b54\u6d1e\u586b\u8865\u3001\u8fb9\u754c\u63d0\u53d6\u7b49\u3002</p> <p>\uff081\uff09\u57fa\u672c\u64cd\u4f5c</p> <ul> <li> <p> \u8150\u8680 Erode\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09 <li> <p>\u5b9a\u4e49\uff1a\u524d\u666f\u533a\u57df\u6536\u7f29\uff0c\u53bb\u9664\u7ec6\u5c0f\u566a\u70b9\u3002  </p> </li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u7ed3\u6784\u5143\u7d20\u5185 \u6240\u6709\u50cf\u7d20\u90fd\u662f\u524d\u666f \u65f6\uff0c\u4e2d\u5fc3\u624d\u4fdd\u7559\u4e3a\u524d\u666f\u3002  </li> <p>\u6570\u5b66\u8868\u8fbe\u5f0f\uff1a  </p> <p>$$   A \\ominus B = { z \\mid B_z \\subseteq A }   $$  </p> <p>\u5176\u4e2d \\(A\\) \u662f\u539f\u56fe\uff0c\\(B\\) \u662f\u7ed3\u6784\u5143\u7d20\u3002  </p> <p>\u2192 \u7ed3\u679c\uff1a\u8fb9\u7f18\u6536\u7f29\uff0c\u7ec6\u8282\u53d8\u7ec6\uff0c\u5b64\u7acb\u70b9\u6d88\u5931\u3002  </p> <ul> <li> <p> \u81a8\u80c0 Dilate\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09 <li> <p>\u5b9a\u4e49\uff1a\u524d\u666f\u533a\u57df\u81a8\u5927\uff0c\u586b\u8865\u5c0f\u5b54\u6d1e\u3002  </p> </li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u7ed3\u6784\u5143\u7d20\u5185 \u53ea\u8981\u6709\u4e00\u4e2a\u524d\u666f\uff0c\u4e2d\u5fc3\u5c31\u53d8\u4e3a\u524d\u666f\u3002  </li> <p>\u6570\u5b66\u8868\u8fbe\u5f0f\uff1a  </p> <p>$$   A \\oplus B = { z \\mid (B^s)_z \\cap A \\neq \\emptyset }   $$  </p> <p>\u5176\u4e2d \\(B^s\\) \u662f \\(B\\) \u7684\u5bf9\u79f0\u3002  </p> <p>\u2192 \u7ed3\u679c\uff1a\u8fb9\u7f18\u6269\u5f20\uff0c\u5b54\u6d1e\u88ab\u586b\u8865\u3002  </p> <ul> <li> <p> \u5f00\u8fd0\u7b97 Open\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09 <li> <p>\u5b9a\u4e49\uff1a\u5148\u8150\u8680\u540e\u81a8\u80c0\u3002  </p> </li> <li>\u516c\u5f0f\uff1a  </li> <p>$$   A \\circ B = (A \\ominus B) \\oplus B   $$  </p> <p>\u2192 \u529f\u80fd\uff1a\u53bb\u9664\u5c0f\u566a\u70b9\uff0c\u4fdd\u7559\u4e3b\u8981\u8f6e\u5ed3\u3002  </p> <ul> <li> <p> \u95ed\u8fd0\u7b97 Close\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09 <li> <p>\u5b9a\u4e49\uff1a\u5148\u81a8\u80c0\u540e\u8150\u8680\u3002  </p> </li> <li>\u516c\u5f0f\uff1a  </li> <p>$$   A \\bullet B = (A \\oplus B) \\ominus B   $$  </p> <p>\u2192 \u529f\u80fd\uff1a\u586b\u8865\u5c0f\u5b54\uff0c\u8fde\u63a5\u65ad\u88c2\u533a\u57df\u3002  </p> <ul> <li> <p> \u5f62\u6001\u5b66\u68af\u5ea6 Gradient\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09 <li> <p>\u5b9a\u4e49\uff1a\u81a8\u80c0 \u2212 \u8150\u8680\uff0c\u7a81\u51fa\u8fb9\u754c\u3002  </p> </li> <li>\u516c\u5f0f\uff1a  </li> <p>$$   \\text{Grad}(A) = (A \\oplus B) - (A \\ominus B)   $$  </p> <p>\u2192 \u529f\u80fd\uff1a\u52fe\u52d2\u7269\u4f53\u8fb9\u754c\u3002  </p> <p>\uff082\uff09\u8fde\u901a\u57df\u4e0e\u8f6e\u5ed3\uff08\ud83d\udcd8 \u70b9\u51fb\u5c55\u5f00\uff09</p> <ul> <li>connectedComponents\uff1a\u6309 4/8 \u90bb\u57df\u4e3a\u524d\u666f\u6253\u6807\u7b7e\uff0c\u5f97\u5230\u533a\u57df\u6570\u3001\u6807\u7b7e\u56fe </li> <li>findContours\uff1a\u63d0\u53d6\u5916\u8f6e\u5ed3/\u5c42\u7ea7\u7ed3\u6784\uff0c\u53ef\u7528\u4e8e\u7edf\u8ba1\u9762\u79ef\u3001\u5468\u957f\u3001\u5916\u63a5\u77e9\u5f62\u7b49  </li> <li>\u53ef\u5c06\u6807\u7b7e\u56fe\u968f\u673a\u4e0a\u8272\u76f4\u89c2\u5c55\u793a\u5b9e\u4f8b\u5206\u5272\u6548\u679c</li> </ul> Python<pre><code>import cv2, numpy as np, matplotlib.pyplot as plt\n\n# \u5148\u7528\u56fa\u5b9a\u9608\u503c\u5f97\u5230\u4e00\u4e2a\u7c97\u63a9\u7801\nT = 28\n_, mask0 = cv2.threshold(diff_bg, T, 255, cv2.THRESH_BINARY)\n\n\n# \u7ed3\u6784\u5143\u7d20\uff08\u6838\uff09\nkernel3 = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (3,3))\nkernel5 = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5,5))\n\n# \u8150\u8680\uff08\u7626\u8eab\uff09\nerode_3_1 = cv2.erode(mask0, kernel3, iterations=1)\nerode_5_1 = cv2.erode(mask0, kernel5, iterations=1)\nerode_5_2 = cv2.erode(mask0, kernel5, iterations=2)\n\n# \u81a8\u80c0\uff08\u589e\u7c97\uff09\ndilate_3_1 = cv2.dilate(mask0, kernel3, iterations=1)\ndilate_5_1 = cv2.dilate(mask0, kernel5, iterations=1)\ndilate_5_2 = cv2.dilate(mask0, kernel5, iterations=2)\n\n# \u76f4\u63a5\u8f93\u51fa\uff08\u4e0d\u4fdd\u5b58\u6587\u4ef6\uff09\nfig, ax = plt.subplots(2, 4, figsize=(12,6))\nax[0,0].imshow(mask0, cmap=\"gray\"); ax[0,0].set_title(\"\u539f\u59cb\u4e8c\u503c mask0\")\nax[0,1].imshow(erode_3_1, cmap=\"gray\"); ax[0,1].set_title(\"Erode 3x3\u00d71\")\nax[0,2].imshow(erode_5_1, cmap=\"gray\"); ax[0,2].set_title(\"Erode 5x5\u00d71\")\nax[0,3].imshow(erode_5_2, cmap=\"gray\"); ax[0,3].set_title(\"Erode 5x5\u00d72\")\n\nax[1,0].imshow(mask0, cmap=\"gray\"); ax[1,0].set_title(\"\u539f\u59cb\u4e8c\u503c mask0\")\nax[1,1].imshow(dilate_3_1, cmap=\"gray\"); ax[1,1].set_title(\"Dilate 3x3\u00d71\")\nax[1,2].imshow(dilate_5_1, cmap=\"gray\"); ax[1,2].set_title(\"Dilate 5x5\u00d71\")\nax[1,3].imshow(dilate_5_2, cmap=\"gray\"); ax[1,3].set_title(\"Dilate 5x5\u00d72\")\n\nfor a in ax.ravel(): a.axis(\"off\")\nplt.tight_layout(); plt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#cv2morphologyex-open","title":"<code>cv2.morphologyEx</code> \u7684 \u5f00\u8fd0\u7b97\uff08Open\uff09\u2014\u2014\u53bb\u5c0f\u566a\u70b9","text":"<p>\u5b9a\u4e49\uff1a\u5f00\u8fd0\u7b97 = \u5148\u8150\u8680\uff08erode\uff09\u540e\u81a8\u80c0\uff08dilate\uff09\u3002 \u76f4\u89c9\uff1a\u6e05\u7406\u201c\u76d0\u7c92\u201d\u6837\u7684\u5c0f\u767d\u70b9\uff0c\u4fdd\u7559\u8f83\u5927\u524d\u666f\u7ed3\u6784\u3002 \u63a5\u53e3\uff1a<code>cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)</code></p> <p>\u5173\u952e\u53c2\u6570\uff1a - <code>kernel</code>\uff08\u7ed3\u6784\u5143\u7d20\uff09\u5f62\u72b6\u4e0e\u5c3a\u5bf8\u6781\u5176\u91cd\u8981\uff1a\u692d\u5706/\u77e9\u5f62/\u5341\u5b57\uff1b\u5c3a\u5bf8 3\u00d73, 5\u00d75, 7\u00d77\u2026 - \u5c3a\u5bf8\u8d8a\u5927\uff0c\u8d8a\u5bb9\u6613\u62b9\u6389\u7ec6\u5c0f\u7ed3\u6784\uff0c\u4e5f\u53ef\u80fd\u524a\u5f31\u76ee\u6807\u8fb9\u7f18\u3002</p> <p>\u793a\u4f8b\uff1a\u4e0d\u540c\u6838\u5c3a\u5bf8\u5bf9\u6bd4\uff1a</p> Python<pre><code># \u5f00\u8fd0\u7b97\u793a\u4f8b\n\n# \u5148\u7528\u56fa\u5b9a\u9608\u503c\u5f97\u5230\u4e00\u4e2a\u7c97\u63a9\u7801\nT = 28\n_, mask0 = cv2.threshold(diff_bg, T, 255, cv2.THRESH_BINARY)\n\nks = [3,5,7]\nouts = []\nfor k in ks:\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (k,k))\n    # \u5f00\u8fd0\u7b97\u793a\u4f8b\n    m_open = cv2.morphologyEx(mask0, cv2.MORPH_OPEN, kernel)\n    outs.append((k, m_open))\n\nfig, ax = plt.subplots(1, len(outs)+1, figsize=(14,4))\nax[0].imshow(mask0, cmap=\"gray\"); ax[0].set_title(\"\u539f\u59cb\u4e8c\u503c\")\nfor i,(k,m) in enumerate(outs, start=1):\n    ax[i].imshow(m, cmap=\"gray\"); ax[i].set_title(f\"Open {k}x{k}\")\nfor a in ax: a.axis(\"off\")\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#cv2morphologyex-close","title":"<code>cv2.morphologyEx</code> \u7684 \u95ed\u8fd0\u7b97\uff08Close\uff09\u2014\u2014\u586b\u5b54\u4e0e\u8fde\u63a5","text":"<p>\u5b9a\u4e49\uff1a\u95ed\u8fd0\u7b97 = \u5148\u81a8\u80c0\uff08dilate\uff09\u540e\u8150\u8680\uff08erode\uff09\u3002 \u76f4\u89c9\uff1a\u5f25\u5408\u524d\u666f\u4e2d\u7684\u5c0f\u9ed1\u6d1e\u6216\u7a84\u7f1d\uff0c\u4f7f\u76ee\u6807\u66f4\u8fde\u8d2f\u3002 \u63a5\u53e3\uff1a<code>cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel)</code></p> <p>\u5f00 vs \u95ed \u7684\u987a\u5e8f\uff1a\u5e38\u89c1\u7ba1\u7ebf\u662f \u5f00\u540e\u95ed\uff08\u5148\u53bb\u566a\uff0c\u518d\u586b\u5b54\uff09\uff1b\u4e5f\u53ef\u89c6\u573a\u666f\u5c1d\u8bd5\u95ed\u540e\u5f00\u3002</p> <p>\u793a\u4f8b\uff1a 1\u3001\u95ed\u8fd0\u7b97\u793a\u4f8b 2\u3001\u5728\u5f00\u8fd0\u7b97\u7ed3\u679c\u4e0a\u7ee7\u7eed\u505a\u95ed\u8fd0\u7b97\uff1a</p> Python<pre><code># \u95ed\u8fd0\u7b97\u793a\u4f8b\uff1a\n\n# \u5148\u7528\u56fa\u5b9a\u9608\u503c\u5f97\u5230\u4e00\u4e2a\u7c97\u63a9\u7801\nT = 28\n_, mask0 = cv2.threshold(diff_bg, T, 255, cv2.THRESH_BINARY)\n\nks = [3, 5, 7]\nouts = []\nfor k in ks:\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (k, k))\n    # \u95ed\u8fd0\u7b97\uff08Close\uff09= \u5148\u81a8\u80c0\u540e\u8150\u8680\uff1a\u586b\u5c0f\u5b54\u3001\u8fde\u901a\u7ec6\u7f1d\n    m_close = cv2.morphologyEx(mask0, cv2.MORPH_CLOSE, kernel)\n    outs.append((k, m_close))\n\n# \u76f4\u63a5\u8f93\u51fa\uff0c\u4e0d\u4fdd\u5b58\nfig, ax = plt.subplots(1, len(outs) + 1, figsize=(14, 4))\nax[0].imshow(mask0, cmap=\"gray\"); ax[0].set_title(\"\u539f\u59cb\u4e8c\u503c\")\nfor i, (k, m) in enumerate(outs, start=1):\n    ax[i].imshow(m, cmap=\"gray\"); ax[i].set_title(f\"Close {k}x{k}\")\nfor a in ax: a.axis(\"off\")\nplt.show()\n</code></pre> Python<pre><code>kernel5 = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5,5))\n\n# \u5f00\u8fd0\u7b97\uff08\u53bb\u566a\uff09\n_, mask0 = cv2.threshold(diff_bg, 28, 255, cv2.THRESH_BINARY)\nmask_open = cv2.morphologyEx(mask0, cv2.MORPH_OPEN, kernel5)\n\n# \u95ed\u8fd0\u7b97\uff08\u586b\u5b54/\u8fde\u901a\uff09\nmask_close = cv2.morphologyEx(mask_open, cv2.MORPH_CLOSE, kernel5)\n\nfig, ax = plt.subplots(1,3, figsize=(12,4))\nax[0].imshow(mask0, cmap=\"gray\"); ax[0].set_title(\"\u9608\u503c\u540e\")\nax[1].imshow(mask_open, cmap=\"gray\"); ax[1].set_title(\"\u5f00\u8fd0\u7b97 \u2192 \u53bb\u566a\")\nax[2].imshow(mask_close, cmap=\"gray\"); ax[2].set_title(\"\u95ed\u8fd0\u7b97 \u2192 \u8fde\u901a\")\nfor a in ax: a.axis(\"off\")\nplt.show()\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#kernel","title":"\u7ed3\u6784\u5143\u7d20\uff08kernel\uff09\u4e0e\u53c2\u6570\u8c03\u4f18\uff08\u5b9e\u8df5\u7ecf\u9a8c\uff09","text":"<p>\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a\u5f62\u6001\u5b66\u6548\u679c 80% \u53d6\u51b3\u4e8e kernel \u7684\u5f62\u72b6\u4e0e\u5c3a\u5bf8\u3002</p> <ul> <li>\u5f62\u72b6\u9009\u62e9\uff1a</li> <li>\u692d\u5706\uff08ELLIPSE\uff09\uff1a\u5bf9\u201c\u5706\u6ed1/\u692d\u5706\u5f62\u76ee\u6807\u201d\u66f4\u81ea\u7136\uff0c\u5e38\u7528\u9ed8\u8ba4\u3002</li> <li>\u77e9\u5f62\uff08RECT\uff09\uff1a\u66f4\u201c\u5f3a\u786c\u201d\uff0c\u5bf9\u6a2a\u7ad6\u7ec6\u8282\u5f71\u54cd\u66f4\u5927\u3002</li> <li>\u5341\u5b57\uff08CROSS\uff09\uff1a\u5bf9\u5341\u5b57\u65b9\u5411\u66f4\u654f\u611f\u3002</li> <li>\u5c3a\u5bf8\u7ecf\u9a8c\uff1a</li> <li>3\u00d73\uff1a\u8f7b\u5fae\u53bb\u566a\u6216\u7ec6\u5fae\u8fde\u901a\uff1b</li> <li>5\u00d75\uff1a\u8bfe\u5802\u9ed8\u8ba4\uff0c\u9002\u4e2d\uff1b</li> <li>7\u00d77+\uff1a\u5f3a\u529b\u53bb\u566a/\u8fde\u901a\uff0c\u4f46\u53ef\u80fd\u8fc7\u5ea6\u5e73\u6ed1\u76ee\u6807\u8fb9\u754c\u3002</li> </ul> <p>\u987a\u5e8f\u5efa\u8bae\uff1a\u5148 Open \u53bb\u566a\uff0c\u518d Close \u8fde\u901a\uff1b\u5982\u76ee\u6807\u5185\u90e8\u5b54\u6d1e\u8f83\u591a\uff0c\u53ef\u52a0\u5927\u95ed\u8fd0\u7b97\u6838\u3002</p> <p>\u4e0b\u9762\u7f51\u683c\u5316\u6bd4\u8f83\u4e0d\u540c\u6838\u4e0e\u987a\u5e8f\uff1a</p> Python<pre><code># \u5bf9\u5dee\u5f02\u80cc\u666f\u56fe\u50cf\u8fdb\u884c\u4e8c\u503c\u5316\u5904\u7406\n# \u53c2\u6570\u8bf4\u660e\uff1a\n# diff_bg: \u8f93\u5165\u7684\u5dee\u5f02\u80cc\u666f\u56fe\u50cf\n# 28: \u9608\u503c\uff0c\u50cf\u7d20\u503c\u8d85\u8fc7\u6b64\u503c\u4f1a\u88ab\u5904\u7406\n# 255: \u6700\u5927\u503c\uff0c\u8d85\u8fc7\u9608\u503c\u7684\u50cf\u7d20\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u6b64\u503c\n# cv2.THRESH_BINARY: \u4e8c\u503c\u5316\u7c7b\u578b\uff0c\u8d85\u8fc7\u9608\u503c\u4e3a255\uff0c\u5426\u5219\u4e3a0\n# \u8fd4\u56de\u503c\uff1a\u7b2c\u4e00\u4e2a\u4e3a\u9608\u503c\uff08\u901a\u5e38\u4e0d\u7528\uff0c\u7528_\u63a5\u6536\uff09\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u5904\u7406\u540e\u7684\u4e8c\u503c\u56fe\u50cfbase\n_, base = cv2.threshold(diff_bg, 28, 255, cv2.THRESH_BINARY)\n\n# \u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u548c\u5927\u5c0f\u7684\u5f62\u6001\u5b66\u64cd\u4f5c\u7ed3\u6784\u5143\u7d20\uff08\u5377\u79ef\u6838\uff09\n# \u7528\u4e8e\u540e\u7eed\u7684\u5f00\u8fd0\u7b97\u548c\u95ed\u8fd0\u7b97\uff0c\u6bd4\u8f83\u4e0d\u540c\u7ed3\u6784\u5143\u7d20\u7684\u5904\u7406\u6548\u679c\nkernels = {\n    \"ELLIPSE-3\": cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (3,3)),  # 3x3\u692d\u5706\u5f62\u7ed3\u6784\u5143\u7d20\n    \"ELLIPSE-5\": cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5,5)),  # 5x5\u692d\u5706\u5f62\u7ed3\u6784\u5143\u7d20\n    \"RECT-5\":    cv2.getStructuringElement(cv2.MORPH_RECT, (5,5)),     # 5x5\u77e9\u5f62\u7ed3\u6784\u5143\u7d20\n    \"CROSS-5\":   cv2.getStructuringElement(cv2.MORPH_CROSS, (5,5)),    # 5x5\u5341\u5b57\u5f62\u7ed3\u6784\u5143\u7d20\n}\n\n# \u5b58\u50a8\u4e0d\u540c\u7ed3\u6784\u5143\u7d20\u5904\u7406\u540e\u7684\u7ed3\u679c\nrows = []\n# \u904d\u5386\u6240\u6709\u7ed3\u6784\u5143\u7d20\uff0c\u5206\u522b\u8fdb\u884c\u4e24\u79cd\u987a\u5e8f\u7684\u5f62\u6001\u5b66\u64cd\u4f5c\nfor name,k in kernels.items():\n    # \u5148\u8fdb\u884c\u5f00\u8fd0\u7b97\uff08\u53bb\u9664\u566a\u70b9\uff09\u518d\u8fdb\u884c\u95ed\u8fd0\u7b97\uff08\u586b\u5145\u5b54\u6d1e\uff09\n    open_then_close = cv2.morphologyEx(cv2.morphologyEx(base, cv2.MORPH_OPEN, k), cv2.MORPH_CLOSE, k)\n    # \u5148\u8fdb\u884c\u95ed\u8fd0\u7b97\uff08\u586b\u5145\u5b54\u6d1e\uff09\u518d\u8fdb\u884c\u5f00\u8fd0\u7b97\uff08\u53bb\u9664\u566a\u70b9\uff09\n    close_then_open = cv2.morphologyEx(cv2.morphologyEx(base, cv2.MORPH_CLOSE, k), cv2.MORPH_OPEN, k)\n    # \u5c06\u7ed3\u6784\u5143\u7d20\u540d\u79f0\u548c\u4e24\u79cd\u5904\u7406\u7ed3\u679c\u5b58\u5165\u5217\u8868\n    rows.append((name, open_then_close, close_then_open))\n\n# \u53ef\u89c6\u5316\u6240\u6709\u7ed3\u679c\uff0c\u4fbf\u4e8e\u5bf9\u6bd4\n# \u521b\u5efa\u5b50\u56fe\uff1a\u884c\u6570\u4e3a\u7ed3\u6784\u5143\u7d20\u6570\u91cf+1\uff08\u591a\u4e00\u884c\u653e\u539f\u59cb\u56fe\uff09\uff0c\u5217\u6570\u4e3a3\n# figsize\u8bbe\u7f6e\u56fe\u50cf\u6574\u4f53\u5927\u5c0f\nfig, ax = plt.subplots(len(rows)+1, 3, figsize=(10, 3*(len(rows)+1)))\n\n# \u7b2c\u4e00\u884c\u663e\u793a\u539f\u59cb\u4e8c\u503c\u56fe\u50cf\nax[0,0].imshow(base, cmap=\"gray\"); ax[0,0].set_title(\"\u539f\u59cb\u4e8c\u503c\")\n# \u7b2c\u4e00\u884c\u540e\u4e24\u5217\u4e0d\u663e\u793a\u5185\u5bb9\uff0c\u5173\u95ed\u5750\u6807\u8f74\nax[0,1].axis(\"off\"); ax[0,2].axis(\"off\")\n\n# \u904d\u5386\u5904\u7406\u7ed3\u679c\uff0c\u9010\u884c\u663e\u793a\nfor i, (name, o_c, c_o) in enumerate(rows, start=1):\n    # \u7b2c\u4e00\u5217\u663e\u793a\u7ed3\u6784\u5143\u7d20\u540d\u79f0\n    ax[i,0].text(0.0, 0.5, name, fontsize=12); ax[i,0].axis(\"off\")\n    # \u7b2c\u4e8c\u5217\u663e\u793a\u5148\u5f00\u540e\u95ed\u7684\u5904\u7406\u7ed3\u679c\n    ax[i,1].imshow(o_c, cmap=\"gray\"); ax[i,1].set_title(\"Open\u2192Close\")\n    # \u7b2c\u4e09\u5217\u663e\u793a\u5148\u95ed\u540e\u5f00\u7684\u5904\u7406\u7ed3\u679c\n    ax[i,2].imshow(c_o, cmap=\"gray\"); ax[i,2].set_title(\"Close\u2192Open\")\n\n# \u5173\u95ed\u6240\u6709\u5b50\u56fe\u7684\u5750\u6807\u8f74\uff0c\u4f7f\u56fe\u50cf\u66f4\u6574\u6d01\nfor a in ax.ravel():\n    if hasattr(a, \"set_axis_off\"): a.set_axis_off()\n\n# \u81ea\u52a8\u8c03\u6574\u5b50\u56fe\u95f4\u8ddd\nplt.tight_layout()\n# \u663e\u793a\u56fe\u50cf\nplt.show()\n</code></pre> Python<pre><code>def prepare_demo():\n    \"\"\"\u51c6\u5907\u6f14\u793a\u7528\u7684\u89c6\u9891\u5e27\u548c\u524d\u666f\u63a9\u7801\uff0c\u7528\u4e8e\u5c55\u793a\u80cc\u666f\u5dee\u5206\u4e0e\u5f62\u6001\u5b66\u5904\u7406\u6548\u679c\"\"\"\n    # \u8bfb\u53d6\u89c6\u9891\u6587\u4ef6\uff08\u8def\u5f84\u4e3adata\u76ee\u5f55\u4e0b\u7684demo.mp4\uff09\n    # \u4f7f\u7528Path\u5904\u7406\u8def\u5f84\uff0c\u589e\u5f3a\u8de8\u5e73\u53f0\u517c\u5bb9\u6027\n    cap = cv2.VideoCapture(str(Path(\"data\")/\"demo.mp4\"))\n\n    # \u8bfb\u53d6\u89c6\u9891\u7684\u4e00\u5e27\u753b\u9762\uff0c\u5e76\u91ca\u653e\u89c6\u9891\u6355\u83b7\u8d44\u6e90\uff08\u4ec5\u9700\u4e00\u5e27\u7528\u4e8e\u6f14\u793a\uff09\n    # ok\u4e3a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u662f\u5426\u6210\u529f\u8bfb\u53d6\u5e27\uff1bframe\u4e3a\u8bfb\u53d6\u5230\u7684\u89c6\u9891\u5e27\n    ok, frame = cap.read(); cap.release()\n\n    # \u8bfb\u53d6\u9884\u4f30\u8ba1\u7684\u80cc\u666f\u56fe\u50cf\uff08\u8def\u5f84\u4e3adata\u76ee\u5f55\u4e0b\u7684bg_estimated.jpg\uff09\n    bg = cv2.imread(str(Path(\"data\")/\"bg_estimated.jpg\"))\n\n    # \u65ad\u8a00\u68c0\u67e5\uff1a\u786e\u4fdd\u5e27\u548c\u80cc\u666f\u56fe\u50cf\u90fd\u6210\u529f\u8bfb\u53d6\uff0c\u5426\u5219\u63d0\u793a\u9519\u8bef\u4fe1\u606f\n    # \u9632\u6b62\u540e\u7eed\u5904\u7406\u56e0\u6570\u636e\u7f3a\u5931\u800c\u62a5\u9519\n    assert ok and bg is not None, \"\u8bf7\u5148\u5b8c\u6210\u4efb\u52a11\uff0c\u6216\u653e\u7f6e data/room.mp4 \u4e0e data/bg_estimated.jpg\"\n\n    # \u5bf9\u89c6\u9891\u5e27\u8fdb\u884c\u9884\u5904\u7406\uff1a\n    # 1. \u4eceBGR\u683c\u5f0f\u8f6c\u4e3a\u7070\u5ea6\u56fe\uff08\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u7b80\u5316\u5904\u7406\uff09\n    # 2. \u5e94\u75285x5\u7684\u9ad8\u65af\u6a21\u7cca\uff08\u5e73\u6ed1\u56fe\u50cf\uff0c\u51cf\u5c11\u9ad8\u9891\u566a\u58f0\u5e72\u6270\uff09\n    g1  = cv2.GaussianBlur(cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY), (5,5), 0)\n\n    # \u5bf9\u80cc\u666f\u56fe\u50cf\u8fdb\u884c\u540c\u6837\u7684\u9884\u5904\u7406\uff08\u4fdd\u6301\u5904\u7406\u65b9\u5f0f\u4e00\u81f4\uff0c\u786e\u4fdd\u5dee\u5206\u6709\u6548\u6027\uff09\n    gbg = cv2.GaussianBlur(cv2.cvtColor(bg,     cv2.COLOR_BGR2GRAY), (5,5), 0)\n\n    # \u8ba1\u7b97\u89c6\u9891\u5e27\u4e0e\u80cc\u666f\u56fe\u50cf\u7684\u7070\u5ea6\u5dee\u5206\uff08\u83b7\u53d6\u4e24\u56fe\u7684\u5dee\u5f02\u533a\u57df\uff09\n    # \u7edd\u5bf9\u5dee\u5206\u80fd\u6709\u6548\u7a81\u51fa\u524d\u666f\u76ee\u6807\uff08\u4e0e\u80cc\u666f\u4e0d\u540c\u7684\u533a\u57df\uff09\n    diff = cv2.absdiff(g1, gbg)\n\n    # \u5bf9\u5dee\u5206\u7ed3\u679c\u8fdb\u884c\u4e8c\u503c\u5316\u5904\u7406\uff1a\n    # - \u9608\u503c\u8bbe\u4e3a28\uff0c\u50cf\u7d20\u503c\u8d85\u8fc728\u7684\u533a\u57df\u89c6\u4e3a\u524d\u666f\uff08\u8bbe\u4e3a255\uff0c\u767d\u8272\uff09\n    # - \u4f4e\u4e8e\u7b49\u4e8e28\u7684\u533a\u57df\u89c6\u4e3a\u80cc\u666f\uff08\u8bbe\u4e3a0\uff0c\u9ed1\u8272\uff09\n    # \u5f97\u5230\u521d\u59cb\u63a9\u7801mask0\n    _, mask0 = cv2.threshold(diff, 28, 255, cv2.THRESH_BINARY)\n\n    # \u5b9a\u4e49\u5f62\u6001\u5b66\u64cd\u4f5c\u7684\u7ed3\u6784\u5143\u7d20\uff1a5x5\u7684\u692d\u5706\u5f62\u6838\n    # \u692d\u5706\u5f62\u6838\u5728\u5904\u7406\u66f2\u7ebf\u8fb9\u7f18\u65f6\u6548\u679c\u66f4\u81ea\u7136\uff0c\u9002\u5408\u5927\u591a\u6570\u573a\u666f\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5,5))\n\n    # \u5bf9\u521d\u59cb\u63a9\u7801\u8fdb\u884c\u5f62\u6001\u5b66\u4f18\u5316\uff1a\n    # 1. \u5148\u5f00\u8fd0\u7b97\uff08MORPH_OPEN\uff09\uff1a\u53bb\u9664\u5c0f\u9762\u79ef\u566a\u70b9\uff08\u5982\u5b64\u7acb\u7684\u4eae\u70b9\uff09\n    # 2. \u518d\u95ed\u8fd0\u7b97\uff08MORPH_CLOSE\uff09\uff1a\u586b\u5145\u524d\u666f\u533a\u57df\u5185\u7684\u5c0f\u7a7a\u6d1e\uff0c\u4f7f\u63a9\u7801\u66f4\u5b8c\u6574\n    mask = cv2.morphologyEx(cv2.morphologyEx(mask0, cv2.MORPH_OPEN, kernel), cv2.MORPH_CLOSE, kernel)\n\n    # \u8fd4\u56de\u5904\u7406\u540e\u7684\u89c6\u9891\u5e27\u548c\u4f18\u5316\u540e\u7684\u524d\u666f\u63a9\u7801\n    return frame, mask\n\n# \u8c03\u7528\u51fd\u6570\u51c6\u5907\u6f14\u793a\u6570\u636e\nframe_demo, mask_demo = prepare_demo()\n# \u63d0\u793a\u7528\u6237\u6570\u636e\u51c6\u5907\u5b8c\u6210\nprint(\"\u6f14\u793a\u5e27\u4e0e\u63a9\u7801\u5c31\u7eea\u3002\")\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#2_1","title":"\u4efb\u52a1 2\uff1a\u9759\u6001\u80cc\u666f\u5dee\u5206","text":"<ul> <li>\u8bfb\u53d6 <code>bg_estimated.jpg</code> \u4e0e\u89c6\u9891\u9010\u5e27\u505a\u5dee\uff0c\u4e8c\u503c\u5316\u83b7\u5f97\u524d\u666f\u63a9\u7801\uff1b</li> <li>\u4fdd\u5b58 5 \u5f20\u5173\u952e\u5e27\uff08\u542b\u539f\u56fe\u3001\u5dee\u5206\u3001\u63a9\u7801\u3001\u53e0\u52a0\u9884\u89c8\uff09\u3002</li> </ul> Python<pre><code>def diff_mask(frame, bg, thr=30, kernel_size=5):\n    \"\"\"\n    \u8ba1\u7b97\u89c6\u9891\u5e27\u4e0e\u80cc\u666f\u56fe\u50cf\u7684\u5dee\u5f02\uff0c\u5e76\u751f\u6210\u4f18\u5316\u540e\u7684\u524d\u666f\u63a9\u7801\n    \u53c2\u6570:\n        frame: \u8f93\u5165\u7684\u89c6\u9891\u5e27\uff08BGR\u683c\u5f0f\uff09\n        bg: \u80cc\u666f\u56fe\u50cf\uff08BGR\u683c\u5f0f\uff09\n        thr: \u4e8c\u503c\u5316\u9608\u503c\uff0c\u9ed8\u8ba430\uff0c\u7528\u4e8e\u533a\u5206\u524d\u666f\u548c\u80cc\u666f\n        kernel_size: \u5f62\u6001\u5b66\u64cd\u4f5c\u7684\u7ed3\u6784\u5143\u7d20\u5927\u5c0f\uff0c\u9ed8\u8ba45\n    \u8fd4\u56de:\n        m: \u4f18\u5316\u540e\u7684\u524d\u666f\u63a9\u7801\uff08\u4e8c\u503c\u56fe\u50cf\uff0c255\u8868\u793a\u524d\u666f\uff0c0\u8868\u793a\u80cc\u666f\uff09\n    \"\"\"\n    # \u5c06\u8f93\u5165\u5e27\u548c\u80cc\u666f\u56fe\u4eceBGR\u683c\u5f0f\u8f6c\u4e3a\u7070\u5ea6\u56fe\n    # \u76ee\u7684\uff1a\u51cf\u5c11\u901a\u9053\u6570\uff0c\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u7b80\u5316\u540e\u7eed\u5dee\u5f02\u8ba1\u7b97\n    g1 = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    g2 = cv2.cvtColor(bg, cv2.COLOR_BGR2GRAY)\n\n    # \u8ba1\u7b97\u7070\u5ea6\u56fe\u7684\u7edd\u5bf9\u5dee\u5206\n    # \u4f5c\u7528\uff1a\u7a81\u51fa\u4e24\u56fe\u4e2d\u50cf\u7d20\u503c\u5dee\u5f02\u660e\u663e\u7684\u533a\u57df\uff08\u5373\u53ef\u80fd\u7684\u524d\u666f\u76ee\u6807\uff09\n    d = cv2.absdiff(g1, g2)\n\n    # \u5bf9\u5dee\u5206\u7ed3\u679c\u8fdb\u884c\u4e8c\u503c\u5316\u5904\u7406\n    # \u53c2\u6570\u8bf4\u660e\uff1athr\u4e3a\u9608\u503c\uff0c\u8d85\u8fc7\u8be5\u503c\u7684\u50cf\u7d20\u8bbe\u4e3a255\uff08\u524d\u666f\uff09\uff0c\u5426\u5219\u8bbe\u4e3a0\uff08\u80cc\u666f\uff09\n    # \u76ee\u7684\uff1a\u5c06\u8fde\u7eed\u7684\u5dee\u5f02\u503c\u8f6c\u6362\u4e3a\u79bb\u6563\u7684\u4e8c\u503c\u63a9\u7801\uff0c\u660e\u786e\u533a\u5206\u524d\u666f\u548c\u80cc\u666f\n    _, m = cv2.threshold(d, thr, 255, cv2.THRESH_BINARY)\n\n    # \u521b\u5efa\u692d\u5706\u5f62\u7ed3\u6784\u5143\u7d20\uff0c\u7528\u4e8e\u540e\u7eed\u5f62\u6001\u5b66\u64cd\u4f5c\n    # \u692d\u5706\u5f62\u6838\u5728\u5904\u7406\u8fb9\u7f18\u65f6\u66f4\u5e73\u6ed1\uff0c\u9002\u5408\u5927\u591a\u6570\u81ea\u7136\u573a\u666f\u7684\u524d\u666f\u63d0\u53d6\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (kernel_size, kernel_size))\n\n    # \u5148\u8fdb\u884c\u5f00\u8fd0\u7b97\uff08\u53bb\u9664\u5c0f\u9762\u79ef\u566a\u70b9\uff09\uff0c\u518d\u8fdb\u884c\u95ed\u8fd0\u7b97\uff08\u586b\u5145\u524d\u666f\u4e2d\u7684\u5c0f\u7a7a\u6d1e\uff09\n    # \u5f00\u8fd0\u7b97\uff1a\u6d88\u9664\u5b64\u7acb\u7684\u5c0f\u4eae\u70b9\uff0c\u51cf\u5c11\u566a\u58f0\u5e72\u6270\n    # \u95ed\u8fd0\u7b97\uff1a\u586b\u5145\u524d\u666f\u533a\u57df\u5185\u7684\u5c0f\u5b54\u6d1e\uff0c\u4f7f\u524d\u666f\u76ee\u6807\u66f4\u5b8c\u6574\n    m = cv2.morphologyEx(m, cv2.MORPH_OPEN, kernel)\n    m = cv2.morphologyEx(m, cv2.MORPH_CLOSE, kernel)\n\n    # \u8fd4\u56de\u4f18\u5316\u540e\u7684\u524d\u666f\u63a9\u7801\n    return m\n</code></pre> Python<pre><code># \u521b\u5efa\u89c6\u9891\u6355\u83b7\u5bf9\u8c61\uff0c\u4ece\u6307\u5b9a\u8def\u5f84\u8bfb\u53d6\u89c6\u9891\u6587\u4ef6\ncap = cv2.VideoCapture(video_path)\n\n# \u83b7\u53d6\u89c6\u9891\u5e27\u7684\u9ad8\u5ea6(H)\u548c\u5bbd\u5ea6(W)\uff0c\u7528\u4e8e\u540e\u7eed\u56fe\u50cf\u5904\u7406\u548c\u4fdd\u5b58\nH, W = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT)), int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n\n# \u7528\u4e8e\u8ba1\u6570\u6210\u529f\u4fdd\u5b58\u7684\u53ef\u89c6\u5316\u56fe\u50cf\u6570\u91cf\nsampled = 0\n\n# \u751f\u62105\u4e2a\u5747\u5300\u5206\u5e03\u7684\u5e27\u7d22\u5f15\uff08\u4ece0\u5230\u89c6\u9891\u603b\u5e27\u6570-1\uff09\uff0c\u7528\u4e8e\u91c7\u6837\u5173\u952e\u5e27\n# np.linspace\u786e\u4fdd\u5e27\u5728\u89c6\u9891\u4e2d\u5747\u5300\u5206\u5e03\uff0cdtype=int\u8f6c\u6362\u4e3a\u6574\u6570\u7d22\u5f15\nfor i in np.linspace(0, max(0, int(cap.get(cv2.CAP_PROP_FRAME_COUNT))-1), 5, dtype=int):\n    # \u8bbe\u7f6e\u89c6\u9891\u6355\u83b7\u5bf9\u8c61\u7684\u5f53\u524d\u5e27\u4f4d\u7f6e\u4e3a\u7d22\u5f15i\uff0c\u5b9a\u4f4d\u5230\u8981\u91c7\u6837\u7684\u5e27\n    cap.set(cv2.CAP_PROP_POS_FRAMES, int(i))\n\n    # \u8bfb\u53d6\u5f53\u524d\u5e27\uff0cok\u4e3a\u662f\u5426\u8bfb\u53d6\u6210\u529f\u7684\u6807\u5fd7\uff0cf\u4e3a\u8bfb\u53d6\u5230\u7684\u5e27\u6570\u636e\n    ok, f = cap.read()\n    if not ok:  # \u5982\u679c\u8bfb\u53d6\u5931\u8d25\uff0c\u8df3\u8fc7\u5f53\u524d\u5e27\n        continue\n\n    # \u8c03\u7528diff_mask\u51fd\u6570\u751f\u6210\u524d\u666f\u63a9\u7801\uff1a\u57fa\u4e8e\u5f53\u524d\u5e27\u4e0e\u80cc\u666f\u7684\u5dee\u5f02\uff0c\u5e94\u7528\u9608\u503c\u548c\u5f62\u6001\u5b66\u5904\u7406\n    m = diff_mask(f, bg, thr=28, kernel_size=5)\n\n    # \u521b\u5efa\u539f\u59cb\u5e27\u7684\u526f\u672c\u4f5c\u4e3a\u8986\u76d6\u5c42\uff0c\u7528\u4e8e\u6807\u8bb0\u524d\u666f\u533a\u57df\n    overlay = f.copy()\n    # \u5c06\u63a9\u7801\u4e2d\u4e0d\u4e3a0\u7684\u533a\u57df\uff08\u524d\u666f\uff09\u6807\u8bb0\u4e3a\u7eff\u8272(0,255,0)\uff0c\u4fbf\u4e8e\u53ef\u89c6\u5316\u524d\u666f\n    overlay[m&gt;0] = (0,255,0)\n\n    # \u6784\u5efa\u53ef\u89c6\u5316\u7f51\u683c\uff1a\u6c34\u5e73\u62fc\u63a54\u4e2a\u56fe\u50cf\n    # 1. \u539f\u59cb\u5e27(f)\n    # 2. \u7070\u5ea6\u5dee\u5206\u56fe\uff08\u8f6c\u6362\u4e3aBGR\u683c\u5f0f\u4ee5\u4fdd\u6301\u4e0e\u5176\u4ed6\u56fe\u50cf\u901a\u9053\u4e00\u81f4\uff09\n    # 3. \u524d\u666f\u63a9\u7801\uff08\u8f6c\u6362\u4e3aBGR\u683c\u5f0f\uff09\n    # 4. \u6807\u8bb0\u4e86\u524d\u666f\u7684\u8986\u76d6\u5c42\n    grid = np.hstack([\n        f, \n        cv2.cvtColor(cv2.absdiff(cv2.cvtColor(f, cv2.COLOR_BGR2GRAY), \n                                cv2.cvtColor(bg, cv2.COLOR_BGR2GRAY)), \n                   cv2.COLOR_GRAY2BGR),  # \u5dee\u5206\u56fe\u8f6cBGR\n        cv2.cvtColor(m, cv2.COLOR_GRAY2BGR),  # \u63a9\u7801\u8f6cBGR\n        overlay\n    ])\n\n    # \u4fdd\u5b58\u62fc\u63a5\u540e\u7684\u7f51\u683c\u56fe\u50cf\u5230OUT\u76ee\u5f55\uff0c\u6587\u4ef6\u540d\u5305\u542b\u91c7\u6837\u8ba1\u6570\n    cv2.imwrite(str(OUT/f\"diff_vis_{sampled}.jpg\"), grid)\n    sampled += 1  # \u9012\u589e\u91c7\u6837\u8ba1\u6570\n\n# \u91ca\u653e\u89c6\u9891\u6355\u83b7\u8d44\u6e90\uff0c\u907f\u514d\u5185\u5b58\u5360\u7528\ncap.release()\n\n# \u6253\u5370\u6210\u529f\u4fdd\u5b58\u7684\u53ef\u89c6\u5316\u56fe\u50cf\u6570\u91cf\nprint(\"\u5df2\u4fdd\u5b58\u5173\u952e\u5e27\u53ef\u89c6\u5316\uff1a\", sampled, \"\u5f20\")\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#3-minarearect","title":"\u5b50\u4efb\u52a1 3\uff1a\u8f6e\u5ed3\u7b5b\u9009 + \u6700\u5c0f\u5916\u63a5\u77e9\u5f62\uff08minAreaRect\uff09\u5b9e\u73b0\u76ee\u6807\u68c0\u6d4b\u548c\u8ddf\u8e2a","text":"<ul> <li>\u5728\u6bcf\u5e27\u63a9\u7801\u4e0a\u627e\u5916\u90e8\u8f6e\u5ed3\uff0c\u53d6\u6700\u5927\u9762\u79ef\u8f6e\u5ed3\uff1b</li> <li>\u4f7f\u7528 <code>cv2.minAreaRect</code> \u5f97\u5230\u77e9\u5f62\u3001\u4e2d\u5fc3\u3001\u5bbd\u9ad8\u3001\u65cb\u8f6c\u89d2\uff1b</li> <li>\u5728\u89c6\u9891\u4e0a\u7ed8\u5236\u8f6e\u5ed3\u3001\u77e9\u5f62\u3001\u4e2d\u5fc3\u70b9\u5e76\u5bfc\u51fa <code>outputs/detect_vis.mp4</code>\u3002</li> </ul> Python<pre><code># \u5b9a\u4e49\u89c6\u9891\u7f16\u7801\u5668\uff0c\u4f7f\u7528mp4v\u683c\u5f0f\uff08\u652f\u6301MP4\u6587\u4ef6\u8f93\u51fa\uff09\nfourcc = cv2.VideoWriter_fourcc(*\"mp4v\")\n\n# \u521b\u5efa\u89c6\u9891\u6355\u83b7\u5bf9\u8c61\uff0c\u8bfb\u53d6\u8f93\u5165\u89c6\u9891\ncap = cv2.VideoCapture(video_path)\n\n# \u83b7\u53d6\u89c6\u9891\u7684\u5e27\u7387(FPS)\uff0c\u82e5\u83b7\u53d6\u5931\u8d25\u5219\u9ed8\u8ba4\u4f7f\u752820.0\nfps = cap.get(cv2.CAP_PROP_FPS) or 20.0\n\n# \u521b\u5efa\u89c6\u9891\u5199\u5165\u5bf9\u8c61\uff0c\u7528\u4e8e\u4fdd\u5b58\u5904\u7406\u540e\u7684\u53ef\u89c6\u5316\u89c6\u9891\n# \u53c2\u6570\uff1a\u8f93\u51fa\u8def\u5f84\u3001\u7f16\u7801\u5668\u3001\u5e27\u7387\u3001\u89c6\u9891\u5bbd\u9ad8(W,H)\nout = cv2.VideoWriter(str(OUT/\"detect_vis.mp4\"), fourcc, fps, (W,H))\n\n# \u521d\u59cb\u5316\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u76ee\u6807\u8ddf\u8e2a\u4fe1\u606f\ncenters = []    # \u5b58\u50a8\u76ee\u6807\u4e2d\u5fc3\u5750\u6807 (cx, cy)\nrect_wh = []    # \u5b58\u50a8\u76ee\u6807\u5916\u63a5\u77e9\u5f62\u7684\u5bbd\u9ad8 (w, h)\nangles = []     # \u5b58\u50a8\u76ee\u6807\u5916\u63a5\u77e9\u5f62\u7684\u65cb\u8f6c\u89d2\u5ea6 theta\n\n# \u5faa\u73af\u8bfb\u53d6\u89c6\u9891\u5e27\uff0c\u76f4\u5230\u6240\u6709\u5e27\u5904\u7406\u5b8c\u6bd5\nwhile True:\n    # \u8bfb\u53d6\u4e00\u5e27\u89c6\u9891\uff0cok\u4e3a\u8bfb\u53d6\u6210\u529f\u6807\u5fd7\uff0cframe\u4e3a\u5e27\u6570\u636e\n    ok, frame = cap.read()\n    if not ok:  # \u82e5\u8bfb\u53d6\u5931\u8d25\uff08\u5982\u5230\u8fbe\u89c6\u9891\u672b\u5c3e\uff09\uff0c\u9000\u51fa\u5faa\u73af\n        break\n\n    # \u8c03\u7528diff_mask\u51fd\u6570\u751f\u6210\u524d\u666f\u63a9\u7801\uff0c\u63d0\u53d6\u89c6\u9891\u5e27\u4e0e\u80cc\u666f\u7684\u5dee\u5f02\u533a\u57df\n    m = diff_mask(frame, bg, thr=28, kernel_size=5)\n\n    # \u4ece\u63a9\u7801\u4e2d\u67e5\u627e\u8f6e\u5ed3\uff08\u76ee\u6807\u8fb9\u754c\uff09\n    # cv2.RETR_EXTERNAL\uff1a\u53ea\u4fdd\u7559\u6700\u5916\u5c42\u8f6e\u5ed3\uff1bcv2.CHAIN_APPROX_SIMPLE\uff1a\u7b80\u5316\u8f6e\u5ed3\u70b9\n    cnts, _ = cv2.findContours(m, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\n    # \u82e5\u672a\u68c0\u6d4b\u5230\u8f6e\u5ed3\uff0c\u76f4\u63a5\u5c06\u539f\u59cb\u5e27\u5199\u5165\u8f93\u51fa\u89c6\u9891\u5e76\u7ee7\u7eed\u4e0b\u4e00\u5e27\n    if len(cnts) == 0:\n        out.write(frame)\n        continue\n\n    # \u9009\u62e9\u9762\u79ef\u6700\u5927\u7684\u8f6e\u5ed3\uff08\u5047\u8bbe\u6700\u5927\u8f6e\u5ed3\u4e3a\u76ee\u6807\uff09\n    cnt = max(cnts, key=cv2.contourArea)\n\n    # \u8ba1\u7b97\u8f6e\u5ed3\u7684\u6700\u5c0f\u5916\u63a5\u77e9\u5f62\uff08\u65cb\u8f6c\u77e9\u5f62\uff09\n    # \u8fd4\u56de\u503c\u683c\u5f0f\uff1a((\u4e2d\u5fc3x, \u4e2d\u5fc3y), (\u5bbdw, \u9ad8h), \u65cb\u8f6c\u89d2\u5ea6theta)\n    rect = cv2.minAreaRect(cnt)\n\n    # \u8ba1\u7b97\u77e9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u5750\u6807\uff08\u8f6c\u6362\u4e3a\u6574\u6570\u7528\u4e8e\u7ed8\u5236\uff09\n    box = cv2.boxPoints(rect).astype(int)\n\n    # \u63d0\u53d6\u77e9\u5f62\u4e2d\u5fc3\u5750\u6807\uff08\u8f6c\u6362\u4e3a\u6574\u6570\uff09\n    cx, cy = int(rect[0][0]), int(rect[0][1])\n    # \u63d0\u53d6\u77e9\u5f62\u5bbd\u9ad8\u548c\u65cb\u8f6c\u89d2\u5ea6\n    w, h = rect[1]\n    theta = rect[2]\n\n    # \u5c06\u76ee\u6807\u4fe1\u606f\u5b58\u5165\u5bf9\u5e94\u5217\u8868\uff0c\u7528\u4e8e\u540e\u7eed\u5206\u6790\n    centers.append((cx, cy))\n    rect_wh.append((w, h))\n    angles.append(theta)\n\n    # \u521b\u5efa\u539f\u59cb\u5e27\u7684\u526f\u672c\uff0c\u7528\u4e8e\u7ed8\u5236\u53ef\u89c6\u5316\u5143\u7d20\uff08\u907f\u514d\u4fee\u6539\u539f\u56fe\uff09\n    vis = frame.copy()\n\n    # \u7ed8\u5236\u6700\u5c0f\u5916\u63a5\u77e9\u5f62\uff08\u7eff\u8272\uff0c\u7ebf\u5bbd2\uff09\n    cv2.drawContours(vis, [box], 0, (0, 255, 0), 2)\n    # \u7ed8\u5236\u76ee\u6807\u4e2d\u5fc3\uff08\u84dd\u8272\u5706\u70b9\uff0c\u534a\u5f843\uff0c\u586b\u5145\uff09\n    cv2.circle(vis, (cx, cy), 3, (255, 0, 0), -1)\n    # \u7ed8\u5236\u76ee\u6807\u8f6e\u5ed3\uff08\u7ea2\u8272\uff0c\u7ebf\u5bbd1\uff09\n    cv2.drawContours(vis, [cnt], -1, (0, 0, 255), 1)\n    # \u5728\u5e27\u4e0a\u6dfb\u52a0\u6587\u672c\u4fe1\u606f\uff1a\u4e2d\u5fc3\u5750\u6807\u3001\u5bbd\u9ad8\u3001\u65cb\u8f6c\u89d2\u5ea6\n    cv2.putText(vis, \n                f\"center=({cx},{cy}) w={w:.1f} h={h:.1f} ang={theta:.1f}\", \n                (10, 20),                  # \u6587\u672c\u4f4d\u7f6e\uff08\u5de6\u4e0a\u89d2\uff09\n                cv2.FONT_HERSHEY_SIMPLEX,  # \u5b57\u4f53\n                0.5,                       # \u5b57\u4f53\u5927\u5c0f\n                (0, 0, 0),                 # \u6587\u672c\u989c\u8272\uff08\u9ed1\u8272\uff09\n                1)                         # \u7ebf\u5bbd\n\n    # \u5c06\u7ed8\u5236\u4e86\u76ee\u6807\u4fe1\u606f\u7684\u53ef\u89c6\u5316\u5e27\u5199\u5165\u8f93\u51fa\u89c6\u9891\n    out.write(vis)\n\n# \u91ca\u653e\u89c6\u9891\u6355\u83b7\u8d44\u6e90\u548c\u89c6\u9891\u5199\u5165\u8d44\u6e90\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\ncap.release()\nout.release()\n\n# \u663e\u793a\u751f\u6210\u7684\u68c0\u6d4b\u89c6\u9891\uff08\u5d4c\u5165\u6a21\u5f0f\uff09\ndisplay(Video(str(OUT/\"detect_vis.mp4\"), embed=True))\n\n# \u63d0\u793a\u89c6\u9891\u5bfc\u51fa\u5b8c\u6210\nprint(\"\u68c0\u6d4b\u89c6\u9891\u5df2\u5bfc\u51fa\u3002\")\n</code></pre>"},{"location":"CourseNotes/robot%20control/practical/video/#opencv","title":"\u6269\u5c55\u4efb\u52a1\uff1a\u5bf9\u6bd4 OpenCV \u80cc\u666f\u5efa\u6a21\u5668","text":"<ul> <li>\u5206\u522b\u4f7f\u7528 <code>cv2.createBackgroundSubtractorMOG2()</code> \u4e0e <code>KNN()</code>\u8fdb\u884c\u80cc\u666f\u5efa\u6a21\uff1b</li> <li>\u4e0e\u9759\u6001\u80cc\u666f\u5dee\u5206\u7684\u7ed3\u679c\u5bf9\u6bd4\uff0c\u7ed9\u51fa\u5b9a\u91cf\uff08\u8986\u76d6\u7387\u3001\u8fde\u901a\u57df\u6570\uff09\u548c\u5b9a\u6027\uff08\u53ef\u89c6\u5316\uff09\u8bc4\u4f30\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/","title":"X 3D intro","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 872 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u8fd9\u91cc\u7528\u6765\u8bb0\u5f55\u77ed\u5b66\u671f\u62a5\u544a\u51c6\u5907\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\u3002</p> <p>\u6ce8\u610f</p> <p>Generated by ai</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_1","title":"\u6fc0\u6d3b\u51fd\u6570\u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_2","title":"\u628a\u5b83\u60f3\u8c61\u6210\u201c\u5f00\u5173\u201d\u548c\u201c\u8fc7\u6ee4\u5668\u201d","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u662f\u4e00\u4e2a\u5927\u8111\u795e\u7ecf\u5143\u3002\u4f60\u4ece\u773c\u775b\u3001\u8033\u6735\u7b49\u5730\u65b9\u63a5\u6536\u4fe1\u53f7\uff08\u6570\u636e\uff09\u3002\u8fd9\u4e9b\u4fe1\u53f7\u6709\u5f3a\u6709\u5f31\u3002</p> <ol> <li> <p>\u63a5\u6536\u4fe1\u53f7\uff08\u7ebf\u6027\u8ba1\u7b97\uff09\uff1a     \u9996\u5148\uff0c\u4f60\u4f1a\u628a\u6240\u6709\u8fd9\u4e9b\u4fe1\u53f7\u52a0\u8d77\u6765\u3002\u5982\u679c\u4e00\u4e2a\u4fe1\u53f7\u5f88\u91cd\u8981\uff0c\u4f60\u5c31\u7ed9\u5b83\u66f4\u5927\u7684\u6743\u91cd\uff1b\u5982\u679c\u4e0d\u91cd\u8981\uff0c\u5c31\u7ed9\u5b83\u5c0f\u6743\u91cd\u3002\u6700\u540e\uff0c\u4f60\u8fd8\u4f1a\u52a0\u4e0a\u81ea\u5df1\u7684\u201c\u5fc3\u60c5\u201d\uff08\u504f\u7f6e\u9879\uff09\uff0c\u6bd4\u5982\u4f60\u4eca\u5929\u6bd4\u8f83\u4e50\u89c2\u8fd8\u662f\u60b2\u89c2\u3002     \u8fd9\u5c31\u50cf\u662f\u8ba1\u7b97\u603b\u5206\uff1a<code>\u603b\u5206 = (\u4fe1\u53f71 \u00d7 \u6743\u91cd1) + (\u4fe1\u53f72 \u00d7 \u6743\u91cd2) + ... + \u5fc3\u60c5</code></p> </li> <li> <p>\u51b3\u5b9a\u662f\u5426\u505a\u51fa\u53cd\u5e94\uff08\u6fc0\u6d3b\u51fd\u6570\uff09\uff1a     \u73b0\u5728\u4f60\u6709\u4e86\u8fd9\u4e2a\u201c\u603b\u5206\u201d\uff0c\u4f46\u4f60\u4e0d\u4f1a\u5bf9\u4efb\u4f55\u5fae\u5c0f\u7684\u4fe1\u53f7\u90fd\u505a\u51fa\u53cd\u5e94\uff0c\u5bf9\u5427\uff1f\u4f60\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u4fe1\u53f7\u662f\u5426\u5f3a\u5230\u4e86\u503c\u5f97\u4f60\u505a\u51fa\u53cd\u5e94\u7684\u7a0b\u5ea6\u3002</p> <ul> <li>\u5982\u679c\u603b\u5206\u8d85\u8fc7\u4e86\u67d0\u4e2a\u201c\u9608\u503c\u201d\uff08\u6bd4\u5982\u975e\u5e38\u54cd\u7684\u58f0\u97f3\uff09\uff0c\u4f60\u5c31\u4f1a\u5174\u594b\uff0c\u5e76\u5411\u4e0b\u4e00\u4e2a\u795e\u7ecf\u5143\u53d1\u9001\u4e00\u4e2a\u5f3a\u70c8\u7684\u4fe1\u53f7\u3002</li> <li>\u5982\u679c\u603b\u5206\u5f88\u4f4e\uff08\u6bd4\u5982\u5fae\u5f31\u7684\u6742\u97f3\uff09\uff0c\u4f60\u5c31\u4fdd\u6301\u5e73\u9759\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002</li> </ul> </li> </ol> <p>\u8fd9\u4e2a\u201c\u5224\u65ad\u8fc7\u7a0b\u201d\u2014\u2014\u51b3\u5b9a\u662f\u5426\u53cd\u5e94\u4ee5\u53ca\u53cd\u5e94\u591a\u5927\u2014\u2014\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570\u6240\u505a\u7684\u4e8b\u60c5\u3002 \u5b83\u662f\u4e00\u4e2a\u201c\u5f00\u5173\u201d\u6216\u201c\u8fc7\u6ee4\u5668\u201d\uff0c\u51b3\u5b9a\u4e86\u4fe1\u606f\u80fd\u5426\u901a\u8fc7\u8fd9\u4e2a\u795e\u7ecf\u5143\u7ee7\u7eed\u4f20\u9012\u4e0b\u53bb\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_3","title":"\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u201c\u5f00\u5173\u201d\u5982\u6b64\u91cd\u8981\uff1f","text":"<p>\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u201c\u5f00\u5173\u201d\uff08\u6fc0\u6d3b\u51fd\u6570\uff09\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u53ea\u4f1a\u505a\u7b80\u5355\u7684\u52a0\u51cf\u4e58\u9664\u3002\u65e0\u8bba\u5806\u591a\u5c11\u5c42\uff0c\u5b83\u6700\u7ec8\u90fd\u53ea\u80fd\u753b\u51fa\u4e00\u6761\u7b14\u76f4\u7684\u76f4\u7ebf\u6765\u5206\u5272\u6570\u636e\uff08\u53ea\u80fd\u89e3\u51b3\u7ebf\u6027\u95ee\u9898\uff09\u3002</p> <p>\u4f46\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u590d\u6742\u5f97\u591a\uff0c\u6bd4\u5982\u5982\u4f55\u533a\u5206\u732b\u548c\u72d7\u7684\u56fe\u7247\uff1f\u5b83\u4eec\u7684\u533a\u522b\u7edd\u4e0d\u662f\u4e00\u6761\u76f4\u7ebf\u80fd\u5206\u6e05\u7684\u3002\u6211\u4eec\u9700\u8981\u66f2\u6298\u590d\u6742\u7684\u66f2\u7ebf\u624d\u80fd\u533a\u5206\uff08\u975e\u7ebf\u6027\u95ee\u9898\uff09\u3002</p> <p>\u6fc0\u6d3b\u51fd\u6570\u5c31\u662f\u8fd9\u4e2a\u201cingredient\u201d\uff1a \u5b83\u7ed9\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5f15\u5165\u4e86\u626d\u66f2\u548c\u5f2f\u66f2\u3002\u5f53\u5343\u5343\u4e07\u4e07\u4e2a\u8fd9\u6837\u7684\u795e\u7ecf\u5143\u7ec4\u5408\u5728\u4e00\u8d77\u65f6\uff0c\u6574\u4e2a\u7f51\u7edc\u5c31\u80fd\u753b\u51fa\u6781\u5176\u590d\u6742\u7684\u66f2\u7ebf\uff0c\u4ece\u800c\u5b66\u4f1a\u8bc6\u522b\u732b\u8138\u3001\u7406\u89e3\u8bed\u8a00\u3001\u9884\u6d4b\u5929\u6c14\u7b49\u65e0\u6bd4\u590d\u6742\u7684\u4efb\u52a1\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_4","title":"\u51e0\u4e2a\u5e38\u89c1\u7684\u201c\u5f00\u5173\u201d\u7c7b\u578b\uff08\u6fc0\u6d3b\u51fd\u6570\uff09","text":"<ol> <li> <p>ReLU\uff08\u6700\u7b80\u5355\u76f4\u63a5\u7684\u5f00\u5173\uff09\uff1a</p> <ul> <li>\u89c4\u5219\uff1a\u5982\u679c\u8f93\u5165\u5206\u6570 &gt; 0\uff0c\u5c31\u8ba9\u5206\u6570\u539f\u6837\u901a\u8fc7\uff1b\u5982\u679c\u5206\u6570 &lt;= 0\uff0c\u5c31\u76f4\u63a5\u628a\u5b83\u5173\u6389\uff08\u53d8\u4e3a 0\uff09\u3002</li> <li>\u50cf\u4ec0\u4e48\uff1a\u50cf\u4e00\u4e2a\u6574\u6d41\u5668\uff0c\u53ea\u5141\u8bb8\u6b63\u7535\u6d41\u901a\u8fc7\uff0c\u8d1f\u7535\u6d41\u76f4\u63a5\u5f52\u96f6\u3002\u8fd9\u662f\u76ee\u524d\u6700\u5e38\u7528\u3001\u6700\u53d7\u6b22\u8fce\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u6548\u679c\u53c8\u597d\uff0c\u8ba1\u7b97\u53c8\u7b80\u5355\u3002</li> </ul> </li> <li> <p>Sigmoid\uff08\u5e73\u6ed1\u7684\u5f00\u5173\uff09\uff1a</p> <ul> <li>\u89c4\u5219\uff1a\u628a\u4efb\u4f55\u5206\u6570\u90fd\u538b\u7f29\u5230 0 \u548c 1 \u4e4b\u95f4\u3002</li> <li>\u50cf\u4ec0\u4e48\uff1a\u50cf\u4e00\u4e2a\u6295\u7968\u5668\u6216\u6982\u7387\u8f6c\u6362\u5668\u3002\u8f93\u5165\u4e00\u4e2a\u5f88\u5927\u7684\u6b63\u6570\uff0c\u8f93\u51fa\u63a5\u8fd1 1\uff08100%\u540c\u610f\uff09\uff1b\u8f93\u5165\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u6570\uff0c\u8f93\u51fa\u63a5\u8fd1 0\uff080%\u540c\u610f\uff09\uff1b\u8f93\u5165 0\uff0c\u8f93\u51fa 0.5\uff08\u4e00\u534a\u4e00\u534a\uff09\u3002\u5b83\u8f93\u51fa\u975e\u5e38\u5e73\u6ed1\u7684\u7ed3\u679c\uff0c\u5e38\u7528\u4e8e\u8f93\u51fa\u5c42\u505a\u6982\u7387\u9884\u6d4b\uff08\u6bd4\u5982\u5224\u65ad\u4e00\u5f20\u56fe\u662f\u732b\u7684\u6982\u7387\u662f 90%\uff09\u3002</li> </ul> </li> <li> <p>Tanh\uff08\u53cc\u66f2\u6b63\u5207\u51fd\u6570\uff09\uff1a</p> <ul> <li>\u89c4\u5219\uff1a\u628a\u4efb\u4f55\u5206\u6570\u90fd\u538b\u7f29\u5230 -1 \u548c 1 \u4e4b\u95f4\u3002</li> <li>\u50cf\u4ec0\u4e48\uff1a\u50cf\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684 Sigmoid\u3002\u5b83\u7684\u8f93\u51fa\u8303\u56f4\u66f4\u5e7f\uff08-1 \u5230 1\uff09\uff0c\u4e14\u5e73\u5747\u503c\u662f 0\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u4f18\u5316\u6548\u679c\u6709\u65f6\u6bd4 Sigmoid \u66f4\u597d\uff0c\u5e38\u7528\u4e8e\u9690\u85cf\u5c42\u3002</li> </ul> </li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_5","title":"\u5377\u79ef\u6838\u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1","title":"1. \u5377\u79ef\u6838\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6df1\u5ea6\u5b66\u4e60\u91cc\uff0c\u5377\u79ef\u6838\u5c31\u662f\u4e00\u4e2a\u5c0f\u77e9\u9635\uff08\u901a\u5e38\u5927\u5c0f\u662f 3\u00d73\u30015\u00d75\u30017\u00d77 \u7b49\uff09\uff0c\u5b83\u4f1a\u5728\u56fe\u7247\u4e0a\u201c\u6ed1\u52a8\u201d\uff0c\u5e76\u4e0e\u5c40\u90e8\u50cf\u7d20\u505a\u8fd0\u7b97\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a \u5377\u79ef\u3002</p> <p>\ud83d\udc49 \u5377\u79ef\u6838\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e00\u5757\u7279\u6b8a\u7684\u6ee4\u955c\uff0c\u5b83\u51b3\u5b9a\u4e86\u5728\u5904\u7406\u56fe\u50cf\u65f6\u5173\u6ce8\u4ec0\u4e48\u7279\u5f81\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2","title":"2. \u5377\u79ef\u6838\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff1f","text":"<p>\u8ba1\u7b97\u6b65\u9aa4\uff1a</p> <ol> <li>\u628a\u5377\u79ef\u6838\u653e\u5728\u56fe\u7247\u7684\u4e00\u4e2a\u5c0f\u533a\u57df\u4e0a\uff08\u4f8b\u5982 3\u00d73 \u7684\u533a\u57df\uff09\u3002</li> <li>\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u518d\u76f8\u52a0\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\u3002</li> <li>\u5377\u79ef\u6838\u6ed1\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u91cd\u590d\u8ba1\u7b97\u3002</li> </ol> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u77e9\u9635\uff08\u5373\u201c\u7279\u5f81\u56fe\u201d\uff09\uff0c\u5b83\u8868\u793a\u56fe\u7247\u91cc\u67d0\u79cd\u7279\u5f81\u7684\u5206\u5e03\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3","title":"3. \u5377\u79ef\u6838\u7684\u4f5c\u7528","text":"<p>\u4e0d\u540c\u7684\u5377\u79ef\u6838\uff0c\u53ef\u4ee5\u63d0\u53d6\u4e0d\u540c\u7684\u7279\u5f81\uff1a</p> <ul> <li>\u8fb9\u7f18\u68c0\u6d4b\u6838\uff1a\u7a81\u51fa\u56fe\u50cf\u4e2d\u7684\u8fb9\u7f18\u3002</li> <li>\u6a21\u7cca\u6838\uff1a\u8ba9\u56fe\u7247\u53d8\u5f97\u6a21\u7cca\u3002</li> <li>\u9510\u5316\u6838\uff1a\u8ba9\u56fe\u7247\u53d8\u5f97\u6e05\u6670\u3002</li> <li>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff1a\u5377\u79ef\u6838\u7684\u6570\u503c\u4e0d\u662f\u4eba\u4e3a\u8bbe\u5b9a\u7684\uff0c\u800c\u662f \u901a\u8fc7\u8bad\u7ec3\u5b66\u4e60\u5f97\u5230\u7684\uff0c\u53ef\u4ee5\u81ea\u52a8\u63d0\u53d6\u8bc6\u522b\u4efb\u52a1\u9700\u8981\u7684\u7279\u5f81\uff08\u6bd4\u5982\u8fb9\u7f18\u3001\u7eb9\u7406\u3001\u5f62\u72b6\u3001\u751a\u81f3\u4eba\u8138\uff09\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1_1","title":"(1) \u8fb9\u7f18\u68c0\u6d4b\u6838","text":"<p>\u4f8b\u5b50\uff1a</p> \\[ K = \\begin{bmatrix} -1 &amp; -1 &amp; -1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\end{bmatrix} \\] <ul> <li>\u89e3\u91ca\uff1a\u5b83\u5728\u7ad6\u76f4\u65b9\u5411\u4e0a\u8ba1\u7b97\u5dee\u5f02\u3002</li> <li>\u7ed3\u679c\uff1a\u8fb9\u7f18\u533a\u57df\u5dee\u5f02\u5927 \u2192 \u8f93\u51fa\u503c\u5927\uff0c\u7a81\u51fa\u8fb9\u7f18\uff1b\u5e73\u5766\u533a\u57df\u5dee\u5f02\u5c0f \u2192 \u8f93\u51fa\u63a5\u8fd1 0\u3002</li> <li>\u6240\u4ee5\u5b83\u80fd\u201c\u6293\u4f4f\u8fb9\u7f18\u201d\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2_1","title":"(2) \u6a21\u7cca\u6838","text":"<p>\u4f8b\u5b50\uff1a</p> \\[ K = \\frac{1}{9} \\begin{bmatrix} 1 &amp; 1 &amp; 1 \\\\ 1 &amp; 1 &amp; 1 \\\\ 1 &amp; 1 &amp; 1 \\end{bmatrix} \\] <ul> <li>\u89e3\u91ca\uff1a\u5bf9 3\u00d73 \u533a\u57df\u7684\u50cf\u7d20\u505a\u5e73\u5747\u3002</li> <li>\u7ed3\u679c\uff1a\u7ec6\u8282\uff08\u9ad8\u9891\u4fe1\u606f\uff09\u88ab\u5e73\u6ed1\u6389\uff0c\u770b\u8d77\u6765\u66f4\u6a21\u7cca\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3_1","title":"(3) \u9510\u5316\u6838","text":"<p>\u4f8b\u5b50\uff1a</p> \\[ K = \\begin{bmatrix} 0 &amp; -1 &amp; 0 \\\\ -1 &amp; 5 &amp; -1 \\\\ 0 &amp; -1 &amp; 0 \\end{bmatrix} \\] <ul> <li>\u89e3\u91ca\uff1a\u4e2d\u592e\u50cf\u7d20\u88ab\u653e\u5927\uff08\u6743\u91cd\u5927\u4e8e 1\uff09\uff0c\u5468\u56f4\u50cf\u7d20\u88ab\u51cf\u5f31\uff08\u8d1f\u6743\u91cd\uff09\u3002</li> <li>\u7ed3\u679c\uff1a\u8fb9\u7f18\u5bf9\u6bd4\u5ea6\u88ab\u589e\u5f3a\uff0c\u56fe\u50cf\u770b\u8d77\u6765\u66f4\u6e05\u6670\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4","title":"4. \u603b\u7ed3","text":"<ul> <li>\u5377\u79ef\u6838\u7684\u4f5c\u7528\u53d6\u51b3\u4e8e\u91cc\u9762\u7684\u6570\u5b57\uff08\u6743\u91cd\uff09\u5206\u5e03\u3002</li> <li>\u4e0d\u540c\u7684\u6570\u5b57\u7ec4\u5408\uff0c\u51b3\u5b9a\u4e86\u5b83\u662f\u63d0\u53d6\u8fb9\u7f18\u3001\u6a21\u7cca\u3001\u9510\u5316\uff0c\u8fd8\u662f\u5176\u4ed6\u7279\u5f81\u3002</li> <li>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u8fd9\u4e9b\u201c\u6570\u5b57\u7ec4\u5408\u201d\u4e0d\u662f\u4eba\u5de5\u8bbe\u7f6e\u7684\uff0c\u800c\u662f \u7f51\u7edc\u81ea\u52a8\u5b66\u4e60\u51fa\u6765\u7684\u6700\u4f18\u914d\u65b9\uff0c\u7528\u6765\u5b8c\u6210\u4efb\u52a1\uff08\u5982\u8bc6\u522b\u732b\u3001\u72d7\u3001\u4eba\u8138\uff09\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_6","title":"\u52a8\u6001\u6838\u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1_2","title":"1. \u52a8\u6001\u6838\u7684\u57fa\u672c\u5b9a\u4e49","text":"<p>\u5728\u4f20\u7edf\u7684 CNN \u91cc\uff0c\u5377\u79ef\u6838\uff08Convolution Kernel\uff09 \u7684\u53c2\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u4e00\u65e6\u8bad\u7ec3\u5b8c\u6210\uff0c\u5b83\u5c31\u4e0d\u4f1a\u518d\u968f\u8f93\u5165\u53d8\u5316\u3002 \u800c \u52a8\u6001\u6838\uff08Dynamic Kernel\uff09 \u5219\u662f\u6307\uff1a \ud83d\udc49 \u5377\u79ef\u6838\u7684\u6743\u91cd\u4e0d\u518d\u56fa\u5b9a\uff0c\u800c\u662f\u6839\u636e\u8f93\u5165\u6837\u672c\u52a8\u6001\u751f\u6210\u6216\u8c03\u6574\u3002</p> <p>\u8fd9\u6837\uff0c\u6a21\u578b\u5728\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u65f6\uff0c\u80fd\u81ea\u9002\u5e94\u5730\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u5f81\u63d0\u53d6\u65b9\u5f0f\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2_2","title":"2. \u4e3a\u4ec0\u4e48\u9700\u8981\u52a8\u6001\u6838","text":"<ul> <li>\u56fa\u5b9a\u5377\u79ef\u6838\u7684\u5c40\u9650\uff1a\u4e00\u7ec4\u56fa\u5b9a\u53c2\u6570\u5bf9\u6240\u6709\u8f93\u5165\u90fd\u4e00\u6837\uff0c\u53ef\u80fd\u65e0\u6cd5\u6355\u6349\u5230\u4e0d\u540c\u573a\u666f\u4e2d\u7684\u5dee\u5f02\u3002</li> <li>\u52a8\u6001\u6838\u7684\u4f18\u52bf\uff1a\u8ba9\u7f51\u7edc\u50cf\u201c\u53d8\u7126\u955c\u5934\u201d\u4e00\u6837\uff0c\u6839\u636e\u8f93\u5165\u7684\u5185\u5bb9\u8c03\u6574\u81ea\u5df1\uff0c\u589e\u5f3a\u4e86\u6a21\u578b\u7684\u7075\u6d3b\u6027\u548c\u9002\u5e94\u6027\u3002</li> </ul> <p>\u4e3e\u4e2a\u6bd4\u55bb\uff1a</p> <ul> <li>\u56fa\u5b9a\u5377\u79ef\u6838\uff1a\u50cf\u6234\u4e00\u526f\u56fa\u5b9a\u5ea6\u6570\u7684\u773c\u955c\uff0c\u770b\u4efb\u4f55\u4e1c\u897f\u90fd\u4e00\u6837\u3002</li> <li>\u52a8\u6001\u5377\u79ef\u6838\uff1a\u50cf\u6234\u4e00\u526f\u667a\u80fd\u773c\u955c\uff0c\u53ef\u4ee5\u6839\u636e\u8fdc\u8fd1\u3001\u5149\u7ebf\u81ea\u52a8\u8c03\u8282\u7126\u8ddd\u548c\u4eae\u5ea6\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3_2","title":"3. \u52a8\u6001\u6838\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709\u51e0\u79cd\uff1a</p> <ol> <li> <p>\u6761\u4ef6\u5377\u79ef\uff08CondConv, 2019 Google \u63d0\u51fa\uff09</p> </li> <li> <p>\u4e3a\u6bcf\u4e2a\u5377\u79ef\u5c42\u51c6\u5907\u591a\u7ec4\u6838\uff0c</p> </li> <li> <p>\u7136\u540e\u7528\u4e00\u4e2a\u5c0f\u7f51\u7edc\uff08\u6761\u4ef6\u7f51\u7edc\uff09\u6839\u636e\u8f93\u5165\u51b3\u5b9a\u6bcf\u7ec4\u6838\u7684\u52a0\u6743\u7ec4\u5408\u3002</p> </li> <li> <p>\u52a8\u6001\u5377\u79ef\uff08Dynamic Convolution, 2020 Facebook \u63d0\u51fa\uff09</p> </li> <li> <p>\u7c7b\u4f3c CondConv\uff0c\u4f46\u66f4\u9ad8\u6548\uff0c\u9002\u5408 NLP \u548c CV\u3002</p> </li> <li> <p>\u5728 NLP \u4e2d\uff0c\u5b83\u751a\u81f3\u88ab\u62ff\u6765\u66ff\u4ee3\u90e8\u5206\u6ce8\u610f\u529b\u673a\u5236\uff08attention\uff09\u3002</p> </li> <li> <p>\u6838\u751f\u6210\u7f51\u7edc\uff08Kernel Generation Network\uff09</p> </li> <li> <p>\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u5b50\u7f51\u7edc\uff0c\u76f4\u63a5\u6839\u636e\u8f93\u5165\u751f\u6210\u65b0\u7684\u5377\u79ef\u6838\u6743\u91cd\u3002</p> </li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4_1","title":"4. \u5e94\u7528\u573a\u666f","text":"<ul> <li>\u56fe\u50cf\u8bc6\u522b\uff1a\u63d0\u9ad8\u5728\u590d\u6742\u3001\u591a\u6837\u73af\u5883\u4e0b\u7684\u9c81\u68d2\u6027\u3002</li> <li>\u89c6\u9891\u7406\u89e3\uff1a\u6839\u636e\u65f6\u95f4\u5e8f\u5217\u53d8\u5316\u52a8\u6001\u8c03\u6574\u5377\u79ef\u6838\u3002</li> <li>\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\uff1a\u52a8\u6001\u5377\u79ef\u88ab\u7528\u4e8e\u63d0\u5347 Transformer \u7684\u6548\u7387\uff08\u6bd4\u5982 Facebook \u7684 DynamicConv\uff09\u3002</li> <li>\u8f7b\u91cf\u5316\u6a21\u578b\uff1a\u52a8\u6001\u6838\u80fd\u5728\u4e0d\u5927\u5e45\u589e\u52a0\u53c2\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\u589e\u5f3a\u8868\u73b0\u529b\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#5","title":"5. \u603b\u7ed3","text":"<ul> <li>\u4f20\u7edf\u5377\u79ef\u6838\uff1a\u56fa\u5b9a\u7684\uff0c\u6240\u6709\u8f93\u5165\u7528\u540c\u4e00\u5957\u6ee4\u955c\u3002</li> <li>\u52a8\u6001\u5377\u79ef\u6838\uff1a\u53ef\u53d8\u7684\uff0c\u6839\u636e\u8f93\u5165\u5185\u5bb9\u81ea\u9002\u5e94\u8c03\u6574\u6ee4\u955c\u3002</li> <li>\u610f\u4e49\uff1a\u589e\u5f3a\u6a21\u578b\u7684\u7075\u6d3b\u6027\u548c\u8868\u8fbe\u80fd\u529b\uff0c\u80fd\u66f4\u597d\u5730\u5904\u7406\u590d\u6742\u3001\u591a\u6837\u5316\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#_7","title":"\u795e\u7ecf\u7f51\u7edc\u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1_3","title":"1. \u76f4\u89c2\u7406\u89e3","text":"<p>\u795e\u7ecf\u7f51\u7edc\u7684\u7075\u611f\u6765\u81ea\u4eba\u8111\u3002</p> <ul> <li>\u4eba\u8111\uff1a\u6709\u5f88\u591a\u795e\u7ecf\u5143\uff0c\u63a5\u6536\u4fe1\u53f7 \u2192 \u5904\u7406 \u2192 \u51b3\u5b9a\u662f\u5426\u6fc0\u6d3b \u2192 \u628a\u4fe1\u53f7\u4f20\u7ed9\u5176\u4ed6\u795e\u7ecf\u5143\u3002</li> <li>\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff1a\u7528\u6570\u5b66\u51fd\u6570\u53bb\u6a21\u4eff\u8fd9\u79cd\u673a\u5236\uff0c\u628a\u8f93\u5165\uff08\u6570\u636e\uff09\u9010\u5c42\u4f20\u9012\u3001\u52a0\u5de5\uff0c\u6700\u540e\u5f97\u5230\u8f93\u51fa\uff08\u9884\u6d4b\u7ed3\u679c\uff09\u3002</li> </ul> <p>\ud83d\udc49 \u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u7fa4\u201c\u4fe1\u606f\u52a0\u5de5\u5de5\u4eba\u201d\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5de5\u4eba\uff08\u795e\u7ecf\u5143\uff09\u53ea\u505a\u4e00\u70b9\u70b9\u52a0\u6743\u8ba1\u7b97\u548c\u5224\u65ad\u3002</li> <li>\u4f46\u6210\u5343\u4e0a\u4e07\u4e2a\u5de5\u4eba\uff08\u795e\u7ecf\u5143\uff09\u4e00\u8d77\u5408\u4f5c\uff0c\u5c31\u80fd\u5b8c\u6210\u590d\u6742\u4efb\u52a1\uff08\u6bd4\u5982\u8bc6\u522b\u732b\u72d7\u3001\u7ffb\u8bd1\u8bed\u8a00\uff09\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2_3","title":"2. \u6570\u5b66\u4e0a\u7684\u7ed3\u6784","text":"<p>\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7531 \u5c42\uff08Layers\uff09 \u7ec4\u6210\uff1a</p> <ul> <li>\u8f93\u5165\u5c42\uff08Input Layer\uff09\uff1a\u63a5\u6536\u6570\u636e\uff08\u5982\u4e00\u5f20\u56fe\u7684\u50cf\u7d20\u3001\u4e00\u4e2a\u53e5\u5b50\u7684\u8bcd\u5411\u91cf\uff09\u3002</li> <li>\u9690\u85cf\u5c42\uff08Hidden Layers\uff09\uff1a\u591a\u5c42\u795e\u7ecf\u5143\u5904\u7406\u5e76\u63d0\u53d6\u7279\u5f81\u3002</li> <li>\u8f93\u51fa\u5c42\uff08Output Layer\uff09\uff1a\u7ed9\u51fa\u7ed3\u679c\uff08\u6bd4\u5982\u201c\u8fd9\u662f\u732b\u201d\u7684\u6982\u7387 90%\uff09\u3002</li> </ul> <p>\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1a</p> \\[ \u8f93\u51fa = \u6fc0\u6d3b\u51fd\u6570( \\sum (\u8f93\u5165 \\times \u6743\u91cd) + \u504f\u7f6e ) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\u6743\u91cd (Weight)\uff1a\u8868\u793a\u8f93\u5165\u7684\u91cd\u8981\u6027\u3002</li> <li>\u504f\u7f6e (Bias)\uff1a\u8868\u793a\u6574\u4f53\u7684\u8c03\u6574\u3002</li> <li>\u6fc0\u6d3b\u51fd\u6570\uff1a\u51b3\u5b9a\u795e\u7ecf\u5143\u662f\u5426\u6fc0\u6d3b\uff0c\u8d4b\u4e88\u7f51\u7edc\u975e\u7ebf\u6027\u80fd\u529b\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3_3","title":"3. \u795e\u7ecf\u7f51\u7edc\u7684\u5b66\u4e60\u8fc7\u7a0b","text":"<p>\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u201c\u8bad\u7ec3\u201d\uff1a</p> <ol> <li>\u6b63\u5411\u4f20\u64ad\uff08Forward Propagation\uff09    \u8f93\u5165\u6570\u636e\u7ecf\u8fc7\u7f51\u7edc\u8ba1\u7b97\uff0c\u5f97\u5230\u9884\u6d4b\u7ed3\u679c\u3002</li> <li>\u8ba1\u7b97\u8bef\u5dee\uff08Loss Function\uff09    \u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u7b54\u6848\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002</li> <li>\u53cd\u5411\u4f20\u64ad\uff08Backpropagation\uff09    \u8bef\u5dee\u5f80\u56de\u4f20\uff0c\u8c03\u6574\u6743\u91cd\u548c\u504f\u7f6e\u3002</li> <li>\u68af\u5ea6\u4e0b\u964d\uff08Gradient Descent\uff09    \u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\uff0c\u8ba9\u7f51\u7edc\u7684\u9884\u6d4b\u8d8a\u6765\u8d8a\u63a5\u8fd1\u771f\u5b9e\u3002</li> </ol> <p>\ud83d\udc49 \u5c31\u50cf\u5b66\u751f\u505a\u9898 \u2192 \u68c0\u67e5\u9519\u9898 \u2192 \u8001\u5e08\u6279\u6539 \u2192 \u4e0b\u6b21\u6539\u8fdb\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4_2","title":"4. \u795e\u7ecf\u7f51\u7edc\u80fd\u505a\u4ec0\u4e48\uff1f","text":"<ul> <li>\u56fe\u50cf\u8bc6\u522b\uff08\u8bc6\u522b\u732b\u3001\u72d7\u3001\u4eba\u8138\uff09</li> <li>\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08\u7ffb\u8bd1\u3001\u804a\u5929\u673a\u5668\u4eba\uff09</li> <li>\u6e38\u620f AI\uff08AlphaGo\uff09</li> <li>\u8bed\u97f3\u8bc6\u522b\u3001\u81ea\u52a8\u9a7e\u9a76\u3001\u533b\u5b66\u8bca\u65ad\u2026\u2026</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#mlp","title":"\u591a\u5c42\u611f\u77e5\u673a MLP \u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1-perceptron","title":"1. \u4ec0\u4e48\u662f\u611f\u77e5\u673a\uff08Perceptron\uff09","text":"<ul> <li>\u611f\u77e5\u673a\u662f\u6700\u7b80\u5355\u7684\u795e\u7ecf\u5143\u6a21\u578b\u3002</li> <li>\u5b83\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</li> </ul> \\[ y = f\\left(\\sum (w_i \\cdot x_i) + b \\right) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(x_i\\) = \u8f93\u5165</li> <li>\\(w_i\\) = \u6743\u91cd</li> <li>\\(b\\) = \u504f\u7f6e</li> <li>\\(f\\) = \u6fc0\u6d3b\u51fd\u6570</li> </ul> <p>\ud83d\udc49 \u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u628a\u8f93\u5165\u52a0\u6743\u6c42\u548c\uff0c\u518d\u901a\u8fc7\u4e00\u4e2a\u201c\u5f00\u5173\u201d\uff08\u6fc0\u6d3b\u51fd\u6570\uff09\uff0c\u5f97\u5230\u8f93\u51fa\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2-mlp","title":"2. \u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09\u7684\u7ed3\u6784","text":"<p>\u5355\u4e2a\u611f\u77e5\u673a\u5f88\u5f31\uff0c\u53ea\u80fd\u89e3\u51b3\u7ebf\u6027\u95ee\u9898\u3002 \u6240\u4ee5\u4eba\u4eec\u628a\u5f88\u591a\u611f\u77e5\u673a\u5806\u53e0\u8d77\u6765\uff0c\u5f62\u6210 \u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09\u3002</p> <p>MLP \u4e00\u822c\u5305\u62ec\uff1a</p> <ul> <li>\u8f93\u5165\u5c42\uff08Input Layer\uff09\uff1a\u63a5\u6536\u6570\u636e\uff08\u5982\u56fe\u50cf\u50cf\u7d20\u3001\u6587\u672c\u5411\u91cf\uff09\u3002</li> <li>\u9690\u85cf\u5c42\uff08Hidden Layers\uff09\uff1a\u7531\u591a\u4e2a\u611f\u77e5\u673a\u7ec4\u6210\uff0c\u6bcf\u5c42\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u7684\u8f93\u5165\u3002</li> <li>\u8f93\u51fa\u5c42\uff08Output Layer\uff09\uff1a\u7ed9\u51fa\u6700\u7ec8\u7ed3\u679c\uff08\u5206\u7c7b\u3001\u56de\u5f52\u7b49\uff09\u3002</li> </ul> <p>\ud83d\udc49 \u5173\u952e\u70b9\uff1a\u9690\u85cf\u5c42\u8d8a\u591a\u3001\u795e\u7ecf\u5143\u8d8a\u591a\uff0cMLP \u7684\u8868\u8fbe\u80fd\u529b\u8d8a\u5f3a\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3-mlp","title":"3. MLP \u7684\u8ba1\u7b97\u6d41\u7a0b","text":"<ol> <li>\u8f93\u5165\u5c42\u63a5\u6536\u6570\u636e\uff08\u5982 28\u00d728 \u50cf\u7d20\u7684\u624b\u5199\u6570\u5b57 \u2192 \u5c55\u5e73\u6210 784 \u7ef4\u5411\u91cf\uff09\u3002</li> <li>\u6570\u636e\u9010\u5c42\u4f20\u9012\uff0c\u6bcf\u5c42\u795e\u7ecf\u5143\u505a\uff1a\u52a0\u6743\u6c42\u548c \u2192 \u6fc0\u6d3b\u51fd\u6570\u3002</li> <li>\u8f93\u51fa\u5c42\u5f97\u5230\u9884\u6d4b\u7ed3\u679c\u3002</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4_3","title":"4. \u6fc0\u6d3b\u51fd\u6570\u7684\u91cd\u8981\u6027","text":"<ul> <li>\u5982\u679c\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\uff0cMLP \u53ea\u80fd\u8868\u793a\u201c\u76f4\u7ebf\u201d\u3002</li> <li>\u6709\u4e86\u6fc0\u6d3b\u51fd\u6570\uff0cMLP \u5c31\u80fd\u8868\u793a\u590d\u6742\u7684\u201c\u66f2\u7ebf\u5173\u7cfb\u201d\uff0c\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898\uff08\u6bd4\u5982\u533a\u5206\u732b\u548c\u72d7\uff09\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#5-mlp","title":"5. MLP \u7684\u7279\u70b9","text":"<p>\u2705 \u4f18\u70b9\uff1a</p> <ul> <li>\u7ed3\u6784\u7b80\u5355\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002</li> <li>\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u7840\u6a21\u578b\uff0c\u9002\u5408\u5165\u95e8\u3002</li> <li>\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5f62\u5f0f\u7684\u8f93\u5165\uff08\u56fe\u50cf\u3001\u6587\u672c\u3001\u8868\u683c\u6570\u636e\u7b49\uff09\u3002</li> </ul> <p>\u26a0\ufe0f \u7f3a\u70b9\uff1a</p> <ul> <li>\u53c2\u6570\u91cf\u53ef\u80fd\u5f88\u5927\uff08\u8f93\u5165\u7ef4\u5ea6 \u00d7 \u795e\u7ecf\u5143\u6570\uff09\u3002</li> <li>\u6ca1\u6709\u5229\u7528\u6570\u636e\u7684\u7a7a\u95f4\u6216\u5e8f\u5217\u7ed3\u6784\uff08\u56fe\u50cf\u8981\u7528 CNN\uff0c\u5e8f\u5217\u8981\u7528 RNN/Transformer\uff09\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#6","title":"6. \u603b\u7ed3","text":"<ul> <li>MLP = \u591a\u5c42\u611f\u77e5\u673a = \u6700\u7ecf\u5178\u7684\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u3002</li> <li>\u7531\u8f93\u5165\u5c42\u3001\u591a\u4e2a\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u7ec4\u6210\u3002</li> <li>\u6bcf\u4e2a\u795e\u7ecf\u5143\uff1a\u52a0\u6743\u6c42\u548c \u2192 \u6fc0\u6d3b\u51fd\u6570 \u2192 \u8f93\u51fa\u3002</li> <li>\u901a\u8fc7\u8bad\u7ec3\uff08\u53cd\u5411\u4f20\u64ad + \u68af\u5ea6\u4e0b\u964d\uff09\u81ea\u52a8\u8c03\u6574\u53c2\u6570\u3002</li> <li>\u662f\u6df1\u5ea6\u5b66\u4e60\u6700\u57fa\u7840\u7684\u6a21\u578b\uff0c\u4f46\u5728\u56fe\u50cf/\u8bed\u8a00\u7b49\u4efb\u52a1\u4e2d\u901a\u5e38\u88ab\u66f4\u4e13\u4e1a\u7684\u7f51\u7edc\uff08CNN\u3001RNN\u3001Transformer\uff09\u66ff\u4ee3\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#cnn","title":"CNN \u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1-cnn","title":"1. \u4ec0\u4e48\u662f CNN\uff1f","text":"<p>CNN \uff08\u5377\u79ef\u795e\u7ecf\u7f51\u7edc, Convolutional Neural Network\uff09\u662f\u4e00\u79cd \u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4e13\u95e8\u64c5\u957f\u5904\u7406 \u5177\u6709\u7a7a\u95f4\u7ed3\u6784\u7684\u6570\u636e\uff0c\u6bd4\u5982\u56fe\u50cf\u3001\u89c6\u9891\u3001\u8bed\u97f3\u548c\u65f6\u95f4\u5e8f\u5217\u3002</p> <p>\u4e0e\u666e\u901a\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff08MLP\uff09\u76f8\u6bd4\uff0cCNN \u901a\u8fc7 \u5377\u79ef\u8fd0\u7b97 \u63d0\u53d6\u5c40\u90e8\u7279\u5f81\uff0c\u53ef\u4ee5\u81ea\u52a8\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u5b66\u5230\u8fb9\u7f18\u3001\u7eb9\u7406\u3001\u5f62\u72b6\u7b49\u4fe1\u606f\u3002</p> <p>\ud83d\udc49 \u4e00\u53e5\u8bdd\u7406\u89e3\uff1a CNN \u5c31\u50cf\u4e00\u4e2a\u201c\u7279\u5f81\u63d0\u53d6\u5de5\u5382\u201d\uff0c\u5b83\u80fd\u81ea\u52a8\u4ece\u56fe\u7247\u91cc\u627e\u5230\u732b\u7684\u8033\u6735\u3001\u72d7\u7684\u9f3b\u5b50\u3001\u6c7d\u8f66\u7684\u8f6e\u5b50\u7b49\u5173\u952e\u4fe1\u606f\uff0c\u800c\u4e0d\u7528\u4eba\u5de5\u8bbe\u8ba1\u7279\u5f81\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2-cnn","title":"2. CNN \u7684\u6838\u5fc3\u7ed3\u6784","text":"<p>CNN \u4e3b\u8981\u7531\u4e09\u7c7b\u5c42\u7ec4\u6210\uff1a</p> <ol> <li> <p>\u5377\u79ef\u5c42\uff08Convolutional Layer\uff09</p> </li> <li> <p>\u7528\u5377\u79ef\u6838\uff08\u5c0f\u77e9\u9635\uff09\u5728\u8f93\u5165\u6570\u636e\u4e0a\u6ed1\u52a8\uff0c\u63d0\u53d6\u5c40\u90e8\u7279\u5f81\u3002</p> </li> <li>\u4f4e\u5c42\u5377\u79ef\u6838\uff1a\u68c0\u6d4b\u8fb9\u7f18\u3001\u989c\u8272\u5757\u3002</li> <li> <p>\u9ad8\u5c42\u5377\u79ef\u6838\uff1a\u68c0\u6d4b\u590d\u6742\u5f62\u72b6\uff08\u6bd4\u5982\u773c\u775b\u3001\u8138\uff09\u3002</p> </li> <li> <p>\u6c60\u5316\u5c42\uff08Pooling Layer\uff09</p> </li> <li> <p>\u5bf9\u7279\u5f81\u56fe\u8fdb\u884c\u7f29\u5c0f\uff08\u6bd4\u5982\u53d6\u6700\u5927\u503c MaxPooling \u6216\u5e73\u5747\u503c AveragePooling\uff09\u3002</p> </li> <li> <p>\u4f5c\u7528\uff1a\u51cf\u5c11\u8ba1\u7b97\u91cf\u3001\u964d\u4f4e\u8fc7\u62df\u5408\u3001\u4fdd\u7559\u91cd\u8981\u4fe1\u606f\u3002</p> </li> <li> <p>\u5168\u8fde\u63a5\u5c42\uff08Fully Connected Layer\uff09</p> </li> <li> <p>\u5728\u6700\u540e\u9636\u6bb5\uff0c\u628a\u5377\u79ef\u5c42\u63d0\u53d6\u7684\u7279\u5f81\u7ec4\u5408\u8d77\u6765\uff0c\u7528\u4e8e\u5206\u7c7b\u6216\u56de\u5f52\u3002</p> </li> <li>\u4f8b\u5982\uff1a\u8f93\u51fa\u201c\u8fd9\u662f\u4e00\u53ea\u732b\u201d\u7684\u6982\u7387 = 0.92\u3002</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3-cnn","title":"3. CNN \u7684\u5de5\u4f5c\u6d41\u7a0b\uff08\u56fe\u50cf\u5206\u7c7b\u4e3a\u4f8b\uff09","text":"<ol> <li>\u8f93\u5165\uff1a\u4e00\u5f20\u56fe\u7247\uff08\u6bd4\u5982\u732b\uff09\u3002</li> <li>\u5377\u79ef\uff1a\u5377\u79ef\u6838\u63d0\u53d6\u8fb9\u7f18\u3001\u7eb9\u7406\u7b49\u5c40\u90e8\u7279\u5f81\u3002</li> <li>\u6c60\u5316\uff1a\u7f29\u5c0f\u7279\u5f81\u56fe\uff0c\u51cf\u5c11\u5197\u4f59\u3002</li> <li>\u591a\u5c42\u5377\u79ef + \u6c60\u5316\uff1a\u9010\u5c42\u63d0\u53d6\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u7279\u5f81\uff08\u8033\u6735 \u2192 \u8138 \u2192 \u6574\u53ea\u732b\uff09\u3002</li> <li>\u5168\u8fde\u63a5\u5c42\uff1a\u7efc\u5408\u6240\u6709\u7279\u5f81\uff0c\u8fdb\u884c\u5206\u7c7b\u3002</li> <li>\u8f93\u51fa\uff1a\u9884\u6d4b\u7ed3\u679c\uff0c\u6bd4\u5982\u300c\u732b\uff1a92%\uff0c\u72d7\uff1a7%\uff0c\u5176\u4ed6\uff1a1%\u300d\u3002</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4-cnn","title":"4. CNN \u7684\u4f18\u52bf","text":"<ul> <li>\u5c40\u90e8\u8fde\u63a5\uff1a\u6bcf\u4e2a\u5377\u79ef\u6838\u53ea\u5173\u6ce8\u5c40\u90e8\u533a\u57df\uff0c\u9002\u5408\u6355\u6349\u56fe\u50cf\u5c40\u90e8\u6a21\u5f0f\u3002</li> <li>\u53c2\u6570\u5171\u4eab\uff1a\u540c\u4e00\u4e2a\u5377\u79ef\u6838\u5728\u5168\u56fe\u4f7f\u7528\uff0c\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u63d0\u5347\u6548\u7387\u3002</li> <li>\u5c42\u6b21\u7ed3\u6784\uff1a\u5e95\u5c42\u5b66\u7b80\u5355\u7279\u5f81\uff0c\u9ad8\u5c42\u5b66\u590d\u6742\u7279\u5f81\u3002</li> <li>\u6cdb\u5316\u80fd\u529b\u5f3a\uff1a\u80fd\u81ea\u52a8\u63d0\u53d6\u7279\u5f81\uff0c\u4e0d\u9700\u8981\u624b\u5de5\u8bbe\u8ba1\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#5_1","title":"5. \u73b0\u5b9e\u5e94\u7528","text":"<ul> <li>\u56fe\u50cf\u8bc6\u522b\uff08\u732b\u72d7\u8bc6\u522b\u3001\u4eba\u8138\u8bc6\u522b\uff09</li> <li>\u76ee\u6807\u68c0\u6d4b\uff08\u81ea\u52a8\u9a7e\u9a76\u4e2d\u7684\u884c\u4eba\u68c0\u6d4b\uff09</li> <li>\u533b\u5b66\u5f71\u50cf\uff08\u80bf\u7624\u8bc6\u522b\u3001X \u5149\u5206\u6790\uff09</li> <li>\u8bed\u97f3\u8bc6\u522b\uff08\u58f0\u8c31\u56fe\u7279\u5f81\u63d0\u53d6\uff09</li> <li>\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08\u6587\u672c\u5206\u7c7b\u3001\u60c5\u611f\u5206\u6790\uff09</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#rnn","title":"RNN \u4ecb\u7ecd","text":""},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#1-rnn","title":"1. \u4ec0\u4e48\u662f RNN\uff1f","text":"<p>RNN \uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0cRecurrent Neural Network\uff09\u662f\u4e00\u79cd\u4e13\u95e8\u5904\u7406\u5e8f\u5217\u6570\u636e\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u64c5\u957f\u5904\u7406\u65f6\u95f4\u6216\u987a\u5e8f\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6587\u5b57\u5e8f\u5217 \u2192 \u53e5\u5b50\u751f\u6210\u3001\u7ffb\u8bd1</li> <li>\u8bed\u97f3\u4fe1\u53f7 \u2192 \u8bed\u97f3\u8bc6\u522b</li> <li>\u89c6\u9891\u5e27 \u2192 \u52a8\u4f5c\u8bc6\u522b</li> <li>\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u2192 \u80a1\u7968\u9884\u6d4b\u3001\u4f20\u611f\u5668\u6570\u636e\u5206\u6790</li> </ul> <p>RNN \u7684\u6838\u5fc3\u601d\u60f3\u662f \u8bb0\u4f4f\u8fc7\u53bb\u7684\u4fe1\u606f\uff0c\u628a\u5e8f\u5217\u524d\u9762\u8f93\u5165\u7684\u72b6\u6001\u5f71\u54cd\u540e\u9762\u7684\u8f93\u51fa\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#2-rnn","title":"2. RNN \u7684\u7ed3\u6784\u7279\u70b9","text":"<p>\u666e\u901a\u795e\u7ecf\u7f51\u7edc\uff08\u5982 MLP\u3001CNN\uff09\u5047\u8bbe\u8f93\u5165\u72ec\u7acb\uff0c\u800c RNN \u5f15\u5165\u4e86 \u5faa\u73af\u8fde\u63a5\uff1a</p> <ul> <li>\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u4e0d\u4ec5\u4f9d\u8d56\u5f53\u524d\u8f93\u5165\uff0c\u8fd8\u4f9d\u8d56\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u9690\u85cf\u72b6\u6001\uff08hidden state\uff09\u3002</li> <li>\u516c\u5f0f\u8868\u793a\uff1a</li> </ul> \\[ h_t = f(W_{xh} x_t + W_{hh} h_{t-1} + b_h) \\] \\[ y_t = g(W_{hy} h_t + b_y) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(x_t\\)\uff1a\u5f53\u524d\u65f6\u95f4\u6b65\u8f93\u5165</li> <li>\\(h_t\\)\uff1a\u5f53\u524d\u9690\u85cf\u72b6\u6001\uff08\u8bb0\u5fc6\uff09</li> <li>\\(h_{t-1}\\)\uff1a\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u9690\u85cf\u72b6\u6001</li> <li>\\(y_t\\)\uff1a\u5f53\u524d\u8f93\u51fa</li> <li>\\(f, g\\)\uff1a\u6fc0\u6d3b\u51fd\u6570</li> </ul> <p>\u9690\u85cf\u72b6\u6001 \\(h_t\\) \u5c31\u50cf\u201c\u8bb0\u5fc6\u201d\uff0c\u80fd\u591f\u8ba9\u7f51\u7edc\u8bb0\u4f4f\u5e8f\u5217\u4fe1\u606f\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#3-rnn","title":"3. RNN \u7684\u5de5\u4f5c\u6d41\u7a0b\uff08\u4e3e\u4f8b\uff1a\u6587\u5b57\u751f\u6210\uff09","text":"<ol> <li>\u8f93\u5165\u5e8f\u5217\uff1a\u201c\u4eca\u5929\u5929\u6c14\u5f88\u597d\u201d</li> <li>\u7b2c\u4e00\u4e2a\u5b57 \u201c\u4eca\u201d \u8f93\u5165 \u2192 \u8ba1\u7b97\u9690\u85cf\u72b6\u6001 h1 \u2192 \u8f93\u51fa\u9884\u6d4b</li> <li>\u7b2c\u4e8c\u4e2a\u5b57 \u201c\u5929\u201d \u8f93\u5165 \u2192 \u9690\u85cf\u72b6\u6001 h1 + \u5f53\u524d\u8f93\u5165 \u2192 \u66f4\u65b0 h2 \u2192 \u8f93\u51fa\u9884\u6d4b</li> <li>\u7b2c\u4e09\u4e2a\u5b57 \u201c\u5929\u201d \u8f93\u5165 \u2192 \u9690\u85cf\u72b6\u6001 h2 + \u5f53\u524d\u8f93\u5165 \u2192 \u66f4\u65b0 h3 \u2192 \u8f93\u51fa\u9884\u6d4b</li> <li>\u2026</li> <li>\u6700\u7ec8\u8f93\u51fa\uff1a\u6a21\u578b\u53ef\u4ee5\u6839\u636e\u524d\u9762\u7684\u6587\u5b57\u9884\u6d4b\u4e0b\u4e00\u4e2a\u5b57\uff0c\u751f\u6210\u8fde\u8d2f\u53e5\u5b50</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#4-rnn","title":"4. RNN \u7684\u4f18\u52bf","text":"<ul> <li>\u80fd\u5904\u7406 \u5e8f\u5217\u6570\u636e\uff0c\u7406\u89e3\u4e0a\u4e0b\u6587\u4fe1\u606f</li> <li>\u53ef\u4ee5 \u5171\u4eab\u53c2\u6570\uff0c\u4e0d\u540c\u65f6\u95f4\u6b65\u4f7f\u7528\u540c\u4e00\u7ec4\u6743\u91cd\uff0c\u51cf\u5c11\u53c2\u6570\u91cf</li> <li>\u53ef\u5e94\u7528\u4e8e\u6587\u672c\u3001\u8bed\u97f3\u3001\u89c6\u9891\u3001\u91d1\u878d\u7b49\u591a\u79cd\u65f6\u5e8f\u4efb\u52a1</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/X-3D%20intro/#5-rnn","title":"5. RNN \u7684\u95ee\u9898","text":"<ul> <li>\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\uff1a\u957f\u5e8f\u5217\u8bad\u7ec3\u56f0\u96be</li> <li>\u77ed\u671f\u8bb0\u5fc6\u80fd\u529b\u6709\u9650\uff1a\u5bf9\u4e8e\u957f\u8ddd\u79bb\u4f9d\u8d56\uff08\u4f8b\u5982\u6587\u7ae0\u5f00\u5934\u7684\u4fe1\u606f\u5f71\u54cd\u7ed3\u5c3e\uff09\u96be\u4ee5\u8bb0\u4f4f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u51fa\u73b0\u4e86 LSTM\uff08\u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc\uff09 \u548c GRU\uff08\u95e8\u63a7\u5faa\u73af\u5355\u5143\uff09\uff0c\u4e13\u95e8\u89e3\u51b3\u957f\u5e8f\u5217\u8bb0\u5fc6\u95ee\u9898\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2001%20intro/","title":"\u7eea\u8bba","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 635 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2001%20intro/#_1","title":"\u8bfe\u7a0b\u4ecb\u7ecd","text":"<p>\u7b80\u5355\u7684\u5047\u8bbe\uff1a\u611f\u77e5\u548c\u8fd0\u52a8\u662f\u667a\u80fd\u7684\u6807\u5fd7</p> <p>\u7ecf\u9a8c\u6027\u8d28\u7684 Engeneering\uff0c\u4ece\u5de5\u7a0b\u5b9e\u8df5\u4e2d\u5f97\u51fa</p> <p>\u7b54\u8fa9\u601d\u8def\uff1a\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\uff0c\u53d1\u5c55\u8d8b\u52bf</p> <p>\u53c2\u8003\u671f\u520a\u548c\u4f1a\u8bae\u8bba\u6587\uff1a</p> <ul> <li>AI</li> <li>NeurIPS, ICML, ICLR, CVPR, ICCV, ECCV, AAAI, IJCAI  </li> <li>TPAMI, JMLR, IJCV  </li> <li>Nature Machine Intelligence  </li> <li>\u673a\u5668\u4eba\u9886\u57df</li> <li>ICRA, IROS, ACC, CDC  </li> <li>TRO, IJRR, Soft Robotics  </li> <li>Science Robotics  </li> <li>\u5176\u4ed6</li> <li>SIGGraph, SIG CHI</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2001%20intro/#_2","title":"\u6982\u51b5","text":"<p>\u611f\u77e5\u53d7\u5230\u7ed3\u6784\u3001\u80fd\u91cf\u3001\u73af\u5883\u5e72\u6270\u9650\u5236\uff0c\u611f\u77e5\u548c\u8fd0\u52a8\u63a7\u5236\u7684\u5faa\u73af\u9700\u8981\u5b9e\u65f6\u5b8c\u6210\u3002</p> <p>Motivation -&gt; Action (behavior shaping) -&gt; Reward -&gt; Motivation</p> <ul> <li>\u5f3a\u5316\u5b66\u4e60\uff1a\u4ece\u73af\u5883\u4e2d\u8f93\u5165\uff0c\u9884\u6d4b\u73af\u5883\u4ea4\u4e92\uff0c\u53cd\u9988  </li> <li>\u76d1\u7763\u5b66\u4e60\uff1a\u73af\u5883\u8f93\u5165 + \u6807\u7b7e</li> </ul> <p>\u5f3a\u5316\u5b66\u4e60 Sim-to-Real\uff1a\u5728\u4eff\u771f\u73af\u5883\u4e2d\u8bad\u7ec3\uff0c\u8bad\u7ec3\u7ed3\u679c\u5bfc\u5165\u673a\u5668\u4eba</p> <p>\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff1a\u89c6\u89c9\u6a21\u578b\u548c\u8bed\u8a00\u63cf\u8ff0\u5728\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u77e9\u9635\u76f8\u540c\u3002\u5728\u7edf\u4e00\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u7528\u81ea\u7136\u8bed\u8a00\u6307\u4ee4\u63a7\u5236\u3002</p> <p>Counterfactuals\uff1a\u53cd\u4e8b\u5b9e\u63a8\u7406\uff0c\u548c\u51b3\u7b56\u7684\u4e0b\u4e00\u6b65\u76f8\u53cd\u7684\u7ed3\u679c\uff0c\u5e2e\u52a9\u8bc4\u4f30\u51b3\u7b56\u7684\u53cd\u9988</p> <p>\u673a\u5668\u4eba\u7cfb\u7edf\u5206\u4e3a\u4e09\u5927\u90e8\u5206\uff1a\u673a\u68b0\u90e8\u5206\uff0c\u4f20\u611f\u90e8\u5206\uff0c\u63a7\u5236\u90e8\u5206   \u4f20\u611f\uff08\u611f\u77e5\u7cfb\u7edf\uff09 -&gt; \u63a7\u5236 \uff08\u4eba\u673a\u4ea4\u4e92\uff0c\u63a7\u5236\uff09 -&gt; \u673a\u68b0\uff08\u9a71\u52a8\uff0c\u673a\u68b0\u7cfb\u7edf\uff09 -&gt; \u673a\u5668\u4eba-\u73af\u5883\u4ea4\u4e92\u7cfb\u7edf -&gt; \u4f20\u611f</p> <p>\uff08\u65f6\u95f4\u662f\u5355\u5411\u7684\u51fd\u6570\u3002Attention \u662f\u667a\u80fd\u7684\u4e00\u90e8\u5206\u3002\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2001%20intro/#_3","title":"\u5e94\u7528\u4e3e\u4f8b","text":"<p>\u52a8\u7269\u673a\u5668\u4eba\uff1a</p> <p>\u5728\u52a8\u7269\u4e0a\u690d\u5165\u7535\u6781\u89e3\u7801\u808c\u8089\u3001\u795e\u7ecf\u4fe1\u53f7\uff0c\u8fdb\u884c\u4fa6\u67e5\u3001\u52d8\u63a2 \u5c06\u6606\u866b\u55c5\u89c9\u795e\u7ecf\u690d\u5165\u7535\u6781\uff0c\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u5bf9\u795e\u7ecf\u4fe1\u53f7\u8bc6\u522b\u5206\u7c7b  </p> <p>\u87d1\u8782\u673a\u5668\u4eba\uff1a\u5229\u7528\u8179\u90e8\u67d4\u6027\u7535\u6781\u523a\u6fc0\u6606\u866b\u7684\u89e6\u89d2\u6216\u7279\u5b9a\u808c\u8089\uff0c\u63a7\u5236\u6606\u866b\u7684\u8fd0\u52a8 \u5236\u9020\uff1a\u901a\u8fc7\u89c6\u89c9\u5f15\u5bfc\u673a\u68b0\u90e8\u64cd\u4f5c\u5b9a\u5236\u53cc\u6781\u7535\u6781 \u907f\u969c\uff1a\u642d\u5efaWI-FI\u548c\u84dd\u7259\u7f51\u7edc\uff0c\u673a\u8f7d\u5355\u76ee\u6444\u50cf\u5934\u63a2\u6d4b\u3001\u907f\u969c</p> <p>\u8757\u866b\u673a\u5668\u4eba\uff1a\u901a\u8fc7\u5171\u540c\u63a7\u5236\u6536\u7f29\u540e\u817f\u808c\u8089\uff0c\u5b9e\u73b0\u8757\u866b\u673a\u5668\u4eba\u7684\u8df3\u8dc3\u529f\u80fd \u52a8\u6355\u7cfb\u7edf\u6d4b\u91cf\u8df3\u8dc3\u7684\u53c2\u6570</p> <p>\u81ea\u4e3b\u79fb\u52a8\u673a\u5668\u4eba\uff08AMR\uff09\uff1a</p> <p>\u5236\u9020\u4e0e\u7269\u6d41\uff1a\u9002\u5e94\u975e\u7ed3\u6784\u5316\u73af\u5883</p> <p>Avatar\u7cfb\u7edf\uff1a\u6355\u83b7\u4eba\u7684\u52a8\u4f5c\u4f20\u9012\u7ed9\u8fdc\u7aef\u673a\u5668\u4eba\uff0c\u611f\u77e5\u8fdc\u7aef\u7cfb\u7edf\u7684\u4fe1\u606f</p> <p>\u56db\u8db3\u673a\u5668\u4eba\u8eaf\u5e72\uff1a\u521a\u6027\u5e26\u6709\u65cb\u8f6c\u5173\u8282\uff0c\u5e26\u6709\u5f39\u7c27\uff0c\u67d4\u6027\u6750\u6599   \u817f\uff1a\u819d\u5f2f\u66f2\u5411\u524d\u8fdb\u65b9\u5411\uff0c\u722c\u5761\uff1b\u8098\u5f2f\u66f2\u5411\u524d\u8fdb\u53cd\u65b9\u5411\uff0c\u7a33\u5b9a\u6027\u5f3a \u590d\u6742\u79bb\u6563\u5730\u5f62\u4e0a\u7684\u9ad8\u901f\u63a7\u5236\u548c\u5bfc\u822a\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u5468\u671f\u77ed \u6df7\u5408\u795e\u7ecf\u7f51\u7edc</p> <p>\u86c7\u5f62\u673a\u5668\u4eba\uff1a</p> <p>\u591a\u8282\u4e32\u8054\u6216\u8fde\u7eed\u4f53\uff0c\u5197\u4f59\u81ea\u7531\u5ea6\u9ad8</p> <p>\u6c34\u4e0b\u673a\u5668\u4eba\uff1a</p> <p>ROV\uff0cAUV\uff0c\u4eff\u751f</p> <p>\u98de\u884c\u673a\u5668\u4eba\uff1a</p> <p>\u6251\u7ffc\uff0c\u56fa\u5b9a\u7ffc\uff0c\u591a\u65cb\u7ffc \u9ad8\u5149\u8c31\u4f20\u611f\u5668\uff0c\u5206\u6790\u571f\u5730\u6210\u5206 \u4f20\u611f\u5668\u4f53\u79ef\u5c0f\uff0c\u98de\u884c\u59ff\u6001\u63a7\u5236  </p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2002%20sensors/","title":"\u4f20\u611f\u5668\u6a21\u7ec4","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1037 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2002%20sensors/#_1","title":"\u611f\u77e5","text":"<p>\u9002\u5e94\u53d8\u5316\u7684\u73af\u5883\u3001\u66f4\u7cbe\u786e\u7684\u5b9a\u4f4d\u548c\u63a7\u5236\u3001\u9ad8\u667a\u80fd\uff0c\u9700\u8981\u66f4\u597d\u7684\u611f\u77e5 \u611f\u77e5\u6709\u8303\u56f4\uff0c\u6709\u7cbe\u5ea6\uff0c\u63cf\u8ff0\u5bf9\u8c61\u7684\u5c5e\u6027\u4e0d\u4e00\u5b9a\u6b63\u786e\uff0c\u5f71\u54cd\u5224\u65ad\u3002\u9700\u8981\u5728\u5df2\u6709\u77e5\u8bc6\u4e0b\u8fc1\u79fb\u5230\u65b0\u73af\u5883</p> <p>\u73b0\u5b9e\u4e16\u754c -&gt; \u611f\u77e5 -&gt; \u9884\u5904\u7406 \uff08\u4f20\u611f\u5668\uff0c\u7279\u5f81\u63d0\u53d6\uff09 -&gt; \u5b9a\u4f4d \uff08\u77e5\u8bc6\u5e93\uff09 -&gt; \u89c4\u5212 \uff08\u9ad8\u5c42\u7ea7\u4efb\u52a1\u548c\u5916\u90e8\u547d\u4ee4\uff09-&gt; \u8fd0\u52a8</p> <p>e.g. \u6d77\u5e95\u673a\u5668\u4eba Mesobot\uff1a \u58f0\u5b66\u8ddf\u8e2a\u4fe1\u6807\uff0c\u7acb\u4f53\u6444\u50cf\u5934 \u2026\u2026 \u611f\u77e5\u3001\u9ad8\u7ea7\u89c4\u5212\u3001\u6a21\u5757\u5316\u786c\u4ef6 \u8d85\u58f0\u5185\u7aa5\u955c\uff1a\u7535\u78c1\u4f20\u611f\u5668\u8fdb\u884c\u6d3b\u4f53\u5bfc\u822a\uff0c\u914d\u5408\u5916\u90e8\u7535\u78c1\u573a\u53d1\u751f\u5668\u548c CT \u5b9e\u73b0\u9488\u4f53\u63a7\u5236 \u56db\u8db3\u673a\u5668\u4eba\uff1a\u6444\u50cf\u5934\uff0c\u52a0\u901f\u5ea6\u4f20\u611f\u5668\uff0c\u6fc0\u5149\u96f7\u8fbe\uff0c\u6df1\u5ea6\u76f8\u673a\uff0c\u529b\u77e9\u4f20\u611f\u5668\u2026\u2026</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2002%20sensors/#_2","title":"\u4f20\u611f\u5668\u4ecb\u7ecd","text":"<p>\u5206\u7c7b\uff1a \u6309\u6d4b\u91cf\u5185\u5bb9\uff1a\u672c\u4f53 / \u5916\u90e8 \u6309\u80fd\u91cf\u6765\u6e90\uff1a\u4e3b\u52a8 / \u88ab\u52a8</p> <p>\u6027\u80fd\u6307\u6807\uff1a</p> <ul> <li>\u7a33\u5b9a\u6027</li> <li>\u54cd\u5e94\u65f6\u95f4\uff08\u4ece\u88ab\u6d4b\u503c\u53d1\u751f\u7ed9\u5b9a\u7a81\u53d8\u5230\u8f93\u51fa\u7a33\u5b9a\u6700\u7ec8\u503c\u7684\u65f6\u95f4\uff09</li> <li>\u7ebf\u6027\u5ea6\uff08\u5b9e\u9645\u6570\u636e\u5c3d\u53ef\u80fd\u7ebf\u6027\uff09</li> <li>\u7075\u654f\u5ea6\uff08\u7a33\u6001\u4e0b\u8f93\u51fa\u53d8\u5316\u503c\u548c\u8f93\u5165\u53d8\u5316\u503c\u4e4b\u6bd4\uff0c\u53cd\u5e94\u66f2\u7ebf\u7684\u659c\u7387\uff09</li> <li>\u5206\u8fa8\u7387\uff08\u548c\u4f4d\u957f\u6709\u5173\uff0c\u4f4d\u957f\u8d8a\u957f\u5206\u8fa8\u7387\u8d8a\u5927\uff09</li> <li>\u5e26\u5bbd\u6216\u9891\u7387\uff08\u80fd\u6d4b\u91cf\u591a\u5feb\u7684\u4fe1\u53f7\uff0c\u91c7\u6837\u4fe1\u53f7\u4e00\u822c\u7528\u4e24\u500d\u65f6\u957f\uff09</li> <li>\u6b7b\u533a\uff08\u8f93\u5165\u91cf\u53d8\u5316\u8f93\u51fa\u4e0d\u53d8\u7684\u533a\u95f4\uff09</li> <li>\u8bef\u5dee</li> <li>\u51c6\u786e\u5ea6\uff0c\u7cbe\u786e\u5ea6</li> </ul> <p>e.g. \u81ea\u4e3b\u79fb\u52a8\u673a\u5668\u4eba\u7684\u4f20\u611f\u5668 \u7535\u6781\u7f16\u7801\u5668\uff1a\u7535\u673a\u8f74\u7684\u8f6c\u52a8\u89d2\u5ea6 \u8d85\u58f0\u8ddd\u79bb\u4f20\u611f\u5668\uff0c\u8d85\u58f0\u6ce2\u6709\u53cd\u5c04\u900f\u5c04\u6298\u5c04\u7684\u6027\u8d28\uff0c\u901f\u5ea6\u548c\u666e\u901a\u58f0\u6ce2\u76f8\u540c</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2002%20sensors/#_3","title":"\u673a\u5668\u4eba\u89c6\u89c9\u7cfb\u7edf","text":"<p>\u673a\u5668\u4eba\u89c6\u89c9\u7cfb\u7edf\u4e3b\u8981\u5305\u62ec\u5149\u6e90\u3001\u955c\u5934\u3001\u76f8\u673a\u3001\u4fe1\u606f\u5904\u7406\u5668\u3001\u89c6\u89c9\u7b97\u6cd5\u8f6f\u4ef6\u7b49\u90e8\u5206\u3002</p> <p>\u5149\u6e90\uff1a</p> <p>\u4f7f\u7269\u4f53\u7684\u91cd\u8981\u7279\u5f81\u53ef\u89c1\uff0c\u540c\u65f6\u6291\u5236\u7269\u4f53\u4e0d\u9700\u8981\u7684\u7279\u5f81\u3002</p> <p>\u89c6\u89c9\u4f20\u611f\u5668\uff1a</p> <p>\u88ab\u52a8\uff08\u76f8\u673a\uff09\uff0c\u4e3b\u52a8\uff08\u626b\u63cf\u4eea\uff09 Cons\uff1a\u88ab\u52a8\u76f8\u673a\u5728\u5916\u90e8\u5149\u5f31\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u6210\u50cf\uff0c\u65e0\u6cd5\u83b7\u5f97\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f -&gt; \u4e00\u5bf9\u88ab\u52a8\u89c6\u89c9\u4f20\u611f\u5668\uff0c\u80fd\u6784\u6210\u4e00\u5957\u53cc\u76ee\u76f8\u673a\uff0c\u83b7\u5f97\u6df1\u5ea6</p> <p>\u955c\u5934\uff1a</p> <p>\u7126\u8ddd\u7684\u5927\u5c0f\u51b3\u5b9a\u89c6\u89d2\u7684\u5927\u5c0f\uff0c\u5149\u5708\u63a7\u5236\u8fdb\u5149\u7684\u591a\u5c11 \u666f\u6df1\uff1a\u88ab\u6444\u7269\u4f53\u805a\u7126\u6e05\u695a\u540e\uff0c\u5728\u7269\u4f53\u524d\u540e\u4e00\u5b9a\u8ddd\u79bb\u5185\uff0c\u5176\u5f71\u50cf\u4ecd\u7136\u6e05\u6670\u7684\u8303\u56f4 \u7126\u8ddd\u8d8a\u77ed\u3001\u5149\u5708\u8d8a\u5c0f\uff0c\u666f\u6df1\u8d8a\u5927</p> <p>\u955c\u5934\u5206\u7c7b\uff1a</p> <ul> <li>\u6807\u51c6\u955c\u5934\uff1a\u89c6\u89d2 50 \u5ea6\uff0c\u7126\u8ddd 50mm \u5de6\u53f3</li> <li>\u5e7f\u89d2\u955c\u5934\uff1a\u89c6\u89d2\u5927\uff0c\u7578\u53d8\u5927</li> <li>\u9c7c\u773c\u76f8\u673a\uff1a\u89c6\u89d2 180 \u5ea6\uff0c\u6781\u7aef\u7684\u8d85\u5e7f\u89d2\u955c\u5934\uff0c\u7528\u4e8e\u5929\u6587\u89c2\u6d4b</li> <li>\u957f\u7126\u955c\u5934\uff0c\u89c6\u89d2\u5c0f\uff0c\u666f\u6df1\u5c0f\uff0c\u89c6\u89d2\u5c0f\uff0c\u7578\u53d8\u5c0f\uff0c\u9002\u5b9c\u4eba\u50cf\u3001\u8fdc\u8ddd\u79bb\u62cd\u6444</li> </ul> <p>\u56fe\u50cf\u4f20\u611f\u5668\uff1a</p> <ul> <li>CCD \u76f8\u673a\uff1a\u7535\u8377\u4e00\u4f4d\u4e00\u4f4d\u8f6c\u79fb\u8bfb\u53d6\uff0c\u901f\u5ea6\u6162</li> <li>CMOS \u76f8\u673a\uff1a\u5149\u7535\u8f6c\u6362\u540e\u76f4\u63a5\u4ea7\u751f\u7535\u538b\u4fe1\u53f7</li> </ul> <p>\u5f02\u5e38\u68c0\u6d4b\u548c\u56fe\u50cf\u5206\u6790\uff1a\u5212\u75d5\u68c0\u6d4b\uff0c\u571f\u58e4\u5206\u6790... \u7269\u4f53\u68c0\u6d4b\u548c\u8bc6\u522b\uff1a\u8868\u8ba1\u8bfb\u51fa\uff0c\u6587\u5b57\u8bc6\u522b... \u7269\u4f53\u5206\u5272\u548c\u8bc6\u522b\uff1a\u75c5\u7076\u68c0\u6d4b\uff0c\u4eba\u8138\u8bc6\u522b... \u4eba\u673a\u4ea4\u4e92\uff1a\u624b\u52bf\u5206\u6790\uff0c\u75b2\u52b3\u8bc6\u522b... \u626b\u63cf\u6d4b\u7ed8\uff1a\u5de5\u4ef6\u5efa\u6a21\uff0c\u5730\u5f62\u6d4b\u7ed8... \u65e0\u4eba\u9a7e\u9a76\uff1a\u89c6\u89c9\u5bfc\u822a\uff0c\u89c6\u89c9\u5b9a\u4f4d... \u73af\u5883\u7406\u89e3\uff1a\u8f66\u8f86\u68c0\u6d4b\uff0c\u573a\u666f\u89e3\u6790... \u589e\u5f3a/\u865a\u62df\u73b0\u5b9e\uff1a\u865a\u62df\u6e32\u67d3\uff0c\u5934/\u624b\u8ddf\u8e2a...</p> <p>\u89c6\u89c9\u63d0\u4f9b\u4e86\u4e00\u79cd\u51e0\u4f55\u6d4b\u91cf\u7684\u5de5\u5177\uff0c\u4e5f\u63d0\u4f9b\u4e00\u79cd\u8bed\u4e49\u8ba4\u77e5\u7684\u5de5\u5177 \u673a\u5668\u4eba\u89c6\u89c9\uff1a\u4e09\u4f4d\u8bed\u4e49\u6ee1\u8db3\u4f5c\u4e1a\u9700\u6c42</p> <p>\u7070\u5ea6\u4fe1\u606f\u53d7\u5230\u592a\u591a\u5916\u754c\u56e0\u7d20\u5e72\u6270\uff0c\u51e0\u4f55\u8bed\u4e49\u7a7a\u95f4\u5927</p> <p>\u67d4\u6027\u6750\u6599\uff1a\u8d4b\u4e88\u4f20\u7edf\u786c\u8d28\u8f68\u8ff9\u7535\u8def\u53ef\u62c9\u4f38\u6027 \u901a\u8fc7\u5173\u952e\u5143\u4ef6\u4e4b\u95f4\u7684\u5206\u5e03\u8bbe\u8ba1\u4ee5\u53ca\u86c7\u5f62\u4e92\u8054\u5355\u5143\u7684\u5f15\u5165\uff0c\u6784\u67b6\u5c9b\u6865\u7ed3\u6784</p> <p>\u67d4\u6027\u7535\u5b50\u76ae\u80a4\u7684\u5206\u7c7b\uff1a\u529b\u5b66\u7ed3\u6784\u3001\u6750\u6599</p> <p>\u5149\u5b66\u5f0f\u4f20\u611f\uff1a\u901a\u8fc7\u5149\u4fe1\u53f7\uff08\u5f3a\u5ea6\uff0c\u6ce2\u957f\uff0c\u504f\u632f\u65b9\u5411\u7b49\uff09\u611f\u77e5</p> <p>\u6469\u64e6\u7535\u5f0f\u4f20\u611f\uff1a\u57fa\u4e8e\u6469\u64e6\u8d77\u7535\u6548\u5e94\u548c\u9759\u7535\u611f\u5e94\uff0c\u6750\u6599\u63a5\u89e6\u5206\u79bb\u4f7f\u4ea7\u751f\u77ac\u65f6\u7535\u6d41\u3002\u9002\u5408\u52a8\u6001\u89e6\u89c9\uff08\u5982\u624b\u52bf\u8bc6\u522b\uff09</p> <p>\u78c1\u5f39\u6027\u4f20\u611f\uff1a\u78c1\u6027\u6750\u6599\u5728\u5916\u529b\u4e0b\u78c1\u5bfc\u7387\u53d8\u5316\uff0c\u901a\u8fc7\u7ebf\u5708\u68c0\u6d4b\u78c1\u573a\u53d8\u5316\u3002\u6297\u6076\u52a3\u73af\u5883\uff0c\u4f46\u9700\u8981\u5916\u90e8\u78c1\u573a\u6fc0\u52b1\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/","title":"\u6570\u5b57\u56fe\u50cf\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 4666 \u4e2a\u5b57\u00a0\u00a017 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u673a\u5668\u89c6\u89c9\uff1a\u5229\u7528\u4f20\u611f\u5668\uff08\u6444\u50cf\u5934\uff0c\u6fc0\u5149\u96f7\u8fbe\uff09 + \u7b97\u6cd5\uff08\u56fe\u50cf\u5904\u7406\uff0c\u6df1\u5ea6\u5b66\u4e60\uff09 \u6838\u5fc3\u529f\u80fd\uff1a\u8bc6\u522b\uff0c\u5b9a\u4f4d\uff0c\u8ddf\u8e2a\uff0c\u7406\u89e3</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u6570\u5b57\u56fe\u50cf\u6027\u8d28\uff1a</p> <ul> <li>\u5149\u5ea6\u503c\uff08\u4eae\u5ea6\u6216\u5f69\u8272\uff09\uff0c\u6709\u4e0d\u540c\u989c\u8272\u7a7a\u95f4</li> <li>\u4f4d\u7f6e\u6309\u89c4\u5219\u65b9\u5f0f\u6392\u5217</li> <li>\u5750\u6807\u503c\u9690\u542b</li> </ul> <p>\u6570\u5b57\u56fe\u50cf\u7684\u77e9\u9635\u8868\u793a\uff1a\\(N\\times M\\)\u7684\u56fe\u50cf\u7528\\(3\\times N\\times M\\)\u7684\u77e9\u9635\u8868\u793a\uff083 \u8868\u793a RGB\uff09</p> <p>\u7a7a\u95f4\u5206\u8fa8\u7387\uff1a\u6570\u5b57\u56fe\u50cf\u4e2d\u53ef\u5206\u8fa8\u7684\u7ec6\u8282\u7a0b\u5ea6\uff0c\u901a\u5e38\u7528\u5355\u4f4d\u957f\u5ea6\u5185\u7684\u50cf\u7d20\u6570\u91cf\uff08\u5982\u6bcf\u82f1\u5bf8\u50cf\u7d20\u6570 PPI\uff09\u6765\u8861\u91cf\uff0c\u6570\u503c\u8d8a\u9ad8\uff0c\u56fe\u50cf\u8d8a\u6e05\u6670\u7ec6\u817b\u3002</p> <p>\u7070\u5ea6\u7ea7\u5206\u8fa8\u7387\uff1a\u6570\u5b57\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u70b9\u80fd\u591f\u8868\u793a\u7684\u4eae\u5ea6\u5c42\u6b21\u591a\u5c11\uff0c\u7ea7\u6570\u8d8a\u9ad8\uff0c\u56fe\u50cf\u7684\u660e\u6697\u8fc7\u6e21\u8d8a\u5e73\u6ed1\u81ea\u7136\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_2","title":"\u51e0\u4f55\u53d8\u6362\u548c\u7070\u5ea6\u53d8\u6362","text":"<p>\u4eff\u5c04\u53d8\u5316\uff1a\u7ecf\u8fc7\u65cb\u8f6c\u3001\u5e73\u79fb\u3001\u9519\u5207\u7b49\u53d8\u6362\u540e\uff0c\u76f8\u90bb\u50cf\u7d20\u672c\u8eab\u7684\u6027\u8d28\u4e0d\u53d8</p> <p>\u65cb\u8f6c\uff1a\u5de6\u4e58\u65cb\u8f6c\u77e9\u9635</p> <p>\u7070\u5ea6\u53d8\u6362\u662f\u6307\u6839\u636e\u67d0\u79cd\u76ee\u6807\u6761\u4ef6\u6309\u4e00\u5b9a\u53d8\u6362\u5173\u7cfb\u9010\u70b9\u6539\u53d8\u539f\u56fe\u50cf\u4e2d\u6bcf\u4e00\u4e2a\u9009\u544a\u8bc9\u7070\u5ea6\u503c\u7684\u65b9\u6cd5\u3002 \u8bbe\u539f\u7070\u5ea6\u503c\\(D=f(x,y)\\)\uff0c\u5904\u7406\u540e\u7070\u5ea6\u503c\u4e3a\\(D'=g(x,y)\\)\uff0c\u5219\u7070\u5ea6\u589e\u5f3a\u8868\u793a\u4e3a\uff1a</p> \\[g(x,y)=T[f(x,y)]\\quad \\text{or}\\quad D'=T(D)\\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_3","title":"\u4e8c\u503c\u5316\u7b97\u6cd5\u2014\u2014\u975e\u96f6\u5143\u7d20\u53d6\u4e00\u6cd5","text":"<p>\uff08\u4f20\u7edf\u65b9\u6cd5\uff09</p> <p>\u5bf9\u4e8e\u7070\u5ea6\u56fe\u50cf f\uff0c\u82e5\u67d0\u50cf\u7d20\u7070\u5ea6\u503c\u4e3a 0\uff0c\u5219\u4e0d\u53d8\uff1b\u82e5\u4e0d\u4e3a 0\uff0c\u5219\u5168\u90e8\u53d8\u4e3a 255 \u9608\u503c T \u53ef\u81ea\u884c\u8bbe\u7f6e</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_4","title":"\u7070\u5ea6\u7ebf\u6027\u53d8\u6362","text":"<p>\u5c06\u56fe\u50cf\u4e2d\u6240\u6709\u7684\u70b9\u7684\u7070\u5ea6\u6309\u7167\u7ebf\u6027\u7070\u5ea6\u53d8\u6362\u51fd\u6570\u8fdb\u884c\u53d8\u6362 \u4ee4\u539f\u7070\u5ea6\u8303\u56f4\u4e3a\\([z_1,z_2]\\),\u7ebf\u6027\u53d8\u6362\u540e\u4e3a\\([z_1',z_2']\\)\uff0c\u5219</p> \\[g(x,y)=z_1'+\\frac{z_2'-z_1'}{z_2-z_1}(f(x,y)-z_1)\\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_5","title":"\u7a97\u53e3\u7070\u5ea6\u53d8\u6362","text":"<p>\u9650\u5b9a\u7a97\u53e3\u4e3a\\([L,U]\\)\uff0c\u51fd\u6570\u4e3a\uff1a</p> \\[ f(x)= \\begin{cases} 0, x&lt;L \\\\ x,L\\le x\\le U \\\\ 255, x&gt;U \\end{cases} \\] <p>\u5206\u6bb5\u7070\u5ea6\u53d8\u6362\u540c\u7406\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_6","title":"\u7070\u5ea6\u76f4\u65b9\u56fe","text":"<p>\u6a2a\u5750\u6807\u662f\u7070\u5ea6\uff0c\u7528 r \u8868\u793a\uff1b\u7eb5\u5750\u6807\u662f\u7070\u5ea6\u503c\u50cf\u7d20\u7684\u4e2a\u6570\uff0c\u7528 H \u8868\u793a\uff08\u4e5f\u53ef\u4ee5\u7528\u56fe\u50cf\u7070\u5ea6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(P_r(r)\\)\u8868\u793a\uff0c\u5b83\u7b49\u4e8e\u5177\u6709 r \u7070\u5ea6\u7ea7\u7684\u50cf\u7d20\u4e2a\u6570\u4e0e\u56fe\u50cf\u603b\u50cf\u7d20\u4e2a\u6570\u7684\u6bd4\u4f8b\uff09 \u6839\u636e\u7070\u5ea6\u76f4\u65b9\u56fe\u8bbe\u7f6e\u9608\u503c</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_7","title":"\u56fe\u50cf\u5e73\u6ed1\u5904\u7406\u548c\u8fb9\u7f18\u68c0\u6d4b","text":"<p>\u6d88\u9664\u56fe\u50cf\u566a\u58f0\u7684\u5de5\u4f5c\u79f0\u4e4b\u4e3a\u56fe\u50cf\u5e73\u6ed1\u6216\u6ee4\u6ce2\u3002 \u5e73\u6ed1\u7684\u76ee\u7684\uff1a\u6539\u5584\u56fe\u50cf\u8d28\u91cf\u548c\u62bd\u51fa\u5bf9\u8c61\u7279\u5f81\u3002</p> <p>\u5e38\u89c1\u7684\u5e73\u6ed1\u6ee4\u6ce2\u7b97\u6cd5\u6709\uff1a\u7ebf\u6027\u5e73\u6ed1\u3001\u975e\u7ebf\u6027\u5e73\u6ed1\u3001\u81ea\u9002\u5e94\u5e73\u6ed1</p> <ul> <li>\u7ebf\u6027\u5e73\u6ed1\uff1a\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u70b9\u7684\u7070\u5ea6\u503c\u7528\u5b83\u7684\u90bb\u57df\u503c\u6765\u4ee3\u66ff\uff0c\u5176\u90bb\u57df\u5927\u5c0f\u4e3a\uff1a\\(N\\times N\\),\\(N\\)\u4e00\u822c\u53d6\u5947\u6570</li> <li>\u975e\u7ebf\u6027\u5e73\u6ed1\uff1a\u4e0d\u5bf9\u6240\u6709\u50cf\u7d20\u90fd\u7528\u5b83\u7684\u90bb\u57df\u5e73\u5747\u503c\u6765\u4ee3\u66ff\uff0c\u800c\u662f\u53d6\u4e00\u4e2a\u9608\u503c\uff0c\u5f53\u50cf\u7d20\u7070\u5ea6\u503c\u4e0e\u5176\u90bb\u57df\u5e73\u5747\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u5927\u4e8e\u5df2\u77e5\u503c\u65f6\u624d\u4ee5\u5747\u503c\u4ee3\u66ff\uff1b\u5f53\u50cf\u7d20\u7070\u5ea6\u503c\u4e0e\u5176\u90bb\u57df\u5e73\u5747\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u4e0d\u5927\u4e8e\u9608\u503c\u65f6\u53d6\u5176\u672c\u8eab\u7684\u7070\u5ea6\u503c</li> <li>\u81ea\u9002\u5e94\u5e73\u6ed1\uff1a\u81ea\u9002\u5e94\u5e73\u6ed1\u6cd5\u662f\u4ee5\u5c3d\u91cf\u4e0d\u6a21\u7cca\u8fb9\u7f18\u8f6e\u5ed3\u4e3a\u76ee\u6807</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_8","title":"\u4e8c\u503c\u56fe\u50cf\u9ed1\u767d\u70b9\u566a\u58f0\u6ee4\u6ce2","text":"<p>\u6d88\u53bb\u4e8c\u503c\u56fe\u50cf\\(f(i,j)\\)\u4e0a\u7684\u9ed1\u5f69\u7684\u566a\u58f0\uff0c\u5f53\u50cf\\(f(i,j)\\)\u5468\u56f4\u7684 8 \u4e2a\u50cf\u7d20\u7684\u5e73\u5747\u503c\u4e3a a \u65f6\uff0c\u82e5\\(|f(i,j)-a|\\)\u7684\u503c\u5728\u9608\u503c\uff08127.5\uff09\u4ee5\u4e0a\uff0c\u5219\u5bf9\\(f(i,j)\\)\u7684\u9ed1\u767d\u8fdb\u884c\u7ffb\u8f6c\uff1b\u5426\u5219\u4e0d\u53d8\u3002</p> <p>\u5bf9\u56fe\u50cf\u50cf\u7d20\u7684\u5904\u7406\u65b9\u5f0f\u4e0a\u53ef\u4ee5\u5212\u5206\u4e3a\u70b9\u5904\u7406\u548c\u533a\u57df\u5904\u7406\u3002</p> <ul> <li>\u70b9\u5904\u7406\uff1a\u8f93\u51fa\u50cf\u7d20\u503c\u4ec5\u53d6\u51b3\u4e8e\u8f93\u5165\u50cf\u7d20\u503c\u7684\u56fe\u50cf\u5904\u7406\u65b9\u6cd5</li> <li>\u533a\u57df\u5904\u7406\uff08\u5377\u79ef\u6838\uff09\uff1a\u8f93\u51fa\u50cf\u7d20\u503c\u4e0e\u8f93\u5165\u50cf\u7d20\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u5185\u7684\u76f8\u90bb\u50cf\u7d20\u503c\u6709\u5173</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_9","title":"\u9886\u57df\u5e73\u5747\u6cd5","text":"<p>1.\\(3 \\times 3\\)\u5747\u503c\u6ee4\u6ce2\uff1a\u7528\u5f53\u524d\u50cf\u7d20\u53ca\u5176\u5468\u56f4\\(3 \\times 3\\)\u90bb\u57df\u5185\u6240\u6709\u50cf\u7d20\u7684\u5e73\u5747\u503c\u66ff\u4ee3\u5f53\u524d\u50cf\u7d20\uff0c\u5b9e\u73b0\u5e73\u6ed1\u964d\u566a\u3002 2. \u8d85\u9650\u90bb\u57df\u5e73\u5747\u6cd5\uff1a\u53ea\u6709\u5f53\u90bb\u57df\u5185\u67d0\u4e9b\u50cf\u7d20\u4e0e\u4e2d\u5fc3\u50cf\u7d20\u5dee\u5f02\u8d85\u8fc7\u8bbe\u5b9a\u9608\u503c\u65f6\uff0c\u624d\u5c06\u8fd9\u4e9b\u50cf\u7d20\u66ff\u6362\u4e3a\u90bb\u57df\u5e73\u5747\u503c\uff0c\u4ece\u800c\u51cf\u5c11\u5f02\u5e38\u503c\u5f71\u54cd\u3002 3.\\(N \\times N\\)\u5747\u503c\u6ee4\u6ce2\u5668\uff1a\u4e0e\\(3 \\times 3\\)\u5747\u503c\u6ee4\u6ce2\u7c7b\u4f3c\uff0c\u4f46\u7a97\u53e3\u5927\u5c0f\u53ef\u6269\u5c55\u4e3a\u4efb\u610f\\(N \\times N\\)\uff0c\u901a\u8fc7\u90bb\u57df\u5e73\u5747\u5b9e\u73b0\u66f4\u5f3a\u5e73\u6ed1\u3002 4. \u9009\u62e9\u5f0f\u63a9\u6a21\u5e73\u6ed1\uff1a\u901a\u8fc7\u8bbe\u5b9a\u89c4\u5219\uff08\u5982\u4e0e\u4e2d\u5fc3\u50cf\u7d20\u7684\u7070\u5ea6\u5dee\u9608\u503c\uff09\u6765\u7b5b\u9009\u90bb\u57df\u50cf\u7d20\uff0c\u4ec5\u5bf9\u7b26\u5408\u6761\u4ef6\u7684\u50cf\u7d20\u8fdb\u884c\u52a0\u6743\u6216\u5e73\u5747\uff0c\u4ece\u800c\u5728\u53bb\u9664\u566a\u58f0\u7684\u540c\u65f6\u5c3d\u53ef\u80fd\u4fdd\u7559\u56fe\u50cf\u8fb9\u7f18\u4e0e\u7ec6\u8282\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_10","title":"\u4e2d\u503c\u6ee4\u6ce2","text":"<p>-\\(N \\times N\\)\u4e2d\u503c\u6ee4\u6ce2\uff1a\u7a97\u53e3\u5185\u5404\u70b9\u7684\u4e2d\u503c</p> <ul> <li>\u5341\u5b57\u578b\u4e2d\u503c\u6ee4\u6ce2\uff1a\u5341\u5b57\u578b\u5c4f\u853d\u7a97\u53e3 -\\(N \\times N\\)\u6700\u5927\u503c\u6ee4\u6ce2\uff1a\u7a97\u53e3\u5185\u5404\u70b9\u7684\u6700\u5927\u503c</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#roberts","title":"Roberts \u8fb9\u7f18\u68c0\u6d4b","text":"<p>Roberts \u7b97\u5b50\u53c8\u79f0\u4e3a\u4ea4\u53c9\u5fae\u5206\u7b97\u6cd5\uff0c\u57fa\u4e8e\u4ea4\u53c9\u5dee\u5206\u7684\u68af\u5ea6\u7b97\u6cd5\uff0c\u901a\u8fc7\u5c40\u90e8\u5dee\u5206\u8ba1\u7b97\u68c0\u6d4b\u8fb9\u7f18\u7ebf\u6761\u3002 Roberts \u7b97\u5b50\u7684\u6a21\u677f\u5206\u4e3a\u6c34\u5e73\u65b9\u5411\\(dx\\)\u548c\u5782\u76f4\u65b9\u5411\\(dy\\)\uff0c\u50cf\u7d20\u70b9\u5904 x \u548c y \u65b9\u5411\u4e0a\u7684\u68af\u5ea6\\(Gx\\)\u3001\\(Gy\\)\u4e3a\uff1a</p> \\[ dx=\\begin{bmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{bmatrix},\\quad dy=\\begin{bmatrix} 0 &amp; -1 \\\\ 1 &amp; 0 \\end{bmatrix} \\] \\[G_x=\\frac{\\partial f}{\\partial x},\\quad G_y=\\frac{\\partial f}{\\partial y}\\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#prewitt","title":"Prewitt \u8fb9\u7f18\u68c0\u6d4b\u7b97\u5b50","text":"<p>Prewitt \u7b97\u5b50\u91c7\u7528\\(3 \\times 3\\)\u6a21\u677f\u5bf9\u533a\u57df\u5185\u7684\u50cf\u7d20\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u800c Robert \u7b97\u5b50\u7684\u6a21\u677f\u4e3a\\(2 \\times 2\\)\uff0c \u6545 Prewitt \u7b97\u5b50\u7684\u8fb9\u7f18\u68c0\u6d4b\u7ed3\u679c\u5728\u6c34\u5e73\u65b9\u5411\u548c\u5782\u76f4\u65b9\u5411\u5747\u6bd4 Robert \u7b97\u5b50\u66f4\u52a0\u660e\u663e\u3002</p> \\[ dx=\\begin{bmatrix} -1 &amp; 0 &amp; 1 \\\\ -1 &amp; 0 &amp; 1 \\\\ -1 &amp; 0 &amp; 1 \\end{bmatrix},\\quad dy=\\begin{bmatrix} -1 &amp; -1 &amp; -1 \\\\ 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 1 \\end{bmatrix} \\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#sobel","title":"Sobel \u8fb9\u7f18\u68c0\u6d4b\u7b97\u5b50","text":"<p>Sobel \u7b97\u5b50\u5728 Prewitt \u7b97\u5b50\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u6743\u91cd\u7684\u6982\u5ff5\uff0c\u8ba4\u4e3a\u76f8\u90bb\u70b9\u7684\u8ddd\u79bb\u8fdc\u8fd1\u5bf9\u5f53\u524d\u50cf\u7d20\u70b9\u7684\u5f71\u54cd\u662f\u4e0d\u540c\u7684\uff0c \u8ddd\u79bb\u8d8a\u8fd1\u7684\u50cf\u7d20\u70b9\u5bf9\u5e94\u5f53\u524d\u50cf\u7d20\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u4ece\u800c\u5b9e\u73b0\u56fe\u50cf\u9510\u5316\u5e76\u7a81\u51fa\u8fb9\u7f18\u8f6e\u5ed3\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#laplacian","title":"\u62c9\u666e\u62c9\u65af(Laplacian)\u7b97\u5b50","text":"<p>\u62c9\u666e\u62c9\u65af\uff08 Laplacian \uff09\u7b97\u5b50\u662f n \u7ef4\u6b27\u51e0\u91cc\u5fb7\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u4e8c\u9636\u5fae\u5206\u7b97\u5b50\uff0c\u5e38\u7528\u4e8e\u56fe\u50cf\u589e\u5f3a\u9886\u57df\u548c\u8fb9\u7f18\u63d0\u53d6\u3002 \u91c7\u7528\u7070\u5ea6\u5dee\u5206\uff0c\u8ba1\u7b97\u90bb\u57df\u5185\u7684\u50cf\u7d20\u3002\u4e2d\u5fc3\u51cf\u53bb\u9886\u57df\u5e73\u5747\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_11","title":"\u7279\u5f81\u63d0\u53d6\u4e0e\u5339\u914d","text":"<p>\u5173\u952e\u70b9\u63d0\u53d6 K \u4e2a\uff08\u8fdc\u5c0f\u4e8e\u50cf\u7d20\u6570 N\uff09\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u7684\u7279\u5f81\u7528 K \u7ef4\u5411\u91cf\u8868\u793a \u7528\\(K\\times K\\)\u7684\u77e9\u9635\u8868\u793a\u56fe\u50cf\u7279\u5f81 \u5bf9\u73af\u5883\u53d8\u5316\u3001\u906e\u6321\u548c\u5c11\u91cf\u4f4d\u59ff\u53d8\u5316\u7684\u9c81\u68d2\u6027\u589e\u5f3a</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#harris-harris-corner-response","title":"Harris \u89d2\u70b9\u54cd\u5e94\uff08Harris Corner Response\uff09","text":"<p>\u8868\u793a\u56fe\u50cf\u4e2d\u67d0\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u662f\u89d2\u70b9\u3001\u8fb9\u7f18\u8fd8\u662f\u5e73\u5766\u533a\u57df\u7684\u201c\u54cd\u5e94\u503c\u201d\uff08response value\uff09\uff0c\u7531\u56fe\u50cf\u68af\u5ea6\u7684\u4e8c\u9636\u77e9\u9635\uff08\u7ed3\u6784\u5f20\u91cf\uff09\u51b3\u5b9a \u5f53\u7a97\u53e3\u6cbf\u4efb\u610f\u65b9\u5411\u79fb\u52a8\u65f6\uff0c\u56fe\u50cf\u5f3a\u5ea6\u53d8\u5316\u90fd\u8f83\u5927\uff0c\u5219\u4e3a\u89d2\u70b9\u3002</p> <p>\u5bf9\u6bcf\u4e2a\u50cf\u7d20\uff0c\u8ba1\u7b97\u68af\u5ea6\uff1a</p> \\[ I_u = \\frac{\\partial I}{\\partial u}, \\quad I_v = \\frac{\\partial I}{\\partial v} \\] <p>\u6784\u9020\u4e8c\u9636\u77e9\u9635\uff08\u7ed3\u6784\u5f20\u91cf\uff09\uff1a</p> \\[ M = \\begin{bmatrix} \\sum w\\,I_u^2 &amp; \\sum w\\,I_u I_v \\\\ \\sum w\\,I_u I_v &amp; \\sum w\\,I_v^2 \\end{bmatrix} \\] <p>\u5176\u4e2d\\(w\\)\u662f\u7a97\u53e3\u51fd\u6570\uff08\u901a\u5e38\u662f\u9ad8\u65af\u52a0\u6743\uff09\u3002</p> <p>Harris \u54cd\u5e94\u51fd\u6570\uff1a</p> \\[ R = \\det(M) - k\\,(\\operatorname{trace}(M))^2 \\] <p>-\\(\\det(M) = \\lambda_1 \\lambda_2\\) -\\(\\operatorname{trace}(M) = \\lambda_1 + \\lambda_2\\) -\\(k\\)\u4e3a\u7ecf\u9a8c\u53c2\u6570\uff08\u901a\u5e38\\(k = 0.04 \\sim 0.06\\)\uff09</p> <p>\u89e3\u91ca\u54cd\u5e94\u503c R\uff1a</p> <ul> <li>R &gt; 0 \u4e14\u8f83\u5927 \u2192 \u89d2\u70b9\uff08\u4e24\u4e2a\u65b9\u5411\u68af\u5ea6\u90fd\u5927\uff09</li> <li>R &lt; 0 \u2192 \u8fb9\u7f18\uff08\u4e00\u4e2a\u65b9\u5411\u68af\u5ea6\u5927\uff0c\u53e6\u4e00\u4e2a\u5c0f\uff09</li> <li>R \u2248 0 \u2192 \u5e73\u5766\u533a\u57df\uff08\u65e0\u663e\u8457\u68af\u5ea6\uff09</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#sift","title":"SIFT \u7b97\u5b50","text":"<p>\u5c40\u90e8\u7279\u5f81\u63cf\u8ff0\u5b50\uff0c\u7528\u4e8e\u56fe\u50cf\u5339\u914d\u3001\u76ee\u6807\u8bc6\u522b\u548c\u4e09\u7ef4\u91cd\u5efa\u3002 \u5bf9\u5c3a\u5ea6\u3001\u65cb\u8f6c\u4e0d\u53d8\uff0c\u5bf9\u5149\u7167\u548c\u5c11\u91cf\u4eff\u5c04\u53d8\u6362\u5177\u6709\u9c81\u68d2\u6027\u3002</p> <ol> <li>\u5173\u952e\u70b9\u68c0\u6d4b\uff1a\u5728\u56fe\u50cf\u7684\u4e0d\u540c\u7f29\u653e\u5c42\uff08\u9ad8\u65af\u91d1\u5b57\u5854\uff09\u4e2d\uff0c\u627e\u5230\u5c40\u90e8\u6700\u4eae\u6216\u6700\u6697\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u901a\u5e38\u662f\u89d2\u70b9\u6216\u7eb9\u7406\u4e30\u5bcc\u7684\u4f4d\u7f6e\uff0c\u5bb9\u6613\u88ab\u8bc6\u522b\u3002</li> <li>\u5173\u952e\u70b9\u7cbe\u786e\u5b9a\u4f4d\uff1a\u5bf9\u627e\u5230\u7684\u70b9\u8fdb\u4e00\u6b65\u5fae\u8c03\u4f4d\u7f6e\uff0c\u53bb\u6389\u5bf9\u6bd4\u5ea6\u592a\u4f4e\u6216\u4f4d\u4e8e\u8fb9\u7f18\u7684\u70b9\uff0c\u4fdd\u8bc1\u7a33\u5b9a\u53ef\u9760\u3002</li> <li>\u65b9\u5411\u5206\u914d\uff1a\u770b\u5173\u952e\u70b9\u5468\u56f4\u7684\u68af\u5ea6\u65b9\u5411\uff0c\u628a\u6700\u663e\u8457\u7684\u65b9\u5411\u8bbe\u4e3a\u4e3b\u65b9\u5411\uff0c\u6837\u5373\u4f7f\u56fe\u50cf\u65cb\u8f6c\uff0c\u63cf\u8ff0\u5b50\u4e5f\u80fd\u4fdd\u6301\u4e00\u81f4\u3002</li> <li>\u63cf\u8ff0\u5b50\u751f\u6210\uff1a\u53d6\u5173\u952e\u70b9\u5468\u56f4\u4e00\u5757\u5c0f\u533a\u57df\uff0c\u5212\u5206\u6210\\(4\\times4\\)\u4e2a\u5c0f\u683c\u5b50\uff0c\u6bcf\u4e2a\u5c0f\u683c\u5b50\u7edf\u8ba1\u68af\u5ea6\u65b9\u5411\u5206\u5e03\uff088 \u4e2a\u65b9\u5411\uff09\u3002\u628a\u6240\u6709\u683c\u5b50\u7684\u7edf\u8ba1\u7ed3\u679c\u8fde\u8d77\u6765\uff0c\u5f97\u5230 128 \u7ef4\u5411\u91cf\u3002\u5411\u91cf\u5f52\u4e00\u5316\uff0c\u63d0\u9ad8\u5bf9\u5149\u7167\u53d8\u5316\u7684\u9c81\u68d2\u6027\u3002</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_12","title":"\u91cd\u590d\u7eb9\u7406\uff1f","text":"<p>\u91c7\u7528\u76f8\u5bf9\u5ea6\u91cf\u65b9\u6848 Ratio \uff0c\u5e76\u7ed3\u5408\u9608\u503c\uff0c\u901a\u5e38\u53d6 0.7-0.9 \u6700\u63a5\u8fd1\u7684\u63cf\u8ff0\u5b50\uff0c\u8981\u6bd4\u7b2c\u4e8c\u63a5\u8fd1\u7684\u63cf\u8ff0\u5b50\u63a5\u8fd1\u5f88\u591a\uff0c\u89e3\u51b3\u91cd\u590d\u7eb9\u7406\u5e26\u6765\u7684\u95ee\u9898</p> \\[x'=argmin\\frac{||F(x)-F(x')||}{||F(x)-F(x'')||}\\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_13","title":"\u5254\u9664\u9519\u8bef\u5339\u914d","text":"<p>\u6240\u6709\u6b63\u786e\u7684\u7279\u5f81\u5339\u914d\u5e94\u5f53\u7b26\u5408\u672c\u8d28\u77e9\u9635\u7684\u5173\u7cfb</p> <p>\u79bb\u7fa4\u70b9\u4e0d\u7b26\u5408\u672c\u8d28\u77e9\u9635\u5173\u7cfb\uff0c\u4f46\u4e0d\u77e5\u9053\u672c\u8d28\u77e9\u9635</p> <p>\u7528 8 \u5bf9\u5339\u914d\u5173\u7cfb\u6c42\u89e3\u672c\u8d28\u77e9\u9635 E \uff0c\u518d\u5c06\u5176\u4ed6\u7684\u5339\u914d\u4ee3\u5165\uff0c\u68c0\u67e5\u65b9\u5dee\u662f\u5426\u6ee1\u8db3</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_14","title":"\u5206\u5272\u4e0e\u68c0\u6d4b","text":"<p>\u76ee\u6807\u68c0\u6d4b vs \u56fe\u50cf\u5206\u5272</p> <ul> <li>\u76ee\u6807\u68c0\u6d4b\uff1a\u56de\u7b54\u201c\u56fe\u50cf\u4e2d\u6709\u4ec0\u4e48\u201d\u548c\u201c\u5728\u54ea\u91cc\u201d</li> <li>\u56fe\u50cf\u5206\u5272\uff1a\u5c06\u56fe\u50cf\u5212\u5206\u4e3a\u6709\u8bed\u4e49\u610f\u4e49\u7684\u533a\u57df\uff08\u8bed\u4e49/\u5b9e\u4f8b/\u5168\u666f\u5206\u5272\uff09</li> </ul> <p>\u56fe\u50cf\u5206\u5272\u65b9\u6cd5\u7684\u53d1\u5c55</p> <ul> <li>\u4f20\u7edf\u65b9\u6cd5\uff1a\u57fa\u4e8e\u9608\u503c\u7684\u5206\u5272\u3001\u57fa\u4e8e\u8fb9\u7f18\u7684\u5206\u5272\u3001\u57fa\u4e8e\u533a\u57df\u7684\u5206\u5272</li> <li>\u8bed\u4e49\u5206\u5272\uff1a\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u8d4b\u4e88\u8bed\u4e49\u7c7b\u522b\uff08\u5982\u9053\u8def\u3001\u5929\u7a7a\u3001\u884c\u4eba\uff09\uff0c\u4f46\u4e0d\u533a\u5206\u540c\u7c7b\u5b9e\u4f8b\u3002</li> <li>\u5b9e\u4f8b\u5206\u5272\uff1a\u540c\u65f6\u8bc6\u522b\u8bed\u4e49\u7c7b\u522b\u548c\u4e0d\u540c\u4e2a\u4f53\uff08\u5982\u533a\u5206\u4e0d\u540c\u7684\u884c\u4eba\uff09\u3002</li> <li>\u5168\u666f\u5206\u5272\uff1a\u7ed3\u5408\u8bed\u4e49\u5206\u5272\u548c\u5b9e\u4f8b\u5206\u5272\uff0c\u5bf9\u6240\u6709\u7269\u4f53\u5305\u62ec\u80cc\u666f\u90fd\u8981\u8fdb\u884c\u68c0\u6d4b\u548c\u5206\u5272\uff0c\u63d0\u4f9b\u5b8c\u6574\u7684\u573a\u666f\u7406\u89e3\u3002</li> </ul> <p>\u4f20\u7edf\u56fe\u50cf\u5206\u5272\u7b97\u6cd5</p> <ul> <li>\u57fa\u4e8e\u9608\u503c\u7684\u5206\u5272\u65b9\u6cd5</li> <li>\u57fa\u4e8e\u8fb9\u7f18\u7684\u5206\u5272\u65b9\u6cd5</li> <li>\u57fa\u4e8e\u533a\u57df\u7684\u5206\u5272\u65b9\u6cd5</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_15","title":"\u6df1\u5ea6\u89c6\u89c9\u611f\u77e5","text":"<p>\u6df1\u5ea6\u5b66\u4e60\uff1a\u4ee5\u7aef\u5230\u7aef\u7684\u65b9\u5f0f\u9010\u5c42\u62bd\u8c61\u3001\u9010\u5c42\u5b66\u4e60</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_16","title":"\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#mcp","title":"MCP \u6a21\u578b","text":"<p>\u7ed9\u5b9a n \u4e2a\u4e8c\u503c\u5316\uff080\uff0c1\uff09\u7684\u8f93\u5165\u6570\u636e\u4e0e\u8fde\u63a5\u53c2 MCP \u795e\u7ecf\u5143\u5bf9\u8f93\u5165\u6570\u636e\u7ebf\u6027\u52a0\u6743\u6c42\u548c\uff0c\u7136\u540e\u4f7f\u7528\u51fd\u6570\\(\\Phi(\\cdot)\\)\u5c06\u52a0\u6743\u7d2f\u52a0\u7ed3\u679c\u6620\u5c04\u4e3a 0 \u6216 1\u3002</p> <p>\u6fc0\u6d3b\u51fd\u6570\uff1a</p> <p>\u5bf9\u8f93\u5165\u4fe1\u606f\u8fdb\u884c\u975e\u7ebf\u6027\u53d8\u6362 \u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u975e\u7ebf\u6027\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff08activation function\uff09\uff0c\u901a\u8fc7\u5bf9\u591a\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\u8fdb\u884c\u7ec4\u5408\uff0c\u6765\u5b9e\u73b0\u5bf9\u8f93\u5165\u4fe1\u606f\u7684\u975e\u7ebf\u6027\u53d8\u6362\u3002</p> <p>Softmax \u51fd\u6570\uff1a</p> <p>Softmax \u51fd\u6570\u4e00\u822c\u7528\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5176\u5c06\u8f93\u5165\u6570\u636e xi \u6620\u5c04\u5230\u7b2c i \u4e2a\u7c7b\u522b\u7684\u6982\u7387 yi \u5982\u4e0b\uff1a</p> \\[y_i=softmax(x_i)=\\frac{e^{x_i}}{\\sum_{j=1}^k e^{x_j}}\\] <p>\u8f93\u5165\u901a\u8fc7 softmax \u53d8\u6362\u540e\uff0c\u6620\u5c04\u5230(0,1)\u4e4b\u95f4\u7684\u6982\u7387\u503c\u3002</p> <p>\u7531\u4e8e Softmax \u8f93\u51fa\u7ed3\u679c\u7684\u503c\u7d2f\u52a0\u8d77\u6765\u4e3a 1\uff0c\u56e0\u6b64\u53ef\u5c06\u8f93\u51fa\u6982\u7387\u6700\u5927\u7684\u4f5c\u4e3a\u5206\u7c7b\u76ee\u6807\u3002</p> <p>\u795e\u7ecf\u5143\uff1a</p> <p>\u795e\u7ecf\u5143\u662f\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u4e2d\u57fa\u672c\u5355\u4f4d\uff0c\u53ef\u4ee5\u5982\u4e0b\u523b\u753b\u795e\u7ecf\u5143\u529f\u80fd\uff1a</p> <ol> <li>\u5bf9\u76f8\u90bb\u524d\u5411\u795e\u7ecf\u5143\u8f93\u5165\u4fe1\u606f\u8fdb\u884c\u52a0\u6743\u7d2f\u52a0\uff1a\\(In=\\sum_{i=1}^n w_i*a_i\\)</li> <li>\u5bf9\u7d2f\u52a0\u7ed3\u679c\u8fdb\u884c\u975e\u7ebf\u6027\u53d8\u6362\uff08\u901a\u8fc7\u6fc0\u6d3b\u51fd\u6570\uff09\uff1a\\(g(x)\\)</li> <li>\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff1a\\(Out=g(In)\\)</li> </ol> <p>\u795e\u7ecf\u5143\u8d8a\u591a\uff0c\u975e\u7ebf\u6027\u6620\u5c04\u8d8a\u590d\u6742</p> <p>\u635f\u5931\u51fd\u6570\uff08\u4ee3\u4ef7\u51fd\u6570\uff09\uff1a</p> <p>\u635f\u5931\u51fd\u6570\uff08Loss Function\uff09\u53c8\u79f0\u4e3a\u4ee3\u4ef7\u51fd\u6570\uff08Cost Function\uff09\uff0c\u7528\u6765\u8ba1\u7b97\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u3002</p> <p>\u635f\u5931\u51fd\u6570\u662f\u795e\u7ecf\u7f51\u7edc\u8bbe\u8ba1\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u901a\u8fc7\u5b9a\u4e49\u4e0e\u4efb\u52a1\u76f8\u5173\u7684\u826f\u597d\u635f\u5931\u51fd\u6570\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53ef\u6839\u636e\u635f\u5931\u51fd\u6570\u6765\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u8bef\u5dee\u5927\u5c0f\uff0c\u8fdb\u800c\u4f18\u5316\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u3002</p> <p>\u4e24\u79cd\u6700\u5e38\u7528\u635f\u5931\u51fd\u6570\uff1a</p> <ul> <li>\u5747\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570</li> </ul> <p>\u5747\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570\u901a\u8fc7\u8ba1\u7b97\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u4e4b\u95f4\u8ddd\u79bb\uff08\u5373\u8bef\u5dee\uff09\u7684\u5e73\u65b9\u6765\u8861\u91cf\u6a21\u578b\u4f18\u52a3\u3002</p> <p>\u5047\u8bbe\u6709 n \u4e2a\u8bad\u7ec3\u6570\u636e xi\uff0c\u6bcf\u4e2a\u8bad\u7ec3\u6570\u636e xi \u7684\u771f\u5b9e\u8f93\u51fa\u4e3a yi\uff0c\u6a21\u578b\u5bf9 xi \u7684\u9884\u6d4b\u503c\u4e3a\\(\\hat{y_i}\\)\u3002\u8be5\u6a21\u578b\u5728 n \u4e2a\u8bad\u7ec3\u6570\u636e\u4e0b\u6240\u4ea7\u751f\u7684\u5747\u65b9\u8bef\u5dee\u635f\u5931\u53ef\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[MSE=\\frac{1}{n}\\sum_{i=1}^n (y_i-\\hat{y_i})^2\\] <ul> <li>\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570</li> </ul> <p>\u4ea4\u53c9\u71b5\uff08cross entropy\uff09\u662f\u4fe1\u606f\u8bba\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\uff0c\u4e3b\u8981\u7528\u6765\u5ea6\u91cf\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u5047\u5b9a p \u548c q \u662f\u6570\u636e x \u7684\u4e24\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u901a\u8fc7 q \u6765\u8868\u793a p \u7684\u4ea4\u53c9\u71b5\u53ef\u5982\u4e0b\u8ba1\u7b97\uff1a</p> \\[H(p,q)=-\\sum_x p(x) * \\log q(x)\\] <p>\u4ea4\u53c9\u71b5\u523b\u753b\u4e86\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u65e8\u5728\u63cf\u7ed8\u901a\u8fc7\u6982\u7387\u5206\u5e03 q \u6765\u8868\u8fbe\u6982\u7387\u5206\u5e03 p \u7684\u56f0\u96be\u7a0b\u5ea6\u3002\u4ea4\u53c9\u71b5\u8d8a\u5c0f\uff0c\u4e24\u4e2a\u6982\u7387\u5206\u5e03 p \u548c q \u8d8a\u63a5\u8fd1</p> <p>\u5047\u8bbe\u6570\u636e x \u5c5e\u4e8e\u7c7b\u522b 1\u3002\u8bb0\u6570\u636e x \u7684\u7c7b\u522b\u5206\u5e03\u6982\u7387\u4e3a y\uff0c\u663e\u7136 y = (1,0,0)\u4ee3\u8868\u6570\u636e x \u7684\u5b9e\u9645\u7c7b\u522b\u5206\u5e03\u6982\u7387\u3002\u8bb0\\(\\hat{y}\\)\u4ee3\u8868\u6a21\u578b\u9884\u6d4b\u6240\u5f97\u7c7b\u522b\u5206\u5e03\u6982\u7387\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u6570\u636e x \u800c\u8a00\uff0c\u5176\u5b9e\u9645\u7c7b\u522b\u5206\u5e03\u6982\u7387 y \u548c\u6a21\u578b\u9884\u6d4b\u7c7b\u522b\u5206\u5e03\u6982\u7387\\(\\hat{y}\\)\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\text{cross entropy}=-y\\times\\log(\\hat{y})\\] <p>\u4e00\u4e2a\u826f\u597d\u7684\u795e\u7ecf\u7f51\u7edc\u8981\u5c3d\u91cf\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\u6570\u636e\uff0c\u795e\u7ecf\u7f51\u7edc\u6240\u9884\u6d4b\u7c7b\u522b\u5206\u5e03\u6982\u7387\u4e0e\u5b9e\u9645\u7c7b\u522b\u5206\u5e03\u6982\u7387\u4e4b\u95f4\u7684\u5dee\u8ddd\u8d8a\u5c0f\u8d8a\u597d\uff0c\u5373\u4ea4\u53c9\u71b5\u8d8a\u5c0f\u8d8a\u597d\u3002\u4e8e\u662f\uff0c\u53ef\u5c06\u4ea4\u53c9\u71b5\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u6765\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002</p> \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u4f18\u5316 <p>\u4e0a\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4e09\u4e2a\u7c7b\u522b\u5206\u7c7b\u7684\u4f8b\u5b50\u3002\u7531\u4e8e\u8f93\u5165\u6570\u636ex\u5c5e\u4e8e\u7c7b\u522b1\uff0c\u56e0\u6b64\u5176\u5b9e\u9645\u7c7b\u522b\u6982\u7387\u5206\u5e03\u503c\u4e3a\\(y=(y_1,y_2,y_3)=(1,0,0)\\)\u3002\u7ecf\u8fc7\u795e\u7ecf\u7f51\u7edc\u7684\u53d8\u6362\uff0c\u5f97\u5230\u4e86\u8f93\u5165\u6570\u636ex\u76f8\u5bf9\u4e8e\u4e09\u4e2a\u7c7b\u522b\u7684\u9884\u6d4b\u4e2d\u95f4\u503c\\((z_1,z_2,z_3)\\)\u3002\u7136\u540e\uff0c\u7ecf\u8fc7Softmax\u51fd\u6570\u6620\u5c04\uff0c\u5f97\u5230\u795e\u7ecf\u7f51\u7edc\u6240\u9884\u6d4b\u7684\u8f93\u5165\u6570\u636ex\u7684\u7c7b\u522b\u5206\u5e03\u6982\u7387\\(\\hat{y}=(\\hat{y_1},\\hat{y_2},\\hat{y_3})\\)\u3002\u6839\u636e\u524d\u9762\u7684\u4ecb\u7ecd\uff0c\\(\\hat{y_1}\\)\u3001\\(\\hat{y_2}\\)\u548c\\(\\hat{y_3}\\)\u4e3a(0,1)\u8303\u56f4\u4e4b\u95f4\u7684\u4e00\u4e2a\u6982\u7387\u503c\u3002\u7531\u4e8e\u6837\u672cx\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u7c7b\u522b\uff0c\u56e0\u6b64\u5e0c\u671b\u795e\u7ecf\u7f51\u7edc\u6240\u9884\u6d4b\u5f97\u5230\u7684\\(\\hat{y_1}\\)\u53d6\u503c\u8981\u8fdc\u8fdc\u5927\u4e8e\\(\\hat{y_2}\\)\u548c\\(\\hat{y_3}\\)\u7684\u53d6\u503c\u3002</p> <p>\u8bad\u7ec3\u4e2d\u53ef\u5229\u7528\u5982\u4e0b\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u6765\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u4f18\u5316\uff1a</p> \\[\\text{cross entropy}=-(y_1\\times\\log(\\hat{y_1})+y_2\\times\\log(\\hat{y_2})+y_3\\times\\log(\\hat{y_3}))\\] <p>\u5728\u4e0a\u5f0f\u4e2d\uff0c\\(y_2\\)\u548c\\(y_3\\)\u5747\u4e3a0\u3001\\(y_1\\)\u4e3a1\uff0c\u56e0\u6b64\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u7b80\u5316\u4e3a\uff1a</p> \\[-y_1\\times\\log(\\hat{y_1})=-\\log(\\hat{y_1})\\] <p>\u5728\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e2d\uff0c\u8981\u5c06\u8f93\u5165\u6570\u636e\u5b9e\u9645\u7684\u7c7b\u522b\u6982\u7387\u5206\u5e03\u4e0e\u6a21\u578b\u9884\u6d4b\u7684\u7c7b\u522b\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u7684\u8bef\u5dee\uff08\u5373\u635f\u5931\uff09\u4ece\u8f93\u51fa\u7aef\u5411\u8f93\u5165\u7aef\u4f20\u9012\uff0c\u4ee5\u4fbf\u6765\u4f18\u5316\u6a21\u578b\u53c2\u6570\u3002\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u6839\u636e\u4ea4\u53c9\u71b5\u8ba1\u7b97\u5f97\u5230\u7684\u8bef\u5dee\u4ece\\(\\hat{y_1}\\)\u4f20\u9012\u7ed9\\(z_1\\)\u548c\\(z_2\\)\uff08\\(z_3\\)\u7684\u63a8\u5bfc\u4e0e\\(z_2\\)\u76f8\u540c\uff09\u7684\u60c5\u51b5\u3002</p> \\[ \\frac{\\partial \\widehat{y}_1}{\\partial z_1} = \\frac{\\partial}{\\partial z_1} \\left( \\frac{e^{z_1}}{\\sum_k e^{z_k}} \\right) = \\frac{(e^{z_1})' \\times \\sum_k e^{z_k} - e^{z_1} \\times e^{z_1}}{(\\sum_k e^{z_k})^2} = \\frac{e^{z_1}}{\\sum_k e^{z_k}} - \\frac{e^{z_1}}{\\sum_k e^{z_k}} \\times \\frac{e^{z_1}}{\\sum_k e^{z_k}} = \\widehat{y}_1(1 - \\widehat{y}_1) \\] <p>\uff08\u6ce8\u610f\uff1a\u5728\u63a8\u5bfc\u4e2d\u5e94\u7528\u4e86\\((e^x)' = e^x\\)\u3001\\(\\left(\\frac{v}{u}\\right)' = \\frac{v'u - vu'}{u^2}\\)\u7b49\u516c\u5f0f\uff09</p> <p>\u7531\u4e8e\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\\(-\\log(\\widehat{y}_1)\\)\u5bf9\\(\\widehat{y}_1\\)\u6c42\u5bfc\u7684\u7ed3\u679c\u4e3a\\(-\\frac{1}{\\widehat{y}_1}\\)\uff0c\\(\\widehat{y}_1(1 - \\widehat{y}_1)\\)\u4e0e\\(-\\frac{1}{\\widehat{y}_1}\\)\u76f8\u4e58\u4e3a\\({\\widehat{y}_1 - 1}\\)\u3002\u8fd9\u8bf4\u660e\u4e00\u65e6\u5f97\u5230\u6a21\u578b\u9884\u6d4b\u8f93\u51fa\\(\\widehat{y}_1\\)\uff0c\u5c06\u8be5\u8f93\u51fa\u51cf\u53bb 1 \u5c31\u662f\u4ea4\u53c9\u635f\u5931\u51fd\u6570\u76f8\u5bf9\u4e8e\\(z_1\\)\u7684\u504f\u5bfc\u7ed3\u679c\u3002</p> \\[ \\frac{\\partial \\widehat{y}_1}{\\partial z_2} = \\frac{\\partial}{\\partial z_2} \\left( \\frac{e^{z_1}}{\\sum_k e^{z_k}} \\right) = \\frac{0 \\times \\sum_k e^{z_k} - e^{z_1} \\times e^{z_2}}{(\\sum_k e^{z_k})^2} = -\\frac{e^{z_1}}{\\sum_k e^{z_k}} \\times \\frac{e^{z_2}}{\\sum_k e^{z_k}} = -\\widehat{y}_1 \\widehat{y}_2 \\] <p>\u540c\u7406\uff0c\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u5bfc\u6570\u4e3a\\(-\\frac{1}{\\widehat{y}_1}\\)\uff0c\\(-\\widehat{y}_1 \\widehat{y}_2\\)\u4e0e\\(-\\frac{1}{\\widehat{y}_1}\\)\u76f8\u4e58\u7ed3\u679c\u4e3a\\({\\widehat{y}_2}\\)\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u9664\u7b2c\u4e00\u4e2a\u8f93\u51fa\u8282\u70b9\u4ee5\u5916\u7684\u8282\u70b9\u8fdb\u884c\u504f\u5bfc\uff0c\u5728\u5f97\u5230\u6a21\u578b\u9884\u6d4b\u8f93\u51fa\u540e\uff0c\u53ea\u8981\u5c06\u5176\u4fdd\u5b58\uff0c\u5c31\u662f\u4ea4\u53c9\u635f\u5931\u51fd\u6570\u76f8\u5bf9\u4e8e\u5176\u4ed6\u8282\u70b9\u7684\u504f\u5bfc\u7ed3\u679c\u3002\u5728\\(z_1\\)\u3001\\(z_2\\)\u548c\\(z_3\\)\u5f97\u5230\u504f\u5bfc\u7ed3\u679c\u540e\uff0c\u518d\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\uff08\u540e\u7eed\u4ecb\u7ecd\uff09\u5c06\u635f\u5931\u8bef\u5dee\u7ee7\u7eed\u5f80\u8f93\u5165\u7aef\u4f20\u9012\u5373\u53ef\u3002</p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5047\u8bbe\u6240\u9884\u6d4b\u4e2d\u95f4\u503c\\((z_1, z_2, z_3)\\)\u7ecf\u8fc7 Softmax \u6620\u5c04\u540e\u6240\u5f97\u7ed3\u679c\u4e3a\\((0.34, 0.46, 0.20)\\)\u3002\u7531\u4e8e\u5df2\u77e5\u8f93\u5165\u6570\u636e\\(x\\)\u5c5e\u4e8e\u7b2c\u4e00\u7c7b\uff0c\u663e\u7136\u8fd9\u4e2a\u8f93\u51fa\u4e0d\u7406\u60f3\u800c\u9700\u8981\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u4f18\u5316\u3002\u5982\u679c\u9009\u62e9\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u6765\u4f18\u5316\u6a21\u578b\uff0c\u5219\\((z_1, z_2, z_3)\\)\u8fd9\u4e00\u5c42\u7684\u504f\u5bfc\u503c\u4e3a</p> <p>\\(\\((0.34 - 1, 0.46, 0.20) = (-0.66, 0.46, 0.20)\\)\\)</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0cSoftmax \u548c\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u76f8\u4e92\u7ed3\u5408\uff0c\u4e3a\u504f\u5bfc\u8ba1\u7b97\u5e26\u6765\u4e86\u6781\u5927\u4fbf\u5229\u3002\u504f\u5bfc\u8ba1\u7b97\u4f7f\u5f97\u635f\u5931\u8bef\u5dee\u4ece\u8f93\u51fa\u7aef\u5411\u8f93\u5165\u7aef\u4f20\u9012\uff0c\u6765\u5bf9\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u4f18\u5316\u3002\u5728\u8fd9\u91cc\uff0c\u4ea4\u53c9\u71b5\u4e0e Softmax \u51fd\u6570\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u4e5f\u53eb Softmax \u635f\u5931\uff08Softmax with cross-entropy loss\uff09\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_17","title":"\u611f\u77e5\u673a\u6a21\u578b","text":"<p>\u5355\u5c42\u611f\u77e5\u673a\uff1a</p> <p>\u65e9\u671f\u7684\u611f\u77e5\u673a\u7ed3\u6784\u548c MCP \u6a21\u578b\u76f8\u4f3c\uff0c\u7531\u4e00\u4e2a\u8f93\u5165\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u6784\u6210\uff0c\u56e0\u6b64\u4e5f\u88ab\u79f0\u4e3a\u201c\u5355\u5c42\u611f\u77e5\u673a\u201d\u3002\u611f\u77e5\u673a\u7684\u8f93\u5165\u5c42\u8d1f\u8d23\u63a5\u6536\u5b9e\u6570\u503c\u7684\u8f93\u5165\u5411\u91cf\uff0c\u8f93\u51fa\u5c42\u5219\u80fd\u8f93\u51fa 1 \u6216-1 \u4e24\u4e2a\u503c\u3002</p> <p>\u5355\u5c42\u611f\u77e5\u673a\u53ef\u88ab\u7528\u6765\u533a\u5206\u7ebf\u6027\u53ef\u5206\u6570\u636e\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u903b\u8f91\u4e0e(AND)\u3001\u903b\u8f91\u4e0e\u975e(NAND)\u548c\u903b\u8f91\u6216(OR)\u4e3a\u7ebf\u6027\u53ef\u5206\u51fd\u6570\uff0c\u6240\u4ee5\u53ef\u5229\u7528\u5355\u5c42\u611f\u77e5\u673a\u6765\u6a21\u62df\u8fd9\u4e9b\u903b\u8f91\u51fd\u6570\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u903b\u8f91\u5f02\u6216\uff08XOR\uff09\u662f\u975e\u7ebf\u6027\u53ef\u5206\u7684\u903b\u8f91\u51fd\u6570\uff0c\u56e0\u6b64\u5355\u5c42\u611f\u77e5\u673a\u65e0\u6cd5\u6a21\u62df\u903b\u8f91\u5f02\u6216\u51fd\u6570\u7684\u529f\u80fd\u3002</p> <p>\u591a\u5c42\u611f\u77e5\u673a\uff1a</p> <p>\u591a\u5c42\u611f\u77e5\u673a\u7531\u8f93\u5165\u5c42\u3001\u8f93\u51fa\u5c42\u548c\u81f3\u5c11\u4e00\u5c42\u7684\u9690\u85cf\u5c42\u6784\u6210\u3002\u7f51\u7edc\u4e2d\u5404\u4e2a\u9690\u85cf\u5c42\u4e2d\u795e\u7ecf\u5143\u53ef\u63a5\u6536\u76f8\u90bb\u524d\u5e8f\u9690\u85cf\u5c42\u4e2d\u6240\u6709\u795e\u7ecf\u5143\u4f20\u9012\u800c\u6765\u7684\u4fe1\u606f\uff0c\u7ecf\u8fc7\u52a0\u5de5\u5904\u7406\u540e\u5c06\u4fe1\u606f\u8f93\u51fa\u7ed9\u76f8\u90bb\u540e\u7eed\u9690\u85cf\u5c42\u4e2d\u6240\u6709\u795e\u7ecf\u5143\u3002\u5404\u4e2a\u795e\u7ecf\u5143\u63a5\u53d7\u524d\u4e00\u7ea7\u7684\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u5230\u4e0b\u4e00\u7ea7\uff0c\u6a21\u578b\u4e2d\u6ca1\u6709\u53cd\u9988\u3002\u5c42\u4e0e\u5c42\u4e4b\u95f4\u901a\u8fc7\u201c\u5168\u8fde\u63a5\u201d\u8fdb\u884c\u94fe\u63a5\uff0c\u5373\u4e24\u4e2a\u76f8\u90bb\u5c42\u4e4b\u95f4\u7684\u795e\u7ecf\u5143\u5b8c\u5168\u6210\u5bf9\u8fde\u63a5\uff0c\u4f46\u5c42\u5185\u7684\u795e\u7ecf\u5143\u4e0d\u76f8\u4e92\u8fde\u63a5\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_18","title":"\u53c2\u6570\u4f18\u5316","text":"<p>\u68af\u5ea6\u4e0b\u964d\uff1a</p> <p>\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff08Gradient Descent\uff09\u662f\u4e00\u79cd\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\u68af\u5ea6\u7684\u53cd\u65b9\u5411\u662f\u51fd\u6570\u503c\u4e0b\u964d\u6700\u5feb\u7684\u65b9\u5411\uff0c\u56e0\u6b64\u662f\u635f\u5931\u51fd\u6570\u6c42\u89e3\u7684\u65b9\u5411\u3002</p> \u68af\u5ea6\u4e0b\u964d\u6cd5\u63a8\u5bfc <p>\u5047\u8bbe\u635f\u5931\u51fd\u6570\\(f(x)\\)\u662f\u8fde\u7eed\u53ef\u5fae\u7684\u591a\u5143\u53d8\u91cf\u51fd\u6570\uff0c\u5176\u6cf0\u52d2\u5c55\u5f00\u5982\u4e0b\uff08\\(\\Delta x\\)\u662f\u5fae\u5c0f\u7684\u589e\u91cf\uff09\uff1a</p> \\[ f(x + \\Delta x) = f(x) + f'(x)\\Delta x + \\frac{1}{2}f''(x)(\\Delta x)^2 + \\ldots + \\frac{1}{n!}f^{(n)}(x)(\\Delta x)^n \\] \\[ f(x + \\Delta x) - f(x) \\approx (\\nabla f(x))^T \\Delta x \\] <p>\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\\(f(x)\\)\uff0c\u5219\u8981\u6c42\\(f(x + \\Delta x) &lt; f(x)\\)\uff0c\u4e8e\u662f\u6709\uff1a</p> \\[ (\\nabla f(x))^T \\Delta x &lt; 0 \\] <p>\u5728\\((\\nabla f(x))^T \\Delta x = \\|\\nabla f(x)\\| \\cdot \\|\\Delta x\\| \\cdot \\cos\\theta\\)\u4e2d\uff0c\\(\\|\\nabla f(x)\\|\\)\u548c\\(\\|\\Delta x\\|\\)\u5206\u522b\u4e3a\u635f\u5931\u51fd\u6570\u68af\u5ea6\u7684\u6a21\u548c\u4e0b\u4e00\u8f6e\u8fed\u4ee3\u4e2d\\(x\\)\u53d6\u503c\u589e\u91cf\u7684\u6a21\uff0c\u4e24\u8005\u5747\u4e3a\u6b63\u6570\u3002\u4e3a\u4e86\u4fdd\u8bc1\u635f\u5931\u8bef\u5dee\u51cf\u5c11\uff0c\u53ea\u8981\u4fdd\u8bc1\\(\\cos\\theta &lt; 0\\)\u3002</p> <p>\u5f53\\(\\theta = 180^\\circ\\)\u65f6\uff0c\\(f(x + \\Delta x)\\)\u548c\\(f(x)\\)\u4e4b\u95f4\u7684\u5dee\u503c\u4e3a\uff1a</p> \\[ f(x + \\Delta x) - f(x) = \\|\\nabla f(x)\\| \\cdot \\|\\Delta x\\| \\cdot \\cos\\theta = -\\|\\Delta x\\| \\cdot \\|\\nabla f(x)\\| \\] <p>\u8fd9\u8bf4\u660e\u53ea\u8981\u6cbf\u7740\u635f\u5931\u51fd\u6570\u68af\u5ea6\u7684\u53cd\u65b9\u5411\u9009\u53d6\\(x\\)\u7684\u589e\u91cf\\(\\Delta x\\)\uff0c\u5c31\u4f1a\u4fdd\u8bc1\u635f\u5931\u8bef\u5dee\u4e0b\u964d\u6700\u591a\u3001\u4e0b\u964d\u6700\u5feb\uff0c\u72b9\u5982\u4ece\u5c71\u5cf0\u5904\u6cbf\u7740\u6700\u9661\u5ced\u8def\u5f84\u53ef\u5feb\u901f\u8d70\u5230\u5c71\u8c37\u3002</p> <p>\u5728\u524d\u9762\u7684\u63a8\u5bfc\u4e2d\u5ffd\u7565\u4e86\u635f\u5931\u51fd\u6570\u7684\u4e8c\u9636\u5bfc\u6570\u4ee5\u53ca\u5176\u9ad8\u9636\u5bfc\u6570\u7684\u53d6\u503c\uff0c\u56e0\u6b64\u5728\u5b9e\u9645\u4e2d\u5f15\u5165\u6b65\u957f\\(\\eta\\)\uff0c\u7528\\(x - \\eta \\nabla f(x)\\)\u6765\u66f4\u65b0\\(x\\)\uff08\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\\(\\eta\\)\u53ef\u53d6\u4e00\u4e2a\u5b9a\u503c\uff09\u3002</p> \\[x_{new} = x_{old} - \\eta \\cdot \\nabla f(x_{\\text{old}})\\] <p>\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\uff1a</p> <p>\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5(error back propagation, BP)\u662f\u4e00\u79cd\u5c06\u8f93\u51fa\u5c42\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u7ed9\u9690\u85cf\u5c42\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\u7684\u65b9\u6cd5\u3002\u5c06\u8bef\u5dee\u4ece\u540e\u5411\u524d\u4f20\u9012\uff0c\u5c06\u8bef\u5dee\u5206\u644a\u7ed9\u5404\u5c42\u6240\u6709\u5355\u5143\uff0c\u4ece\u800c\u83b7\u5f97\u5404\u5c42\u5355\u5143\u6240\u4ea7\u751f\u7684\u8bef\u5dee\uff0c\u8fdb\u800c\u4f9d\u636e\u8fd9\u4e2a\u8bef\u5dee\u6765\u8ba9\u5404\u5c42\u5355\u5143\u8d1f\u8d77\u5404\u81ea\u8d23\u4efb\u3001\u4fee\u6b63\u5404\u5355\u5143\u53c2\u6570\u3002</p> \u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u63a8\u5bfc <p>\u4e3a\u4e86\u4f7f\u635f\u5931\u51fd\u6570\\(\\mathcal{L}\\)\u53d6\u503c\u51cf\u5c11\uff08\u4ece\u800c\u4fdd\u8bc1\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u4e0e\u5b9e\u9645\u7ed3\u679c\u4e4b\u95f4\u7684\u5dee\u8ddd\u8d8a\u6765\u8d8a\u5c0f\uff09\uff0c\u9700\u8981\u6c42\u53d6\u635f\u5931\u51fd\u6570\\(\\mathcal{L}\\)\u76f8\u5bf9\u4e8e\\(w_1\\)\u7684\u504f\u5bfc\uff0c\u7136\u540e\u6309\u7167\u635f\u5931\u51fd\u6570\u68af\u5ea6\u7684\u53cd\u65b9\u5411\u9009\u53d6\u4e00\u4e2a\u5fae\u5c0f\u7684\u589e\u91cf\uff0c\u6765\u8c03\u6574\\(w_1\\)\u7684\u53d6\u503c\uff0c\u5c31\u80fd\u591f\u4fdd\u8bc1\u635f\u5931\u51fd\u6570\u53d6\u503c\u51cf\u5c11\u3002\u5373\u5c06\\(w_1\\)\u53d8\u4e3a\\(w_1 - \\eta \\frac{d\\mathcal{L}}{dw_1}\\)\u540e\uff0c\u80fd\u4f7f\u5f97\u635f\u5931\u8bef\u5dee\u51cf\u5c11\u3002\u8fd9\u91cc\\(\\frac{d\\mathcal{L}}{dw_1}\\)\u4e3a\u635f\u5931\u51fd\u6570\\(\\mathcal{L}\\)\u5bf9\u53d8\u91cf\u53c2\u6570\\(w_1\\)\u7684\u504f\u5bfc\u3002\u4e8e\u662f\uff0c\u9700\u8981\u6c42\u53d6\u635f\u5931\u51fd\u6570\\(\\mathcal{L}\\)\u5bf9\u53d8\u91cf\u53c2\u6570\\(w_1\\)\u7684\u504f\u5bfc\u3002</p> <p>\u7531\u4e8e\\(w_1\\)\u4e0e\u52a0\u6743\u7d2f\u52a0\u51fd\u6570\\(X\\)\u548c sigmoid \u51fd\u6570\u5747\u6709\u5173\u7cfb\uff0c\u56e0\u6b64</p> \\[ \\frac{d\\mathcal{L}}{dw_1} = \\frac{d\\mathcal{L}}{dO} \\cdot \\frac{dO}{dX} \\cdot \\frac{dX}{dw_1} \\] <p>\u5728\u8fd9\u4e2a\u94fe\u5f0f\u6c42\u5bfc\u4e2d\uff1a</p> <p>-\\(\\frac{d\\mathcal{L}}{dO}\\)\u4e0e\u635f\u5931\u51fd\u6570\u7684\u5b9a\u4e49\u6709\u5173\uff1b -\\(\\frac{dO}{dX}\\)\u662f\u5bf9 sigmoid \u51fd\u6570\u6c42\u5bfc\uff0c\u7ed3\u679c\u4e3a\\(\\frac{1}{1+e^{-X}} \\times \\left(1 - \\frac{1}{1+e^{-X}}\\right)\\)\uff1b -\\(\\frac{dX}{dw_1}\\)\u662f\u52a0\u6743\u7d2f\u52a0\u51fd\u6570\\(w_1 \\times out_1 + w_2 \\times out_2 + w_3 \\times out_3\\)\u5bf9\\(w_1\\)\u6c42\u5bfc\uff0c\u7ed3\u679c\u4e3a\\(out_1\\)\u3002</p> <p>\u94fe\u5f0f\u6c42\u5bfc\u5b9e\u73b0\u4e86\u635f\u5931\u51fd\u6570\u5bf9\u67d0\u4e2a\u81ea\u53d8\u91cf\u6c42\u504f\u5bfc\uff0c\u597d\u6bd4\u5c06\u635f\u5931\u8bef\u5dee\u4ece\u8f93\u51fa\u7aef\u5411\u8f93\u5165\u7aef\u9010\u5c42\u4f20\u64ad\uff0c\u901a\u8fc7\u8fd9\u4e2a\u4f20\u64ad\u8fc7\u7a0b\u6765\u66f4\u65b0\u8be5\u81ea\u53d8\u91cf\u53d6\u503c\u3002\u68af\u5ea6\u4e0b\u964d\u6cd5\u544a\u8bc9\u6211\u4eec\uff0c\u53ea\u8981\u6cbf\u7740\u635f\u5931\u51fd\u6570\u68af\u5ea6\u7684\u53cd\u65b9\u5411\u6765\u66f4\u65b0\u53c2\u6570\uff0c\u5c31\u53ef\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u4e0b\u964d\u6700\u5feb\u3002</p> <p>\u53c2\u6570\\(w_1\\)\u5728\u4e0b\u4e00\u8f6e\u8fed\u4ee3\u4e2d\u7684\u53d6\u503c\u88ab\u8c03\u6574\u4e3a\uff1a</p> \\[ w_1^{\\text{new}} = w_1 - \\eta \\cdot \\frac{d\\mathcal{L}}{dw_1} = w_1 - \\eta \\cdot \\frac{d\\mathcal{L}}{dO} \\cdot \\frac{dO}{dX} \\cdot \\frac{dX}{dw_1} = w_1 - \\eta \\cdot \\frac{d\\mathcal{L}}{dO} \\cdot \\frac{1}{1+e^{-X}} \\cdot \\left(1 - \\frac{1}{1+e^{-X}}\\right) \\cdot out_1 \\] <p>\u6309\u7167\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u53ef\u8c03\u6574\\(w_2\\)\u3001\\(w_3\\)\u4ee5\u53ca\u56fe\u4e2d\u672a\u663e\u793a\u7684\u5176\u4ed6\u53c2\u6570\u7684\u53d6\u503c\u3002\u7ecf\u8fc7\u8fd9\u6837\u7684\u8c03\u6574\uff0c\u5728\u6a21\u578b\u53c2\u6570\u65b0\u7684\u53d6\u503c\u4f5c\u7528\u4e0b\uff0c\u635f\u5931\u51fd\u6570\\(\\mathcal{L}(\\theta)\\)\u4f1a\u4ee5\u6700\u5feb\u4e0b\u964d\u65b9\u5f0f\u9010\u6e10\u51cf\u5c11\uff0c\u76f4\u81f3\u51cf\u5c11\u5230\u6700\u5c0f\u503c\uff08\u5373\u5168\u5c40\u6700\u5c0f\u503c\uff09\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#cnn","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_19","title":"\u5377\u79ef\u64cd\u4f5c","text":"<p>\u56fe\u50cf\u4e2d\u50cf\u7d20\u70b9\u5177\u6709\u5f88\u5f3a\u7684\u7a7a\u95f4\u4f9d\u8d56\u6027\uff0c\u5377\u79ef\uff08convolution\uff09\u5c31\u662f\u9488\u5bf9\u50cf\u7d20\u70b9\u7684\u7a7a\u95f4\u4f9d\u8d56\u6027\u6765\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u7684\u4e00\u79cd\u6280\u672f\u3002</p> <p>\u5728\u56fe\u50cf\u5377\u79ef\u8ba1\u7b97\u4e2d\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5377\u79ef\u6838\uff08kernel\uff09\u3002\u5377\u79ef\u6838\u662f\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6570\u503c\u4e3a\u5bf9\u56fe\u50cf\u4e2d\u4e0e\u5377\u79ef\u6838\u540c\u6837\u5927\u5c0f\u7684\u5b50\u5757\u50cf\u7d20\u70b9\u8fdb\u884c\u5377\u79ef\u8ba1\u7b97\u65f6\u6240\u91c7\u7528\u7684\u6743\u91cd\u3002</p> <p>\u5377\u79ef\u6838\u4e2d\u7684\u6743\u91cd\u7cfb\u6570\\(w_i\\)\u662f\u901a\u8fc7\u6570\u636e\u9a71\u52a8\u673a\u5236\u5b66\u4e60\u5f97\u5230\uff0c\u5176\u7528\u6765\u6355\u83b7\u56fe\u50cf\u4e2d\u67d0\u50cf\u7d20\u70b9\u53ca\u5176\u90bb\u57df\u50cf\u7d20\u70b9\u6240\u6784\u6210\u7684\u7279\u6709\u7a7a\u95f4\u6a21\u5f0f\u3002\u4e00\u65e6\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u5f97\u5230\u6743\u91cd\u7cfb\u6570\uff0c\u8fd9\u4e9b\u6743\u91cd\u7cfb\u6570\u5c31\u523b\u753b\u4e86\u56fe\u50cf\u4e2d\u50cf\u7d20\u70b9\u6784\u6210\u7684\u7a7a\u95f4\u5206\u5e03\u4e0d\u540c\u6a21\u5f0f\u3002</p> <p>\u4eba\u7684\u89c6\u89c9\u795e\u7ecf\u7ec6\u80de\u5bf9\u4e0d\u540c\u7684\u89c6\u89c9\u6a21\u5f0f\u5177\u6709\u7279\u5f81\u9009\u62e9\u6027\uff08Feature Selectivity\uff09\uff0c\u5373\u4e0d\u540c\u89c6\u89c9\u795e\u7ecf\u7ec6\u80de\u5bf9\u8fb9\u754c\u3001\u8fd0\u52a8\u548c\u989c\u8272\u7b49\u4e0d\u540c\u4fe1\u606f\u5177\u6709\u5f3a\u5f31\u4e0d\u540c\u7684\u9009\u62e9\u6027\u3002\u56e0\u6b64\uff0c\u4e0d\u540c\u5377\u79ef\u6838\u53ef\u88ab\u7528\u6765\u523b\u753b\u89c6\u89c9\u795e\u7ecf\u7ec6\u80de\u5bf9\u5916\u754c\u4fe1\u606f\u611f\u53d7\u65f6\u7684\u4e0d\u540c\u9009\u62e9\u6027\u3002</p> <p>\u5377\u79ef\u6240\u5f97\u7ed3\u679c\u4e2d\uff0c\u6bcf\u4e2a\u8f93\u51fa\u70b9\u7684\u53d6\u503c\u4ec5\u4f9d\u8d56\u4e8e\u5176\u5728\u8f93\u5165\u56fe\u50cf\u4e2d\u8be5\u70b9\u53ca\u5176\u90bb\u57df\u533a\u57df\u70b9\u7684\u53d6\u503c\uff0c\u4e0e\u8fd9\u4e2a\u533a\u57df\u4e4b\u5916\u7684\u5176\u4ed6\u70b9\u53d6\u503c\u5747\u65e0\u5173\uff0c\u8be5\u533a\u57df\u88ab\u79f0\u4e3a\u611f\u53d7\u91ce\uff08receptive field\uff09\u3002\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u611f\u53d7\u91ce\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6bcf\u4e00\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\uff08feature map\uff09\u4e0a\u7684\u50cf\u7d20\u70b9\u5728\u8f93\u5165\u56fe\u50cf\u4e0a\u6620\u5c04\u7684\u533a\u57df\u5927\u5c0f\u3002</p> <p>\u793a\u4f8b\uff1a\u5047\u8bbe\u8f93\u5165\u4f53\u79ef\u7684\u5927\u5c0f\u4e3a [32x32x3]\uff08\u4f8b\u5982 RGB CIFAR-10 \u56fe\u50cf\uff09\u3002\u5982\u679c\u611f\u53d7\u91ce\u7684\u5927\u5c0f\u4e3a 5x5\uff0c\u5171\u5305\u542b 3 \u4e2a\u5377\u79ef\u6838\uff0c\u5219 Conv \u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u5c06\u5177\u6709\u8f93\u5165\u4f53\u79ef\u4e2d [5x5x3] \u533a\u57df\u7684\u6743\u91cd\uff0c\u603b\u5171 553 = 75 \u4e2a\u6743\u91cd\u3002\u8bf7\u6ce8\u610f\uff0c\u6cbf\u6df1\u5ea6\u8f74\u7684\u8fde\u901a\u8303\u56f4\u5fc5\u987b\u4e3a 3\uff0c\u56e0\u4e3a\u8fd9\u662f\u8f93\u5165\u4f53\u79ef\u7684\u6df1\u5ea6\u3002</p> \u7a7a\u95f4\u7ef4\u5ea6\u8ba1\u7b97 <p>Generated by ai</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_20","title":"\ud83c\udfaf \u4e00\u3001\u76ee\u6807","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u56fe\u50cf\uff08\u6216\u7279\u5f81\u56fe\uff09\uff0c\u7ecf\u8fc7\u4e00\u4e2a\u5377\u79ef\u5c42\u540e\uff0c\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff08\u5bbd \u00d7 \u9ad8\uff09\u662f\u591a\u5c11\uff1f</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_21","title":"\ud83e\uddee \u4e8c\u3001\u6838\u5fc3\u516c\u5f0f","text":"<p>\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff08\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff09\u7531\u4ee5\u4e0b\u516c\u5f0f\u51b3\u5b9a\uff1a</p> <p>\u2705 \u8f93\u51fa\u5c3a\u5bf8\u516c\u5f0f\uff08\u5bf9\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u5206\u522b\u9002\u7528\uff09\uff1a</p> \\[ \\text{Output Size} = \\left\\lfloor \\frac{W - F + 2P}{S} \\right\\rfloor + 1 \\] <p>\u5176\u4e2d\uff1a</p> \u7b26\u53f7 \u542b\u4e49 \u8bf4\u660e <code>W</code> \u8f93\u5165\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff08\u5bbd\u6216\u9ad8\uff09 \u4f8b\u5982 32\uff08\u8f93\u5165\u662f 32x32\uff09 <code>F</code> \u5377\u79ef\u6838\u5927\u5c0f\uff08Filter Size\uff09 \u4f8b\u5982 5x5 \u2192 F = 5 <code>P</code> \u586b\u5145\uff08Padding\uff09 \u901a\u5e38\u4e3a 0\uff08\u65e0\u586b\u5145\uff09\u6216 1\u30012 \u7b49 <code>S</code> \u6b65\u957f\uff08Stride\uff09 \u6bcf\u6b21\u5377\u79ef\u6838\u79fb\u52a8\u7684\u50cf\u7d20\u6570\uff0c\u901a\u5e38\u4e3a 1 \u6216 2 <code>\u230a \u230b</code> \u5411\u4e0b\u53d6\u6574 \u5982\u679c\u7ed3\u679c\u4e0d\u662f\u6574\u6570\uff0c\u5411\u4e0b\u53d6\u6574 <p>\u26a0\ufe0f \u6ce8\u610f\uff1a\u8fd9\u4e2a\u516c\u5f0f\u5bf9\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5206\u522b\u72ec\u7acb\u8ba1\u7b97\u3002\u5982\u679c\u8f93\u5165\u662f\u6b63\u65b9\u5f62\uff08\u5982 32x32\uff09\uff0c\u4e14\u5377\u79ef\u6838\u4e5f\u662f\u6b63\u65b9\u5f62\uff08\u5982 5x5\uff09\uff0c\u4e14 padding \u548c stride \u5728\u4e24\u4e2a\u65b9\u5411\u76f8\u540c\uff0c\u5219\u8f93\u51fa\u4e5f\u662f\u6b63\u65b9\u5f62\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_22","title":"\ud83d\udcda \u4e09\u3001\u8be6\u7ec6\u89e3\u91ca\u6bcf\u4e2a\u53c2\u6570","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#1-w","title":"1. \u8f93\u5165\u5c3a\u5bf8 W","text":"<ul> <li>\u6307\u8f93\u5165\u56fe\u50cf\u6216\u7279\u5f81\u56fe\u5728\u67d0\u4e2a\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u5927\u5c0f\u3002</li> <li>\u4f8b\u5982\uff1a32\u00d732\u00d73 \u7684\u56fe\u50cf \u2192 W = 32\uff08\u5bbd\uff09\uff0cH = 32\uff08\u9ad8\uff09</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#2-f","title":"2. \u5377\u79ef\u6838\u5927\u5c0f F","text":"<ul> <li>\u5377\u79ef\u6838\u5728\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u5c3a\u5bf8\u3002</li> <li>\u4f8b\u5982\uff1a5\u00d75 \u7684\u5377\u79ef\u6838 \u2192 F = 5</li> <li>\u5377\u79ef\u6838\u6df1\u5ea6\u5fc5\u987b\u7b49\u4e8e\u8f93\u5165\u901a\u9053\u6570\uff08\u5982\u8f93\u5165\u662f 3 \u901a\u9053\uff0c\u5377\u79ef\u6838\u6df1\u5ea6\u5c31\u662f 3\uff09</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#3-ppadding","title":"3. \u586b\u5145 P\uff08Padding\uff09","text":"<ul> <li>\u5728\u8f93\u5165\u56fe\u50cf\u7684\u8fb9\u7f18\u8865 0\uff0c\u76ee\u7684\u662f\uff1a</li> <li>\u63a7\u5236\u8f93\u51fa\u5c3a\u5bf8\uff08\u5982\u4fdd\u6301\u8f93\u5165\u8f93\u51fa\u5c3a\u5bf8\u4e00\u81f4\uff09</li> <li>\u9632\u6b62\u8fb9\u7f18\u4fe1\u606f\u4e22\u5931</li> <li>\u5e38\u89c1 padding\uff1a</li> <li><code>P = 0</code>\uff1a\u65e0\u586b\u5145\uff08\"valid\" \u5377\u79ef\uff09</li> <li><code>P = (F - 1)/2</code>\uff1a\u5f53 F \u4e3a\u5947\u6570\u65f6\uff0c\u53ef\u4fdd\u6301\u8f93\u51fa\u5c3a\u5bf8\u4e0d\u53d8\uff08\"same\" \u5377\u79ef\uff09</li> </ul> <p>\ud83d\udccc \u4f8b\u5b50\uff1aF = 5\uff0c\u60f3\u4fdd\u6301\u8f93\u51fa\u5c3a\u5bf8\u4e0d\u53d8 \u2192 P = (5-1)/2 = 2</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#4-sstride","title":"4. \u6b65\u957f S\uff08Stride\uff09","text":"<ul> <li>\u5377\u79ef\u6838\u6bcf\u6b21\u79fb\u52a8\u7684\u6b65\u957f\uff08\u50cf\u7d20\u6570\uff09</li> <li>S = 1\uff1a\u9010\u50cf\u7d20\u6ed1\u52a8\uff08\u6700\u5e38\u89c1\uff09</li> <li>S = 2\uff1a\u8df3\u7740\u6ed1\u52a8\uff0c\u8f93\u51fa\u5c3a\u5bf8\u51cf\u534a\uff0c\u7528\u4e8e\u964d\u91c7\u6837</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_23","title":"\ud83d\udcd8 \u56db\u3001\u4e3e\u4f8b\u8bf4\u660e\uff08\u591a\u4e2a\u573a\u666f\uff09","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#11","title":"\u2705 \u4f8b1\uff1a\u6807\u51c6\u5377\u79ef\uff08\u65e0\u586b\u5145\uff0c\u6b65\u957f\u4e3a1\uff09","text":"<ul> <li>\u8f93\u5165\uff1a32\u00d732\u00d73</li> <li>\u5377\u79ef\u6838\uff1a5\u00d75\uff0c3\u4e2a\uff08\u8f93\u51fa\u901a\u9053=3\uff09</li> <li>Padding\uff1a0</li> <li>Stride\uff1a1</li> </ul> <p>\u8ba1\u7b97\u8f93\u51fa\u5bbd\u5ea6\uff1a</p> \\[ \\text{Output} = \\frac{32 - 5 + 2\u00d70}{1} + 1 = \\frac{27}{1} + 1 = 28 \\] <p>\u2192 \u8f93\u51fa\u5c3a\u5bf8\uff1a28\u00d728\u00d73</p> <p>\ud83e\udde0 \u4e3a\u4ec0\u4e48\u662f 28\uff1f\u56e0\u4e3a 5\u00d75 \u7684\u7a97\u53e3\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u6bcf\u6b21\u79fb\u52a81\u683c\uff0c\u6a2a\u5411\u6700\u591a\u80fd\u653e 28 \u4e2a\u4f4d\u7f6e\uff0832 - 5 + 1 = 28\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#2same-padding","title":"\u2705 \u4f8b2\uff1a\u4f7f\u7528\u586b\u5145\uff08Same Padding\uff09","text":"<ul> <li>\u8f93\u5165\uff1a32\u00d732\u00d73</li> <li>\u5377\u79ef\u6838\uff1a5\u00d75</li> <li>Padding\uff1a2\uff08\u56e0\u4e3a (5-1)/2 = 2\uff09</li> <li>Stride\uff1a1</li> </ul> <p>\u8ba1\u7b97\uff1a</p> \\[ \\text{Output} = \\frac{32 - 5 + 2\u00d72}{1} + 1 = \\frac{32 - 5 + 4}{1} + 1 = \\frac{31}{1} + 1 = 32 \\] <p>\u2192 \u8f93\u51fa\u5c3a\u5bf8\uff1a32\u00d732\u00d73\uff08\u4fdd\u6301\u4e0d\u53d8\uff01\uff09</p> <p>\u2705 \u8fd9\u5c31\u662f \"same convolution\" \u2014\u2014 \u8f93\u51fa\u548c\u8f93\u5165\u7a7a\u95f4\u5c3a\u5bf8\u76f8\u540c\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#3","title":"\u2705 \u4f8b3\uff1a\u5927\u6b65\u957f\uff08\u7528\u4e8e\u964d\u91c7\u6837\uff09","text":"<ul> <li>\u8f93\u5165\uff1a32\u00d732\u00d73</li> <li>\u5377\u79ef\u6838\uff1a3\u00d73</li> <li>Padding\uff1a0</li> <li>Stride\uff1a2</li> </ul> <p>\u8ba1\u7b97\uff1a</p> \\[ \\text{Output} = \\frac{32 - 3 + 0}{2} + 1 = \\frac{29}{2} + 1 = 14.5 \u2192 \\lfloor 14.5 \\rfloor + 1 = 14 + 1 = 15 \\] <p>\u2192 \u8f93\u51fa\u5c3a\u5bf8\uff1a15\u00d715\u00d7?</p> <p>\ud83d\udccc \u6ce8\u610f\uff1a29/2 = 14.5 \u2192 \u5411\u4e0b\u53d6\u6574\u5f97 14 \u2192 +1 = 15</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#4","title":"\u2705 \u4f8b4\uff1a\u4e0d\u80fd\u6574\u9664\u7684\u60c5\u51b5\uff08\u5411\u4e0b\u53d6\u6574\uff09","text":"<ul> <li>\u8f93\u5165\uff1a7\u00d77</li> <li>\u5377\u79ef\u6838\uff1a3\u00d73</li> <li>Padding\uff1a0</li> <li>Stride\uff1a2</li> </ul> \\[ \\text{Output} = \\frac{7 - 3 + 0}{2} + 1 = \\frac{4}{2} + 1 = 2 + 1 = 3 \\] <p>\u2192 \u8f93\u51fa 3\u00d73</p> <p>\u5982\u679c\u8f93\u5165\u662f 8\u00d78\uff1a</p> \\[ \\frac{8 - 3}{2} + 1 = \\frac{5}{2} + 1 = 2.5 \u2192 2 + 1 = 3 \\] <p>\u2192 \u8fd8\u662f 3\u00d73\uff01\u6700\u540e\u534a\u4e2a\u7a97\u53e3\u88ab\u4e22\u5f03\uff08\u56e0\u4e3a\u5411\u4e0b\u53d6\u6574\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_24","title":"\ud83d\uddbc\ufe0f \u4e94\u3001\u56fe\u793a\u601d\u7ef4\uff08\u4ee5\u5bbd\u5ea6\u4e3a\u4f8b\uff09","text":"<p>\u60f3\u8c61\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>W</code> \u7684\u4e00\u7ef4\u4fe1\u53f7\uff0c\u7528\u957f\u5ea6\u4e3a <code>F</code> \u7684\u7a97\u53e3\uff0c\u6bcf\u6b21\u79fb\u52a8 <code>S</code> \u6b65\uff1a</p> <p>\u8f93\u5165: [ 0  1  2  3  4  5  6 ]   (W=7) \u5377\u79ef\u6838\u957f\u5ea6 F=3, S=2, P=0</p> <p>\u4f4d\u7f6e0: [0 1 2] \u2192 \u6709\u6548 \u4f4d\u7f6e1:     [2 3 4] \u2192 \u6709\u6548\uff08\u79fb\u52a82\u6b65\uff09 \u4f4d\u7f6e2:         [4 5 6] \u2192 \u6709\u6548 \u4f4d\u7f6e3:             [6 ? ?] \u2192 \u8d85\u51fa\u8fb9\u754c \u2192 \u505c\u6b62</p> <p>\u2192 \u51713\u4e2a\u4f4d\u7f6e \u2192 \u8f93\u51fa\u957f\u5ea6=3</p> <p>\u516c\u5f0f\u9a8c\u8bc1\uff1a</p> \\[ (7 - 3)/2 + 1 = 4/2 + 1 = 2 + 1 = 3 \u2705 \\]"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_25","title":"\ud83d\udcca \u516d\u3001\u8f93\u51fa\u901a\u9053\u6570\u600e\u4e48\u7b97\uff1f","text":"<p>\u26a0\ufe0f \u6ce8\u610f\uff1a\u7a7a\u95f4\u7ef4\u5ea6 \u2260 \u901a\u9053\u7ef4\u5ea6\uff01</p> <ul> <li>\u7a7a\u95f4\u7ef4\u5ea6\uff08\u5bbd\u3001\u9ad8\uff09\u2192 \u7528\u4e0a\u9762\u516c\u5f0f\u8ba1\u7b97</li> <li>\u901a\u9053\u7ef4\u5ea6\uff08\u6df1\u5ea6\uff09\u2192 \u7b49\u4e8e\u5377\u79ef\u6838\u7684\u6570\u91cf\uff01</li> </ul> <p>\ud83d\udccc \u4f8b\u5b50\uff1a</p> <ul> <li>\u8f93\u5165\uff1a32\u00d732\u00d73</li> <li>\u4f7f\u7528 64 \u4e2a 5\u00d75 \u7684\u5377\u79ef\u6838\uff0c\u6bcf\u4e2a\u6838\u6df1\u5ea6=3\uff08\u5339\u914d\u8f93\u5165\u901a\u9053\uff09</li> <li>\u8f93\u51fa\u901a\u9053\u6570 = 64</li> <li>\u7a7a\u95f4\u5c3a\u5bf8\u6309\u516c\u5f0f\u8ba1\u7b97\uff08\u5982\u524d\u9762\u4f8b1\u5f97 28\u00d728\uff09</li> </ul> <p>\u2192 \u6700\u7ec8\u8f93\u51fa\uff1a28\u00d728\u00d764</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_26","title":"\ud83d\udcdd \u4e03\u3001\u603b\u7ed3\u8868\u683c","text":"\u53c2\u6570 \u7b26\u53f7 \u8bf4\u660e \u8f93\u5165\u5bbd/\u9ad8 W \u5982 32 \u5377\u79ef\u6838\u5927\u5c0f F \u5982 5\uff08\u8868\u793a 5\u00d75\uff09 \u586b\u5145 P \u8fb9\u7f18\u88650\u7684\u6570\u91cf\uff0c\u5982 0, 1, 2 \u6b65\u957f S \u5377\u79ef\u6838\u79fb\u52a8\u6b65\u957f\uff0c\u5982 1, 2 \u8f93\u51fa\u5bbd/\u9ad8 O <code>\u230a(W\u2212F+2P)/S\u230b + 1</code> \u8f93\u51fa\u901a\u9053\u6570 \u2014 \u7b49\u4e8e\u5377\u79ef\u6838\u7684\u6570\u91cf"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_27","title":"\ud83d\udca1 \u516b\u3001\u5b9e\u7528\u6280\u5de7","text":"<ol> <li>\u60f3\u4fdd\u6301\u5c3a\u5bf8\u4e0d\u53d8\uff1f \u2192 \u4f7f\u7528 <code>P = (F - 1)/2</code>\uff08F \u5fc5\u987b\u662f\u5947\u6570\uff09</li> <li>\u60f3\u964d\u91c7\u6837\uff1f \u2192 \u4f7f\u7528 <code>S = 2</code></li> <li>\u9047\u5230\u5c0f\u6570\uff1f \u2192 \u5411\u4e0b\u53d6\u6574\uff0c\u591a\u4f59\u90e8\u5206\u88ab\u4e22\u5f03</li> <li>\u6df1\u5ea6\u4e0d\u53c2\u4e0e\u7a7a\u95f4\u8ba1\u7b97\uff01 \u2192 \u6df1\u5ea6\u7531\u5377\u79ef\u6838\u6570\u91cf\u51b3\u5b9a</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#dilation","title":"\ud83d\ude80 \u4e5d\u3001\u6269\u5c55\uff1a\u5e26 dilation\uff08\u7a7a\u6d1e\u5377\u79ef\uff09\uff1f","text":"<p>\u5982\u679c\u4f60\u9047\u5230\u201c\u7a7a\u6d1e\u5377\u79ef\uff08dilated convolution\uff09\u201d\uff0c\u516c\u5f0f\u4f1a\u53d8\u6210\uff1a</p> \\[ \\text{Output} = \\left\\lfloor \\frac{W - F - (F-1)(D-1) + 2P}{S} \\right\\rfloor + 1 \\] <p>\u5176\u4e2d <code>D</code> \u662f dilation rate\u3002\u4f46\u8fd9\u662f\u8fdb\u9636\u5185\u5bb9\uff0c\u521d\u5b66\u53ef\u5148\u638c\u63e1\u6807\u51c6\u5377\u79ef\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_28","title":"\u6c60\u5316\u64cd\u4f5c","text":"<p>\u7531\u4e8e\u56fe\u50cf\u4e2d\u5b58\u5728\u8f83\u591a\u5197\u4f59\uff0c\u5728\u56fe\u50cf\u5904\u7406\u4e2d\uff0c\u53ef\u7528\u67d0\u4e00\u533a\u57df\u5b50\u5757\u7684\u7edf\u8ba1\u4fe1\u606f\uff08\u5982\u6700\u5927\u503c\u6216\u5747\u503c\u7b49\uff09\u6765\u523b\u753b\u8be5\u533a\u57df\u4e2d\u6240\u6709\u50cf\u7d20\u70b9\u5448\u73b0\u7684\u7a7a\u95f4\u5206\u5e03\u6a21\u5f0f\uff0c\u4ee5\u66ff\u4ee3\u533a\u57df\u5b50\u5757\u4e2d\u6240\u6709\u50cf\u7d20\u70b9\u53d6\u503c\uff0c\u8fd9\u5c31\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u6c60\u5316(pooling)\u64cd\u4f5c\u3002\u6c60\u5316\u64cd\u4f5c\u5bf9\u5377\u79ef\u7ed3\u679c\u7279\u5f81\u56fe\u8fdb\u884c\u7ea6\u51cf\uff0c\u5b9e\u73b0\u4e86\u4e0b\u91c7\u6837\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u7279\u5f81\u56fe\u4e2d\u4e3b\u8981\u4fe1\u606f\u3002</p> <p>\u5bf9\u4e8e\u8f93\u5165\u7684\u6d77\u91cf\u6807\u6ce8\u6570\u636e\uff0c\u901a\u8fc7\u591a\u6b21\u8fed\u4ee3\u8bad\u7ec3\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u82e5\u5e72\u6b21\u5377\u79ef\u64cd\u4f5c\u3001\u63a5\u7740\u5bf9\u5377\u79ef\u6240\u5f97\u7ed3\u679c\u8fdb\u884c\u6fc0\u6d3b\u51fd\u6570\u64cd\u4f5c\u548c\u6c60\u5316\u64cd\u4f5c\u4e0b\uff0c\u6700\u540e\u901a\u8fc7\u5168\u8fde\u63a5\u5c42\u6765\u5b66\u4e60\u5f97\u5230\u8f93\u5165\u6570\u636e\u7684\u7279\u5f81\u8868\u8fbe\uff0c\u5373\u5206\u5e03\u5f0f\u5411\u91cf\u8868\u8fbe(distributed vector representation)\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_29","title":"\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316","text":"<p>\u4e3a\u4e86\u7f13\u89e3\u795e\u7ecf\u7f51\u7edc\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u6b63\u5219\u5316\u6280\u672f\u6765\u63d0\u5347\u795e\u7ecf\u7f51\u7edc\u7684\u6cdb\u5316\u80fd\u529b(generalization)</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#cnn_1","title":"CNN \u7ecf\u5178\u67b6\u6784\u4ecb\u7ecd","text":"CNN \u53d1\u5c55\u91cc\u7a0b\u548c\u7ecf\u5178\u67b6\u6784 <p>\u597d\u7684\uff0c\u6211\u4eec\u6765\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u7684\u53d1\u5c55\u91cc\u7a0b\u548c\u5176\u4e2d\u7684\u7ecf\u5178\u67b6\u6784\u3002CNN\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6700\u91cd\u8981\u7684\u67b6\u6784\u4e4b\u4e00\uff0c\u5c24\u5176\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u53d6\u5f97\u4e86\u9769\u547d\u6027\u7684\u6210\u529f\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_30","title":"\u53d1\u5c55\u91cc\u7a0b\u4e0e\u7ecf\u5178\u67b6\u6784","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#1-lenet-5-1998-","title":"1. LeNet-5 (1998) - \u5f00\u521b\u8005","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aYann LeCun \u7b49\u3002</li> <li>\u91cc\u7a0b\u7891\u610f\u4e49\uff1a\u9996\u4e2a\u6210\u529f\u5e94\u7528\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u7528\u4e8e\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff08\u5982\u94f6\u884c\u652f\u7968\u8bc6\u522b\uff09\u3002</li> <li>\u6838\u5fc3\u7ed3\u6784\uff1a<ul> <li>\u4ea4\u66ff\u7684\u5377\u79ef\u5c42\uff08\u4f7f\u7528Sigmoid\u6fc0\u6d3b\u51fd\u6570\uff09\u548c\u6c60\u5316\u5c42\uff08\u5e73\u5747\u6c60\u5316\uff09\u3002</li> <li>\u6700\u540e\u63a5\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5206\u7c7b\u3002</li> </ul> </li> <li>\u8d21\u732e\uff1a\u5960\u5b9a\u4e86CNN\u201c\u5377\u79ef\u5c42+\u6c60\u5316\u5c42+\u5168\u8fde\u63a5\u5c42\u201d\u7684\u57fa\u672c\u7ed3\u6784\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#2-alexnet-2012-","title":"2. AlexNet (2012) - \u590d\u5174\u8005","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aAlex Krizhevsky \u7b49\u3002</li> <li>\u91cc\u7a0b\u7891\u610f\u4e49\uff1a\u5728ImageNet\u5927\u8d5b\u4e0a\u4ee5\u8fdc\u8d85\u7b2c\u4e8c\u540d\u7684\u6210\u7ee9\u593a\u51a0\uff0c\u5f15\u53d1\u4e86\u6df1\u5ea6\u5b66\u4e60\u9769\u547d\u3002</li> <li>\u6838\u5fc3\u521b\u65b0\uff1a<ul> <li>\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570\uff1a\u89e3\u51b3\u4e86Sigmoid\u5728\u6df1\u5c42\u7f51\u7edc\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u8bad\u7ec3\u901f\u5ea6\u66f4\u5feb\u3002</li> <li>\u4f7f\u7528Dropout\uff1a\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\u4f7f\u7528\uff0c\u6709\u6548\u51cf\u8f7b\u4e86\u8fc7\u62df\u5408\u3002</li> <li>\u4f7f\u7528GPU\u8fdb\u884c\u8bad\u7ec3\uff1a\u8bc1\u660e\u4e86\u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\u5728\u8bad\u7ec3\u6df1\u5ea6\u7f51\u7edc\u4e2d\u7684\u53ef\u884c\u6027\u3002</li> </ul> </li> <li>\u7ed3\u6784\uff1a\u53ef\u4ee5\u770b\u4f5c\u662f\u66f4\u6df1\u3001\u66f4\u5bbd\u7684LeNet\uff0c\u62e5\u67095\u4e2a\u5377\u79ef\u5c42\u548c3\u4e2a\u5168\u8fde\u63a5\u5c42\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#3-vggnet-2014-","title":"3. VGGNet (2014) - \u6df1\u5ea6\u63a2\u7d22\u8005","text":"<ul> <li>\u63d0\u51fa\u8005\uff1a\u725b\u6d25\u5927\u5b66Visual Geometry Group\u3002</li> <li>\u91cc\u7a0b\u7891\u610f\u4e49\uff1a\u63a2\u7d22\u4e86\u7f51\u7edc\u6df1\u5ea6\u4e0e\u6027\u80fd\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7ed3\u6784\u975e\u5e38\u89c4\u6574\u3001\u4f18\u96c5\u3002</li> <li>\u6838\u5fc3\u521b\u65b0\uff1a<ul> <li>\u5c0f\u5377\u79ef\u6838\u5806\u53e0\uff1a\u4f7f\u7528\u8fde\u7eed\u7684\u591a\u4e2a3x3\u5c0f\u5377\u79ef\u6838\u6765\u4ee3\u66ff\u5927\u7684\u5377\u79ef\u6838\uff08\u59825x5, 7x7\uff09\u3002\u4f18\u70b9\uff1a\u5728\u83b7\u5f97\u76f8\u540c\u611f\u53d7\u91ce\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u4e86\u53c2\u6570\u91cf\uff0c\u589e\u52a0\u4e86\u975e\u7ebf\u6027\uff08\u66f4\u591aReLU\u5c42\uff09\u3002</li> <li>\u6784\u5efa\u4e8616-19\u5c42\u7684\u6df1\u5ea6\u7f51\u7edc\uff08VGG16, VGG19\uff09\uff0c\u8bc1\u660e\u4e86\u6df1\u5ea6\u7684\u91cd\u8981\u6027\u3002</li> </ul> </li> <li>\u5f71\u54cd\uff1a\u5176\u5747\u5300\u7684\u7ed3\u6784\u8bbe\u8ba1\u5bf9\u540e\u7eed\u7814\u7a76\u5f71\u54cd\u5f88\u5927\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#4-googlenet-inception-v1-2014-","title":"4. GoogLeNet / Inception v1 (2014) - \u7ed3\u6784\u521b\u65b0\u8005","text":"<ul> <li>\u63d0\u51fa\u8005\uff1aGoogle Research\u3002</li> <li>\u91cc\u7a0b\u7891\u610f\u4e49\uff1a\u83b7\u5f97\u4e862014\u5e74ImageNet\u51a0\u519b\uff0c\u91cd\u70b9\u63d0\u5347\u8ba1\u7b97\u6548\u7387\u3002</li> <li>\u6838\u5fc3\u521b\u65b0\uff1a<ul> <li>Inception\u6a21\u5757\uff1a\u6838\u5fc3\u662f\u4e00\u4e2a\u5e76\u884c\u7ed3\u6784\uff0c\u5728\u540c\u4e00\u5c42\u4e2d\u540c\u65f6\u4f7f\u75281x1\u30013x3\u30015x5\u5377\u79ef\u548c\u6c60\u5316\u64cd\u4f5c\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u62fc\u63a5\u3002\u601d\u60f3\u662f\uff1a\u8ba9\u7f51\u7edc\u81ea\u5df1\u9009\u62e9\u9002\u5408\u7684\u6ee4\u6ce2\u5668\u5927\u5c0f\u3002</li> <li>1x1\u5377\u79ef\uff1a\u7528\u4e8e\u964d\u7ef4\u548c\u5347\u7ef4\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\uff08\u79f0\u4e3a\u201c\u7f51\u7edc\u4e2d\u7684\u7f51\u7edc\u201d\uff09\u3002</li> <li>\u8f85\u52a9\u5206\u7c7b\u5668\uff1a\u5728\u4e2d\u95f4\u5c42\u6dfb\u52a0\u8f85\u52a9\u8f93\u51fa\uff0c\u7528\u4e8e\u8bad\u7ec3\u65f6\u68af\u5ea6\u56de\u4f20\uff0c\u7f13\u89e3\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002</li> </ul> </li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#5-resnet-2015-","title":"5. ResNet (2015) - \u6df1\u5ea6\u7a81\u7834\u8005","text":"<ul> <li>\u63d0\u51fa\u8005\uff1a\u4f55\u607a\u660e \u7b49\uff08Microsoft Research\uff09\u3002</li> <li>\u91cc\u7a0b\u7891\u610f\u4e49\uff1a\u83b7\u5f972015\u5e74ImageNet\u51a0\u519b\uff0c\u89e3\u51b3\u4e86\u6781\u6df1\u7f51\u7edc\u7684\u68af\u5ea6\u6d88\u5931\u548c\u9000\u5316\u95ee\u9898\uff0c\u4f7f\u5f97\u7f51\u7edc\u53ef\u4ee5\u6df1\u8fbe\u4e0a\u767e\u751a\u81f3\u4e0a\u5343\u5c42\u3002</li> <li>\u6838\u5fc3\u521b\u65b0\uff1a<ul> <li>\u6b8b\u5dee\u5757\uff08Residual Block\uff09\uff1a\u5f15\u5165\u8df3\u8dc3\u8fde\u63a5\uff08Shortcut Connection\uff09\u3002\u7f51\u7edc\u4e0d\u518d\u5b66\u4e60\u4e00\u4e2a\u5b8c\u6574\u7684\u8f93\u51fa<code>H(x)</code>\uff0c\u800c\u662f\u5b66\u4e60\u6b8b\u5dee<code>F(x) = H(x) - x</code>\uff0c\u6700\u7ec8\u8f93\u51fa\u4e3a<code>F(x) + x</code>\u3002</li> <li>\u4f18\u52bf\uff1a\u8df3\u8dc3\u8fde\u63a5\u4f7f\u5f97\u68af\u5ea6\u53ef\u4ee5\u76f4\u63a5\u53cd\u5411\u4f20\u64ad\u5230\u524d\u9762\u7684\u5c42\uff0c\u8ba9\u8d85\u6df1\u7f51\u7edc\u7684\u8bad\u7ec3\u6210\u4e3a\u53ef\u80fd\u3002ResNet-152\u53ca\u5176\u53d8\u4f53\u6210\u4e3a\u4e86\u540e\u6765\u8bb8\u591a\u4efb\u52a1\u7684\u5f3a\u5927\u9aa8\u5e72\u7f51\u7edc\u3002</li> </ul> </li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#6","title":"6. \u540e\u7eed\u91cd\u8981\u67b6\u6784\uff08\u7b80\u8981\uff09","text":"<ul> <li>DenseNet (2017)\uff1a\u6bd4ResNet\u66f4\u6781\u7aef\u7684\u8fde\u63a5\uff0c\u6bcf\u4e00\u5c42\u90fd\u76f4\u63a5\u8fde\u63a5\u5230\u5b83\u540e\u9762\u7684\u6240\u6709\u5c42\u3002\u5f3a\u5316\u4e86\u7279\u5f81\u4f20\u64ad\u548c\u590d\u7528\uff0c\u8fdb\u4e00\u6b65\u51cf\u8f7b\u68af\u5ea6\u6d88\u5931\u3002</li> <li>EfficientNet (2019)\uff1a\u4e0d\u518d\u76f2\u76ee\u52a0\u6df1\u3001\u52a0\u5bbd\u7f51\u7edc\u6216\u63d0\u9ad8\u5206\u8fa8\u7387\uff0c\u800c\u662f\u63d0\u51fa\u4e00\u79cd\u590d\u5408\u7f29\u653e\u65b9\u6cd5\uff0c\u540c\u65f6\u5e73\u8861\u7f51\u7edc\u7684\u6df1\u5ea6\u3001\u5bbd\u5ea6\u548c\u8f93\u5165\u5206\u8fa8\u7387\uff0c\u4ee5\u6781\u5c0f\u7684\u8ba1\u7b97\u4ee3\u4ef7\u83b7\u53d6\u6781\u4f73\u7684\u7cbe\u5ea6\u3002</li> <li>Vision Transformer (ViT, 2020)\uff1a\u867d\u7136\u4e0d\u518d\u662f\u7eafCNN\uff0c\u4f46\u5b83\u8868\u660eTransformer\u67b6\u6784\u4ec5\u901a\u8fc7\u81ea\u6ce8\u610f\u529b\u673a\u5236\u4e5f\u80fd\u5728\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e0a\u8fbe\u5230 state-of-the-art \u7684\u6027\u80fd\uff0c\u5f00\u521b\u4e86\u65b0\u7684\u7814\u7a76\u65b9\u5411\u3002</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_31","title":"\u603b\u7ed3\u4e0e\u8d8b\u52bf","text":"\u67b6\u6784 \u6838\u5fc3\u8d21\u732e \u5173\u952e\u5e74\u4efd LeNet-5 CNN\u5960\u57fa\u4e4b\u4f5c 1998 AlexNet \u5f00\u542f\u6df1\u5ea6\u5b66\u4e60\u6d6a\u6f6e 2012 VGGNet \u63a2\u7d22\u7f51\u7edc\u6df1\u5ea6\u4e0e\u89c4\u6574\u5316\u8bbe\u8ba1 2014 GoogLeNet \u5e76\u884c\u7ed3\u6784\uff08Inception\uff09\uff0c\u63d0\u5347\u6548\u7387 2014 ResNet \u8df3\u8dc3\u8fde\u63a5\uff0c\u89e3\u51b3\u6df1\u5ea6\u8bad\u7ec3\u96be\u9898 2015 DenseNet \u5bc6\u96c6\u8fde\u63a5\uff0c\u5f3a\u5316\u7279\u5f81\u590d\u7528 2017 EfficientNet \u6a21\u578b\u7f29\u653e\uff0c\u8ffd\u6c42\u6548\u7387\u4e0e\u7cbe\u5ea6\u5e73\u8861 2019 <p>\u53d1\u5c55\u603b\u4f53\u8d8b\u52bf\uff1a 1.  \u6df1\u5ea6\u4e0d\u65ad\u589e\u52a0\uff1a\u4ece\u51e0\u5c42\uff08LeNet\uff09\u5230\u4e0a\u767e\u5c42\uff08ResNet\uff09\u3002 2.  \u8ba1\u7b97\u6548\u7387\u4e0d\u65ad\u63d0\u9ad8\uff1a\u4eceAlexNet\u7684\u7c97\u66b4\u53c2\u6570\u5316\u5230Inception\u3001ResNet\u7684\u7cbe\u5fc3\u8bbe\u8ba1\uff0c\u53c2\u6570\u91cf\u66f4\u5c11\uff0c\u6027\u80fd\u66f4\u9ad8\u3002 3.  \u8fde\u63a5\u65b9\u5f0f\u4e0d\u65ad\u521b\u65b0\uff1a\u4ece\u7b80\u5355\u7684\u987a\u5e8f\u8fde\u63a5\uff0c\u5230\u8df3\u8dc3\u8fde\u63a5\uff08ResNet\uff09\uff0c\u518d\u5230\u5bc6\u96c6\u8fde\u63a5\uff08DenseNet\uff09\u3002 4.  \u67b6\u6784\u641c\u7d22\u4e0e\u81ea\u52a8\u5316\uff1a\u4ece\u624b\u5de5\u8bbe\u8ba1\u67b6\u6784\uff08AlexNet, VGG, ResNet\uff09\u5230\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u641c\u7d22\uff08NAS\uff09\u81ea\u52a8\u5bfb\u627e\u9ad8\u6548\u67b6\u6784\uff08EfficientNet\uff09\u3002 5.  \u8de8\u8303\u5f0f\u878d\u5408\uff1aCNN\u4e0eTransformer\u7684\u7ed3\u5408\uff08\u5982ViT, Swin Transformer\uff09\u6210\u4e3a\u5f53\u524d\u6700\u524d\u6cbf\u7684\u65b9\u5411\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#rnn","title":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09","text":"<p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Recurrent Neural Network, RNN\uff09\u662f\u4e00\u7c7b\u5904\u7406\u5e8f\u5217\u6570\u636e\uff08\u5982\u6587\u672c\u53e5\u5b50\u3001\u89c6\u9891\u5e27\u7b49\uff09\u65f6\u6240\u91c7\u7528\u7684\u7f51\u7edc\u7ed3\u6784\u3002\u5148\u524d\u6240\u4ecb\u7ecd\u7684\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u6216\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6240\u9700\u8981\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\u4e00\u6b21\u6027\u7ed9\u5b9a\uff0c\u96be\u4ee5\u5904\u7406\u5b58\u5728\u524d\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\u6570\u636e\u3002</p> <p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u672c\u8d28\u662f\u5e0c\u671b\u6a21\u62df\u4eba\u6240\u5177\u6709\u7684\u8bb0\u5fc6\u80fd\u529b\uff0c\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u8bb0\u4f4f\u90e8\u5206\u5df2\u7ecf\u51fa\u73b0\u7684\u4fe1\u606f\uff0c\u5e76\u5229\u7528\u6240\u8bb0\u4f4f\u7684\u4fe1\u606f\u5f71\u54cd\u540e\u7eed\u7ed3\u70b9\u8f93\u51fa\u3002\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff0c\u4f8b\u5982\u8bed\u97f3\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u673a\u5668\u7ffb\u8bd1\u7b49\u9886\u57df\u6709\u91cd\u8981\u5e94\u7528\u3002</p> <p>\u65f6\u523b\\(t\\)\u6240\u5f97\u5230\u7684\u9690\u5f0f\u7f16\u7801\\(h_t\\)\u662f\u7531\u4e0a\u4e00\u65f6\u523b\u9690\u5f0f\u7f16\u7801\\(h_{t-1}\\)\u548c\u5f53\u524d\u8f93\u5165\\(x_t\\)\u5171\u540c\u53c2\u4e0e\u751f\u6210\u7684\uff0c\u8fd9\u53ef\u8ba4\u4e3a\u9690\u5f0f\u7f16\u7801\\(h_{t-1}\\)\u5df2\u7ecf\u201c\u8bb0\u5fc6\u201d\u4e86\\(t\\)\u65f6\u523b\u4e4b\u524d\u7684\u65f6\u5e8f\u4fe1\u606f\uff0c\u6216\u8005\u8bf4\u524d\u5e8f\u65f6\u523b\u4fe1\u606f\u5f71\u54cd\u4e86\u540e\u7eed\u65f6\u523b\u4fe1\u606f\u7684\u5904\u7406\u3002</p> <p>\u4e0e\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u548c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u5904\u7406\u65f6\u9700\u8981\u5c06\u6240\u6709\u6570\u636e\u4e00\u6b21\u6027\u8f93\u5165\u4e0d\u540c\uff0c\u8fd9\u4f53\u73b0\u4e86\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u53ef\u523b\u753b\u5e8f\u5217\u6570\u636e\u5b58\u5728\u65f6\u5e8f\u4f9d\u8d56\u8fd9\u4e00\u91cd\u8981\u7279\u70b9\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#lstm","title":"\u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc\uff08LSTM\uff09","text":"<p>\uff08\u7565\uff09</p> <p>\u4e0e\u7b80\u5355\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u4e0d\u540c\uff0c\u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc\uff08Long Short-Term Memory\uff0cLSTM\uff09\u4e2d\u5f15\u5165\u4e86\u5185\u90e8\u8bb0\u5fc6\u5355\u5143\uff08internal memory cell\uff09\u548c\u95e8\uff08gates\uff09\u4e24\u79cd\u7ed3\u6784\u6765\u5bf9\u5f53\u524d\u65f6\u523b\u8f93\u5165\u4fe1\u606f\u4ee5\u53ca\u524d\u5e8f\u65f6\u523b\u6240\u751f\u6210\u4fe1\u606f\u8fdb\u884c\u6574\u5408\u548c\u4f20\u9012\u3002\u5728\u8fd9\u91cc\uff0c\u5185\u90e8\u8bb0\u5fc6\u5355\u5143\u4e2d\u4fe1\u606f\u53ef\u89c6\u4e3a\u5bf9\u201c\u5386\u53f2\u4fe1\u606f\u201d\u7684\u7d2f\u79ef\u3002</p> <p>\u5e38\u89c1\u7684 LSTM \u6a21\u578b\u4e2d\u6709\u8f93\u5165\u95e8\uff08input gate\uff09\u3001\u9057\u5fd8\u95e8\uff08forget gate\uff09 \u548c \u8f93\u51fa\u95e8\uff08output gate\uff09 \u4e09\u79cd\u95e8\u7ed3\u6784\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5f53\u524d\u65f6\u523b\u8f93\u5165\u6570\u636e\\(x_t\\)\u548c\u524d\u4e00\u65f6\u523b\u9690\u5f0f\u7f16\u7801\\(h_{t-1}\\)\uff0c\u8f93\u5165\u95e8\u3001\u9057\u5fd8\u95e8\u548c\u8f93\u51fa\u95e8\u901a\u8fc7\u5404\u81ea\u53c2\u6570\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\uff0c\u5206\u522b\u5f97\u5230\u4e09\u79cd\u95e8\u7ed3\u6784\u7684\u8f93\u51fa\\(i_t\\)\u3001\\(f_t\\)\u548c\\(o_t\\)\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u518d\u8fdb\u4e00\u6b65\u7ed3\u5408\u524d\u4e00\u65f6\u523b\u5185\u90e8\u8bb0\u5fc6\u5355\u5143\u4fe1\u606f\\(c_{t-1}\\)\u6765\u66f4\u65b0\u5f53\u524d\u65f6\u523b\u5185\u90e8\u8bb0\u5fc6\u5355\u5143\u4fe1\u606f\\(c_t\\)\uff0c\u6700\u7ec8\u5f97\u5230\u5f53\u524d\u65f6\u523b\u7684\u9690\u5f0f\u7f16\u7801\\(h_t\\)\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_32","title":"\u6df1\u5ea6\u751f\u6210\u5b66\u4e60","text":"<p>\uff08\u7565\uff09</p> <p>\u5728\u4e4b\u524d\u7684\u4ecb\u7ecd\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u51fa\u9ad8\u5c42\u8bed\u4e49\u5728\u6570\u636e\u4e2d\u6240\u8574\u542b\u7684\u201c\u6a21\u5f0f\u201d\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u6a21\u5f0f\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u5206\u7c7b\u548c\u68c0\u6d4b\u7b49\uff0c\u8fd9\u79cd\u6a21\u578b\u901a\u5e38\u79f0\u4e3a\u5224\u522b\u6a21\u578b\uff0c\u5224\u522b\u6a21\u578b\u4e0d\u5173\u5fc3\u6570\u636e\u5982\u4f55\u751f\u6210\uff0c\u5b83\u53ea\u5173\u5fc3\u6570\u636e\u8574\u542b\u54ea\u4e9b\u6a21\u5f0f\u4ee5\u53ca\u5982\u4f55\u5c06\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u3002\u4e0e\u4e4b\u76f8\u5bf9\u7684\u6a21\u578b\u7c7b\u578b\u88ab\u79f0\u4e3a\u751f\u6210\u6a21\u578b(generative model)\uff0c\u751f\u6210\u6a21\u578b\u9700\u8981\u5b66\u4e60\u76ee\u6807\u6570\u636e\u7684\u5206\u5e03\u89c4\u5f8b\uff0c\u4ee5\u5408\u6210\u5c5e\u4e8e\u76ee\u6807\u6570\u636e\u7a7a\u95f4\u7684\u65b0\u6570\u636e\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_33","title":"\u751f\u6210\u5bf9\u6297\u7f51\u7edc","text":"<p>\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff08generative adversarial network\uff0cGAN\uff09\u53ef\u89c6\u4e3a\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u76f8\u4e92\u7ade\u4e89\u7684\u96f6\u548c\u6e38\u620f\uff08zero-sumgame\uff09\uff0c\u201c\u4ee5\u5b50\u4e4b\u77db\uff0c\u9677\u5b50\u4e4b\u76fe\u201d\uff0c\u6700\u7ec8\u8fbe\u5230\u7eb3\u4ec0\u5747\u8861\u3002</p> <p>\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u7531\u4e00\u4e2a\u751f\u6210\u5668\uff08generator\uff0c\u7b80\u79f0 G\uff09\u548c\u4e00\u4e2a\u5224\u522b\u5668\uff08discriminator\uff0c\u7b80\u79f0 D\uff09\u7ec4\u6210\u3002GAN \u7684\u6838\u5fc3\u662f\u901a\u8fc7\u751f\u6210\u5668\u548c\u5224\u522b\u5668\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e4b\u95f4\u7684\u7ade\u4e89\u5bf9\u6297\uff0c\u4e0d\u65ad\u63d0\u5347\u5f7c\u6b64\u6c34\u5e73\u4ee5\u4f7f\u5f97\u751f\u6210\u5668\u6240\u751f\u6210\u6570\u636e\uff08\u4eba\u4e3a\u4f2a\u9020\u6570\u636e\uff09\u4e0e\u771f\u5b9e\u6570\u636e\u76f8\u4f3c\uff0c\u5224\u522b\u5668\u65e0\u6cd5\u533a\u5206\u771f\u5b9e\u6570\u636e\u548c\u751f\u6210\u6570\u636e\u3002</p> <p>\u6761\u4ef6\u751f\u6210\u5bf9\u6297\u7f51\u7edc</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2003%20CV/#_34","title":"\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528","text":"<p>\u56fe\u50cf\u5206\u5272\u4e0e\u68c0\u6d4b \u7ecf\u5178 Two-Stage \u65b9\u6cd5\uff1aRCNN -&gt; Fast RCNN -&gt; Faster RCNN -&gt; Mask RCNN</p> <p>\u7ecf\u5178 Single-Stage \u65b9\u6cd5\uff1aYOLO/SOLO</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2004%20mechanics/","title":"\u521a\u4f53\u52a8\u529b\u5b66\u6982\u8ff0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1197 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2004%20mechanics/#_1","title":"\u521a\u4f53\u8fd0\u52a8\u5b66\u6982\u8ff0","text":"<p>e.g.</p> <ul> <li>\u9e1f\u7c7b\u98de\u884c\u96c6\u7fa4\u6a21\u62df\uff1a\u5efa\u6a21\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u5bf9\u98de\u884c\u901f\u5ea6\u548c\u65b9\u5411\u7684\u5173\u7cfb\u3002\u6392\u65a5\u529b\u3001\u4e00\u81f4\u6027\u529b\u3001\u5438\u5f15\u529b</li> <li>\u521a\u4f53\u673a\u5668\u4eba\u6a21\u62df\uff1a\u771f\u5b9e\u7684\u529b\u53cd\u9988</li> </ul> <p>\u521a\u4f53\uff1a\u53ea\u6709\u5e73\u79fb\u548c\u65cb\u8f6c\uff0c\u6ca1\u6709\u5f62\u53d8\uff1b\u4e0d\u4f1a\u76f8\u4e92\u7a7f\u900f</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2004%20mechanics/#_2","title":"\u524d\u5411\u8fd0\u52a8\u5b66","text":"<p>\u5728\u5df2\u77e5\u6240\u6709\u5173\u8282\u7684\u89d2\u5ea6\u548c\u5173\u8282\u4e4b\u95f4\u7684\u957f\u5ea6\u7b49\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u51fa\u672b\u7aef\u6267\u884c\u5668\uff08End-Effector\uff09\u5728\u7a7a\u95f4\u4e2d\u7684\u6700\u7ec8\u4f4d\u7f6e\u548c\u65b9\u5411\u3002</p> <p>\u6b63\u4ea4\u77e9\u9635\uff1a \u5982\u679c\u4e00\u4e2a\u65b9\u9635\u7684\u8f6c\u7f6e\u7b49\u4e8e\u5b83\u7684\u9006\u77e9\u9635\uff0c\u5219\u79f0\u5176\u4e3a\u6b63\u4ea4\u77e9\u9635\u3002\u6bcf\u4e2a\u884c\u5411\u91cf\uff08\u6216\u5217\u5411\u91cf\uff09\u7684\u957f\u5ea6\u4e3a 1\uff0c\u4e0d\u6539\u53d8\u5411\u91cf\u7684\u957f\u5ea6\u548c\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u6b63\u4ea4\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e3a 1 \u6216-1\u3002</p> <p>\u65cb\u8f6c\u77e9\u9635\u662f\u6b63\u4ea4\u77e9\u9635\uff0c\u662f\u4fdd\u8ddd\u53d8\u6362\u3002\uff08\u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u79bb\u5728\u53d8\u6362\u524d\u540e\u4fdd\u6301\u4e0d\u53d8\uff09</p> <p>\u591a\u5173\u8282\u8ba1\u7b97\u672b\u7aef\uff1a</p> <p>\u5df2\u77e5\u6240\u6709\u5173\u8282\u7684\u65cb\u8f6c\\(R_i\\)\uff0c\u6c42\u5c40\u90e8\u5750\u6807\u7cfb\u4f4d\u7f6e\\(x_0\\)\u5728\u5168\u5c40\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\uff1a</p> <p>for i from the root to the end effector:</p> \\[ Q_i=Q_{i-1}R_i \\\\ \\mathbf{p}_{i+1}=\\mathbf{p}_i+Q_i\\mathbf{l}_i \\] <p>\\(\\mathbf{x}=\\mathbf{p}_E+Q_E\\mathbf{x}_0\\)</p> <p>\u5173\u8282\u8fd0\u52a8\u9650\u5236\uff1a</p> <ul> <li>\u8fd0\u52a8\u89d2\u5ea6\uff1a\\(\\theta_{min}\\le\\theta\\le\\theta_{max}\\)</li> <li>\u81ea\u7531\u5ea6\uff08DoF\uff09</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2004%20mechanics/#_3","title":"\u9006\u5411\u8fd0\u52a8\u5b66","text":"<p>\u7ed9\u5b9a\u672b\u7aef\u70b9\u4f4d\u7f6e x\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u5173\u8282\u7684\u65cb\u8f6c\u53c2\u6570\u3002</p> <p>\u8ba1\u7b97\u65b9\u6cd5\uff08e.g.\uff09\uff1a\u6309\u673a\u68b0\u81c2\u957f\u5ea6\u753b\u5706\uff0c\u4ea4\u70b9\u4e3a\u5173\u8282\u4f4d\u7f6e</p> <p>\u4f18\u5316\u6c42\u89e3\uff1a</p> <ul> <li>\u627e\u5230\u66f4\u65b0\u53c2\u6570\u7684\u5408\u7406\u65b9\u5411</li> <li>\u6cbf\u7740\u8be5\u65b9\u5411\u66f4\u65b0\u53c2\u6570\uff0c\u52a0\u5165\u566a\u58f0</li> <li>\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u76f4\u5230\u672b\u7aef\u6267\u884c\u5668\u5230\u8fbe\u6307\u5b9a\u4f4d\u7f6e</li> </ul> <p>\u5faa\u73af\u5750\u6807\u4e0b\u964d\u6cd5\uff1a</p> <p>\u8fed\u4ee3\u65cb\u8f6c\u6bcf\u4e2a\u5173\u8282\uff0c\u4f7f\u672b\u7aef\u6267\u884c\u5668\u4e0e\u5173\u8282\u8fde\u7ebf\u548c\u76ee\u6807\u4e4b\u95f4\u7684\u77e2\u91cf\u5bf9\u9f50\u3002</p> <ol> <li>\u4f18\u5316\u5f53\u524d\u89d2\u5ea6\uff1a\u65cb\u8f6c\u7b2c i \u4e2a\u5173\u8282\uff0c\u4f7f\u5f97 i/n \u8fde\u7ebf\u5c3d\u53ef\u80fd\u6307\u5411\u76ee\u6807\u4f4d\u7f6e</li> <li>\u4e0a\u4e00\u4e2a\u5173\u8282\u4f18\u5316\uff1a\u65cb\u8f6c\u7b2c i-1 \u4e2a\u5173\u8282\uff0c\u4f7f\u5f97 i-1/n \u8fde\u7ebf\u5c3d\u53ef\u80fd\u6307\u5411\u76ee\u6807\u4f4d\u7f6e\u3002\u76f4\u5230\u4f18\u5316\u7b2c 0 \u4e2a\u5173\u8282</li> <li>\u8fed\u4ee3\u4f18\u5316\uff1a\u91cd\u590d\u8fed\u4ee3\u4e0a\u8ff0\u4e24\u6b65</li> </ol> <p>Pros:</p> <ul> <li>\u6613\u4e8e\u5b9e\u73b0\uff0c\u8ba1\u7b97\u5f00\u9500\u5c0f</li> </ul> <p>Cons:</p> <ul> <li>\u53ef\u80fd\u9700\u8981\u5927\u91cf\u8fed\u4ee3\u624d\u80fd\u6536\u655b</li> <li>\u5bf9\u521d\u59cb\u4f4d\u7f6e\u975e\u5e38\u654f\u611f</li> </ul> <p>\u68af\u5ea6\u4e0b\u964d\u6cd5\uff1a</p> <p>\u6839\u636e\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u65b9\u5411\u66f4\u65b0\u53c2\u6570</p> \\[\\theta^{i+1}=\\theta^i-\\alpha\\nabla_{\\theta}F(\\theta^i)\\] <p>Jacobian \u77e9\u9635\uff1a</p> \\[ J=\\frac{\\partial f}{\\partial \\theta} =\\left( \\frac{\\partial f}{\\partial\\theta_0}\\quad\\frac{\\partial f}{\\partial\\theta_1}\\quad   \\cdots \\quad \\frac{\\partial f}{\\partial\\theta_n} \\right) \\] \\[\\theta^{i+1}=\\theta^i-\\alpha J^T\\Delta\\] <p>\u9006\u8fd0\u52a8\u5b66\u65b9\u6cd5\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ol> <li>\u89e3\u6790\u6cd5</li> <li>\u7279\u70b9\uff1a\u95ed\u5f0f\u89e3\u3001\u5168\u5c40\u53ef\u9760\u3001\u5bf9\u5947\u5f02\u6027\u4e0d\u654f\u611f\u3001\u8ba1\u7b97\u4ee3\u4ef7\u4f4e\uff0c\u9002\u5408\u4f4e\u81ea\u7531\u5ea6\u6216\u7ed3\u6784\u89c4\u6574\u7684\u673a\u6784\u4e0e\u89c4\u5212</li> <li>\u5c40\u9650\uff1a\u96be\u4ee5\u6269\u5c55\u5230\u9ad8\u5ea6\u5197\u4f59\u4e0e\u9ad8\u81ea\u7531\u5ea6\u7684\u521a\u4f53\u7cfb\u7edf\uff0c\u5e38\u56e0\u975e\u7ebf\u6027\u4e0e\u53ef\u6269\u5c55\u6027\u4e0d\u8db3\u800c\u4e0d\u9002\u5408\u5927\u89c4\u6a21\u9006\u8fd0\u52a8\u5b66\u95ee\u9898</li> <li>\u6570\u503c\u6cd5</li> <li>Jacobian \u7cfb\u5217\uff1a\u4ee5\u96c5\u53ef\u6bd4\u7ebf\u6027\u5316\u3001\u6b65\u8fdb\u66f4\u65b0\u8bef\u5dee\uff0c\u65b9\u6cd5\u4f53\u7cfb\u5b8c\u5907\u4f46\u6613\u53d7\u5947\u5f02\u6027\u4e0e\u7ebf\u6027\u8fd1\u4f3c\u5f71\u54cd\uff0c\u9700\u8981\u963b\u5c3c\uff0f\u622a\u65ad\u7b49\u7a33\u5b9a\u5316\u7b56\u7565</li> </ol> <p>\u8fdb\u4e00\u6b65\u5b66\u4e60\u9006\u8fd0\u52a8\u5b66\u65b9\u6cd5\uff1a</p> <ol> <li>\u6570\u503c\u6cd5</li> <li>Newton \uff0f\u51c6\u725b\u987f\uff1a\u57fa\u4e8e\u4e8c\u9636\u6cf0\u52d2\u8fd1\u4f3c\u4e0e Hessian \u8fd1\u4f3c\uff0c\u6536\u655b\u8fc7\u7a0b\u5e73\u6ed1\u3001\u6c42\u89e3\u8fc7\u7a0b\u6613\u7eb3\u5165\u7ea6\u675f\u3001\u907f\u514d\u96c5\u53ef\u6bd4\u5947\u5f02\u6027\u3002\u4f46\u6bcf\u6b65\u4ee3\u4ef7\u9ad8\uff0c\u5de5\u7a0b\u5b9e\u73b0\u66f4\u590d\u6742</li> <li>\u542f\u53d1\u5f0f\u6cd5\uff08\u5982\u5faa\u73af\u5750\u6807\u4e0b\u964d\uff09\uff1a\u64cd\u4f5c\u7b80\u5355\u3001\u6536\u655b\u5feb\uff0c\u9002\u5408\u4ea4\u4e92\u63a7\u5236\uff1b\u4f46\u5168\u5c40\u65f6\u7a7a\u4e00\u81f4\u6027\u4e0e\u63a7\u5236\u6d41\u7545\u6027\u8f83\u5f31</li> <li>\u6570\u636e\u9a71\u52a8\u6cd5</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u7528\u9884\u5b66\u4e60\u7684\u59ff\u6001\uff0f\u6982\u7387\u6a21\u578b\u4fdd\u8bc1\u8f93\u51fa\u843d\u5728\u53ef\u884c\u7684\u89e3\u7a7a\u95f4</li> <li>\u6df7\u5408\u6cd5</li> <li>\u5c06\u95ee\u9898\u5206\u89e3\u5e76\u7ed3\u5408\u89e3\u6790\u4e0e\u6570\u503c\u65b9\u6cd5\uff0c\u7cfb\u7edf\u4e0d\u540c\u90e8\u5206\u9009\u7528\u4e0d\u540c\u5b50\u6c42\u89e3\u5668\uff0c\u517c\u987e\u6548\u7387\u4e0e\u8d28\u91cf</li> </ol>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2004%20mechanics/#_4","title":"\u8d28\u70b9\u52a8\u529b\u5b66\u6982\u8ff0","text":"<p>\u7528\u8d28\u70b9\u6027\u8d28\u7814\u7a76\u521a\u4f53\u7684\u8fd0\u52a8\u3002</p> <p>\u79ef\u5206\u96be\u6c42\u89e3\uff1a\u5c06\u65f6\u95f4\u79bb\u6563\u5316</p> <p>\u663e\u5f0f\u79ef\u5206\uff08Explicit Euler\uff09\u548c\u9690\u5f0f\u79ef\u5206\uff08Implicit Euler\uff09</p> <p>\u4ece$ t^{[0]} $ \u5230 $t^{[1]} $ \u5bf9\u51fd\u6570$ v(t) $ \u79ef\u5206\uff0c\u663e\u5f0f\u79ef\u5206\u5c06\u77e9\u5f62\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a$v(t^{[0]}) $ \uff0c\u9690\u5f0f\u79ef\u5206\u5c06\u77e9\u5f62\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a$v(t^{[1]}) $\u3002</p> <p>\u603b\u7ed3\uff08by chatgpt\uff09</p> <p>1. \u663e\u5f0f\u79ef\u5206 (Explicit Integration)</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u4e0b\u4e00\u6b65\u72b6\u6001\u76f4\u63a5\u7531\u5f53\u524d\u72b6\u6001\u8ba1\u7b97\u3002</p> <ul> <li>\u516c\u5f0f\uff08\u524d\u5411\u6b27\u62c9\u6cd5\uff09\uff1a</li> </ul> \\[ x_{n+1} = x_n + \\Delta t \\, f(x_n, t_n) \\] <ul> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u7b80\u5355\uff0c\u901f\u5ea6\u5feb\u3002</p> </li> <li>\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001 \\(x_n\\)\u3002</li> <li> <p>\u5bb9\u6613\u53d1\u6563\uff0c\u7a33\u5b9a\u6027\u5dee\uff0c\u9700\u8981\u5c0f\u65f6\u95f4\u6b65\u957f\uff08\u0394t\uff09\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a\u5b9e\u65f6\u6027\u8981\u6c42\u9ad8\u4f46\u7cbe\u5ea6\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\uff08\u5982\u7b80\u5355\u52a8\u753b\uff09\u3002</p> </li> </ul> <p>2. \u9690\u5f0f\u79ef\u5206 (Implicit Integration)</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u4e0b\u4e00\u6b65\u72b6\u6001\u4f9d\u8d56\u4e0b\u4e00\u6b65\u5bfc\u6570\uff0c\u9700\u8981\u89e3\u65b9\u7a0b\u3002</p> <ul> <li>\u516c\u5f0f\uff08\u540e\u5411\u6b27\u62c9\u6cd5\uff09\uff1a</li> </ul> \\[ x_{n+1} = x_n + \\Delta t \\, f(x_{n+1}, t_{n+1}) \\] <ul> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>\u9700\u8981\u89e3\u9690\u5f0f\u65b9\u7a0b\uff08\u901a\u5e38\u8981\u6c42\u89e3\u7ebf\u6027/\u975e\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff09\u3002</p> </li> <li>\u6570\u503c\u7a33\u5b9a\u6027\u9ad8\uff0c\u53ef\u4ee5\u4f7f\u7528\u8f83\u5927\u65f6\u95f4\u6b65\u957f\u3002</li> <li> <p>\u8ba1\u7b97\u91cf\u5927\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a\u521a\u6027\u7cfb\u7edf\uff08stiff system\uff09\u3001\u7ed3\u6784\u529b\u5b66\u3001\u6709\u9650\u5143\u5206\u6790\u3002</p> </li> </ul> <p>3. \u534a\u9690\u5f0f\u79ef\u5206 (Semi-implicit Integration / Symplectic Euler)</p> <p>\u4ecb\u4e8e\u663e\u5f0f\u4e0e\u9690\u5f0f\u4e4b\u95f4\uff0c\u5e38\u7528\u4e8e\u7269\u7406\u4eff\u771f\u3002</p> <ul> <li>\u516c\u5f0f\uff08\u5e38\u89c1\u5f62\u5f0f\uff09\uff1a   \u5148\u66f4\u65b0\u901f\u5ea6\uff0c\u518d\u66f4\u65b0\u4f4d\u7f6e\uff0c\u4f8b\u5982\uff1a</li> </ul> \\[ v_{n+1} = v_n + \\Delta t \\, f(x_n, v_n) \\\\ x_{n+1} = x_n + \\Delta t \\, v_{n+1} \\] <ul> <li> <p>\u7279\u70b9\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u91cf\u548c\u590d\u6742\u5ea6\u63a5\u8fd1\u663e\u5f0f\u3002</p> </li> <li>\u7a33\u5b9a\u6027\u4f18\u4e8e\u663e\u5f0f\uff0c\u4f46\u4e0d\u5982\u9690\u5f0f\u3002</li> <li> <p>\u4fdd\u6301\u4e00\u5b9a\u80fd\u91cf\u5b88\u6052\u7279\u6027\uff08\u5728\u957f\u65f6\u95f4\u6a21\u62df\u4e2d\u4e0d\u5bb9\u6613\u53d1\u6563\uff09\u3002</p> </li> <li> <p>\u5e94\u7528\uff1a\u6e38\u620f\u7269\u7406\u3001\u7c92\u5b50\u7cfb\u7edf\u3001\u52a8\u529b\u5b66\u4eff\u771f\u3002</p> </li> </ul> <p>\u6b27\u62c9\u89d2\u7684\u6b7b\u9501\u95ee\u9898\uff08\u7565\uff09</p> <p>\u56db\u5143\u6570\uff08\u7565\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/","title":"\u673a\u5668\u4eba\u5bfc\u822a\u89c4\u5212","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 2835 \u4e2a\u5b57\u00a0\u00a09 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u673a\u5668\u4eba\u5bfc\u822a\u89c4\u5212</p> <p>\u5bfc\u822a\u65b9\u5f0f\uff1a</p> <ol> <li>\u6709\u4eba\u5de5\u6807\u8bc6\u5bfc\u5f15\u7684\u56fa\u5b9a\u8def\u7ebf\u5bfc\u822a\uff1a\u78c1\u6761\uff0c\u78c1\u611f\u5e94\u7ebf\uff0c\u78c1\u9489\uff0c\u4e8c\u7ef4\u7801\u2026\u2026</li> <li>\u6709\u4eba\u5de5\u6807\u8bc6\u5bfc\u5f15\u7684\u65e0\u8f68\u5bfc\u822a</li> <li>\u65e0\u4eba\u5de5\u6807\u8bc6\u5bfc\u5f15\u7684\u65e0\u8f68\u5bfc\u822a</li> </ol> <p>\u57fa\u672c\u6982\u5ff5\uff1a</p> <ul> <li>\u5de5\u4f5c\u7a7a\u95f4\uff1a\u79fb\u52a8\u673a\u5668\u4eba\u4e0a\u7684\u53c2\u8003\u70b9\u80fd\u8fbe\u5230\u7684\u7a7a\u95f4\u96c6\u5408\uff0c\u673a\u5668\u4eba\u91c7\u7528\u4f4d\u7f6e\u548c\u59ff\u6001\u63cf\u8ff0\uff0c\u5e76\u9700\u8003\u8651\u4f53\u79ef</li> <li>\u4f4d\u5f62\u7a7a\u95f4\uff1a\u673a\u5668\u4eba\u6210\u4e3a\u4e00\u4e2a\u53ef\u79fb\u52a8\u70b9\uff0c\u4e0d\u8003\u8651\u59ff\u6001\u3001\u4f53\u79ef\u548c\u8fd0\u52a8\u5b66\u7ea6\u675f</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_1","title":"\u5b8c\u5907\u6027","text":"<p>\u8def\u5f84\u89c4\u5212\u65b9\u6cd5\u9700\u8981\u5177\u5907\u5b8c\u5907\u6027\u3002</p> <p>\u5b8c\u5907\u6027\uff1a\u5f53\u89e3\u5b58\u5728\u65f6\uff0c\u80fd\u591f\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u627e\u5230\u89e3</p> <p>\u8def\u5f84\u89c4\u5212\u7b97\u6cd5\u6311\u6218\uff1a\u5728\u8fde\u7eed\u7a7a\u95f4\u5185\u641c\u7d22\uff0c\u96be\u4ee5\u4fdd\u8bc1\u65f6\u95f4</p> <p>\u786e\u4fdd\u5b8c\u5907\u6027\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u57fa\u672c\u601d\u8def\uff1a\u5bf9\u7a7a\u95f4\u4f5c\u79bb\u6563\u5316</li> <li>\u5206\u8fa8\u7387\u5b8c\u5907\uff1a\u89e3\u6790\u6027\u79bb\u6563\u5316\uff0c\u786e\u4fdd\u83b7\u5f97\u53ef\u884c\u89e3</li> <li>\u6982\u7387\u5b8c\u5907\uff1a\u57fa\u4e8e\u6982\u7387\u8fdb\u884c\u968f\u673a\u91c7\u6837\u79bb\u6563\u5316\uff0c\u4f7f\u83b7\u5f97\u89e3\u7684\u6982\u7387\u8d8b\u8fd1\u4e8e 1</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_2","title":"\u8def\u5f84\u89c4\u5212","text":"<p>\u8fde\u901a\u56fe\u4e2d\u641c\u7d22\u6700\u4f18\u8def\u5f84\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u7cbe\u786e\u6700\u4f18\u641c\u7d22\u6cd5\uff1a\u6df1\u5ea6\u4f18\u5148\u6cd5\u3001\u5bbd\u5ea6\u4f18\u5148\u6cd5</li> <li>\u8fd1\u4f3c\u6700\u4f18\u641c\u7d22\u6cd5</li> <li>\u542f\u53d1\u5f0f\u641c\u7d22\u6cd5\uff1a A*, D*</li> <li>\u51c6\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\uff1a\u9000\u706b\u3001\u8fdb\u5316\u548c\u8681\u7fa4\u4f18\u5316\u7b49</li> </ul> <p>\u5206\u8fa8\u7387\u5b8c\u5907\u7684\u8def\u5f84\u89c4\u5212\u65b9\u6cd5\uff1a</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_3","title":"\u884c\u8f66\u56fe\u6cd5","text":"<p>\u57fa\u4e8e\u969c\u788d\u7269\u51e0\u4f55\u5f62\u72b6\u5206\u89e3\u4f4d\u5f62\u7a7a\u95f4\uff0c\u5c06\u81ea\u7531\u7a7a\u95f4\u7684\u8fde\u901a\u6027\u7528\u4e00\u7ef4\u66f2\u7ebf\u7684\u7f51\u683c\u8868\u793a\uff0c\u5728\u52a0\u5165\u8d77\u59cb\u70b9\u548c\u76ee\u6807\u70b9\u540e\uff0c\u5728\u8be5\u4e00\u7ef4\u65e0\u5411\u8fde\u901a\u56fe\u4e2d\u5bfb\u627e\u4e00\u6761\u65e0\u78b0\u8def\u5f84\u3002</p> <p>1. \u53ef\u89c6\u56fe\u6cd5\uff1a\u8fde\u63a5\u6240\u6709\u53ef\u89c1\u9876\u70b9\u5bf9\uff08\u53ef\u89c1\u9876\u70b9\u6307\u4e2d\u95f4\u65e0\u969c\u788d\u7269\uff0c\u521d\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\u4e5f\u4f5c\u4e3a\u9876\u70b9\uff09</p> <ul> <li>\u4f18\u70b9\uff1a</li> <li>\u975e\u5e38\u7b80\u5355\uff0c\u7279\u522b\u662f\u5f53\u73af\u5883\u5730\u56fe\u7528\u591a\u8fb9\u5f62\u63cf\u8ff0\u7269\u4f53\u65f6</li> <li>\u53ef\u5f97\u5230\u5728\u8def\u5f84\u957f\u5ea6\u4e0a\u6700\u4f18\u7684\u89e3</li> <li>\u7f3a\u70b9\uff1a</li> <li>\u6240\u5f97\u8def\u5f84\u8fc7\u4e8e\u9760\u8fd1\u969c\u788d\u7269\uff0c\u4e0d\u591f\u5b89\u5168\u3002</li> </ul> <p>2. Voronoi diagram\uff1a\u53d6\u969c\u788d\u7269\u4e4b\u95f4\u7684\u4e2d\u95f4\u70b9\uff0c\u4ee5\u6700\u5927\u5316\u673a\u5668\u4eba\u548c\u969c\u788d\u7269\u4e4b\u95f4\u7684\u8ddd\u79bb</p> <ul> <li>\u4f18\u70b9\uff1a\u5b89\u5168\u6027\u9ad8</li> <li>\u7f3a\u70b9\uff1a\u8ba1\u7b97\u590d\u6742\u3001\u8def\u5f84\u957f\u5ea6\u8f83\u53ef\u89c6\u56fe\u6cd5\u957f\u3001\u4e0d\u9002\u7528\u4e8e\u77ed\u8ddd\u79bb\u5b9a\u4f4d\u4f20\u611f\u5668</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_4","title":"\u5355\u5143\u5206\u89e3\u6cd5","text":"<ol> <li>\u9996\u5148\uff0c\u5c06\u4f4d\u5f62\u7a7a\u95f4\u4e2d\u7684\u81ea\u7531\u7a7a\u95f4\u5206\u4e3a\u82e5\u5e72\u5c0f\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\uff0c\u4ee5\u5355\u5143\u4e3a\u9876\u70b9\u3001\u4ee5\u5355\u5143\u4e4b\u95f4\u7684\u76f8\u90bb\u5173\u7cfb\u4e3a\u8fb9\u6784\u6210\u4e00\u5f20\u8fde\u901a\u56fe\uff1b</li> <li>\u5176\u6b21\uff0c\u5728\u8fde\u901a\u56fe\u4e2d\u5bfb\u627e\u5305\u542b\u521d\u59cb\u59ff\u6001\u548c\u76ee\u6807\u59ff\u6001\u7684\u5355\u5143\uff0c\u641c\u7d22\u8fde\u63a5\u521d\u59cb\u5355\u5143\u548c\u76ee\u6807\u5355\u5143\u7684\u8def\u5f84\uff1b</li> <li>\u6700\u540e\uff0c\u6839\u636e\u6240\u5f97\u8def\u5f84\u7684\u5355\u5143\u5e8f\u5217\u751f\u6210\u5355\u5143\u5185\u90e8\u7684\u8def\u5f84</li> </ol> <p>1. \u7cbe\u786e\u5355\u5143\u5206\u89e3\uff1a\u5355\u5143\u8fb9\u754c\u4e25\u683c\u57fa\u4e8e\u73af\u5883\u51e0\u4f55\u5f62\u72b6\u5206\u89e3\uff0c\u6240\u5f97\u5355\u5143\u5b8c\u5168\u7a7a\u95f2\u6216\u5b8c\u5168\u88ab\u5360\u3002</p> <ul> <li>\u4f18\u70b9\uff1a</li> <li>\u673a\u5668\u4eba\u4e0d\u9700\u8981\u8003\u8651\u5b83\u5728\u6bcf\u4e2a\u7a7a\u95f2\u5355\u5143\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u8003\u8651\u5982\u4f55\u4ece\u4e00\u4e2a\u5355\u5143\u79fb\u52a8\u5230\u76f8\u90bb\u7684\u7a7a\u95f2\u5355\u5143</li> <li>\u5355\u5143\u6570\u4e0e\u73af\u5883\u5927\u5c0f\u65e0\u5173</li> <li>\u7f3a\u70b9\uff1a</li> <li>\u8ba1\u7b97\u6548\u7387\u6781\u5927\u5730\u4f9d\u8d56\u4e8e\u73af\u5883\u4e2d\u7269\u4f53\u7684\u590d\u6742\u5ea6</li> </ul> <p>2. \u8fd1\u4f3c\u5355\u5143\u5206\u89e3\uff1a\u6805\u683c\u8868\u793a\u6cd5\uff0c\u5c06\u73af\u5883\u5206\u89e3\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u6805\u683c</p> <ul> <li>\u4f18\u70b9</li> <li>\u975e\u5e38\u7b80\u5355\uff0c\u4e0e\u73af\u5883\u7684\u758f\u5bc6\u548c\u7269\u4f53\u5f62\u72b6\u7684\u590d\u6742\u5ea6\u65e0\u5173</li> <li>\u7f3a\u70b9\uff1a</li> <li>\u5bf9\u5b58\u50a8\u7a7a\u95f4\u6709\u8981\u6c42</li> </ul> <p>3. \u4eba\u5de5\u52bf\u573a\u6cd5\uff1a\u76ee\u6807\u70b9\u5bf9\u673a\u5668\u4eba\u4ea7\u751f\u5438\u5f15\u529b\uff0c\u969c\u788d\u7269\u5bf9\u673a\u5668\u4eba\u4ea7\u751f\u6392\u65a5\u529b\uff0c\u6240\u6709\u529b\u7684\u5408\u6210\u6784\u6210\u673a\u5668\u4eba\u7684\u63a7\u5236\u5f8b</p> <p>\u76ee\u6807\u70b9\u5438\u5f15\u52bf\u5b9a\u4e49\u4e3a\uff1a</p> \\[ U_{att}(x) = \\frac{1}{2} K_a \\cdot \\rho_d^2(x) \\] <p>\u5176\u4e2d\uff1a</p> \\[ \\rho_d(x) = \\|x - x_d\\| \\] <ul> <li>\\(K_a\\) \u4e3a\u7cfb\u6570</li> <li>\\(x\\) \u4e3a\u88ab\u8bc4\u4f30\u70b9</li> <li>\\(x_d\\) \u4e3a\u76ee\u6807\u70b9</li> </ul> <p>\u969c\u788d\u7269\uff1a\u6392\u65a5\u52bf\u573a</p> <p>\u5f53\u673a\u5668\u4eba\u9760\u8fd1\u969c\u788d\u7269\u65f6\uff0c\u6392\u65a5\u529b\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u907f\u514d\u78b0\u649e\uff1b \u5f53\u673a\u5668\u4eba\u8fdc\u79bb\u969c\u788d\u7269\u65f6\uff0c\u6392\u65a5\u529b\u5fc5\u987b\u4e0d\u5f71\u54cd\u5176\u8fd0\u52a8\u3002</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#a","title":"A*\u7b97\u6cd5","text":"<p>\uff08\u5f85\u8865\u5145\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_5","title":"\u5730\u56fe\u8868\u793a\u4e0e\u6784\u5efa","text":"<p>\u5730\u56fe\u7684\u8868\u793a\uff1a\u70b9\u4e91\uff0c\u6805\u683c\uff0c\u7279\u5f81\uff0c\u62d3\u6251\uff08\u70b9\u548c\u7ebf\u7684\u5173\u7cfb\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_6","title":"\u70b9\u4e91\u5730\u56fe","text":"<p>\u7ebf\u626b\u6fc0\u5149\u5f97\u5230\u4e8c\u7ef4\u7684\u70b9\uff0c\u4ea4\u53c9\u7ebf\u626b\u63cf\u5f97\u5230\u4e09\u7ef4\u7684\u70b9</p> <p>\u6fc0\u5149+\u89c6\u89c9\uff0c\u5f97\u5230\u5305\u542b\u8ddd\u79bb\u548c\u989c\u8272\u7eb9\u7406\u7684\u70b9\u4e91</p> <p>Cons\uff1a\u91cd\u5efa\u7cbe\u5ea6&lt;&lt;\u626b\u63cf\u7cbe\u5ea6</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_7","title":"\u6805\u683c\u5730\u56fe","text":"<p>\u628a\u73af\u5883\u5212\u5206\u6210\u4e0d\u540c\u6805\u683c\uff0c\u6bcf\u4e2a\u6805\u683c\u6709\u4e00\u4e2a\u503c\uff0c\u8868\u793a\u5f53\u524d\u6805\u683c\u88ab\u5360\u7528\u7684\u60c5\u51b5\u3002\u6805\u683c\u5212\u5206\u8d8a\u7ec6\uff0c\u5206\u8fa8\u7387\u8d8a\u5927\u3002</p> <p>\u5730\u56fe\u8868\u793a\u4e3a M={m0,m1...}\uff0cmi \u8868\u793a\u7b2c i \u4e2a\u6805\u683c\u88ab\u5360\u7528\u7684\u60c5\u51b5\uff0c\u53d6 0 \u6216 1</p> <p>\u6805\u683c\u5212\u5206\u66f4\u7ec6\u540e\u5b58\u50a8\u7a7a\u95f4\u7206\u70b8 \u964d\u4f4e\u5b58\u50a8\u7a7a\u95f4\u7684\u65b9\u6cd5\uff1a\u4e0d\u60f3\u8981\u5730\u65b9\u7684\u6805\u683c\u5408\u5e76\uff1b\u5982\u679c\u60f3\u8981\u63d0\u9ad8\u5206\u8fa8\u7387\uff0c\u5c06\u5927\u7684\u6805\u683c\u5212\u5206\u3002\u901a\u8fc7\u5206\u8fa8\u7387\u53ef\u53d8\u6765\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\u7684\u8981\u6c42\u3002 \u56db\u53c9\u6811\uff08\u4e8c\u7ef4\uff09/\u516b\u53c9\u6811\uff08\u4e09\u7ef4\uff09</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_8","title":"\u7279\u5f81\u5730\u56fe","text":"<p>\u6807\u8bb0\u5bfc\u822a\u8def\u5f84\u6709\u5173\u7684\u7279\u5f81\u70b9\uff08\u9646\u6807\uff09</p> <p>\u53d1\u5c55\u8d8b\u52bf\uff1a\u4e8c\u7ef4\u7279\u5f81+\u9ad8\u5ea6\u4fe1\u606f</p> <p>Cons\uff1a\u65e0\u6cd5\u7cbe\u786e\u8868\u793a</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_9","title":"\u62d3\u6251\u5730\u56fe","text":"<p>\u628a\u73af\u5883\u8868\u793a\u4e3a\u5e26\u8282\u70b9\u548c\u76f8\u5173\u8fde\u63a5\u7ebf\u7684\u62d3\u6251\u7ed3\u6784</p> <p>Pros\uff1a\u6613\u4e8e\u6269\u5c55\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5feb\u901f\u8def\u5f84\u89c4\u5212 Cons\uff1a\u7531\u4e8e\u4fe1\u606f\u7684\u62bd\u8c61\u6027\uff0c\u4f7f\u5f97\u673a\u5668\u4eba\u96be\u4ee5\u5b9e\u73b0\u7cbe\u786e\u53ef\u9760\u7684\u81ea\u5b9a\u4f4d</p> <p>\u5730\u56fe\u8868\u793a\u7684\u7814\u7a76\u8d8b\u52bf\uff1a</p> <p>\u6df7\u5408\u5730\u56fe\uff0c\u8bed\u4e49\u5730\u56fe\uff0c\u591a\u91cd\u5730\u56fe</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_10","title":"\u91cc\u7a0b\u4f30\u8ba1","text":"<p>\u91cc\u7a0b\u4f30\u8ba1\uff1a\u8f93\u5165\u4f20\u611f\u5668\u611f\u77e5\u6570\u636e\uff0c\u8f93\u51fa\u79fb\u52a8\u673a\u5668\u4eba\u4f4d\u59ff\u53d8\u5316</p> <ul> <li>\u8f6e\u5f0f\u7f16\u7801\u5668\uff1a\u8bb0\u5f55\u8f6e\u5b50\u8f6c\u52a8\u7684\u5708\u6570</li> <li>\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff1a\u6d4b\u901f\u5ea6\u3001\u52a0\u901f\u5ea6</li> <li>\u591a\u4fe1\u606f\u878d\u5408\u91cc\u7a0b\u4f30\u8ba1</li> <li>\u2026\u2026</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_11","title":"\u57fa\u4e8e\u7535\u673a\u7801\u76d8\u7684\u8f6e\u5f0f\u673a\u5668\u4eba\u91cc\u7a0b\u4f30\u8ba1","text":"<p>\u6839\u636e\u7535\u673a\u7801\u76d8\u83b7\u5f97\u8f6e\u5b50\u8f6c\u901f</p> <p>\u7d2f\u8ba1\u8bef\u5dee\u968f\u7740\u65f6\u95f4\u9010\u6e10\u589e\u5927 \u5728\u7279\u5b9a\u4f4d\u7f6e\u653e\u53c2\u7167\u70b9\uff0c\u7528\u4f20\u611f\u5668\u83b7\u53d6\u53c2\u7167\u70b9\u5e76\u6821\u6b63</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#imu","title":"\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff08IMU\uff09\u91cc\u7a0b\u4f30\u8ba1","text":"<p>\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\uff08\u6709\u65f6\u8fd8\u6709\u78c1\u529b\u8ba1\uff09 \u6d4b\u91cf\u52a0\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\uff0c\u7528\u4e8e\u4f30\u7b97\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u548c\u59ff\u6001\uff0c\u4e3a\u5bfc\u822a\u3001\u5e73\u8861\u3001\u8fd0\u52a8\u63a7\u5236\u63d0\u4f9b\u5173\u952e\u6570\u636e</p>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_12","title":"\u6fc0\u5149\u91cc\u7a0b\u4f30\u8ba1","text":"<p>\u6c42\u89e3\u4e24\u4e2a\u76f8\u90bb\u65f6\u523b\u7684\u76f8\u5bf9\u4f4d\u59ff\uff0c\u5c06 t2 \u7684\u626b\u63cf\u5730\u56fe\u878d\u5408\u5230\u5168\u5c40\u5730\u56fe</p> <p>\u8fed\u4ee3\u6700\u8fd1\u70b9\u7b97\u6cd5\uff08ICP\uff09</p> <ol> <li> <p>\u6700\u8fd1\u70b9\u5339\u914d</p> </li> <li> <p>\u4e3a\u6e90\u70b9\u4e91\u7684\u6bcf\u4e2a\u70b9\u627e\u5230\u76ee\u6807\u70b9\u4e91\u4e2d\u6700\u8fd1\u7684\u5bf9\u5e94\u70b9\u3002</p> </li> <li> <p>\u8ba1\u7b97\u53d8\u6362</p> </li> <li> <p>\u57fa\u4e8e\u5bf9\u5e94\u70b9\u5bf9\uff0c\u8ba1\u7b97\u6700\u4f73\u65cb\u8f6c\u77e9\u9635\u548c\u5e73\u79fb\u5411\u91cf\uff08\u6700\u5c0f\u5316\u8ddd\u79bb\u8bef\u5dee\uff09\u3002</p> </li> <li> <p>\u5e94\u7528\u53d8\u6362</p> </li> <li> <p>\u5c06\u6e90\u70b9\u4e91\u6309\u7167\u8ba1\u7b97\u51fa\u7684\u53d8\u6362\u8fdb\u884c\u66f4\u65b0\u3002</p> </li> <li> <p>\u91cd\u590d\u8fed\u4ee3</p> </li> <li> <p>\u76f4\u5230\u8bef\u5dee\u6536\u655b\u6216\u8fbe\u5230\u6700\u5927\u8fed\u4ee3\u6b21\u6570\u3002</p> </li> </ol> <p>R\uff0ct \u6c42\u89e3\uff08by gpt\uff09\uff1a</p> <p>R\uff0ct \u5206\u89e3\u7b97\u6cd5\u4e3b\u8981\u7528\u4e8e\u4ece\u4e24\u4e2a\u5750\u6807\u7cfb\u4e0b\u7684\u4e00\u7ec4\u5bf9\u5e94\u70b9\u4e2d\uff0c\u6c42\u51fa\u521a\u4f53\u53d8\u6362\u7684\u65cb\u8f6c\u77e9\u9635 R \u548c \u5e73\u79fb\u5411\u91cf t\uff0c\u4f7f\u4e24\u7ec4\u70b9\u5c3d\u53ef\u80fd\u91cd\u5408\u3002\u8fd9\u662f \u521a\u4f53\u914d\u51c6 (Rigid Registration) \u7684\u6838\u5fc3\u6b65\u9aa4\uff0c\u4e5f\u7528\u4e8e \u76f8\u673a\u5916\u53c2\u4f30\u8ba1\u3001SLAM\u30013D \u91cd\u5efa \u7b49\u3002</p> <p>\u7b97\u6cd5\u6b65\u9aa4\uff08\u7ecf\u5178\u65b9\u6cd5\uff1a\u57fa\u4e8e SVD \u5206\u89e3\uff09</p> <p>\u7ed9\u5b9a\u4e24\u7ec4\u5bf9\u5e94\u70b9\uff1a</p> <ul> <li>\u6e90\u70b9\u96c6 \\(P = \\{p_i\\}_{i=1}^N\\)</li> <li>\u76ee\u6807\u70b9\u96c6 \\(Q = \\{q_i\\}_{i=1}^N\\)</li> </ul> <p>\u76ee\u6807\uff1a\u627e\u5230 \\(R, t\\) \u4f7f\u5f97\uff1a</p> \\[ q_i \\approx R p_i + t \\] <p>1. \u8ba1\u7b97\u8d28\u5fc3</p> \\[ \\bar{p} = \\frac{1}{N} \\sum_{i=1}^N p_i, \\quad \\bar{q} = \\frac{1}{N} \\sum_{i=1}^N q_i \\] <p>2. \u53bb\u4e2d\u5fc3\u5316</p> <p>\u5c06\u4e24\u7ec4\u70b9\u5e73\u79fb\u5230\u4ee5\u8d28\u5fc3\u4e3a\u539f\u70b9\uff1a</p> \\[ p'_i = p_i - \\bar{p}, \\quad q'_i = q_i - \\bar{q} \\] <p>3. \u8ba1\u7b97\u534f\u65b9\u5dee\u77e9\u9635</p> \\[ H = \\sum_{i=1}^N p'_i {q'_i}^\\top \\] <p>4. \u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09</p> <p>\u5bf9 \\(H\\) \u8fdb\u884c SVD \u5206\u89e3\uff1a</p> \\[ H = U \\Sigma V^\\top \\] <p>5. \u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635 R</p> \\[ R = V U^\\top \\] <p>\u82e5 \\(\\det(R) &lt; 0\\)\uff0c\u5219\u4fee\u6b63\uff1a</p> \\[ V[:, -1] = -V[:, -1], \\quad R = V U^\\top \\] <p>6. \u8ba1\u7b97\u5e73\u79fb\u5411\u91cf t</p> \\[ t = \\bar{q} - R \\bar{p} \\] <p>\u7279\u70b9</p> <ul> <li>\u9c81\u68d2\u6027\u597d\uff1a\u5728\u65e0\u566a\u58f0\u65f6\u80fd\u7cbe\u786e\u6c42\u89e3</li> <li>\u8ba1\u7b97\u6548\u7387\u9ad8\uff1a\u4e3b\u8981\u8ba1\u7b97\u91cf\u5728 SVD</li> <li>\u8be5\u65b9\u6cd5\u662f ICP\uff08\u8fed\u4ee3\u6700\u8fd1\u70b9\uff09 \u4e2d\u6bcf\u8f6e\u66f4\u65b0 R,t \u7684\u6807\u51c6\u6b65\u9aa4</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#_13","title":"\u89c6\u89c9\u91cc\u7a0b\u4f30\u8ba1","text":"<p>\u68c0\u6d4b\u7531\u8fd0\u52a8\u5bfc\u81f4\u7684\u56fe\u50cf\u53d8\u5316</p> <p>VO \u95ee\u9898\u6c42\u89e3</p> <p>\u57fa\u4e8e\u56fe\u50cf\uff1a</p> <ul> <li>\u5229\u7528\u4e24\u5e45\u56fe\u50cf\u4e2d\u6240\u6709\u9650\u901f\u7684\u4eae\u5ea6\u4fe1\u606f</li> <li>\u8ba1\u7b97\u91cf\u5927\uff0c\u7cbe\u5ea6\u4f4e</li> </ul> <p>\u57fa\u4e8e\u7279\u5f81\uff1a</p> <ul> <li>\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\u9192\u76ee\u7684\u3001\u53ef\u91cd\u590d\u7684\u7279\u5f81</li> <li>\u8981\u6c42\u4e24\u5e27\u4e4b\u95f4\u9c81\u68d2\u5339\u914d\u6216\u8ddf\u8e2a\u7279\u5f81</li> </ul> <p>\u7279\u5f81\u5339\u914d (by gpt)</p> <p>\u4ec0\u4e48\u662f\u5149\u6d41\uff08Optical Flow\uff09\uff1f</p> <p>\u5149\u6d41\u5c31\u662f\u7269\u4f53\u5728\u76f8\u90bb\u4e24\u5e27\u56fe\u50cf\u4e2d\u7684\u79fb\u52a8\u8f68\u8ff9\u3002 \u7b80\u5355\u8bf4\uff1a\u540c\u4e00\u4e2a\u70b9\uff0c\u4ece\u8fd9\u4e00\u5e27\u5230\u4e0b\u4e00\u5e27\uff0c\u8dd1\u5230\u54ea\u53bb\u4e86\uff1f</p> <p>\u5149\u6d41\u6cd5\u7684\u7279\u5f81\u5339\u914d\u662f\u4ec0\u4e48\uff1f</p> <ul> <li>\u5149\u6d41\u5e76\u4e0d\u662f\u201c\u51ed\u7a7a\u7b97\u51fa\u6765\u7684\u201d\uff0c\u5b83\u662f\u57fa\u4e8e\u7279\u5f81\u70b9\uff08\u660e\u663e\u7684\u5c0f\u89d2\u843d\u3001\u4eae\u70b9\uff09\u6765\u8ddf\u8e2a\u7684\u3002</li> <li>\u7279\u5f81\u5339\u914d\u5c31\u662f\uff1a\u627e\u5230\u7b2c\u4e00\u5e27\u4e2d\u7684\u7279\u5f81\u70b9\uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u5e27\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002</li> </ul> <p>\u5e38\u89c1\u65b9\u6cd5\uff1a\u7a00\u758f\u5149\u6d41\uff08\u4ee5 Lucas\u2013Kanade \u4e3a\u4f8b\uff09</p> <ol> <li> <p>\u9009\u53d6\u7279\u5f81\u70b9</p> </li> <li> <p>\u5148\u7528\u50cf Harris \u6216 Shi-Tomasi \u7b97\u6cd5\u627e\u201c\u89d2\u70b9\u201d\uff08\u8fd9\u4e9b\u70b9\u5728\u56fe\u50cf\u4e2d\u6700\u660e\u663e\u3001\u6700\u7a33\u5b9a\uff09\u3002</p> </li> <li> <p>\u5728\u4e0b\u4e00\u5e27\u5bfb\u627e\u8fd9\u4e9b\u70b9</p> </li> <li> <p>\u5047\u8bbe\u4e24\u5e27\u65f6\u95f4\u5f88\u8fd1\uff0c\u70b9\u7684\u8fd0\u52a8\u5f88\u5c0f\u3002</p> </li> <li> <p>\u5728\u8be5\u70b9\u9644\u8fd1\u627e\u4e00\u5c0f\u5757\u56fe\u50cf\u7a97\u53e3\uff0c\u8ba1\u7b97\u4eae\u5ea6\u53d8\u5316\u3002</p> </li> <li> <p>\u8ba1\u7b97\u4f4d\u79fb\uff08dx, dy\uff09</p> </li> <li> <p>\u5047\u8bbe\u4eae\u5ea6\u4e0d\u53d8\uff08\u4eae\u7684\u8fd8\u662f\u4eae\uff0c\u6697\u7684\u8fd8\u662f\u6697\uff09\uff0c\u901a\u8fc7\u7ebf\u6027\u65b9\u7a0b\u6c42\u89e3\u4f4d\u79fb\u3002</p> </li> <li> <p>\u5f97\u5230\u5149\u6d41\u5411\u91cf</p> </li> <li> <p>\u6bcf\u4e2a\u7279\u5f81\u70b9\u5c31\u6709\u4e00\u4e2a\u7bad\u5934\uff1a\u4ece\u7b2c\u4e00\u5e27\u7684\u4f4d\u7f6e\uff0c\u6307\u5411\u7b2c\u4e8c\u5e27\u627e\u5230\u7684\u4f4d\u7f6e\u3002</p> </li> </ol> <p>\u7279\u5f81\u5339\u914d\u548c\u5149\u6d41\u7684\u5173\u7cfb</p> <ul> <li>\u5149\u6d41\u6cd5\u662f\u4e00\u79cd\u7279\u5f81\u8ddf\u8e2a\u65b9\u5f0f\u3002</li> <li>\u5b83\u4e0d\u4e00\u5b9a\u8ba1\u7b97\u6574\u5f20\u56fe\uff08\u90a3\u53eb\u7a20\u5bc6\u5149\u6d41\uff09\uff0c\u800c\u662f\u53ea\u5bf9\u7279\u5f81\u70b9\u505a\u5339\u914d\uff08\u7a00\u758f\u5149\u6d41\uff09\u3002</li> <li> <p>\u548c SIFT/ORB \u7b49\u7279\u5f81\u5339\u914d\u7684\u533a\u522b\u662f\uff1a</p> </li> <li> <p>SIFT/ORB\uff1a\u627e\u5173\u952e\u70b9+\u63cf\u8ff0\u5b50+\u5339\u914d \u2192 \u9002\u5408\u5927\u5c3a\u5ea6\u53d8\u5316</p> </li> <li>\u5149\u6d41\uff1a\u8ddf\u8e2a\u5c40\u90e8\u5c0f\u8303\u56f4\u8fd0\u52a8 \u2192 \u66f4\u5feb\uff0c\u9002\u5408\u89c6\u9891\u9010\u5e27\u8ddf\u8e2a</li> </ul>"},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#slam","title":"\u540c\u65f6\u5b9a\u4f4d\u53ca\u5efa\u56fe\uff08SLAM\uff09","text":""},{"location":"CourseNotes/robot%20control/theoretical/lec%2005%20motion/#map","title":"\u57fa\u4e8e\u6700\u5927\u540e\u9a8c\u4f30\u8ba1\uff08MAP\uff09","text":"<p>(by gpt)</p> <p>1. \u4ec0\u4e48\u662f MAP-SLAM\uff1f</p> <ul> <li>SLAM \u7684\u76ee\u6807\uff1a\u673a\u5668\u4eba\u5728\u672a\u77e5\u73af\u5883\u4e2d \u4e00\u8fb9\u79fb\u52a8\uff0c\u4e00\u8fb9\u540c\u65f6\u6784\u5efa\u5730\u56fe\u548c\u786e\u5b9a\u81ea\u8eab\u4f4d\u7f6e\u3002</li> <li>MAP\uff08Maximum a Posteriori\uff09\uff1a\u6700\u5927\u540e\u9a8c\u4f30\u8ba1\uff0c\u610f\u601d\u662f\u5728\u6240\u6709\u53ef\u80fd\u7684\u5730\u56fe\u548c\u8f68\u8ff9\u4e2d\uff0c\u9009\u62e9\u6700\u53ef\u80fd\u7684\u90a3\u4e2a\u3002</li> <li>\u6362\u53e5\u8bdd\u8bf4\uff1a\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u7ec4 \u673a\u5668\u4eba\u4f4d\u7f6e\u8f68\u8ff9 X \u548c \u5730\u56fe M\uff0c\u4f7f\u5f97\u5b83\u4eec \u6700\u7b26\u5408\u89c2\u6d4b\u6570\u636e Z \u548c \u63a7\u5236\u8f93\u5165 U\u3002</li> </ul> <p>\u6570\u5b66\u4e0a\uff1a</p> \\[ (X^*, M^*) = \\arg\\max_{X,M} P(X, M \\mid Z, U) \\] <ul> <li>\\(X\\) \uff1a\u673a\u5668\u4eba\u5404\u65f6\u523b\u4f4d\u59ff</li> <li>\\(M\\) \uff1a\u5730\u56fe\uff08\u7279\u5f81\u70b9\u3001\u6805\u683c\u7b49\uff09</li> <li>\\(Z\\) \uff1a\u89c2\u6d4b\u6570\u636e\uff08\u5982\u6fc0\u5149\u3001\u76f8\u673a\uff09</li> <li>\\(U\\) \uff1a\u63a7\u5236\u91cf\uff08\u5982\u8f6e\u901f\u3001\u8235\u89d2\uff09</li> </ul> <p>2. MAP-SLAM \u7684\u6838\u5fc3\u601d\u60f3</p> <ol> <li> <p>\u5efa\u7acb\u6982\u7387\u6a21\u578b</p> </li> <li> <p>\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u63cf\u8ff0 SLAM\uff1a</p> </li> </ol> \\[ P(X, M | Z, U) \\propto P(Z | X, M) \\, P(X | U) \\, P(M) \\] <ul> <li>\\(P(Z|X,M)\\)\uff1a\u89c2\u6d4b\u6a21\u578b\uff08\u4f20\u611f\u5668\u6d4b\u91cf\u6982\u7387\uff09</li> <li>\\(P(X|U)\\)\uff1a\u8fd0\u52a8\u6a21\u578b\uff08\u673a\u5668\u4eba\u5982\u4f55\u79fb\u52a8\uff09</li> <li> <p>\\(P(M)\\)\uff1a\u5730\u56fe\u5148\u9a8c\uff08\u901a\u5e38\u5047\u8bbe\u5747\u5300\u5206\u5e03\uff09</p> </li> <li> <p>\u6700\u5927\u540e\u9a8c\u4f30\u8ba1</p> </li> <li> <p>\u627e\u51fa\u6700\u53ef\u80fd\u7684\u5730\u56fe\u548c\u8f68\u8ff9\uff0c\u4f7f\u6574\u4e2a\u7cfb\u7edf\u7684\u4f3c\u7136\u6700\u5927\u5316\uff1a</p> </li> </ul> <p>$$    (X^, M^) = \\arg\\max P(Z|X,M) P(X|U)    $$</p> <ol> <li> <p>\u8fed\u4ee3\u4f18\u5316</p> </li> <li> <p>\u521d\u59cb\u4f4d\u59ff\u548c\u5730\u56fe\u53ef\u80fd\u4e0d\u51c6\u786e\u3002</p> </li> <li>\u901a\u8fc7 \u975e\u7ebf\u6027\u4f18\u5316\uff08\u5982\u9ad8\u65af-\u725b\u987f\u3001Levenberg-Marquardt\uff09 \u4e0d\u65ad\u8c03\u6574 X \u548c M\u3002</li> <li>\u76ee\u6807\u662f\u8ba9\u9884\u6d4b\u89c2\u6d4b\u503c\u548c\u5b9e\u9645\u89c2\u6d4b\u503c\u5c3d\u53ef\u80fd\u63a5\u8fd1\u3002</li> </ol> <p>3. MAP-SLAM \u7684\u6d41\u7a0b\uff08\u76f4\u89c2\u7248\uff09</p> <ol> <li>\u521d\u59cb\u5316\uff1a\u673a\u5668\u4eba\u8d77\u70b9\u4f4d\u7f6e\u5df2\u77e5\u6216\u5047\u8bbe\u4e3a\u539f\u70b9\uff0c\u5730\u56fe\u4e3a\u7a7a\u3002</li> <li>\u9884\u6d4b\uff1a\u6839\u636e\u63a7\u5236\u8f93\u5165 \\(U\\)\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2a\u4f4d\u59ff\u3002</li> <li>\u89c2\u6d4b\u66f4\u65b0\uff1a\u83b7\u53d6\u4f20\u611f\u5668\u6570\u636e \\(Z\\)\uff0c\u8ba1\u7b97\u9884\u6d4b\u4f4d\u7f6e\u548c\u5b9e\u9645\u89c2\u6d4b\u7684\u5dee\u5f02\u3002</li> <li>\u6784\u5efa\u540e\u9a8c\u6982\u7387\uff1a\u628a\u8fd0\u52a8\u6a21\u578b\u548c\u89c2\u6d4b\u6a21\u578b\u7ed3\u5408\uff0c\u5f62\u6210\u6700\u5927\u540e\u9a8c\u6982\u7387\u3002</li> <li>\u4f18\u5316\uff1a\u8c03\u6574\u673a\u5668\u4eba\u8f68\u8ff9\u548c\u5730\u56fe\uff0c\u4f7f\u540e\u9a8c\u6982\u7387\u6700\u5927\u3002</li> <li>\u8fed\u4ee3\uff1a\u91cd\u590d\u9884\u6d4b \u2192 \u89c2\u6d4b \u2192 \u4f18\u5316\uff0c\u9010\u6b65\u751f\u6210\u7cbe\u786e\u8f68\u8ff9\u548c\u5730\u56fe\u3002</li> </ol> <p>4. \u5e38\u7528\u5b9e\u73b0\u65b9\u6cd5</p> <ul> <li> <p>\u56fe\u4f18\u5316\u65b9\u6cd5\uff08Graph-based SLAM\uff09</p> </li> <li> <p>\u628a\u6bcf\u4e2a\u4f4d\u59ff\u5f53\u4f5c\u8282\u70b9\uff0c\u89c2\u6d4b\u7ea6\u675f\u5f53\u4f5c\u8fb9\u3002</p> </li> <li> <p>\u7528\u975e\u7ebf\u6027\u4f18\u5316\u6c42\u89e3\u6574\u4e2a\u56fe\u7684\u6700\u4f18\u5e03\u5c40 \u2192 \u7b49\u4ef7\u4e8e MAP\u3002</p> </li> <li> <p>\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\uff08EKF-SLAM\uff09</p> </li> <li> <p>\u5728\u7ebf\u9012\u63a8\u4f30\u8ba1\u5730\u56fe\u548c\u4f4d\u59ff\u3002</p> </li> <li>\u4e5f\u53ef\u4ee5\u770b\u4f5c\u5bf9 MAP \u7684\u9ad8\u65af\u8fd1\u4f3c\u3002</li> </ul> <p>5. \u603b\u7ed3</p> <p>MAP-SLAM \u7684\u6838\u5fc3\u662f\uff1a\u5728\u6240\u6709\u53ef\u80fd\u7684\u673a\u5668\u4eba\u8f68\u8ff9\u548c\u5730\u56fe\u4e2d\uff0c\u9009\u62e9\u6700\u53ef\u80fd\u89e3\u91ca\u89c2\u6d4b\u6570\u636e\u7684\u4e00\u7ec4\u3002 \u5b83\u5c06 SLAM \u95ee\u9898\u8f6c\u5316\u4e3a \u6982\u7387\u5efa\u6a21 + \u4f18\u5316\u95ee\u9898\uff0c\u901a\u8fc7\u8fed\u4ee3\u4e0d\u65ad\u4fee\u6b63\u4f4d\u59ff\u548c\u5730\u56fe\uff0c\u4f7f\u9884\u6d4b\u4e0e\u89c2\u6d4b\u5c3d\u91cf\u4e00\u81f4\u3002</p>"},{"location":"NoflowersNotes/Noflower_index/","title":"\u6249\u9875","text":"<ul> <li> <p>Frontispiece</p> <p>\u300c\u5c71\u65e0\u6570 \u4e71\u7ea2\u5982\u96e8  \u4e0d\u8bb0\u6765\u65f6\u8def\u300d</p> </li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/","title":"Intro & K-NN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/#ways-to-compare-images","title":"Ways to compare images","text":"<ul> <li>L1 distances: \\(d_1(I_1, I_2) = \\sum_p \\vert I_1^p - I_2^p \\vert\\)</li> <li>L2 distances: \\(d_2(I_1, I_2) = \\sqrt{\\sum_p ( I_1^p - I_2^p )^2}\\)</li> </ul> <p>A classifier below with \\(O(1)\\) for training and \\(O(N)\\) for predecting with L1 distance.</p> Python<pre><code>import numpy as np\n\nclass NearestNeighbor(object):\n  def __init__(self):\n    pass\n\n  def train(self, X, y):\n    \"\"\" X is N x D where each row is an example. Y is 1-dimension of size N \"\"\"\n    # the nearest neighbor classifier simply remembers all the training data\n    self.Xtr = X\n    self.ytr = y\n\n  def predict(self, X):\n    \"\"\" X is N x D where each row is an example we wish to predict label for \"\"\"\n    num_test = X.shape[0]\n    # let's make sure that the output type matches the input type\n    Ypred = np.zeros(num_test, dtype = self.ytr.dtype)\n\n    # loop over all test rows\n    for i in range(num_test):\n      # find the nearest training image to the i'th test image\n      # using the L1 distance (sum of absolute value differences)\n      distances = np.sum(np.abs(self.Xtr - X[i,:]), axis = 1)\n      min_index = np.argmin(distances) # get the index with the smallest distance\n      Ypred[i] = self.ytr[min_index] # predict the label of the nearest example\n\n    return Ypred\n</code></pre> <p>It's bad: we want classifiers that are fast at prediction and slow for training</p>"},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/#k-neatest-neighbours","title":"K-Neatest Neighbours","text":"<p>The idea is very simple: instead of finding the single closest image in the training set, we will find the top k closest images, and have them vote on the label of the test image. Higher values of k have a smoothing effect that makes the classifier more resistant to outliers</p> <p></p> <p>Ideas on the hyperparameters - \u274c Choose hyperparameters working best on the data. K = 1 always works best on the training data. - \u274c Choose hyperparameters working best on the test data. No idea how it will perform on new data.</p> <p>Note</p> <p>Whenever you\u2019re designing Machine Learning algorithms, you should think of the test set as a very precious resource that should ideally never be touched until one time at the very end.</p> <ul> <li>Split data into train, validation, test sets, train and test on train and validation sets and showcase the performance on the test set. (Test at the last time.)</li> </ul> Python<pre><code># assume we have Xtr_rows, Ytr, Xte_rows, Yte as before\n# recall Xtr_rows is 50,000 x 3072 matrix\nXval_rows = Xtr_rows[:1000, :] # take first 1000 for validation\nYval = Ytr[:1000]\nXtr_rows = Xtr_rows[1000:, :] # keep last 49,000 for train\nYtr = Ytr[1000:]\n\n# find hyperparameters that work best on the validation set\nvalidation_accuracies = []\nfor k in [1, 3, 5, 10, 20, 50, 100]:\n\n  # use a particular value of k and evaluation on validation data\n  nn = NearestNeighbor()\n  nn.train(Xtr_rows, Ytr)\n  # here we assume a modified NearestNeighbor class that can take a k as input\n  Yval_predict = nn.predict(Xval_rows, k = k)\n  acc = np.mean(Yval_predict == Yval)\n  print 'accuracy: %f' % (acc,)\n\n  # keep track of what works on the validation set\n  validation_accuracies.append((k, acc))\n</code></pre> <ul> <li>Cross-Validation (use less on CV). Split data into folds, try each fold as validation and average the results.</li> </ul> <p>Example</p> <p>For example, in 5-fold cross-validation, we would split the training data into 5 equal folds, use 4 of them for training, and 1 for validation. We would then iterate over which fold is the validation fold, evaluate the performance, and finally average the performance across the different folds.</p> <p>Tip</p> <p>In practice, people prefer to avoid cross-validation in favor of having a single validation split, since cross-validation can be computationally expensive.</p> <p>K-Nearest Neighbor on images never used: very slow at test time, and distance matrix on pixels are not informative. And our classifier should densely cover the space, which is harder when the dimension goes high. (Curse of dimensionality)</p>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/","title":"Loss Functions","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 5 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#parametric-approach","title":"Parametric Approach","text":"\\[ input: x \\rightarrow f(x, W[, b]) \\rightarrow \\text{10 numbers giving class scores} \\] <p>e.g.</p> \\[ f(x, W, b) = W \\text{vec}(x) + b \\] <ul> <li>Hard cases: Cases with no linear boundaries.</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#loss-function","title":"Loss function","text":"<p>Given a dataset of examples \\(\\{(x_i, y_i)\\}_{i = 1}^n\\), loss over the dataset is a sum of loss over examples:</p> \\[ L = \\frac{1}{N}\\sum_{i}L_i(f(x_i, W), y_i) \\]"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#multiclass-svm-loss-hinge-loss","title":"Multiclass SVM Loss (Hinge loss)","text":"<p>\\(y_i\\) are integers, \\(s_i\\) is the \\(j\\)-th class prediction of data \\(x_i\\), \\(L_i = \\sum_{j \\neq y_i}\\max \\{0, s_j - s_{y_i} + 1\\}\\)  (s -&gt; score). \\(1\\) here is a threshold, but it can be chosen randomly.</p> <p></p> Python<pre><code>def L_i_vectorized(x, y, W):\n    scores = W.dot(x)\n    margins = np.maximum(0, scores - scores[y] + 1)\n    margins[y] = 0\n    loss_i = np.sum(margins)\n    return loss_i\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#the-regularization","title":"The regularization","text":"<p>Model should be simple, so it works on test data. (\u9632\u6b62\u8fc7\u62df\u5408)</p> \\[ L(W) = \\frac{1}{N}\\sum_{i = 1}^{N}L_i(f(x_i, W), y_i) + \\lambda R(W) \\] <p>\\(\\lambda\\): regularization strength. \\(R(W)\\) allows the model to choose a simple model (It can be understood as reducing the degree of the fitted curve)</p> <ul> <li>L2 regularization: \\(R(W) = \\Vert W \\Vert_F\\)</li> <li>L1 regularization: \\(R(W) = \\Vert W \\Vert_1\\)</li> <li>Elastic net: \\(R(W) = \\beta \\Vert W \\Vert_F + \\Vert W \\Vert_1\\)</li> <li>Max norm regularization</li> <li>Dropout</li> <li>Fancier</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#softmax-loss-cross-entropy-loss","title":"Softmax Loss (Cross-entropy loss)","text":"\\[ P(Y = k | X = x_i) = \\frac{\\mathrm{e}^{s_k}}{\\sum_j \\mathrm{e}^{s_j}} \\] <p>where \\(s = f(x_i, W)\\), which will normalize the score vector \\(s\\). We want to minimize the negative log likelihood of the correct class, so the loss function would be</p> \\[ L_i = -\\log P(Y = y_i | X = x_i) \\]"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/","title":"Attention and Transformers","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 99 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#seq2seq-rnns","title":"Seq2Seq RNNs","text":"<p>As the figure shows.</p> <p></p> <p>Problem: Input sequence bottlenecks through fixed sized c, which will lead to gradient vanishment.</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#attention","title":"Attention","text":"<p>Look back at the whole input sequence on each step of the output.</p> <p></p> <p>At time \\(t\\), our compute sequence is:</p> <ol> <li> <p>\\(\\displaystyle e_{t,i} = \\mathrm{score}(h_i, s_{t - 1}), i = 1, 2, \\cdots\\)</p> <p>where </p> \\[ \\mathrm{score}(h, s) = \\begin{cases} h^Ts &amp;\\quad \\text{Dot} \\\\ h^T W s &amp;\\quad \\text{General} \\\\ v^T \\tanh (W [h; s]) &amp;\\quad \\text{Concat} \\end{cases} \\] <p>To prevent large score causing the vanishment of softmax, we can change \"Dot\" to \\(\\displaystyle \\frac{h^Ts}{\\sqrt{D}}\\) where \\(D\\) is the dimension of the input data.</p> </li> <li> <p>\\(\\displaystyle \\mathbf{a_{t}} = \\mathrm{Softmax}(\\mathrm{e_t})\\)</p> </li> <li>\\(\\displaystyle c_t = \\sum_{i = 1}^{N}a_{t, i}h_i\\)</li> <li>\\(\\displaystyle s_t = g_U(y_{t - 1}, s_{t - 1}, c_t) \\quad \\text{(Decoder)}\\)</li> </ol> <p>the visualization of weights:</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#self-attention","title":"Self Attention","text":""},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#inputs","title":"Inputs","text":"<ul> <li> <p>Input vectors: \\(\\mathbf{X} \\in \\mathbb{R}^{N \\times D_{\\text{in}}}\\)   Each input produces one output, which is a mix of information from all inputs.</p> </li> <li> <p>Key matrix: \\(\\mathbf{W}^{K} \\in \\mathbb{R}^{D_{\\text{in}} \\times D_{\\text{out}}}\\) </p> </li> <li>Value matrix: \\(\\mathbf{W}^{V} \\in \\mathbb{R}^{D_{\\text{in}} \\times D_{\\text{out}}}\\) </li> <li>Query matrix: \\(\\mathbf{W}^{Q} \\in \\mathbb{R}^{D_{\\text{in}} \\times D_{\\text{out}}}\\)</li> </ul> <p>Shapes get a little simpler: almost always \\(D_{Q} = D_{K} = D_{V} = D_{\\text{out}}\\).</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#computation","title":"Computation","text":"<p>Given \\(N\\) input vectors, each of dimension \\(D_{\\text{in}}\\):</p> <ol> <li> <p>Queries (\u63d0\u95ee\u8005)</p> \\[ \\mathbf{Q} = \\mathbf{X}\\,\\mathbf{W}^{Q} \\in \\mathbb{R}^{N \\times D_{\\text{out}}}  \\] </li> <li> <p>Keys (\u88ab\u63d0\u95ee\u8005)</p> \\[  \\mathbf{K} = \\mathbf{X}\\,\\mathbf{W}^{K} \\in \\mathbb{R}^{N \\times D_{\\text{out}}}  \\] </li> <li> <p>Values (\u4fe1\u606f\u63d0\u4f9b\u8005)</p> \\[  \\mathbf{V} = \\mathbf{X}\\,\\mathbf{W}^{V} \\in \\mathbb{R}^{N \\times D_{\\text{out}}}  \\] </li> <li> <p>Similarities</p> \\[  \\mathbf{E} = \\frac{\\mathbf{Q}\\,\\mathbf{K}^{\\!\\top}}{\\sqrt{D_{\\text{out}}}} \\in \\mathbb{R}^{N \\times N},\\qquad   E_{ij} = \\frac{\\mathbf{Q}_{i}\\!\\cdot\\!\\mathbf{K}_{j}}{\\sqrt{D_{\\text{out}}}}  \\] </li> <li> <p>Attention weights </p> \\[  \\mathbf{A} = \\text{Softmax}(\\mathbf{E},\\; \\text{dim}=1) \\in \\mathbb{R}^{N \\times N}  \\] </li> <li> <p>Output vectors </p> \\[  \\mathbf{Y} = \\mathbf{A}\\,\\mathbf{V} \\in \\mathbb{R}^{N \\times D_{\\text{out}}},\\qquad   \\mathbf{Y}_{i} = \\sum_{j} A_{ij}\\,\\mathbf{V}_{j}  \\] </li> </ol> <p>A Single-head Attention:</p> <p></p> <p>\u4e3e\u4e2a\u4f8b\u5b50 \uff08\u7ffb\u8bd1\u573a\u666f\uff09</p> <ul> <li>\u8f93\u5165\u53e5\u5b50\uff1a <p>The cat sat on the mat</p> </li> <li>\u5728 Self-Attention \u4e2d\uff0c\u201ccat\u201d\u8fd9\u4e2a\u8bcd\u4f1a\uff1a<ul> <li>\u7528 Query \u95ee\u81ea\u5df1\uff1a\u201c\u6211\u9700\u8981\u5173\u6ce8\u54ea\u4e9b\u8bcd\uff1f\u201d</li> <li>\u7528 Key \u8ba9\u5176\u4ed6\u8bcd\uff08\u5305\u62ec\u81ea\u5df1\uff09\u56de\u7b54\uff1a\u201c\u6211\u548c cat \u6709\u591a\u76f8\u5173\uff1f\u201d</li> <li>\u7528 Value \u63d0\u53d6\u4fe1\u606f\uff1a\u201c\u4ece\u6bcf\u4e2a\u8bcd\u4e2d\u62ff\u591a\u5c11\u4fe1\u606f\uff1f\u201d</li> </ul> </li> <li>\u6700\u7ec8\uff0c\u201ccat\u201d\u8fd9\u4e2a\u8bcd\u7684\u8f93\u51fa\u5411\u91cf\u4f1a\u878d\u5408\u201ccat\u201d\u3001\u201csat\u201d\u3001\u201cmat\u201d\u7b49\u4fe1\u606f\uff0c\u53d8\u5f97\u66f4\u201c\u5168\u5c40\u201d\u3002</li> </ul> <p>However, if we permute the input sequence, similarities, attention weights and outputs will be the same but permuted, which means that Self-Attention is permutation equivalent. So problem is that, Self-Attention does not know the order of sequence.</p> <p>Solution: Add positional encoding to each input.</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#masked-self-attention","title":"Masked Self-Attention","text":"<p>When used at language models where you want to predict the next word, the self attention shouldn't look ahead, To prevent vectors from peeking ahead, zero out the upper-triangle of the similarity matrix (set it to  -inf ) before softmax.</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#multiheaded-self-attention","title":"Multiheaded Self-Attention","text":"<p>(Used everywhere in practice)</p> <p>Compute \\(H\\) independent self-attention layers, each with their own weights. Stack up the \\(H\\) independent layers and fuse them into the final output with \\(W_O\\)</p> \\[ \\begin{cases} \\displaystyle \\mathbf{Q} = \\mathbf{X} \\mathbf{W}_Q &amp;\\quad (\\text{Queries: } [H \\times N \\times D_H]) \\\\ \\displaystyle \\mathbf{K} = \\mathbf{X} \\mathbf{W}_K &amp;\\quad (\\text{Keys: } [H \\times N \\times D_H]) \\\\ \\displaystyle \\mathbf{V} = \\mathbf{X} \\mathbf{W}_V &amp;\\quad (\\text{Values: } [H \\times N \\times D_H]) \\\\ \\displaystyle \\mathbf{E} = \\frac{\\mathbf{Q} \\mathbf{K}^\\top}{\\sqrt{D_Q}} &amp;\\quad (\\text{Similarities: } [H \\times N \\times N]) \\\\ \\displaystyle \\mathbf{A} = \\mathrm{softmax}(\\mathbf{E}, \\mathrm{dim}=2) &amp;\\quad (\\text{Attention weights: } [H \\times N \\times N]) \\\\ \\displaystyle \\mathbf{Y} = \\mathbf{A} \\mathbf{V} &amp;\\quad (\\text{Head outputs: } [H \\times N \\times D_H] \\Rightarrow [N \\times H D_H]) \\\\ \\displaystyle \\boxed{\\mathbf{O} = \\mathbf{Y} \\mathbf{W}_O} &amp;\\quad (\\text{Outputs: } [N \\times D]) \\end{cases} \\] <p>Compute Optimizations for Self-Attention</p> <ol> <li>QKV Projection: \\(\\displaystyle [\\mathbf{Q, K, V}] = \\mathbf{X}\\mathbf{W}_{qkv}\\) Python<pre><code>qkv = X @ W_qkv        # [N \u00d7 3H\u00b7D_H]\nqkv = qkv.reshape(N, H, 3, D_H).permute(2, 1, 0, 3)  # [3, H, N, D_H]\nQ, K, V = qkv[0], qkv[1], qkv[2]                     # Each [H \u00d7 N \u00d7 D_H]\n</code></pre></li> <li>QK Similarity: Use     Python<pre><code># Q, K: [H, N, D_H]\n# K.transpose(-1, -2): [H, D_H, N]\nE = torch.matmul(Q, K.transpose(-1, -2)) / sqrt(D_H)  # =&gt; [H, N, N]\n</code></pre>    to compute \\(\\displaystyle \\mathbf{E} = \\frac{\\mathbf{Q} \\mathbf{K}^\\top}{\\sqrt{D_Q}}\\)</li> <li>V-Weighting: After compute \\(\\displaystyle \\mathbf{Y} = \\mathbf{A}\\mathbf{V}\\), we reshape \\(\\mathrm{Y}\\) into \\([N \\times H \\cdot D_H]\\) for output projection, preventing the storage of head outputs.     Python<pre><code>Y = torch.matmul(A, V)            # [H \u00d7 N \u00d7 D_H]\nY = Y.permute(1, 0, 2).reshape(N, H * D_H)  # =&gt; [N \u00d7 H\u00b7D_H]\n</code></pre>    And at output, we let \\(\\mathrm{W}_O\\) be \\([H\\cdot D_H \\times D]\\) This has the \\(O(N^2)\\) space complexity.</li> </ol> <p>Flash Attention: </p> \\[ \\mathrm{FlashAttn}(\\mathbf{Q}, \\mathbf{K}, \\mathbf{V}) = \\mathrm{StreamSoftmax}(\\mathbf{Q}\\mathbf{K}^T)\\mathbf{V} \\] <p>where stream softmax will compute the value without store the whold matrix. With this, the space complexity will be \\(O(N)\\).</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#cross-attention","title":"Cross-Attention","text":"<p>Almost the same as Self-Attention, but the Query is from outer.</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#transformer","title":"Transformer","text":""},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#transformer-block","title":"Transformer Block","text":"<p>Residual connection (\u6b8b\u5dee\u8fde\u63a5)</p> <p>\\(\\mathrm{Output} = \\mathrm{Layer}(X) + X\\), which allows information to be preserved without having to pass through every layer.</p> <p>Self-Attention is the only interaction between vectors LayerNorm and MLP work on each vector independently</p> <p>It is  Highly scalable and parallelizable, most of the compute is just 6 matmuls: - 4 from Self-Attention - 2 from MLP</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#the-transformer","title":"The Transformer","text":"<p>A Transformer is just a stack of identical Transformer blocks!</p> <ul> <li>Original: [Vaswani et al, 2017] 12 blocks, D=1024, H=16, N=512, 213M params  </li> <li>GPT-2: [Radford et al, 2019] 48 blocks, D=1600, H=25, N=1024, 1.5B params  </li> <li>GPT-3: [Brown et al, 2020] 96 blocks, D=12288, H=96, N=2048, 175B params</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#applications","title":"Applications","text":""},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#transformers-for-language-modeling-llm","title":"Transformers for Language Modeling (LLM)","text":"<ol> <li>Learn an embedding matrix \\([V \\times D]\\) at the start of the model to convert words into vectors.</li> <li>Use masked attention inside each transformer block so each token can only see the ones before it</li> <li>At the end, learn a projection matrix shape \\([D \\times V]\\) to project each D-dim vector to a V-dim vector of scores for each element of the vocabulary.</li> <li>Train to predict next token using softmax + cross-entropy loss</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#vision-transformers","title":"Vision Transformers","text":"<p>Just break the image into patches, flatten and apply a linear transform, and put into the transformer.</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#tweaking-transformers","title":"Tweaking Transformers","text":""},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#pre-norm-transformer","title":"Pre-Norm Transformer","text":"<p>Move layer normalization before the Self-Attention and MLP, inside the residual connections. Training is more stable.</p>"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#rmsnorm","title":"RMSNorm","text":"<p>Replace Layer Normalization with Root-Mean-Square Normalization.</p> \\[ \\begin{cases} \\displaystyle y_i = \\frac{x_i}{\\mathrm{RMS}(x)}\\gamma_i &amp;\\quad \\gamma \\text{ is the weight (Shape D)} \\\\ \\displaystyle \\mathrm{RMS}(x) = \\sqrt{\\varepsilon + \\frac{1}{N}\\sum_{i = 1}^N x_i^2} \\end{cases} \\]"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#swiglu-mlp","title":"SwiGLU MLP","text":"\\[ \\begin{cases} \\displaystyle Y = \\left(\\mathrm{Swish}(XW_1)\\odot XW_2\\right)W_3 \\\\ \\displaystyle \\mathrm{Swish}(x) = \\frac{x}{1 + \\mathrm{e}^{-x}} \\end{cases} \\]"},{"location":"NoflowersNotes/ComputerVision/AttentionandTransformers/AttentionandTransformers/#mixture-of-experts-moe","title":"Mixture of Experts (MoE)","text":"<p>Learn E separate sets of MLP weights in each block; each MLP is an expert. It turns one giant model into many small \u201cexperts\u201d but activates only a handful of them for each input token.</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/","title":"CNN & Training Basics","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a014 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#layers-of-cnns","title":"Layers of CNNs","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#the-conv-layers","title":"The Conv Layers","text":"<ul> <li>Accepts a volume of size \\(W_1 \\times H_1 \\times D_1\\)</li> <li>Requires four hyperparameters:<ul> <li>Number of filters \\(K\\),</li> <li>their spatial extent \\(F\\),</li> <li>the stride \\(S\\),</li> <li>the amount of zero padding \\(P\\)</li> </ul> </li> <li>Produces a volume of size \\(W_2 \\times H_2 \\times D_2\\) where:<ul> <li>\\(W_2 = \\displaystyle \\frac{W_1 - F + 2P}{S} + 1\\)</li> <li>\\(H_2 = \\displaystyle \\frac{H_1 - F + 2P}{S} + 1\\) (i.e. width and height are computed equally by symmetry)</li> <li>\\(D_2 = K\\)</li> </ul> </li> <li>With parameter sharing, it introduces \\(F \\cdot F \\cdot D_1\\) weights per filter, for a total of   \\((F \\cdot F \\cdot D_1) \\cdot K\\) weights and \\(K\\) biases.</li> <li>In the output volume, the \\(d\\)-th depth slice (of size \\(W_2 \\times H_2\\)) is the result of performing a valid convolution of the \\(d\\)-th filter over the input volume with a stride of \\(S\\), and then offset by \\(d\\)-th bias.</li> </ul> <p>Commonn settings:</p> <ul> <li>\\(K\\) is powers of 2     &gt;   - \\(F = 3, S = 1, P = 1\\)</li> <li>\\(F = 5, S = 1, P = 2\\)</li> <li>\\(F = 5, S = 2, P = \\text{(Whatever fits)}\\)</li> <li>\\(F = 1, S = 1, P = 0\\)</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#pooling-layers","title":"Pooling Layers","text":"<p>(Emitted)</p> <p>A max pooling realization here.</p> ForwardBackward Python<pre><code>def max_pool_forward_fast(x, pool_param):\n    \"\"\"\n    Vectorized (non-naive) version of the forward pass for a max-pooling layer.\n\n    Inputs:\n    - x: Input data, shape (N, C, H, W)\n    - pool_param: dict with keys:\n        - 'pool_height': int\n        - 'pool_width': int\n        - 'stride': int\n\n    Returns:\n    - out: Output data, shape (N, C, H', W')\n    - cache: (x, pool_param)\n    \"\"\"\n    N, C, H, W = x.shape\n    ph, pw, stride = pool_param['pool_height'], pool_param['pool_width'], pool_param['stride']\n\n    H_out = 1 + (H - ph) // stride\n    W_out = 1 + (W - pw) // stride\n\n    # Create output tensor\n    out = np.zeros((N, C, H_out, W_out))\n\n    # im2col: unfold pooling windows\n    x_reshaped = x.reshape(N * C, 1, H, W)\n\n    # Create a matrix to hold all pooling windows\n    col = np.zeros((N * C, ph * pw, H_out * W_out))\n\n    out_idx = 0\n    for i in range(0, H - ph + 1, stride):\n        for j in range(0, W - pw + 1, stride):\n            patch = x_reshaped[:, :, i:i+ph, j:j+pw]  # shape: (N*C, 1, ph, pw)\n            col[:, :, out_idx] = patch.reshape(N * C, -1)\n            out_idx += 1\n\n    # Max over pooling regions\n    max_pool = np.max(col, axis=1)  # shape: (N*C, H_out*W_out)\n    out = max_pool.reshape(N, C, H_out, W_out)\n\n    cache = (x, pool_param)\n    return out, cache\n</code></pre> \\[ \\text{dx}_{n, c, h, w} = \\begin{cases} \\text{dout}_{n,c,i,j}, &amp; \\text{if } (h,w) = \\underset{(h',w') \\in \\text{pool region}}{\\arg\\max} \\, x_{n,c,h',w'} \\\\ 0, &amp; \\text{otherwise} \\end{cases} \\] Python<pre><code>def max_pool_backward_fast(dout, cache):\n    \"\"\"\n    Vectorized backward pass for a max-pooling layer.\n\n    Inputs:\n    - dout: Upstream derivatives, shape (N, C, H', W')\n    - cache: Tuple of (x, pool_param) from forward pass\n\n    Returns:\n    - dx: Gradient with respect to x, shape same as x\n    \"\"\"\n    x, pool_param = cache\n    N, C, H, W = x.shape\n    ph, pw, stride = pool_param['pool_height'], pool_param['pool_width'], pool_param['stride']\n    H_out, W_out = dout.shape[2], dout.shape[3]\n\n    dx = np.zeros_like(x)\n\n    for n in range(N):\n        for c in range(C):\n            for i in range(H_out):\n                for j in range(W_out):\n                    h_start = i * stride\n                    h_end = h_start + ph\n                    w_start = j * stride\n                    w_end = w_start + pw\n\n                    # \u5f53\u524d\u7a97\u53e3\n                    window = x[n, c, h_start:h_end, w_start:w_end]\n                    max_val = np.max(window)\n\n                    # \u68af\u5ea6\u4f20\u64ad\u53ea\u4f20\u7ed9\u6700\u5927\u503c\u6240\u5728\u4f4d\u7f6e\n                    mask = (window == max_val)\n                    dx[n, c, h_start:h_end, w_start:w_end] += mask * dout[n, c, i, j]\n\n    return dx\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#normalization-layers","title":"Normalization Layers","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#batch-normalization","title":"Batch Normalization","text":"ForwardBackwardA Optimization for backward \\[ \\mu = \\frac{1}{m} \\sum_{i=1}^{m} x_i \\quad \\sigma^2 = \\frac{1}{m} \\sum_{i=1}^{m} (x_i - \\mu)^2 \\quad \\hat{x}_i = \\frac{x_i - \\mu}{\\sqrt{\\sigma^2 + \\epsilon}} \\quad y_i = \\gamma \\hat{x}_i + \\beta \\] Python<pre><code>def batchnorm_forward(x, gamma, beta, bn_param):\n    \"\"\"\n    Forward pass for batch normalization.\n\n    During training the sample mean and (uncorrected) sample variance are\n    computed from minibatch statistics and used to normalize the incoming data.\n    During training we also keep an exponentially decaying running mean of the\n    mean and variance of each feature, and these averages are used to normalize\n    data at test-time.\n\n    At each timestep we update the running averages for mean and variance using\n    an exponential decay based on the momentum parameter:\n\n    running_mean = momentum * running_mean + (1 - momentum) * sample_mean\n    running_var = momentum * running_var + (1 - momentum) * sample_var\n\n    Note that the batch normalization paper suggests a different test-time\n    behavior: they compute sample mean and variance for each feature using a\n    large number of training images rather than using a running average. For\n    this implementation we have chosen to use running averages instead since\n    they do not require an additional estimation step; the torch7\n    implementation of batch normalization also uses running averages.\n\n    Input:\n    - x: Data of shape (N, D)\n    - gamma: Scale parameter of shape (D,)\n    - beta: Shift paremeter of shape (D,)\n    - bn_param: Dictionary with the following keys:\n      - mode: 'train' or 'test'; required\n      - eps: Constant for numeric stability\n      - momentum: Constant for running mean / variance.\n      - running_mean: Array of shape (D,) giving running mean of features\n      - running_var Array of shape (D,) giving running variance of features\n\n    Returns a tuple of:\n    - out: of shape (N, D)\n    - cache: A tuple of values needed in the backward pass\n    \"\"\"\n    mode = bn_param[\"mode\"]\n    eps = bn_param.get(\"eps\", 1e-5)\n    momentum = bn_param.get(\"momentum\", 0.9)\n\n    N, D = x.shape\n    running_mean = bn_param.get(\"running_mean\", np.zeros(D, dtype=x.dtype))\n    running_var = bn_param.get(\"running_var\", np.zeros(D, dtype=x.dtype))\n\n    if mode == \"train\":\n        # Step 1: \u8ba1\u7b97\u5747\u503c\n        sample_mean = np.mean(x, axis=0)\n\n        # Step 2: \u8ba1\u7b97\u65b9\u5dee\n        sample_var = np.var(x, axis=0)\n\n        # Step 3: \u6807\u51c6\u5316\n        x_hat = (x - sample_mean) / np.sqrt(sample_var + eps)\n\n        # Step 4: \u7f29\u653e + \u5e73\u79fb\n        out = gamma * x_hat + beta\n\n        # \u7f13\u5b58\u4e2d\u95f4\u503c\u4f9b\u53cd\u5411\u4f20\u64ad\u4f7f\u7528\n        cache = (x, x_hat, sample_mean, sample_var, gamma, beta, eps)\n\n        # \u66f4\u65b0\u8fd0\u884c\u4e2d\u7684\u7edf\u8ba1\u91cf\n        running_mean = momentum * running_mean + (1 - momentum) * sample_mean\n        running_var = momentum * running_var + (1 - momentum) * sample_var\n    elif mode == \"test\":\n        x_hat = (x - running_mean) / np.sqrt(running_var + eps)\n        out = gamma * x_hat + beta\n        cache = None\n    else:\n        raise ValueError('Invalid forward batchnorm mode \"%s\"' % mode)\n\n    # Store the updated running means back into bn_param\n    bn_param[\"running_mean\"] = running_mean\n    bn_param[\"running_var\"] = running_var\n\n    return out, cache\n</code></pre> <p>Remarks</p> <p>The computation of \\(\\mu\\) and \\(\\sigma\\) won't happen in testing. Instead, they will be predicted with train data.</p> \\[ \\mu = \\frac{1}{m} \\sum_{i=1}^{m} x_i \\quad \\sigma^2 = \\frac{1}{m} \\sum_{i=1}^{m} (x_i - \\mu)^2 \\quad \\hat{x}_i = \\frac{x_i - \\mu}{\\sqrt{\\sigma^2 + \\epsilon}} \\quad y_i = \\gamma \\hat{x}_i + \\beta \\] \\[ \\frac{\\partial L}{\\partial \\gamma} = \\sum_{i=1}^{m} \\frac{\\partial L}{\\partial y_i} \\cdot \\hat{x}_i \\quad \\frac{\\partial L}{\\partial \\beta} = \\sum_{i=1}^{m} \\frac{\\partial L}{\\partial y_i} \\] Python<pre><code>def batchnorm_backward(dout, cache):\n    \"\"\"\n    Backward pass for batch normalization.\n\n    For this implementation, you should write out a computation graph for\n    batch normalization on paper and propagate gradients backward through\n    intermediate nodes.\n\n    Inputs:\n    - dout: Upstream derivatives, of shape (N, D)\n    - cache: Variable of intermediates from batchnorm_forward.\n\n    Returns a tuple of:\n    - dx: Gradient with respect to inputs x, of shape (N, D)\n    - dgamma: Gradient with respect to scale parameter gamma, of shape (D,)\n    - dbeta: Gradient with respect to shift parameter beta, of shape (D,)\n    \"\"\"\n\n    x, x_hat, mean, var, gamma, beta, eps = cache\n    N, D = x.shape\n\n    # Gradients of beta and gamma\n    dbeta = np.sum(dout, axis=0)                         # (D,)\n    dgamma = np.sum(dout * x_hat, axis=0)                # (D,)\n\n    # Gradient of x_hat\n    dxhat = dout * gamma                                 # (N, D)\n\n    # Intermediate partials\n    dvar = np.sum(dxhat * (x - mean) * -0.5 * (var + eps) ** (-1.5), axis=0)  # (D,)\n    dmean = np.sum(dxhat * -1 / np.sqrt(var + eps), axis=0) + \\\n            dvar * np.mean(-2 * (x - mean), axis=0)                          # (D,)\n\n    # Final dx\n    dx = dxhat / np.sqrt(var + eps) + dvar * 2 * (x - mean) / N + dmean / N  # (N, D)\n\n    return dx, dgamma, dbeta\n</code></pre> \\[ \\frac{\\partial L}{\\partial x_i} = \\frac{\\gamma}{\\sqrt{\\sigma^2 + \\epsilon}} \\cdot \\left(  \\frac{\\partial L}{\\partial y_i}  - \\frac{1}{N} \\sum_{j=1}^{N} \\frac{\\partial L}{\\partial y_j} - \\frac{\\hat{x}_i}{N} \\sum_{j=1}^{N} \\left( \\frac{\\partial L}{\\partial y_j} \\cdot \\hat{x}_j \\right) \\right) \\] Python<pre><code>def batchnorm_backward_alt(dout, cache):\n    \"\"\"\n    Alternative backward pass for batch normalization.\n\n    For this implementation you should work out the derivatives for the batch\n    normalizaton backward pass on paper and simplify as much as possible. You\n    should be able to derive a simple expression for the backward pass.\n    See the jupyter notebook for more hints.\n\n    Note: This implementation should expect to receive the same cache variable\n    as batchnorm_backward, but might not use all of the values in the cache.\n\n    Inputs / outputs: Same as batchnorm_backward\n    \"\"\"\n\n    x, x_hat, mean, var, gamma, beta, eps = cache\n    N, D = dout.shape\n\n    # Gradients w.r.t. gamma and beta (same as before)\n    dbeta = np.sum(dout, axis=0)                          # (D,)\n    dgamma = np.sum(dout * x_hat, axis=0)                 # (D,)\n\n    # Simplified dx expression\n    dx = (1. / N) * gamma / np.sqrt(var + eps) * \\\n        (N * dout - np.sum(dout, axis=0) - x_hat * np.sum(dout * x_hat, axis=0))\n\n    return dx, dgamma, dbeta\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#layer-norm","title":"Layer Norm","text":"<p>Due to the disadvantages of Batch Norm: - Sensitive to batch size. - Not suitable for RNNs and Transformers (Attention based models) - Behaves differently during training and inference (due to running statistics)</p> <p>However, LN works on each feature of input data.</p> \\[ \\begin{cases} \\displaystyle \\mu = \\frac{1}{d} \\sum_{i=1}^{d} x_i \\\\ \\displaystyle \\sigma = \\sqrt{\\frac{1}{d} \\sum_{i=1}^{d} (x_i - \\mu)^2 + \\varepsilon} \\\\ \\displaystyle \\text{LN}(x_i) = \\gamma_i \\cdot \\frac{x_i - \\mu}{\\sigma} + \\beta_i \\end{cases} \\] <p>where \\(\\gamma_i\\) and \\(\\beta_i\\) can be learnt through training.</p> ForwardBackward Python<pre><code>def layernorm_forward(x, gamma, beta, ln_param):\n    \"\"\"\n    Forward pass for layer normalization.\n\n    During both training and test-time, the incoming data is normalized per data-point,\n    before being scaled by gamma and beta parameters identical to that of batch normalization.\n\n    Note that in contrast to batch normalization, the behavior during train and test-time for\n    layer normalization are identical, and we do not need to keep track of running averages\n    of any sort.\n\n    Input:\n    - x: Data of shape (N, D)\n    - gamma: Scale parameter of shape (D,)\n    - beta: Shift paremeter of shape (D,)\n    - ln_param: Dictionary with the following keys:\n        - eps: Constant for numeric stability\n\n    Returns a tuple of:\n    - out: of shape (N, D)\n    - cache: A tuple of values needed in the backward pass\n    \"\"\"\n\n    eps = ln_param.get(\"eps\", 1e-5)\n\n    # Step 1: Compute mean and variance per data point (along axis=1)\n    mean = np.mean(x, axis=1, keepdims=True)  # shape (N, 1)\n    var = np.var(x, axis=1, keepdims=True)    # shape (N, 1)\n\n    # Step 2: Normalize\n    x_hat = (x - mean) / np.sqrt(var + eps)   # shape (N, D)\n\n    # Step 3: Scale and shift\n    out = gamma * x_hat + beta                # shape (N, D)\n    cache = (x, x_hat, mean, var, gamma, beta, eps)\n\n    return out, cache\n</code></pre> \\[ \\frac{\\partial L}{\\partial x_i} = \\frac{1}{D} \\cdot \\frac{1}{\\sqrt{\\sigma_i^2 + \\epsilon}} \\cdot \\left( D \\cdot \\frac{\\partial L}{\\partial \\hat{x}_i} - \\sum_{j=1}^{D} \\frac{\\partial L}{\\partial \\hat{x}_{ij}} - \\hat{x}_i \\cdot \\sum_{j=1}^{D} \\left( \\frac{\\partial L}{\\partial \\hat{x}_{ij}} \\cdot \\hat{x}_{ij} \\right) \\right) \\] Python<pre><code>def layernorm_backward(dout, cache):\n    \"\"\"\n    Backward pass for layer normalization.\n\n    For this implementation, you can heavily rely on the work you've done already\n    for batch normalization.\n\n    Inputs:\n    - dout: Upstream derivatives, of shape (N, D)\n    - cache: Variable of intermediates from layernorm_forward.\n\n    Returns a tuple of:\n    - dx: Gradient with respect to inputs x, of shape (N, D)\n    - dgamma: Gradient with respect to scale parameter gamma, of shape (D,)\n    - dbeta: Gradient with respect to shift parameter beta, of shape (D,)\n    \"\"\"\n\n    x, x_hat, mean, var, gamma, beta, eps = cache\n    N, D = x.shape\n\n    # dbeta \u548c dgamma \u5f88\u7b80\u5355\uff1a\u6309\u5217\u6c42\u548c\n    dbeta = np.sum(dout, axis=0)            # shape (D,)\n    dgamma = np.sum(dout * x_hat, axis=0)   # shape (D,)\n\n    # dx_hat\n    dxhat = dout * gamma                    # shape (N, D)\n\n    # \u53c2\u8003 BatchNorm \u7684\u94fe\u5f0f\u6cd5\u5219\u516c\u5f0f\uff0c\u9002\u914d\u6309\u884c\u5f52\u4e00\u5316\n    std = np.sqrt(var + eps)                # shape (N, 1)\n\n    # \u5411\u91cf\u5f62\u5f0f\u7684 dx\n    dx = (1. / D) * (1 / std) * (\n        D * dxhat - np.sum(dxhat, axis=1, keepdims=True)\n        - x_hat * np.sum(dxhat * x_hat, axis=1, keepdims=True)\n    )\n\n    return dx, dgamma, dbeta\n</code></pre> <p>Other normalizations</p> <p></p> <p>C: Channels (Features), N Batch Size, H, W: data dimentions.</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#regularization","title":"Regularization","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#stochastic-depth","title":"Stochastic Depth","text":"<p>(?)</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#dropout","title":"Dropout","text":"<p>In each forward pass, randomly set some neurons to zero. Probability of dropping is a hyperparameter; 0.5 is common. </p> <p>At test time, all neurons are active always.</p> <p>A rule to be obeyed</p> <p>The output at test time must be the same as the expected output at training time</p> ForwardBackward \\[ \\text{mask}_i \\sim \\text{Bernoulli}(p) \\quad\\Rightarrow\\quad \\text{mask}_i = \\frac{\\mathbf{1}_{[u_i &lt; p]}}{p} \\] \\[ \\text{out}_i = x_i \\cdot \\text{mask}_i \\] Python<pre><code>def dropout_forward(x, dropout_param):\n    \"\"\"\n    Performs the forward pass for (inverted) dropout.\n\n    Inputs:\n    - x: Input data, of any shape\n    - dropout_param: A dictionary with the following keys:\n      - p: Dropout parameter. We keep each neuron output with probability p.\n      - mode: 'test' or 'train'. If the mode is train, then perform dropout;\n        if the mode is test, then just return the input.\n      - seed: Seed for the random number generator. Passing seed makes this\n        function deterministic, which is needed for gradient checking but not\n        in real networks.\n\n    Outputs:\n    - out: Array of the same shape as x.\n    - cache: tuple (dropout_param, mask). In training mode, mask is the dropout\n      mask that was used to multiply the input; in test mode, mask is None.\n\n    NOTE: Please implement **inverted** dropout, not the vanilla version of dropout.\n    See http://cs231n.github.io/neural-networks-2/#reg for more details.\n\n    NOTE 2: Keep in mind that p is the probability of **keep** a neuron\n    output; this might be contrary to some sources, where it is referred to\n    as the probability of dropping a neuron output.\n    \"\"\"\n    p, mode = dropout_param[\"p\"], dropout_param[\"mode\"]\n    if \"seed\" in dropout_param:\n        np.random.seed(dropout_param[\"seed\"])\n\n    mask = None\n    out = None\n\n    if mode == \"train\":\n        # \u751f\u6210 dropout mask\uff0c1\u7684\u6982\u7387\u4e3ap\uff0c0\u7684\u6982\u7387\u4e3a1-p\n        mask = (np.random.rand(*x.shape) &lt; p) / p  # \u6ce8\u610f\u662f\u9664\u4ee5 p\n        out = x * mask                             # \u5e94\u7528 mask\n    elif mode == \"test\":\n        out = x\n\n    cache = (dropout_param, mask)\n    out = out.astype(x.dtype, copy=False)\n\n    return out, cache\n</code></pre> \\[ \\frac{\\partial L}{\\partial x_i} = \\frac{\\partial L}{\\partial \\text{out}_i} \\cdot \\text{mask}_i \\] Python<pre><code>def dropout_backward(dout, cache):\n    \"\"\"\n    Perform the backward pass for (inverted) dropout.\n\n    Inputs:\n    - dout: Upstream derivatives, of any shape\n    - cache: (dropout_param, mask) from dropout_forward.\n    \"\"\"\n    dropout_param, mask = cache\n    mode = dropout_param[\"mode\"]\n\n    dx = None\n    if mode == \"train\":\n        dx = dout * mask\n    elif mode == \"test\":\n        dx = dout\n    return dx\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#fractional-max-pooling","title":"Fractional Max Pooling","text":"<p>(?)</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#activation-functions","title":"Activation Functions","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#sigmoid","title":"Sigmoid","text":"\\[ \\sigma(x) = 1 / (1 + \\mathrm{e}^{-x}) \\] <p>Key problem: Large positive or negative values can \u201ckill\u201d the gradients.</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#relu","title":"ReLU","text":"\\[ f(x) = \\max \\{0, x\\} \\] <p>Main benefit: High efficiency, does not saturate in \\(+\\) region Key Problem: Not zero-centered, deaded values when \\(x &lt; 0\\).</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#gelu","title":"GELU","text":"\\[ \\mathrm{GELU}(x) = x \\cdot \\Phi(x) \\] <p>where </p> \\[ \\Phi (x) = \\frac{1}{2} \\left[1 + \\mathrm{erf}\\left(\\frac{x}{\\sqrt{2}}\\right)\\right] \\]"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#other-lus","title":"Other LUs","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#weight-initializations","title":"Weight Initializations","text":"<ol> <li>Values too small: All activations tend to zero for deeper network layers</li> <li>Values too large: Activations blow up quickly</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#kaiming-msra-initialization","title":"Kaiming / MSRA Initialization","text":"<p>(Specially designed for ReLU).</p> \\[ W \\sim \\mathcal{N}\\left(0, \\frac{2}{n}\\right) \\] <p>or </p> \\[ W \\sim \\mathcal{U}\\left(-\\sqrt{\\frac{6}{n}}, \\sqrt{\\frac{6}{n}}\\right) \\]"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#data-processing","title":"Data Processing","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#tldr-for-image-normalization","title":"TLDR for Image Normalization","text":"<ul> <li>Subtract per-channel mean and divide by per-channel std</li> <li>Requires pre-computing means and std for each pixel channel (given your dataset)</li> </ul> Python<pre><code>norm_pixel[i,j,c] = (pixel[i,j,c] - np.mean(pixel[:, :,c])) / np.std(pixel[:,:,c])\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#data-augmentation","title":"Data augmentation","text":"<ul> <li>Dropout (Add some randomness and average them when testing)</li> <li>Horizontal flips and random crops and scales (for figures)</li> <li>Color jitter (Randomize brightness and contrast)</li> <li>Cut out (Set some random regions of an image to zero when training and use full picture when testing)</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#transfer-learning","title":"Transfer Learning","text":"<p>A way to train with a small amount of data. Just use the pretrained model of other image classifier and simpoly retrain the classifier layer for new dataset/</p> <p>Remarks</p> <p>It's a norm for image networks nowadays!</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#hyperparameter-selection","title":"Hyperparameter Selection","text":"<p>Take Learning rate for example.</p> <ol> <li>Check initial loss</li> <li>Overfit a small sample</li> <li>Find LR that makes loss go down</li> <li>Coarse grid, train for ~1-5 epochs</li> <li>Refine grid, train longer</li> <li>Look at loss and accuracy curves</li> <li>GOTO step 5</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/","title":"Detection, Segmentation, Visualization, and Understanding","text":""},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#semantic-segmentation","title":"Semantic Segmentation","text":"<p>Detect which region a pixel belongs to.</p> <p>At training time, each pixel is labeled with a semantic category. And at test time,classify each pixel of a new image.</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#fully-convolutional","title":"Fully Convolutional","text":"<p>Design network as a bunch of convolutional layers, with downsampling and upsampling inside the network.</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#upsampling","title":"Upsampling","text":""},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#unpooling","title":"Unpooling","text":"<p>Sampling \u2192 Pooling</p> <p>e.g. Max Unpooling: Set others to zero, and put it back to the original position.</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#transposed-convolution","title":"Transposed Convolution","text":"<p>The inverse of convolution.</p> \\[ Y[m, n] = \\sum_{i=0}^{H-1} \\sum_{j=0}^{W-1} X[i, j] \\cdot K[m - i \\cdot s, n - j \\cdot s] \\] <p>\\(X\\): input figure \\(K\\): conv kernel \\(Y\\): larger output  </p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#u-net","title":"U-Net","text":""},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#object-detection","title":"Object Detection","text":"<p>(Classification + Localization)</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#one-object","title":"One Object","text":"<p>After conv layers, we will:</p> <ol> <li>Apply a fully-connected layer for classification \u2192 Softmax loss</li> <li>Apply a fully-connected layer for localization \u2192 L2 loss</li> </ol> <p>Add the two loss together (Multitask Loss)</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#multiple-objects","title":"Multiple Objects","text":"<p>Each image needs a different number of outputs!</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#r-cnn","title":"R-CNN","text":"<ul> <li> <p>R: Region proposal</p> </li> <li> <p>Regions of Interest (RoI) from a proposal method(~2k), usually Selective Search\u3002</p> </li> <li>Warping, reshape RoI to a fixed size (224 / 227)</li> <li>Forward each region through ConvNet (ImageNet-pretrained)</li> <li>Classify regions with SVMs</li> <li>Bounding Box Regression</li> </ul> <p>Problem: Very slow! Need to do ~2k independent forward passes for each image! Idea: Pass the image through convnet before cropping! Crop the conv feature instead!</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#fast-r-cnn","title":"Fast R-CNN","text":"<p>Conv the image before region proposal, and conv together for classification and localization</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#region-proposal-network","title":"Region Proposal Network","text":"<p>Imagine an anchor box of fixed size at each point in the feature map.  At each point, predict whether the corresponding anchor contains an object (binary classification) Output: Anchor is an object? Box corrections?</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#yolo-you-only-look-once","title":"YOLO (You Only Look Once)","text":"<p>Real-time object detection</p> <p>For each box output: - P(object): probability that the box contains an object - B bounding boxes (x, y, h, w) - P(class): probability of belonging to a class</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#detr-object-detection-with-transformers","title":"DETR (Object Detection with Transformers)","text":""},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#instance-segmentation","title":"Instance Segmentation","text":"<p>Simultaneously detects objects in an image while delineating precise pixel-level masks for each distinct object instance.</p>"},{"location":"NoflowersNotes/ComputerVision/DetectionandSegementation/DetectionandSegementation/#masked-r-cnn","title":"Masked R-CNN","text":""},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/","title":"Gradient Descent","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 125 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#optimizers","title":"Optimizers","text":"Python<pre><code>while True:\n    weights_grad = evaluate_gradient(loss_fun, data, weights)\n    weights += -step_size * weights_grad\n</code></pre> <p><code>step_size</code> is a hyper-parameter called learning rate.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#first-order-optimization","title":"First Order Optimization","text":""},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#stochastic-gradient-descent-sgd","title":"Stochastic Gradient Descent (SGD)","text":"<p>Full sum will be expensive when N is large, so we approximate the sum using a minibatch of examples.</p> \\[ L(W) = \\frac{1}{N}\\sum_{i = 1}^{N}L_i(x_i, y_i, W) + \\lambda R(W) \\] \\[ \\nabla_W L(W) = \\frac{1}{N} \\sum_{i=1}^{N} \\nabla_W L_i(x_i, y_i, W) + \\lambda \\nabla_W R(W) \\] Python<pre><code>while True:\n    data_batch = sample_training_data(data, 256)\n    weights_grad = evaluate_gradient(loss_fun, data_batch, weights)\n    weights += -step_size * weights_grad\n</code></pre> <p>Problems</p> <ol> <li>If the loss changes quickly in one direction and slowly in another, there will be very slow progress along shallow dimension and jitter along steep direction</li> <li>If the loss function has a local minima or saddle point, the gradient descent will get stuck.</li> <li>Our gradients come from minibatches so they can be noisy.</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#sgd-with-momentum-sgdm","title":"SGD with Momentum (SGDM)","text":"<p>While SGD is \\(x_{t + 1} = s_t - \\alpha \\nabla f(x_t)\\), SGD + momentum will be</p> \\[ \\begin{cases} v_{t + 1} = \\rho v_t + \\nabla f(x_t) \\\\ x_{t + 1} = x_t - \\alpha v_{t + 1} \\end{cases} \\] <p>We build up \"velocity\" and \"friction\" \\(\\rho\\) (typicaly \\(\\rho = 0.9\\) or \\(0.99\\))</p> Python<pre><code>vx = 0\nwhile True:\n    dx = compute_gradient(x)\n    vx = rho * vx + dx\n    x -= learning_rate * vx\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#rmsprop","title":"RMSProp","text":"<p>Adds element-wise scaling of the gradient based on the historical sum of squares in each dimension (with decay). \u524d\u9762\u6bcf\u4e00\u6b21\u7684\u68af\u5ea6\u90fd\u5728\u4e0d\u65ad\u7d2f\u79ef\uff0c\u4f46\u662f\u5f71\u54cd\u53c8\u4f1a\u8870\u51cf</p> \\[ \\begin{cases} x_{t+1} = x_t - \\frac{\\eta}{\\sqrt{v_{t+1}}} \\nabla f(x_t) \\\\ v_1 = (\\nabla f(x_0))^2 \\\\ v_{t+1} = \\alpha v_t + (1 - \\alpha)(\\nabla f(x_t))^2 \\end{cases} \\] <p>\\((\\nabla f(x_t))^2\\) denotes the element-wise square of the gradient.</p> Python<pre><code>grad_squared = 0\nwhile True:\n    dx = compute_gradient(x)\n    grad_squared = decay_rate * grad_squared + (1 - decay_rate) * dx * dx\n    x -= learning_rate * dx / (np.sqrt(grad_squared) + 1e-7)\n</code></pre> <p>Why adding <code>1e-7</code>?</p> <p>It's a numerical stability trick called epsilon smoothing\uff0c which can prevent division by 0 or near-zero values.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#adam","title":"Adam","text":"<p>Adam builds upon RMSProp by incorporating the first-moment term \\(m_t\\) and bias correction, which improves convergence speed and stability.</p> \\[ \\begin{cases} g_t = \\nabla f(x_t) &amp; \\text{(\u5f53\u524d\u68af\u5ea6)} \\\\ m_1 = 0,\\quad v_1 = 0 &amp; \\text{(\u4e00\u9636\u4e0e\u4e8c\u9636\u52a8\u91cf\u521d\u503c)} \\\\ m_{t+1} = \\beta_1 m_t + (1 - \\beta_1) g_t &amp; \\text{(\u4e00\u9636\u52a8\u91cf\u4f30\u8ba1)} \\\\ v_{t+1} = \\beta_2 v_t + (1 - \\beta_2) g_t^2 &amp; \\text{(\u4e8c\u9636\u52a8\u91cf\u4f30\u8ba1)} \\\\ \\hat{m}_{t+1} = \\dfrac{m_{t+1}}{1 - \\beta_1^{t+1}} &amp; \\text{(\u4e00\u9636\u52a8\u91cf\u504f\u5dee\u4fee\u6b63)} \\\\ \\hat{v}_{t+1} = \\dfrac{v_{t+1}}{1 - \\beta_2^{t+1}} &amp; \\text{(\u4e8c\u9636\u52a8\u91cf\u504f\u5dee\u4fee\u6b63)} \\\\ x_{t+1} = x_t - \\eta \\cdot \\dfrac{\\hat{m}_{t+1}}{\\sqrt{\\hat{v}_{t+1}} + \\epsilon} &amp; \\text{(\u66f4\u65b0\u53c2\u6570)} \\end{cases} \\] Python<pre><code>first_moment = 0\nsecond_moment = 0\nfor t in range(1, num_iterations):\n    dx = compute_gradient(x)\n\n    # Momentum\n    first_moment = beta1 * first_moment + (1 - beta1) * dx\n\n    # RMSProp / AdaGrad components\n    second_moment = beta2 * second_moment + (1 - beta2) * dx * dx\n\n    # Bias correction\n    first_unbias = first_moment / (1 - beta1 ** t)\n    second_unbias = second_moment / (1 - beta2 ** t)\n\n    # Update\n    x -= learning_rate * first_unbias / (np.sqrt(second_unbias) + 1e-7)\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#adamw-adam-variant-with-weight-decay","title":"AdamW (Adam Variant with Weight Decay)","text":"<p>AdamW is an improvement over Adam that decouples weight decay from the gradient update, commonly used in training deep neural networks such as Transformers and BERT.</p> \\[ \\begin{cases} g_t = \\nabla f(x_t) &amp; \\text{(\u5f53\u524d\u68af\u5ea6)} \\\\ m_1 = 0,\\quad v_1 = 0 \\\\ m_{t+1} = \\beta_1 m_t + (1 - \\beta_1) g_t &amp; \\text{(\u4e00\u9636\u52a8\u91cf)} \\\\ v_{t+1} = \\beta_2 v_t + (1 - \\beta_2) g_t^2 &amp; \\text{(\u4e8c\u9636\u52a8\u91cf)} \\\\ \\hat{m}_{t+1} = \\dfrac{m_{t+1}}{1 - \\beta_1^{t+1}} &amp; \\text{(\u4e00\u9636\u504f\u5dee\u4fee\u6b63)} \\\\ \\hat{v}_{t+1} = \\dfrac{v_{t+1}}{1 - \\beta_2^{t+1}} &amp; \\text{(\u4e8c\u9636\u504f\u5dee\u4fee\u6b63)} \\\\ x_{t+1} = x_t - \\eta \\cdot \\left( \\dfrac{\\hat{m}_{t+1}}{\\sqrt{\\hat{v}_{t+1}} + \\epsilon} \\boxed{ + \\lambda x_t} \\right) &amp; \\text{(\u53c2\u6570\u66f4\u65b0)} \\end{cases} \\] Python<pre><code>first_moment = 0\nsecond_moment = 0\n\nfor t in range(1, num_iterations):\n    dx = compute_gradient(x)\n\n    # Momentum\n    first_moment = beta1 * first_moment + (1 - beta1) * dx\n\n    # RMSProp / AdaGrad components\n    second_moment = beta2 * second_moment + (1 - beta2) * dx * dx\n\n    # Bias correction\n    first_unbias = first_moment / (1 - beta1 ** t)\n    second_unbias = second_moment / (1 - beta2 ** t)\n\n    # AdamW update: \u53c2\u6570\u5148\u6309\u6743\u91cd\u8870\u51cf\u8870\u51cf\uff0c\u518d\u8fdb\u884cAdam\u66f4\u65b0\n    x -= learning_rate * weight_decay * x  # \u6743\u91cd\u8870\u51cf\u90e8\u5206\n\n    # Adam\u66f4\u65b0\u90e8\u5206\n    x -= learning_rate * first_unbias / (np.sqrt(second_unbias) + 1e-7)\n</code></pre> <p>Comparison plots of the optimizers are shown below</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#second-order-optimization","title":"Second Order Optimization","text":"\\[ \\begin{cases} \\displaystyle J(\\theta) \\approx J(\\theta_0) + (\\theta - \\theta_0)^\\top \\nabla_\\theta J(\\theta_0) + \\frac{1}{2} (\\theta - \\theta_0)^\\top H (\\theta - \\theta_0) &amp;\\quad \\text{second-order Taylor expansion} \\\\ \\displaystyle \\theta^* = \\theta_0 - H^{-1} \\nabla_\\theta J(\\theta_0) &amp;\\quad \\text{Newton method} \\end{cases} \\] <p>But the Hessian matrix is way too big!</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#bgfs","title":"BGFS","text":"\\[ \\begin{cases} g_t = \\nabla f(x_t) &amp; \\text{(\u5f53\u524d\u68af\u5ea6)} \\\\ H_0 = I &amp; \\text{(\u521d\u59cb Hessian \u9006\u77e9\u9635)} \\\\ x_{t+1} = x_t - \\eta H_t g_t &amp; \\text{(\u53c2\u6570\u66f4\u65b0)} \\\\ s_t = x_{t+1} - x_t &amp; \\text{(\u53c2\u6570\u5dee)} \\\\ g_{t+1} = \\nabla f(x_{t+1}) &amp; \\text{(\u4e0b\u4e00\u6b65\u68af\u5ea6)} \\\\ y_t = g_{t+1} - g_t &amp; \\text{(\u68af\u5ea6\u5dee)} \\\\ \\rho_t = \\dfrac{1}{y_t^\\top s_t} &amp; \\text{(\u7f29\u653e\u56e0\u5b50)} \\\\ H_{t+1} = \\left(I - \\rho_t s_t y_t^\\top\\right) H_t \\left(I - \\rho_t y_t s_t^\\top\\right) + \\rho_t s_t s_t^\\top &amp; \\text{(BFGS \u66f4\u65b0)} \\end{cases} \\] <p>\\(H_t\\) is an approximate estimate of the inverse Hessian matrix.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#l-bgfs-limited-memory-bgfs","title":"L-BGFS (Limited memory BGFS)","text":"<p>Does not store the full inverse Hessian,</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#how-to-controll-the-learning-rate","title":"How to controll the learning rate?","text":"<p>One approach is to let learning rate decay over time.</p> <p>Way 1: Reduce learning rate at a few fixed points. E.g. for ResNets, multiply LR by 0.1 after epochs 30, 60, and 90</p> <p> </p> <p></p> <p>Way 2: Set learning rate as a decreasing function.   </p> <ul> <li>Cosine: \\(\\displaystyle{\\alpha_t = \\frac{1}{2}\\alpha_0(1 + \\cos (t \\pi / T))}\\) </li> <li>Linear: \\(\\alpha_t = \\alpha_0 (1 - t/T)\\) </li> <li>Inverse Sqrt: \\(\\displaystyle{\\alpha_t = \\alpha_0 / \\sqrt{t}}\\) </li> <li>Linear Warmup: \\(\\text{lr}(t) =  \\begin{cases} \\displaystyle \\frac{t}{T_{\\text{warmup}}} \\cdot \\text{lr}_{\\text{max}}, &amp; \\text{if } t \\leq T_{\\text{warmup}} \\\\ \\text{lr}_{\\text{schedule}}(t), &amp; \\text{otherwise} \\end{cases}\\)</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#image-features","title":"Image Features","text":""},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#histogram-of-oriented-gradients-hog","title":"Histogram of Oriented Gradients (HoG)","text":"<p>Divide each image into \\(8 \\times 8\\) pixel regions. Within each region quantize edge direction into 9 bins.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#bag-of-words","title":"Bag of Words","text":"<ol> <li>Build codebook: Extract random patches from the image and cluster (K-Means) patches to form \"codebook\" of \"visual words\".</li> <li>Encode images.</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/RNN/RNN/","title":"RNN","text":""},{"location":"NoflowersNotes/ComputerVision/RNN/RNN/#vanilla-rnn","title":"Vanilla RNN","text":""},{"location":"NoflowersNotes/ComputerVision/RNN/RNN/#forward","title":"Forward","text":"\\[ \\begin{cases}     \\displaystyle h_t = f_W(h_{t - 1}, x_t) \\\\     \\displaystyle y_t = f_{W_hy}(h_t) \\end{cases} \\] <p>or </p> \\[ h = \\tanh (W_{hh}h_{t - 1} + W_{xh}x_t) = \\tanh \\left(W \\binom{h_{t - 1}}{x_t}\\right) \\] <p></p>"},{"location":"NoflowersNotes/ComputerVision/RNN/RNN/#backpropagation","title":"Backpropagation","text":"\\[ \\frac{\\partial L}{\\partial W} = \\sum_{t=1}^{T} \\frac{\\partial L_t}{\\partial W} \\] \\[ \\frac{\\partial L_T}{\\partial W} = \\frac{\\partial L_T}{\\partial h_T} \\left( \\prod_{t=2}^{T} \\frac{\\partial h_t}{\\partial h_{t-1}} \\right) \\frac{\\partial h_1}{\\partial W} \\] <p>due to</p> \\[ \\frac{\\partial h_t}{\\partial h_{t-1}} = \\tanh'\\left(W_{hh} h_{t-1} + W_{xh} x_t\\right) W_{hh} \\] <p>we have</p> \\[ \\frac{\\partial L_T}{\\partial W} = \\frac{\\partial L_T}{\\partial h_T} \\left( \\prod_{t=2}^{T} \\tanh'\\left(W_{hh} h_{t-1} + W_{xh} x_t\\right) \\right) W_{hh}^{T-1} \\frac{\\partial h_1}{\\partial W} \\] <p>noting that \\(tanh'(x)\\) is almost always less than 1, the gradient will vanish as \\(T\\) increases. And for \\(W_{hh}\\), if its lagest singular value (\u6700\u5927\u5947\u5f02\u503c) &gt; 1, the gradient will explode, if &lt; 1, the gradient will vanish</p> <p>Only backpropagate for some smaller number of steps.</p>"},{"location":"NoflowersNotes/ComputerVision/RNN/RNN/#lstm-long-short-term-memory","title":"LSTM (Long Short Term Memory)","text":"\\[ \\begin{cases} \\displaystyle \\begin{pmatrix} i \\\\ f \\\\ o \\\\ g \\end{pmatrix} = \\begin{pmatrix} \\sigma \\\\ \\sigma \\\\ \\sigma \\\\ \\tanh \\end{pmatrix} W \\begin{pmatrix} h_{t-1} \\\\ x_t \\end{pmatrix} &amp;\\quad \\text{(Four gates)}\\\\ \\displaystyle c_t = f \\odot c_{t-1} + i \\odot g &amp;\\quad \\text{(Cell state)} \\\\ \\displaystyle h_t = o \\odot \\tanh(c_t) &amp;\\quad \\text{(Hidden state)} \\end{cases} \\] <ul> <li>\\(i\\): Input gate, whether to write to cell  </li> <li>\\(f\\): Forget gate, Whether to erase cell  </li> <li>\\(o\\): Output gate, How much to reveal cell  </li> <li>\\(g\\): Gate gate(?), How much to write to cell</li> </ul> <p>if the \\(f = 1\\) and the \\(i = 0\\), then the information of that cell is preserved indefinitely.</p> <p></p> <p>Backpropagation from \\(c_t\\) to \\(c_{t-1}\\) only elementwise multiplication by \\(f\\), no matrix multiply by \\(W\\)</p>"},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/","title":"Video Understanding","text":"<p>Aim: Target is what, it is doing what.</p> <p>Training: Train model to classify short clips with low FPS. Testing: Run model on different clips, average predictions.</p>"},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/#simple-solutions","title":"Simple solutions","text":""},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/#single-frame-cnn","title":"Single-Frame CNN","text":"<p>Train normal 2D CNN to classify video frames independently. (Average predicted probs at test-time)</p>"},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/#late-fusion","title":"Late Fusion","text":"<ul> <li>(With FC Layers) CNN each frame, flatten together, and MLP</li> <li>(With Pooling) CNN each frame, average pool over space and time, and apply a linear layer.</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/#early-fusion","title":"Early Fusion","text":"<p>Reshape \\(T \\times 3 \\times H \\times W\\) to \\(3T \\times H \\times W\\), and sent it to a 2D CNN.</p> <p>Problem</p> <p>One layer of temporal processing may not be enough!</p>"},{"location":"NoflowersNotes/ComputerVision/VideoUnderstanding/VideoUnderstanding/#3d-cnn","title":"3D CNN","text":""},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","title":"\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 584 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#_1","title":"\u641c\u7d22\u95ee\u9898","text":"<p>\u56fe \\(g\\), \u52a8\u4f5c\u7a7a\u95f4 \\(A\\), \u8d77\u70b9\u3001\u7ec8\u70b9\u3002 OPEN \u8868\uff1a\u6240\u6709\u5f85\u6269\u5c55\u8282\u70b9\uff1bCLOSED \u8868\uff1a\u6240\u6709\u5df2\u6269\u5c55\u8282\u70b9</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#_2","title":"\u65e0\u4fe1\u606f\u641c\u7d22","text":"<p>BFS\u3001DFS\u3001UCS(\u4e00\u81f4\u4ee3\u4ef7\u641c\u7d22)</p> <p>BFS: \u4f18\u79c0\u7684\u7a7a\u95f4\u590d\u6742\u5ea6; DFS: \u8fb9\u6743\u5747\u4e3a 1 \u65f6\u80fd\u8fbe\u5230\u6700\u4f18 \u2192 \u5747\u4e3a\u76f2\u76ee\u641c\u7d22</p> <p>UCS: \u4f18\u5148\u5c55\u5f00\u4ee3\u4ef7\u6700\u5c0f\u7684\u7684\u70b9\u7684 BFS \u2192 \u6362\u7528\u4f18\u5148\u961f\u5217 (\u5728\u6709\u8fb9\u6743\u65f6\u4f9d\u7136\u6700\u6709)</p> <p>\u4e0a\u9762\u7684\u641c\u7d22\u5747\u4e3a\u76f2\u76ee\u641c\u7d22\uff0c\u7b97\u6cd5\u8fdb\u884c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u7ec8\u70b9\u4f4d\u7f6e\u4fe1\u606f</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#a","title":"A* \u7b97\u6cd5","text":"<p>\u5bf9\u6bcf\u4e2a\u70b9\u8bc4\u4ef7, \\(f(n) = g(n) + h(n)\\), \u5176\u4e2d - \\(g(n)\\): \u4ece\u8d77\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b9e\u9645\u4ee3\u4ef7 (\u8def\u5f84\u957f\u7b49) - \\(h(h)\\): \u8282\u70b9\u5230\u76ee\u6807\u7684\u542f\u53d1\u5f0f\u8ddd\u79bb\uff0c\u4f8b\u5982\u66fc\u54c8\u987f\u8ddd\u79bb\u6216\u6b27\u5f0f\u8ddd\u79bb\u7b49</p> <p>\u5408\u7406\u7684(admisssible) \\(k(n)\\)</p> \\[ 0 \\leq h(n) \\leq h*(n) \\] <p>\u5176\u4e2d \\(h*(n)\\) \u662f\u771f\u5b9e\u7684 loss</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#hybrid-a","title":"Hybrid A* \u7b97\u6cd5","text":"<p>Hybrid A\uff08\u6df7\u5408 A\uff09\u662f A* \u5728\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u4e0e\u975e\u5b8c\u6574\u7ea6\u675f\uff08\u5982\u8f66\u8f86\u8fd0\u52a8\u5b66\uff09\u4e0a\u7684\u6269\u5c55\u3002\u5b83\u5c06\u79bb\u6563\u641c\u7d22\u7684\u542f\u53d1\u5f0f\u6700\u4f18\u6027\u4e0e\u8fde\u7eed\u63a7\u5236\u7684\u53ef\u884c\u6027\u7ed3\u5408\uff0c\u5e38\u7528\u4e8e\u81ea\u52a8\u9a7e\u9a76/\u6cca\u8f66\u8def\u5f84\u89c4\u5212\u3002</p> <p>\u5bf9\u6bcf\u4e2a\u70b9\u8bc4\u4ef7\uff1a\\(f(n) = g(n) + h(n)\\)</p> <p>\u5176\u4e2d - \\(g(n)\\)\uff1a\u4ece\u8d77\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u7d2f\u8ba1\u5b9e\u9645\u4ee3\u4ef7\uff08\u8def\u5f84\u957f\u5ea6\u3001\u8f6c\u5411/\u66f2\u7387\u60e9\u7f5a\u3001\u6362\u5411\u4ee3\u4ef7\u3001\u78b0\u649e\u6210\u672c\u7b49\uff09 - \\(h(n)\\)\uff1a\u4ece\u5f53\u524d\u8282\u70b9\u5230\u76ee\u6807\u7684\u542f\u53d1\u5f0f\u4f30\u8ba1\u4ee3\u4ef7\uff08\u6b27\u6c0f\u8ddd\u79bb\u3001Dubins \u6216 Reeds\u2013Shepp \u8fd1\u4f3c\u7b49\uff09</p> <p>\u5408\u7406\u7684\uff08admissible\uff09\\(h(n)\\)</p> <p>$$ 0 \\le h(n) \\le h^(n) $$ \u5176\u4e2d \\(h^*(n)\\) \u4e3a\u4ece\u8282\u70b9 \\(n\\) \u5230\u76ee\u6807\u7684\u6700\u5c0f\u53ef\u884c\u4ee3\u4ef7\u3002 \u5728 Hybrid A \u4e2d\uff0c\u5e38\u7528\u6ee1\u8db3\u975e\u5b8c\u6574\u7ea6\u675f\u7684\u6700\u77ed\u66f2\u7ebf\u8fd1\u4f3c\uff08\u5982 Dubins/RS \u8def\u5f84\u957f\u5ea6\uff09\u4f5c\u4e3a\u542f\u53d1\uff0c\u4ee5\u907f\u514d\u9ad8\u4f30\u771f\u5b9e\u4ee3\u4ef7\u3002</p> <ul> <li>\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\uff1a\u8282\u70b9\u72b6\u6001\u4e3a \\((x, y, \\theta)\\)\uff08\u4f4d\u7f6e+\u671d\u5411\uff09\uff0c\u53ef\u9009\u6269\u5c55\u901f\u5ea6/\u66f2\u7387\u7b49\u3002  </li> <li>\u8fd0\u52a8\u5b66\u53ef\u884c\u6269\u5c55\uff1a\u7528\u524d\u5411\u6a21\u62df\uff08forward simulation\uff09\u6309\u8f66\u8f86\u6a21\u578b\uff08\u8f6c\u5411\u89d2\u3001\u6700\u5c0f\u8f6c\u5f2f\u534a\u5f84\u3001\u901f\u5ea6\u3001\u5012\u8f66\uff09\u751f\u6210\u5b50\u8282\u70b9\u3002  </li> <li>\u542f\u53d1\u5f0f\u5f15\u5bfc\uff1a\u4ecd\u91c7\u7528 \\(f=g+h\\) \u7684\u4f18\u5148\u961f\u5217\u641c\u7d22\u4ee5\u63d0\u9ad8\u5168\u5c40\u6548\u7387\u3002  </li> <li>\u6805\u683c\u5360\u636e+\u78b0\u649e\u68c0\u6d4b\uff1a\u5728\u8fde\u7eed\u8f68\u8ff9\u6bb5\u4e0a\u8fdb\u884c\u79bb\u6563\u91c7\u6837/\u78b0\u649e\u68c0\u6d4b\u3002  </li> <li>\u8def\u5f84\u540e\u5904\u7406\uff1a\u5bf9\u7c97\u8def\u5f84\u8fdb\u884c\u66f2\u7ebf\u4f18\u5316\uff08\u4f8b\u5982\u6837\u6761/\u68af\u5ea6\u6cd5\uff09\u63d0\u5347\u5e73\u6ed1\u6027\u4e0e\u53ef\u63a7\u6027\u3002</li> </ul>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#hn","title":"\u542f\u53d1\u51fd\u6570\uff08\\(h(n)\\)\uff09\u793a\u4f8b","text":"\u542f\u53d1\u7c7b\u578b \u9002\u7528\u6027 \u8bf4\u660e \u6b27\u6c0f\u8ddd\u79bb \u901a\u7528 \u5ffd\u7565\u8f6c\u5411\u4e0e\u6700\u5c0f\u534a\u5f84\uff0c\u4ec5\u6d4b\u76f4\u7ebf\u8ddd\u79bb\uff0c\u6536\u655b\u5feb\u4f46\u4fdd\u5b88 Dubins \u8def\u5f84 \u4ec5\u524d\u8fdb \u6ee1\u8db3\u6700\u5c0f\u8f6c\u5f2f\u534a\u5f84\u7684\u6700\u77ed\u66f2\u7ebf\u8def\u5f84 Reeds\u2013Shepp \u8def\u5f84 \u53ef\u524d\u540e\u5012\u8f66 \u5141\u8bb8\u6362\u5411\uff08\u524d/\u540e\uff09\uff0c\u66f4\u8d34\u8fd1\u6cca\u8f66/\u7a84\u7a7a\u95f4\u673a\u52a8"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E7%BB%AA%E8%AE%BA/%E7%BB%AA%E8%AE%BA/","title":"\u7eea\u8bba","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 140 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E7%BB%AA%E8%AE%BA/%E7%BB%AA%E8%AE%BA/#_1","title":"\u804a\u5929\u8bfe","text":"<ul> <li>\u5f00\u653e\u6743\u91cd\uff1a\u53ea\u80fd finetune \u96be\u4ee5\u5b8c\u5168\u8bad\u7ec3</li> <li>\u79c1\u6709\u5316\u90e8\u7f72</li> <li>Hallucination (\u5e7b\u89c9)\uff1a\u9519\u8bef\u4fe1\u606f / \u5ffd\u7565\u5df2\u6709\u4fe1\u606f</li> <li>RAG \u68c0\u7d22\u589e\u5f3a\u751f\u6210 (Retrieval Augmented Generation) \u5c3d\u91cf\u51cf\u5c11\u5e7b\u89c9</li> <li>Embedding \u8bcd\u5d4c\u5165\uff0c\u6307\u7f16\u7801\u4fe1\u606f</li> <li>Multimodal \u591a\u6a21\u6001</li> <li>Agent \u667a\u80fd\u4f53</li> <li>MCP \u6a21\u578b\u4e0a\u4e0b\u6587\u534f\u8bae</li> <li>Model Compression \u6a21\u578b\u538b\u7f29</li> <li>Distillation \u84b8\u998f\uff0c\u6307\u6a21\u578b</li> <li>LoRA \u4f1a\u5199\u5355\u72ec\u4ecb\u7ecd</li> <li>RLHF \u4eba\u7c7b\u53cd\u9988\u5f3a\u5316\u5b66\u4e60\uff0c\u6709\u7684\u5f3a\u5316\u5b66\u4e60\u96be\u4ee5\u7528\u7b80\u5355\u7684\u5956\u52b1\u51fd\u6570\u6765\u4f18\u5316</li> <li>baseline \u57fa\u7ebf\u6a21\u578b\uff0c\u6307\u4e00\u4e2a\u57fa\u51c6\u65b9\u6cd5\u7528\u4e8e\u548c\u81ea\u5df1\u7684\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\u4ee5\u5224\u522b\u81ea\u5df1\u6a21\u578b\u7684\u6027\u80fd</li> </ul>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","title":"\u96f6\u548c\u535a\u5f08\u641c\u7d22\u7b97\u6cd5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 81 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u96f6\u548c\u535a\u5f08: \u4e24\u65b9\u73a9\u5bb6\u90fd\u8fdb\u884c\u6700\u6709\u51b3\u7b56\uff0c\u5b9e\u73b0\u81ea\u5df1\u5229\u76ca\u6700\u5927\u5316</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#minimax","title":"Minimax \u7b97\u6cd5","text":"<p>\u672c\u4f53\u7565</p>"},{"location":"NoflowersNotes/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/#alpha-beta","title":"alpha-beta \u526a\u679d","text":"<p>\\(\\alpha\\): MAX \u5728\u8be5\u8def\u5f84\u5230\u8ddf\u4e0a\u7684\u5f53\u524d\u6700\u5927\u53d6\u503c -- \u4e0b\u754c; \\(\\beta\\): MIN \u5728\u8be5\u8def\u5f84\u5230\u6839\u4e0a\u7684\u5f53\u524d\u6700\u5c0f\u53d6\u503c -- \u4e0a\u754c\u3002</p> <p>\u770b\u4f2a\u4ee3\u7801</p> Text Only<pre><code>def max-value(state, alpha, beta):\n    v = - infty\n    for each successor of state:\n        v = max(v, min-value(successor, alpha, beta)\n        if v &gt;= beta return v\n        alpha = max(alpha, v)\n    return v\n\ndef min-value(state, alpha, beta):\n    v = - infty\n    for each successor of state:\n        v = min(v, max-value(successor, alpha, beta)\n        if v &lt;= alpha return v\n        beta = min(beta, v)\n    return v\n\nCall max-value(root, -infty, +infty)\n</code></pre> <p>\u8ba9 AI \u5e2e\u6211\u5199\u4e2a\u53ef\u89c6\u5316\u5427 \u53cd\u6b63\u4e5f\u4e0d\u96be</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/","title":"\u4fe1\u53f7\u57fa\u7840\u77e5\u8bc6","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 238 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/#_1","title":"\u4fe1\u53f7\u57fa\u672c\u6982\u5ff5","text":"<p>\u4fe1\u606f\u7684\u8868\u73b0\u5f62\u5f0f\u4e0e\u4f20\u9001\u8f7d\u4f53</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/#_2","title":"\u4fe1\u53f7\u5206\u7c7b","text":"\\[ \\begin{array}{c} \\left\\{ \\begin{array}{l} \\text{\u786e\u5b9a\u4fe1\u53f7\uff1a\u80fd\u591f\u7528\u51fd\u6570\u8868\u793a\u7684} \\\\ \\text{\u968f\u673a\u4fe1\u53f7\uff1a\u4e0d\u80fd\u7528\u51fd\u6570\u8868\u793a\u4f46\u662f\u53ef\u4ee5\u6709\u786e\u5b9a\u7684\u6982\u7387\u5206\u5e03} \\end{array} \\right. \\end{array} \\] \\[ \\begin{array}{c} \\left\\{ \\begin{array}{l} \\text{\u8fde\u7eed\u4fe1\u53f7\uff1a\u65f6\u95f4\u8fde\u7eed\u91c7\u6837\uff0c\u5e38\u89c1\u4e3a\u6a21\u62df\u4fe1\u53f7\uff08\u53d6\u503c\u4e5f\u9700\u8981\u8fde\u7eed\uff09} \\\\ \\text{\u79bb\u6563\u4fe1\u53f7\uff1a\u65f6\u95f4\u79bb\u6563\u91c7\u6837} \\end{array} \\right. \\end{array} \\] <p>\u80fd\u91cf\u4e0e\u529f\u7387</p> <p>\u5bf9\u8fde\u7eed\u4fe1\u53f7 \\(f(t)\\), </p> \\[ W = \\lim_{T \\to \\infty} \\int_{-T/2}^{T/2}f^2(t) \\mathrm{d}t \\qquad P = \\lim_{T \\to \\infty} \\frac{1}{T}\\int_{-T/2}^{T/2}f^2(t) \\] <p>\u5bf9\u79bb\u6563\u4fe1\u53f7 \\(f[k]\\),</p> \\[ W = \\lim_{N \\to \\infty} \\sum_{-N}^{N}f^2[k] \\qquad P = \\lim_{N \\to \\infty}\\frac{1}{2N + 1} \\sum_{-N}^{N}f^2[k] \\] <p>\u6709\u5b9a\u4e49</p> \\[ \\begin{array}{c} \\left\\{ \\begin{array}{l} \\text{\u80fd\u91cf\u4fe1\u53f7\uff1a\u529f\u7387\u4e3a 0 \u800c\u80fd\u91cf\u6709\u9650} \\\\ \\text{\u529f\u7387\u4fe1\u53f7\uff1a\u80fd\u91cf\u53d1\u6563\u800c\u529f\u7387\u6709\u9650} \\end{array} \\right. \\end{array} \\] <p>\u76f4\u6d41\u4fe1\u53f7\u4e0e\u5468\u671f\u4fe1\u53f7\u90fd\u662f\u529f\u7387\u4fe1\u53f7\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/#_3","title":"\u5e38\u7528\u7684\u8fde\u7eed\u65f6\u95f4\u4fe1\u53f7","text":""},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/#_4","title":"\u5178\u578b\u666e\u901a\u4fe1\u53f7","text":"<p>\u76f4\u6d41\u4fe1\u53f7 \\(f(t) = A\\)</p> <p>\u5b9e\u6307\u6570\u4fe1\u53f7 \\(\\displaystyle f(t) = A\\mathrm{e}^{\\alpha t}, \\alpha \\in \\mathbb{R}\\)</p> <p>\u865a\u6307\u6570\u4fe1\u53f7 \\(\\displaystyle f(t) = A\\mathrm{e}^{\\mathrm{j}\\omega_0 t}\\) \u4e3a\u5468\u671f\u4e3a \\(\\displaystyle T_0 = \\frac{2\\pi}{\\vert \\omega_0 \\vert}\\) \u7684\u5468\u671f\u4fe1\u53f7</p> <p>\u590d\u6307\u6570\u4fe1\u53f7 \\(\\displaystyle f(t) = A\\mathrm{e}^{(\\sigma + \\mathrm{j}\\omega_0) t}\\)</p> <p>\u62bd\u6837\u4fe1\u53f7(Sa \u4fe1\u53f7) \\(\\displaystyle \\mathrm{Sa}(t) = \\frac{\\sin x}{x}\\) \u6709\u6027\u8d28 \\(\\displaystyle \\int_{-\\infty}^{\\infty}\\mathrm{Sa}(t)\\mathrm{d}t = 1\\), \u76f8\u4f3c\u7684\u6709 \\(\\displaystyle \\mathrm{sinc}(t) = \\frac{\\sin \\pi x}{\\pi x}\\).</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_1/Lec_1/#_5","title":"\u5947\u5f02\u4fe1\u53f7","text":"<p>\u5355\u4f4d\u8dc3\u9636\u4fe1\u53f7 </p> <p>\\(\\displaystyle u(x) = \\begin{cases}1 &amp; t &gt; 0 \\\\ 0 &amp; t &lt; 0\\end{cases}\\), \\(t = 0\\) \u65f6\u4e0d\u505a\u5b9a\u4e49\u4e0e\u8003\u8651.</p> \u5355\u4f4d\u8dc3\u9636\u4fe1\u53f7\u7684\u4f5c\u7528 <ol> <li>\u8868\u793a\u65b9\u6ce2\u8109\u51b2\u4fe1\u53f7: \\(f(t) = u(t - T) - u(t - 2T)\\)</li> <li>\u8868\u793a\u5176\u5b83\u4fe1\u53f7\u7684\u8303\u56f4: \\(f(t) = \\sin \\omega_0 t \\cdot u(t)\\)</li> </ol> <p>\u51b2\u6fc0\u4fe1\u53f7</p> <p>\u7528\u4e8e\u8868\u793a\u6781\u77ed\u4f46\u662f\u5f88\u5f3a\u7684\u4fe1\u53f7\uff0c\u5e38\u7528 Dirac \u5b9a\u4e49:</p> \\[ \\begin{cases}     \\displaystyle \\delta(t) = 0, &amp; t \\neq 0 \\\\     \\displaystyle \\int_{-\\infty}^{\\infty}\\delta(t) \\mathrm{d}t = 1 &amp; \\end{cases} \\] <p>\u56fe\u793a\uff1a</p> <p>\u6709\u4e24\u79cd\u6781\u9650\u6a21\u578b\uff1a</p> <p>\u6027\u8d28\uff1a</p> <ol> <li>\u7b5b\u9009\u7279\u6027: \\(f(t)\\delta(t - t_0) = f(t_0)\\delta(t - t_0)\\)</li> <li>\u53d6\u6837\u7279\u6027: \\(\\displaystyle \\int_{-\\infty}^{\\infty}f(t)\\delta(t - t_0)\\mathrm{d}t = f(t_0)\\) (\u5377\u79ef\u7279\u6027 \\(\\displaystyle \\int_{-\\infty}^{\\infty}f(\\tau)\\delta(t - \\tau)\\mathrm{d}\\tau = f(t)\\))</li> <li>\u5c55\u7f29\u7279\u6027: \\(\\displaystyle \\delta(\\alpha t) = \\frac{1}{|\\alpha|}\\delta(t)\\Rightarrow \\delta(t)\\) \u662f\u5076\u51fd\u6570</li> <li>\\(\\displaystyle \\frac{\\mathrm{d}u(t)}{\\mathrm{d} t} = \\delta (t)\\)</li> </ol> <p>\u659c\u5761\u4fe1\u53f7</p> \\[ r(t) = \\begin{cases}t, &amp;\\quad t &gt; 0 \\\\ 0, &amp;\\quad t &lt; 0\\end{cases} \\] \\[ r(t) = \\int_{-\\infty}^{t}u(\\tau) \\mathrm{d}\\tau \\] <p>\u51b2\u6fc0\u5076\u4fe1\u53f7</p> \\[ \\delta'(t) = \\frac{\\mathrm{d}\\delta(t)}{\\mathrm{d}t} \\] <p>\u662f\u5947\u51fd\u6570</p> <p>\u6b63\u4ea4\u4fe1\u53f7</p> <p>\u4e24\u4e2a\u4fe1\u53f7\u4e58\u79ef\u7684\u79ef\u5206\u4e3a 0</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_2/Lec_2/","title":"\u7cfb\u7edf\u53ca\u5176\u5206\u7c7b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 621 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_2/Lec_2/#_1","title":"\u7cfb\u7edf","text":"<p>\u5e38\u7528\u5fae\u5206\u65b9\u7a0b\u7ec4\u8868\u793a</p> <p>\u8fde\u7eed\u65f6\u95f4\u7cfb\u7edf\u3001\u79bb\u6563\u65f6\u95f4\u7cfb\u7edf </p> <p>\u8bb0\u5fc6\u7cfb\u7edf\u3001\u65e0\u8bb0\u5fc6\u7cfb\u7edf</p> <p>\u7ebf\u6027\u7cfb\u7edf\u3001\u975e\u7ebf\u6027\u7cfb\u7edf</p> <p>\u7ebf\u6027\u7cfb\u7edf\u6ee1\u8db3\u6027\u8d28\uff1a</p> <ol> <li>\u5747\u5300\u6027: \u82e5 \\(T(f_1(t)) = y_1(t)\\), \u5219 \\(T(k\\cdot f_1(t)) = k\\cdot y_1(t)\\), \u4efb\u610f\u590d\u6570 \\(k\\).  </li> <li>\u53ef\u52a0\u6027: \u82e5\u8fd8\u6709 \\(T(f_2(t)) = y_2(t)\\), \u5219 \\(T(f_1(t) + f_2(t)) = y_1(t) + y_2(t)\\)</li> </ol> <p>\u4e5f\u5373 \\(T(a f_1(t) + bf_2(t)) = ay_1(t) + by_2(t)\\)</p> <p>\\(a, b\\) \u90fd\u662f\u4efb\u610f\u5e38\u6570 (\u590d\u6570\u57df\u5185)\uff0c\u5426\u5219\u8be5\u7cfb\u7edf\u5c31\u4e0d\u662f\u7ebf\u6027\u7cfb\u7edf; \u5728\u8868\u8fbe\u5f0f \\(T(a f_1(t) + bf_2(t))\\), \u8981\u628a \\(a f_1(t) + bf_2(t)\\) \u770b\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u4fe1\u53f7\uff0c\u628a \\(t\\) \u89c6\u4e3a\u5e38\u6570.</p> <p>\u589e\u91cf\u7ebf\u6027\u7cfb\u7edf</p> <p>\u5373\u8be5\u7cfb\u7edf\u7684\u589e\u91cf\u4e3a\u7ebf\u6027\u7cfb\u7edf\u3002(\\(T(f_2(t) - f_1(t)) = y_2(t) - y_1(t)\\)) \u4efb\u610f\u589e\u91cf\u7ebf\u6027\u7cfb\u7edf\u80fd\u89c6\u4e3a\u5728\u4e00\u4e2a\u7ebf\u6027\u7cfb\u7edf (\\(y(t) = T(f(t))\\)) \u7684\u57fa\u7840\u4e0a\u53e0\u52a0\u4e00\u4e2a\u4e0e\u8f93\u5165\u65e0\u5173\u7684\u76f8\u5e94 \\(y_0(t)\\) \u5f53 \\(y_0(t) = 0\\) \u65f6\uff0c\u7cfb\u7edf\u8f93\u51fa\u54cd\u5e94\u5b8c\u5168\u7531 \\(f(t)\\) \u51b3\u5b9a\uff0c\u6b64\u65f6\u7684 \\(y_f(t) = T(f(t))\\) \u79f0\u4e3a\u7cfb\u7edf\u7684\u96f6\u72b6\u6001\u54cd\u5e94</p> <p>\u4e00\u4e9b\u4f8b\u5b50</p> <ol> <li>\\(y_f(t) = t^2 f(t)\\) \u662f\u7ebf\u6027\u7cfb\u7edf   </li> <li>\\(\\displaystyle y_f(t) = \\frac{\\mathrm{d}f(t)}{\\mathrm{d}t}\\) \u662f\u7ebf\u6027\u7cfb\u7edf  </li> <li>\\(\\displaystyle y_f(t) = \\frac{\\mathrm{d}f(t)}{\\mathrm{d}t} \\cdot f(t)\\) \u4e0d\u662f\u7ebf\u6027\u7cfb\u7edf</li> </ol> <p>\u65f6\u53d8\u7cfb\u7edf\u3001\u65f6\u4e0d\u53d8\u7cfb\u7edf</p> <p>\u65f6\u53d8\u7cfb\u7edf: \u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u8f93\u5165\u4fe1\u53f7\u6709\u4e00\u4e2a\u65f6\u79fb\u65f6\uff0c\u8f93\u51fa\u76f8\u5e94\u4e5f\u4ea7\u751f\u540c\u6837\u7684\u65f6\u79fb\uff0c\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u5176\u5b83\u53d8\u5316\uff0c\u5219\u4e3a\u65f6\u4e0d\u53d8 (time-invariant) \u7cfb\u7edf</p> <p>\u4e5f\u5373: \\(T(f(t - t_0)) = y(t - t_0)\\)</p> <p>\u7ebf\u6027\u65f6\u4e0d\u53d8\u7cfb\u7edf (LTI)</p> <p>\u53ef\u7531\u5b9a\u5e38\u7cfb\u6570\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u8868\u793a</p> <p>\u4e00\u4e9b\u4f8b\u5b50</p> <ol> <li>\\(y_f(t) = \\sin f(t)\\) \u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf    </li> <li>\\(y_f(t) = t f(t)\\) \u4e0d\u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf  </li> <li>\\(y_f(t) = f(t + 1)\\) \u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf  </li> <li>\\(y_f(t) = f(2t)\\) \u4e0d\u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf  </li> <li>\\(\\displaystyle y_f(t) = \\int_{-\\infty}^{t}f(\\tau) \\mathrm{d}\\tau\\) \u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf  </li> <li>\\(u(f(t))\\) \u662f\u65f6\u4e0d\u53d8\u7cfb\u7edf\uff1b\\(u(t)\\) \u662f\u65f6\u53d8\u7cfb\u7edf</li> </ol> <p>\u6709\u89c4\u5f8b\uff1a\u5728\u7cfb\u7edf\u81ea\u8eab\u53c2\u6570\u542b\u6709 \\(t\\) \u6216\u8005\u6709\u65f6\u95f4\u5c3a\u5ea6\u53d8\u6362\uff0c\u5219\u662f\u65f6\u53d8\u7cfb\u7edf.</p> <p>LTI \u4e2d\u7684\u6307\u6570\u4fe1\u53f7</p> \\[ \\begin{aligned} f(t) &amp;= e^{st} \\\\ T[e^{st}] &amp;= y(t) \\\\ T[s \\cdot e^{st}] &amp;= s \\cdot y(t) \\\\ T\\!\\left[\\frac{d}{dt} e^{st}\\right] &amp;= T[s \\cdot e^{st}] = s \\cdot y(t) = \\frac{dy(t)}{dt} \\\\ \\frac{dy(t)}{y(t)} &amp;= s \\, dt \\\\ \\ln[y(t)] &amp;= st + C \\\\ y(t) &amp;= e^{C} \\cdot e^{st} = k \\cdot f(t) \\end{aligned} \\] <p>\u56e0\u6b64\u6709\u7ed3\u8bba\uff1a(\u590d)\u6307\u6570\u4fe1\u53f7\u662fLTI\u7cfb\u7edf\u7684\u7279\u5f81\u51fd\u6570</p> <p>\u56e0\u679c\u7cfb\u7edf\u3001\u975e\u56e0\u679c\u7cfb\u7edf</p> <p>\u82e5\u4e00\u4e2a\u7cfb\u7edf\u5728\u4efb\u4f55\u65f6\u523b\u7684\u8f93\u51fa\u90fd\u53ea\u4e0e\u5f53\u65f6\u8fd9\u4e2a\u65f6\u523b\u7684\u8f93\u5165\u4ee5\u53ca\u8be5\u65f6 \u523b\u4ee5\u524d\u7684\u8f93\u5165\u6709\u5173\uff0c\u800c\u548c\u8be5\u65f6\u523b\u4ee5\u540e\u7684\u8f93\u5165\u65e0\u5173\u5c31\u79f0\u8be5\u7cfb\u7edf\u662f\u56e0\u679c\u7684\u3002\u5426\u5219\u662f\u975e\u56e0\u679c\u7684\u3002 \u975e\u56e0\u679c\u7cfb\u7edf\u662f\u7269\u7406\u4e0d\u53ef\u5b9e\u73b0\u7684\u3002 LTI \u7cfb\u7edf\u56e0\u679c\u7684\u5145\u8981\u6761\u4ef6\u662f\u51b2\u6fc0\u54cd\u5e94\u662f\u56e0\u679c\u54e6\u4fe1\u53f7\u3002</p> <p>\u4e00\u4e9b\u4f8b\u5b50</p> <ol> <li>\\(y(t) = f(t - 2) + f(2 - t)\\) \u4e0d\u662f\u56e0\u679c\u4fe1\u53f7 (\\(t=0\\) \u7684\u65f6\u523b\uff0c\u9700\u8981\u77e5\u9053\u5728\u672a\u6765\u7684 \\(x=2\\) \u65f6\u523b\u7684 \\(x(t)\\)\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u56e0\u679c\u7cfb\u7edf)  </li> <li>\\(y(t) = f(t) \\cos (2 - t)\\) \u662f\u56e0\u679c\u4fe1\u53f7 (\u56e0\u4e3a \\(\\cos (2 - t)\\) \u662f\u786e\u5b9a\u7684\u503c)  </li> <li>\\(y(t) = f'(t)\\) \u662f\u56e0\u679c\u4fe1\u53f7 (\u56e0\u4e3a\u53ef\u4ee5\u7528\u4e4b\u524d\u7684\u65f6\u95f4\u5b9e\u73b0\u8ba1\u7b97)</li> </ol> <p>\u7a33\u5b9a\u7cfb\u7edf\u3001\u4e0d\u7a33\u5b9a\u7cfb\u7edf</p> <p>\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u5f53\u8f93\u5165\u6709\u754c\u65f6 (\\(f\\) \u6709\u754c \u800c\u4e0d\u662f \\(t\\) \u6709\u754c\uff01)\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u4e5f\u662f\u6709\u754c\u7684\uff0c\u5219\u8be5\u7cfb\u7edf\u662f\u7a33\u5b9a\u7cfb\u7edf (stable system)\u3002 LTI \u7cfb\u7edf\u7a33\u5b9a\u7684\u5145\u8981\u6761\u4ef6\u662f \\(\\displaystyle \\int_{-\\infty}^{\\infty} \\vert h(\\tau)\\vert\\mathrm{d}\\tau &lt; \\infty\\) (\\(h(t)\\) \u662f\u51b2\u6fc0\u54cd\u5e94\uff01)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/","title":"\u9762\u5411\u7ebf\u6027\u65f6\u4e0d\u53d8\u7cfb\u7edf\u7684\u4fe1\u53f7\u5206\u89e3\u57fa\u7840","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 179 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u5206\u89e3\u5747\u4e3a\u6b63\u4ea4\u5206\u89e3</p> <p>\u53ea\u9700\u6c42\u89e3\u5404\u4e2a\u57fa\u51fd\u6570\u4fe1\u53f7\u901a\u8fc7\u7cfb\u7edf\u7684\u54cd\u5e94\uff0c\u5373\u53ef\u5229\u7528\u7ebf\u6027\u65f6\u4e0d\u53d8\u7cfb\u7edf\u7684\u7279\u6027\u6c42\u5f97\u539f\u4fe1\u53f7\u7684\u5173\u4e8e\u7cfb\u7edf\u7684\u54cd\u5e94\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/#_1","title":"\u5206\u89e3\u4e3a\u76f4\u6d41\u5206\u91cf\u4e0e\u4ea4\u6d41\u5206\u91cf","text":"\\[ f(t) = f_{\\text{DC}}(t) + f_{\\text{AC}}(t) \\] \\[ f_{\\mathrm{DC}}(t) = \\frac{1}{b - a}\\int_a^bf(t)\\mathrm{d}t \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/#_2","title":"\u5206\u89e3\u4e3a\u5947\u5206\u91cf\u548c\u5076\u5206\u91cf","text":"<p>(\u7565)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/#_3","title":"\u5206\u89e3\u4e3a\u5b9e\u5206\u91cf\u548c\u865a\u5206\u91cf","text":"<p>(\u7565)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/#_4","title":"\u5206\u89e3\u4e3a\u51b2\u6fc0\u51fd\u6570\u7684\u7ebf\u6027\u7ec4\u5408","text":"\\[ f(t) = \\int_{-\\infty}^{\\infty}f(\\tau)\\delta(t - \\tau)\\mathrm{d}\\tau = f(t) \\otimes \\delta(t) \\] <p>\u76f8\u5f53\u4e8e\u51b2\u6fc0\u4fe1\u53f7\u7684\u7d2f\u52a0 \\(f(t)\\): \u5e45\u5ea6; \\(\\delta(t)\\) \u51fa\u73b0\u65f6\u95f4</p> <p>\u5e94\u7528\uff1a\u5728\u7ebf\u6027\u65f6\u4e0d\u53d8\u7cfb\u7edf\u4e2d\u53ea\u8981\u77e5\u9053\u67d0\u4e00\u65f6\u523b\u7684\u51b2\u6fc0\u4fe1\u53f7\u901a\u8fc7\u8be5\u7cfb\u7edf\u4ea7\u751f\u7684\u54cd\u5e94\uff0c\u5373\u53ef\u6c42\u5f97 \\(f(t)\\) \u4ea7\u751f\u7684\u54cd\u5e94</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_3/Lec_3/#_5","title":"\u5206\u89e3\u4e3a\u865a\u6307\u6570\u51fd\u6570\u7684\u7ebf\u6027\u7ec4\u5408 (\u5085\u91cc\u53f6\u53d8\u6362)","text":"<p>\u5206\u89e3\u4e3a \\(\\mathrm{e}^{\\mathrm{j}\\omega t}\\)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/","title":"LTI \u7cfb\u7edf\u7684\u65f6\u57df\u5206\u6790","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 902 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u5fae\u5206\u65b9\u7a0b\u548c\u7279\u5f81\u6839</p> <p>\u5bf9\u4e8e \\(\\displaystyle \\sum a_n \\frac{\\mathrm{d}^n y}{\\mathrm{d}t^n} = C\\), \u5bf9\u5e94\u7279\u5f81\u65b9\u7a0b \\(\\displaystyle \\sum a_ns^n = 0\\), \u5176\u89e3 \\(s_1, \\cdots, s_n\\), \u5f97\u9f50\u6b21\u89e3\u89e3 \\(\\displaystyle y = \\sum A_n \\mathrm{e}^{s_n t}\\), \\(A_n\\) \u7531\u521d\u59cb\u6761\u4ef6\u51b3\u5b9a\uff0c\u518d\u4ee3\u5165\u7531 \\(C\\) \u786e\u5b9a\u7279\u89e3\uff0c\u6700\u540e\u89e3\u4e3a \u9f50\u6b21\u89e3 + \u7279\u89e3</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/#lti","title":"\u5229\u7528 LTI \u7cfb\u7edf\u7684\u7279\u6027","text":"<p>\u8f93\u51fa\u54cd\u5e94\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a - \u521d\u59cb\u72b6\u6001\u4e3a 0 \u65f6\u3001\u5b8c\u5168\u7531\u8f93\u5165\u4fe1\u53f7 \\(f(t)\\) \u51b3\u5b9a\u7684\u7cfb\u7edf\u54cd\u5e94 \u2014 \u96f6\u72b6\u6001\u54cd\u5e94 \\(y_f(t)\\) (\u5f3a\u8feb\u54cd\u5e94) - \u8f93\u5165\u4fe1\u53f7\u4e3a 0 \u65f6\u3001\u5b8c\u5168\u7531\u521d\u59cb\u72b6\u6001 \\(y^{n}(0-)\\) \u51b3\u5b9a\u7684\u7cfb\u7edf\u54cd\u5e94 \u2014 \u96f6\u8f93\u5165\u54cd\u5e94 \\(y_x(t)\\) (\u81ea\u7531\u54cd\u5e94)  </p> <p>\u5176\u4e2d\u96f6\u8f93\u5165\u54cd\u5e94\u80fd\u76f4\u63a5\u901a\u8fc7\u9f50\u6b21\u5fae\u5206\u65b9\u7a0b\u6c42\u5f97 (\u53ea\u4e0e\u521d\u59cb\u503c\u6709\u5173)\uff0c\u4f46\u662f\u96f6\u72b6\u6001\u54cd\u5e94\u4e0e\u53d8\u5316\u7684 \\(f(t)\\) \u6709\u5173\uff0c\u4e0d\u6613\u6c42\u5f97\u3002\u56e0\u6b64\u53ef\u4ee5\u5148\u5c06 \\(f(t)\\) \u5206\u89e3\u540e\u6c42</p> <p>\u5728\u65f6\u57df\u4e2d\uff0c\u5e38\u7528\u51b2\u6fc0\u4fe1\u53f7\u4f5c\u4e3a\u57fa\u672c\u5355\u5143\u4fe1\u53f7 \u2014 \u65f6\u57df\u5206\u6790\u65b9\u6cd5 (\u5e38\u7528\u5377\u79ef\uff0c\u4e5f\u79f0\u5377\u79ef\u6cd5) \u5728\u9891\u57df/\u590d\u9891\u57df\u4e2d\uff0c\u4f7f\u7528\u6307\u6570\u4fe1\u53f7\u4f5c\u4e3a\u57fa\u672c\u5e26\u9662\u4fe1\u53f7 \u2014 \u9891\u57df\u5206\u6790\u65b9\u6cd5 (\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/#_1","title":"\u5229\u7528\u5355\u4f4d\u51b2\u6fc0\u4fe1\u53f7\u7684\u7ebf\u6027\u7ec4\u5408\u5206\u89e3","text":""},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/#_2","title":"\u8fde\u7eed\u65f6\u95f4\u7cfb\u7edf","text":"<p>\u5148\u6c42\u96f6\u72b6\u6001\u54cd\u5e94</p> <p>\u51b2\u6fc0\u54cd\u5e94: \u51b2\u6fc0\u4fe1\u53f7\u6fc0\u52b1\u7cfb\u7edf\u65f6\u4ea7\u751f\u7684\u96f6\u72b6\u6001\u54cd\u5e94\uff0c\u8bb0\u4e3a \\(h(t)\\).</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\\(h(t)\\) \u6ee1\u8db3\uff1a</p> \\[ h^{(n)}(t) + a_{n - 1}h^{(n - 1)}(t) + \\cdots + a_0h(t) = b_m\\delta^{(m)}(t) + \\cdots + b_0\\delta(t) \\] <p>\u663e\u7136 \\(t &gt; 0^+\\) \u65f6 \\(h(t)\\) \u662f\u5176\u6b21\u5fae\u5206\u65b9\u7a0b\u7684\u89e3.</p> \\[ h(t) = \\left( \\sum_{i=1}^n K_i \\, \\mathrm{e}^{s_i t} \\right) u(t) \\] <p>\\(n \\leq m\\) \u65f6, \u4e3a\u4f7f\u65b9\u7a0b\u4e24\u8fb9\u5e73\u8861, \\(h(t)\\) \u5e94\u542b\u6709\u51b2\u6fc0\u53ca\u5176\u9ad8\u9636\u5bfc\u6570\uff0c\u5373</p> \\[ h(t) = \\left( \\sum_{i=1}^n K_i \\, \\mathrm{e}^{s_i t} \\right) u(t) + \\sum_{j=0}^{m-n} A_j \\, \\delta^{(j)}(t) \\] <p>\\(h(t)\\) \u4ee3\u5165\u914d\u5e73\u5373\u53ef.</p> <p>\u7531\u6b64\u5f97</p> \\[ T(f(t)) = y_f(t) = \\int_{-\\infty}^{\\infty}f(\\tau)h(t - \\tau)\\mathrm{d} \\tau = f(t) \\otimes h(t) \\] <p>\u96f6\u8f93\u5165\u54cd\u5e94\u4ec5\u9700\u6c42\u89e3\u5176\u6b21\u5fae\u5206\u65b9\u7a0b\u5373\u53ef</p> <p>\u5b8c\u5168\u54cd\u5e94 = \u96f6\u72b6\u6001\u54cd\u5e94 + \u96f6\u8f93\u5165\u54cd\u5e94</p> <p>\u5377\u79ef\u79ef\u5206\u7684\u8ba1\u7b97\u4e0e\u6027\u8d28</p> <p>\u5b9a\u4e49 \\(\\displaystyle y(t) = f(t) \\otimes h(t) = \\int_{-\\infty}^{\\infty}f(\\tau)h(t - \\tau) \\mathrm{d} \\tau\\)</p> <p>\u4e24\u4e2a\u65b9\u6ce2\u4fe1\u53f7\u5377\u79ef\uff0c\u5f97\u5230\u7ed3\u679c\u4e3a\u68af\u5f62\uff0c\u5e95\u8fb9\u957f\u4e3a\u65b9\u6ce2\u5bbd\u5ea6\u7684\u548c\uff0c\u4e0a\u8fb9\u957f\u4e3a\u65b9\u6ce2\u4fe1\u53f7\u5bbd\u5ea6\u7684\u5dee</p> <p>\u7406\u89e3\uff1a \\(\\tau\\) \u4f5c\u7528\u65f6\u523b\uff0c\\(t\\) \u89c2\u5bdf\u65f6\u523b\uff0c\u79ef\u5206\uff1a\u6240\u6709\u4f5c\u7528\u65f6\u523b\u54cd\u5e94\u7684\u53e0\u52a0</p> <p>\u56e0\u679c\u4fe1\u53f7\u4e2d\uff0c\u79ef\u5206\u4e0a\u4e0b\u9650\u53ef\u4ee5\u6362\u4e3a \\([0, t]\\)</p> <p>\u51e0\u4e2a\u4f8b\u5b50</p> \\[ u(t) \\otimes u(t) = r(t) \\] \\[ \\displaystyle \\mathrm{e}^{\\alpha t}\\otimes \\mathrm{e}^{\\beta t} = \\begin{cases}\\displaystyle \\frac{\\mathrm{e}^{\\alpha t} - \\mathrm{e}^{\\beta t}}{\\alpha - \\beta}u(t) &amp;\\ \\alpha \\neq \\beta \\\\ t\\mathrm{e}^{\\alpha t}u(t) &amp;\\ \\alpha = \\beta  \\end{cases} \\] <p>\u6709\u4e00\u4e9b\u6027\u8d28\uff1a 1. \u4ea4\u6362\u5f8b \\(\\displaystyle f(t) \\otimes h(t) h(t) \\otimes f(t)\\)     \u53ef\u7528\u7cfb\u7edf\u4f5c\u7528 \\(f(t)\\) \u89d2\u5ea6\u7406\u89e3\uff0c\u540c\u65f6\u8868\u660e \\(h(t), f(t)\\) \u5747\u80fd\u8868\u793a\u4e3a\u51b2\u6fc0\u54cd\u5e94\u4f5c\u4e3a\u7cfb\u7edf\u7684\u63cf\u8ff0\uff1b LTI \u7cfb\u7edf\u7ea7\u8054\u65f6\u53ef\u4ee5\u4ea4\u6362\u5148\u540e\u987a\u5e8f      2. \u5206\u914d\u5f8b \\(x(t) \\otimes (h_1(t) + h_2(t)) = x(t) \\otimes h_1(t) + x(t)\\otimes h_2(t)\\)        \u5e76\u8054\u7cfb\u7edf\u80fd\u5206\u522b\u8ba1\u7b97\u5e76\u76f8\u52a0    3. \u7ed3\u5408\u5f8b (\u516c\u5f0f\u7565)        \u7ea7\u8054\u7cfb\u7edf\u7684\u51b2\u6fc0\u54cd\u5e94\u7b49\u4e8e\u683c\u6784\u6210\u7cfb\u7edf\u51b2\u6fc0\u54cd\u5e94\u7684\u5377\u79ef    4. \u4e0e\u5947\u5f02\u4fe1\u53f7\u7684\u5377\u79ef (\u6700\u597d\u7528\u7cfb\u7edf\u6765\u7406\u89e3)        - \u76f4\u8fde\u7cfb\u7edf \\(x(t) \\otimes \\delta(t) = x(t)\\)        - \u5ef6\u65f6\u7279\u6027 \\(x(t )\\otimes \\delta (t - T) = x(t - T)\\)         - \u5fae\u5206\u7279\u6027 \\(x(t) \\otimes \\delta'(t) = x'(t)\\)        - \u79ef\u5206\u7279\u6027 \\(\\displaystyle x(t) \\otimes u(t) = \\int_{-\\infty}^{t}x(\\tau) \\mathrm{d}\\tau\\)    5. \u4e00\u4e9b\u6027\u8d28\u7684\u7ec4\u5408        - \\(x'(t) \\otimes h(t) = x(t) \\otimes h'(t) = y'(t)\\)\uff0c\u79ef\u5206\u5ef6\u65f6\u7b49\u76f8\u540c.        - \u53ef\u4ee5\u5148\u5fae\u5206\u6210\u51b2\u6fc0\u4fe1\u53f7\u518d\u79ef\u5206\u65b9\u4fbf\u6c42\u5f97  </p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/#_3","title":"\u79bb\u6563\u65f6\u95f4\u7cfb\u7edf","text":"<p>\u96f6\u8f93\u5165\u54cd\u5e94\u76f4\u63a5\u6c42\u9f50\u6b21\u5dee\u5206\u8fd4\u7a0b\u5373\u53ef\u3002</p> <p>\u521d\u59cb\u6761\u4ef6</p> <p>\u5982\u679c\u521d\u59cb\u6761\u4ef6\u7ed9\u7684\u662f \\(y[0], y[1]\\), \u9700\u8981\u6ce8\u610f\u5728\u6b64\u65f6\u6fc0\u52b1\u4fe1\u53f7\u5df2\u7ecf\u4f5c\u7528\u4e86\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u8ba1\u7b97\u96f6\u8f93\u5165\u54cd\u5e94\uff01 \u6b64\u65f6\u9700\u8981\u91cd\u65b0\u8ba1\u7b97 \\(y[-1], y[-2]\\) \u7528\u4e8e\u6c42\u89e3\u96f6\u8f93\u5165\u54cd\u5e94\u3002</p> <p>\u73b0\u6c42\u96f6\u72b6\u6001\u54cd\u5e94\uff0c\u4f7f\u7528\u5377\u79ef\u6cd5\u3002 \u540c\u6837\u4ec5\u9700\u8ba1\u7b97\u5355\u4f4d\u8109\u51b2 (\u6837\u503c/\u6837\u672c) \u54cd\u5e94\u5373\u53ef\u3002\u540c\u6837\u6709</p> <p>\u8fd9\u91cc \\(\\delta\\) \u53eb\u5355\u4f4d\u6837\u503c\u5e8f\u5217</p> \\[ f[k] = \\sum_{n = -\\infty}^{\\infty}f[n]\\delta[k - n] \\Rightarrow \\sum_{n = -\\infty}^{\\infty}f[n]h[k - n] = f[k] \\otimes h[k] \\] <p>\\(h[k]\\) \u6ee1\u8db3:</p> \\[ \\sum_{i = 1}^{n}a_i \\delta[k - i] = \\sum_{i = 1}^{m}b_i h[k - i] \\] <p>\u5148\u8ba1\u7b97\u5173\u4e8e \\(h\\) \u7684\u9f50\u6b21\u5dee\u5206\u65b9\u7a0b\uff0c\u518d\u7531 \\(h[k | k \\leq -1] = 0\\) \u5f97\u5230 \\(h[k]\\) \u7684\u5f62\u5f0f\u3002</p> <p>\u5377\u79ef\u548c\u7684\u8fd0\u7b97\u548c\u6027\u8d28</p> <p>\u4e0d\u8fc7\u591a\u8d58\u8ff0\uff0c\u548c\u4e0a\u9762\u5377\u79ef\u79ef\u5206\u7c7b\u4f3c \u8ba1\u7b97\u5377\u79ef \\(f[k] \\otimes h[k]\\)\u65f6\uff0c\u53ef\u4ee5\u628a \\(f[k]\\) \u5199\u6210\u5355\u4f4d\u6837\u503c\u5e8f\u5217\uff0c\u5728\u5377\u79ef\u4e4b\u540e\u628a \\(\\delta\\) \u6362\u6210 \\(h\\) \u5373\u53ef\u3002</p> <p>\u4f8b\u5b50\uff1a</p> \\[ \\alpha^k u[k] \\otimes \\beta^k u[k] \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_4/Lec_4/#_4","title":"\u53cd\u9988\u7cfb\u7edf\u7684\u51b2\u6fc0\u54cd\u5e94\u548c\u7cfb\u7edf\u7279\u6027\u5206\u6790","text":"<p>\u53cd\u9988\u7cfb\u7edf\u9700\u8981\u5217\u65b9\u7a0b\u6c42\u89e3\uff0c\u4f46\u662f\u9700\u8981\u6c42\u542b\u6709\u5377\u79ef\u7684\u65b9\u7a0b\uff01 \u2192 \u9891\u57df\u5206\u6790\u65b9\u6cd5 (\u4e0b\u6b21\u8bb2)</p> <p>\u5bf9\u4e00\u4e2a\u7cfb\u7edf \\(y(t) = a + b \\mathrm{e}^{\\alpha t} + c \\mathrm{e}^{\\beta t}\\), \u6709\uff1a - \u56fa\u6709\u54cd\u5e94\u4e3a \\(b \\mathrm{e}^{\\alpha t} + c \\mathrm{e}^{\\beta t}\\) - \u5f3a\u8feb\u54cd\u5e94\u4e3a \\(a\\) - \u7a33\u6001\u54cd\u5e94\u4e3a \\(a\\) (\u4e0d\u968f\u65f6\u95f4\u8870\u51cf\u5230 \\(0\\)) - \u6682\u6001\u54cd\u5e94\u4e3a \\(b \\mathrm{e}^{\\alpha t} + c \\mathrm{e}^{\\beta t}\\) (\u4e0e\u4e0a\u9762\u76f8\u53cd)</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/","title":"LTI \u7cfb\u7edf\u7684\u9891\u57df\u5206\u6790","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1649 \u4e2a\u5b57\u00a0\u00a012 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u6307\u6570\u4fe1\u53f7\u7ecf\u8fc7 LTI \u7cfb\u7edf\u4e4b\u540e\u4ecd\u7136\u4e3a\u6307\u6570\u4fe1\u53f7\uff0c\u4ec5\u7cfb\u6570\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u4f8b\u5982\uff0c\\(\\mathrm{e}^{\\mathrm{j} \\omega t}\\) \u7ecf\u8fc7\u7cfb\u7edf \\(h(t)\\), \u7ed3\u679c\u4e3a</p> \\[ y(t) = \\int_{-\\infty}^{\\infty} \\mathrm{e}^{\\mathrm{j} \\omega \\tau}h(\\tau) \\mathrm{d}\\tau = \\mathrm{e}^{\\mathrm{j} \\omega t} \\int_{-\\infty}^\\infty h(\\tau) \\mathrm{e}^{-\\mathrm{j} \\omega t}\\mathrm{d}t = H(\\mathrm{j} \\omega)\\cdot \\mathrm{e}^{\\mathrm{j} \\omega t} \\] <p>\u6211\u4eec\u628a \\(\\displaystyle H(\\mathrm{j} \\omega) = \\int_{-\\infty}^\\infty h(\\tau) \\mathrm{e}^{-\\mathrm{j} \\omega t}\\mathrm{d}t\\) \u79f0\u4e3a \\(h(t)\\) \u7684\u5085\u91cc\u53f6\u53d8\u6362 (\u4e00\u4e2a\u4e0e \\(t\\) \u65e0\u5173\u7684\u5e38\u6570)\u3002 \u5728\u5b9e\u9645\u6c42\u89e3\u4e2d\uff0c\u4e0d\u7528\u663e\u5f0f\u5730\u6c42 \\(H(s)\\), \u800c\u662f\u7528\u5176\u5b83\u65b9\u6cd5\u6c42\u5f97\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_1","title":"\u4fe1\u53f7\u7684\u9891\u57df\u5206\u89e3","text":"<p>\u7531\u4e0a\u9762\u7684\u601d\u8def\uff0c\u5c06\u8f93\u5165 \\(f\\) \u5206\u89e3\u6210\u6307\u6570\u4fe1\u53f7\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5373\u53ef\u66f4\u52a0\u65b9\u4fbf\u5730\u6c42\u5f97\u3002</p> <p>\u5e73\u7a33\u7684\u4fe1\u53f7 (\u5468\u671f\u4fe1\u53f7) \u5206\u89e3\u4e3a\u865a\u6307\u6570\u4fe1\u53f7 \\(\\mathrm{e}^{\\mathrm{j} \\omega t}\\) \u7684\u7ec4\u5408 \u2192 \u5085\u91cc\u53f6\u53d8\u6362 \u622a\u65ad\u6216\u8005\u53d1\u6563\u7684\u4fe1\u53f7 \u5206\u89e3\u4e3a\u590d\u6307\u6570\u4fe1\u53f7 \\(\\mathrm{e}^{st}\\) \u7684\u7ec4\u5408 \u2192 \u62c9\u666e\u62c9\u65af\u53d8\u6362</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_2","title":"\u5468\u671f\u4fe1\u53f7\u7684\u5085\u91cc\u53f6\u7ea7\u6570\u5c55\u5f00","text":"<p>\u5468\u671f\u4e3a \\(\\displaystyle T = \\frac{2\\pi}{\\omega}\\) \u7684\u8fde\u7eed\u65f6\u95f4\u5468\u671f\u4fe1\u53f7 \\(f\\), \u53ef\u4ee5\u5c55\u5f00\u4e3a\u6307\u6570\u51fd\u6570\u96c6 \\(\\{\\exp(\\mathrm{j}n\\omega t)\\}, n = 0, \\pm 1, \\pm 2, \\ldots\\) \u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5373\u6307\u6570\u5f62\u5f0f\u7684\u5085\u91cc\u53f6\u7ea7\u6570 </p> \\[ \\sum_{n = -\\infty}^{\\infty}C_n \\exp(\\mathrm{j}n\\omega t) \\] <p>\u8be5\u6307\u6570\u51fd\u6570\u96c6\u5177\u6709\u6b63\u4ea4\u6027\uff1a\\(\\displaystyle \\int_T \\mathrm{e}^{\\mathrm{j}n\\omega t} \\mathrm{e}^{\\mathrm{j}m\\omega t}\\mathrm{d} t = \\begin{cases}T ,&amp; n = m \\\\ 0, &amp; n \\neq m\\end{cases}\\)</p> <p>\u4e3a\u6c42 \\(C_n\\), \u8ba1\u7b97\u79ef\u5206</p> \\[ \\int_T f(t) \\mathrm{e}^{-\\mathrm{j}n\\omega t}\\mathrm{d}t = \\sum_kC_k \\int_T \\mathrm{e}^{-\\mathrm{j}n\\omega t} \\mathrm{e}^{\\mathrm{j}k\\omega t}\\mathrm{d} t = C_nT \\] <p>\u5373\u53ef\uff0c\\(\\displaystyle C_n = \\frac{1}{T}\\int_T f(t) \\mathrm{e}^{-\\mathrm{j}n\\omega t}\\mathrm{d}t\\)</p> <p>\u7b26\u53f7\u89e3\u91ca</p> <p>\\(\\displaystyle \\int_T\\) \u4e3a\u4efb\u610f\u957f\u5ea6\u4e3a \\(T\\) \u533a\u95f4\u4e0a\u7684\u79ef\u5206</p> <p>\u4f5c\u4e3a\u4fe1\u53f7\uff0c\u6211\u4eec\u79f0 \\(\\omega\\) \u4e3a\u57fa\u6ce2\u89d2\u9891\u7387\uff0c \\(\\displaystyle f = \\frac{\\omega}{2\\pi}\\) \u4e3a\u57fa\u6ce2\u9891\u7387\uff0c \\(C_0\\) \u4e3a\u76f4\u6d41\u5206\u91cf \\(n = \\pm N\\) \u7684\u57fa\u6ce2\u9891\u7387\u4e3a \\(Nf\\), \u4e24\u9879\u5408\u8d77\u6765\u4e3a\u4fe1\u53f7\u7684 \\(N\\) \u6b21\u8c10\u6ce2\u5206\u91cf\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_3","title":"\u5b9e\u4fe1\u53f7\u5c55\u5f00\u4e3a\u4e09\u89d2\u5f62\u5f0f\u5085\u91cc\u53f6\u7ea7\u6570","text":"<p>\u82e5 \\(f\\) \u4e3a\u5b9e\u51fd\u6570\uff0c\u6709</p> \\[ \\begin{aligned} f(t) &amp;= C_0 + \\sum_{n = 1}^{\\infty}C_n \\mathrm{e}^{\\mathrm{j}n\\omega t} + \\sum_{n = -\\infty}^{-1}C_n \\mathrm{e}^{\\mathrm{j}n\\omega t} \\\\ &amp;= C_0 + \\sum_{n = 1}^{\\infty}\\left(C_n \\mathrm{e}^{\\mathrm{j}n\\omega t} + C_{-n}\\mathrm{e}^{-\\mathrm{j}n\\omega t}\\right) \\end{aligned} \\] <p>\u4ee4 \\(\\displaystyle C_n = \\frac{a_n - \\mathrm{j}b_n}{2}\\)\uff0c\u5219 \\(\\displaystyle C_{-n} = \\frac{a_n + \\mathrm{j}b_n}{2}\\)\uff0c\u539f\u5f0f\u5316\u4e3a</p> \\[ \\begin{aligned} f(t) &amp;= \\frac{a_0}{2} + \\sum_{n = 1}^{\\infty}\\left( a_n \\cos n \\omega t + b_n \\sin n \\omega t\\right) \\\\ &amp;=\\frac{a_0}{2} + \\sum_{n = 1}^\\infty A_n \\cos (n\\omega t + \\varphi) \\end{aligned} \\] <p>\u540e\u8005\u88ab\u79f0\u4e3a\u5e26\u521d\u59cb\u76f8\u4f4d\u7684\u7eaf\u4f59\u5f26\u5f62\u5f0f</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_4","title":"\u5468\u671f\u4fe1\u53f7\u53ef\u4ee5\u5c55\u5f00\u4e3a\u5085\u91cc\u53f6\u7ea7\u6570\u7684\u5145\u5206\u6761\u4ef6","text":"<p>Dirichlet \u6761\u4ef6: - \u5728\u4efb\u4f55\u5468\u671f\u5185\u7edd\u5bf9\u53ef\u79ef - \u5728\u4e00\u4e2a\u5468\u671f\u5185\u53ea\u6709\u6709\u9650\u4e2a\u6709\u9650\u7684\u4e0d\u8fde\u7eed\u70b9\uff0c\u4e14\u8fd9\u4e9b\u4e0d\u8fde\u7eed\u70b9\u7684\u503c\u6709\u9650 - \u5728\u4e00\u4e2a\u5468\u671f\u5185\u53ea\u6709\u6709\u9650\u4e2a\u6781\u5927\u503c\u548c\u6781\u5c0f\u503c</p> <p>Gibbs \u73b0\u8c61</p> <p>\u5085\u91cc\u53f6\u7ea7\u6570\u5728\u903c\u8fd1\u65b9\u6ce2\u4fe1\u53f7\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u5728\u95f4\u65ad\u70b9\u51fa\u73b0\u975e\u4e00\u81f4\u6536\u655b\uff1b\u4f46\u662f\u80fd\u4f9d\u80fd\u91cf\u6536\u655b\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_5","title":"\u5b9e\u4fe1\u53f7\u7684\u9891\u8c31\u53ca\u5176\u7279\u5f81","text":"<p>\u5bf9\u76f8\u540c\u5468\u671f\u7684\u5468\u671f\u4fe1\u53f7\uff0c\u5085\u91cc\u53f6\u7ea7\u6570\u7684\u5404\u4e2a\u8c10\u6ce2\u9891\u7387\u662f\u76f8\u540c\u7684\uff0c\u53ea\u6709 \\(C_n\\) \u4e0d\u540c\uff0c\u56e0\u6b64\u4ec5\u7528 \\(C_n\\) \u5373\u53ef\u7814\u7a76\u5468\u671f\u51fd\u6570\u7684\u5168\u90e8\u6027\u8d28\u3002\u6211\u4eec\u628a \\(C_n\\) (\u5173\u4e8e \\(n\\)/\u9891\u7387 \u7684\u51fd\u6570 ) \u79f0\u4e3a\u9891\u8c31\u51fd\u6570</p> <p>\u5bf9\u4e8e\u6307\u6570\u5f62\u5f0f\u5085\u91cc\u53f6\u7ea7\u6570\uff0c\\(C_n = \\vert C_n \\vert \\exp(\\mathrm{j} \\varphi_n)\\), \u5206\u522b\u79f0\u4e3a\u5e45\u5ea6\u9891\u8c31 \u548c \u76f8\u4f4d\u9891\u8c31 \u5bf9\u4e8e\u5b9e\u4fe1\u53f7\u7684\u7eaf\u4f59\u5f26\u5f62\u5f0f \\(f = a_0 / 2 + \\sum A_n\\cos(n\\omega t + \\varphi_n)\\), \u5206\u522b\u79f0\u4e3a\u5e45\u5ea6\u9891\u8c31 (\\(a_0 / 2, A_n\\)) \u548c \u76f8\u4f4d\u9891\u8c31 (\\(\\varphi\\))</p> <p>\u4e00\u4e9b\u4f8b\u5b50</p> <p></p> <p>Parseval \u529f\u7387\u5b88\u6052\u5b9a\u7406 </p> \\[ P = \\frac{1}{T}\\int_T \\vert f(t) \\vert^2\\mathrm{d}t = \\sum_{n = -\\infty}^{\\infty}\\vert C_n\\vert^2 \\] <p>\u4ee3\u5165\u6307\u6570\u5f62\u5f0f\u5085\u91cc\u53f6\u7ea7\u6570\u5e76\u4e14\u5c55\u5f00\u5373\u53ef. \u7269\u7406\u610f\u4e49\uff1a\u4efb\u610f\u5468\u671f\u4fe1\u53f7\u7684\u5e73\u5747\u529f\u7387 (\u4e00\u822c\u4e0d\u8003\u8651\u77ac\u65f6\u529f\u7387) \u7b49\u4e8e\u4fe1\u53f7\u6240\u5305\u542b\u7684\u76f4\u6d41\u3001\u57fa\u6ce2\u4ee5\u53ca\u5404\u6b21\u8c10\u6ce2\u7684\u5e73\u5747\u529f\u7387\u4e4b\u548c\u3002</p> <p>\\(\\vert C_n \\vert^2\\) \u968f \\(n\\omega\\) \u79f0\u4e3a\u5468\u671f\u4fe1\u53f7\u7684\u529f\u7387\u9891\u8c31 (\u4e00\u822c\u4eea\u5668\u7684\u7ed3\u679c)</p> <p>\u4f8b\u9898</p> <p> \u8fd9\u91cc\u6709\u6548\u5e26\u5bbd\u5305\u542b\u8d1f\u7684\u9891\u7387\uff0c\u4e5f\u5373\u8981\u8ba1\u7b97 \\([-40\\pi, +40\\pi]\\) \u7684\u6240\u6709 \\(C_n\\) \u7684\u5e73\u65b9\u548c</p> \\[ \\mathrm{Sa}^2\\left(\\frac{n\\pi}{5}\\right) = 25 P_f = 5 \\] <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u5728\u5404\u79cd \\(\\tau / T\\) (\u5360\u7a7a\u6bd4) \u4e2d\uff0c\u6709\u6548\u5e26\u5bbd\u7684\u8c10\u6ce2\u5206\u91cf\u5e73\u5747\u529f\u7387\u57fa\u672c\u90fd\u5728 \\(90\\%\\) \u5de6\u53f3\u3002</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_6","title":"\u8fde\u7eed\u975e\u5468\u671f\u4fe1\u53f7\u7684\u9891\u8c31","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u5468\u671f \\(T\\) \u4e0d\u65ad\u589e\u52a0\u7684\u65f6\u5019\uff0c\\(\\omega_0\\) \u51cf\u5c0f\u3002\u8c10\u6ce2\u4e4b\u95f4\u7684\u9891\u7387\u95f4\u9694\u4e3a \\(\\displaystyle \\Delta f = \\frac{1}{T}\\), \u5219\u5728\u9891\u7387\u4e3a \\(n\\omega_0\\) \u8c10\u6ce2\u5904\u5355\u4f4d\u9891\u7387\u7684\u8c10\u6ce2\u632f\u5e45\u4e3a \\(\\displaystyle\\rho(n\\omega_0) = C_n / \\Delta f = TC_n = \\int_T f_T(t)\\exp(-\\mathrm{j}n\\omega_0 t) \\mathrm{d}t\\) \u4e0e \\(T\\) \u65e0\u5173\uff01  </p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_7","title":"\u5085\u91cc\u53f6\u53d8\u6362\u548c\u9891\u8c31\u51fd\u6570","text":"<p>\u56e0\u6b64\u5982\u679c\u6211\u4eec\u628a\u975e\u5468\u671f\u51fd\u6570\u8868\u793a\u4e3a\u5468\u671f\u4e3a\u65e0\u7a77\u5927\u7684\u51fd\u6570\uff0c\u5219 \\(\\omega\\) \u53d8\u6210 \\(0\\), \u8c10\u6ce2\u9891\u7387\u8fde\u7eed\uff0c\u5728 \\(\\omega\\) \u5904\u7684\u8c10\u6ce2\u632f\u5e45\u5bc6\u5ea6\u4e3a \\(\\rho(\\omega) = \\int_T f_T(t) \\exp(-\\mathrm{j}\\omega t)\\mathrm{d}t\\)</p> \\[ F(\\mathrm{j} \\omega) = \\int_{-\\infty}^{\\infty} f(t) \\exp(-\\mathrm{j}\\omega t) \\mathrm{d}t \\] <p>\\(F(\\mathrm{j}\\omega)\\) \u662f\u5355\u4f4d\u9891\u7387\u4e0a\u7684\u4fe1\u53f7\u9891\u8c31\uff0c\u79f0\u4e3a\u975e\u5468\u671f\u4fe1\u53f7\u7684\u9891\u8c31\u5bc6\u5ea6\u51fd\u6570\uff0c\u7b80\u79f0\u9891\u8c31\u51fd\u6570</p> <p>\u6ce8\u610f</p> <p>\u5728\u5085\u91cc\u53f6\u53d8\u6362\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 \\(F_n\\) \u4ee3\u66ff \\(C_n\\) \u505a\u8bb0\u53f7</p> <p>\u6ee1\u8db3\u5173\u7cfb\uff1a</p> \\[ \\begin{cases}     F(\\mathrm{j}n\\omega_0) = \\lim_{T \\to \\infty} TF_n \\\\     \\displaystyle F_n = \\frac{F(\\mathrm{j}\\omega)}{T} \\Bigg\\vert_{\\omega = n\\omega_0} \\end{cases} \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_8","title":"\u5085\u91cc\u53f6\u53cd\u53d8\u6362","text":"<p>\u7531\u4e0a\u9762\u7684\u6027\u8d28\uff0c</p> \\[ f(t) = \\lim_{T \\to \\infty} \\sum_{n = -\\infty}^{\\infty}\\frac{F(\\mathrm{j}n\\omega_0)}{T}\\exp(\\mathrm{j}n\\omega_0 t) = \\lim_{\\omega \\to 0^+}\\sum_{n = -\\infty}^{\\infty}\\frac{\\omega_0}{2\\pi}F(\\mathrm{j}n\\omega_0)\\exp(\\mathrm{j}n\\omega_0 t) = \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}F(\\mathrm{j}\\omega)\\exp(\\mathrm{j}\\omega t)\\mathrm{d}\\omega \\] <p>\u53ef\u4ee5\u7528\u7b26\u53f7\u8bb0\u4e3a \\(\\displaystyle f(t) \\overset{F}{\\longleftrightarrow}{F(\\mathrm{j}\\omega)}\\)</p> <p>\u4f8b\u9898</p> <p></p> <p>\u6700\u597d\u4e5f\u8981\u8bb0\u5fc6\u4e00\u4e0b\uff01</p> <p>\u4e00\u4e9b\u6027\u8d28</p> <ol> <li>\u4fe1\u53f7\u5728\u65f6\u57df\u6709\u9650\uff0c\u5219\u5728\u9891\u57df\u5c06\u65e0\u9650\u5ef6\u7eed  </li> <li>\u77e9\u5f62\u4fe1\u53f7\u7684\u9891\u8c31\u5206\u91cf\u4e3b\u8981\u96c6\u4e2d\u5728\u96f6\u9891\u5230\u7b2c\u4e00\u4e2a\u8fc7\u96f6\u70b9\u4e4b\u95f4 (\u4e3b\u74e3)\uff0c\u5de5\u7a0b\u4e2d\u5f80\u5f80\u5c06\u6b64\u5bbd\u5ea6\u4f5c\u4e3a\u6709\u6548\u5e26\u5bbd\u3002  </li> <li>\u8109\u51b2\u5bbd\u5ea6 \\(\\tau\\) \u8d8a\u7a84\uff0c\u6709\u9650\u5e26\u5bbd\u8d8a\u5bbd\uff0c\u9ad8\u9891\u5206\u91cf\u8d8a\u591a\u3002\u5373\u4fe1\u53f7\u4fe1\u606f\u91cf\u5927\u3001\u4f20\u8f93\u901f\u5ea6\u5feb\uff0c\u4f20\u9001\u4fe1\u53f7\u5360\u7528\u7684\u9891\u5e26\u8d8a\u5bbd\u3002  </li> <li>\u5076\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u4e3a\u5076\u7684\u5b9e\u51fd\u6570\uff0c\u5947\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u4e3a\u5947\u7684\u7eaf\u865a\u51fd\u6570  </li> <li>\\(f \\rightarrow F(\\mathrm{j}\\omega) \\Rightarrow f' \\rightarrow F(\\mathrm{j}\\omega)\\cdot \\mathrm{j}\\omega\\)</li> </ol> <p>\u5e38\u89c1\u975e\u5468\u671f\u4fe1\u53f7\u7684\u9891\u8c31</p> <p>\u5355\u8fb9\u6307\u6570\u4fe1\u53f7 \\(f(t) = \\mathrm{e}^{-at}u(t)\\), \u6709 \\(\\displaystyle F(\\mathrm{j}\\omega) = \\frac{1}{a + \\mathrm{j\\omega}}\\) \u53cc\u8fb9\u6307\u6570\u4fe1\u53f7 \\(f(t) = \\mathrm{e}^{-a \\vert t \\vert}\\), \u6709 \\(\\displaystyle F(\\mathrm{j}\\omega) = \\frac{1}{a + \\mathrm{j\\omega}} + \\frac{1}{a - \\mathrm{j\\omega}} = \\frac{2a}{a^2 + \\omega^2} \\in \\mathbb{R}\\) </p> \u6570\u5b66 \\[ f(t) = \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}\\frac{2a}{a^2 + \\omega^2}\\exp(\\mathrm{j}\\omega t)\\mathrm{d}\\omega \\] <p>\u53d6 \\(t = 0\\) \u6709</p> \\[ f(1) = \\mathrm{e}^{-a} = \\frac{1}{2\\pi}\\int_{-\\infty}^{\\infty}\\frac{2a}{a^2 + x^2}\\mathrm{d}x \\] <p>\u5355\u4f4d\u51b2\u6fc0\u4fe1\u53f7 \\(f(t) = \\delta(t)\\), \u6709 \\(F(\\mathrm{j}\\omega) = 1\\) \u4e0e \\(\\omega\\) \u65e0\u5173\uff01 \u51b2\u6fc0\u5076\u4fe1\u53f7 \\(f(t) = \\delta'(t)\\), \u6709 \\(F(\\mathrm{j}\\omega) = \\mathrm{j}\\omega\\) \u76f4\u6d41\u4fe1\u53f7 \\(f(t) = 1\\), \u7531\u4e8e \\(\\displaystyle \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty}2\\pi \\delta(\\omega) \\exp(\\mathrm{j}\\omega t)\\mathrm{d}t = 1\\), \u6709 \\(F(1) = 2\\pi \\delta(\\omega)\\) \u7b26\u53f7\u51fd\u6570\u4fe1\u53f7 \u7531\u4e8e \\(\\displaystyle F(\\mathrm{sgn}(t)\\exp(-\\sigma \\vert t \\vert)) = - \\frac{1}{\\sigma - \\mathrm{j}\\omega} + \\frac{1}{\\sigma + \\mathrm{j}\\omega}\\), \u4ee4 \\(\\sigma = 0\\) \u6709 \\(\\displaystyle F(\\mathrm{sgn}(t)) = \\frac{2}{\\mathrm{j}\\omega}\\) \u4e3a\u5947\u7684\u7eaf\u865a\u51fd\u6570 \u5355\u4f4d\u9636\u8dc3\u4fe1\u53f7 \\(u(t) = 1/2 + 1/2 \\cdot \\mathrm{sgn}(t)\\), \u7531\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ebf\u6027\u6027\uff0c\\(\\displaystyle F(u(t)) = \\pi \\delta(\\omega) + \\frac{1}{\\mathrm{j}\\omega}\\) (\u4e0d\u8981\u5fd8\u8bb0 \\(1/2\\) \u7684\u5085\u91cc\u53f6\u53d8\u6362\uff01)</p> <p>\u5e38\u89c1\u5468\u671f\u4fe1\u53f7\u7684\u9891\u8c31</p> <p>\u865a\u6307\u6570\u4fe1\u53f7 \\(\\mathrm{e}^{\\mathrm{j}\\omega t}\\): \u6ce8\u610f\u5230 \\(\\displaystyle \\int_{-\\infty}^{\\infty}1 \\cdot \\exp(-\\mathrm{j} \\omega t\\mathrm{d}t = 2\\pi \\delta(\\omega)\\), \u6709 \\(\\displaystyle F(\\mathrm{e}^{\\mathrm{j}\\omega t}) = \\int_{-\\infty}^{\\infty}1 \\cdot \\exp(-\\mathrm{j} (\\omega - \\omega_0) t)\\mathrm{d}t = 2\\pi \\delta (\\omega - \\omega_0)\\) \u4f59\u5f26\u4fe1\u53f7 \\(F(\\cos \\omega_0 t) = \\pi (\\delta(\\omega - \\omega_0) + \\delta(\\omega + \\omega_0)))\\) \u6b63\u5f26\u4fe1\u53f7 \\(F(\\sin \\omega_0 t) = \\mathrm{j}\\pi(\\delta(\\omega + \\omega_0) - \\delta(\\omega - \\omega_0))\\) \u4e00\u822c\u5468\u671f\u4fe1\u53f7 \\(\\displaystyle f_T(t) = \\sum_{n = -\\infty}^{\\infty}F_n \\exp(\\mathrm{j}n\\omega_0 t), \\omega_0 = \\frac{2\\pi}{T}\\), \u6709 \\(\\displaystyle F(f_T(t)) = \\sum_{n = -\\infty}^{\\infty}F_n F(\\mathrm{e}^{\\mathrm{j}n\\omega_0 t})\\) \u5355\u4f4d\u51b2\u6fc0\u5e8f\u5217 \\(\\displaystyle\\delta_T(t) = \\sum_{n = -\\infty}^{\\infty}\\delta(t - nT) = \\frac{1}{T}\\sum_{n = -\\infty}^{\\infty}\\mathrm{e}^{\\mathrm{j}n\\omega_0 t}\\), \u6709 \\(\\displaystyle F(\\delta_T(t)) = \\omega_0 \\sum_{n = -\\infty}^{\\infty} \\delta(\\omega - n\\omega_0)\\) \u5728\u5085\u91cc\u53f6\u53d8\u6362\u4e0b\u5f62\u72b6\u4e0d\u53d8\uff01</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_9","title":"\u5085\u91cc\u53f6\u53d8\u6362\u7684\u6027\u8d28","text":""},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_10","title":"\u7ebf\u6027\u6027","text":"<p>(\u4e0d\u5199\u4e86)  </p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_11","title":"\u65f6\u57df\u5377\u79ef\u7279\u6027","text":"<p>\u82e5 \\(\\displaystyle f_1(t) \\overset{F}{\\longleftrightarrow}{F_1(\\mathrm{j}\\omega)}, f_2(t) \\overset{F}{\\longleftrightarrow}{F_2(\\mathrm{j}\\omega)}\\), \u6709</p> \\[ \\begin{align} F(f_1(t) \\otimes f_2(t)) &amp;= \\int_{-\\infty}^{\\infty} \\left[ \\int_{-\\infty}^{\\infty}  f_1(\\tau) f_2(t - \\tau)\\,\\mathrm{d}\\tau \\right]  \\mathrm{e}^{-\\mathrm{j}\\omega t}\\,\\mathrm{d}t \\\\[6pt] &amp;= \\int_{-\\infty}^{\\infty} f_1(\\tau) \\left [ \\int_{-\\infty}^{\\infty}  f_2(t - \\tau)\\,\\mathrm{e}^{-\\mathrm{j}\\omega t}\\,\\mathrm{d}t \\right] \\mathrm{d}\\tau \\\\[6pt] &amp;= \\int_{-\\infty}^{\\infty}  f_1(\\tau) F_2(\\mathrm{j}\\omega)\\, \\mathrm{e}^{-\\mathrm{j}\\omega \\tau}\\,\\mathrm{d}\\tau \\\\[6pt] &amp;= F_1(\\mathrm{j}\\omega)\\cdot F_2(\\mathrm{j}\\omega) \\end{align} \\] <p>\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u65f6\u57df\u5377\u79ef\u8f6c\u6362\u6210\u9891\u57df\u76f8\u4e58\uff01</p> <p>\u8fd8\u6709\u4e00\u79cd\u7406\u89e3\u65b9\u6cd5</p> \\[ \\begin{aligned} \\mathrm{e}^{\\mathrm{j}\\omega\\tau} \\otimes h(t) &amp;= H(\\mathrm{j}\\omega)\\,\\mathrm{e}^{\\mathrm{j}\\omega t} \\\\[6pt] \\frac{1}{2\\pi} F(\\mathrm{j}\\omega)\\,\\mathrm{e}^{\\mathrm{j}\\omega t} \\otimes h(t) &amp;= \\frac{1}{2\\pi} F(\\mathrm{j}\\omega) H(\\mathrm{j}\\omega)\\,\\mathrm{e}^{\\mathrm{j}\\omega t} \\\\[6pt] \\frac{1}{2\\pi} \\int F(\\mathrm{j}\\omega)\\,\\mathrm{e}^{\\mathrm{j}\\omega t} \\,\\mathrm{d}\\omega \\otimes h(t) &amp;= \\frac{1}{2\\pi} \\int F(\\mathrm{j}\\omega) H(\\mathrm{j}\\omega)\\,\\mathrm{e}^{\\mathrm{j}\\omega t} \\,\\mathrm{d}\\omega \\\\[6pt] f(t)\\otimes h(t) &amp;= \\frac{1}{2\\pi} \\int F(\\mathrm{j}\\omega) H(\\mathrm{j}\\omega)\\, \\mathrm{e}^{\\mathrm{j}\\omega t}\\,\\mathrm{d}\\omega \\end{aligned} \\] <p>\u4f8b\u9898</p> <p></p> <p>\u8fd9\u91cc \\(\\displaystyle G_\\tau(t) = \\begin{cases}1, &amp;\\quad -\\tau / 2 \\leq t \\leq \\tau / 2 \\\\ 0, &amp;\\quad \\text{others} \\end{cases}\\) \u662f\u95e8\u51fd\u6570 \u4e09\u89d2\u6ce2\u4fe1\u53f7\u662f\u65b9\u6ce2\u4fe1\u53f7\u7684\u81ea\u8eab\u5377\u79ef</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_12","title":"\u9891\u57df\u5377\u79ef\u7279\u6027 (\u8c03\u5236\u7279\u6027)","text":"\\[ \\begin{aligned} F[f_1(t)\\cdot f_2(t)]  &amp;= \\int_{-\\infty}^{\\infty} [f_1(t)\\cdot f_2(t)]\\,\\mathrm{e}^{-\\mathrm{j}\\omega t}\\,\\mathrm{d}t \\\\[6pt] &amp;= \\int_{-\\infty}^{\\infty} f_2(t)\\,\\mathrm{e}^{-\\mathrm{j}\\omega t} \\left[ \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} F_1(\\mathrm{j}\\Omega)\\, \\mathrm{e}^{\\mathrm{j}\\Omega t}\\,\\mathrm{d}\\Omega \\right] \\mathrm{d}t \\\\[6pt] &amp;= \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} F_1(\\mathrm{j}\\Omega) \\left[ \\int_{-\\infty}^{\\infty} f_2(t)\\, \\mathrm{e}^{-\\mathrm{j}(\\omega-\\Omega)t}\\,\\mathrm{d}t \\right] \\mathrm{d}\\Omega \\\\[6pt] &amp;= \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty}  F_1(\\mathrm{j}\\Omega)\\,F_2[\\mathrm{j}(\\omega-\\Omega)]\\,\\mathrm{d}\\Omega = \\frac{1}{2\\pi}\\,[F_1(\\mathrm{j}\\omega)\\otimes F_2(\\mathrm{j}\\omega)] \\end{aligned} \\] <p>\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u65f6\u57df\u76f8\u4e58\u8f6c\u6362\u6210\u9891\u57df\u5377\u79ef\uff01</p> <p>\u5728\u6536\u97f3\u673a\u8c03\u5236\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8f7d\u6ce2\u7684\u9891\u7387\u5f80\u5f80\u4e0d\u53d1\u751f\u6539\u53d8\uff0c\u5373  \\(f_2(t) = \\exp(\\mathrm{j}\\omega t)\\), \u5373\u6709\uff1a</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_13","title":"\u9891\u79fb\u7279\u6027","text":"\\[ \\displaystyle f(t)\\cdot \\exp(\\mathrm{j}\\omega t)\\overset{F}{\\longleftrightarrow}{F(\\mathrm{j}(\\omega - \\omega_0))} \\] <p>\u76f8\u5f53\u4e8e\u4e58\u4ee5\u6307\u6570\u4fe1\u53f7\u4e4b\u540e\uff0c\u9891\u8c31\u5411\u53f3\u642c\u79fb\u4e86 \\(\\omega_0\\). \u63a8\u8bba\uff1a</p> \\[ F(f(t)\\cos \\omega_0 t) = \\frac{1}{2}F(\\mathrm{j}(\\omega - \\omega_0) + \\frac{1}{2}F(\\mathrm{j}(\\omega + \\omega_0) \\] <p>\u4f8b\u5b50</p> <p>\u5bf9\u4e8e \\(f(t) \\cos \\omega_0\\), \u5176\u8f7d\u6ce2\u9891\u7387\u4e3a \\(\\omega_0\\), \u5176\u9891\u8c31\u53ef\u4ee5\u8868\u793a\u4e3a\u4e24\u4e2a \\(\\mathrm{Sa}\\) \u51fd\u6570\uff0c\u53ef\u77e5\u5176\u9891\u7387\u4e3a \\(\\omega_0\\); \u4f46\u662f\u5728 \\(\\omega_0\\) \u5468\u56f4\u4ecd\u65e7\u6709\u9891\u8c31\u503c\uff0c\u6b64\u73b0\u8c61\u79f0\u4e3a\u9891\u7387\u6cc4\u9732</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_14","title":"\u5c55\u7f29\u7279\u6027","text":"\\[ \\displaystyle f(at) \\overset{F}{\\longleftrightarrow}{\\frac{1}{\\vert a \\vert}F(\\mathrm{j}\\frac{\\omega}{a})} \\] <p>\u8be5\u65b9\u5f0f\u4e0d\u662f\u7ebf\u6027\u65f6\u4e0d\u53d8\u7684\u53d8\u6362\uff0c\u53ea\u80fd\u7528\u5b9a\u4e49\u5f0f\u8bc1\u660e</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_15","title":"\u65f6\u79fb\u7279\u6027","text":"\\[ \\displaystyle f(t - t_0) \\overset{F}{\\longleftrightarrow}{F(\\mathrm{j}\\omega)\\cdot \\exp(-\\mathrm{j} \\omega t_0)} \\] <p>\u6ce8\u610f\u5230\u5085\u91cc\u53f6\u53d8\u6362\u7684\u6307\u6570\u9879 (\u7406\u89e3\u4e3a\u76f8\u4f4d) \u7684\u53d8\u5316\u968f\u9891\u7387\u589e\u5927\u800c\u589e\u5927</p> <p>\u8bc1\u660e</p> \\[ f(t - t_0) = f(t) \\otimes \\delta(t - t_0) \\overset{F}{\\longleftrightarrow}{F(\\mathrm{j}\\omega)\\cdot \\exp(-\\mathrm{j} \\omega t_0)} \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_16","title":"\u4e92\u6613\u5bf9\u79f0\u7279\u6027","text":"<p>\u82e5 \\(\\displaystyle f(t) \\overset{F}{\\longleftrightarrow}{F(\\omega)}\\), \u5219 \\(\\displaystyle F(t) \\overset{F}{\\longleftrightarrow}{2\\pi f(-\\omega)}\\)</p> <p>\u4f8b\u5b50</p> \\[ \\frac{\\sin W t}{\\pi t} \\overset{F}{\\longleftrightarrow}{G_{2W}(\\omega)} \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_17","title":"\u865a\u5b9e\u5947\u5076\u7279\u6027","text":"<p>\u82e5 \\(\\displaystyle f(t) \\overset{F}{\\longleftrightarrow}{F(\\omega)}\\), \u5219 - \\(\\displaystyle f(-t) \\overset{F}{\\longleftrightarrow}{F(-\\omega)}\\) - \\(\\displaystyle \\overline{f(t)} \\overset{F}{\\longleftrightarrow}{\\overline{F(-\\omega)}}\\) - \u5f53 \\(f(t) \\in \\mathbb{R}\\) \u65f6, \\(F(\\omega) = \\overline{F(-\\omega)}\\), \u4e5f\u5373 \\(F(\\omega)\\) \u7684\u5b9e\u90e8\u548c\u6a21\u957f\u662f\u5076\u51fd\u6570\uff0c\u865a\u90e8\u548c\u8f90\u89d2\u662f\u5947\u51fd\u6570.</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_18","title":"\u65f6\u57df\u5fae\u5206\u7279\u6027","text":"\\[ \\begin{aligned} \\frac{\\mathrm{d}f(t)}{\\mathrm{d}t} &amp;\\overset{F}{\\longleftrightarrow}{(\\mathrm{j}\\omega) \\cdot f(\\mathrm{j}\\omega)} \\\\ \\frac{\\mathrm{d}^n f(t)}{\\mathrm{d}t^n} &amp;\\overset{F}{\\longleftrightarrow}{(\\mathrm{j}\\omega)^n \\cdot f(\\mathrm{j}\\omega)} \\end{aligned} \\] <p>\u4f7f\u7528\u51b2\u6fc0\u5076\u4fe1\u53f7\u8bc1\u660e</p> <p>\u7531\u4e8e \\(f'(t) = f(t) \\otimes \\delta'(t)\\) \u4e14 \\(\\delta'(t) \\overset{F}{\\longleftrightarrow}{\\mathrm{j}\\omega}\\) \u5373\u8bc1.</p> <p>\u4f8b\u9898</p> <p> \u53ea\u8981\u82e5\u5e72\u6b21\u5bfc\u6570\u5f97\u5230\u51b2\u6fc0\u4fe1\u53f7\u5373\u53ef\u7528\u6b64\u65b9\u6cd5\u6c42\u5f97\u5085\u91cc\u53f6\u53d8\u6362</p>"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_19","title":"\u79ef\u5206\u7279\u6027","text":"<p>\u82e5 \\(\\displaystyle f(t) \\overset{F}{\\longleftrightarrow}{F(\\mathrm{j}\\omega)}\\), </p> \\[ \\begin{aligned} &amp;\\int_{-\\infty}^t f(\\tau) \\mathrm{d}\\tau = f(t) \\otimes u(t) \\\\ &amp;\\overset{F} {\\longleftrightarrow}{F(\\mathrm{j}\\omega)\\cdot \\left(\\frac{1}{\\mathrm{j}\\omega} + \\pi \\delta(\\omega)\\right)} = \\frac{1}{\\mathrm{j}\\omega}F(\\mathrm{j}\\omega) + \\pi F(0)\\delta(\\omega) \\end{aligned} \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_20","title":"\u9891\u57df\u5fae\u5206\u7279\u6027","text":"\\[ \\begin{aligned} tf(t) &amp;\\overset{F}{\\longleftrightarrow}{\\mathrm{j}\\cdot\\frac{\\mathrm{d}F(\\mathrm{j}\\omega)}{\\mathrm{d}\\omega}} \\\\ t^nf(t) &amp;\\overset{F}{\\longleftrightarrow}{\\mathrm{j}^n\\cdot\\frac{\\mathrm{d}^nF(\\mathrm{j}\\omega)}{\\mathrm{d}\\omega^n}} \\end{aligned} \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_21","title":"\u5e15\u4ec0\u74e6\u5c14\u80fd\u91cf\u5b88\u6052\u5b9a\u7406","text":"\\[ \\int_{-\\infty}^{\\infty}\\vert f(t)\\vert^2\\mathrm{d}t = \\frac{1}{2\\pi}\\int_{-\\infty}^\\infty \\vert F(\\mathrm{j}\\omega)\\vert^2 \\mathrm{d}\\omega \\] <p>\u628a\u51fd\u6570 \\(\\displaystyle G(\\omega) = \\frac{1}{2\\pi} \\vert F(\\mathrm{j}\\omega) \\vert^2\\) (\u5355\u4f4d\u89d2\u9891\u7387\u7684\u4fe1\u53f7\u80fd\u91cf) \u4e3a\u80fd\u91cf\u9891\u8c31\u5bc6\u5ea6\u51fd\u6570</p> <p>\u4f8b\u9898</p> <p>\u8ba1\u7b97 \\(\\displaystyle \\int_{-\\infty}^{\\infty}\\mathrm{Sa}^2(t)\\mathrm{d}t\\).</p> <p>\u7531\u4e8e \\(\\mathrm{Sa}(t) \\overset{F}{\\longleftrightarrow}{\\pi G_2(\\omega)}\\), </p> \\[ \\int_{-\\infty}^{\\infty}\\mathrm{Sa}^2(t)\\mathrm{d}t = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty}\\vert \\pi G_2(\\omega)\\vert^2\\mathrm{d}\\omega = \\frac{1}{2\\pi} \\int_{-1}^1 \\pi^2 \\mathrm{d}\\omega = \\pi \\] <p>\u8ba1\u7b97 \\(\\displaystyle \\int_{-\\infty}^{\\infty}\\mathrm{Sa}(t)\\mathrm{d}t\\)</p> <p>\u76f8\u5f53\u4e8e \\(\\omega = 0\\) \u7684\u76f4\u6d41\u5206\u91cf\uff0c</p> \\[ \\int_{-\\infty}^{\\infty}\\mathrm{Sa}(t)\\mathrm{d}t = \\pi G_2(0) = \\pi \\]"},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#_22","title":"\u79bb\u6563\u4fe1\u53f7\u7684\u9891\u57df\u5206\u6790","text":""},{"location":"NoflowersNotes/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/Lec_5/Lec_5/#dfs","title":"\u79bb\u6563\u5468\u671f\u4fe1\u53f7\u7684\u5085\u91cc\u53f6\u7ea7\u6570 (DFS)","text":"<p>\u5bf9\u4e8e\u5468\u671f\u4e3a \\(N\\) \u7684\u5468\u671f\u4fe1\u53f7 \\(x[n]\\), \u6709</p> \\[ \\begin{cases} \\displaystyle x[n] &amp;= \\sum_{k = \\langle N \\rangle}a_k \\exp(\\mathrm{j}\\frac{2\\pi}{N}kn) \\\\ \\displaystyle a_k &amp;= \\frac{1}{N}\\sum_{n = \\langle N \\rangle}x[n]\\exp(-\\mathrm{j}\\frac{2\\pi}{N}kn) \\end{cases} \\] <p>\u7531\u6b64\u53ef\u89c1\u79bb\u6563\u65f6\u95f4\u5468\u671f\u4fe1\u53f7\u7684\u9891\u8c31\u662f\u5468\u671f\u7684 (\\(N\\))</p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/","title":"\u5fae\u5206\u65b9\u7a0b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 282 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_1","title":"\u6570\u503c\u5fae\u79ef\u5206","text":""},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_2","title":"\u4e8c\u59d0\u5bfc\u6570\u7684\u4e2d\u5fc3\u5dee\u5546","text":"\\[ u''(t)\\big|_{t = t_k} = \\frac{u(t_{k+1}) - 2u(t_k) + u(t_{k-1})}{(\\Delta t)^2} + \\mathcal{O}((\\Delta t)^2) \\]"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_3","title":"\u6570\u503c\u6c42\u79ef\u516c\u5f0f","text":"\\[ \\int_a^b f(x) \\approx \\sum_{k = 0}^n A_k f(x_k) \\quad, \\left(\\sum_{k = 1}^n A_k = 1\\right) \\] <p>\u63d2\u503c\u578b\u6c42\u79ef\u5206\u516c\u5f0f\uff1a</p> \\[ f(x) \\approx L_n(x) \\Longrightarrow \\int_a^b f(x) \\, dx \\approx \\int_a^b L_n(x) \\, dx \\] <p>Newton\u2013Cotes \u516c\u5f0f\uff1a\u7b49\u8ddd\u8282\u70b9\uff0c(\u9ad8\u6b21\u516c\u5f0f\u4e0d\u7a33\u5b9a v.s. Runge \u73b0\u8c61)</p> \\[ L_n(x) = \\sum_{k=0}^n f(x_k) l_k(x) \\Longrightarrow A_k = \\int_a^b l_k(x) \\, dx \\] <p>\u590d\u5316\u68af\u5f62\u516c\u5f0f\uff08Composite Trapezoidal Rule\uff09\uff1a</p> \\[ f(x) \\approx L_1(x) \\Longrightarrow \\int_a^b f(x)\\,dx \\approx \\sum_{k=0}^{n-1} \\int_{x_k}^{x_{k+1}} L_1(x)\\,dx = \\frac{h}{2} \\left[f(x_0) + 2\\sum_{k=1}^{n-1} f(x_k) + f(x_n) \\right] \\] <p>\u5176\u4e2d $\\displaystyle h = \\frac{b - a}{n} $\uff0c\u7b49\u8ddd\u8282\u70b9 $ x_k = a + kh $\u3002</p> <p>\u590d\u5316Simpson\u516c\u5f0f\uff08Composite Simpson's Rule\uff09\uff1a</p> \\[ f(x) \\approx L_2(x) \\Longrightarrow \\int_a^b f(x)\\,dx \\approx \\sum_{k=0}^{n/2 - 1} \\int_{x_{2k}}^{x_{2k+2}} L_2(x)\\,dx = \\frac{h}{3} \\left[f(x_0) + 4\\sum_{j=1}^{n/2} f(x_{2j - 1}) + 2\\sum_{j=1}^{n/2 - 1} f(x_{2j}) + f(x_n) \\right] \\] <p>\u5176\u4e2d $\\displaystyle h = \\frac{b - a}{n} $\uff0c\u8981\u6c42 $ n $ \u4e3a\u5076\u6570\u3002</p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_4","title":"\u5e38\u5fae\u5206\u65b9\u7a0b\u6570\u503c\u89e3\u6cd5","text":""},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_5","title":"\u5e38\u5fae\u5206\u65b9\u7a0b\u521d\u503c\u95ee\u9898","text":"\\[ \\begin{cases} \\displaystyle \\frac{du}{dt} = f(t, u), &amp; 0 &lt; t \\leq T \\\\ u(0) = u_0 \\end{cases} \\]"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#euler","title":"\u5411\u524d Euler \u6cd5","text":"<p>\u663e\u793a\u65b9\u6cd5\uff0c\u8ba1\u7b97\u5bb9\u6613\uff0c\u7a33\u5b9a\u6027\u4e0d\u597d</p> \\[ \\displaystyle u_{k+1} = u_k + \\Delta t \\cdot f(t_k, u_k), \\quad k = 0, 1, \\dots, N-1 \\] <p>\u5176\u4e2d \\(\\displaystyle t_k = k \\Delta t\\)\uff0c\\(\\displaystyle \\Delta t = \\frac{T}{N}\\)\u3002</p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#euler_1","title":"\u5411\u540e Euler \u6cd5","text":"<p>\u9690\u5f0f\u65b9\u6cd5\uff0c\u9700\u6c42\u89e3\u975e\u7ebf\u6027\u65b9\u7a0b\uff0c\u7a33\u5b9a\u6027\u597d</p> \\[ \\displaystyle u_{k+1} = u_k + \\Delta t \\cdot f(t_{k+1}, u_{k+1}), \\quad k = 0, 1, \\dots, N-1 \\] <p>\u5176\u4e2d \\(\\displaystyle t_k = k \\Delta t\\)\uff0c\\(\\displaystyle \\Delta t = \\frac{T}{N}\\)\u3002</p> <p>\u5982\u679c\u628a\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u8f6c\u5316\u4e3a\u79ef\u5206\u5f62\u5f0f\uff0c\u6709</p> \\[ u(t) = u_0 + \\int_{t_0}^t f(s, u(s)) \\mathrm{d} s \\]"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#euler_2","title":"\u5411\u524d Euler \u65b9\u6cd5","text":"\\[ \\displaystyle u_{k+1} = u_k + \\Delta t \\cdot f(t_k, u_k) \\]"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#euler_3","title":"\u5411\u540e Euler \u65b9\u6cd5","text":"\\[ \\displaystyle u_{k+1} = u_k + \\Delta t \\cdot f(t_{k+1}, u_{k+1}) \\]"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#runge-kutta-rk4","title":"\u56db\u9636 Runge-Kutta \u65b9\u6cd5\uff08RK4\uff09","text":"\\[ \\begin{cases} \\displaystyle k_1 &amp;= f(t_k, u_k) \\\\ \\displaystyle k_2 &amp;= f\\left(t_k + \\frac{\\Delta t}{2}, u_k + \\frac{\\Delta t}{2} k_1\\right) \\\\ \\displaystyle k_3 &amp;= f\\left(t_k + \\frac{\\Delta t}{2}, u_k + \\frac{\\Delta t}{2} k_2\\right) \\\\ \\displaystyle k_4 &amp;= f(t_k + \\Delta t, u_k + \\Delta t \\cdot k_3) \\\\ \\displaystyle u_{k+1} &amp;= u_k + \\frac{\\Delta t}{6} \\left(k_1 + 2k_2 + 2k_3 + k_4\\right) \\end{cases} \\] <p>\u5176\u4e2d \\(\\displaystyle t_k = k \\Delta t,\\quad \\Delta t = \\frac{T}{N}\\)\u3002</p> <p>\u5355\u6b65\u6cd5\uff1aEuler\u65b9\u6cd5\u3001Runge-Kutta\u65b9\u6cd5 \u591a\u6b65\u6cd5\uff1aAdams\u65b9\u6cd5\u3001NDF\u65b9\u6cd5\u3001BDF\u65b9\u6cd5 \u975e\u521a\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\uff1aode45Runge-Kutta\u65b9\u6cd5\u53d8\u6b65\u957f\u663e\u683c\u5f0f \u521a\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u6216\u8005\u5fae\u5206\u4ee3\u6570\u65b9\u7a0b\uff1abde15sNDF/BDF\u65b9\u6cd5\u53d8\u9636\u6570\u9690\u683c\u5f0f  </p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_6","title":"\u5e38\u5fae\u5206\u65b9\u7a0b\u8fb9\u503c\u95ee\u9898","text":"<p>\uff08\u7565\uff09</p>"},{"location":"NoflowersNotes/%E6%95%B0%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1/#_7","title":"\u4e8c\u9636\u504f\u5fae\u5206\u65b9\u7a0b","text":"<p>\u692d\u5706\u578b\u65b9\u7a0b\uff1a\u7a33\u6001\u70ed\u4f20\u5bfc\u65b9\u7a0b</p> \\[ \\begin{cases} \\Delta u(x) = f(x), &amp; x \\in \\Omega \\\\ u(x) = g(x), &amp; x \\in \\partial \\Omega \\end{cases} \\] <p>\u629b\u7269\u578b\u65b9\u7a0b\uff1a\u77ac\u6001\u70ed\u4f20\u5bfc\u65b9\u7a0b</p> <p>$$ \\begin{cases} \\displaystyle \\frac{\\partial u(x, t)}{\\partial t} = \\alpha \\Delta u(x, t) + f(x, t), &amp; (x, t) \\in \\Omega \\times (0, T) \\ \\displaystyle u(x, t) = g(x, t), &amp; x \\in \\partial \\Omega,  t \\in [0, T] \\ \\displaystyle u(x, 0) = u_0(x), &amp; x \\in \\Omega \\end{cases} $$  \\displaystyle  \u53cc\u66f2\u578b\u65b9\u7a0b\uff1a\u6ce2\u52a8\u65b9\u7a0b</p> \\[ \\begin{cases} \\displaystyle \\frac{\\partial^2 u(x, t)}{\\partial t^2} = c^2 \\frac{\\partial^2 u(x, t)}{\\partial x^2} + f(x, t), &amp; (x, t) \\in \\Omega \\times (0, T) \\\\ \\displaystyle u(x, t) = g(x, t), &amp; x \\in \\partial \\Omega, \\ t \\in [0, T] \\\\ \\displaystyle \\frac{\\partial u(x, t)}{\\partial t} \\bigg|_{t=0} = h(x), &amp; x \\in \\Omega \\end{cases} \\] <p>\u4e00\u9636\u53cc\u66f2\u578b\u65b9\u7a0b\uff1a\u4eba\u53e3\u53d1\u5c55\u65b9\u7a0b\uff08\u56fd\u8d5b2007A\uff1a\u4e2d\u56fd\u4eba\u53e3\u589e\u957f\u9884\u6d4b\uff09</p> \\[ \\begin{cases} \\displaystyle \\frac{\\partial u(x, t)}{\\partial t} + a \\frac{\\partial u(x, t)}{\\partial x} = f(x, t), &amp; (x, t) \\in \\Omega \\times (0, T) \\\\ \\displaystyle u(x, 0) = u_0(x), &amp; x \\in \\Omega \\end{cases} \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/","title":"\u6570\u6a21\u7684\u6982\u7387\u7edf\u8ba1\u7b14\u8bb0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 906 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> \u6ce8\u610f <p>\u672c\u6587\u7531 LaTeX \u4ee3\u7801\u8f6c\u5316\u800c\u6765</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_1","title":"\u6982\u7387\u8bba","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_2","title":"\u968f\u673a\u53d8\u91cf","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_3","title":"\u968f\u673a\u53d8\u91cf\u7684\u6570\u503c\u6027\u8d28","text":"<ul> <li>\u534f\u65b9\u5dee \\(\\mathrm{cov}(X, Y) = E((X - E(X))(Y - E(Y)))\\)</li> <li>\u76f8\u5173\u7cfb\u6570/\u6807\u51c6\u5316\u534f\u65b9\u5dee \\(\\rho(X, Y) = \\frac{\\mathrm{cov}(X, Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}\\)</li> <li>\u53d8\u5f02\u7cfb\u6570 \\(\\delta_X = \\frac{\\sqrt{D(X)}}{\\left\\lvert E(X)\\right\\rvert }\\)</li> <li>\\(k\\) \u9636\u539f\u70b9\u77e9 \\(E(X^k)\\)</li> <li>\\(k\\) \u9636\u4e2d\u5fc3\u77e9 \\(E\\left((X - E(X))^k\\right)\\)</li> </ul>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_4","title":"\u5927\u6570\u5b9a\u5f8b","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chebyshev","title":"Chebyshev \u4e0d\u7b49\u5f0f","text":"\\[ P(\\left\\lvert X - E(X)\\right\\rvert \\geqslant \\varepsilon) \\leqslant \\frac{D(X)}{\\varepsilon^2} \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_5","title":"\u4f9d\u6982\u7387\u6536\u655b","text":"<p>\\(\\exists c, \\forall \\varepsilon &gt; 0, \\lim_{n \\to +\\infty}P\\left(\\left\\lvert X_n - c\\right\\rvert \\leqslant \\varepsilon\\right) = 1\\), \u5219\u79f0\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(\\{X_n\\}\\) \u4f9d\u6982\u7387\u6536\u655b\u4e8e \\(c\\), \u8bb0\u4f5c \\(X_n \\xrightarrow[]{P}c\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chebyshev_1","title":"Chebyshev \u5927\u6570\u5b9a\u5f8b","text":"<p>\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(\\{X_n\\}\\) \u4e24\u4e24\u4e0d(\u7ebf\u6027)\u76f8\u5173\uff0c\u4e14 \\(D(X_i)\\) \u6709\u4e00\u81f4\u4e0a\u754c \\(c\\) (\u5373 \\(D(X_i) &lt; c\\)), \u5219\u6709</p> \\[     \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\xrightarrow{P}\\frac{1}{n}\\sum_{i = 1}^{n}E(X_i) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_6","title":"\u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03(\u8f9b\u94a6)\u5927\u6570\u5b9a\u5f8b","text":"<p>\\(\\{X_i\\}\\) \u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03\uff0c \\(E(X_i) = \\mu\\) \u6709\u9650\uff0c\u5219</p> \\[ \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\xrightarrow{P}\\mu \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_7","title":"\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#-","title":"\u5217\u7ef4-\u6797\u5fb7\u4f2f\u683c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\\(\\{X_i\\}\\) \u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03\uff0c\\(D(X_i) = \\sigma^2\\) \u6709\u9650\uff0c\\(E(X_i) = \\mu\\)\uff0c\u5219</p> \\[     \\lim_{n \\to \\infty}P\\left(\\frac{\\sum_{i = 1}^{n}X_i - n\\mu}{\\sqrt{n}\\sigma}\\right) = \\Phi(x) \\] <p>\u5373\u5f53 \\(n\\) \u5145\u5206\u5927\u65f6\uff0c\u53ef\u4ee5\u8ba4\u4e3a \\(\\sum_{i = 1}^{n}X_i \\overset{\\text{\u8fd1\u4f3c}}{\\sim} N(n\\mu, n\\sigma^2)\\) \u6216\u8005 \\(\\overline{X} \\overset{\\text{\u8fd1\u4f3c}}{\\sim} N\\left(\\mu, \\frac{\\sigma^2}{n}\\right)\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_8","title":"\u6570\u7406\u7edf\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_9","title":"\u7edf\u8ba1\u91cf","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_10","title":"\u65e0\u504f\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_11","title":"\u6837\u672c\u65b9\u5dee","text":"<p>\\((X_1, X_2, \\cdots , X_n)\\) \u662f\u53d6\u81ea\u603b\u4f53\u7684\u4e00\u4e2a\u6837\u672c\uff0c\u79f0</p> \\[     \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\] <p>\u4e3a\u6837\u672c\u5747\u503c\uff0c</p> \\[     S^2 = \\frac{1}{n - 1}\\sum_{i = 1}^{m}\\left(X_i - \\overline{X}\\right)^2 \\] <p>\u4e3a\u6837\u672c\u65b9\u5dee.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_12","title":"\u4e09\u5927\u5206\u5e03","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chi2","title":"\\(\\chi^2\\) \u5206\u5e03","text":"<p>\u8bbe \\(\\{X_i\\}_{i = 1}^n\\) \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u53d8\u91cf\uff0c\u79f0\u968f\u673a\u53d8\u91cf \\(Y = \\sum_{i = 1}^{n}X_i^2\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 \\(\\chi^2\\) \u5206\u5e03\uff0c\u8bb0\u4e3a \\(Y \\sim \\chi^2(n)\\).   </p> <p>\\(\\chi^2\\) \u5206\u5e03\u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(y) = \\begin{cases}             \\frac{1}{2^{\\frac{n}{2}}\\Gamma\\left(\\frac{n}{2}\\right)}y^{\\frac{n}{2} - 1}\\mathrm{e}^{-\\frac{y}{2}}, &amp; \\quad y &gt; 0 \\\\             0,&amp; \\quad \\text{\u5176\u5b83}         \\end{cases} \\end{aligned} \\] <p>\\(Y \\sim \\chi^2(n)\\) \u6709\u4ee5\u4e0b\u6027\u8d28     - \\(E(Y) = n, D(Y) = 2n\\) - \u53ef\u52a0\u6027\uff0c \\(X \\sim \\chi^2(m), Y \\sim \\chi^2(n)\\), \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(X + Y \\sim \\chi^2(m + n)\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#t","title":"\\(t\\) \u5206\u5e03(\u5b66\u751f\u6c0f\u5206\u5e03)","text":"<p>\u8bbe \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c \\(X \\sim N(0, 1), Y \\sim \\chi^2(n)\\), \u5219\u79f0 \\(T = \\frac{X}{\\sqrt{Y/n}}\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 \\(t\\) \u5206\u5e03.   </p> <p>\\(t\\) \u5206\u5e03\u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(x) = \\frac{\\Gamma\\left(\\frac{n + 1}{2}\\right)}{\\sqrt{\\pi n }\\Gamma\\left(\\frac{n}{2}\\right)}\\left(1 + \\frac{x^2}{n}\\right)^{-\\frac{n + 1}{2}} \\end{aligned} \\] <p>\\(t(n)\\)\u7684\u5bc6\u5ea6\u51fd\u6570\u4e0e\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(N(0, 1)\\) \u5bc6\u5ea6\u5f88\u76f8\u4f3c, \u5b83\u4eec\u90fd\u662f\u5173\u4e8e\u539f\u70b9\u5bf9\u79f0, \u5355\u5cf0\u5076\u51fd\u6570, \u5728 \\(x = 0\\) \u5904\u8fbe\u5230\u6781\u5927. \u4f46 \\(t(n)\\) \u7684\u5cf0\u503c\u4f4e\u4e8e \\(N(0, 1)\\) \u7684\u5cf0\u503c, \\(t(n)\\) \u7684\u5bc6\u5ea6\u51fd\u6570\u5c3e\u90e8\u90fd\u8981\u6bd4 \\(N(0, 1)\\) \u7684\u4e24\u4fa7\u5c3e\u90e8\u7c97\u4e00\u4e9b. \u5bb9\u6613\u8bc1\u660e:</p> \\[     \\lim_{n \\to \\infty} f(x) = \\Phi(x) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#f","title":"\\(F\\) \u5206\u5e03","text":"<p>\u8bbe \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c \\(X \\sim \\chi^2(m), Y \\sim \\chi^2(n)\\), \u5219\u79f0 \\(F = \\frac{X / m}{Y / n}\\) \u670d\u4ece \\(F\\) \u5206\u5e03\uff0c\u8bb0\u4e3a \\(F \\sim F(m, n)\\) \u5176\u4e2d \\(m\\) \u79f0\u4e3a\u7b2c\u4e00\u81ea\u7531\u5ea6\uff0c \\(n\\) \u79f0\u4e3a\u7b2c\u4e8c\u81ea\u7531\u5ea6.   </p> <p>\\(F(m, n)\\) \u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(y) = \\begin{cases}             \\frac{\\Gamma\\left(\\frac{m + n}{2}\\right)}{\\Gamma\\left(\\frac{m}{2}\\right)\\Gamma\\left(\\frac{n}{2}\\right)}\\left(\\frac{m}{n}\\right)^{\\frac{m}{2}}y^{\\frac{m}{2} - 1}\\left(1 + \\frac{m}{n}y\\right)^{-\\frac{m + n}{2}},&amp; \\quad y &gt; 0 \\\\             0,&amp; \\quad \\text{\u5176\u5b83}          \\end{cases} \\end{aligned} \\] <p>\u8bb0 \\(F_\\alpha(m, n)\\) \u4e3a \\(F\\) \u5206\u5e03\u7684\u7b2c \\(\\alpha\\) \u5206\u4f4d\u6570 (\u5373 \\(P(F \\leqslant F_\\alpha(m, n)) = \\alpha\\))   </p> <p>\u6709\u6027\u8d28\uff1a</p> \\[     F_\\alpha(m, n) = \\frac{1}{F_{1 - \\alpha}}(n, m) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_13","title":"\u6b63\u6001\u603b\u4f53\u7684\u62bd\u6837\u5206\u5e03","text":"<p>\u6682\u65f6\u7565.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_14","title":"\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_15","title":"\u70b9\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_16","title":"\u77e9\u4f30\u8ba1","text":"<p>\u7528\u6837\u672c\u539f\u70b9\u77e9\u4f30\u8ba1\u603b\u4f53\u539f\u70b9\u77e9.   </p> <p>\u8bbe\u603b\u4f53\u7684 \\(k\\) \u9636\u539f\u70b9\u77e9\u4e3a \\(\\mu_k = E(X^k)\\), \u6837\u672c\u7684 \\(k\\) \u9636\u539f\u70b9\u77e9\u4e3a \\(A_k = \\frac{1}{n}\\sum_{i = 1}^{n}X_i^k\\), \u7528 \\(A_k\\) \u4f30\u8ba1 \\(\\mu_k\\), \u5bf9\u67d0\u4e2a\u4f9d\u8d56 \\(\\mu_1, \\mu_2, \\cdots, \\mu_n\\) \u7684\u5206\u5e03\u53c2\u6570 \\(\\theta = \\theta(\\mu_1, \\mu_2, \\cdots, \\mu_n)\\), \u6709 \\(\\theta\\) \u7684\u4f30\u8ba1</p> \\[     \\hat{\\theta} = \\theta(A_1, A_2, \\cdots, A_n) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_17","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1","text":"<p>\u5b9a\u4e49\u8bbe\u603b\u4f53 \\(X\\) \u6709\u5206\u5e03\u5f8b \\(P(X=x;\\theta)\\) \u6216\u5bc6\u5ea6\u51fd\u6570 \\(f(x;\\theta)\\) \uff08\u5176\u4e2d \\(\\theta\\) \u4e3a\u4e00\u4e2a\u672a\u77e5\u53c2\u6570\u6216\u51e0\u4e2a\u672a\u77e5\u53c2\u6570\u7ec4\u6210\u7684\u5411\u91cf \\(\\theta=(\\theta_1,\\theta_2,\\cdots,\\theta_k)\\)\uff09\uff0c\u5df2\u77e5 \\(\\theta\\in\\Theta\\)\uff0c\\(\\Theta\\) \u662f\u53c2\u6570\u7a7a\u95f4. \\((x_1, x_2, \\cdots, x_n)\\) \u4e3a\u53d6\u81ea\u603b\u4f53 \\(X\\) \u7684\u4e00\u4e2a\u6837\u672c \\((X_1, X_2, \\cdots, X_n)\\) \u7684\u89c2\u6d4b\u503c\uff0c\u5c06\u6837\u672c\u7684\u8054\u5408\u5206\u5e03\u5f8b\u6216\u8054\u5408\u5bc6\u5ea6\u51fd\u6570\u770b\u6210 \\(\\theta\\) \u7684\u51fd\u6570\uff0c\u7528 \\(L(\\theta)\\) \u8868\u793a\uff0c\u53c8\u79f0\u4e3a \\(\\theta\\) \u7684\u4f3c\u7136\u51fd\u6570\uff0c\u5219\u4f3c\u7136\u51fd\u6570</p> \\[ L(\\theta)=\\prod_{i=1}^n P\\left(X_i=x_i;\\theta\\right), \\text{ \u6216 } L(\\theta)=\\prod_{i=1}^n f\\left(x_i;\\theta\\right),  \\] <p>\u79f0\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(L(\\hat{\\theta})=\\max_{\\theta\\in\\Theta} L(\\theta)\\) \u7684\u89e3 \\(\\hat{\\theta}\\) \u4e3a \\(\\theta\\) \u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_18","title":"\u70b9\u4f30\u8ba1\u7684\u4f18\u826f\u6027\u5224\u65ad\u6807\u51c6","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_19","title":"\u65e0\u504f\u6027","text":"<p>\u8bbe \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\\(\\theta\\) \u53d6\u503c\u7684\u53c2\u6570\u7a7a\u95f4\u4e3a \\(\\Theta\\)\uff0c\u82e5\u5bf9\u4efb\u610f\u7684 \\(\\theta \\in \\Theta\\)\uff0c\u6709</p> \\[ E_\\theta\\left(\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\right) = \\theta,  \\] <p>\u5219\u79f0 \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\uff08\u91cf\uff09\uff0c\u5426\u5219\u79f0\u4e3a\u6709\u504f\u4f30\u8ba1\uff08\u91cf\uff09. \u5982\u679c\u6709</p> \\[ \\lim_{n \\rightarrow \\infty} E_\\theta\\left(\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\right) = \\theta,  \\] <p>\u5219\u79f0 \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u6e10\u8fd1\u65e0\u504f\u4f30\u8ba1\uff08\u91cf\uff09. \u4f30\u8ba1\u91cf\u7684\u65e0\u504f\u6027\u662f\u6307\uff0c\u7531\u4f30\u8ba1\u91cf\u5f97\u5230\u7684\u4f30\u8ba1\u503c\u76f8\u5bf9\u4e8e\u672a\u77e5\u53c2\u6570\u771f\u503c\u6765\u8bf4\uff0c\u53d6\u67d0\u4e9b\u6837\u672c\u89c2\u6d4b\u503c\u65f6\u504f\u5927\uff0c\u53d6\u53e6\u4e00\u4e9b\u6837\u672c\u89c2\u6d4b\u503c\u65f6\u504f\u5c0f\u3002\u53cd\u590d\u5c06\u8fd9\u4e2a\u4f30\u8ba1\u91cf\u4f7f\u7528\u591a\u6b21\uff0c\u5c31\u5e73\u5747\u6765\u8bf4\u5176\u504f\u5dee\u4e3a 0\u3002\u5982\u679c\u4f30\u8ba1\u91cf\u4e0d\u5177\u6709\u65e0\u504f\u6027\uff0c\u5219\u65e0\u8bba\u4f7f\u7528\u591a\u5c11\u6b21\uff0c\u5176\u5e73\u5747\u503c\u4e5f\u4e0e\u771f\u503c\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u5c31\u662f\u7cfb\u7edf\u8bef\u5dee\u4e86\u3002</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_20","title":"\u6709\u6548\u6027","text":"<p>\u8bbe \\(\\hat{\\theta}_1\\) \u548c \\(\\hat{\\theta}_2\\) \u662f \\(\\theta\\) \u7684\u4e24\u4e2a\u65e0\u504f\u4f30\u8ba1\uff0c\u82e5\u5bf9\u4efb\u610f\u7684 \\(\\theta \\in \\Theta\\)\uff0c\u6709 \\(D(\\hat{\\theta}_1) \\leqslant D(\\hat{\\theta}_2)\\)\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a \\(\\theta \\in \\Theta\\) \u4f7f\u5f97\u4e0a\u8ff0\u4e0d\u7b49\u5f0f\u4e25\u683c\u6210\u7acb\uff0c\u5219\u79f0 \\(\\hat{\\theta}_1\\) \u6bd4 \\(\\hat{\\theta}_2\\) \u6709\u6548.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_21","title":"\u76f8\u5408\u6027(\u4e00\u81f4\u6027)","text":"<p>\u8bbe \\(\\hat{\\theta} = \\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\u82e5\u5bf9 \\(\\forall \\varepsilon &gt; 0\\) \uff0c</p> \\[     \\lim_{n \\rightarrow \\infty} P(|\\hat{\\theta} - \\theta| \\geqslant \\varepsilon) = 0, \\] <p>\u5219\u79f0\u4f30\u8ba1\u91cf \\(\\hat{\\theta}\\) \u5177\u6709\u76f8\u5408\u6027\uff08\u4e00\u81f4\u6027\uff09\uff0c\u5373 \\(\\hat{\\theta} \\xrightarrow{P} \\theta\\)\uff0c\u6216\u79f0 \\(\\hat{\\theta}\\) \u662f \\(\\theta\\) \u7684\u76f8\u5408\uff08\u4e00\u81f4\uff09\u4f30\u8ba1\u91cf.</p> <p>\u76f8\u5408\u6027\u88ab\u89c6\u4e3a\u5bf9\u4f30\u8ba1\u7684\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u8981\u6c42\uff0c\u5982\u679c\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\u5728\u6837\u672c\u91cf\u4e0d\u65ad\u589e\u5927\u65f6\uff0c\u5b83\u4e0d\u80fd\u628a\u88ab\u4f30\u53c2\u6570\u4f30\u8ba1\u5230\u4efb\u610f\u6307\u5b9a\u7684\u7cbe\u5ea6\u5185\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f30\u8ba1\u662f\u4e0d\u597d\u7684. \u901a\u5e38\uff0c\u4e0d\u6ee1\u8db3\u76f8\u5408\u6027\u7684\u4f30\u8ba1\u4e00\u822c\u4e0d\u4e88\u8003\u8651.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_22","title":"\u533a\u95f4\u4f30\u8ba1","text":"<p>\u8bbe \\((X_1, X_2, \\cdots, X_n)\\) \u662f\u53d6\u81ea\u603b\u4f53 \\(X\\) \u7684\u4e00\u4e2a\u6837\u672c\uff0c\u603b\u4f53 \\(X \\sim f(x; \\theta), \\theta \\in \\Theta\\) \u672a\u77e5\uff0c\u5bf9\u4e8e \\(\\forall 0 &lt; \\alpha &lt; 1\\)\uff0c\u82e5\u7edf\u8ba1\u91cf \\(\\underline{\\theta} = \\underline{\\theta}(X_1, X_2, \\cdots, X_n) &lt; \\overline{\\theta}(X_1, X_2, \\cdots, X_n) = \\overline{\\theta}\\)\uff0c\u4f7f\u5f97</p> \\[ P(\\underline{\\theta} \\leqslant \\theta \\leqslant \\overline{\\theta}) = 1 - \\alpha, \\theta \\in \\Theta,  \\] <p>\u5219\u79f0 \\([\\underline{\\theta}, \\overline{\\theta}]\\) \u4e3a \\(\\theta\\) \u7684\u53cc\u4fa7 \\(1 - \\alpha\\) \u7f6e\u4fe1\u533a\u95f4\uff0c\\(\\underline{\\theta}, \\overline{\\theta}\\) \u5206\u522b\u79f0\u4e3a \\(\\theta\\) \u7684\u53cc\u4fa7 \\(1 - \\alpha\\) \u7f6e\u4fe1\u533a\u95f4\u7684\u7f6e\u4fe1\u4e0b\u9650\u548c\u7f6e\u4fe1\u4e0a\u9650\uff0c\\(1 - \\alpha\\) \u4e3a\u7f6e\u4fe1\u6c34\u5e73\uff0c\u4e00\u65e6\u6837\u672c\u6709\u89c2\u6d4b\u503c \\((x_1, x_2, \\cdots, x_n)\\)\uff0c\u5219\u79f0\u76f8\u5e94\u7684 \\([\\underline{\\theta}(x_1, x_2, \\cdots, x_n), \\overline{\\theta}(x_1, x_2, \\cdots, x_n)]\\) \u4e3a\u7f6e\u4fe1\u533a\u95f4\u7684\u89c2\u6d4b\u503c\u3002</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_23","title":"\u6570\u5b66\u5efa\u6a21","text":"<p>\u8bc1\u660e\uff1a\u5f53 \\(m &lt; n\\) \u65f6\uff0c</p> \\[ \\begin{aligned} \\sum_{k = 0}^{n}(-1)^k(n - k)^mC_n^k = 0 \\end{aligned} \\]"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/","title":"\u5206\u6cbb","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 2 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#number-multiplication","title":"Number Multiplication","text":"<ul> <li>Calculate by dividing the two n-digit into two parts and recursion -- \\(O(n^2)\\) </li> <li>Improvement;</li> </ul> \\[ xy = ac \\cdot 10^n + (ad + bc) \\cdot 10^{n / 2} + bd \\] <p>where \\(ad + bc = (a + c) (b + d) - ac - bd\\), using 3 times of multiplication instead of 4. We have time complexity (multiply times) of \\(\\displaystyle O(3^{\\log n}) \\approx O(n^{1.6})\\)</p> <p>If \\(n\\) is not 2's power?</p> <p>Add \\(0\\).</p> <p>Karatsuba Algorithm</p> \\[ T(n) = 3T\\left(\\frac{n}{2}\\right) + O(n) \\] <p>To be accurate, \\(3T(n / 2)\\) should be \\(3T(n / 2 + 1)\\), as \\(a + b, c + d\\) may be of \\((2n + 1)\\)-bit length (due to carry).</p> \\[ \\begin{aligned} T(n) &amp;= 3\\Bigg( 3T\\!\\left(\\frac{n}{4}\\right) + c \\cdot \\frac{n}{2} \\Bigg) + cn       = 3^2 T\\!\\left(\\frac{n}{4}\\right) + cn\\left(1 + \\frac{3}{2}\\right) \\\\[6pt]      &amp;= 3^3 T\\!\\left(\\frac{n}{2^3}\\right) + cn\\left(1 + \\frac{3}{2} + \\left(\\frac{3}{2}\\right)^2\\right) \\\\[6pt]      &amp;= 3^4 T\\!\\left(\\frac{n}{2^4}\\right) + cn\\left(1 + \\frac{1}{2} + \\left(\\frac{3}{2}\\right)^2 + \\left(\\frac{3}{2}\\right)^3\\right) \\\\[6pt]      &amp;\\ \\ \\vdots \\\\[6pt]      &amp;= 3^{\\log_2 n}T(1)          + cn\\left(1 + \\frac{1}{2} + \\left(\\frac{3}{2}\\right)^2 + \\left(\\frac{3}{2}\\right)^3 + \\cdots          + \\left(\\frac{3}{2}\\right)^{\\log_2 n - 1}\\right) \\\\[6pt]      &amp;= O\\!\\left(n^{\\log_2 3}\\right) + O\\!\\left(n^{1+\\log_2 1.5}\\right)        = O\\!\\left(n^{\\log_2 3}\\right) \\end{aligned} \\] <p>Other better algorithms</p> <ul> <li>Toom-Cook: dividing into 3 parts, reduce 9 multiplication into 5 times. \u2192 \\(O(n^{1.465})\\)</li> <li>Schonhage-Strassen (\\(O(n \\log n \\log log n)\\))... (based on FFT)</li> </ul>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#matrix-multiplication","title":"Matrix multiplication","text":"<p>Directly calculate, \\(O(n^3)\\)</p> <p>Strassen\u2019s magical idea:</p> \\[ \\begin{cases} P_{1} = A(F - H) \\\\ P_{2} = (A + B)H \\\\ P_{3} = (C + D)E \\\\ P_{4} = D(G - E) \\\\ P_{5} = (A + D)(E + H) \\\\ P_{6} = (B - D)(G + H) \\\\ P_{7} = (A - C)(E + F) \\end{cases} \\] <p>then </p> \\[ \\begin{aligned} XY &amp;=  \\begin{pmatrix} A &amp; B \\\\ C &amp; D \\end{pmatrix} \\begin{pmatrix} E &amp; F \\\\ G &amp; H \\end{pmatrix} \\\\[6pt] &amp;= \\begin{pmatrix} AE + BG &amp; AF + BH \\\\ CE + DG &amp; BF + DH \\end{pmatrix} \\\\[6pt] &amp;= \\begin{pmatrix} P_{5} + P_{4} - P_{2} + P_{6} &amp; P_{1} + P_{2} \\\\ P_{3} + P_{4} &amp; P_{1} + P_{5} - P_{3} - P_{7} \\end{pmatrix} \\end{aligned} \\] <p>reducing 8 multiplication into 7.</p> <p>Others: - Strassen: \\(n^\\omega, \\omega \\leq \\log_2^7\\) - Conjecture (\u731c\u60f3) \\(\\omega = 2 + \\varepsilon\\) for any \\(\\varepsilon &gt; 0\\).</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#sorting","title":"Sorting","text":"<p>(Omitted)</p> <p>Merge Sort analysis:</p> \\[ T(n) = 2T\\left(\\frac{n}{2}\\right) + O(n) \\] <p>So </p> \\[ T(n) \\leq 2T(n / 2) + cn \\leq 2 B \\cdot \\frac{n}{2} \\log \\frac{n}{2} + cn \\leq Bn\\log n \\] <p>The lower bound of compare sorting is \\(\\Omega(n \\log n)\\)</p> <p>Total number of possible outputs is \\(3^{K(n)}\\) if \\(K(n)\\) comparisons are made.  The total number of possible orders is \\(n!\\), and the algorighm needs to distinguish them. So  </p> \\[ 3^{K(n)} \\geq n! \\Rightarrow K(n) \\geq \\log \\]"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#master-theorem","title":"Master Theorem","text":"<p>If \\(T(n) = aT(n / b) + O(n^d)\\), then</p> \\[ T(n) =  \\begin{cases} \\displaystyle O(n^d), &amp;\\quad a &lt; b^d \\\\ \\displaystyle O(n^{\\log_ba}), &amp;\\quad a &gt; b^d \\\\ \\displaystyle O(n^d\\log n), &amp;\\quad a = b^d \\end{cases} \\]"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#selection-problem","title":"Selection Problem","text":"<p>Find the \\(k\\)-th smallest integer among \\(x_1, \\cdots, x_n\\),  </p> <p>A solution the same as quick sort: select the arbitrary item \\(x_0\\) and divide the array into \\(L: x &lt; x_0, M: x = x_0, R: x &gt; x_0\\), and recurse.  </p> <p>However, the worse case is \\(O(n^2)\\).</p> <p>Median of the medians (1973)</p> <p>step1. partition S into subsets with size 5 (\\(O(n)\\)) step2. find the medians of the median of each subset (\\(O(n)\\)) step3. fix \\(x_0\\) to be the median of all the medians (by recursion: the \\(n / 2\\) least) (\\(T(n / 5)\\))</p> <p>Analysis: there is about \\(3n / 10\\) numbers larger than \\(x_0\\) in the worst case, i.e. \\(\\text{the-} 3 / 10 \\text{-th} \\leq x_0 \\leq \\text{the-} 7 / 10 \\text{-th}\\) (Why?)</p> <p>So \\(T(n) = T(n / 5) + T(7n / 10) + O(n)\\)</p> <p>\\(T(n) --&gt; 0.9T(n)\\) after each iteration, so we guess \\(T(n) \\leq Bn\\).</p> \\[ T(n) \\leq \\frac{1}{5}Bn + \\frac{7}{10}Bn + Cn \\leq 0.9Bn + Cn \\leq Bn \\] <p>holds if \\(B \\geq 10C\\).</p> <p>So \\(T(n) = O(n)\\)</p> <p>So why we divide into size 5?</p> <p>Assume we divide into size \\(t\\), then \\(\\displaystyle x_0 \\in \\left[\\frac{3t - 1}{4t}, \\frac{t + 1}{4t}\\right]\\) (when \\(t\\) is odd). So</p> \\[ T(n) = T(n / t) + T\\left(\\frac{(3t - 1)n}{4t}\\right) + O(n) \\] <p>\\(T(n) = O(n)\\) iff. \\(\\displaystyle \\frac{1}{t} + \\frac{(3t - 1)}{4t} \\leq 1\\) iff. \\(t \\geq 5\\).</p> <ul> <li>If \\(t = 3\\), \\(T(n) = O(n \\log n)\\)</li> </ul>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#quick-sort","title":"Quick Sort","text":"<p>By Median of the medians, we have \\(O(n)\\) to find the median number. So</p> \\[ T(n) = 2T(n / 2) + O(n) \\Rightarrow T(n) = O(n \\log n) \\] <p>However, it is low in practice! (Median of the medians is low due to the large constant \\(B\\)!)</p> <p>Choose the pivot item by random:</p> <p>let \\(a_i\\): the \\(i\\)-th smallest number in the array, \\(\\displaystyle X_{ij} =\\begin{cases}1, &amp; a_i, a_j \\text{ have been compared} \\\\ 0, &amp;\\text{otherwise}\\end{cases}\\), and \\(X: \\text{Total compare times}\\).  </p> <p>So we have \\(\\mathbb{E}(X) = \\mathbb{E}\\sum X_{ij} = \\sum P(X_{ij} = 1)\\).</p> <p>\\(X_{ij} = 0\\) iff. \\(a_i, a_j\\) have been divided into 2 different groups. Noting that all the number will be chosen once during the whole algorithm, and we only pay attention to the first number chosen between \\(a_i, a_j\\). So \\(\\displaystyle P(X_{ij} = 1) = \\frac{2}{j - i + 1}\\) (they are not divided at first).</p> <p>So \\(\\displaystyle \\mathbb{E}(X) = \\sum \\frac{2}{j - i + 1} = \\Theta (n \\log n)\\)</p> <p>The derivation</p> <p>Let \\(d = j - i\\)</p> \\[ \\begin{align} \\mathbb{E}(X) =&amp; \\sum_{d = 1}^{n - 1}\\frac{2(n - d)}{d + 1} \\\\ =&amp; (2n + 2)\\sum_{d = 1}^{n - 1}\\frac{1}{d + 1} - 2(n - 1) \\\\  \\approx&amp; (2n + 2)\\log n - 2(n - 1) = \\Theta (n \\log n) \\end{align} \\]"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#closest-pairs","title":"Closest Pairs","text":"<p>Find the closest dot pair on the 2-D plane.</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%88%86%E6%B2%BB/%E5%88%86%E6%B2%BB/#polynomial-multiplication-fft","title":"Polynomial Multiplication -- FFT","text":"<p>Let \\(p(x) = a_0 + \\ldots + a_{d - 1}x^{d - 1}, q(x) = b_0 + \\ldots + b_{d - 1}x^{d - 1}\\).</p> <p>Solution 1: Adapting Karatsuba Algorithm \u2192 \\(O(d^{\\log_2 3})\\)</p> <p>A \\(O(d \\log d)\\) solution: FFT</p> <p></p> <p>step1. Choose \\(2d - 1\\) distinct numbers \\(a_0, \\cdots, a_{2d - 2}\\), and compute \\(p(a_i), q(a_i)\\)</p> <p>We can view polynomial evaluation as a matrix\u2013vector multiplication:</p> \\[ \\begin{pmatrix}p(x_0) \\\\ \\vdots \\\\ p(x_{d - 1})\\end{pmatrix} = \\begin{pmatrix}1 &amp; \\cdots &amp; x^{d - 1} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ x^{d - 1} &amp; \\cdots &amp; x^{(d - 1)(d - 1)}\\end{pmatrix}\\begin{pmatrix}a_0 \\\\ \\vdots \\\\ a_{d - 1}\\end{pmatrix} \\] <p>Directly compute every \\(p(a_i), q(a_i)\\): \\(O(d^2)\\) \u2192 bad! However, computing each \\(p(a_i)\\) requires \\(O(d)\\) time!  </p> <p>Noting that if we let</p> \\[ \\begin{align} p_e(x) &amp;= a_0 + a_2 x + \\cdots + a_{d - 2}x^{d/2 - 1} \\\\ p_o(x) &amp;= a_1 + a_3x + \\cdots + a_{d - 1}x^{d / 2 - 1} \\end{align} \\] <p>then </p> \\[ p(x) = p_e(x^2) + xp_o(x^2) \\] <p>Let \\(a_1 = - a_0, a_3 = -a_2, \\cdots\\) </p> \\[ \\begin{align} p(a_1) &amp;= p_e(a_0^2) - a_0p_o(a_0^2) \\\\ p(a_0) &amp;= p_e(a_0^2) + a_0p_o(a_0^2) \\end{align} \\] <p>By this we can just compute half of \\(p(a_i)\\). So with the same task size, we reduce degree \\(d\\) to \\(d / 2\\).</p> <p>Then recursively compute \\(p_e\\) and \\(p_o\\), total time complexity \\(O(d \\log d)\\).</p> <p>To ensure the recurse is continuous, in practice we use the unit roots: \\(\\displaystyle \\omega = \\mathrm{e}^{\\frac{2\\pi}{d}i}\\)</p> Text Only<pre><code>FFT(p, w):\n    If w = 1: return p(1)\n    Define p_e(x) and p_o(x)\n\n    (p_e(w^0), p_e(w^2), ..., p_e(w^{D - 2})) = FFT(p_e, w^2)\n    (p_o(w^0), p_o(w^2), ..., p_o(w^{D - 2})) = FFT(p_o, w^2)\n\n    For t = 0, 1, ..., D - 1:\n        p(w^t) = p_e(w^{2t}) + w^t p_o(w^{2t})\n    Return (p(w^0), ..., p(w^{D - 1}))\n</code></pre> <p>step2. Compute \\(r(a_i) = p(a_i)q(a_i)\\), \\(O(d)\\).  </p> <p>step3. Compute \\(r(x)\\).  </p> \\[ \\begin{pmatrix} r(1)\\\\ r(\\omega)\\\\ r(\\omega^{2})\\\\ \\vdots\\\\ r(\\omega^{d-1}) \\end{pmatrix} = \\underbrace{\\begin{pmatrix} 1 &amp; 1 &amp; 1 &amp; \\cdots &amp; 1\\\\ 1 &amp; \\omega &amp; \\omega^{2} &amp; \\cdots &amp; \\omega^{d-1}\\\\ 1 &amp; \\omega^{2} &amp; \\omega^{4} &amp; \\cdots &amp; \\omega^{2(d-1)}\\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\\\ 1 &amp; \\omega^{d-1} &amp; \\omega^{2(d-1)} &amp; \\cdots &amp; \\omega^{(d-1)(d-1)} \\end{pmatrix}}_{A} \\begin{pmatrix} c_0\\\\ c_1\\\\ c_2\\\\ \\vdots\\\\ c_{d-1} \\end{pmatrix} \\] <p>And due to \\(\\displaystyle \\frac{1}{\\sqrt{d}}A\\) is orthonormal, \\(\\displaystyle \\left(\\frac{1}{\\sqrt{d}}A\\right)^{-1} = \\left(\\frac{1}{\\sqrt{d}}A\\right)^* = \\overline{\\left(\\frac{1}{\\sqrt{d}}A\\right)^T}\\). So \\(\\displaystyle A(\\omega)^{-1} = \\frac{1}{d}A(\\omega)^*\\). Noting:</p> \\[ \\left(A(\\omega)^{-1}\\right)_{i, j} = \\frac{1}{d} \\overline{\\left(A(\\omega)\\right)_{j, i}} = \\frac{1}{d}\\left(\\omega^{-1}\\right)^{(i - 1)(j - 1)} \\] <p>So \\(\\displaystyle A(\\omega)^{-1} = \\frac{1}{D}\\cdot A\\left(\\omega^{-1}\\right)\\)</p> \\[ \\begin{pmatrix} c_0\\\\ c_1\\\\ c_2\\\\ \\vdots\\\\ c_{d-1} \\end{pmatrix} = \\frac{1}{D} \\cdot A(\\omega^{-1}) \\cdot \\begin{pmatrix} r(1)\\\\ r(\\omega)\\\\ r(\\omega^{2})\\\\ \\vdots\\\\ r(\\omega^{d-1}) \\end{pmatrix} \\] <p>It is same as compute \\(\\displaystyle s\\left(x\\right) = \\frac{r(1)}{d} + \\frac{r(\\omega)}{d}x + \\ldots + \\frac{r(\\omega^{d - 1})}{d}x^{d - 1}\\) with \\(x = \\omega^{-1}, \\ldots, \\omega^{-(d - 1)}\\). So we can apply function <code>FFT</code> in \\(O(d \\log d)\\)!</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/","title":"\u56fe","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#dfs-tree-and-topological-sort","title":"DFS Tree and Topological Sort","text":""},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#dfs-tree","title":"DFS Tree","text":"<p>By a complete DFS, we can get a subgraph \\(T\\) of the former directed graph \\(G\\), and \\(T\\) is a tree called DFS Tree </p> <p>Then with the tree we divide the edges of \\(G\\) into 4 groups: - Tree edges: the edges in \\(T\\) - Forward edges: edges from an ancestor to its descendant in \\(T\\) - Back edges: edges from an descendant to its ancestor in \\(T\\) - Cross edges: edges cross two subtrees in \\(T\\)</p> <pre><code>flowchart LR\n    %% === Nodes ===\n    A((A))\n    B((B))\n    C((C))\n    D((D))\n    E((E))\n    F((F))\n    G((G))\n    H((H))\n    I((I))\n    J((J))\n\n%%    %% === Subgraph for DFS Tree ===\n%%    subgraph T[\"DFS Tree T\"]\n%%        direction LR\n%%        A\n%%        B\n%%        C\n%%        D\n%%        E\n%%        F\n%%        G\n%%        H\n%%        I\n%%        J\n%%    end\n\n    %% === DFS Tree edges (\u751f\u6210\u6811) ===\n    A --&gt; B\n    A --&gt; C\n    B --&gt; D\n    B --&gt; E\n    C --&gt; F\n    D --&gt; G\n    E --&gt; H\n    F --&gt; I\n    G --&gt; J\n\n    %% === Other edges in G (\u975e\u6811\u8fb9) ===\n    A --&gt;|Forward| H\n    C --&gt;|Forward| G\n    E --&gt;|Cross| F\n    I --&gt;|Cross| D\n    H --&gt;|Back| B\n    J --&gt;|Cross| E\n\n\n\n    %% === Soft color styling ===\n    %% Tree edges: \u67d4\u548c\u7eff\u8272\n    linkStyle 0,1,2,3,4,5,6,7,8 stroke:#6da96f,stroke-width:2px;\n\n    %% Forward edges: \u67d4\u548c\u84dd\u7070\n    linkStyle 9,10 stroke:#6b8fb3,stroke-width:2px;\n\n    %% Back edges: \u6df1\u7ea2\u68d5\u8272\u865a\u7ebf\n    linkStyle 13 stroke:#b26b6b,stroke-dasharray:4 3,stroke-width:2px;\n\n    %% Cross edges: \u6696\u6a59\u7070\u8272\u865a\u7ebf\n    linkStyle 11,12,14 stroke:#b28b5c,stroke-dasharray:3 3,stroke-width:2px;\n</code></pre>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#topological-ordering","title":"Topological Ordering","text":"<p>Given a directed graph \\(G\\), a topological order is an ordering of vertices such that for every directed edge \\(u, v \\in E\\), vertex \\(u\\) comes before vertex \\(v\\) in the ordering.</p> <p>Theorem</p> <ol> <li>Topological order exists iff. the graph is a DAG (Directed Acyclic Graph)  </li> <li>There must exist at least a sink in a DAG. (Sink: vertices that do not have outgoing edges.)</li> </ol>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#the-algorithm-to-find-topological-order-in-dag","title":"The algorithm to find Topological Order in DAG","text":"<p>Solution 1: (Time complexity \\(O(\\vert V\\vert^2)\\))</p> <ol> <li>Find a sink (\\(O(\\vert V \\vert)\\))  </li> <li>Put it to be the last one in the topological order  </li> <li>Remove the sink in the graph  </li> <li>Repeat 1.</li> </ol> <p>Solution 2: Improve by DFS</p> <p>Through DFS we can record some information to find the sink. Record the start time and finish time through DFS:</p> Text Only<pre><code>time = 0\ndef DFS(u):\n    start[u] = time\n    time ++\n\n    vis[u] = true\n    for each u's neighbour v:\n        if vis[v]: continue\n        DFS[v]\n\n    finish[u] = time\n    time ++\n</code></pre> <pre><code>flowchart LR\n    %% === Nodes with (start, finish) time ===\n    A((\"A(0,19)\"))\n    B((\"B(1,10)\"))\n    C((\"C(11,18)\"))\n    D((\"D(2,5)\"))\n    E((\"E(6,9)\"))\n    F((\"F(12,15)\"))\n    G((\"G(3,4)\"))\n    H((\"H(7,8)\"))\n    I((\"I(13,14)\"))\n    J((\"J(5,6)\"))\n\n    %% === DFS Tree edges (\u751f\u6210\u6811) ===\n    A --&gt; B\n    A --&gt; C\n    B --&gt; D\n    B --&gt; E\n    C --&gt; F\n    D --&gt; G\n    E --&gt; H\n    F --&gt; I\n    G --&gt; J\n\n    %% === Other edges in G (\u65e0 back edge) ===\n    A --&gt;|Forward| H\n    C --&gt;|Forward| G\n    E --&gt;|Cross| F\n    I --&gt;|Cross| D\n    J --&gt;|Cross| E\n\n    %% === Legend (explanation of data pair) ===\n%%    subgraph Legend[\"Legend\"]\n%%        direction TB\n        L1[\"Each node shows (start, finish) \u2014the DFS discovery and finishing times.\"]\n%%    end\n\n    %% === Connect Legend to one node for positioning hint ===\n%%    J -.-&gt; L1\n\n    %% === Soft color styling ===\n    linkStyle 0,1,2,3,4,5,6,7,8 stroke:#6da96f,stroke-width:2px;\n    linkStyle 9,10 stroke:#6b8fb3,stroke-width:2.5px;\n    linkStyle 11,12,13 stroke:#b28b5c,stroke-dasharray:3 3,stroke-width:2px;\n</code></pre> <p>The vertex with the earliest finish time is the sink. So just sort vertices by descending order of finish time. (\\(O(\\vert V \\vert \\log \\vert V \\vert)\\))</p> <p>In fact, we haven't to sort afterward: just add the vertex into the topological order list when it finishes. (\\(O(\\vert V \\vert + \\vert E \\vert)\\))</p> Proof <p>Claim: No edge \\((u, v)\\), if <code>finish[v] &gt; finish[u]</code>.</p> <p>If \\((u, v)\\) exists, - Can it be a tree/forward edge? Obviously no. - Can it be a cross edge? No! If it exists, the DFS will get through the cross edge! - Can it be a back edge? No! There shouldn't exist back edge in DAG!</p> <p>DFS can distinguish four types of edges</p> <p>Edge \\((u, v)\\) in DFS process: - Tree edge: <code>vis[v] = false</code> - Forward edge: <code>vis[v] = true</code>, <code>start[u] &lt; start[v] &lt; finish[v] &lt; finish[u]</code> - Cross edge: <code>vis[v] = true</code>, <code>start[v] &lt; finish[v] &lt; start[u] &lt; finish[u]</code> - Back edge: <code>vis[v] = true</code>, <code>start[v] &lt; start[u] &lt; finish[u] &lt; finish[v]</code> </p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#strongly-connected-components-scc","title":"Strongly Connected Components (SCC)","text":"<p>Obviously all SCCs forms a partition of the directed graph. If we let each SCC be a super node, we can infer that the SCC super node graph is DAG, thus it has a sink SCC.</p> <p>Theorem</p> <p>The SCC with the largest finish time must be the source SCC</p> <p>Proof: Assume: - \\(u\\) has the largest finish time.     - exists \\(v\\) inside another SCC and has a path to \\(u\\)</p> <p>Obviously \\(u\\) is the root of the DFS tree and \\(v\\) cannot be in \\(u\\)'s DFS tree (or \\(u, v\\) are strongly connected!). However, \\(v\\) cannot be in another DFS tree because \\(u\\) starts earlier than \\(v\\)! So \\(v\\) doesn't exist.</p> <p>So by finding the sink of reverse SCC graph, we can get the source SCC.</p> <p>Kosaraju's Algorithm</p> <ol> <li>DFS \\(G^R\\) (reverse graph) and maintain a sorted list by the finish time  </li> <li>DFS \\(G\\), start from the descending order of the finish time each time.  </li> <li>Each DFS forms a SCC.</li> </ol> <p>Time complexity \\(O(\\vert V \\vert + \\vert E \\vert)\\)</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#bfs-tree-and-shortest-path","title":"BFS Tree and shortest path","text":"<p>Nothing more be derive to be written down()</p> Task DFS BFS Detecting Cycles YES NO Topological Ordering YES NO Finding CCs (Connected Components) YES YES Finding SCCs (Strongly Connected Components) YES NO Shortest Path NO YES"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#dijkstra-algorithm","title":"Dijkstra Algorithm","text":"<p>Single source shortest path for weighted graphs, by constructing a SPT.</p> <p>Shortest path tree (SPT): The path from the root to any node is the shortest.</p> <p>Find the closest node (from root) out of SPT, add it into the tree and update <code>dist[u]</code> of its neighbour.</p> <p>Noting</p> <p>The property \"non-negative weights\" ensures pulling the shortest in correct. </p> Text Only<pre><code># Initialize\nT = {r}\ndist[r] = 0, dist[v] = infty for v other than r\ndist[e] = w(r, e) for e in r's neighbour, pre[e] = r # record pre for path finding\n\n# Recurse\nwhile T \u2260 V:\n    Find v not in T with smallest dist[v]\n    T = T \u222a {v}\n    dist[u] = min{dist[u], dist[v] + w(v, u)} for v's neighbour u\n    if dist[u] is updated: pre[u] = v\n</code></pre> <p>To find the smallest <code>dist[v]</code>, we can maintain a heap to find it in \\(O(\\vert V \\vert \\log \\vert V \\vert)\\) overall, and update it in \\(O(\\vert E \\vert \\log \\vert V \\vert)\\) overall, so the total time complexity is \\(O(\\left(\\vert V \\vert + \\vert E \\vert\\right)\\log \\vert V \\vert)\\). And if using Fibonacci heap, the time complexity (optimal) \\(O(\\vert E \\vert + \\vert V \\vert \\log \\vert V \\vert)\\) (Not recommended to use in practice!).</p> <p>Note</p> <p>In fact, using linear list with time complexity \\(O(\\vert V \\vert^2 + \\vert E \\vert)\\) also acceptable!</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#short-path-with-negative-weights-bellman-ford-algorithm","title":"Short path with negative weights -- Bellman-Ford Algorithm","text":"<p>Instead of update the edges of the vertex \\(v\\) with the smallest <code>dist[v]</code>, we update the edges of all vertices in SPT.</p> <p>Exception</p> <p>If the graph has a negative cycle, the algorithm will not stop! To avoid this, we do the algorithm for at most \\(\\vert V \\vert\\) times. If it does not stop in \\(\\vert V \\vert\\) loops, the graph has negative cycles!</p> <p>Correctness of Bellman-Ford</p> <p>Lamma 1: after \\(k\\) rounds, <code>dist[v]</code> is the shortest distance of all \\(k\\)-edge paths (paths with at most \\(k\\) edges). Proof by induction: \\(k = 0\\) obvious; Suppose it's true for \\(k - 1\\) rounds. Forall \\(k\\)-edge paths \\((r, v_1, \\ldots, u_{k - 1}, v)\\). Noting that \\(dist[u_{k - 1}] \\leq d(s, u_1, \\ldots, u_{k - 1})\\) (induce), \\(dist[v] \\leq dist[u_{k - 1}] + w(u_{k - 1}, v)\\) (algorithm step).</p> <p>Also, the length of \\(\\vert V \\vert\\)-edge-path cannot be smaller than the length of the shortest \\((\\vert V \\vert - 1)\\)-edge-path, unless there is a negative cycle. (\\(\\vert V \\vert - 1\\) here to maintain the tree shape, and if updates \\(\\vert V \\vert\\) cycles, there must exist a cycle.)  </p> <p>So after \\(\\vert V \\vert - 1\\) cycles, <code>dist[v]</code> is the shortest distance, otherwise it has a negative cycle.</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E5%9B%BE/%E5%9B%BE/#check-if-the-graph-has-a-negative-cycle","title":"Check if the graph has a Negative Cycle","text":"<p>Add a node \\(s\\) connecting to all the nodes, and do Bellman-Ford.</p> <p>In practice, just initialize all the <code>dist[v]</code> to \\(0\\), and judge if there exist updates in round \\(\\vert V \\vert\\) \u2192 \\(O(\\vert V \\vert \\cdot \\vert E \\vert)\\) </p> <p>The full Bellman-Ford down here</p> Text Only<pre><code># Initialize\nT = {r}\ndist[r] = 0, dist[v] = infty for v other than r\npre[v] = null for v other than r # record pre for path finding\n\n# Recurse\ndo |V| times:\n    for each (u, v) \u2208 E:\n        if dist[v] &gt; dist[u] + w(u, v):\n            dist[v] = dist[u] + w(u, v)\n            pre[v] = u\n\nif some dist[x] was updated in the last round:\n    output \"the graph contains cycles\"\nelse:\n    output dist\n</code></pre> <p>Comments</p> <ol> <li>Going through <code>pre</code> allows you to find a cycle if exists  </li> <li>No polynomial algorithm to find all the cycles</li> </ol>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E8%B4%AA%E5%BF%83/%E8%B4%AA%E5%BF%83/","title":"\u8d2a","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E8%B4%AA%E5%BF%83/%E8%B4%AA%E5%BF%83/#hard-problem","title":"Hard Problem","text":"<p>The Partition Problem: Get a partition of num-set \\(S\\) such that \\(\\sum_{S_1}x = \\sum_{S_2}x\\) \u2192 NP hard. (Proof later)</p> <p>\"Homework ++\": given a set of tasks with release time \\(r_i\\), duration \\(s_i\\) and DDL \\(d_i\\), find a arrangement to complete them.</p> <p>Prove Homework ++ is harder than partition</p> <p>Given the partition input \\(\\{a_1, \\ldots, a_n\\}\\), let \\(w = \\sum a_i\\) \\(n + 1\\) homeworks, the first \\(n\\) represents \\(a_1, \\ldots, a_n\\), each has release time \\(0\\), DDL \\(w + 1\\), and size \\(a_i\\). And the last homework has release time \\(w / 2\\), DDL \\(w / 2 + 1\\) and size \\(1\\), so it must start at time \\(w / 2\\). Then the arrangement of the other tasks is a partition problem!</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E8%B4%AA%E5%BF%83/%E8%B4%AA%E5%BF%83/#minimum-spanning-tree-mst","title":"Minimum Spanning Tree (MST)","text":"<p>Definition and algorithms were introduced in discrete math, omitted.</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E8%B4%AA%E5%BF%83/%E8%B4%AA%E5%BF%83/#prim-algorithm","title":"Prim Algorithm","text":"<p>Add a node into the tree each time. Exactly, from a vertex, add a node into the tree with the closest edge weight.</p> Text Only<pre><code># Initialize\nT = {}, S = {}\ncost[r] = 0, cost[v] = inf for v other than r\nfor r's neighbour v: cost[v] = w(r, v), pre[v] = r\n\n# Recurse\nwhile:\n    find v not in S with smallest cost[v]\n    S = S + {v}, T = T + {(pre[v], v)}\n\n    # update\n    for v's neighbour u:\n        cost[u] = min(cost[u], w(u, v))\n        if cost[u] was updated, pre[u] = v\n</code></pre> <p>With Fibonacci heap, we have \\(O(\\vert E \\vert + \\vert V \\vert \\log \\vert V \\vert)\\)</p>"},{"location":"NoflowersNotes/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%88%86%E6%9E%90/%E8%B4%AA%E5%BF%83/%E8%B4%AA%E5%BF%83/#kruskals-algorithm","title":"Kruskal's Algorithm","text":"<p>Add an edge between the vertices each time. Exactly, sorting the edges and choose a shortest edge which will not form a cycle and add it into the tree edges.</p> Text Only<pre><code>to be completed...\n</code></pre>"},{"location":"notices/","title":"\u901a\u77e5\u4e2d\u5fc3","text":""},{"location":"notices/2025/07/25/littleskin-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%BD%BF%E7%94%A8/","title":"LittleSkin \u8d26\u53f7\u6ce8\u518c\u4f7f\u7528","text":"<p>\u670d\u52a1\u5668\u4f7f\u7528 LittleSkin \u8ba4\u8bc1\uff0c\u8bf7\u53c2\u8003\u4ee5\u4e0b\u6559\u7a0b\u8fdb\u884c\u8d26\u53f7\u6ce8\u518c\u548c\u542f\u52a8\u5668\u767b\u5f55\u3002</p>"},{"location":"notices/2025/07/25/littleskin-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%BD%BF%E7%94%A8/#_1","title":"\u6ce8\u518c\u8d26\u53f7","text":"<p>\u8bbf\u95ee LittleSkin \u5b98\u7f51\uff0c\u5e76\u8fdb\u884c\u8d26\u6237\u6ce8\u518c\u3002\u6ce8\u610f\u67e5\u770b\u81ea\u5df1\u90ae\u7bb1\u4e2d\u7684\u9a8c\u8bc1\u90ae\u4ef6\u4ee5\u5b8c\u5168\u6fc0\u6d3b\u8d26\u53f7\u3002</p>"},{"location":"notices/2025/07/25/littleskin-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%BD%BF%E7%94%A8/#_2","title":"\u521b\u5efa\u89d2\u8272","text":"<p>\u5177\u4f53\u7ad9\u5185\u64cd\u4f5c\u53ef\u4ee5\u67e5\u770b \u5b98\u65b9\u6587\u6863 -- \u89d2\u8272 \u548c \u5b98\u65b9\u6587\u6863 -- \u76ae\u80a4</p> <p>\u6ce8\u610f</p> <p>\u867d\u7136\u6587\u6863\u4e2d\u89d2\u8272\u540d\u53ef\u4ee5\u662f\u4e2d\u65e5\u97e9\u6587\u5b57\u6bcd\uff0c\u4f46\u662f\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u91c7\u7528\u7eaf\u82f1\u6587\u5b57\u7b26\u4f5c\u4e3a\u89d2\u8272\u540d (\u6e38\u620fid)</p> <p>\u89d2\u8272</p> <p>\u4f60\u7684 LittleSkin \u8d26\u53f7\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u89d2\u8272</p>"},{"location":"notices/2025/07/25/littleskin-%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%BD%BF%E7%94%A8/#_3","title":"\u542f\u52a8\u5668\u767b\u5f55","text":"<p>\u670d\u52a1\u5668\u91c7\u7528 Yggdrasil \u5916\u7f6e\u767b\u5f55\u3002</p> <p>\u5b98\u65b9\u542f\u52a8\u5668\u6682\u4e0d\u652f\u6301\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u767b\u5f55\uff0c\u56e0\u6b64\u6211\u4eec\u63a8\u8350\u91c7\u7528\u56fd\u5185\u4e3b\u6d41\u7684\u542f\u52a8\u5668 HMCL \u548c PCL\u3002</p> HMCLPCL <p>\u53f3\u4e0a\u89d2 \"\u8d26\u6237\" \u2192 \"LittleSkin\" \u767b\u5f55\u65f6\u7684\u7528\u6237\u540d\u53ef\u4ee5\u586b\u5199 LittleSkin \u6ce8\u518c\u90ae\u7bb1 (\u7136\u540e\u53ef\u4ee5\u9009\u62e9\u4f60\u7684\u89d2\u8272) \u6216\u8005\u4f60\u7684\u89d2\u8272\u540d (\u5373\u4e3a\u8be5\u89d2\u8272\u767b\u5f55)\u3002\u542f\u52a8\u6e38\u620f\u65f6\u6240\u4f7f\u7528\u7684\u8d26\u53f7\u5373\u4e3a\u6e38\u620f\u5185\u8d26\u53f7\u3002</p> <p>\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 -- HMCL</p> <p>\u9009\u62e9 \u7248\u672c\u8bbe\u7f6e\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u586b\u5165\u4ee5\u4e0b\u5185\u5bb9</p> <p></p>"},{"location":"notices/2025/07/08/matplotlib%E7%BB%98%E5%9B%BE%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/","title":"Matplotlib\u7ed8\u56fe\u683c\u5f0f\u89c4\u8303","text":"<p>\u4e3a\u4e86\u6570\u6a21\u6bd4\u8d5b\u4ee5\u53ca\u5c0f\u7ec4\u4f5c\u4e1a\u62a5\u544a/\u8bba\u6587\u683c\u5f0f\u7edf\u4e00\u7f8e\u89c2\uff0c\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u89c4\u8303\uff1a</p> <p>\u4f7f\u7528 Seaborn \u7f8e\u5316\uff0c\u5b57\u4f53\u91c7\u7528\u6709\u886c\u7ebf\u5b57\u4f53\uff0c\u516c\u5f0f\u4f7f\u7528latex\u6e32\u67d3</p> Python<pre><code># \u5bfc\u5165\u5e93\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport matplotlib.font_manager as fm\n\n# \u89c9\u5f97\u54ea\u79cd\u597d\u770b\nsns.set_style('whitegrid')\n# sns.set_palette(\"Paired\") # \u53ef\u4ee5\u8bbe\u7f6e\u8c03\u8272\u677f\n\n# \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\uff08SimSun\uff09\nfont_path = 'C:/Windows/Fonts/simsun.ttc'   # \u8fd9\u4e2a\u5e94\u8be5\u662f\u81ea\u5df1\u7535\u8111\u7684\u5b57\u4f53\u8def\u5f84\uff0cwindows \u7535\u8111\u5e94\u8be5\u6ca1\u95ee\u9898\nchinese_font = fm.FontProperties(fname=font_path)\n\n# \u8bbe\u7f6e\u82f1\u6587\u5b57\u4f53\uff08Times New Roman\uff09\nrcParams.update({\n    \"font.family\": \"serif\",  # \u886c\u7ebf\u5b57\u4f53\n    \"font.serif\": [\"Times New Roman\"],  # \u82f1\u6587\u4e3b\u5b57\u4f53\n    \"mathtext.fontset\": \"custom\",  # \u81ea\u5b9a\u4e49\u6570\u5b66\u5b57\u4f53\n    \"mathtext.rm\": \"Times New Roman\",  # \u6570\u5b66\u516c\u5f0f\u7f57\u9a6c\u4f53\n    \"mathtext.it\": \"Times New Roman:italic\",  # \u6570\u5b66\u516c\u5f0f\u659c\u4f53\n    \"mathtext.bf\": \"Times New Roman:bold\",  # \u6570\u5b66\u516c\u5f0f\u7c97\u4f53\n    \"axes.unicode_minus\": False,  # \u4fee\u590d\u8d1f\u53f7\u663e\u793a\n})\n\n# \u4e0b\u9762\u7684 AI \u751f\u6210\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\n\nimport numpy as np\n\n# \u751f\u6210\u6570\u636e\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# \u521b\u5efa\u56fe\u8868\nplt.figure(figsize=(8, 4))\n\n# \u82f1\u6587\u6807\u9898\uff08Times New Roman\uff09\nplt.title(\"Example Plot with Mixed Fonts\", fontsize=14)\n\n# \u4e2d\u6587\u6587\u672c\uff08SimSun\uff09\nplt.xlabel(\"\u65f6\u95f4 (\u79d2)\", fontproperties=chinese_font, fontsize=12)\nplt.ylabel(\"\u632f\u5e45\", fontproperties=chinese_font, fontsize=12)\n\n# \u6570\u5b66\u516c\u5f0f\uff08Times New Roman \u98ce\u683c\uff09\nplt.plot(x, y, label=r\"$\\sin(x)$\")\nplt.legend()\n\n# \u6dfb\u52a0\u4e2d\u6587\u6ce8\u91ca\uff08SimSun\uff09\nplt.text(5, 0.5, \"\u8fd9\u662f\u4e2d\u6587\u6ce8\u91ca\", fontproperties=chinese_font)\n\nplt.grid(True)\n\n# \u4fdd\u5b58\u56fe\u7247\u4e3a PDF\nplt.savefig(\"filename.pdf\", dpi=300, bbox_inches=\"tight\")\nplt.show()  # \u4e5f\u53ef\u4ee5\u663e\u793a\u51fa\u6765\u770b\n</code></pre> <p>\u5927\u6982\u662f\u8fd9\u6837\uff1a(\u5176\u5b9e\u662fpdf\u6587\u4ef6)</p> <p></p> <p>Seaborn \u4e3b\u9898\u6709\u8fd9\u4e9b\uff1a\u6233\u8fd9\u91cc \u8c03\u8272\u677f\u6709\u8fd9\u4e9b \u6233\u8fd9\u91cc</p> <p>\u2192 \u8fd9\u4e9b\u56fe\u600e\u4e48\u753b\u554a\u5582</p>"},{"location":"notices/2025/07/08/%E9%80%9A%E7%9F%A5%E5%85%AC%E5%91%8A%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","title":"\u901a\u77e5\u516c\u544a\u4f7f\u7528\u6307\u5357","text":"<p>\u901a\u77e5\u516c\u544a\u9875\u9762\u4e66\u5199\u89c4\u8303</p> <ul> <li>\u6587\u6863\u653e\u5728 docs/notices/posts \u4e2d</li> <li>\u5f00\u5934\u5199\u5143\u6570\u636e YAML<pre><code>---\ntitle: \u901a\u77e5\u540d\u79f0\ndate: 2025-07-08T14:05:00 (\u65f6\u95f4\u6233\u4ee5\u6b64\u4e3a\u51c6)\nhide_reading_time: true   # \u7528\u4e8e\u4e0d\u663e\u793a\u9605\u8bfb\u65f6\u95f4\uff0c\u56e0\u4e3a\u63d2\u4ef6\u5df2\u7ecf\u652f\u6301\u4e86\nauthors:\n  - Noflower\ncategories:\n  - \u6761\u76ee1\n  - \u6761\u76ee2\n  - ...\nlinks:\n  - \u81ea\u5b66\u8bb0\u5f55/CSS/css_learning.md  # \u672c\u7ad9\u94fe\u63a5\n  - Nested section:\n    - External link: https://example.com # \u4e8c\u7ea7\u94fe\u63a5\u3001\u5916\u90e8\u94fe\u63a5\npin: true # \u7f6e\u9876\n---\n</code></pre></li> <li>\u901a\u77e5\u4e2d\u5fc3\u4f1a\u81ea\u52a8\u622a\u53d6\u6587\u7ae0\u7684\u524d\u4e00\u90e8\u5206\u52a0\u8f7d\u5728\u901a\u77e5\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>&lt;!-- more --&gt;</code> \u6765\u5728\u4e3b\u754c\u9762\u4e2d\u9690\u85cf\u540e\u7eed\u5185\u5bb9\uff0c\u6b64\u65f6\uff0c\u5728\u4e3b\u754c\u9762\u4f1a\u663e\u793a \"\u7ee7\u7eed\u9605\u8bfb\" \u5b57\u6837\uff0c\u70b9\u51fb\u540e\u8df3\u8f6c\u81f3\u539f\u6587\u3002</li> <li>\u5982\u679c\u8981\u5199 <code>authors</code> \u6761\u76ee\uff0c\u8bf7\u5728 docs/notices/.authors.yml \u4e2d\u5199\u5165\uff0c<code>name</code>, <code>discription</code>, <code>avatar</code> \u4e09\u4e2a\u5b57\u6bb5\u4e3a\u5fc5\u987b\uff0c\u5176\u4e2d <code>avatar</code> \u5b57\u6bb5\u5fc5\u987b\u5199url\u3002</li> </ul>"},{"location":"snippet/links/","title":"\u8df3\u8f6c\u4e0e\u4ecb\u7ecd","text":"<ul> <li>\u7ea2\u9ed1\u6811\u53ef\u89c6\u5316</li> <li>A* \u53ef\u89c6\u5316</li> </ul>"},{"location":"%E4%BB%8B%E7%BB%8D/Notebook%E4%BB%8B%E7%BB%8D/","title":"- \u0340\u0317 \u0dc6( \u02f6'\u1d55'\u02f6)\u0dc6 \u0341\u0316-  Hihi!","text":"<p>\u6b22\u8fce\u6765Abies\u548cNoflower\u7684\u7b14\u8bb0\u672c\u901b\u901b~</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/1_index/","title":"\u6249\u9875","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 51 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/1_index/#_1","title":"\u6249\u9875","text":"<ul> <li> <p>Frontispiece</p> <p>And, as imagination bodies forth  The forms of things to unknown, and the poet's pen Turns them to shapes, and gives to airy nothing   A local habitation and a name.                     \u2014\u2014\u2014 A Midsummer-Night's Dream</p> <p>\u5f53\u60f3\u8c61\u529b\u5448\u73b0\u51fa \u672a\u77e5\u4e4b\u7269\u7684\u5f62\u6001\u65f6\uff0c \u8bd7\u4eba\u7684\u7b14\u4fbf\u5c06\u5b83\u4eec\u5316\u4e3a\u5f62\u8c61\uff0c \u5e76\u8d4b\u4e88\u90a3\u865a\u65e0\u7f25\u7f08\u7684\u7a7a\u7075\u4ee5\u5c45\u6240\u4e0e\u540d\u5b57\u3002                      \u2014\u2014\u300a\u4ef2\u590f\u591c\u4e4b\u68a6\u300b</p> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/","title":"CSS","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 311 \u4e2a\u5b57\u00a0\u00a031 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_1","title":"\u8bed\u6cd5","text":"<p>CSS \u89c4\u5219\u7531\u4e24\u4e2a\u4e3b\u8981\u7684\u90e8\u5206\u6784\u6210\uff1a\u9009\u62e9\u5668\uff0c\u4ee5\u53ca\u4e00\u6761\u6216\u591a\u6761\u58f0\u660e\u3002 \u9009\u62e9\u5668\u901a\u5e38\u662f\u9700\u8981\u6539\u53d8\u6837\u5f0f\u7684 HTML \u5143\u7d20,\u6bcf\u6761\u58f0\u660e\u7531\u4e00\u4e2a\u5c5e\u6027\u548c\u4e00\u4e2a\u503c\u7ec4\u6210\u3002\u5c5e\u6027\uff08property\uff09\u662f\u5e0c\u671b\u8bbe\u7f6e\u7684\u6837\u5f0f\u5c5e\u6027\uff08style attribute\uff09\u3002\u6bcf\u4e2a\u5c5e\u6027\u6709\u4e00\u4e2a\u503c\u3002\u5c5e\u6027\u548c\u503c\u88ab\u5192\u53f7\u5206\u5f00\u3002 CSS \u58f0\u660e\u603b\u662f\u4ee5\u5206\u53f7 ; \u7ed3\u675f\uff0c\u58f0\u660e\u603b\u4ee5\u5927\u62ec\u53f7 {} \u62ec\u8d77\u6765\u3002 \u6837\u5f0f\uff1a<code>\u9009\u62e9\u5668 {\u5c5e\u6027:\u503c; \u5c5e\u6027:\u503c;}</code> \u793a\u4f8b\uff1a<code>h1 {color:blue; font-size:12px;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#id-class","title":"id \u548c class","text":"<p>\u8bbe\u7f6e CSS \u6837\u5f0f\u9700\u8981\u5728\u5143\u7d20\u4e2d\u8bbe\u7f6e\"id\" \u548c \"class\"\u9009\u62e9\u5668\u3002</p> <p>\u5728 HTML \u548c CSS \u4e2d\u53ef\u4ee5\u4f7f\u7528 id \u9009\u62e9\u5668\u6765\u7ed9\u7279\u5b9a\u7684 HTML \u5143\u7d20\u8bbe\u7f6e\u6837\u5f0f\u3002HTML \u91cc\u7528 <code>id=\"...\"</code> \u6765\u6807\u8bb0\u4e00\u4e2a\u5143\u7d20\uff1b\u800c\u5728 CSS \u91cc\uff0c\u7528 <code>#id</code> \u540d\u7684\u65b9\u5f0f\u6765\u7ed9\u8fd9\u4e2a\u5143\u7d20\u8bbe\u7f6e\u6837\u5f0f\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>#para1 {\n  text-align: center;\n  color: red;\n}\n</code></pre> <p>class \u9009\u62e9\u5668\u7528\u6765\u7ed9\u4e00\u7ec4 HTML \u5143\u7d20\u7edf\u4e00\u8bbe\u7f6e\u6837\u5f0f\u7684\u3002\u548c id \u4e0d\u540c\uff0c\u540c\u4e00\u4e2a class \u53ef\u4ee5\u7528\u5728\u591a\u4e2a\u5143\u7d20\u4e0a\u3002class \u9009\u62e9\u5668\u5728 HTML \u4e2d\u4ee5 class \u5c5e\u6027\u8868\u793a, \u5728 CSS \u4e2d\uff0c\u7c7b\u9009\u62e9\u5668\u4ee5\u4e00\u4e2a\u70b9 . \u53f7\u663e\u793a\u3002 \u793a\u4f8b\uff1a<code>.center{text-align:center;}</code></p> <p>\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684 HTML \u5143\u7d20\u4f7f\u7528 class\u3002 \u793a\u4f8b\uff08\u6240\u6709\u7684 p \u5143\u7d20\u4f7f\u7528 class=\"center\" \u8ba9\u8be5\u5143\u7d20\u7684\u6587\u672c\u5c45\u4e2d\uff09\uff1a<code>p.center{text-align:center;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_2","title":"\u521b\u5efa","text":"\u7c7b\u578b \u5199\u5728\u54ea\u91cc\uff1f \u793a\u4f8b \u884c\u5185\u6837\u5f0f\uff08Inline\uff09 \u5199\u5728 HTML \u6807\u7b7e\u5185\u90e8 <code>&lt;p style=\"color:red\"&gt;\u5185\u5bb9&lt;/p&gt;</code> \u5185\u90e8\u6837\u5f0f\u8868\uff08Internal\uff09 \u5199\u5728 HTML \u6587\u4ef6 <code>&lt;style&gt;</code> \u6807\u7b7e\u4e2d \u653e\u5728 <code>&lt;head&gt;</code> \u91cc \u5916\u90e8\u6837\u5f0f\u8868\uff08External\uff09 \u5199\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 <code>.css</code> \u6587\u4ef6\u91cc \u7528 <code>&lt;link&gt;</code> \u5f15\u5165"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_3","title":"\u5916\u90e8\u6837\u5f0f\u8868","text":"<p>\u5f53\u6837\u5f0f\u9700\u8981\u5e94\u7528\u4e8e\u5f88\u591a\u9875\u9762\u65f6\uff0c\u5916\u90e8\u6837\u5f0f\u8868\u5c06\u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u5728\u4f7f\u7528\u5916\u90e8\u6837\u5f0f\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u6765\u6539\u53d8\u6574\u4e2a\u7ad9\u70b9\u7684\u5916\u89c2\u3002\u6bcf\u4e2a\u9875\u9762\u4f7f\u7528  \u6807\u7b7e\u94fe\u63a5\u5230\u6837\u5f0f\u8868\u3002  \u6807\u7b7e\u5728\uff08\u6587\u6863\u7684\uff09\u5934\u90e8\u3002 \u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;head&gt;\n  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\" /&gt;\n&lt;/head&gt;\n</code></pre> <p>\u5176\u4e2d<code>rel</code>\u8868\u793a\u8fd9\u4e2a\u94fe\u63a5\u7684\u662f\u4e00\u4e2a\u201c\u6837\u5f0f\u8868\u201d\u6587\u4ef6\uff08stylesheet\uff09\uff0c<code>type</code>\u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u662f CSS \u7c7b\u578b\uff08\u53ef\u4ee5\u7701\u7565\uff0c\u4e0d\u5f3a\u5236\uff09\uff0c<code>herf</code>\u6307\u5b9a\u8981\u52a0\u8f7d\u7684 CSS \u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982 mystyle.css \u662f\u540c\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 \u6837\u5f0f\u8868\u6587\u4ef6\u7684\u793a\u4f8b\uff1a</p> CSS<pre><code>hr {color:sienna;}\np {margin-left:20px;}\nbody {background-image:url;}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_4","title":"\u5185\u90e8\u6837\u5f0f\u8868","text":"<p>\u5f53\u5355\u4e2a\u6587\u6863\u9700\u8981\u7279\u6b8a\u7684\u6837\u5f0f\u65f6\uff0c\u5c31\u5e94\u8be5\u4f7f\u7528\u5185\u90e8\u6837\u5f0f\u8868\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>&lt;style&gt;</code> \u6807\u7b7e\u5728\u6587\u6863\u5934\u90e8\u5b9a\u4e49\u5185\u90e8\u6837\u5f0f\u8868\u3002 \u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;head&gt;\n  &lt;style&gt;\n    hr {\n      color: sienna;\n    }\n    p {\n      margin-left: 20px;\n    }\n    body {\n      background-image: url;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_5","title":"\u5185\u8054\u6837\u5f0f","text":"<p>\u5728\u76f8\u5173\u7684\u6807\u7b7e\u5185\u4f7f\u7528\u6837\u5f0f\uff08style\uff09\u5c5e\u6027\u3002Style \u5c5e\u6027\u53ef\u4ee5\u5305\u542b\u4efb\u4f55 CSS \u5c5e\u6027\u3002 \u793a\u4f8b\uff1a<code>&lt;p style=\"color:sienna;margin-left:20px\"&gt;\u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d\u3002&lt;/p&gt;</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_6","title":"\u591a\u91cd\u6837\u5f0f","text":"<p>\u4f18\u5148\u7ea7\uff1a\u5185\u8054\u6837\u5f0f &gt; \u5185\u90e8\u6837\u5f0f &gt; \u5916\u90e8\u6837\u5f0f\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_7","title":"\u80cc\u666f","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_8","title":"\u80cc\u666f\u989c\u8272","text":"<p>background-color \u5c5e\u6027\u5b9a\u4e49\u4e86\u5143\u7d20\u7684\u80cc\u666f\u989c\u8272\u3002\u9875\u9762\u7684\u80cc\u666f\u989c\u8272\u4f7f\u7528\u5728 body \u7684\u9009\u62e9\u5668\u4e2d\u3002 \u793a\u4f8b\uff1a<code>body {background-color:#b0c4de;}</code></p> <p>\u989c\u8272\u503c\u5b9a\u4e49\uff1a</p> <ul> <li>\u5341\u516d\u8fdb\u5236\uff0c\u5982<code>#ff0000</code></li> <li>rgb\uff0c\u5982<code>rgb(255,0,0)</code></li> <li>\u989c\u8272\u540d\u79f0\uff0c\u5982<code>\"red\"</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_9","title":"\u80cc\u666f\u56fe\u50cf","text":"<p>background-image \u5c5e\u6027\u63cf\u8ff0\u4e86\u5143\u7d20\u7684\u80cc\u666f\u56fe\u50cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u80cc\u666f\u56fe\u50cf\u8fdb\u884c\u5e73\u94fa\u91cd\u590d\u663e\u793a\uff0c\u4ee5\u8986\u76d6\u6574\u4e2a\u5143\u7d20\u5b9e\u4f53\u3002 \u793a\u4f8b\uff1a<code>body {background-image:url('paper.gif');}</code></p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b background-image \u5c5e\u6027\u4f1a\u5728\u9875\u9762\u7684\u6c34\u5e73\u6216\u8005\u5782\u76f4\u65b9\u5411\u5e73\u94fa\u3002 background-repeat \u53ef\u4ee5\u8bbe\u7f6e\u5e73\u94fa\u7684\u65b9\u5411\uff08\u53c2\u6570\u4e3a repeat-x\uff0crepeat-y \u548c no-repeat\uff09\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>body {\n  background-image: url;\n  background-repeat: repeat-x;\n}\n</code></pre> <p>background-position \u5c5e\u6027\u53ef\u4ee5\u6539\u53d8\u56fe\u50cf\u5728\u80cc\u666f\u4e2d\u7684\u4f4d\u7f6e\u3002\u53c2\u6570\uff1aleft center right\uff1btop bottom\uff1b\u548c\u4e24\u8005\u7684\u7ec4\u5408\u3002 \u793a\u4f8b\uff1a<code>...background-position:right top;...</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_10","title":"\u80cc\u666f\u5c5e\u6027\u7b80\u5199","text":"<p>\u4e3a\u4e86\u7b80\u5316\u8fd9\u4e9b\u5c5e\u6027\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5c5e\u6027\u5408\u5e76\u5728\u540c\u4e00\u4e2a\u5c5e\u6027\u4e2d\u3002\u80cc\u666f\u989c\u8272\u7684\u7b80\u5199\u5c5e\u6027\u4e3a \"background\"\u3002 \u5c5e\u6027\u503c\u987a\u5e8f\uff1a</p> <ol> <li>background-color</li> <li>background-image</li> <li>background-repeat</li> <li>background-attachment</li> <li>background-position</li> </ol> <p>\u793a\u4f8b\uff1a<code>body {background:#ffffff url('img_tree.png') no-repeat right top;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_11","title":"\u6587\u672c","text":"\u5c5e\u6027 \u4f5c\u7528 \u5e38\u7528\u53d6\u503c/\u53c2\u6570 <code>color</code> \u8bbe\u7f6e\u6587\u672c\u989c\u8272 \u989c\u8272\u540d\uff08<code>red</code>\uff09\u3001\u5341\u516d\u8fdb\u5236\uff08<code>#ff0000</code>\uff09\u3001RGB\uff08<code>rgb(255,0,0)</code>\uff09\u7b49 <code>direction</code> \u8bbe\u7f6e\u6587\u672c\u65b9\u5411\uff08\u4ece\u5de6\u5230\u53f3\u6216\u4ece\u53f3\u5230\u5de6\uff09 <code>ltr</code>\uff08\u4ece\u5de6\u5230\u53f3\uff09\u3001<code>rtl</code>\uff08\u4ece\u53f3\u5230\u5de6\uff09 <code>letter-spacing</code> \u8bbe\u7f6e\u5b57\u7b26\u4e4b\u95f4\u7684\u95f4\u8ddd \u6b63\u6570\u589e\u52a0\u95f4\u8ddd\uff1a<code>2px</code>\uff0c\u8d1f\u6570\u51cf\u5c11\u95f4\u8ddd\uff1a<code>-1px</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 <code>line-height</code> \u8bbe\u7f6e\u6587\u672c\u7684\u884c\u9ad8 \u6bd4\u4f8b\u503c\uff1a<code>1.5</code>\uff0c\u957f\u5ea6\uff1a<code>20px</code>\uff0c\u767e\u5206\u6bd4\uff1a<code>150%</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 <code>text-align</code> \u8bbe\u7f6e\u6587\u672c\u7684\u6c34\u5e73\u5bf9\u9f50 <code>left</code>\u3001<code>right</code>\u3001<code>center</code>\u3001<code>justify</code>\uff08\u4e24\u7aef\u5bf9\u9f50\uff09 <code>text-decoration</code> \u6dfb\u52a0\u6587\u672c\u4fee\u9970\u7ebf\uff08\u5982\u4e0b\u5212\u7ebf\u3001\u5220\u9664\u7ebf\uff09 <code>none</code>\u3001<code>underline</code>\uff08\u4e0b\u5212\u7ebf\uff09\u3001<code>line-through</code>\uff08\u5220\u9664\u7ebf\uff09\u3001<code>overline</code>\uff08\u4e0a\u5212\u7ebf\uff09 <code>text-indent</code> \u8bbe\u7f6e\u9996\u884c\u7f29\u8fdb \u50cf\u7d20\uff08<code>20px</code>\uff09\u3001\u767e\u5206\u6bd4\uff08<code>5%</code>\uff09 <code>text-shadow</code> \u8bbe\u7f6e\u6587\u672c\u9634\u5f71 \u4f8b\uff1a<code>2px 2px 5px gray</code>\uff08\u53f3\u4e0b\u65b9\u5411\uff0c\u6a21\u7cca 5px\uff0c\u7070\u8272\uff09 <code>text-transform</code> \u63a7\u5236\u5b57\u6bcd\u5927\u5c0f\u5199 <code>none</code>\uff08\u65e0\u53d8\u5316\uff09\u3001<code>capitalize</code>\uff08\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\uff09\u3001<code>uppercase</code>\uff08\u5168\u5927\u5199\uff09\u3001<code>lowercase</code>\uff08\u5168\u5c0f\u5199\uff09 <code>unicode-bidi</code> \u63a7\u5236\u53cc\u5411\u6587\u672c\uff08\u4e0e <code>direction</code> \u914d\u5408\u4f7f\u7528\uff09 <code>normal</code>\u3001<code>embed</code>\u3001<code>bidi-override</code> <code>vertical-align</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u5782\u76f4\u5bf9\u9f50 <code>baseline</code>\u3001<code>middle</code>\u3001<code>top</code>\u3001<code>bottom</code>\u3001<code>sub</code>\u3001<code>super</code>\u3001<code>px</code> \u503c\u7b49 <code>white-space</code> \u8bbe\u7f6e\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u6362\u884c\uff09\u7684\u5904\u7406\u65b9\u5f0f <code>normal</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>nowrap</code>\u3001<code>pre</code>\u3001<code>pre-wrap</code>\u3001<code>pre-line</code> <code>word-spacing</code> \u8bbe\u7f6e\u5355\u8bcd\u4e4b\u95f4\u7684\u95f4\u8ddd \u50cf\u7d20\uff1a<code>10px</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 CSS<pre><code>p {\n  color: #333;\n  text-align: justify;\n  line-height: 1.6;\n  text-indent: 2em;\n  letter-spacing: 1px;\n  word-spacing: 3px;\n  text-shadow: 1px 1px 2px gray;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_12","title":"\u5b57\u4f53","text":"\u5c5e\u6027 \u4f5c\u7528\u8bf4\u660e \u5e38\u7528\u53d6\u503c\u793a\u4f8b / \u8bf4\u660e <code>font-family</code> \u8bbe\u7f6e\u5b57\u4f53\u7cfb\u5217 <code>\"Times New Roman\"</code>\u3001<code>Arial</code>\u3001<code>\"\u5b8b\u4f53\"</code>\uff0c\u591a\u4e2a\u7528\u9017\u53f7\u5206\u9694\uff0c\u6700\u540e\u5e38\u52a0 <code>serif</code>\uff08\u886c\u7ebf\u5b57\u4f53\uff09\u3001<code>sans-serif</code>\uff08\u65e0\u886c\u7ebf\uff09\u3001<code>monospace</code>\uff08\u7b49\u5bbd\uff09\u4f5c\u4e3a\u56de\u9000\u5b57\u4f53 <code>font-style</code> \u63a7\u5236\u5b57\u4f53\u662f\u5426\u4e3a\u659c\u4f53 <code>normal</code>\uff08\u6b63\u5e38\uff09\u3001<code>italic</code>\uff08\u659c\u4f53\uff09\u3001<code>oblique</code>\uff08\u503e\u659c\uff0c\u517c\u5bb9\u6027\u8f83\u5dee\uff09 <code>font-size</code> \u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f <code>15px</code>\u3001<code>1.2em</code>\u3001<code>120%</code>\u3001<code>1rem</code> \u7b49\uff1b\u767e\u5206\u6bd4\u6216 <code>em</code> \u901a\u5e38\u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u5b57\u4f53\u5927\u5c0f <code>font-weight</code> \u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 <code>normal</code>\u3001<code>bold</code>\u3001<code>lighter</code>\u3001<code>bolder</code>\uff0c\u6216\u5177\u4f53\u6570\u5b57\u5982 <code>400</code>\u3001<code>700</code> <code>font-variant</code> \u63a7\u5236\u5c0f\u578b\u5927\u5199\u5b57\u6bcd\uff08small-caps\uff09\u663e\u793a <code>normal</code>\u3001<code>small-caps</code> <code>line-height</code> \u8bbe\u7f6e\u884c\u9ad8 <code>normal</code>\u3001\u5177\u4f53\u6570\u503c\uff1a<code>1.5</code>\u3001<code>20px</code>\u3001<code>150%</code> <code>font</code>\uff08\u7b80\u5199\uff09 \u7b80\u5199\u6240\u6709\u5b57\u4f53\u5c5e\u6027\uff08\u987a\u5e8f\uff1astyle \u2192 variant \u2192 weight \u2192 size/line-height \u2192 family\uff09 \u4f8b\u5982\uff1a<code>font: italic small-caps bold 16px/1.5 Arial, sans-serif;</code>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_13","title":"\u94fe\u63a5","text":"<p>\u94fe\u63a5\u72b6\u6001\uff1a</p> <ul> <li>a:link\uff1a\u6b63\u5e38\uff0c\u672a\u8bbf\u95ee\u8fc7\u7684\u94fe\u63a5</li> <li>a:visited\uff1a\u7528\u6237\u5df2\u8bbf\u95ee\u8fc7\u7684\u94fe\u63a5</li> <li>a:hover\uff1a\u5f53\u7528\u6237\u9f20\u6807\u653e\u5728\u94fe\u63a5\u4e0a\u65f6</li> <li>a:active\uff1a\u94fe\u63a5\u88ab\u70b9\u51fb\u7684\u90a3\u4e00\u523b</li> </ul> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>a:link {\n  color: #000000;\n}\na:visited {\n  color: #00ff00;\n}\na:hover {\n  color: #ff00ff;\n}\na:active {\n  color: #0000ff;\n}\n</code></pre> <p>\u987a\u5e8f\u89c4\u5219\uff1a</p> <ul> <li>a:hover \u5fc5\u987b\u8ddf\u5728 a:link \u548c a:visited \u540e</li> <li>a:active \u5fc5\u987b\u8ddf\u5728 a:hover \u540e</li> </ul> <p><code>background-color</code>\u6307\u5b9a\u94fe\u63a5\u7684\u80cc\u666f\u8272 \u793a\u4f8b\uff1a<code>a:link {background-color:#B2FF99;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_14","title":"\u5217\u8868","text":"<p>html \u4e2d\u7684\u5217\u8868\uff1a</p> <ol> <li>\u65e0\u5e8f\u5217\u8868<code>ul</code></li> <li>\u6709\u5e8f\u5217\u8868<code>ol</code></li> </ol> <p><code>list-style-type</code>\u5c5e\u6027\u6307\u5b9a\u5217\u8868\u9879\u6807\u8bb0\u7684\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>ul.a {\n  list-style-type: circle;\n}\nol.d {\n  list-style-type: lower-alpha;\n}\n</code></pre> <p>\u5177\u4f53\u53c2\u6570\uff1a</p> <ul> <li>\u65e0\u5e8f\u5217\u8868\u7684 list-style-type\uff1adics\uff08\u5b9e\u5fc3\u5706\uff09\uff0ccircle\uff08\u7a7a\u5fc3\u5706\uff09\uff0csquare\uff08\u5b9e\u5fc3\u65b9\u5757\uff09\uff0cnone\uff08\u65e0\u6807\u8bb0\uff09\u3002</li> <li>\u6709\u5e8f\u5217\u8868\u7684 list-style-type\uff1adecimal\uff081\uff0c2\u2026\u2026\uff09\uff0cdemical-leading-zero\uff0801\uff0c02\u2026\u2026\uff09\uff0clower-alpha\uff0cupper-alpha\uff0clower-roman\uff0cupper-roman\uff0cnone\u3002</li> <li>\u56fe\u50cf\uff1a\u76f4\u63a5\u7528 url\u3002</li> <li>margin\uff1a\u8bbe\u7f6e\u5185\u8fb9\u8ddd</li> <li>padding\uff1a\u8bbe\u7f6e\u5916\u8fb9\u8ddd</li> </ul> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>ul {\n  list-style-type: none;\n  padding: 0px;\n  margin: 0px;\n}\nul li {\n  background-image: url(sqpurple.gif);\n  background-repeat: no-repeat;\n  background-position: 0px 5px;\n  padding-left: 14px;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_15","title":"\u8868\u683c","text":"<ul> <li>table\uff1a\u8868\u683c\u7684\u5916\u5c42\u5bb9\u5668</li> <li>tr\uff1aTable Row \u8868\u683c\u884c</li> <li>th\uff1aTable Header \u8868\u683c\u5355\u5143\u5934</li> <li>td\uff1aTable Data \u6570\u636e\u5355\u5143\u683c</li> </ul> <p><code>border</code>\u8bbe\u7f6e\u8fb9\u6846\u3002 \u793a\u4f8b\uff1a<code>table, th, td {border:1px solid black;}</code></p> <p><code>border-collapse</code>\u8bbe\u7f6e\u8fb9\u6846\u662f\u5426\u88ab\u6298\u53e0\u6210\u4e00\u6761\u7ebf\u3002 \u793a\u4f8b\uff1a<code>table {border-collapse:collapse;}</code></p> <p><code>width</code>\u548c<code>height</code>\u8bbe\u7f6e\u8868\u683c\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u793a\u4f8b\uff08\u8868\u683c\u5bbd\u5ea6 100%\uff0c\u8868\u5934\u9ad8\u5ea6 50 \u50cf\u7d20\uff09\uff1a</p> CSS<pre><code>table {\n  width: 100%;\n}\nth {\n  height: 50px;\n}\n</code></pre> <p><code>text-align</code>\u8bbe\u7f6e\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\uff08left\uff0cright\uff0ccenter\uff0cjustfy\uff09\uff0c<code>vertical-align</code>\u8bbe\u7f6e\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\uff08top\uff0cmiddle\uff0cbottom\u2026\u2026\uff09\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>td {\n  text-align: left;\n  vertical-align: bottom;\n}\n</code></pre> <p>\u8bbe\u7f6e\u989c\u8272\uff1a \u8fb9\u6846\u989c\u8272\u5728 border \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u8bbe\u7f6e\uff0c\u6587\u672c\u6587\u5b57\u5728 color \u8bbe\u7f6e\uff0c\u80cc\u666f\u989c\u8272\u5728 background-color \u8bbe\u7f6e\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_16","title":"\u76d2\u5b50\u6a21\u578b","text":"<p>\u4ece\u5916\u5230\u5185\uff1amargin -&gt; border -&gt; padding -&gt; content \u603b\u5143\u7d20\u7684\u5bbd\u5ea6=\u5bbd\u5ea6+\u5de6\u586b\u5145+\u53f3\u586b\u5145+\u5de6\u8fb9\u6846+\u53f3\u8fb9\u6846+\u5de6\u8fb9\u8ddd+\u53f3\u8fb9\u8ddd \u603b\u5143\u7d20\u7684\u9ad8\u5ea6=\u9ad8\u5ea6+\u9876\u90e8\u586b\u5145+\u5e95\u90e8\u586b\u5145+\u4e0a\u8fb9\u6846+\u4e0b\u8fb9\u6846+\u4e0a\u8fb9\u8ddd+\u4e0b\u8fb9\u8ddd</p> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>div {\n  width: 220px;\n  padding: 10px;\n  border: 5px solid gray;\n  margin: 0;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_17","title":"\u8fb9\u6846","text":"<p><code>border-style</code>\u7528\u4e8e\u6307\u5b9a\u8981\u663e\u793a\u7684\u8fb9\u6846\u7c7b\u578b\u3002</p> \u53d6\u503c \u542b\u4e49 \u8bf4\u660e <code>none</code> \u65e0\u8fb9\u6846 \u9ed8\u8ba4\uff0c\u65e0\u8fb9\u6846\u663e\u793a <code>hidden</code> \u9690\u85cf\u8fb9\u6846 \u4e0e <code>none</code> \u7c7b\u4f3c\uff0c\u4e3b\u8981\u7528\u4e8e\u51b2\u7a81\u5904\u7406 <code>dotted</code> \u70b9\u72b6\u8fb9\u6846 \u7531\u70b9\u7ec4\u6210\u7684\u8fb9\u6846 <code>dashed</code> \u865a\u7ebf\u8fb9\u6846 \u7531\u77ed\u7ebf\u6bb5\u7ec4\u6210\u7684\u8fb9\u6846 <code>solid</code> \u5b9e\u7ebf\u8fb9\u6846 \u8fde\u7eed\u7684\u5b9e\u7ebf <code>double</code> \u53cc\u7ebf\u8fb9\u6846 \u4e24\u6761\u5b9e\u7ebf\uff0c\u5bbd\u5ea6\u4e0e <code>border-width</code> \u76f8\u540c <code>groove</code> 3D \u6c9f\u69fd\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u6c9f\u69fd\u6548\u679c <code>ridge</code> 3D \u810a\u72b6\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u810a\u72b6\u6548\u679c <code>inset</code> 3D \u5d4c\u5165\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u5d4c\u5165\u6548\u679c <code>outset</code> 3D \u7a81\u51fa\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u7a81\u51fa\u6548\u679c <p><code>border-width</code>\u8bbe\u7f6e\u8fb9\u6846\u5bbd\u5ea6\u3002 \u53c2\u6570\uff1athick\uff0cmedium\uff0cthin\uff0c\u6216\u7528 px \u8bbe\u7f6e\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p.one {\n  border-style: solid;\n  border-width: 5px;\n}\n</code></pre> <p><code>border-color</code>\u8bbe\u7f6e\u8fb9\u6846\u989c\u8272\u3002 border-color \u5355\u72ec\u4f7f\u7528\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u5fc5\u987b\u5f97\u5148\u4f7f\u7528 border-style \u6765\u8bbe\u7f6e\u8fb9\u6846\u6837\u5f0f\u3002 \u989c\u8272\u53ef\u8bbe\u7f6e\u4e3a transparent\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p.one {\n  border-style: solid;\n  border-color: red;\n}\n</code></pre> <p>border-top-style\uff0cborder-right-style\uff0cborder-bottom-style\uff0cborder-left-style \u53ef\u4ee5\u7ed9\u4e0d\u540c\u4fa7\u9762\u8bbe\u7f6e\u4e0d\u540c\u8fb9\u6846\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p {\n  border-top-style: dotted;\n  border-right-style: solid;\n  border-bottom-style: dotted;\n  border-left-style: solid;\n}\n</code></pre> <p>\u4e0a\u9762\u56db\u4e2a\u53ef\u4ee5\u5408\u5e76\u6210 border-style \u4e00\u4e2a\u5c5e\u6027\u3002</p> <ul> <li>4 \u4e2a\u53c2\u6570\uff1a\u4e0a\uff0c\u53f3\uff0c\u4e0b\uff0c\u5de6</li> <li>3 \u4e2a\u53c2\u6570\uff1a\u4e0a\uff0c\u5de6\u53f3\uff0c\u4e0b</li> <li>2 \u4e2a\u53c2\u6570\uff1a\u4e0a\u4e0b\uff0c\u5de6\u53f3</li> <li>1 \u4e2a\u53c2\u6570\uff1a\u56db\u5468</li> </ul> <p><code>border</code>\u662f border-width\uff0cborder-style\uff0cborder-color \u7684\u7b80\u5199</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_18","title":"\u8f6e\u5ed3","text":"\u5c5e\u6027\u540d \u8bf4\u660e \u5e38\u7528\u503c\uff08\u793a\u4f8b\uff09 CSS \u7248\u672c <code>outline</code> \u5728\u4e00\u6761\u58f0\u660e\u4e2d\u8bbe\u7f6e\u6240\u6709\u8f6e\u5ed3\u5c5e\u6027 \u7ec4\u5408 <code>outline-color</code>\u3001<code>outline-style</code>\u3001<code>outline-width</code> \u7b49 CSS2 <code>outline-color</code> \u8bbe\u7f6e\u8f6e\u5ed3\u989c\u8272 \u989c\u8272\u540d\u79f0\uff08<code>red</code>\uff09\u3001\u5341\u516d\u8fdb\u5236\uff08<code>#ff0000</code>\uff09\u3001RGB\uff08<code>rgb(255,0,0)</code>\uff09\u3001<code>invert</code>\u3001<code>inherit</code> CSS2 <code>outline-style</code> \u8bbe\u7f6e\u8f6e\u5ed3\u6837\u5f0f <code>none</code>\u3001<code>dotted</code>\u3001<code>dashed</code>\u3001<code>solid</code>\u3001<code>double</code>\u3001<code>groove</code>\u3001<code>ridge</code>\u3001<code>inset</code>\u3001<code>outset</code>\u3001<code>inherit</code> CSS2 <code>outline-width</code> \u8bbe\u7f6e\u8f6e\u5ed3\u5bbd\u5ea6 \u5173\u952e\u8bcd\uff1a<code>thin</code>\u3001<code>medium</code>\u3001<code>thick</code>\uff1b\u957f\u5ea6\u5355\u4f4d\uff08\u5982 <code>2px</code>\uff09\uff1b<code>inherit</code> CSS2"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_19","title":"\u5916\u8fb9\u8ddd","text":"\u5c5e\u6027 \u8bf4\u660e \u53d6\u503c/\u793a\u4f8b <code>margin</code> \u7b80\u5199\u5c5e\u6027\uff0c\u4e00\u6b21\u6027\u8bbe\u7f6e\u56db\u4e2a\u65b9\u5411\u7684\u5916\u8fb9\u8ddd <code>margin: 25px 50px 75px 100px;</code> \uff08\u4e0a \u53f3 \u4e0b \u5de6\uff09 <code>margin-top</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0a\u5916\u8fb9\u8ddd <code>100px</code>, <code>2em</code>, <code>10%</code>, <code>auto</code> <code>margin-right</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u53f3\u5916\u8fb9\u8ddd \u540c\u4e0a <code>margin-bottom</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0b\u5916\u8fb9\u8ddd \u540c\u4e0a <code>margin-left</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u5de6\u5916\u8fb9\u8ddd \u540c\u4e0a \u53d6\u503c \u8bf4\u660e <code>auto</code> \u7531\u6d4f\u89c8\u5668\u51b3\u5b9a\u8fb9\u8ddd\u5927\u5c0f\uff0c\u5e38\u7528\u4e8e\u6c34\u5e73\u5c45\u4e2d <code>&lt;length&gt;</code> \u56fa\u5b9a\u957f\u5ea6\uff0c\u5982\u50cf\u7d20\uff08px\uff09\u3001\u70b9\uff08pt\uff09\u3001em\u3001cm \u7b49 <code>%</code> \u767e\u5206\u6bd4\u503c\uff0c\u76f8\u5bf9\u4e8e\u5305\u542b\u5757\u5bbd\u5ea6 \u8d1f\u503c\uff08\u5982 <code>-10px</code>\uff09 \u5141\u8bb8\u4f7f\u7528\u8d1f\u503c\uff0c\u5b9e\u73b0\u5185\u5bb9\u91cd\u53e0 <p>\u7b80\u5199\u5c5e\u6027 <code>margin</code> \u7684\u7528\u6cd5\u793a\u4f8b\uff1a</p> \u5199\u6cd5 \u542b\u4e49\u63cf\u8ff0 <code>margin: 25px;</code> \u4e0a\u3001\u53f3\u3001\u4e0b\u3001\u5de6\u8fb9\u8ddd\u5747\u4e3a 25px <code>margin: 25px 50px;</code> \u4e0a\u4e0b 25px\uff0c\u5de6\u53f3 50px <code>margin: 25px 50px 75px;</code> \u4e0a 25px\uff0c\u5de6\u53f3 50px\uff0c\u4e0b 75px <code>margin: 25px 50px 75px 100px;</code> \u4e0a 25px\uff0c\u53f3 50px\uff0c\u4e0b 75px\uff0c\u5de6 100px"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_20","title":"\u586b\u5145","text":"\u5c5e\u6027\u540d \u8bf4\u660e \u793a\u4f8b <code>padding</code> \u7b80\u5199\u5c5e\u6027\uff0c\u8bbe\u7f6e\u56db\u4e2a\u65b9\u5411\u7684\u5185\u8fb9\u8ddd <code>padding: 10px 20px 30px 40px</code> <code>padding-top</code> \u8bbe\u7f6e\u5143\u7d20\u9876\u90e8\u7684\u5185\u8fb9\u8ddd <code>padding-top: 10px</code> <code>padding-right</code> \u8bbe\u7f6e\u5143\u7d20\u53f3\u4fa7\u7684\u5185\u8fb9\u8ddd <code>padding-right: 20px</code> <code>padding-bottom</code> \u8bbe\u7f6e\u5143\u7d20\u5e95\u90e8\u7684\u5185\u8fb9\u8ddd <code>padding-bottom: 30px</code> <code>padding-left</code> \u8bbe\u7f6e\u5143\u7d20\u5de6\u4fa7\u7684\u5185\u8fb9\u8ddd <code>padding-left: 40px</code> \u5199\u6cd5\u793a\u4f8b \u542b\u4e49\u8bf4\u660e <code>padding: 25px</code> \u56db\u4e2a\u65b9\u5411\u5168\u90e8\u4e3a 25px <code>padding: 25px 50px</code> \u4e0a\u4e0b\u4e3a 25px\uff0c\u5de6\u53f3\u4e3a 50px <code>padding: 25px 50px 75px</code> \u4e0a\u4e3a 25px\uff0c\u5de6\u53f3\u4e3a 50px\uff0c\u4e0b\u4e3a 75px <code>padding: 25px 50px 75px 100px</code> \u4e0a\u4e3a 25px\uff0c\u53f3\u4e3a 50px\uff0c\u4e0b\u4e3a 75px\uff0c\u5de6\u4e3a 100px <p><code>padding</code> \u652f\u6301\u7684\u5355\u4f4d\uff1a</p> \u5355\u4f4d \u793a\u4f8b \u8bf4\u660e <code>px</code> <code>padding: 20px</code> \u50cf\u7d20 <code>em</code> <code>padding: 2em</code> \u76f8\u5bf9\u4e8e\u5f53\u524d\u5b57\u4f53\u5927\u5c0f <code>%</code> <code>padding: 10%</code> \u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u7684\u5bbd\u5ea6 <code>rem</code> <code>padding: 1rem</code> \u76f8\u5bf9\u4e8e\u6839\u5143\u7d20\u7684\u5b57\u4f53\u5927\u5c0f <code>pt</code> <code>padding: 10pt</code> \u70b9\uff08\u5728\u7f51\u9875\u4e2d\u8f83\u5c11\u7528\uff09 <p><code>padding</code> \u7279\u6027\uff1a</p> <ul> <li><code>padding</code> \u4e0d\u5f71\u54cd\u5185\u5bb9\u5927\u5c0f\uff0c\u4f46\u4f1a\u589e\u5927\u5143\u7d20\u603b\u5c3a\u5bf8\uff08\u9664\u975e\u4f7f\u7528 <code>box-sizing: border-box</code>\uff09\u3002</li> <li><code>padding</code> \u586b\u5145\u7684\u533a\u57df\u4f1a\u88ab\u80cc\u666f\u989c\u8272\u8986\u76d6\u3002</li> <li><code>padding</code> \u662f\u5185\u8fb9\u8ddd\uff0c\u4e0d\u540c\u4e8e <code>margin</code>\uff08\u5916\u8fb9\u8ddd\uff09\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_21","title":"\u5206\u7ec4\u548c\u5d4c\u5957\u9009\u62e9\u5668","text":"<p>\u5206\u7ec4\u9009\u62e9\u5668\uff1a\u5c06\u591a\u4e2a\u9009\u62e9\u5668\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002 \u793a\u4f8b\uff1a CSS<pre><code>h1, h2, p {\n  color:green;\n}\n</code></pre></p> <p>\u5d4c\u5957\u9009\u62e9\u5668\uff1a\u9002\u7528\u4e8e\u9009\u62e9\u5668\u5185\u90e8\u7684\u9009\u62e9\u5668\u7684\u6837\u5f0f\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u8bbe\u7f6e\u4e86\u56db\u4e2a\u6837\u5f0f\uff1a - <code>p{ }</code>: \u4e3a\u6240\u6709 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>.marked{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u7684\u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>.marked p{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u5143\u7d20\u5185\u7684 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>p.marked{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u7684 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/","title":"Git","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 873 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#myproject","title":"\u7b80\u5316\u7248\u672c\uff1a\u4e0a\u4f20 MyProject \u9879\u76ee","text":"<ol> <li>\u5728\u672c\u5730\u521b\u5efa\u9879\u76ee\u5e76\u521d\u59cb\u5316 Git \u4ed3\u5e93</li> </ol> Bash<pre><code>mkdir MyProject          # \u521b\u5efa\u9879\u76ee\u6587\u4ef6\u5939\ncd MyProject             # \u8fdb\u5165\u76ee\u5f55\ngit init                 # \u521d\u59cb\u5316 Git \u4ed3\u5e93\n</code></pre> <ol> <li>\u521b\u5efa\u6587\u4ef6\u5e76\u63d0\u4ea4</li> </ol> Bash<pre><code>git add .                # \u6dfb\u52a0\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit commit -m \"&lt;comment&gt;\"\n</code></pre> <ol> <li>\u5728 GitHub \u4e0a\u65b0\u5efa\u4e00\u4e2a\u7a7a\u4ed3\u5e93</li> <li>\u5c06\u672c\u5730\u4ed3\u5e93\u8fde\u63a5\u5230 GitHub \u4ed3\u5e93</li> </ol> Bash<pre><code>git remote add origin &lt;URL&gt;\n</code></pre> <ol> <li>\u63a8\u9001\u672c\u5730\u5185\u5bb9\u5230 GitHub</li> </ol> Bash<pre><code>git branch -M main             # \u786e\u4fdd\u5206\u652f\u53eb main\uff08GitHub \u9ed8\u8ba4\u4e3b\u5206\u652f\uff09\ngit push -u origin main        # \u63a8\u9001\u5230 GitHub \u5e76\u7ed1\u5b9a\u8fdc\u7a0b\u4e3b\u5206\u652f\n</code></pre> \u6ce8\u610f <p>\u5982\u679c\u672c\u5730\u548c\u8fdc\u7a0b\u540c\u65f6\u5bf9\u67d0\u4e2a\u6587\u4ef6\u66f4\u6539\uff0c\u53ef\u80fd\u56e0\u4e3a error: Your local changes to the following files would be overwritten by merge \u5bfc\u81f4\u65e0\u6cd5\u62c9\u53d6\u3002  </p> <p>\u53ef\u4ee5\u6309\u4ee5\u4e0b\u65b9\u6cd5\u6267\u884c\uff1a</p> <ol> <li><code>git stash</code> \u4fdd\u5b58\u672c\u5730\u6539\u52a8</li> <li><code>git pull origin main</code> \u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801</li> <li><code>git stash pop</code> \u6062\u590d\u672c\u5730\u4fee\u6539\uff0c\u53ef\u80fd\u9700\u8981\u624b\u52a8\u9009\u62e9\u4fdd\u7559\u54ea\u90e8\u5206\u4fee\u6539</li> </ol>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_1","title":"\u63d0\u4ea4","text":"<ul> <li><code>git commit</code> \u521b\u5efa\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_2","title":"\u5206\u652f","text":"<ul> <li><code>git branch &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f</li> <li><code>git branch A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A</li> <li><code>git checkout &lt;BranchName&gt;</code> \u5207\u6362\u5206\u652f</li> <li><code>git checkout -b &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f</li> <li> <p><code>git checkout -b A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A\uff0c\u5e76\u5207\u6362\u5230\u5206\u652f A</p> </li> <li> <p><code>git merge &lt;BranchName&gt;</code> \u5c06 BranchName \u5408\u5e76\u5230 main\uff08\u5f53\u524d checkout \u7684\u5206\u652f\uff09\uff0c\u6b64\u65f6 main \u6709\u591a\u4e2a parent\uff0c\u5305\u542b\u4e86\u4e24\u4e2a\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55</p> </li> <li><code>git checkout A; git merge main</code> \u5c06 main \u5408\u5e76\u5230 A</li> <li><code>git rebase &lt;BranchName&gt;</code> \u5c06\u5f53\u524d checkout \u7684\u5206\u652f\u7684\u63d0\u4ea4\u642c\u8fd0\u5230 BranchName</li> </ul> <p>\u5c06 A \u5408\u5e76\u5230 main:</p> Text Only<pre><code>git checkout A\ngit rebase main\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_3","title":"\u79fb\u52a8","text":"<p>HEAD \u603b\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u4e0a\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55\u3002\u5206\u79bb\u7684 HEAD \u5c31\u662f\u8ba9\u5176\u6307\u5411\u4e86\u67d0\u4e2a\u5177\u4f53\u7684\u63d0\u4ea4\u8bb0\u5f55\u800c\u4e0d\u662f\u5206\u652f\u540d\u3002</p> <ul> <li><code>git checkout &lt;Name&gt;</code> \u4f7f HEAD \u6307\u5411 Name\uff08\u53ef\u4ee5\u662f\u67d0\u4e2a\u63d0\u4ea4\uff0c\u57fa\u4e8e\u54c8\u5e0c\u503c\u6307\u5b9a\u63d0\u4ea4\u8bb0\u5f55\uff09</li> </ul> <p>\u76f8\u5bf9\u5f15\u7528\uff1a \u4f7f\u7528<code>^</code>\u5411\u4e0a\u79fb\u52a8 1 \u4e2a\u63d0\u4ea4\u8bb0\u5f55 \u4f7f\u7528<code>~&lt;num&gt;</code>\u5411\u4e0a\u79fb\u52a8\u591a\u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5982<code>~3</code></p> <ul> <li><code>git checkout HEAD^</code> \u4f7f HEAD \u6307\u5411\u5f53\u524d HEAD\uff08\u4e00\u822c\u662f\u6700\u8fd1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff09\u7684 parent</li> <li> <p><code>git checkout HEAD~3</code> \u4f7f HEAD \u540e\u9000 3 \u6b65</p> </li> <li> <p><code>git branch -f A</code> \u5f3a\u5236\u5c06\u5206\u652f A \u6307\u5411\u5f53\u524d HEAD</p> </li> <li><code>git branch -f A B</code> \u5f3a\u5236\u8ba9\u5206\u652f A \u6307\u5411\u63d0\u4ea4 B \u6240\u5728\u7684\u4f4d\u7f6e</li> <li> <p><code>git branch -f main HEAD~3</code> \u5c06 main \u5206\u652f\u5f3a\u5236\u6307\u5411 HEAD \u7684\u7b2c 3 \u7ea7 parent \u63d0\u4ea4</p> </li> <li> <p><code>git cherry-pick &lt;CommitName&gt;</code> \u5c06\u5176\u4ed6\u5206\u652f\u4e0a\u7684\u63d0\u4ea4 CommitName \u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git cherry-pick c2 c4</code> \u5c06 c2\uff0cc4 \u4f9d\u6b21\u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git rebase -i &lt;CommitName&gt;</code> \u4ece CommitName \u7684\u4e0b\u4e00\u4e2a\u63d0\u4ea4\u5f00\u59cb\uff08\u4e0d\u5305\u62ec\u5b83\uff09\uff0c\u5217\u51fa\u76f4\u5230\u5f53\u524d\u5206\u652f HEAD \u7684\u6240\u6709\u63d0\u4ea4\uff0c\u4f9b\u4f60\u5728\u4ea4\u4e92\u5f0f\u754c\u9762\uff08interactive\uff09\u4e2d\u7f16\u8f91\u3001\u5408\u5e76\u3001\u91cd\u6392\u3001\u6539\u5199\u7b49</p> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_4","title":"\u64a4\u9500","text":"<ul> <li><code>git reset HEAD~2</code> \u56de\u9000 2 \u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4f46\u5bf9\u8fdc\u7a0b\u5206\u652f\u65e0\u6548</li> <li><code>git revert HEAD</code> \u521b\u5efa\u66f4\u6539\u7684\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_5","title":"\u8fdc\u7a0b\u64cd\u4f5c","text":"<p>\u8fdc\u7a0b\u5206\u652f\u547d\u540d\uff1a<code>\u8fdc\u7a0b\u4ed3\u5e93\u540d/\u5206\u652f\u540d</code>\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u540d\u9ed8\u8ba4\u4e3a<code>origin</code>\u3002\u5207\u6362\u5230\u8fdc\u7a0b\u5206\u652f\u65f6\uff0c\u81ea\u52a8\u8fdb\u5165\u5206\u79bb HEAD \u72b6\u6001\u3002</p> <ul> <li><code>git clone</code> \u590d\u5236\u6574\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u5206\u652f\uff0c\u5e76\u8ddf\u8e2a\u8fdc\u7a0b\u7684\u540c\u540d\u5206\u652f\u3002</li> <li><code>git fetch</code> \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\u672c\u5730\u4ed3\u5e93\u4e2d\u7f3a\u5931\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5e76\u66f4\u65b0\u8fdc\u7a0b\u5206\u652f\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u5c06\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\u66f4\u65b0\u6210\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u76f8\u5e94\u5206\u652f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u4f46\u4e0d\u4f1a\u6539\u53d8\u672c\u5730\u4ed3\u5e93\u7684\u72b6\u6001\uff09</li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e\u5148<code>git fetch</code>\u518d<code>git merge</code></li> <li><code>git push</code> \u5c06\u53d8\u66f4\u4e0a\u4f20\u5230\u6307\u5b9a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e0a\u5408\u5e76\u65b0\u63d0\u4ea4\u8bb0\u5f55</li> <li><code>git push origin A</code> \u628a\u672c\u5730\u7684\u5206\u652f A \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 origin\uff08\u9ed8\u8ba4\uff09\uff0c\u5728\u8fdc\u7a0b\u4e5f\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u5206\u652f A</li> </ul> <p>\u5f53\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0\u540e\uff0c\u76f4\u63a5<code>git push</code>\u4f1a\u7531\u4e8e\u5386\u53f2\u504f\u79fb\u800c\u5931\u8d25\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5148\u4f7f\u5de5\u4f5c\u57fa\u4e8e\u6700\u65b0\u7684\u8fdc\u7a0b\u5206\u652f</p> <ul> <li><code>git fetch; git rebase o/main; git push</code> \u7528<code>git fetch</code>\u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u7528 <code>rebase</code> \u5c06\u6211\u4eec\u7684\u5de5\u4f5c\u79fb\u52a8\u5230\u6700\u65b0\u7684\u63d0\u4ea4\u8bb0\u5f55\u4e0b\uff0c\u6700\u540e\u518d\u7528 - <code>git push</code> \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git fetch; git merge o/main; git push</code> \u7528 <code>git fetch</code> \u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u5408\u5e76\u4e86\u65b0\u53d8\u66f4\u5230\u6211\u4eec\u7684\u672c\u5730\u5206\u652f\uff08\u4e3a\u4e86\u5305\u542b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u66f4\uff09\uff0c\u6700\u540e\u6211\u4eec\u7528 <code>git push</code> \u628a\u5de5\u4f5c\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git pull --rebase</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git rebase o/main</code></li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git merge o/main</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#ssh","title":"SSH","text":"<p>\u4ee5\u4e0b\u64cd\u4f5c\u5747\u5728\u7ec8\u7aef\u6267\u884c\u3002</p> <ol> <li><code>cd ~/.ssh</code> \u5982\u679c\u62a5\u9519\u6267\u884c\u7b2c 2 \u6b65\uff0c\u5982\u679c\u4e0d\u62a5\u9519\u6267\u884c\u7b2c 3 \u6b65\u3002</li> <li><code>ssh-keygen -t rsa -b 4096 -C \"&lt;\u90ae\u7bb1&gt;\"</code> \u521b\u5efa SSH \u5bc6\u94a5</li> <li><code>cd ~/.ssh</code>\u518d<code>cat id_rsa.pub</code> \u590d\u5236\u516c\u94a5\u5185\u5bb9</li> <li>GitHub -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key -&gt; \u7c98\u8d34</li> <li><code>ssh -T git@github.com</code> \u68c0\u9a8c\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff08\u7b2c 1 \u6b21\u9700\u8f93\u5165 yes\uff09</li> <li><code>git remote -v</code> \u68c0\u67e5\u8fdc\u7a0b\u4ed3\u5e93 URL</li> <li><code>git remote set-url origin git@github.com:&lt;http\u7684URL&gt;</code> \u4fee\u6539\u4e3a SSH \u5730\u5740</li> <li>\u6b63\u5e38\u6267\u884c git \u64cd\u4f5c</li> </ol>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/","title":"JavaScript","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 61 \u4e2a\u5b57\u00a0\u00a013 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"<p><code>windows.alert()</code>\u5f39\u51fa\u8b66\u544a\u6846</p> <p><code>document.write()</code>\u5c06\u5185\u5bb9\u5199\u5165 HTML</p> <p><code>innerHTML</code>\u5199\u5165\u5230 HTML \u5143\u7d20 \u901a\u8fc7 id \u4fee\u6539\u5185\u5bb9\uff1a<code>document.getElementById(\"demo\").innerHTML=\"\u4fee\u6539\u540e\u7ed3\u679c\";</code></p> <p><code>console.log()</code>\u5199\u5165\u5230\u63a7\u5236\u53f0</p> <p>\u5bf9\u8c61\uff1a<code>\u5bb9\u5668\u540d = {\u952e:\u503c, \u952e:\u503c}</code> \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let person = {\n  name: \"Abies\",\n  age: 3,\n  school: \"ZJU\",\n};\n</code></pre> <p>\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027\uff1a<code>person.name</code>\u6216<code>person[\"name\"]</code> \u5bf9\u8c61\u4e2d\u5305\u542b\u51fd\u6570\uff1a</p> JavaScript<pre><code>let person = {\n  name: \"Abies\",\n  school: \"ZJU\",\n  nameAndSchool: function () {\n    return this.name + \" \" + this.school;\n  },\n};\n\ndocument.getElementById(\"demo\").innerHTML = person.nameAndSchool();\n</code></pre> <p>\u51fd\u6570\uff1a</p> JavaScript<pre><code>function \u51fd\u6570\u540d(\u53c2\u6570) {\n  \u6267\u884c\u4ee3\u7801;\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;script&gt;\n      function myAlert() {\n        alert(\"Hello World!\");\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;button onclick=\"myAlert()\"&gt;A button&lt;/button&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u4e8b\u4ef6\uff1a<code>&lt;HTML\u5143\u7d20 \u4e8b\u4ef6=\"\u6267\u884c\u7684\u4ee3\u7801\"&gt;</code> \u5e38\u89c1\u7684\u4e8b\u4ef6\uff1a</p> <ul> <li>onchange\uff1aHTMl \u5143\u7d20\u6539\u53d8</li> <li>onclick\uff1a\u70b9\u51fb\u5143\u7d20</li> <li>onmouseover\uff1a\u9f20\u6807\u60ac\u505c</li> <li>onmouseout\uff1a\u9f20\u6807\u79fb\u5f00</li> <li>onkeydown\uff1a\u6309\u4e0b\u6309\u952e</li> <li>onload\uff1a\u9875\u9762\u52a0\u8f7d\u5b8c\u6210</li> </ul> <p>\u5b57\u7b26\u4e32\uff1a\u5b57\u7b26\u4e32\u51fd\u6570</p> <p>\u6a21\u677f\u5b57\u7b26\u4e32\uff1a\u7528<code>`\u5305\u56f4\uff0c\u4e2d\u95f4\u53ef\u7528${}\u4f7f\u7528\u53d8\u91cf    \u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u76f4\u63a5\u7528</code>+`\u62fc\u63a5 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>const name = \"Abies\";\nconst age = 3;\nconst message = `My name is ${name} and my age is ${age}.`;\n</code></pre> <p>\u53ef\u4f5c\u4e3a HTML \u7684\u6a21\u677f \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let header = \"\";\nlet tags = [\"RUNOOB\", \"GOOGLE\", \"TAOBAO\"];\n\nlet html = `&lt;h2&gt;${header}&lt;/h2&gt;&lt;ul&gt;`;\nfor (const x of tags) {\n  html += `&lt;li&gt;${x}&lt;/li&gt;`;\n}\n\nhtml += `&lt;/ul&gt;`;\n</code></pre> <p>\u9009\u62e9\u6761\u4ef6\uff1a<code>if ... else if ... else ...</code></p> <p>switch \u8bed\u53e5\uff1a</p> JavaScript<pre><code>switch (n) {\n  case 1:\n    \u8bed\u53e5;\n    break;\n  case 2:\n    \u8bed\u53e5;\n    break;\n  default:\n    \u8bed\u53e5;\n}\n</code></pre> <p>for \u5faa\u73af\uff1a</p> JavaScript<pre><code>for (let i = 0; i &lt; cars.length; i++) {\n  document.write(cars[i] + \"&lt;br&gt;\");\n}\n</code></pre> <p>\u6216</p> JavaScript<pre><code>for (x in cars) {\n  document.write(x + \"&lt;br&gt;\");\n}\n</code></pre> <p>while \u5faa\u73af\uff1a</p> JavaScript<pre><code>while (\u6761\u4ef6) {\n  \u8bed\u53e5;\n}\n</code></pre> <p><code>typeof</code>\u8fd0\u7b97\u7b26\u68c0\u67e5\u53d8\u91cf\u7c7b\u578b \u7c7b\u578b\u6709\uff1astring, number, boolean, object, function, bigint, undefined, date, array, null... <code>constructor</code>\u5c5e\u6027\u8fd4\u56de\u53d8\u91cf\u7684\u6784\u9020\u51fd\u6570 \u793a\u4f8b\uff08\u7528 constructor \u5224\u65ad\u662f\u4e0d\u662f\u6570\u7ec4\uff09\uff1a</p> JavaScript<pre><code>function isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") &gt; -1;\n}\n</code></pre> <p>\uff08\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u6bb5\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff1a\u5148 toString()\uff0c\u518d\u68c0\u67e5 indexOf()\uff09</p> <p>\u7c7b\u578b\u8f6c\u6362\u65b9\u6cd5\uff1a<code>String()</code>\u548c<code>toString()</code>\uff0c<code>Number()</code>... \u5b57\u7b26\u4e32\u548c\u6570\u5b57\u76f8\u52a0\uff0c\u5c06\u6570\u5b57\u53d8\u4e3a\u5b57\u7b26\u4e32</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a \u57fa\u672c\u7684\u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u6559\u7a0b</p> <p>\u9519\u8bef\u5c1d\u8bd5\uff1a <code>try</code>\u548c<code>catch</code>\u6210\u5bf9\u51fa\u73b0\uff0ctry \u8bed\u53e5\u5c1d\u8bd5\u8fd0\u884c\uff0ccatch \u8bed\u53e5\u6355\u83b7 try \u90e8\u5206\u7684\u9519\u8bef\u3002finally \u4e2d\u7684\u8bed\u53e5\u4e00\u5b9a\u4f1a\u6267\u884c\u3002</p> JavaScript<pre><code>try {\n    if (...) throw \"...\";\n} catch(err) {\n    \u5904\u7406\u5f02\u5e38\n} finally {\n    \u7ed3\u675f\u5904\u7406\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction() {\n  let message, x;\n  message = document.getElementById(\"message\");\n  message.innerHTML = \"\";\n  x = document.getElementById(\"demo\").value;\n  try {\n    if (x == \"\") throw \"\u7a7a\";\n    if (isNaN(x)) throw \"\u4e0d\u662f\u6570\u5b57\";\n    x = Number(x);\n    if (x &lt; 5) throw \"\u592a\u5c0f\";\n    if (x &gt; 10) throw \"\u592a\u5927\";\n  } catch (err) {\n    message.innerHTML = \"\u9519\u8bef\uff1a\" + err;\n  }\n}\n</code></pre> <p>\u8c03\u8bd5\uff1a\u7528<code>console.log()</code>\u8f93\u51fa\u5230\u63a7\u5236\u53f0</p> <p>\u58f0\u660e\u63d0\u5347\uff1a\u53d8\u91cf\u7684\u58f0\u660e\u548c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u88ab\u89e3\u91ca\u5668\u81ea\u52a8\u63d0\u5347\u5230\u6700\u9876\u90e8 \u800c\u521d\u59cb\u5316\u4e0d\u4f1a\u63d0\u5347 \u4f1a\u63d0\u5347\uff1a</p> JavaScript<pre><code>let x;\nx = 1;\n</code></pre> <p>\u4e0d\u4f1a\u63d0\u5347\uff1a</p> JavaScript<pre><code>let x = 1;\n</code></pre> <p><code>==</code>\u846b\u82a6\u6570\u636e\u7c7b\u578b\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d<code>x == y</code>\u4e3a true</p> JavaScript<pre><code>let x = 10;\nlet y = \"10\";\n</code></pre> <p>\u800c<code>===</code>\u4e3a\u4e25\u683c\u76f8\u7b49\uff0c\u9700\u8981\u53d8\u91cf\u7c7b\u578b\u4e5f\u76f8\u7b49\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d<code>x === y</code>\u4e3a false</p> <p>\u8868\u5355\uff0cHTML \u4ee3\u7801\uff1a</p> HTML<pre><code>&lt;form name=\"myForm\" action=\"/submit\" method=\"get\"&gt;\n  \u59d3\u540d\uff1a&lt;input type=\"text\" name=\"fname\" /&gt;\n  &lt;input type=\"submit\" value=\"\u63d0\u4ea4\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>\u5224\u65ad\u8868\u5355\u5b57\u6bb5 fname \u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u5f39\u51fa\u4fe1\u606f</p> JavaScript<pre><code>function validateForm() {\n  let x = document.forms[\"myForm\"][\"fname\"].value;\n  if (x == null || x == \"\") {\n    alert(\"\u9700\u8981\u8f93\u5165\u540d\u5b57\");\n    return false;\n  }\n}\n</code></pre> <p>\uff08\u89e3\u91ca\uff1a<code>document</code>\u8868\u793a\u6574\u4e2a\u7f51\u9875\u7684 DOM \u6587\u4ef6\uff0c<code>document.forms</code>\u8868\u793a\u7f51\u9875\u4e2d\u6240\u6709\u8868\u5355\u7684\u96c6\u5408\uff0c<code>document.forms[\"formName\"]</code>\u8868\u793a\u4ece\u6240\u6709\u8868\u5355\u4e2d\u53d6\u51fa\u540d\u4e3a formName \u7684\u8868\u5355\uff0c<code>document.forms[\"formName\"][\"name\"]</code>\u8868\u793a\u4ece formName \u8868\u5355\u4e2d\u53d6\u51fa name \u5b57\u6bb5\uff0c<code>.value</code>\u8868\u793a\u5f97\u5230\u5b9e\u9645\u7684\u503c\u3002\uff09</p> <p>\u793a\u4f8b\uff0c\u9a8c\u8bc1\u8f93\u5165\u7684\u6570\u5b57\u4e3a 1~9\uff1a</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;h1&gt;JavaScript \u9a8c\u8bc1\u8f93\u5165&lt;/h1&gt;\n    &lt;p&gt;\u8bf7\u8f93\u5165 1 \u5230 10 \u4e4b\u95f4\u7684\u6570\u5b57\uff1a&lt;/p&gt;\n    &lt;input id=\"numb\" /&gt;\n    &lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u63d0\u4ea4&lt;/button&gt;\n    &lt;p id=\"demo\"&gt;&lt;/p&gt;\n    &lt;script&gt;\n      function myFunction() {\n        let x, text;\n        x = document.getElementById(\"numb\").value;\n        if (isNaN(x) || x &lt; 1 || x &gt; 10) {\n          text = \"\u8f93\u5165\u9519\u8bef\";\n        } else {\n          text = \"\u8f93\u5165\u6b63\u786e\";\n        }\n        document.getElementById(\"demo\").innerHTML = text;\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u5728 input \u5757\u4e2d\u589e\u52a0<code>required=\"required\"</code>\uff0c\u4f1a\u5728\u5b57\u6bb5\u4e3a\u7a7a\u65f6\u81ea\u52a8\u963b\u503c\u63d0\u4ea4\u3002</p> <p>\u5176\u4ed6\u9a8c\u8bc1\u5c5e\u6027\uff1a</p> <p>HTML \u8f93\u5165\u5c5e\u6027\uff08\u6700\u91cd\u8981\u7684\u90e8\u5206\uff09\uff1a</p> \u5c5e\u6027 \u7528\u9014 \u793a\u4f8b \u6548\u679c <code>required</code> \u5fc5\u586b <code>&lt;input required&gt;</code> \u4e0d\u586b\u4e0d\u80fd\u63d0\u4ea4 <code>type</code> \u9650\u5b9a\u8f93\u5165\u7c7b\u578b <code>&lt;input type=\"email\"&gt;</code> \u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f <code>pattern</code> \u81ea\u5b9a\u4e49\u683c\u5f0f\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09 <code>&lt;input pattern=\"[A-Za-z]{3}\"&gt;</code> \u53ea\u80fd\u8f93\u5165 3 \u4e2a\u5b57\u6bcd <code>min</code> / <code>max</code> \u6700\u5c0f/\u6700\u5927\u503c\uff08\u6570\u503c\u6216\u65e5\u671f\uff09 <code>&lt;input type=\"number\" min=\"1\" max=\"10\"&gt;</code> \u53ea\u80fd\u8f93\u5165 1~10 <code>disabled</code> \u7981\u7528\u8f93\u5165\u6846\uff08\u4e0d\u53ef\u7f16\u8f91\u3001\u4e0d\u53ef\u63d0\u4ea4\uff09 <code>&lt;input disabled&gt;</code> \u7528\u6237\u65e0\u6cd5\u586b\u5199\u8fd9\u4e2a\u6846 <p>CSS \u4f2a\u7c7b\u9009\u62e9\u5668\uff08\u7528\u4e8e\u6837\u5f0f\u53cd\u9988\uff09\uff1a</p> <p>\u4f2a\u7c7b\u53ef\u4ee5\u7528\u6765\u6839\u636e\u9a8c\u8bc1\u72b6\u6001\u6539\u53d8\u6837\u5f0f\uff0c\u6bd4\u5982\u52a0\u7ea2\u6846\u3001\u663e\u793a\u5bf9\u52fe\u7b49\u3002</p> \u4f2a\u7c7b \u610f\u601d \u7528\u6cd5\u793a\u4f8b \u6548\u679c <code>:required</code> \u5fc5\u586b\u7684\u8f93\u5165\u6846 <code>input:required { border: red; }</code> \u5fc5\u586b\u6846\u52a0\u7ea2\u8fb9 <code>:optional</code> \u975e\u5fc5\u586b\u7684\u8f93\u5165\u6846 <code>input:optional { border: gray; }</code> \u53ef\u9009\u6846\u52a0\u7070\u8fb9 <code>:valid</code> \u503c\u5408\u6cd5 <code>input:valid { border: green; }</code> \u586b\u5199\u6b63\u786e\u65f6\u52a0\u7eff\u8fb9 <code>:invalid</code> \u503c\u4e0d\u5408\u6cd5 <code>input:invalid { border: red; }</code> \u9519\u8bef\u65f6\u52a0\u7ea2\u8fb9 <code>:disabled</code> \u4e0d\u53ef\u7528\u8f93\u5165\u6846 <code>input:disabled { background: #eee; }</code> \u7070\u6389\u80cc\u666f\u8272 <p>DOM \u5c5e\u6027\u548c\u65b9\u6cd5\uff08JavaScript \u64cd\u4f5c\u9a8c\u8bc1\uff09\uff1a</p> API \u8bf4\u660e \u793a\u4f8b <code>.checkValidity()</code> \u8fd4\u56de\u8f93\u5165\u6846\u662f\u5426\u901a\u8fc7\u9a8c\u8bc1\uff08true/false\uff09 <code>input.checkValidity()</code> <code>.reportValidity()</code> \u68c0\u67e5\u5e76\u663e\u793a\u63d0\u793a\u4fe1\u606f\uff08\u4f1a\u5f39\u7a97\uff09 <code>form.reportValidity()</code> <code>.validity</code> \u8fd4\u56de\u9a8c\u8bc1\u7ed3\u679c\u5bf9\u8c61\uff08\u5e03\u5c14\u5c5e\u6027\uff09 <code>input.validity.valueMissing</code> <code>.willValidate</code> \u8fd4\u56de\u662f\u5426\u4f1a\u88ab\u9a8c\u8bc1\uff08\u6bd4\u5982\u7981\u7528\u7684\u8f93\u5165\u6846\u4e0d\u4f1a\u9a8c\u8bc1\uff09 <code>input.willValidate</code> <p>\u9a8c\u8bc1 API\uff1a <code>checkValidity()</code>\u8fd4\u56de true/false <code>setCustomValidity()</code>\u8bbe\u7f6e input \u5143\u7d20\u7684 validationMessage \u5c5e\u6027\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\u4f7f\u7528 setCustomValidity \u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49\u63d0\u793a\u540e\uff0cvalidity.customError \u5c31\u4f1a\u53d8\u6210 true\uff0ccheckValidity \u603b\u662f\u4f1a\u8fd4\u56de false\u3002</p> <p>\u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;input id=\"id1\" tyoe=\"number\" min=\"10\" max=\"300\" required /&gt;\n&lt;button onclick=\"myFunction()\"&gt;\u9a8c\u8bc1&lt;/button&gt;\n\n&lt;script&gt;\n  function myFunction() {\n    let inputObj = document.getElementById(\"id1\");\n    if (inputObj.checkValidity() == false) {\n      document.getElementById(\"demo\").innerHTML = inputObj.validitionMessage;\n    }\n  }\n&lt;/script&gt;\n</code></pre> <p>\u7ea6\u675f\u9a8c\u8bc1 DOM \u5c5e\u6027\uff1a</p> \u5c5e\u6027 \u63cf\u8ff0 validity true / false validationMessage \u6d4f\u89c8\u5668\u9519\u8bef\u63d0\u793a\u4fe1\u606f willValidate \u6307\u5b9a input \u662f\u5426\u9700\u8981\u9a8c\u8bc1 <p>Validity \u5c5e\u6027\uff1aValidity \u5c5e\u6027\u8868\u683c</p> <p>this \u662f\u4e00\u4e2a\u7279\u6b8a\u5173\u952e\u5b57\uff0c\u5b83\u4ee3\u8868\u201c\u5f53\u524d\u6267\u884c\u73af\u5883\u4e2d\u7684\u5bf9\u8c61\u201d\u3002 \u5728\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u4f7f\u7528 this\uff0c\u8868\u793a\u5b83\u6240\u5728\u7684\u5bf9\u8c61\u3002 \u5355\u72ec\u4f7f\u7528 this\uff0c\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6307 window</p> <p>JSON \u82f1\u6587\u5168\u79f0 JavaScript Object Notation\uff0c\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002\u7528\u4e8e\u5b58\u50a8\u548c\u4f20\u8f93\u6570\u636e\u7684\u683c\u5f0f\uff0c\u670d\u52a1\u7aef\u5411\u7f51\u9875\u4f20\u9012\u6570\u636e\u3002 JSON \u8bed\u6cd5\uff1a\u6570\u636e\u4e3a\u952e\uff1a\u503c\uff0c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5927\u62ec\u53f7\u4fdd\u5b58\u5bf9\u8c61\uff0c\u4e2d\u62ec\u53f7\u4fdd\u5b58\u6570\u7ec4\u3002 \u793a\u4f8b\uff1a</p> JSON<pre><code>\"sites\":[\n    {\"name\":\"Runoob\", \"url\":\"www.runoob.com\"},\n    {\"name\":\"Google\", \"url\":\"www.google.com\"}\n]\n</code></pre> <p>\u51fd\u6570\u5b9a\u4e49\uff1a</p> JavaScript<pre><code>function myProduct(a, b) {\n  return a * b;\n}\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u3002\u6b64\u65f6\u51fd\u6570\u4e0d\u9700\u8981\u540d\u79f0\uff0c\u53ea\u8981\u7528\u53d8\u91cf\u540d\u6765\u8c03\u7528\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let x = function (a, b) {\n  return a * b;\n};\n</code></pre> <p>\u51fd\u6570\u58f0\u660e\u4e5f\u53ef\u4ee5\u63d0\u5347\u5230\u9876\u90e8\uff0c\u6240\u4ee5\u51fd\u6570\u53ef\u4ee5\u5148\u8c03\u7528\u518d\u5b9a\u4e49\u3002</p> <p>\u51fd\u6570\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002<code>arguments.length</code>\u5c5e\u6027\u8fd4\u56de\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u63a5\u6536\u5230\u7684\u7684\u53c2\u6570\u4e2a\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction(a, b) {\n  return arguments.length;\n}\n</code></pre> <p><code>toString()</code>\u65b9\u6cd5\u53ef\u5c06\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction(a, b) {\n  return a * b;\n}\nvar txt = myFunction.toString();\n</code></pre> <p>\u7bad\u5934\u51fd\u6570\uff1a<code>(\u53c2\u6570) =&gt; {\u51fd\u6570\u58f0\u660e}</code> \uff0c\u9002\u7528\u4e8e\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let x = function (x, y) {\n  return x * y;\n};\n\nconst x = (x, y) =&gt; x * y;\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u6709\u81ea\u5e26\u53c2\u6570\uff0c\u5f53\u8c03\u7528\u51fd\u6570\u65f6\u8be5\u53c2\u6570\u672a\u4f20\u5165\u6216 undefined \u65f6\uff0c\u5c31\u53d6\u9ed8\u8ba4\u503c\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myProduct(x, y = 10) {\n  return x * y;\n}\n</code></pre> <p>\u51fd\u6570\u6709\u4e2a\u5185\u7f6e\u7684 arguments \u5bf9\u8c61,arguments \u5bf9\u8c61\u5305\u542b\u4e86\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u6570\u7ec4\u3002 \u793a\u4f8b\uff0c\u6c42\u548c\u51fd\u6570\uff1a</p> JavaScript<pre><code>x = sumAll(1, 123, 500, 115, 44, 88);\n\nfunction sumAll() {\n  let i,\n    sum = 0;\n  for (i = 0; i &lt; arguments.length; i++) {\n    sum += arguments[i];\n  }\n  return sum;\n}\n</code></pre> <p>\u4efb\u4f55\u51fd\u6570\u90fd\u80fd\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\u548c\u4e0a\u4e00\u5c42\u7684\u51fd\u6570\u53d8\u91cf\u3002\u5982\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u5185\u5d4c\u51fd\u6570<code>plus()</code>\u53ef\u4ee5\u4f7f\u5f53\u524d\u51fd\u6570\u80fd\u8bbf\u95ee\u7236\u51fd\u6570\u7684\u53d8\u91cf\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function add() {\n  let counter = 0;\n  function plus() {\n    counter += 1;\n  }\n  plus();\n  return counter;\n}\n</code></pre> <p>\u7c7b\u662f\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u6a21\u677f\u3002\u6211\u4eec\u4f7f\u7528 class \u5173\u952e\u5b57\u6765\u521b\u5efa\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u4f53\u5728\u4e00\u5bf9\u5927\u62ec\u53f7 {} \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5927\u62ec\u53f7 {} \u4e2d\u5b9a\u4e49\u7c7b\u6210\u5458\u7684\u4f4d\u7f6e\uff0c\u5982\u65b9\u6cd5\u6216\u6784\u9020\u51fd\u6570\u3002\u6bcf\u4e2a\u7c7b\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5 constructor()\uff0c\u5b83\u662f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u7531 class \u521b\u5efa\u7684\u5bf9\u8c61\u3002 \u683c\u5f0f\uff1a</p> JavaScript<pre><code>class \u7c7b\u540d {\n    constructor() {...}\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n}\n</code></pre> <p>\u4ee5\u4e0a\u5b9e\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\uff0c\u540d\u4e3a \"Runoob\"\u3002\u7c7b\u4e2d\u521d\u59cb\u5316\u4e86\u4e24\u4e2a\u5c5e\u6027\uff1a \"name\" \u548c \"url\"\u3002</p> <p>\u4f7f\u7528<code>new</code>\u521b\u5efa\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let site = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", \"https://www.runoob.com\");\n</code></pre> <p>\u7c7b\u8868\u8fbe\u5f0f\u662f\u5b9a\u4e49\u7c7b\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u7c7b\u8868\u8fbe\u5f0f\u53ef\u4ee5\u547d\u540d\u6216\u4e0d\u547d\u540d\u3002\u547d\u540d\u7c7b\u8868\u8fbe\u5f0f\u7684\u540d\u79f0\u662f\u8be5\u7c7b\u4f53\u7684\u5c40\u90e8\u540d\u79f0\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>// \u672a\u547d\u540d/\u533f\u540d\u7c7b\nlet Runoob = class {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n};\nconsole.log(Runoob.name);\n// output: \"Runoob\"\n\n// \u547d\u540d\u7c7b\nlet Runoob = class Runoob2 {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n};\nconsole.log(Runoob.name);\n// \u8f93\u51fa: \"Runoob2\"\n</code></pre> <p>\u6784\u9020\u65b9\u6cd5\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff1a\u6784\u9020\u65b9\u6cd5\u540d\u4e3a constructor()\uff0c\u5728\u521b\u5efa\u65b0\u5bf9\u8c61\u65f6\u4f1a\u81ea\u52a8\u6267\u884c\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\u5c5e\u6027\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u53ef\u4ee5\u7528<code>\u65b9\u6cd5\u540d() {\u6784\u9020\u6307\u4ee4}</code>\u521b\u5efa\u6784\u9020\u65b9\u6cd5\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, year) {\n    this.name = name;\n    this.year = year;\n  }\n  age() {\n    let date = new Date();\n    return date.getFullYear() - this.year;\n  }\n}\n\nlet runoob = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", 2018);\ndocument.getElementById(\"demo\").innerHTML =\n  \"\u83dc\u9e1f\u6559\u7a0b \" + runoob.age() + \" \u5c81\u4e86\u3002\";\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u5411\u7c7b\u7684\u65b9\u6cd5\u53d1\u9001\u53c2\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, year) {\n    this.name = name;\n    this.year = year;\n  }\n  age(x) {\n    return x - this.year;\n  }\n}\n\nlet date = new Date();\nlet year = date.getFullYear();\n\nlet runoob = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", 2020);\ndocument.getElementById(\"demo\").innerHTML =\n  \"\u83dc\u9e1f\u6559\u7a0b \" + runoob.age(year) + \" \u5c81\u4e86\u3002\";\n</code></pre> <p>\u7c7b\u7ee7\u627f\uff1a<code>class \u7c7bB extends \u7c7bA</code>\u8868\u793a\u7c7b B \u7ee7\u627f\u7c7b A\u3002 \u7528<code>super()</code>\u5f15\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u53ef\u4ee5\u5411\u539f\u578b\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\uff0c\u793a\u4f8b\uff1a</p> JavaScript<pre><code>\u7c7b\u540d.prototype.\u65b9\u6cd5\u540d = function () {\n  \u6267\u884c\u4ee3\u7801;\n};\n</code></pre> <p>\u53d8\u91cf\u548c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u63d0\u5347\uff0c\u4f46\u7c7b\u4e0d\u4f1a\u3002\u56e0\u6b64\u9700\u5148\u5b9a\u4e49\u7c7b\uff0c\u518d\u4f7f\u7528\u3002</p> <p>\u9759\u6001\u65b9\u6cd5\u662f\u4f7f\u7528 static \u5173\u952e\u5b57\u4fee\u9970\u7684\u65b9\u6cd5\uff0c\u53c8\u53eb\u7c7b\u65b9\u6cd5\uff0c\u5c5e\u4e8e\u7c7b\u7684\uff0c\u4f46\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u65b9\u6cd5\u540d \u8c03\u7528\u9759\u6001\u65b9\u6cd5\u3002\u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u5728\u5bf9\u8c61\u4e0a\u8c03\u7528\uff0c\u53ea\u80fd\u5728\u7c7b\u4e2d\u8c03\u7528\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/#_2","title":"\u6d4b\u8bd5\u9898","text":"<p>\u5f15\u7528\u540d\u4e3a \u201crunoob.js\u201d \u7684\u5916\u90e8\u811a\u672c\u7684\u6b63\u786e\u8bed\u6cd5\u662f\uff1f <code>&lt;script src=\"runoob.js\"&gt;</code></p> <p>\u5916\u90e8\u811a\u672c\u4e0d\u9700\u8981\u5305\u542b<code>&lt;script&gt;</code>\u6807\u7b7e</p> <p>HTML \u4e2d\u6ce8\u91ca\u7528<code>&lt;!----&gt;</code>\uff0cjs \u4e2d\u6ce8\u91ca\u7528<code>//</code></p> <p>\u5b9a\u4e49\u6570\u7ec4\uff1a<code>var txt = new Array(\"runoob\", \"google\", \"taobao\")</code></p> <p>\u5982\u4f55\u628a 7.25 \u56db\u820d\u4e94\u5165\u4e3a\u6700\u63a5\u8fd1\u7684\u6574\u6570\uff1f <code>Math.round(7.25)</code></p> <p>\u5982\u4f55\u6c42\u5f97 2 \u548c 4 \u4e2d\u6700\u5927\u7684\u6570\uff1f <code>Math.max(2,4)</code></p> <p>\u6253\u5f00\u540d\u4e3a \u201cwindow2\u201d \u7684\u65b0\u7a97\u53e3\u7684 JavaScript \u8bed\u6cd5\u662f\uff1f <code>window.open(\"https://www.runoob.com\",\"window2\")</code></p> <p>\u5982\u4f55\u5728\u6d4f\u89c8\u5668\u7684\u72b6\u6001\u680f\u653e\u5165\u4e00\u6761\u6d88\u606f\uff1f <code>window.status = \"put your message here\"</code></p> <p>\u5982\u4f55\u83b7\u5f97\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u540d\u79f0\uff1f <code>navigator.appName</code></p> <p>\u9884\u6d4b\u8f93\u51fa</p> HTML<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var a = \"RUNOOB-GOOGLE\";\n  var x = a.lastIndexOf(\"G\");\n  document.write(x);\n&lt;/script&gt;\n</code></pre> <p>10 \uff08\u5728\u5b57\u7b26\u4e32 a \u4e2d\uff0c\u4ece\u53f3\u5f80\u5de6\u627e\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u5b57\u7b26 \"G\" \u7684\u4f4d\u7f6e\u7d22\u5f15\uff09</p> <p>\u9884\u6d4b\u8f93\u51fa HTML<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;   \nvar a = \"RunoobGoogle\"; \nvar result = a.substring(4, 5); \ndocument.write(result);  \n&lt;/script&gt; \n</code></pre></p> <p>o \uff08<code>string.substring(startIndex, endIndex)</code>\u8fd4\u56de\u4ecestartIndex \u5f00\u59cb\uff08\u5305\u542b\u8be5\u4f4d\u7f6e\uff09\uff0c\u5230 endIndex \u7ed3\u675f\uff08\u4e0d\u5305\u542b\u8be5\u4f4d\u7f6e\uff09\u4e4b\u95f4\u7684\u5b57\u7b26\u3002\uff09</p> <p>\u9884\u6d4b\u8f93\u51fa HTML<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt; \nvar x=5; \nvar y=6; \nvar res=eval(\"x*y\"); \ndocument.write(res); \n&lt;/script&gt; \n</code></pre></p> <p>30 \uff08<code>eval()</code> \u662f JavaScript \u4e2d\u7684\u4e00\u4e2a\u51fd\u6570,\u5b83\u4f1a\u628a\u5b57\u7b26\u4e32\u5f53\u4f5c JavaScript \u4ee3\u7801\u6267\u884c\uff09</p> <p>JavaScript \u4e2d\u7528\u4e8e\u5220\u9664\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7a7a\u683c\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f <code>trim()</code></p> <p>\u5728 JavaScript\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709 integer \u548c float \u7b49\u6570\u636e\u7c7b\u578b\u3002\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u6570\u5b57\u662f\u5426\u662f\u6574\u6570\uff1f <code>Number.isInteger(value)</code></p> <p>\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u540e\uff0c\u53ef\u6539\u53d8\u53d8\u91cf\u7c7b\u578b\u3002 </p> <p>\u6570\u7ec4\u5bf9\u8c61\u7684\u54ea\u4e2a\u51fd\u6570\u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u51fd\u6570\uff1f <code>forEach()</code>  \uff08forEach() \u662f JavaScript \u6570\u7ec4\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u5bf9\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684 for \u5faa\u73af\u3002\u683c\u5f0f\uff1a JavaScript<pre><code>array.forEach(function(currentValue, index, array) {\n  // \u9488\u5bf9 currentValue \u6267\u884c\u7684\u64cd\u4f5c\n});\n</code></pre></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/","title":"MkDocs","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 183 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#grid-card","title":"grid card \u7684\u4f7f\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_1","title":"\u793a\u4f8b","text":"HTML<pre><code>&lt;div\n  class=\"grid cards\"\n  style=\"display: grid; grid-template-columns: 1fr;\"\n  markdown\n&gt;\n  &lt;!-- \u8fd9\u91cc\u5199 markdown \u5185\u5bb9 --&gt;\n&lt;/div&gt;\n</code></pre> <p>\u8c03\u6574\u5217\u5bbd\u9700\u8981\u4fee\u6539\uff1a<code>style=\"display: grid; grid-template-columns: 1fr;\"</code> \u5176\u4e2d<code>grid-template-columns: 1fr</code>\u5b9a\u4e49\u7f51\u683c\u7684\u5217\u6570\u548c\u5bbd\u5ea6\u3002<code>1fr</code>\u8868\u793a 1 \u4e2a\u5206\u6570\u5355\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5360\u6ee1\u6574\u4e2a\u7a7a\u95f4\u3002</p> <p>\u5176\u4ed6\u793a\u4f8b\uff1a</p> <ul> <li><code>grid-template-columns: 1fr 2fr 1fr;</code> \u2014 4 \u5217\uff0c\u5206\u522b\u5360 1\u30012\u30011 \u5217</li> <li><code>grid-template-columns: repeat(3, 1fr);</code> \u2014 3 \u5217\u7b49\u5bbd</li> <li><code>grid-template-columns: 100px 2fr 1fr;</code> \u2014 3 \u5217\uff0c\u5206\u522b\u662f 100px \u5bbd\uff0c2 \u4efd\u5bbd\uff0c1 \u4efd\u5bbd</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_2","title":"\u5206\u4e24\u5217\u793a\u4f8b","text":"Text Only<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n![\u793a\u4f8b](../../images/flower-dark.jpg){.img1}\n\n- __\u4e24\u5217\u6d4b\u8bd5__\n\n    ---\n\n    - 1\n    - 2\n\n&lt;/div&gt;\n</code></pre> <p>\u6548\u679c  </p> <p></p> <ul> <li> <p>\u4e24\u5217\u6d4b\u8bd5</p> <ul> <li>1</li> <li>2</li> </ul> </li> </ul> <p>\u6d4f\u89c8\u5668\u81ea\u52a8\u8c03\u6574\u4e3a\u4e24\u5217</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_3","title":"\u5206\u4e09\u5217\u793a\u4f8b","text":"Text Only<pre><code>&lt;div class=\"grid cards\" style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;\" markdown&gt;\n- __\u4e09\u5217\u6d4b\u8bd51__\n\n    ---\n\n    - 1\n    - 2\n\n- __\u4e09\u5217\u6d4b\u8bd52__\n\n    ---\n\n    - 1\n    - 2\n\n- __\u4e09\u5217\u6d4b\u8bd53__\n\n    ---\n\n    - 1\n    - 2\n&lt;/div&gt;\n</code></pre> <p>\u6548\u679c</p> <ul> <li> <p>\u4e09\u5217\u6d4b\u8bd51</p> <ul> <li>1</li> <li>2</li> </ul> </li> <li> <p>\u4e09\u5217\u6d4b\u8bd52</p> <ul> <li>1</li> <li>2</li> </ul> </li> <li> <p>\u4e09\u5217\u6d4b\u8bd53</p> <ul> <li>1</li> <li>2</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_4","title":"\u5706\u89d2\u56fe\u7247\u663e\u793a","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_5","title":"\u793a\u4f8b","text":"Text Only<pre><code>![\u793a\u4f8b](images/flower-dark.jpg){.img1}\n</code></pre> <p><code>img1</code>\u7c7b\u5b9a\u4e49\u4e86\u5706\u89d2\u56fe\u7247\uff0c<code>attr_list</code>\u6269\u5c55\u7684\u5f15\u5165\u4f7f\u6211\u4eec\u53ef\u4ee5\u7528<code>.{img1}</code>\u7ed9\u56fe\u7247\uff08\u6216\u5176\u4ed6\u5143\u7d20\uff09\u6dfb\u52a0\u8fd9\u4e2a\u7c7b\u3002 \u5176\u4e2d<code>images/flower-dark.jpg</code>\u8868\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684images\u6587\u4ef6\u5939\u4e2d\u7684flower-dark.jpg\u3002 \u5982\u8981\u56de\u9000\u5230\u4e0a\u4e00\u5c42\u76ee\u5f55\uff0c\u53ef\u4f7f\u7528<code>..</code></p> <p>\u53e6\u5916\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528URL\u4ee3\u66ff\u76f8\u5bf9\u8def\u5f84\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Basic/Basic/","title":"Basic","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 237 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Basic/Basic/#python","title":"\u4e00\u4e9b\u5173\u4e8e Python \u7684\u788e\u788e\u5ff5","text":"<p>\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff1a</p> <ul> <li><code>'Hi %s, number %d.\\n' % ('Abies', 7)</code>\uff1a%\u5360\u4f4d</li> <li><code>'Hi {0}, number {1}.\\n'.format('Abies', 7)</code>\uff1a{}\u4e2d\u53c2\u6570\u7f16\u53f7</li> <li><code>f'Hi {name}, number {num}.\\n'</code>\uff1a{}\u4e2d\u4e3a\u53d8\u91cf\u540d</li> </ul> <p>\u5b57\u7b26\u4e32\u64cd\u4f5c\uff1a</p> <ul> <li>\u66ff\u6362\uff1a<code>s2=s1.replace('a','A')</code>\uff0c\u539f\u5b57\u7b26\u4e32\u4e0d\u53d8</li> </ul> <p>list \u64cd\u4f5c\uff1a</p> <ul> <li>\u521b\u5efa\uff1a<code>a=[1,2,3]</code>\u6216<code>a=list(range(1,9))</code>\u6216<code>l=[x*x for x in range(1, 9) if x%2 == 0]</code></li> <li>\u8fd4\u56de\u957f\u5ea6\uff1a<code>len(a)</code></li> <li>\u6dfb\u52a0\uff1a<code>a.append('Aby')</code> \u6ca1\u6709\u8fd4\u56de\u503c</li> <li>\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\uff1a<code>a.insert(1,'Aby')</code></li> <li>\u5220\u9664\uff1a<code>a.pop()</code></li> <li>\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664\uff1a<code>a.pop(2)</code> \u6307\u5b9a\u5220\u9664\u4f4d\u7f6e</li> <li>\u4fee\u6539\uff1a<code>a[1]='hihi'</code></li> <li>\u6392\u5e8f\uff1a<code>a.sort()</code></li> <li>\u5207\u7247\uff1a<code>a[0:5:2]</code></li> </ul> <p>tuple \u64cd\u4f5c\uff1a</p> <ul> <li>[]\u8bbf\u95ee\u3001\u5207\u7247\uff0c\u4e0d\u80fd\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539</li> <li>\u521b\u5efa\uff1a<code>t=(1,)</code></li> <li>\u82e5 tuple \u4e2d\u542b list\uff0clist \u7684\u5143\u7d20\u53ef\u53d8</li> </ul> <p>\u8f93\u5165\uff1a</p> <ul> <li><code>in=input()</code> \u8fd4\u56de\u503c\u4e3a str</li> </ul> <p>match-case \u683c\u5f0f\uff1a</p> Python<pre><code>match a:\n    case x if x &lt; 3:\n        pass\n    case 10 | 11:\n        pass\n    case _:  # default\n        pass\n</code></pre> <p>dict \u64cd\u4f5c\uff1a</p> <ul> <li>\u521b\u5efa\uff1a<code>d={'A':1,'B':2}</code></li> <li>\u67e5\u627e\uff1a<code>d['A']</code></li> <li>\u63d2\u5165\uff1a<code>d['C']=3</code></li> <li>\u662f\u5426\u5b58\u5728\uff1a<code>'A' in d</code>\u6216<code>d.get('A')</code>\uff0c\u540e\u8005\u8fd4\u56de\u7d22\u5f15</li> <li>\u4fee\u6539\uff1a\u952e\u5fc5\u987b\u5b58\u5728</li> <li>\u5220\u9664\uff1a<code>d.pop('B')</code></li> </ul> <p>set \u64cd\u4f5c\uff1a</p> <ul> <li>\u521b\u5efa\uff1a<code>s={1,2,3}</code>\u6216<code>s=set([1,2,3])</code></li> <li>\u6dfb\u52a0\uff1a<code>s.add(4)</code></li> <li>\u5220\u9664\uff1a<code>s.remove(4)</code></li> <li>\u53ef\u4ee5&amp;\u3001|\u64cd\u4f5c</li> </ul> <p>\u5b9a\u4e49\u51fd\u6570\uff1a</p> <ul> <li>\u80fd\u8fd4\u56de\u591a\u4e2a\u503c\u4f5c\u4e3a tuple\uff0c<code>return a,b</code></li> <li>\u6ca1\u6709 return \u8bed\u53e5\u65f6\uff0c\u81ea\u52a8 return None</li> <li>\u53c2\u6570\u6709\u9ed8\u8ba4\u503c\uff0c\u5219\u8c03\u7528\u65f6\u53ef\u4e0d\u5199\u3002\u9ed8\u8ba4\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e0d\u5efa\u8bae\u6539\u53d8\u3002</li> <li>\u53ef\u53d8\u53c2\u6570\u524d\u52a0*\uff0c\u53ef\u4f20\u5165\u4efb\u610f\u591a\u4e2a\uff0c\u63a5\u6536\u4e3a tuple</li> <li>\u5173\u952e\u5b57\u53c2\u6570\u524d\u52a0**</li> </ul> <p>\u5faa\u73af\uff1a</p> <ul> <li>\u7d22\u5f15-\u5143\u7d20\u8fed\u4ee3\uff1a<code>for i, v in enumerate(['A', 'B', 'C']):</code></li> <li>\u4e24\u4e2a\u5143\u7d20\u8fed\u4ee3\uff1a<code>for i, j in [(1,1), (2,2)]:</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/","title":"Matplotlib","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 28 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u554a\u554a\u554a\u7528\u4e86\u8fd9\u4e48\u4e45\u7b2c\u4e00\u6b21\u7cfb\u7edf\u5b66</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"Python<pre><code>plt.figure(...)\nplt.plot(...)\nplt.show()\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/#_2","title":"\u7ec6\u8282\u8c03\u6574","text":"Python<pre><code>plt.xlim((1, 2))\nplt.right((1, 2))\n\nplt.xticks([1, 1.2, 1.4, 1.6, 1.8])\nplt.yticks(\n    [-2, -1.8, -1, 1.22, 3],\n    [r'$really\\ bad$', r'$bad$', r'$normal$', r'$good$', r'$really\\ good$']\n)  # \u6bcf\u4e2a y \u503c\u5bf9\u5e94\u4e00\u4e2a\u540e\u9762\u7684 label\n\nax = plt.gca()\nax.spines['top'].set_color('none')  # \u4e0a\u65b9\u8fb9\u6846\u4e0d\u663e\u793a\nax.spines['left'].set_position(('data',0))\n\n# \u663e\u793a\u56fe\u4f8b\uff0c\u4e0d\u52a0\u5373\u9ed8\u8ba4\uff0c\u653e\u5728\u7a7a\u4f4d\uff0c\u5373 loc='best'\uff0c\u4e5f\u53ef\u4ee5\u5168\u90fd\u4e0d\u5199\nplt.lagend([l1,l2], [\"l1\", \"l2\"], loc=...)    \n\n# \u6587\u5b57 xytext \u5355\u4f4d\u4e3a px\n# \u56fe\u4e2d\u6587\u5b57\nplt.annotate(r'$2x+1=%s$' % y0, xy=(x0, y0), xycoords='data', xytext=(+30, -30),\n             textcoords='offset points', fontsize=16,\n             arrowprops=dict(arrowstyle='-&gt;', connectionstyle=\"arc3,rad=.2\"))\n# \u56fe\u5916\u6587\u5b57\nplt.text(-3.7, 3, r'$This\\ is\\ the\\ some\\ text. \\mu\\ \\sigma_i\\ \\alpha_t$',\n         fontdict={'size': 16, 'color': 'r'})\nplt.text(x, y , '%.2f' % y, ha='center', va='bottom')   # \u6c34\u5e73\u5bf9\u9f50\u548c\u5782\u76f4\u5bf9\u9f50\n\n# c: \u8c03\u8282\u989c\u8272   \nplt.scatter(X, Y, s=(T + 4) * 10, c=T, alpha=.5)\n</code></pre> Python<pre><code>def f(x,y):\n    # the height function\n    return (1 - x / 2 + x**5 + y**3) * np.exp(-x**2 -y**2)\n\nn = 256\nx = np.linspace(-3, 3, n)\ny = np.linspace(-3, 3, n)\nX,Y = np.meshgrid(x, y)\n\n# use plt.contourf to filling contours\n# X, Y and value for (X,Y) point\n# \u9009\u7528\u4e00\u4e2a\u8272\u5e26\uff0c\u8be6\u89c1 doc, 8: \u53f0\u9636\u6570\nplt.contourf(X, Y, f(X, Y), 8, alpha=.75, cmap=plt.cm.RdBu)\n</code></pre> <p>\u5b98\u65b9\u8272\u5e26 seaborn \u8272\u5e26</p> <p>test here</p> PythonJavaScriptC++ Python<pre><code>print(\"Hello from Python\")\n</code></pre> JavaScript<pre><code>console.log(\"Hello from JavaScript\");\n</code></pre> C++<pre><code>std::cout &lt;&lt; \"Hello from C++\" &lt;&lt; std::endl;\n</code></pre> 123 <p>123123</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/","title":"Numpy & Pandas","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 244 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u5efa\u8bae\u5fd8\u8bb0\u4e86\u627e GPT</p> <p>\u6570\u636e\u5e93\u64cd\u4f5c -&gt; Pandas \u6570\u636e\u91cf\u5927\uff0c\u4e0d\u5173\u5fc3\u5217\u542b\u4e49 -&gt; Numpy</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#numpy","title":"Numpy","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#list","title":"List \u7684\u590d\u6742\u5ea6\u5206\u6790","text":"<p>Python \u7684 <code>list</code> \u662f\u7528 \u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4 \u5b58\u50a8\u5143\u7d20\u7684\uff1a</p> <ul> <li>\u5185\u90e8\u5b9e\u9645\u662f\u4e00\u4e2a \u6307\u9488\u6570\u7ec4\uff08\u5373 <code>PyObject**</code> \u6307\u9488\u6570\u7ec4\uff09\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u4e00\u4e2a Python \u5bf9\u8c61\u3002</li> <li>\u6240\u4ee5\u5217\u8868\u672c\u8eab\u5b58\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e0d\u662f\u5bf9\u8c61\u672c\u8eab\u3002</li> <li>\u6240\u4ee5 Python \u7684 list \u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u56e0\u4e3a\u5b58\u7684\u662f\u6307\u9488\uff09\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_1","title":"\u5c0f\u6280\u5de7","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_2","title":"\u9006\u7f6e","text":"Python<pre><code>a -&gt; a[:: -1]\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#io","title":"IO","text":"Python<pre><code>## \u4fdd\u5b58\u5230 outfile.npy \u6587\u4ef6\u4e0a\nnp.save('outfile.npy', a) \n\n## \u4fdd\u5b58\u5230 outfile2.npy \u6587\u4ef6\u4e0a\nnp.save('outfile2', a)\n\n## c \u4f7f\u7528\u4e86\u5173\u952e\u5b57\u53c2\u6570 sin_array\nnp.savez(\"runoob.npz\", a, b, sin_array = c)\nr = np.load(\"runoob.npz\")  \n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#pandas","title":"Pandas","text":"<p>NaN \u5360\u4f4d\u7b26: <code>np.nan</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#series","title":"Series","text":"<p>\u521d\u59cb\u5316 <code>s = pd.Series(data, index=index)</code> \uff08\u76f8\u5f53\u4e8e\u4e00\u5217 \uff09</p> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cdata \u652f\u6301\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b \uff08\u4e00\u7ef4\uff09\uff1a</p> <ul> <li>Python \u5b57\u5178</li> <li>\u591a\u7ef4\u6570\u7ec4</li> <li>\u6807\u91cf\u503c\uff08\u5982\uff0c5\uff09</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#dataframe","title":"DataFrame","text":"<p>DataFrame \u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u8f93\u5165\u6570\u636e\uff1a</p> <ul> <li>\u4e00\u7ef4 ndarray\u3001\u5217\u8868\u3001\u5b57\u5178\u3001Series \u5b57\u5178</li> <li>\u4e8c\u7ef4 numpy.ndarray</li> <li>\u7ed3\u6784\u591a\u7ef4\u6570\u7ec4\u6216\u8bb0\u5f55\u591a\u7ef4\u6570\u7ec4</li> <li>Series</li> <li>DataFrame</li> </ul> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_3","title":"\u7d22\u5f15","text":"<p><code>df[xxx]</code> \u8fd4\u56de xxx \u5217\u6784\u6210\u7684 Series</p> <p>\u4e0b\u9762\u4e09\u79cd\u65b9\u6cd5\u5747\u5e26\u6709\u884c index</p> Python<pre><code>## \u4e24\u5217\ndf[['B', 'A']]\n\n## \u4e24\u5217\uff0c\u53ef\u53d6\u7d22\u5f15 \uff08\u5c5e\u6027\uff09\ndf.loc[:; ['B', 'A']]\n\n## \u4e24\u5217\uff0c\u6309\u5217 id \u53d6  \uff08\u4f4d\u7f6e\uff09\ndf.iloc[:; 1:2]\n</code></pre> <p><code>.values</code> \u4e0d\u5e26\u884c index\uff0c\u6362\u4e3a\u884c id\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u503c\u4f20\u9012</p> <p>\u4ea4\u6362\u4e24\u5217\uff1a Python<pre><code>df[['B', 'A']] = df[['A', 'B']]                   ## \u53ef\u4ee5\u4ea4\u6362\ndf.loc[:, ['B', 'A']] = df[['A', 'B']].values     ## \u4e0d\u80fd\u4ea4\u6362\ndf.loc[:, ['B', 'A']] = df[['A', 'B']]            ## \u53ef\u4ee5\u4ea4\u6362\n</code></pre></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_4","title":"\u4e24\u5f20\u8868\u4e4b\u95f4\u7684\u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#concat","title":"<code>concat</code>","text":"Python<pre><code>pd.concat(\n    objs,                   # \u5217\u8868\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\n    axis=0,                 # \u65b9\u5411\uff0c0 \u7ad6\u7740\u5408\u5e76\uff0c1 \u6a2a\u7740\u5408\u5e76\n    join='outer',\n    ignore_index=False,     # \u4e0d\u8003\u8651 index\uff0c\u5408\u5e76\u540e\u91cd\u65b0\u7f16\u53f7\n    keys=None,              # \u5bf9 objs \u6dfb\u52a0\u5217\u5173\u952e\u5b57\uff0c\u76f8\u5f53\u4e8e\u4e24\u5c42\n    levels=None,\n    names=None,\n    verify_integrity=False,\n    copy=True               # \u6df1\u6d45\u62f7\u8d1d\uff0c\u5c11\u7528\n)\n\n# \u7528\u4e8e\u884c\u5408\u5e76\uff0c\u6309 df1 \u7684 index \u8fdb\u884c\u5408\u5e76 (outer \u5408\u5e76), \u4f1a\u51fa\u73b0 NaN\npd.concat([df1, df2.reindex(df1.index)], axis=1)  \n\n# \u5408\u5e76\u540e\u4ec5\u4fdd\u7559\u5171\u6709\u7684\u884c\uff0c\u76f8\u5f53\u4e8e\u4ea4\u96c6\npd.concat([df1, df2], axis=1, join='inner')\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#merge","title":"<code>merge</code>","text":"Python<pre><code>pd.merge(\n    left,\n    right,\n    how='inner',        # left, right, inner, outer\n    on=None,\n    left_on=None,\n    right_on=None,\n    left_index=False, \n    right_index=False, \n    sort=True,\n    suffixes=('_x','_y'),\n    copy=True, \n    indicator=False,\n    validate=None\n)\n\npd.merge(df1, df2, on='key')            # \u6309 key \u5217\u5408\u5e76\npd.merge(df1, df2, on=['key1', 'key2']) # \u6309\u4e24\u5217\u5408\u5e76\uff0c\u4fdd\u7559\u4e24\u5217\u5b8c\u5168\u5bf9\u5e94\u7684\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#join","title":"<code>join</code>","text":"Python<pre><code>res = left.join(right)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_5","title":"\u5355\u5f20\u8868\u683c\u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#groupby","title":"<code>groupby</code>","text":"Python<pre><code>df.groupby('Column_1')    # \u6bcf\u7ec4\u4e00\u4e2a DataFrame\n\n# groupby \u6709\u52a9\u4e8e\u5e76\u884c\u64cd\u4f5c\ndf.groupby('Column_1').sum()\ndf.groupby('Column_1').mean()\n# \u5206\u5217\u4e0d\u540c\u64cd\u4f5c\ndf.groupby('Column_1')['Column_2'].sum()\n\n# apply \u51fd\u6570\uff0cfunc \u4f5c\u7528\u5728\u6bcf\u4e00\u884c\u4e0a\uff0c\u4e0e sum \u4f5c\u7528\u65b9\u5f0f\u76f8\u540c\ndf.groupby('Column_1').apply(func)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_6","title":"\u4e22\u5931\u6570\u636e\u5904\u7406","text":"<p>\u6ce8\u610f\uff1a</p> Python<pre><code>np.nan == np.nan    # False\nnp.inf == np.inf    # True\n\nnp.ones(2) / np.zeros(2)    # array([inf, inf])\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#io_1","title":"IO","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/","title":"MLP\u4e0eCNN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 181 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#mlp-pytorch","title":"MLP (\u591a\u5c42\u795e\u7ecf\u7f51\u7edc) \u7684 PyTorch \u5b9e\u73b0","text":"Python<pre><code>class Net(nn.Module):\n\n    def __init__(self):\n        super(Net, self).__init__()\n        self.l1 = nn.Linear(784, 520)\n        self.l2 = nn.Linear(520, 320)\n        self.l3 = nn.Linear(320, 240)\n        self.l4 = nn.Linear(240, 120)\n        self.l5 = nn.Linear(120, 10)\n\n    def forward(self, x):\n        x = x.view(-1, 784)  # Flatten the data (n, 1, 28, 28)-&gt; (n, 784)\n        x = F.relu(self.l1(x))\n        x = F.relu(self.l2(x))\n        x = F.relu(self.l3(x))\n        x = F.relu(self.l4(x))\n        return self.l5(x)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#cnn","title":"CNN (\u5377\u79ef\u795e\u7ecf\u7f51\u7edc)","text":"<p>\u5728PyTorch\u4e2d\uff0c\u5377\u79ef\u5c42\u6709 Conv1d\u3001Conv2d\u3001Conv3d\uff0c \u8fd9\u4e09\u4e2a\u5206\u522b\u5bf9\u5e94\u7740\u4e00\u7ef4\u5377\u79ef\u3001\u4e8c\u7ef4\u5377\u79ef\u3001\u4e09\u7ef4\u5377\u79ef\uff0c\u7136\u540e\u5b83\u4eec\u7684\u8f93\u5165\u6570\u636e\u7684\u683c\u5f0f\u5206\u522b\u662f - Conv1d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iW) - Conv2d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iH, iW) - Conv3d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iT, iH, iW)</p> \u76f4\u63a5\u6784\u5efa\u5377\u79ef\u7528 <code>nn</code> \u6784\u5efa\u5377\u79ef\u6a21\u578b Python<pre><code># \u4f7f\u7528PyTorch\u7684\u51fd\u6570\u6765\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\n\nx = Variable(torch.Tensor(range(9)))\nx=x.view(1,1,3,3)\nweights = Variable(torch.Tensor([0,1,2,3]))\nweights = weights.view(1,1,2,2)\nbias = Variable(torch.Tensor([1]))\n\ny=F.conv2d(x, weights,bias, padding=0)\n</code></pre> Python<pre><code>x = Variable(torch.Tensor(range(9)))\nx = x.view(1,1,3,3)\n\nweights = torch.Tensor([0,1,2,3]).view(1,1,2,2)\nweights = torch.nn.Parameter(weights)\nbias = torch.nn.Parameter(torch.Tensor([1]))\n\n# model\nmodel = torch.nn.Conv2d(in_channels=x.data.size()[1], out_channels=x.data.size()[1], kernel_size=(2,2), stride=1 )\n\n# \u8bbe\u7f6e\u8be5\u5377\u79ef\u5c42\u8fc7\u6ee4\u5668\u5f62\u72b6 (out_channels, in_channels, kernel_size[0], kernel_size[1]) \u548c \u6743\u91cd\u6570\u503c\nmodel.weight = weights\nmodel.bias = bias\n\n# \u6c42\u89e3X\ny = m(x)\n</code></pre> <p>\u6a21\u578b\u6784\u5efa\uff1a</p> Python<pre><code>#%%\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Net(nn.Module):\n\n    def __init__(self):\n        super(Net, self).__init__()\n        # 1 input image channel, 6 output channels, 3x3 square convolution\n        # kernel\n        self.conv1 = nn.Conv2d(1, 6, 3)\n        self.conv2 = nn.Conv2d(6, 16, 3)\n        # an affine operation: y = Wx + b\n        self.fc1 = nn.Linear(16 * 6 * 6, 120)  # 6*6 from image dimension \n        self.fc2 = nn.Linear(120, 84)\n        self.fc3 = nn.Linear(84, 10)\n\n    def forward(self, x):\n        # Max pooling over a (2, 2) window\n        x = F.max_pool2d(F.relu(self.conv1(x)), (2, 2))\n        # If the size is a square you can only specify a single number\n        x = F.max_pool2d(F.relu(self.conv2(x)), 2)\n        x = x.view(-1, self.num_flat_features(x))\n        x = F.relu(self.fc1(x))\n        x = F.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n\n    def num_flat_features(self, x):\n        size = x.size()[1:]  # all dimensions except the batch dimension\n        num_features = 1\n        for s in size:\n            num_features *= s\n        return num_features\n</code></pre> <p>\u8be5\u6a21\u578b\u4e3a </p> Text Only<pre><code>Net(\n  (conv1): Conv2d(1, 6, kernel_size=(3, 3), stride=(1, 1))\n  (conv2): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))\n  (fc1): Linear(in_features=576, out_features=120, bias=True)\n  (fc2): Linear(in_features=120, out_features=84, bias=True)\n  (fc3): Linear(in_features=84, out_features=10, bias=True)\n)\n</code></pre> <p>\u6ce8\u610f</p> <p><code>torch.nn</code>\u53ea\u652f\u6301\u5c0f\u6279\u91cf\u8f93\u5165,\u6574\u4e2atorch.nn\u5305\u90fd\u53ea\u652f\u6301\u5c0f\u6279\u91cf\u6837\u672c,\u800c\u4e0d\u652f\u6301\u5355\u4e2a\u6837\u672c</p> <p>\u4f8b\u5982,<code>nn.Conv2d</code>\u5c06\u63a5\u53d7\u4e00\u4e2a4\u7ef4\u7684\u5f20\u91cf,\u6bcf\u4e00\u7ef4\u5206\u522b\u662f\\(nSamples\\times nChannels\\times Height\\times Width\\)(\u6837\u672c\u6570\u901a\u9053\u6570\u9ad8*\u5bbd). \u5982\u679c\u4f60\u6709\u5355\u4e2a\u6837\u672c,\u53ea\u9700\u4f7f\u7528<code>input.unsqueeze(0)</code>\u6765\u6dfb\u52a0\u5176\u5b83\u7684\u7ef4\u6570.</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#pooling","title":"Pooling (\u6c60\u5316)","text":"<p>\u4e0d\u505a\u4ecb\u7ecd</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#alexnet","title":"\u5e94\u7528\uff1aAlexNet \u7684\u6784\u5efa","text":"Python<pre><code>class AlexNet(nn.Module):\n\n    def __init__(self, num_classes: int = 1000) -&gt; None:\n        super(AlexNet, self).__init__()\n        self.features = nn.Sequential(\n            nn.Conv2d(3, 64, kernel_size=11, stride=4, padding=2),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n            nn.Conv2d(64, 192, kernel_size=5, padding=2),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n            nn.Conv2d(192, 384, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(384, 256, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(256, 256, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n        )\n        self.avgpool = nn.AdaptiveAvgPool2d((6, 6))\n        self.classifier = nn.Sequential(\n            nn.Dropout(),\n            nn.Linear(256 * 6 * 6, 4096),\n            nn.ReLU(inplace=True),\n            nn.Dropout(),\n            nn.Linear(4096, 4096),\n            nn.ReLU(inplace=True),\n            nn.Linear(4096, num_classes),\n        )\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        x = self.features(x)\n        x = self.avgpool(x)\n        x = torch.flatten(x, 1)\n        x = self.classifier(x)\n        return x\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/","title":"RNN\u4e0eDQN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 14 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/#rnn","title":"RNN (\u5faa\u73af\u795e\u7ecf\u7f51\u7edc)","text":"Python<pre><code>class Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.rnn = nn.RNN(input_size=input_size,\n                          hidden_size=hidden_size, batch_first=True)\n    def forward(self, hidden, x):\n        # Reshape input (batch first)\n        x = x.view(batch_size, sequence_length, input_size)\n        # Propagate input through RNN\n        # Input: (batch, seq_len, input_size)\n        # hidden: (num_layers * num_directions, batch, hidden_size)\n        out, hidden = self.rnn(x, hidden)\n        return hidden, out.view(-1, num_classes)\n    def init_hidden(self):\n        # Initialize hidden and cell states\n        # (num_layers * num_directions, batch, hidden_size)\n        return Variable(torch.zeros(num_layers, batch_size, hidden_size))\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/#drl","title":"DRL (\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60)","text":"<p>\u76ee\u6807 </p> \\[ \\max_\\pi \\mathbb{E}_\\pi \\left[\\sum_{t = 1}^\\infty \\gamma^tr_t\\right] \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/","title":"Tensors \u5165\u95e8","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 307 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u539f\u6587\u6765\u81ea\uff1aDeep Learning with PyTorch: A 60 Minute Blitz</p> <p>\u7531\u4e8e\u6211\u4eec\u96be\u4ee5\u63d0\u53d6\u9ad8\u5c42\u6b21\u3001\u62bd\u8c61\u7684\u7279\u5f81\u6765\u8868\u8fbe\u590d\u6742\u8868\u793a\uff0c\u56e0\u6b64\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor","title":"Tensor \u7684\u57fa\u672c\u8ba1\u7b97","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor_1","title":"\u521d\u59cb\u5316 Tensor","text":"<p>\u76f4\u63a5\u521b\u5efa</p> Python<pre><code>shape = (2, 3, )\nrand_tensor = torch.rand(shape)\nones_tensor = torch.ones(shape)\nzeros_tensor = torch.zeros(shape)\n</code></pre> <p>\u4ece\u5176\u5b83\u6570\u636e\u7c7b\u578b\u521b\u5efa</p> Python<pre><code>data = [[1, 2],[3, 4]]\n# \u76f4\u63a5\u4ece\u6570\u636e\u521b\u5efa\nx_data = torch.tensor(data)\n\n# \u4ece Numpy \u521b\u5efa\nnp_array = np.array(data)\nx_np = torch.from_numpy(np_array)\n</code></pre> <p>\u4ece Tensor \u521b\u5efa</p> Python<pre><code>x_ones = torch.ones_like(x_data) # \u7ef4\u5ea6\u76f8\u540c\u7684\u5168 1 \u77e9\u9635\nx_rand = torch.rand_like(x_data, dtype=torch.float) # \u6539\u53d8 x_data \u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u751f\u6210\u540c\u7ef4\u5ea6\u7684\u968f\u673a Tensor\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor_2","title":"Tensor \u7684\u76f8\u5173\u64cd\u4f5c","text":"<p>\u5e38\u7528 <code>my_tensor.shape</code>, <code>my_tensor.dtype</code>, <code>my_tensor.device</code> \u67e5\u770b\u5176\u5c5e\u6027</p> <p>\u6539\u53d8\u5f62\u72b6 </p> Python<pre><code>x2 = x1.view(2, 3)\nx1.reshape_(2, 3)   # \u7528 none \u6216\u8005 -1 \u6307\u5b9a\u81ea\u52a8\u8ba1\u7b97\u7684\u7ef4\u5ea6\n</code></pre> <p>\u6ce8\u610f</p> <p>\u539f\u5730\u64cd\u4f5c\u867d\u7136\u4f1a\u8282\u7701\u8bb8\u591a\u7a7a\u95f4\uff0c\u4f46\u662f\u7531\u4e8e\u4f1a\u7acb\u523b\u6e05\u9664\u5386\u53f2\u8bb0\u5f55\u6240\u4ee5\u5728\u8ba1\u7b97\u5bfc\u6570\u65f6\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528</p> <p>\u8ba1\u7b97 <code>+ - * / @</code></p> <p>\u5177\u4f53\u76f8\u5173\u8ba1\u7b97\u89c1 PyTorch \u6587\u6863 \u548c torch.Tensor API</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#autograd","title":"Autograd \u81ea\u52a8\u6c42\u5bfc","text":"<p>\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u4ecetorchvision\u52a0\u8f7d\u4e00\u4e2a\u9884\u5148\u8bad\u7ec3\u597d\u7684resnet18\u6a21\u578b\uff0c\u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u6570\u636etensor\u6765\u8868\u793a\u4e00\u67093\u4e2a\u901a\u9053\u3001\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u4e3a64\u7684\u56fe\u50cf\uff0c\u5176\u5bf9\u5e94\u7684\u6807\u7b7e\u521d\u59cb\u5316\u4e3a\u4e00\u4e9b\u968f\u673a\u503c\u3002</p> Python<pre><code>import torch, torchvision\nmodel = torchvision.models.resnet18(weights=True)\ndata = torch.rand(1, 3, 64, 64)\nlabels = torch.rand(1, 1000)\n\nprediction = model(data) # \u524d\u5411\u4f20\u64ad\n\nloss = (prediction - labels).sum()\nloss.backward() # \u53cd\u5411\u4f20\u64ad\n</code></pre> <p>\u8c03\u7528.backward()\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u6709\u68af\u5ea6\u3002\u6b64\u5f20\u91cf\u7684\u68af\u5ea6\u5c06\u7d2f\u79ef\u5230.grad\u5c5e\u6027\u4e2d\u3002</p> <p>\u63a5\u7740\uff0c\u6211\u4eec\u52a0\u8f7d\u4e00\u4e2a\u4f18\u5316\u5668\uff0c\u5728\u672c\u4f8b\u4e2d\uff0cSGD\u7684\u5b66\u4e60\u7387\u4e3a0.01\uff0cmomentum \u4e3a0.9\u3002\u6211\u4eec\u5728\u4f18\u5316\u5668\u4e2d\u6ce8\u518c\u6a21\u578b\u7684\u6240\u6709\u53c2\u6570\u3002\u8c03\u7528<code>.step()</code>\u6765\u6267\u884c\u68af\u5ea6\u4e0b\u964d\uff0c\u4f18\u5316\u5668\u901a\u8fc7\u5b58\u50a8\u5728<code>.grad</code>\u4e2d\u7684\u68af\u5ea6\u6765\u8c03\u6574\u6bcf\u4e2a\u53c2\u6570\u3002</p> Python<pre><code>optim = torch.optim.SGD(model.parameters(), lr=1e-2, momentum=0.9)\noptim.step() #\u68af\u5ea6\u4e0b\u964d\n</code></pre> \u624b\u52a8\u6c42\u5bfc (\u624b\u5199\u4e00\u4e2a)\u81ea\u52a8\u6c42\u5bfc Python<pre><code># Training Data\nx_data = [1.0, 2.0, 3.0]\ny_data = [2.0, 4.0, 6.0]\n\nw = 1.0  # a random guess: random value\n\n# our model forward pass\ndef forward(x):\n    return x * w\n\n# Loss function\ndef loss(x, y):\n    y_pred = forward(x)\n    return (y_pred - y) * (y_pred - y)\n\n# compute gradient\ndef gradient(x, y):  # d_loss/d_w\n    return 2 * x * (x * w - y)\n\n# Before training\nprint(\"Prediction (before training)\",  4, forward(4))\n\n# Training loop\nfor epoch in range(10):\n    for x_val, y_val in zip(x_data, y_data):\n        # Compute derivative w.r.t to the learned weights\n        # Update the weights\n        # Compute the loss and print progress\n        grad = gradient(x_val, y_val)\n        w = w - 0.01 * grad\n        print(\"\\tgrad: \", x_val, y_val, round(grad, 2))\n        l = loss(x_val, y_val)\n    print(\"progress:\", epoch, \"w=\", round(w, 2), \"loss=\", round(l, 2))\n\n# After training\nprint(\"Predicted score (after training)\",  \"4 hours of studying: \", forward(4))\n</code></pre> Python<pre><code>import torch\n\nx_data = torch.tensor([1.0, 2.0, 3.0])\ny_data = torch.tensor([2.0, 4.0, 6.0])\nw = torch.tensor([1.0], requires_grad=True)\n\n# our model forward pass\ndef forward(x):\n    return x * w\n\n# Loss function\ndef loss(y_pred, y_val):\n    return (y_pred - y_val) ** 2\n\n# Before training\nprint(\"Prediction (before training)\",  4, forward(4).item())\n\n# Training loop\nfor epoch in range(10):\n    for x_val, y_val in zip(x_data, y_data):\n        y_pred = forward(x_val) # 1) Forward pass\n        l = loss(y_pred, y_val) # 2) Compute loss\n        l.backward() # 3) Back propagation to update weights\n        print(\"\\tgrad: \", x_val, y_val, w.grad.item())\n        w.data = w.data - 0.01 * w.grad.item()\n\n        # Manually zero the gradients after updating weights\n        w.grad.data.zero_()\n\n    print(f\"Epoch: {epoch} | Loss: {l.item()}\")\n\n# After training\nprint(\"Prediction (after training)\",  4, forward(4).item())\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/","title":"\u7ebf\u6027\u56de\u5f52\u548c\u903b\u8f91\u56de\u5f52","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 67 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>PyTorch \u7684\u7b80\u5355\u5e94\u7528: \u4f7f\u7528 nn</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/#_1","title":"\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6784\u5efa","text":"Python<pre><code># \u8fd8\u662f\u4f7f\u7528\u4e0a\u8ff0\u7684X\u548cY\n\nX = Variable(x) # PyTorch\u4e2d\u7684 Variable \u9ed8\u8ba4\u662f\u5141\u8bb8\u81ea\u52a8\u6c42\u5bfc\u7684\uff0c\u6240\u4ee5 requires_grad=True \u53ef\u4ee5\u4e0d\u52a0\nY = Variable(y) # \u540c\u4e0a\n\n####     \u8d85\u53c2\u6570     ####\nEPOCH = 100 # \u8fed\u4ee3\u6b21\u6570\nlearning_rate = 0.001 # \u5b66\u4e60\u901f\u7387\n\n# \u5b9a\u4e49\u6a21\u578b\n# \u4f7f\u7528 nn\u5305\u6765\u5b9a\u4e49\u6211\u4eec\u7684\u6a21\u578b\uff0c\u8fd9\u91cc\u7684Linear\u8868\u793a\u7684\u662f\u7ebf\u6027\u6a21\u578b\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316\u8fd9\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\n# \u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u662f: in_features, out_features \u4e5f\u5c31\u662f\u8f93\u51fa\u7279\u5f81\u548c\u8f93\u51fa\u7279\u5f81\n# \u9ed8\u8ba4\u4f1a\u5e2e\u6211\u4eec\u521d\u59cb\u5316\u6743\u91cd\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u521d\u59cb\u5316\u6743\u91cd\uff08\u8fd9\u91cc\u6682\u65f6\u4e0d\u8bf4\uff09\nmodel = nn.Linear(1, 1)\n\n# \u5b9a\u4e49\u635f\u5931\u51fd\u6570\n# \u6211\u4eec\u4f7f\u7528 Mean Square Loss\u4f5c\u4e3a\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\n# size_average=False\u8868\u793a\u6211\u4eec\u9700\u8981\u7684\u662f\u603b\u7684\u8bef\u5dee\uff0c\u4e0d\u9700\u8981\u53bb\u5e73\u5747\u8bef\u5dee\nsquare_loss = nn.MSELoss(size_average=False)\n\n# \u5b9a\u4e49\u4f18\u5316\u65b9\u6cd5\n# \u4ee5\u524d\uff0c\u6211\u4eec\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\u90fd\u662f\u6211\u4eec\u624b\u5199\u7684\uff0c\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528nn\u4e3a\u6211\u4eec\u5c01\u88c5\u597d\u7684\u3002\n# \u4f7f\u7528optim\u5305\u6765\u5b9a\u4e49\u4f18\u5316\u7b97\u6cd5\uff0c\u53ef\u4ee5\u81ea\u52a8\u7684\u5e2e\u6211\u4eec\u5bf9\u6a21\u578b\u7684\u53c2\u6570\u8fdb\u884c\u68af\u5ea6\u66f4\u65b0\n# model.parameters()\u4f1a\u81ea\u52a8\u7684\u4e3a\u6211\u4eec\u5c06\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u63d0\u53d6\u51fa\u6765\u3002\u7136\u540e\u6211\u4eec\u544a\u8bc9\u4f18\u5316\u5668\uff0c\u5b83\u4eec\u662f\u6211\u4eec\u8981\u66f4\u65b0\u7684\u53c2\u6570\u3002\n# lr\u8868\u793a\u7684\u662f\u5b66\u4e60\u901f\u7387\noptimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)\n\n####     \u5f00\u59cb\u8bad\u7ec3     ####\nfor t in range(EPOCH):\n    # \u6ca1\u6709\u53d8\u5316\uff0c\u8fd8\u662f\u8fd9\u6837\u4f7f\u7528\uff1a\u5bf9x\u8fdb\u884c\u9884\u6d4b\n    y_hat = model(X)\n\n    # \u6ca1\u6709\u53d8\u5316\uff0c\u8ba1\u7b97\u635f\u5931\n    loss = square_loss(y_hat, Y)\n\n    # \u6253\u5370\u635f\u5931\n    if (t+1) % 20 == 0:\n        print(loss)\n    # \u5728\u6211\u4eec\u53cd\u5411\u6c42\u5bfc\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u6e05\u7a7a\u79ef\u7d2f\u7684\u68af\u5ea6\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f torch.optim\u5305\u4e2d\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\n    # \u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6765\u81ea\u52a8\u7684\u6e05\u7a7a\u79ef\u7d2f\u7684\u68af\u5ea6\n    optimizer.zero_grad()\n\n    # \u53cd\u5411\u6c42\u5bfc\uff0c\u4e5f\u6ca1\u53d8\n    loss.backward()\n\n    # \u53cd\u5411\u6c42\u5bfc\u7ed3\u675f\uff0c\u6211\u4eec\u5f00\u59cb\u66f4\u65b0\u68af\u5ea6\uff0c\u4ee5\u524d\u66f4\u65b0\u68af\u5ea6\u9700\u8981\u624b\u52a8\u8f93\u5165w1.grad.data\uff0c\u73b0\u5728\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\uff01\n    optimizer.step()\n\n# \u753b\u56fe\nplt.scatter(X.data.numpy(), Y.data.numpy())\nplt.plot(X.data.numpy(), y_hat.data.numpy(), 'r-', lw = 4)\nplt.show()\n\nprint(\"\u5b9e\u9645\u7684\u53c2\u6570w\u662f\uff1a 5 \\n\" )\nprint(\"\u9884\u6d4b\u7684\u53c2\u6570w\u662f\", parameters[\"W\"])\nprint(\"\u9884\u6d4b\u7684\u5e38\u6570\u9879\u662f\uff1a\" , parameters[\"b\"])\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/#_2","title":"\u903b\u8f91\u56de\u5f52","text":"<p>\u6ce8\u610f\uff1a\u662f\u4e00\u4e2a\u5206\u7c7b\u6a21\u578b\uff0c\u5728\u7ebf\u6027\u56de\u5f52\u7684\u57fa\u7840\u4e0a\u589e\u52a0 Sigmoid \u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u8868\u793a\u6982\u7387\u3002</p> \\[ \\sigma(x) = \\frac{1}{1 + \\mathrm{e}^{-x}} \\] <p>\u4f7f\u7528 BCE Loss\uff0c</p> \\[ loss = - \\frac{1}{N}\\sum_{n = 1}^N \\left(y_n \\log \\hat{y_n} + (1 - y_n) \\log (1 - \\hat{y_n}))\\right), \\quad y_n \\in \\{0, 1\\} \\] <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u636e</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528</p> Python<pre><code># Define Logistic Regression model\nclass LogisticRegression(nn.Module):\n    def __init__(self, input_dim):\n        super(LogisticRegression, self).__init__()\n        self.linear = nn.Linear(input_dim, 1)\n\n    def forward(self, x):\n        return torch.sigmoid(self.linear(x))\n\n# Initialize model\nmodel = LogisticRegression(input_dim=2)\n\n# Loss and optimizer\ncriterion = nn.BCELoss()  # Binary Cross Entropy Loss\noptimizer = torch.optim.SGD(model.parameters(), lr=0.1)\n\n# Training loop\nepochs = 1000\nlosses = []\n\nfor epoch in range(epochs):\n    # Forward pass\n    outputs = model(X_tensor)\n    loss = criterion(outputs, y_tensor)\n    losses.append(loss.item())\n\n    # Backward pass and optimize\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\n\n    if (epoch+1) % 100 == 0:\n        print(f'Epoch [{epoch+1}/{epochs}], Loss: {loss.item():.4f}')\n\n# Plotting the decision boundary\nw = model.linear.weight.detach().numpy()[0]\nb = model.linear.bias.detach().numpy()\n\nx_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1\ny_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1\nxx, yy = np.meshgrid(np.linspace(x_min, x_max, 100),\n                     np.linspace(y_min, y_max, 100))\nZ = model(torch.tensor(np.c_[xx.ravel(), yy.ravel()], dtype=torch.float32)).detach().numpy()\nZ = Z.reshape(xx.shape)\n\nplt.figure(figsize=(10, 6))\nplt.contourf(xx, yy, Z, levels=[0, 0.5, 1], cmap=plt.cm.RdYlBu, alpha=0.6)\nplt.scatter(r0[:, 0], r0[:, 1], c='blue', label='Class 0')\nplt.scatter(r1[:, 0], r1[:, 1], c='red', label='Class 1')\nplt.contour(xx, yy, Z, levels=[0.5], colors='black')\nplt.title('Logistic Regression Decision Boundary')\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.legend()\nplt.show()\n\n# Plot training loss\nplt.figure(figsize=(10, 4))\nplt.plot(losses)\nplt.title('Training Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.show()\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230\u5212\u5206</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/","title":"K-Means \u805a\u7c7b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 560 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u975e\u76d1\u7763\u5b66\u4e60\u7684\u805a\u7c7b\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_1","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u5b83\u6bcf\u6b21\u90fd\u4f1a\u6839\u636e\u6570\u636e\u7684\u5206\u5e03\u53bb\u5bfb\u627e\u805a\u7c7b\u4e2d\u5fc3\u3002\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5206\u7c7b\uff0c\u6bcf\u4e00\u4e2a\u70b9\u4e0e\u81ea\u5df1\u7c7b\u522b\u7684\u4e2d\u5fc3\u5728\u8ddd\u79bb\u4e0a\u90fd\u662f\u6700\u8fd1\u7684\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#k-means","title":"K-means \u7b97\u6cd5\uff1a\u6700\u5927\u671f\u671b","text":"<p>K-Means \u662f\u4e00\u4e2a\u7075\u6d3b\u8fd0\u7528\u4e86\u6700\u5927\u671f\u671b\u7684\u65b9\u6cd5\u53bb\u83b7\u5f97\u89e3\u51b3\u65b9\u6cd5\u7684\u7b97\u6cd5\u3002 \u6700\u5927\u671f\u671b\u662f\u4e00\u4e2a\u7531\u4e0b\u9762\u7684\u4e24\u6b65\u6784\u6210\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u731c\u6d4b\u7c7b\u522b\u7684\u4e2d\u5fc3  </li> <li>\u91cd\u590d\u4e0b\u9762\u7684\u6b65\u9aa4\u76f4\u5230\u6536\u655b       A. \u5c06\u6570\u636e\u70b9\u5f52\u4e3a\u6700\u8fd1\u7684\u4e2d\u5fc3\u6240\u5bf9\u5e94\u7684\u5206\u7c7b       B. \u6839\u636e\u8be5\u7c7b\u522b\u7684\u73b0\u6709\u7684\u6570\u636e\u70b9\u7684\u5206\u5e03\uff0c\u66f4\u65b0\u8be5\u7c7b\u522b\u4e2d\u5fc3  </li> </ol> <p>\u5173\u4e8e\u6536\u655b\u6027</p> <p>KMeans\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u6536\u655b\u7684\u3002\u6240\u4ee5\uff0cscikit-learn\u521d\u59cb\u5316\u4e86\u5f88\u591a\u968f\u673a\u503c\uff0c\u53bb\u5bfb\u627e\u6700\u4f18\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_2","title":"\u5e94\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_3","title":"\u624b\u5199\u8bc6\u522b","text":"Python<pre><code>est = KMeans(n_clusters=10)\nclusters = est.fit_predict(digits.data)\n</code></pre> <p>\u663e\u793a 10 \u4e2a\u5206\u7c7b\u51fa\u7684\u4e2d\u5fc3\u6709</p> Python<pre><code>fig = plt.figure(figsize=(8, 3))\nfor i in range(10):\n    ax = fig.add_subplot(2, 5, 1 + i, xticks=[], yticks=[])\n    ax.imshow(est.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)\n\nplt.show()\n</code></pre> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u6570\u5b57\u7684\u987a\u5e8f\u88ab\u6539\u53d8\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528</p> Python<pre><code>from scipy.stats import mode\n\nlabels = np.zeros_like(clusters)\nfor i in range(10):\n    mask = (clusters == i)\n    labels[mask] = mode(digits.target[mask])[0]\n</code></pre> <p>\u6839\u636e\u805a\u7c7b\u7ed3\u679c <code>clusters</code>\uff0c\u5c06\u6bcf\u4e2a\u805a\u7c7b\u7c07\u7f16\u53f7\uff08\u5982 0~9\uff09\u6620\u5c04\u4e3a\u771f\u5b9e\u6807\u7b7e\u4e2d\u51fa\u73b0\u6700\u591a\u7684\u7c7b\u522b\uff0c\u4ece\u800c\u83b7\u5f97\u6b63\u786e\u7684\u5206\u7c7b\u3002</p> <p>\u5c06\u5176\u4e0e PCA \u5f97\u5230\u7684\u6807\u7b7e\u5bf9\u6bd4</p> Python<pre><code>from sklearn.decomposition import PCA\n\nX = PCA(2).fit_transform(digits.data)\n\nkwargs = dict(cmap = plt.cm.get_cmap('rainbow', 10),\n              edgecolor='none', alpha=0.6)\nfig, ax = plt.subplots(1, 2, figsize=(8, 4))\nax[0].scatter(X[:, 0], X[:, 1], c=labels, **kwargs)\nax[0].set_title('learned cluster labels')\n\nax[1].scatter(X[:, 0], X[:, 1], c=digits.target, **kwargs)\nax[1].set_title('true labels')\n\nfor ax in ax:\n    ax.axis('off')\n\nplt.show()\n</code></pre> <p></p> <p>\u7ed8\u5236\u6df7\u6dc6\u77e9\u9635\u6709</p> Python<pre><code>plt.imshow(confusion_matrix(digits.target, labels),\n           cmap='Blues', interpolation='nearest')\nplt.colorbar()\nplt.grid(False)\nplt.ylabel('true')\nplt.xlabel('predicted')\n\nplt.show()\n</code></pre> <p></p> <p>\u518d\u4e00\u6b21\u8bf4\u660e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u7684\u65e0\u76d1\u7763\u7684\u4f30\u8ba1\uff0c\u5b83\u8fbe\u5230\u4e8680%\u7684\u6b63\u786e\u7387\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_4","title":"\u989c\u8272\u538b\u7f29","text":"<p>\u5047\u8bbe\u6709\u4e00\u5e45\u62e5\u6709\u767e\u4e07\u79cd\u989c\u8272\u7684\u56fe\u7247\u3002\u5728\u5927\u90e8\u5206\u7684\u56fe\u7247\u4e2d\uff0c\u5927\u91cf\u7684\u989c\u8272\u4e0d\u4f1a\u88ab\u4f7f\u7528\uff0c\u6216\u8005\u5f88\u5927\u4e00\u90e8\u5206\u7684\u50cf\u7d20\u62e5\u6709\u76f8\u4f3c\u6216\u8005\u76f8\u540c\u7684\u989c\u8272\u3002</p> <p>\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c</p> Python<pre><code>from sklearn.datasets import load_sample_image\nchina = load_sample_image(\"china.jpg\")\n\nX = (china / 255.0).reshape(-1, 3)\n</code></pre> <p>\u6211\u4eec\u73b0\u5728\u6709 273,280 \u4e2a3\u7ef4\u6570\u636e\u70b9 (RGB)\u3002</p> <p>\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u8fd0\u7528KMeans\u53bb\u538b\u7f29\\(256^3\\)\u79cd\u989c\u8272\uff0c\u8ba9\u989c\u8272\u7684\u79cd\u7c7b\u603b\u6570\u51cf\u5c0f\uff08\u6bd4\u5982\u51cf\u523032\u8272\uff09\u3002\u6211\u4eec\u60f3\u5728\u6240\u6709\u7684\u6570\u636e\u4e2d\u5bfb\u627e\\(N_{color}\\)\u4e2a\u7c7b\u522b\u4e2d\u5fc3\uff0c\u7136\u540e\u53bb\u7528\u8fd932\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u53bb\u521b\u5efa\u4e00\u526f\u65b0\u7684\u56fe\u50cf\uff0c\u5728\u8fd9\u4e2a\u65b0\u7684\u56fe\u50cf\u4e2d\uff0c\u539f\u6709\u56fe\u50cf\u6570\u636e\u4e2d\u7684\u989c\u8272\u4f1a\u6839\u636e\u5c31\u8fd1\u539f\u5219\u88ab\u6700\u8fd1\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u989c\u8272\u4ee3\u66ff\u3002</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528<code>MiniBatchKMeans</code>\uff0c\u4e00\u4e2a\u66f4\u5b8c\u5907\uff0c\u9002\u7528\u4e8e\u66f4\u5927\u7684\u6570\u636e\u96c6\u7684\u9884\u6d4b\u5668\uff1a</p> Python<pre><code>from sklearn.cluster import MiniBatchKMeans\n\nn_colors = 32\n\nX = (china / 255.0).reshape(-1, 3)\n\nmodel = MiniBatchKMeans(n_colors)\nlabels = model.fit_predict(X)\ncolors = model.cluster_centers_\nnew_image = colors[labels].reshape(china.shape)\nnew_image = (255 * new_image).astype(np.uint8)\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u989c\u8272\u7684\u6570\u91cf\u51cf\u5c11\u4e86\uff0c\u4f46\u662f\u4ecd\u65e7\u4fdd\u7559\u4e86\u56fe\u7247\u7684\u6574\u4f53\u4fe1\u606f\u3002</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 667 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u975e\u76d1\u7763\u5b66\u4e60\u7684\u964d\u7ef4\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_1","title":"\u57fa\u672c\u539f\u7406","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_2","title":"\u5904\u7406\u8fc7\u7a0b","text":"<p>\u5bf9\u8fd9\u6837\u7684\u6570\u636e\u96c6</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e00\u7ec4\u6570\u636e\u6709\u4e00\u4e2a\u660e\u663e\u7684\u8d8b\u52bf\u548c\u8d70\u5411\u3002\u4e3b\u6210\u5206\u5206\u6790(PCA)\u505a\u7684\u5c31\u662f\u53bb\u5bfb\u627e\u8fd9\u4e00\u7ec4\u6570\u636e\u4e2d\u7684\u6700\u57fa\u672c\u7684\u8f74\uff0c\u7136\u540e\u53bb\u89e3\u91ca\u8fd9\u4e9b\u8f74\u662f\u600e\u6837\u5f71\u54cd\u6570\u636e\u5206\u5e03\u7684\u3002</p> Python<pre><code>from sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\npca.fit(X)\n</code></pre> <p>\u8f93\u51fa <code>pca.explained_variance_</code> \u4e3a <code>[0.7625315 0.0184779]</code>\uff0c<code>pca.components_</code> \u4e3a <code>[[-0.94446029 -0.32862557]  [-0.32862557  0.94446029]]</code>\u3002\u5c06\u5176\u7ed8\u5236\u5728\u56fe\u4e0a\u4e3a\uff1a</p> <p></p> <p>\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u5411\u91cf\u6bd4\u53e6\u4e00\u4e2a\u5411\u91cf\u957f\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u8fd9\u4e2a\u957f\u5411\u91cf\u5bf9\u5e94\u7684\u6570\u636e\u65b9\u5411\u6bd4\u53e6\u4e00\u4e2a\u65b9\u5411\u8981\"\u91cd\u8981\"\u3002\u65b9\u5dee\u91cf\u5316\u4e86\u65b9\u5411\u7684\"\u91cd\u8981\u6027\"\u3002</p> <p>\u964d\u4f4e\u4fdd\u6301\u7684\u65b9\u5dee\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e00\u4e9b\u6b21\u8981\u6210\u5206\u3002\u4e0b\u9762\u662f\u820d\u5f03 \\(5%\\) \u65b9\u5dee\u7684\u7ed3\u679c</p> Python<pre><code>clf = PCA(0.95) # \u4fdd\u630195%\u7684\u65b9\u5dee\nX_trans = clf.fit_transform(X)\n\nX_new = clf.inverse_transform(X_trans)\nplt.plot(X[:, 0], X[:, 1], 'o', alpha=0.2)\nplt.plot(X_new[:, 0], X_new[:, 1], 'ob', alpha=0.8)\nplt.axis('equal');\n</code></pre> <p></p> <p>\u5728\u56fe\u4e2d\uff0c\u6d45\u8272\u7684\u70b9\u662f\u539f\u59cb\u6570\u636e\uff0c\u6df1\u8272\u7684\u70b9\u662f\u7ecf\u8fc7\u6295\u5c04\u548c\u538b\u7f29\u540e\u7684\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u820d\u5f03\u4e865%\u7684\u6570\u636e\u65b9\u5dee\u4e4b\u540e\uff0c\u6570\u636e\u96c6\u4e2d\u6700\u91cd\u8981\u7684\u7279\u5f81\u88ab\u4fdd\u7559\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u6211\u4eec\u7684\u6570\u636e\u603b\u91cf\u88ab\u538b\u7f29\u4e86\u4e00\u534a\uff01</p> <p>\u8fd9\u5c31\u662f\"\u4e3b\u6210\u5206\u5206\u6790\"\u6240\u505a\u7684\uff1a\u5982\u679c\u5c06\u6570\u636e\u8fd1\u4f3c\u5728\u4e00\u4e2a\u4f4e\u7684\u7ef4\u5ea6\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u6570\u636e\u6216\u8005\u4e3a\u8fd9\u4e2a\u6570\u636e\u6dfb\u52a0\u66f4\u590d\u6742\u7684\u6a21\u578b\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_3","title":"\"\u6210\u5206\"\u6307\u7684\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5bf9\u4e8e\u56fe\u7247\u6765\u8bf4\uff0c\u5982\u679c\u5bf9\u5176\u76f4\u63a5\u964d\u7ef4\u4f1a\u5bfc\u81f4\u6211\u4eec\u53ea\u80fd\u770b\u5230\u56fe\u7247\u7684\u90e8\u5206\u50cf\u7d20\u3002\u800c\u5c06\u56fe\u7247\u8868\u793a\u7684\u5411\u91cf\u8fdb\u884c\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5f88\u5c11\u7684\u4fe1\u606f\u5c31\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u6548\u679c\u4e0d\u9519\u7684\u8fd1\u4f3c\u3002\u4f4e\u7ef4\u6570\u636e\u7684\u8868\u8fbe\u662f\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u53c2\u6570\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_4","title":"\u9009\u62e9\u6210\u5206\u7684\u6570\u91cf","text":"<p>\u5728\u6211\u4eec\u820d\u5f03\u6b21\u8981\u7684\u6210\u5206\u65f6\uff0c\u6211\u4eec\u7a76\u7adf\u820d\u5f03\u4e86\u591a\u5c11\u4fe1\u606f\uff1f\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u89e3\u91ca\u65b9\u5dee\uff0c\u4ece\u56fe\u4e2d\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002</p> Python<pre><code>pca = PCA().fit(X)\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel('number of components')\nplt.ylabel('cumulative explained variance')\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_5","title":"\u76f8\u5173\u5e94\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_6","title":"\u624b\u5199\u8bc6\u522b","text":"<p>\u5bf9\u4e8e 64 \u7ef4\u7684\u624b\u5199\u8bc6\u522b\u6570\u636e\uff0c\u6211\u4eec\u7528 PCA \u5c06\u5176\u6295\u5c04\u5230\u5e73\u9762\u4e0a\u3002</p> Python<pre><code>from sklearn.datasets import load_digits\ndigits = load_digits()\nX = digits.data\ny = digits.target\n\npca = PCA(2)  # \u5c0664\u4e2a\u7ef4\u5ea6\u6295\u5c04\u57282\u4e2a\u7ef4\u5ea6\nXproj = pca.fit_transform(X)\n\nplt.scatter(Xproj[:, 0], Xproj[:, 1], c=y, edgecolor='none', alpha=0.5,\n            cmap=plt.cm.get_cmap('nipy_spectral', 10))\nplt.colorbar()\n</code></pre> <p></p> <p>\u4e0a\u56fe\u4e2d\u6a2a\u7eb5\u8f74\u8868\u793a\u4e24\u4e2a\u4e3b\u6210\u5206\uff0c<code>c=y</code> \u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\u5bf9\u5e94\u5b83\u7684\u6570\u5b57\u6807\u7b7e\uff080~9\uff09</p> <p>\u4e0a\u56fe\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e0d\u540c\u6570\u5b57\u7684\u5173\u8054\u548c\u5dee\u5f02\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_7","title":"\u6570\u636e\u538b\u7f29","text":"<p>\u4e0b\u9762\u662f\u6539\u53d8\u4e0d\u540c\u6210\u5206\u7684\u6570\u76ee\u65f6\u540c\u4e00\u5bf9\u8c61\u7684\u538b\u7f29\u7ed3\u679c\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_8","title":"\u5176\u5b83\u7684\u964d\u7ef4\u7b97\u6cd5","text":"<p>Scikit-learn\u4e2d\u8fd8\u6709\u95e8\u591a\u5176\u4ed6\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u65b9\u6cd5</p> <ul> <li>sklearn.decomposition.PCA:     \u4e3b\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.RandomizedPCA:    \u57fa\u4e8e\u968f\u673a\u7b97\u6cd5\u7684\u9ad8\u901f\u7684\u4e3b\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.SparsePCA:    \u5305\u542bL1\u6b63\u5219\u5316\u60e9\u7f5a\u7684PCA</li> <li>sklearn.decomposition.FastICA:    \u72ec\u7acb\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.NMF:    \u975e\u8d1f\u77e9\u9635\u56e0\u5b50\u5206\u89e3</li> <li>sklearn.manifold.LocallyLinearEmbedding:    \u57fa\u4e8e\u90bb\u5c45\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u6d41\u5f62\u5b66\u4e60\u6280\u672f</li> <li>sklearn.manifold.IsoMap:    \u57fa\u4e8e\u7a00\u758f\u56fe\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u6d41\u5f62\u5b66\u4e60\u7b97\u6cd5</li> </ul> <p>\u8be6\u89c1 scikit-learn website\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/","title":"\u5165\u95e8","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 665 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn","title":"\u5173\u4e8eScikit-Learn","text":"<p>Scikit-Learn\u662f\u4e00\u4e2a\u91c7\u7528\u7b80\u6d01\u5e76\u7075\u6d3b\u7684 API\uff0c\u5411\u7528\u6237\u63d0\u4f9b\u5e7f\u4e3a\u4eba\u77e5\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684Python\u5305\u3002\u5b83\u7531\u4e0a\u767e\u4e2a\u8d21\u732e\u8005\u6240\u5f00\u53d1\uff0c\u5e76\u4e14\u5df2\u7ecf\u5e7f\u6cdb\u8fd0\u7528\u81f3\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u4e2d\u3002</p> <p>Scikit-Learn\u4f9d\u8d56\u4e8ePython\u7684 NumPy (Numerical Python) \u548c SciPy (Scientific Python)\u5e93\uff0c\u5b83\u4eec\u4e3aPython\u4e2d\u9ad8\u6548\u7684\u6570\u503c\u548c\u79d1\u5b66\u8ba1\u7b97\u63d0\u4f9b\u4e86\u652f\u6301\u3002scikit-learn\u672c\u8eab\u5e76\u4e0d\u662f\u4e3a\u6781\u5927\u7684\u6570\u636e\u96c6\u91cf\u8eab\u5b9a\u505a\u7684\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u57fa\u4e8e\u6b64\u7684\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#iris-dataset","title":"\u9e22\u5c3e\u82b1\uff08iris dataset\uff09\u5206\u7c7b\u7684\u5168\u6d41\u7a0b\u4f8b\u5b50","text":"<p>\u52a0\u8f7d\u548c\u8bfb\u53d6\u6570\u636e</p> Python<pre><code># \u5bfc\u5165 sklearn\nfrom sklearn import neighbors, datasets, preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport pandas as pd\n\n# \u52a0\u8f7d\u6570\u636e\n# https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html\niris = datasets.load_iris()\n\n# \u67e5\u770biris\u539f\u59cb\u6570\u636e\nprint(pd.DataFrame(iris.data, columns=iris.feature_names).head())\nprint(iris.target)\n</code></pre> <p>\u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6</p> Python<pre><code>X, y = iris.data[:, :2], iris.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n</code></pre> <p><code>iris.data</code> \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08150\u00d74\uff09\uff0c\u4ee3\u8868 150 \u4e2a\u6837\u672c\u7684 4 \u4e2a\u7279\u5f81\uff1a - \u82b1\u843c\u957f\u5ea6\uff08sepal length\uff09 - \u82b1\u843c\u5bbd\u5ea6\uff08sepal width\uff09 - \u82b1\u74e3\u957f\u5ea6\uff08petal length\uff09 - \u82b1\u74e3\u5bbd\u5ea6\uff08petal width\uff09    </p> <p><code>iris.target</code> \u662f\u5bf9\u5e94\u7684\u6807\u7b7e\uff080, 1, 2\uff09\uff0c\u8868\u793a\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1\u54c1\u79cd\u3002 \u53ea\u53d6\u524d\u4e24\u4e2a\u7279\u5f81\uff08\u82b1\u843c\u957f\u5ea6 &amp; \u82b1\u843c\u5bbd\u5ea6\uff09\u4f5c\u4e3a\u7279\u5f81\u77e9\u9635 <code>X</code>\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u6216\u7b80\u5316\u6a21\u578b\u4efb\u52a1\u3002\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u6295\u5f71\u7684\u964d\u7ef4\u64cd\u4f5c\u3002  </p> <p><code>random_state=33</code>\uff1a\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\uff0c\u786e\u4fdd\u6bcf\u6b21\u8fd0\u884c\u90fd\u5212\u5206\u76f8\u540c\uff08\u4fbf\u4e8e\u7ed3\u679c\u590d\u73b0\uff09 \u9ed8\u8ba4 <code>train_test_split</code> \u662f 75% \u8bad\u7ec3\u96c6 + 25% \u6d4b\u8bd5\u96c6</p> <p>\u6570\u636e\u9884\u5904\u7406</p> Python<pre><code>scaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n</code></pre> <p><code>scaler</code> \u662f \u6807\u51c6\u5316\u5668 (StandardScaler)\uff0c\u5b83\u4f1a \u201c\u5b66\u201d\u8bad\u7ec3\u96c6\u7684\u5747\u503c\u4e0e\u6807\u51c6\u5dee \uff0c\u5e76\u8bb0\u4f4f\u8fd9\u4e9b\u503c\u3002 <code>scaler.transform()</code> \u7528\u4e0a\u4e00\u6b65\u201c\u5b66\u5230\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u201d\u6765 \u8f6c\u6362\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u5373 </p> \\[  x' = \\frac{x - \\mu}{\\sigma}  \\] <p>\u53ea\u80fd\u7528\u8bad\u7ec3\u96c6\u6765\u8ba1\u7b97\u5747\u503c\u548c\u6807\u51c6\u5dee\uff01</p> <p>\u5426\u5219\u6d4b\u8bd5\u96c6\u5c31\u201c\u6cc4\u6f0f\u201d\u4fe1\u606f\u7ed9\u6a21\u578b\u4e86\uff0c\u8fdd\u80cc\u673a\u5668\u5b66\u4e60\u7684\u57fa\u672c\u539f\u5219</p> <p>\u6a21\u578b\u8bad\u7ec3</p> Python<pre><code># \u521b\u5efa\u6a21\u578b\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\n# \u6a21\u578b\u62df\u5408\nknn.fit(X_train, y_train)\n</code></pre> <p>\u8fd9\u91cc\u7528\u7684\u662f KNN (KNeighborsClassifier)</p> <p>\u6a21\u578b\u9884\u6d4b\u8bc4\u4f30</p> Python<pre><code># \u9884\u6d4b\ny_pred = knn.predict(X_test)\n# \u8bc4\u4f30\naccuracy_score(y_test, y_pred)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn_1","title":"Scikit-learn\u4e2d\u7684\u6570\u636e\u5bfc\u5165\u4e0e\u8868\u793a","text":"<p>\u5728Scikit-learn\u4e2d\uff0c\u5927\u591a\u6570\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6570\u636e\u5728\u4e8c\u7ef4\u7684\u6570\u7ec4\u6216\u8005\u77e9\u9635\u4e2d\u5b58\u50a8\u3002\u8fd9\u4e9b\u6570\u636e\u53ef\u80fd\u662f<code>numpy</code>\u6570\u7ec4\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u662f<code>scipy.sparse</code>\u77e9\u9635\u3002\u6570\u7ec4\u7684\u5927\u5c0f\u5e94\u8be5\u662f<code>[\u6837\u672c\uff08sample\uff09\u6570\uff0c\u7279\u5f81\uff08feature\uff09\u6570]</code> \u3002</p> <ul> <li>\u6837\u672c\u6570\uff08n_sample\uff09: \u6837\u672c\u7684\u6570\u76ee\u3002\u6bcf\u4e00\u4e2a\u6837\u672c\u90fd\u662f\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684\u72ec\u7acb\u4e2a\u4f53\uff08\u4f8b\u5982\uff1a\u9700\u8981\u88ab\u5206\u7c7b\uff09\uff0c\u4e00\u4e2a\u6837\u672c\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u6863\u3001\u4e00\u5e45\u56fe\u7247\u3001\u4e00\u6bb5\u97f3\u9891\u3001\u4e00\u6bb5\u89c6\u9891\u3001\u4e00\u4e2a\u5929\u6587\u5b66\u6570\u636e\u3001\u6570\u636e\u5e93\u6216\u8005CSV\u6587\u4ef6\u4e2d\u7684\u4e00\u884c\uff0c\u6216\u8005\u4efb\u610f\u4e00\u4e2a\u786e\u5b9a\u7684\u6570\u503c\u7684\u96c6\u5408\u3002</li> <li>\u7279\u5f81\u6570\uff08n_feature\uff09: \u7279\u5f81\u7684\u6570\u76ee\uff0c\u7279\u5f81\u662f\u63cf\u8ff0\u4e00\u4e2a\u6837\u672c\u7684\u6570\u503c\u8868\u8fbe\u3002\u7279\u5f81\u4e00\u822c\u662f\u5b9e\u6570\uff0c\u4e0d\u8fc7\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u662f\u5e03\u5c14\u503c\u6216\u8005\u662f\u79bb\u6563\u6570\u636e\u3002</li> </ul> <p>\u7279\u5f81\u6570\u5fc5\u987b\u63d0\u524d\u786e\u5b9a\u3002\u4f46\u662f\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6837\u672c\uff0c\u7279\u5f81\u53ef\u4ee5\u662f\u5f88\u5927\uff08\u767e\u4e07\u7ea7\uff09\u7684\u4e00\u4e2a\u96f6\u5360\u5927\u591a\u6570\u7684\u96c6\u5408\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>scipy.sparse</code>\u77e9\u9635\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\uff0c\u7528\u8fd9\u4e2a\u77e9\u9635\u6bd4numpy\u77e9\u9635\u5728\u5b58\u50a8\u4e0a\u4f1a\u66f4\u52a0\u9ad8\u6548\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn_2","title":"Scikit-learn \u4e2d\u7684\u5176\u5b83\u5185\u7f6e\u6570\u636e","text":"<p>\u5b83\u4eec\u5206\u4e3a\u5982\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u5305\u5185\u7f6e\u6570\u636e\uff1a \u8fd9\u4e9b\u5c0f\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u88ab\u96c6\u6210\u5728scikit-learn\u7684\u5b89\u88c5\u5305\u91cc\u9762\u4e86\uff0c\u53ef\u4ee5\u7528<code>sklearn.datasets.load_*</code>\u53bb\u4e0b\u8f7d\u5b83</li> <li>\u4f9b\u4e0b\u8f7d\u6570\u636e\uff1a \u8fd9\u4e9b\u8f83\u5927\u7684\u6570\u636e\u53ef\u4ee5\u4f9b\u7528\u6237\u4eec\u4e0b\u8f7d\uff0cscikit-learn\u91cc\u9762\u5df2\u7ecf\u5305\u542b\u4e86\u4e0b\u8f7d\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u6d41\u901a\u9053\u3002\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u5728<code>sklearn.datasets.fetch_*</code>\u4e2d\u627e\u5230\u3002</li> <li>\u751f\u6210\u6570\u636e\uff1a \u901a\u8fc7\u968f\u673a\u79cd\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7\u73b0\u6709\u6a21\u578b\u968f\u673a\u751f\u6210\u4e00\u4e9b\u6570\u636e\u96c6\u3002\u5b83\u4eec\u53ef\u4ee5\u5728<code>sklearn.datasets.make_*</code>\u4e2d\u627e\u5230</li> </ul> \u4e73\u817a\u764c\u6570\u636e\u96c6\u624b\u5199\u6570\u5b57\uff08Digits\uff09\u6570\u636e\u96c6\u6ce2\u58eb\u987f\u623f\u4ef7\uff08California Housing \u66ff\u4ee3\u7248\uff09 Python<pre><code>from sklearn.datasets import load_breast_cancer\nX_breast, y_breast = load_breast_cancer(return_X_y=True)\n\nfrom sklearn.model_selection import train_test_split\nX_breast_train, X_breast_test, y_breast_train, y_breast_test = train_test_split(X_breast, y_breast, stratify=y_breast, random_state=0, test_size=0.3)\n</code></pre> <p>\u4f7f\u7528<code>sklearn.model_selection.train_test_split</code>\u62c6\u5206\u6570\u636e\u96c6\u5e76\u4fdd\u755930\uff05\u7684\u6570\u636e\u96c6\u4ee5\u8fdb\u884c\u6d4b\u8bd5\u3002\u786e\u4fdd\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5c42\uff08\u5373\u4f7f\u7528 <code>stratify</code>\u53c2\u6570\uff09\u5e76\u5c06<code>random_state</code>\u8bbe\u7f6e\u4e3a<code>0</code>\u3002</p> <p>\u4f7f\u7528 \u68af\u5ea6\u63d0\u5347\u5206\u7c7b\u5668\uff08Gradient Boosting Classifier\uff09\u8fdb\u884c\u8bad\u7ec3\u548c\u9884\u6d4b</p> Python<pre><code>from sklearn.ensemble import GradientBoostingClassifier\n\nclf = GradientBoostingClassifier(n_estimators=100, random_state=0)\nclf.fit(X_breast_train, y_breast_train)\ny_pred = clf.predict(X_breast_test)\n</code></pre> <p>\u8ba1\u7b97\u51c6\u786e\u7387</p> Python<pre><code>from sklearn.metrics import accuracy_score\n\naccuracy = accuracy_score(y_breast_test, y_pred)\nprint('Accuracy score of the {} is {:.2f}'.format(clf.__class__.__name__, accuracy))\n</code></pre> Python<pre><code>from sklearn.datasets import load_digits\nX_digits, y_digits = load_digits(return_X_y=True)\n</code></pre> Python<pre><code>from sklearn.datasets import fetch_california_housing\nX_house, y_house = fetch_california_housing(return_X_y=True)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn-estimator","title":"Scikit-learn \u4e2d\u7684 Estimator \u5bf9\u8c61","text":"<p>\u6bcf\u4e00\u4e2a\u5728scikit-learn\u4e2d\u5b9e\u73b0\u7684\u7b97\u6cd5\u90fd\u662f\u8868\u793a\u4e3a\u4e00\u4e2a \"Estimator\" \u7684\u5bf9\u8c61\u3002</p> <p>Estimator \u53c2\u6570\uff1a\u4e00\u4e2a Estimator \u5bf9\u8c61\u7684\u6240\u6709\u7cfb\u6570\u53ef\u4ee5\u5728\u5b83\u521d\u59cb\u5316\u7684\u65f6\u5019\u8bbe\u7f6e\uff0c\u8fd9\u4e9b\u7cfb\u6570\u62e5\u6709\u666e\u9002\u6027\u7684\u521d\u59cb\u503c\u3002</p> Python<pre><code>model = LinearRegression(normalize=True)\nprint(model.normalize)\n</code></pre> Text Output<pre><code>True\n</code></pre> <p>Estimator \u6a21\u578b\u53c2\u6570\uff1a\u5f53Estimator\u7528\u6570\u636e\u6765\u62df\u5408\u7cfb\u6570\u65f6\uff0c\u6a21\u578b\u7684\u7cfb\u6570\u662f\u6839\u636e\u6570\u636e\u4e00\u6b65\u6b65\u5f97\u5230\u7684\u3002\u6240\u6709\u7684\u6a21\u578b\u7cfb\u6570\u90fd\u662fEstimator\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u4ee5\u4e00\u4e2a\u4e0b\u5212\u7ebf(underscore)\u7ed3\u5c3e\u3002</p> Python<pre><code>model = LinearRegression(normalize=True)\n...\nmodel.fit(X, y)\n# \u4ee5\u4e0b\u5212\u7ebf\u7ed3\u5c3e\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u62df\u5408\u7684\u7cfb\u6570\nprint(model.coef_)\nprint(model.intercept_)\n# \u6b8b\u5dee\nprint(model._residues)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#estimator","title":"\u5982\u4f55\u9009\u62e9Estimator","text":"<p>\u4e0b\u9762\u662f\u7531sckit-learn\u7684\u6700\u91cd\u8981\u7684\u8d21\u732e\u8005 Andreas Mueller \u63d0\u4f9b\u7684\u4e00\u5f20\u56fe\u3002\u5b83\u7ed9\u51fa\u4e86\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5e94\u8be5\u5e94\u7528\u4ec0\u4e48\u7b97\u6cd5\u7684\u603b\u7ed3\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#_1","title":"\u5b66\u4e60\u66f2\u7ebf\u548c\u9a8c\u8bc1\u66f2\u7ebf","text":"<p>\u7ed8\u5236\u5b66\u4e60\u66f2\u7ebf</p> Python<pre><code>from sklearn.model_selection import learning_curve\nfrom sklearn.ensemble import RandomForestClassifier\n\nX,y = datasets.load_digits(return_X_y=True)\n\ntrain_sizes,train_score,test_score = learning_curve(RandomForestClassifier(n_estimators = 10),X,y,train_sizes=[0.1,0.2,0.4,0.6,0.8,1],scoring='accuracy')\n\ntrain_error =  1- np.mean(train_score,axis=1)\ntest_error = 1- np.mean(test_score,axis=1)\n\nplt.plot(train_sizes,train_error,'o-',color = 'r',label = 'training')\nplt.plot(train_sizes,test_error,'o-',color = 'g',label = 'testing')\nplt.legend(loc='best')\nplt.xlabel('traing examples')\nplt.ylabel('error')\nplt.show()\n</code></pre> <p></p> <p>\u7ed8\u5236\u9a8c\u8bc1\u66f2\u7ebf</p> Python<pre><code>from sklearn.model_selection import validation_curve\n\nX,y = datasets.load_digits(return_X_y=True)\nparam_range = [10,20,40,80,160,250]\n\ntrain_score,test_score = validation_curve(RandomForestClassifier(),X,y,param_name='n_estimators',param_range=param_range,cv=10,scoring='accuracy')\n\ntrain_score =  np.mean(train_score,axis=1)\ntest_score = np.mean(test_score,axis=1)\n\nplt.plot(param_range,train_score,'o-',color = 'r',label = 'training')\nplt.plot(param_range,test_score,'o-',color = 'g',label = 'testing')\nplt.legend(loc='best')\nplt.xlabel('number of tree')\nplt.ylabel('accuracy')\nplt.show()\n</code></pre> <p></p> <p>\u672c\u7b14\u8bb0\u4fee\u6539\u5e76\u603b\u7ed3\u81eaJake Vanderplas \u548c\u90d1\u51a0\u6770\u8001\u5e08\u7684\u8bfe\u4ef6\uff0c\u6e90\u4ee3\u7801\u548clicense\u6587\u4ef6\u5728GitHub\u3002 </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/","title":"\u652f\u6301\u5411\u91cf\u673a(SVM)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 184 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u5206\u7c7b\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_1","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u652f\u6301\u5411\u91cf\u673a\uff08SVMs\uff09\u662f\u76d1\u7763\u5b66\u4e60\u4e2d\u7528\u6765\u5206\u7c7b\u6216\u8005\u56de\u5f52\u7684\u6700\u5f3a\u5927\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002\u652f\u6301\u5411\u91cf\u673a\u662f\u4e00\u79cd\u5224\u522b\u5206\u7c7b\u5668\uff1a\u5b83\u53ef\u4ee5\u5728\u6570\u636e\u7684\u96c6\u5408\u4e2d\u753b\u51fa\u4e00\u6761\u5206\u5272\u7ebf\u3002</p> <p>\u5b83\u4f1a\u4f18\u5316\u5206\u9694\u7684\u76f4\u7ebf\uff0c\u4f7f\u5f97\u76f4\u7ebf\u7684\u8fb9\u754c\u4e0e\u6570\u636e\u96c6\u7684\u5782\u76f4\u8ddd\u79bb\u6700\u5927\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_2","title":"\u76f4\u7ebf\u5206\u5272","text":"Python<pre><code>from sklearn.svm import SVC  # \"Support Vector Classifier\"\n\nclf = SVC(kernel='linear')\nclf.fit(X, y)\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u5206\u5272\u76f4\u7ebf</p> <p></p> <p>\u8fb9\u754c\u78b0\u5230\u7684\u70b9\u5c31\u662f\u6240\u8c13\u7684 \u652f\u6301\u5411\u91cf\uff0c \u5728scikit-learn\u4e2d\uff0c\u8fd9\u4e9b\u652f\u6301\u5411\u91cf\u88ab\u5b58\u50a8\u5728\u5206\u7c7b\u5668\u7684<code>suppport_vectors_</code>\u5c5e\u6027\u4e2d</p> Python<pre><code>plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='spring')\nplot_svc_decision_function(clf)\nplt.scatter(clf.support_vectors_[:, 0], clf.support_vectors_[:, 1],\n            s=200, alpha=0.3);\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_3","title":"\u6838\u65b9\u6cd5","text":"<p>\u6838\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u8f6c\u6362\u4e0d\u80fd\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u96c6\u3002</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u96be\u4ee5\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u96c6</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528\u5f84\u5411\u57fa\u51fd\u6570\uff0c\u628a <code>r</code> \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff0c</p> Python<pre><code>r = np.exp(-(X[:, 0] ** 2 + X[:, 1] ** 2))\n</code></pre> <p>\u5f97\u5230</p> <p></p> <p>\u5728 Scikit-learn \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>kernel='rbf'</code>\u6765\u5b9e\u73b0\uff0c\u5176\u4e2drbf\u662fradial basis function\u7684\u7f29\u5199\u3002</p> Python<pre><code>clf = SVC(kernel='rbf')\nclf.fit(X, y)\n</code></pre> <p>\u5f97\u5230\u7684\u5206\u5272\u4ee5\u53ca\u652f\u6301\u5411\u91cf\u4e3a</p> <p></p> <p>\u8865\u5145\u8bf4\u660e</p> <p>\u5173\u4e8e SVM \u548c \u6838\u65b9\u6cd5\u7684\u76f8\u5173\u63a8\u5230\u8be6\u89c1 https://zhuanlan.zhihu.com/p/131674827</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 130 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_1","title":"\u6570\u503c\u5904\u7406","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_2","title":"\u5f52\u4e00\u5316","text":"<ol> <li>Minmax \u7f29\u653e</li> </ol> Python<pre><code>data_scaler_minmax = preprocessing.MinMaxScaler(feature_range=(0, 1))\ndata_scaled_minmax = data_scaler_minmax.fit_transform(input_data)\n</code></pre> <ol> <li>\u6807\u51c6\u5316</li> </ol> \\[ x' = \\frac{x - \\mu}{\\sigma} \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_3","title":"\u4e8c\u503c\u5316","text":"<ol> <li>\u6309\u5224\u636e\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c</li> </ol> Python<pre><code>data_binarized = preprocessing.Binarizer(threshold=0.5),transform(input_data)\n</code></pre> <ol> <li>OneHot \u7f16\u7801</li> </ol> Python<pre><code>onehot_encoder = preprocessing.OneHotEncoder(sparse=False)\nencoded = onehot_encoder.fit_transform(input_data)\n</code></pre> <p><code>sparse=False</code> \u8868\u793a\u8f93\u51fa\u7684\u77e9\u9635\u4e0d\u662f\u7a00\u758f\u77e9\u9635</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_4","title":"\u6570\u636e\u5206\u5272","text":"<p>\u6ce8\u610f</p> <p>\u4e0d\u8981\u628a\u6d4b\u8bd5\u6570\u636e\u6cc4\u9732\u7ed9\u8bad\u7ec3\u96c6\uff01</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_5","title":"\u6a21\u578b\u9a8c\u8bc1","text":"<p>\u4f8b\u5982\u5728 KNN \u4e0b\uff0c\u6784\u5efa\u6df7\u6dc6\u77e9\u9635</p> Python<pre><code>from sklearn.matrics import confusion_matrix\nconfusion_matrix(y, y_pred)\n</code></pre> <p>\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e0a\u7ed3\u679c\u4e0d\u540c</p> <p></p> <ul> <li>Accuracy (\u51c6\u786e\u5ea6) \u6307 </li> </ul> \\[ \\frac{|y = \\hat{y}|}{|y|} \\] <ul> <li>Precision (\u7cbe\u786e\u5ea6) \u6307</li> </ul> \\[ \\frac{|\\hat{y} = 1 \\&amp;\\&amp; y = 1|}{|\\hat{y} = 1|} \\] <ul> <li>Recall (\u53ec\u56de\u7387) \u6307</li> </ul> \\[ \\frac{|\\hat{y} = 1 \\&amp;\\&amp; y = 1|}{|y = 1|} \\] <p>\u5728\u5b9e\u8df5\u4e2d\uff0cPrcision \u589e\u52a0\u65f6 Recall \u4f1a\u964d\u4f4e\u3002\u4f8b\u5982\u5728\u75be\u75c5\u8bca\u65ad\u4e2d\u9700\u8981\u63d0\u9ad8 Recall\uff0c\u6545\u53ef\u4ee5\u9002\u5f53\u964d\u4f4e Precision\uff0c\u4e5f\u5373\u589e\u52a0 \\(|\\hat{y} = 1|\\) </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/","title":"\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 996 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_1","title":"\u76d1\u7763\u5b66\u4e60\uff1a\u5206\u7c7b\u4e0e\u56de\u5f52","text":"<p>\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u540c\u65f6\u5305\u542b\u7279\u5f81(feature)\u548c\u6807\u7b7e(label)\u7684\u6570\u636e\u96c6\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5bf9\u8c61\u7279\u5f81\uff0c\u53bb\u5efa\u7acb\u4e00\u4e2aEstimator\u9884\u6d4b\u5bf9\u8be5\u5bf9\u8c61\u7684\u6807\u7b7e\u3002\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff0c\u6211\u4eec\u7ed9\u51fa\u5bf9\u4e8eiris\u8fd9\u79cd\u82b1\u7684\u6d4b\u91cf\uff0c\u53bb\u9884\u6d4biris\u82b1\u7684\u5177\u4f53\u54c1\u79cd\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u66f4\u591a\u7684\u8f83\u4e3a\u590d\u6742\u7684\u4efb\u52a1\u89c1\u4e0b\u65b9\uff1a</p> <ul> <li>\u7ed9\u51fa\u4e00\u4e2a\u901a\u8fc7\u671b\u8fdc\u955c\u5f97\u5230\u7684\u5f69\u8272\u56fe\u7247\uff0c\u9884\u6d4b\u51fa\u8be5\u7269\u4f53\u662f\u4e00\u4e2a\u6052\u661f\uff0c\u4e00\u4e2a\u7c7b\u661f\u4f53\u6216\u8005\u4e00\u4e2a\u661f\u7cfb\u3002</li> <li>\u7ed9\u51fa\u4e00\u4e2a\u4eba\u7684\u7167\u7247\uff0c\u8bc6\u522b\u51fa\u8fd9\u4e2a\u4eba\u7684\u4fe1\u606f\u3002</li> <li>\u7ed9\u51fa\u4e00\u4e2a\u4eba\u770b\u8fc7\u7684\u7535\u5f71\uff0c\u548c\u8fd9\u4e9b\u7535\u5f71\u7684\u5f97\u5206\uff0c\u63a8\u8350\u7ed9\u8fd9\u4e2a\u4eba\u4ed6\u53ef\u80fd\u559c\u6b22\u7684\u5176\u4ed6\u7535\u5f71\uff08\u4e5f\u5c31\u662f\uff1a\u63a8\u8350\u7cfb\u7edf: \u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u4f8b\u5b50\u53ef\u4ee5\u53c2\u8003 Netflix Prize\uff09\u3002</li> </ul> <p>\u8fd9\u4e9b\u4efb\u52a1\u7684\u5171\u540c\u7279\u70b9\u5c31\u662f\uff0c\u6211\u4eec\u9700\u8981\u5229\u7528\u4e8b\u7269\u89c2\u6d4b\u5230\u7684\u5404\u79cd\u7279\u5f81\uff0c\u53bb\u9884\u6d4b\u4e00\u4e2a\u6216\u591a\u4e2a\u672a\u77e5\u7684\uff0c\u4e0e\u8fd9\u4e2a\u4e8b\u7269\u6709\u5173\u7684\u5176\u4ed6\u7279\u5f81\u3002</p> <p>\u8fdb\u4e00\u6b65\u7684\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u88ab\u5212\u5206\u6210\u4e24\u4e2a\u5927\u7c7b\uff0c\u5373\u5206\u7c7b(classification)\u548c\u56de\u5f52(regression)\u3002\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u662f\u79bb\u6563\u7684\uff0c\u5728\u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u662f\u8fde\u7eed\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u5929\u6587\u5b66\u4e2d\uff0c\u5224\u65ad\u4e00\u4e2a\u7269\u4f53\u662f\u4e00\u4e2a\u6052\u661f\uff0c\u4e00\u4e2a\u7c7b\u661f\u4f53\u6216\u8005\u662f\u4e00\u4e2a\u661f\u7cfb\u662f\u4e00\u4e2a\u5206\u7c7b\u7684\u95ee\u9898\uff1a\u8fd9\u4e2a\u4e09\u79cd\u6807\u7b7e\u6765\u81ea\u4e8e\u4e09\u4e2a\u72ec\u7acb\u7684\u7c7b\u522b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u53bb\u6839\u636e\u8fd9\u4e9b\u89c2\u6d4b\uff0c\u9884\u6d4b\u7269\u4f53\u7684\u5e74\u9f84\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u56de\u5f52\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6807\u7b7e\uff08\u5e74\u9f84\uff09\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6570\u5b57\u3002</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u4e2d\u7684\u90e8\u5206\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u7b14\u8bb0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_2","title":"\u5206\u7c7b\u7b97\u6cd5\u7b80\u4ecb","text":"<p>K-NN\u3001SVC, \u8be6\u89c1 CV.</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_3","title":"\u56de\u5f52\u7b97\u6cd5\u7b80\u4ecb","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#linearregression","title":"<code>LinearRegression</code> \u7ebf\u6027\u62df\u5408","text":"Python<pre><code>model = LinearRegression()\nmodel.fit(X, y)\n\n# \u753b\u51fa\u6570\u636e\u548c\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u56fe\u5f62\nX_fit = np.linspace(0, 1, 100)[:, np.newaxis]\ny_fit = model.predict(X_fit)\n\nplt.plot(X.squeeze(), y, 'o')\nplt.plot(X_fit.squeeze(), y_fit);\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#randomforestregressor","title":"<code>RandomForestRegressor</code> \u968f\u673a\u68ee\u6797\u56de\u5f52","text":"<p>\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u6df1\u5165\u4ecb\u7ecd</p> Python<pre><code># \u8bad\u7ec3\u4e00\u4e2a\u968f\u673a\u68ee\u6797(Random Forest)\u6a21\u578b\nfrom sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor()\nmodel.fit(X, y)\n\n# \u753b\u51fa\u6570\u636e\u548c\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u56fe\u5f62\nX_fit = np.linspace(0, 1, 100)[:, np.newaxis]\ny_fit = model.predict(X_fit)\n\nplt.plot(X.squeeze(), y, 'o')\nplt.plot(X_fit.squeeze(), y_fit);\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#dimensionality-reductionclustering","title":"\u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u964d\u7ef4(Dimensionality Reduction)\u548c\u805a\u7c7b(Clustering)","text":"<p>\u65e0\u76d1\u7763\u5b66\u4e60\u4ece\u95ee\u9898\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u53bb\u8003\u8651\u3002\u6570\u636e\u5728\u8fd9\u91cc\u662f\u6ca1\u6709\u6807\u7b7e\u7684\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u95ee\u9898\u4e2d\u5bf9\u8c61\u7684\u76f8\u4f3c\u70b9\u3002\u4ece\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u60a8\u53ef\u4ee5\u8ba4\u4e3a\u65e0\u76d1\u7763\u5b66\u4e60\u662f\u4e00\u79cd\u4ece\u6570\u636e\u672c\u8eab\u53bb\u53d1\u6398\u6807\u7b7e\u7684\u65b9\u6cd5\u3002\u65e0\u76d1\u7763\u5b66\u4e60\u6709\u964d\u7ef4(dimensionality reduction) \u3001\u805a\u7c7b(clustering)\u548c\u5bc6\u5ea6\u4f30\u8ba1(density estimation)\u7b49\u7b97\u6cd5\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684iris\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u65e0\u76d1\u7763\u5b66\u4e60\u53bb\u53d1\u73b0\u54ea\u4e00\u79cd\u6d4b\u91cf\u7684\u7ec4\u5408\u6700\u80fd\u4f53\u73b0\u6570\u636e\u7684\u7ed3\u6784\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u4f1a\u770b\u5230\uff0c\u8fd9\u6837\u4e00\u79cd\u6570\u636e\u7684\u6295\u5f71\u80fd\u591f\u88ab\u7528\u6765\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u5c55\u73b0\u56db\u7ef4\u7684\u6570\u636e\u96c6\u3002\u8fd8\u6709\u4e00\u4e9b\u66f4\u8d34\u5207\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u7ed9\u51fa\u9065\u8fdc\u661f\u7cfb\u7684\u8be6\u7ec6\u7684\u89c2\u6d4b\u6570\u636e\uff0c\u51b3\u5b9a\u54ea\u4e00\u4e2a\u6216\u54ea\u51e0\u4e2a\u7279\u5f81\u662f\u6700\u80fd\u4f53\u73b0\u5176\u6570\u636e\u7684</li> <li>\u7ed9\u51fa\u4e24\u79cd\u58f0\u6e90\u7684\u6df7\u5408\uff08\u6bd4\u5982\u4e00\u4e2a\u4eba\u5728\u97f3\u4e50\u58f0\u4e2d\u8c08\u8bdd\uff09\uff0c\u5206\u79bb\u51fa\u4e24\u79cd\u58f0\u97f3\uff08\u8fd9\u53eb\u505a \u76f2\u6e90\u5206\u79bb \uff09</li> <li>\u7ed9\u51fa\u4e00\u6bb5\u89c6\u9891\uff0c\u5206\u79bb\u51fa\u5176\u4e2d\u8fd0\u52a8\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u8fd0\u52a8\u7269\u4f53\u6bd4\u8f83\uff0c\u7ed9\u51fa\u5206\u7c7b</li> </ul> <p>\u6709\u4e9b\u65f6\u5019\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u4f1a\u7ec4\u5408\u5728\u4e00\u8d77\uff1a\u65e0\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u7528\u6765\u4ece\u6709\u591a\u4e2a\u7c7b\u522b\u7684\u6570\u636e\u4e2d\u627e\u5230\u6709\u7528\u7684\u7279\u5f81\uff0c\u800c\u83b7\u53d6\u7684\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u88ab\u7528\u5728\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u7684\u6846\u67b6\u4e2d\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_4","title":"\u964d\u7ef4\u7b97\u6cd5\u7b80\u4ecb","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#pca","title":"<code>PCA</code> \u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u4e3b\u6210\u5206\u5206\u6790\uff08Principle Component Analysis, PCA\uff09\u662f\u4e00\u4e2a\u964d\u7ef4\u7b97\u6cd5\uff0c\u5b83\u53ef\u4ee5\u627e\u5230\u80fd\u8fbe\u5230\u6700\u5927\u65b9\u5dee\u7684\u6700\u4f73\u53d8\u91cf\u7684\u7ec4\u5408\u3002\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u6df1\u5165\u4ecb\u7ecd</p> Python<pre><code>X, y = iris.data, iris.target\n\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=0.95)\npca.fit(X)\nX_reduced = pca.transform(X)\nprint(\"Reduced dataset shape:\", X_reduced.shape)\n\nimport matplotlib.pyplot as plt\n\nplt.scatter(X_reduced[:, 0], X_reduced[:, 1], \n            c=y, cmap='RdYlBu')\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#kmeans-k-means","title":"<code>KMeans</code> K-means \u805a\u7c7b","text":"<p>\u805a\u7c7b\u7b97\u6cd5\u9488\u5bf9\u89c2\u6d4b\u5230\u7684\u6570\u636e\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u51c6\u5219\u53d1\u73b0\u5b83\u4eec\u7684\u5171\u540c\u70b9\uff0c\u5728\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u201c\u7fa4\u201d\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e9b\u805a\u7c7b(cluster)\u4f1a\u4ece\u6570\u636e\u4e2d\u53d1\u73b0\u4e00\u4e9b\u9690\u85cf\u7684\u76f8\u5173\u7ed3\u6784\uff0c\u5982\u679c\u6240\u4f7f\u7528\u5230\u7684\u6807\u51c6\u5c55\u73b0\u51fa\u4e86\u8fd9\u4e9b\u7ed3\u6784</p> Python<pre><code>from sklearn.cluster import KMeans\nX, y = iris.data, iris.target\nk_means = KMeans(n_clusters=3, random_state=0) # Fixing the RNG in kmeans\nk_means.fit(X)\ny_pred = k_means.predict(X)\n\nplt.scatter(X_reduced[:, 0], X_reduced[:, 1], c=y_pred,\n           cmap='RdYlBu');\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/","title":"\u968f\u673a\u68ee\u6797","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 383 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u56de\u5f52\u65b9\u6cd5\uff08\u975e\u53c2\u6570\uff09</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_1","title":"\u51b3\u7b56\u6811","text":"<p>\u4e0d\u505a\u4ecb\u7ecd</p> Python<pre><code>import matplotlib.pyplot as plt\nfrom sklearn.datasets import make_blobs\nfrom sklearn.tree import DecisionTreeClassifier\nimport numpy as np\n\n# \u751f\u6210\u6570\u636e\nX, y = make_blobs(n_samples=300, centers=4,\n                  random_state=0, cluster_std=1.0)\n\n# \u521b\u5efa\u753b\u5e03\nfig, axes = plt.subplots(1, 2, figsize=(12, 5))\n\n# \u4e0d\u540c\u6df1\u5ea6\u7684\u6a21\u578b\nfor ax, depth in zip(axes, [1, 5]):\n    tree = DecisionTreeClassifier(max_depth=depth, random_state=0).fit(X, y)\n\n    # \u521b\u5efa\u7f51\u683c\u70b9\u7528\u4e8e\u7ed8\u56fe\n    x_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1\n    y_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1\n    xx, yy = np.meshgrid(np.linspace(x_min, x_max, 300),\n                         np.linspace(y_min, y_max, 300))\n    Z = tree.predict(np.c_[xx.ravel(), yy.ravel()])\n    Z = Z.reshape(xx.shape)\n\n    # \u7ed8\u5236\u51b3\u7b56\u8fb9\u754c\u548c\u6570\u636e\u70b9\n    ax.contourf(xx, yy, Z, alpha=0.3, cmap='rainbow')\n    ax.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='rainbow', edgecolor='k')\n    ax.set_title(f\"Decision Tree (max_depth={depth})\")\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>\u6ce8\u610f\u5230\u968f\u7740\u6df1\u5ea6\u7684\u589e\u52a0\uff0c\u9664\u4e86\u90a3\u4e9b\u672c\u6765\u53ea\u5305\u542b\u4e00\u7c7b\u7684\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u96c6\u90fd\u88ab\u6210\u529f\u7684\u5212\u5206\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u5feb\u7684\u65e0\u53c2\u6570 \u5206\u7c7b\u8fc7\u7a0b\uff0c\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\u975e\u5e38\u5b9e\u7528\u3002</p> <p>\u4f46\u662f\uff0c\u51b3\u7b56\u6811\u7684\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\uff0c\u5b83\u8bad\u7ec3\u51fa\u6765\u7684\u6a21\u578b\u975e\u5e38\u5bb9\u6613\u4ea7\u751f\u8fc7\u62df\u5408 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6a21\u578b\u7684\u5f39\u6027\u975e\u5e38\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u5bf9\u6570\u636e\u7684\u566a\u58f0\u7684\u5b66\u4e60\u53ef\u4ee5\u9ad8\u8fc7\u6570\u636e\u672c\u8eab\uff01\u4f8b\u5982\u4e0b\u9762\u662f\u9488\u5bf9\u4e00\u4e2a\u6570\u636e\u96c6\u7684\u4e24\u4e2a\u90e8\u5206\u7684\u9884\u6d4b\u6a21\u578b</p> <p> </p> <p>\u53ef\u89c1\u4e24\u4e2a\u6a21\u578b\u7684\u7ec6\u8282\u5b8c\u5168\u4e0d\u4e00\u6837\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_2","title":"\u968f\u673a\u68ee\u6797","text":"<p>\u4e00\u4e2a\u53ef\u80fd\u7684\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u91c7\u7528\u96c6\u6210\u65b9\u6cd5 \uff1a\u521b\u5efa\u4e00\u4e2a\u603b\u7684estimator\uff0c\u5b83\u5bf9\u5f88\u591a\u7684\u72ec\u7acb\u7684\uff0c\u5bb9\u6613\u4ea7\u751f\u8fc7\u62df\u5408\u7684estimator\u53d6\u4e86\u5e73\u5747\u3002\u8ba9\u4eba\u6709\u4e9b\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u4e2a\u603b\u7684estimator\u7684\u6548\u679c\u975e\u5e38\u597d\uff0c\u5b83\u6bd4\u4efb\u4f55\u4e00\u4e2a\u7ec4\u6210\u5b83\u7684\u72ec\u7acb\u7684estimator\u90fd\u8981\u7a33\u5b9a\u548c\u7cbe\u786e\uff01</p> <p>\u968f\u673a\u68ee\u6797\u5c31\u662f\u4f17\u591a\u96c6\u6210\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u91cc\uff0c\u96c6\u6210\u7684\u610f\u601d\u662f\u603b\u7684estimator\u4f1a\u7531\u5f88\u591a\u51b3\u7b56\u6811\u7ec4\u6210\u3002</p> <p>\u5177\u4f53\u4f7f\u7528\u89c1\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> Python<pre><code>from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nx = 10 * np.random.rand(100)\n\n\n# model \u7528\u4e8e\u751f\u6210\u566a\u58f0sigma\u52a0\u6210\u4e0b\u7684\u51fd\u6570\u503c\ndef model(x, sigma=0.3):\n    fast_oscillation = np.sin(5 * x)\n    slow_oscillation = np.sin(0.5 * x)\n    noise = sigma * np.random.randn(len(x))\n\n    return slow_oscillation + fast_oscillation + noise\n\n\ny = model(x)\n\nxfit = np.linspace(0, 10, 1000)\nyfit = RandomForestRegressor(100).fit(x[:, None], y).predict(xfit[:, None])\nytrue = model(xfit, 0)  # \u771f\u5b9e\u6b63\u5f26\u51fd\u6570\u503c\n\nplt.errorbar(x, y, 0.3, fmt='o')\nplt.plot(xfit, yfit, '-r');\nplt.plot(xfit, ytrue, '-k', alpha=0.5);\nplt.show()\n</code></pre> <p>\u8be5\u6a21\u578b\u4e0d\u7528\u6307\u5b9a\u5468\u671f\u53c2\u6570\u5c31\u80fd\u5f88\u597d\u7684\u62df\u5408\u8be5\u542b\u6709\u566a\u58f0\u7684\u66f2\u7ebf\uff1b\u4e0e\u4e4b\u76f8\u5bf9\u7684\uff0cSVM \u6a21\u578b\u5c31\u96be\u4ee5\u5f88\u597d\u5730\u62df\u5408\u3002</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_3","title":"\u624b\u5199\u6570\u5b57\u5206\u7c7b","text":"Python<pre><code>from sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier\n\nXtrain, Xtest, ytrain, ytest = train_test_split(X, y, random_state=0)\nclf = DecisionTreeClassifier(max_depth=11)\nclf.fit(Xtrain, ytrain)\nypred = clf.predict(Xtest)\n</code></pre> <p>\u753b\u51fa\u6df7\u6dc6\u77e9\u9635</p> Python<pre><code>plt.imshow(metrics.confusion_matrix(ypred, ytest),\n           interpolation='nearest', cmap=plt.cm.binary)\nplt.grid(False)\nplt.colorbar()\nplt.xlabel(\"predicted label\")\nplt.ylabel(\"true label\")\n\nplt.show()\n</code></pre> <p></p> <p>\u672c\u7b14\u8bb0\u4fee\u6539\u81eaJake Vanderplas\uff0c\u6e90\u4ee3\u7801\u548clicense\u6587\u4ef6\u5728GitHub\u3002 </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/","title":"ggplot \u57fa\u7840","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 169 \u4e2a\u5b57\u00a0\u00a010 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#ggplot2","title":"ggplot2 \u57fa\u7840\u7ed3\u6784","text":"<p>ggplot \u7684\u8bed\u6cd5\u57fa\u4e8e \u56fe\u5f62\u8bed\u6cd5 (Grammar of Graphics)\uff1a</p> S<pre><code>ggplot(data, aes(x, y)) + geom_xxx() + ... \n</code></pre> <ul> <li> <p><code>data</code>\uff1a\u6570\u636e\u96c6</p> </li> <li> <p><code>aes()</code>\uff1a\u6620\u5c04\uff08x \u8f74\u3001y \u8f74\u3001\u989c\u8272\u3001\u5927\u5c0f\u3001\u5f62\u72b6\u7b49</p> </li> <li> <p><code>geom_xxx()</code>\uff1a\u51e0\u4f55\u5bf9\u8c61\uff08\u70b9\u3001\u7ebf\u3001\u67f1\u72b6\u56fe\u2026\u2026\uff09</p> </li> <li> <p><code>+</code>\uff1a\u53e0\u52a0\u56fe\u5c42</p> </li> </ul> <p>\u5148\u52a0\u8f7d\u793a\u4f8b\u6570\u636e</p> S<pre><code>library(ggplot2)\n\ndata(mtcars)\nhead(mtcars)\n</code></pre> Text Only<pre><code>##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_1","title":"\u57fa\u7840\u56fe\u5f62","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_2","title":"\u6563\u70b9\u56fe","text":"S<pre><code>ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point()\n</code></pre> <p>\u989c\u8272\u3001\u5927\u5c0f\u6620\u5c04</p> <p>S<pre><code>ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), size = hp)) +\n  geom_point()\n</code></pre> </p> <p><code>factor()</code> \u57fa\u4e8e\u2026\u5206\u7c7b</p> <p>\u56de\u5f52\u7ebf</p> <p>S<pre><code>ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")   # \u7ebf\u6027\u56de\u5f52\u7ebf\uff0clm \u6307\u5e73\u6ed1\u66f2\u7ebf\n</code></pre>     ## <code>geom_smooth()</code> using formula = 'y ~ x'</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_3","title":"\u6298\u7ebf\u56fe","text":"<p>\u57fa\u672c</p> <p>S<pre><code>sales &lt;- data.frame(\n  month = 1:12,\n  value = c(120, 135, 150, 160, 145, 180, 200, 190, 210, 220, 230, 240)\n)\n\nggplot(sales, aes(x = month, y = value)) +\n  geom_line(color = \"steelblue\") + \n  geom_point(color = \"steelblue\", size = 2)\n</code></pre> </p> <p>\u591a\u7ec4</p> S<pre><code>sales2 &lt;- data.frame(\n  month = rep(1:12, 2),\n  value = c(\n    c(120, 135, 150, 160, 145, 180, 200, 190, 210, 220, 230, 240),  # \u90e8\u95e8A\n    c(100, 115, 130, 140, 135, 150, 170, 175, 190, 195, 205, 215)   # \u90e8\u95e8B\n  ),\n  dept = rep(c(\"A\", \"B\"), each = 12)\n)\n\nggplot(sales2, aes(x = month, y = value, color = dept)) +\n  geom_line(size = 1.2) +\n  geom_point()\n</code></pre> <p></p> <p>\u65e5\u671f (\u4f1a\u81ea\u52a8\u4f18\u5316\u7a0b\u5e8f\u5305)</p> <p>S<pre><code>library(lubridate)\n\nsales_date &lt;- data.frame(\n  date = seq(as.Date(\"2023-01-01\"), by = \"month\", length.out = 12),\n  value = c(120, 135, 150, 160, 145, 180, 200, 190, 210, 220, 230, 240)\n)\n\nggplot(sales_date, aes(x = date, y = value)) +\n  geom_line(color = \"darkgreen\") +\n  geom_point(size = 2)\n</code></pre> </p> <p>\u5e73\u6ed1\u7ebf</p> S<pre><code>ggplot(sales2, aes(x = month, y = value, color = dept)) +\n  geom_point() +\n  geom_smooth(se = FALSE)   # \u9ed8\u8ba4\u7528 loess \u5e73\u6ed1\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_4","title":"\u67f1\u72b6 / \u6761\u5f62\u56fe","text":"<p>\u57fa\u672c\u7248\uff08\u8ba1\u6570\u7684\uff09</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"steelblue\")\n</code></pre> </p> <p>\u6a2a\u5411</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"orange\") +\n  coord_flip()\n</code></pre> </p> <p>\u76f4\u63a5\u4f7f\u7528\u503c</p> <p>S<pre><code>sales_sum &lt;- data.frame(\n  dept = c(\"A\", \"B\", \"C\"),\n  revenue = c(120, 150, 100)\n)\n\nggplot(sales_sum, aes(x = dept, y = revenue)) +\n  geom_col(fill = \"darkgreen\")\n</code></pre> </p> <p>\u5e73\u5747\u503c</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  stat_summary(fun = mean, geom = \"bar\")\n</code></pre> </p> <p>\u5206\u7ec4\u67f1\u72b6\u56fe</p> <p>S<pre><code>sales_quarter &lt;- data.frame(\n  dept = rep(c(\"A\", \"B\"), each = 4),\n  quarter = rep(paste0(\"Q\", 1:4), 2),\n  revenue = c(120, 135, 150, 160, 100, 115, 130, 140)\n)\n\nggplot(sales_quarter, aes(x = quarter, y = revenue, fill = dept)) +\n  geom_col(position = \"dodge\")  # \u5e76\u6392\u67f1\u72b6\u56fe\n</code></pre> </p> <p>\u5806\u53e0\u67f1\u72b6\u56fe</p> <p>S<pre><code>ggplot(sales_quarter, aes(x = quarter, y = revenue, fill = dept)) +\n  geom_col(position = \"stack\")\n</code></pre> </p> <p>\u767e\u5206\u6bd4\u67f1\u72b6\u56fe</p> <p>S<pre><code>ggplot(sales_quarter, aes(x = quarter, y = revenue, fill = dept)) +\n  geom_col(position = \"fill\")\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_5","title":"\u7bb1\u7ebf\u56fe","text":"<p>\u57fa\u672c</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"skyblue\")\n</code></pre> </p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightgray\") +\n  geom_jitter(width = 0.2, color = \"red\", alpha = 0.6)  # \u70b9\u7a0d\u5fae\u9519\u5f00\u4e00\u4e9b\n</code></pre> </p> <p>\u6c34\u5e73\u7bb1\u7ebf\u56fe (\u6539 factor \u4e3a y)</p> <p>S<pre><code>ggplot(mtcars, aes(x = mpg, y = factor(cyl))) +\n  geom_boxplot(fill = \"lightgreen\")\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_6","title":"\u5c0f\u63d0\u7434\u56fe","text":"<p>\u57fa\u672c</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_violin(fill = \"lightpink\")\n</code></pre> </p> <p>\u52a0\u4e0a\u7bb1\u7ebf\u56fe</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_violin(fill = \"lightblue\", alpha = 0.6) +\n  geom_boxplot(width = 0.2, fill = \"white\")\n</code></pre> </p> <p>\u52a0\u6563\u70b9</p> <p>S<pre><code>ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_violin(fill = \"lightyellow\", alpha = 0.7) +\n  geom_jitter(width = 0.2, size = 2, alpha = 0.6, color = \"darkred\")\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_7","title":"\u76f4\u65b9\u56fe","text":"<p>S<pre><code>ggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(binwidth = 2, fill = \"skyblue\", color = \"black\")\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_8","title":"\u5bc6\u5ea6\u56fe","text":"<p>S<pre><code>ggplot(mtcars, aes(x = mpg)) +\n  geom_density(fill = \"lightgreen\", alpha = 0.6)\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_9","title":"\u9762\u79ef\u56fe","text":"<p>S<pre><code>library(dplyr)\n\nsales &lt;- data.frame(\n  month = 1:12,\n  value = c(100, 120, 150, 160, 180, 200, 220, 210, 230, 240, 260, 280)\n)\n\nggplot(sales, aes(x = month, y = value)) +\n  geom_area(fill = \"lightblue\", alpha = 0.6)\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_10","title":"\u70ed\u529b\u56fe","text":"<p>S<pre><code>df &lt;- expand.grid(x = 1:10, y = 1:10)\ndf$z &lt;- runif(100, 1, 20)\n\nggplot(df, aes(x, y, fill = z)) +\n  geom_tile()\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#geom_bar-coord_polar","title":"\u997c\u56fe (<code>geom_bar + coord_polar</code>)","text":"<p>S<pre><code>df &lt;- data.frame(\n  category = c(\"A\", \"B\", \"C\"),\n  value = c(30, 45, 25)\n)\n\nggplot(df, aes(x = \"\", y = value, fill = category)) +\n  geom_col(width = 1) +\n  coord_polar(theta = \"y\")\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/ggplot%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/ggplot/#_11","title":"\u96f7\u8fbe\u56fe","text":"<p>\u4f7f\u7528 <code>fmsb</code></p> <p>S<pre><code>library(fmsb)\n\n# \u51c6\u5907\u6570\u636e\uff1a\u7b2c\u4e00\u884c = \u6700\u5927\u503c\uff0c\u7b2c\u4e8c\u884c = \u6700\u5c0f\u503c\ndf &lt;- data.frame(\n  A = c(10, 0, 8, 3),\n  B = c(10, 0, 7, 4),\n  C = c(10, 0, 6, 2),\n  D = c(10, 0, 9, 5),\n  E = c(10, 0, 7, 3)\n)\n\n# \u753b\u96f7\u8fbe\u56fe\nradarchart(df,\n           axistype = 1,\n           pcol = c(\"red\", \"blue\"),\n           plwd = 2,\n           plty = 1,\n           cglcol = \"grey\", cglty = 1, axislabcol = \"grey\",\n           vlcex = 0.8)\n</code></pre> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"\u57fa\u672c\u6570\u636e\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 115 \u4e2a\u5b57\u00a0\u00a027 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#r","title":"R \u8bed\u8a00\u57fa\u7840","text":"<p>\u5148\u5199\u4e00\u4e2a\u8868\u8fbe\u5f0f\u8f85\u52a9\u51fd\u6570</p> S<pre><code>print_expr &lt;- function(expr) {\n  e &lt;- substitute(expr) # \u6355\u83b7\u539f\u59cb\u8868\u8fbe\u5f0f\n  v &lt;- eval(e, envir = parent.frame()) # \u8ba1\u7b97\n\n  # \u786e\u4fdd\u8868\u8fbe\u5f0f\u663e\u793a\u4e3a\u4e00\u884c\n  expr_str &lt;- paste(deparse(e), collapse = \" \")\n\n  cat(expr_str, \"= \")\n\n  if (is.atomic(v) &amp;&amp; length(v) &gt; 1) {\n    cat(v, sep = \" \")\n    cat(\"\\n\")\n  } else if (is.matrix(v) || is.data.frame(v)) {\n    print(v)\n  } else {\n    print(v)\n  }\n\n  invisible(v)\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_1","title":"\u57fa\u672c\u5411\u91cf","text":"S<pre><code># R \u7684\u5411\u91cf\uff0c\u7528 c() \u521b\u5efa\nx &lt;- c(1, 2, 3, 4)\n</code></pre> S<pre><code>print_expr(x[1]) # R \u53d6\u7b2c1\u4e2a\uff0c\u4e0b\u6807\u4ece 1 \u5f00\u59cb\n</code></pre> Text Only<pre><code>## x[1] = [1] 1\n</code></pre> S<pre><code>print_expr(x + 1)\n</code></pre> Text Only<pre><code>## x + 1 = 2 3 4 5\n</code></pre> S<pre><code>print_expr(x)\n</code></pre> Text Only<pre><code>## x = 1 2 3 4\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#dataframe","title":"\u6570\u636e Dataframe","text":"S<pre><code>df &lt;- data.frame(\n  id = 1:8,\n  name = c(\"Alice\", \"Bob\", \"Carol\", \"David\", \"Eve\", \"Frank\", \"Grace\", \"Heidi\"),\n  dept = c(\"HR\", \"IT\", \"Finance\", \"HR\", \"Finance\", \"IT\", \"Finance\", \"HR\"),\n  age = c(25, 30, 27, 22, 29, 35, 28, 26),\n  score = c(80, 95, 67, 88, 90, 72, 85, 60),\n  feat_a = c(1.2, 3.4, 2.5, 0.9, 4.1, 3.3, 2.9, 1.5),\n  feat_b = c(5, 6, 7, 5, 8, 7, 6, 5),\n  warn_flag = c(TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE)\n)\ndf\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n## 6  6 Frank      IT  35    72    3.3      7      TRUE\n## 7  7 Grace Finance  28    85    2.9      6     FALSE\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_2","title":"\u8bbf\u95ee\u5217","text":"<p>\u8fd4\u56de\u5217\u5411\u91cf <code>c()</code></p> S<pre><code>df$a # \u7528 $ \u8bbf\u95ee\u5217\n</code></pre> Text Only<pre><code>## [1] 25 30 27 22 29 35 28 26\n</code></pre> S<pre><code>df[[\"a\"]] # \u7c7b\u4f3c Python \u7684 df[\"age\"]\n</code></pre> Text Only<pre><code>## NULL\n</code></pre> S<pre><code>df[, \"a\"] # \u6309\u5217\u540d\u53d6\n</code></pre> Text Only<pre><code>## Error in `[.data.frame`(df, , \"a\"): \u9009\u62e9\u4e86\u672a\u5b9a\u4e49\u7684\u5217\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_3","title":"\u8bbf\u95ee\u884c","text":"<p>\u8fd4\u56de Dataframe</p> S<pre><code>df[1, ] # \u7b2c\u4e00\u884c\n</code></pre> Text Only<pre><code>##   id  name dept age score feat_a feat_b warn_flag\n## 1  1 Alice   HR  25    80    1.2      5      TRUE\n</code></pre> S<pre><code>df[2, ] # \u7b2c\u4e8c\u884c\n</code></pre> Text Only<pre><code>##   id name dept age score feat_a feat_b warn_flag\n## 2  2  Bob   IT  30    95    3.4      6     FALSE\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_4","title":"\u6761\u4ef6\u7b5b\u9009","text":"S<pre><code>df[df$b &gt; 2, ] # b &gt; 2 \u7684\u884c\n</code></pre> Text Only<pre><code>## [1] id        name      dept      age       score     feat_a    feat_b    warn_flag\n## &lt;0 \u884c&gt; (\u62160-\u957f\u5ea6\u7684row.names)\n</code></pre> S<pre><code>df[df$a == \"a\", ]\n</code></pre> Text Only<pre><code>## [1] id        name      dept      age       score     feat_a    feat_b    warn_flag\n## &lt;0 \u884c&gt; (\u62160-\u957f\u5ea6\u7684row.names)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#dplyr","title":"dplyr","text":"<p>%&gt;% \u53eb\u505a \u7ba1\u9053\u64cd\u4f5c\u7b26\uff08pipe operator\uff09\uff0c\u5c31\u50cf\u628a\u4e00\u6761\u6570\u636e\u5206\u6790\u6d41\u6c34\u7ebf\u5199\u51fa\u6765\uff0c\u7c7b\u4f3c\u4e8e Python \u91cc\u94fe\u5f0f\u8c03\u7528 <code>df.query().groupby().mean()</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_5","title":"\u6838\u5fc3\u52a8\u8bcd","text":"<ul> <li> <p><code>filter</code>: \u6309\u884c\u7b5b\u9009</p> S<pre><code>df %&gt;% filter(age &gt; 25, score &gt;= 80)      # \u4e0e\u6761\u4ef6\u9ed8\u8ba4AND\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  2   Bob      IT  30    95    3.4      6     FALSE\n## 2  5   Eve Finance  29    90    4.1      8     FALSE\n## 3  7 Grace Finance  28    85    2.9      6     FALSE\n</code></pre> S<pre><code>df %&gt;% filter(age &gt; 25 | score &gt;= 80)     # OR\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n## 6  6 Frank      IT  35    72    3.3      7      TRUE\n## 7  7 Grace Finance  28    85    2.9      6     FALSE\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE\n</code></pre> S<pre><code>df %&gt;% filter(!is.na(score))              # \u5904\u7406\u7f3a\u5931\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n## 6  6 Frank      IT  35    72    3.3      7      TRUE\n## 7  7 Grace Finance  28    85    2.9      6     FALSE\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE\n</code></pre> </li> <li> <p><code>select</code> / <code>rename</code> / <code>relocate</code> : \u9009\u5217\u3001\u91cd\u547d\u540d\u3001\u632a\u5217</p> S<pre><code>df %&gt;% select(name, age, score)\n</code></pre> Text Only<pre><code>##    name age score\n## 1 Alice  25    80\n## 2   Bob  30    95\n## 3 Carol  27    67\n## 4 David  22    88\n## 5   Eve  29    90\n## 6 Frank  35    72\n## 7 Grace  28    85\n## 8 Heidi  26    60\n</code></pre> S<pre><code>df %&gt;% select(-name, starts_with(\"feat_\"))     # tidyselect \u8bed\u6cd5\n</code></pre> Text Only<pre><code>##   id    dept age score feat_a feat_b warn_flag\n## 1  1      HR  25    80    1.2      5      TRUE\n## 2  2      IT  30    95    3.4      6     FALSE\n## 3  3 Finance  27    67    2.5      7      TRUE\n## 4  4      HR  22    88    0.9      5     FALSE\n## 5  5 Finance  29    90    4.1      8     FALSE\n## 6  6      IT  35    72    3.3      7      TRUE\n## 7  7 Finance  28    85    2.9      6     FALSE\n## 8  8      HR  26    60    1.5      5      TRUE\n</code></pre> S<pre><code>df %&gt;% rename(avg = score)                   # rename(new = old)\n</code></pre> Text Only<pre><code>##   id  name    dept age avg feat_a feat_b warn_flag\n## 1  1 Alice      HR  25  80    1.2      5      TRUE\n## 2  2   Bob      IT  30  95    3.4      6     FALSE\n## 3  3 Carol Finance  27  67    2.5      7      TRUE\n## 4  4 David      HR  22  88    0.9      5     FALSE\n## 5  5   Eve Finance  29  90    4.1      8     FALSE\n## 6  6 Frank      IT  35  72    3.3      7      TRUE\n## 7  7 Grace Finance  28  85    2.9      6     FALSE\n## 8  8 Heidi      HR  26  60    1.5      5      TRUE\n</code></pre> S<pre><code>df %&gt;% relocate(score, .after = name)        # \u8c03\u6574\u5217\u987a\u5e8f\n</code></pre> Text Only<pre><code>##   id  name score    dept age feat_a feat_b warn_flag\n## 1  1 Alice    80      HR  25    1.2      5      TRUE\n## 2  2   Bob    95      IT  30    3.4      6     FALSE\n## 3  3 Carol    67 Finance  27    2.5      7      TRUE\n## 4  4 David    88      HR  22    0.9      5     FALSE\n## 5  5   Eve    90 Finance  29    4.1      8     FALSE\n## 6  6 Frank    72      IT  35    3.3      7      TRUE\n## 7  7 Grace    85 Finance  28    2.9      6     FALSE\n## 8  8 Heidi    60      HR  26    1.5      5      TRUE\n</code></pre> </li> <li> <p><code>arrange</code> : \u6392\u5e8f</p> S<pre><code>df %&gt;% arrange(age, desc(score))\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  4 David      HR  22    88    0.9      5     FALSE\n## 2  1 Alice      HR  25    80    1.2      5      TRUE\n## 3  8 Heidi      HR  26    60    1.5      5      TRUE\n## 4  3 Carol Finance  27    67    2.5      7      TRUE\n## 5  7 Grace Finance  28    85    2.9      6     FALSE\n## 6  5   Eve Finance  29    90    4.1      8     FALSE\n## 7  2   Bob      IT  30    95    3.4      6     FALSE\n## 8  6 Frank      IT  35    72    3.3      7      TRUE\n</code></pre> </li> <li> <p><code>mutats</code> / <code>transmute</code> : \u9020\u5217</p> S<pre><code>df %&gt;% mutate(zscore = (score - mean(score, na.rm = TRUE)) / sd(score, na.rm = TRUE))\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag      zscore\n## 1  1 Alice      HR  25    80    1.2      5      TRUE  0.03067894\n## 2  2   Bob      IT  30    95    3.4      6     FALSE  1.25783668\n## 3  3 Carol Finance  27    67    2.5      7      TRUE -1.03285776\n## 4  4 David      HR  22    88    0.9      5     FALSE  0.68516307\n## 5  5   Eve Finance  29    90    4.1      8     FALSE  0.84878410\n## 6  6 Frank      IT  35    72    3.3      7      TRUE -0.62380518\n## 7  7 Grace Finance  28    85    2.9      6     FALSE  0.43973152\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE -1.60553137\n</code></pre> S<pre><code>df %&gt;% transmute(name, zscore = (score - mean(score, na.rm = TRUE)) / sd(score, na.rm = TRUE))  # \u53ea\u4fdd\u7559\u65b0\u5217\n</code></pre> Text Only<pre><code>##    name      zscore\n## 1 Alice  0.03067894\n## 2   Bob  1.25783668\n## 3 Carol -1.03285776\n## 4 David  0.68516307\n## 5   Eve  0.84878410\n## 6 Frank -0.62380518\n## 7 Grace  0.43973152\n## 8 Heidi -1.60553137\n</code></pre> </li> <li> <p><code>summarise</code>\uff08\u7edf\u8ba1\u6c47\u603b\uff09+ <code>group_by</code>\uff08\u5206\u7ec4\uff09</p> S<pre><code>df %&gt;%\n  group_by(dept) %&gt;%\n  summarise(\n    n = n(),\n    mean_score = mean(score, na.rm = TRUE),\n    n_unique_name = n_distinct(name),\n    .groups = \"drop\"  # \u6c47\u603b\u540e\u53bb\u6389\u5206\u7ec4\uff0c\u5e38\u7528\n)\n</code></pre> Text Only<pre><code>## # A tibble: 3 \u00d7 4\n##   dept        n mean_score n_unique_name\n##   &lt;chr&gt;   &lt;int&gt;      &lt;dbl&gt;         &lt;int&gt;\n## 1 Finance     3       80.7             3\n## 2 HR          3       76               3\n## 3 IT          2       83.5             2\n</code></pre> <p>\u6216\u8005</p> S<pre><code>df %&gt;%\n  summarise(\n    n = n(),\n    mean_score = mean(score, na.rm = TRUE),\n    .by = dept\n  )\n</code></pre> Text Only<pre><code>##      dept n mean_score\n## 1      HR 3   76.00000\n## 2      IT 2   83.50000\n## 3 Finance 3   80.66667\n</code></pre> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_6","title":"\u6279\u91cf\u64cd\u4f5c","text":"<p><code>across</code> + <code>tidyselect</code></p> S<pre><code># \u6240\u6709\u6570\u503c\u5217\u505a\u6807\u51c6\u5316\ndf %&gt;% mutate(across(where(is.numeric),\n                     ~ (.-mean(., na.rm=TRUE))/sd(., na.rm=TRUE)))\n</code></pre> Text Only<pre><code>##           id  name    dept         age       score      feat_a     feat_b warn_flag\n## 1 -1.4288690 Alice      HR -0.71517371  0.03067894 -1.09938306 -0.9991193      TRUE\n## 2 -1.0206207   Bob      IT  0.58514212  1.25783668  0.79759164 -0.1110133     FALSE\n## 3 -0.6123724 Carol Finance -0.19504737 -1.03285776  0.02155653  0.7770928      TRUE\n## 4 -0.2041241 David      HR -1.49536320  0.68516307 -1.35806143 -0.9991193     FALSE\n## 5  0.2041241   Eve Finance  0.32507896  0.84878410  1.40117449  1.6651989     FALSE\n## 6  0.6123724 Frank      IT  1.88545795 -0.62380518  0.71136551  0.7770928      TRUE\n## 7  1.0206207 Grace Finance  0.06501579  0.43973152  0.36646102 -0.1110133     FALSE\n## 8  1.4288690 Heidi      HR -0.45511054 -1.60553137 -0.84070470 -0.9991193      TRUE\n</code></pre> S<pre><code># \u6307\u5b9a\u5217\u540d\u6a21\u5f0f\ndf %&gt;% mutate(across(starts_with(\"feat_\"), log1p))\n</code></pre> Text Only<pre><code>##   id  name    dept age score    feat_a   feat_b warn_flag\n## 1  1 Alice      HR  25    80 0.7884574 1.791759      TRUE\n## 2  2   Bob      IT  30    95 1.4816045 1.945910     FALSE\n## 3  3 Carol Finance  27    67 1.2527630 2.079442      TRUE\n## 4  4 David      HR  22    88 0.6418539 1.791759     FALSE\n## 5  5   Eve Finance  29    90 1.6292405 2.197225     FALSE\n## 6  6 Frank      IT  35    72 1.4586150 2.079442      TRUE\n## 7  7 Grace Finance  28    85 1.3609766 1.945910     FALSE\n## 8  8 Heidi      HR  26    60 0.9162907 1.791759      TRUE\n</code></pre> S<pre><code># \u591a\u4e2a\u7edf\u8ba1\u91cf\u6c47\u603b\u5e76\u91cd\u547d\u540d\ndf %&gt;%\n  summarise(across(where(is.numeric),\n                   list(mean = ~mean(., na.rm=TRUE),\n                        sd   = ~sd(., na.rm=TRUE)),\n                   .names = \"{.col}_{.fn}\"),\n            .by = dept)\n</code></pre> Text Only<pre><code>##      dept  id_mean    id_sd age_mean   age_sd score_mean score_sd feat_a_mean  feat_a_sd feat_b_mean feat_b_sd\n## 1      HR 4.333333 3.511885 24.33333 2.081666   76.00000 14.42221    1.200000 0.30000000         5.0 0.0000000\n## 2      IT 4.000000 2.828427 32.50000 3.535534   83.50000 16.26346    3.350000 0.07071068         6.5 0.7071068\n## 3 Finance 5.000000 2.000000 28.00000 1.000000   80.66667 12.09683    3.166667 0.83266640         7.0 1.0000000\n</code></pre> <p>\u5e38\u7528 tidyselect:</p> <ul> <li> <p><code>starts_with(\"x\")</code>, <code>ends_with(\"y\")</code>, <code>contains(\"key\")</code>, <code>matches(\"regex\")</code></p> </li> <li> <p><code>where(is.numeric)</code>, <code>everything()</code></p> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_7","title":"\u884c\u64cd\u4f5c\u4e0e\u53d6\u6837","text":"<p><code>slice</code> / <code>distinct</code> / <code>count</code></p> S<pre><code>df %&gt;% slice(1:5)                 # \u524d\u4e94\u884c\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n</code></pre> S<pre><code>df %&gt;% slice_head(n = 5)          # \u7b49\u4ef7\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n</code></pre> S<pre><code>df %&gt;% slice_max(order_by = score, n = 3)  # \u6700\u9ad8\u5206\u524d3\uff08\u66ff\u4ee3\u5df2\u5e9f\u5f03\u7684 top_n\uff09\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  2   Bob      IT  30    95    3.4      6     FALSE\n## 2  5   Eve Finance  29    90    4.1      8     FALSE\n## 3  4 David      HR  22    88    0.9      5     FALSE\n</code></pre> S<pre><code>df %&gt;% distinct(name, .keep_all = TRUE)    # \u53bb\u91cd\uff08\u6309 name \u4fdd\u7559\u7b2c\u4e00\u6761\uff09\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  1 Alice      HR  25    80    1.2      5      TRUE\n## 2  2   Bob      IT  30    95    3.4      6     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  4 David      HR  22    88    0.9      5     FALSE\n## 5  5   Eve Finance  29    90    4.1      8     FALSE\n## 6  6 Frank      IT  35    72    3.3      7      TRUE\n## 7  7 Grace Finance  28    85    2.9      6     FALSE\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE\n</code></pre> S<pre><code>df %&gt;% count(dept, sort = TRUE)            # \u8ba1\u6570\uff08Pandas: value_counts\uff09\n</code></pre> Text Only<pre><code>##      dept n\n## 1 Finance 3\n## 2      HR 3\n## 3      IT 2\n</code></pre> S<pre><code>df %&gt;% add_count(dept)                      # \u5728\u539f\u8868\u4e0a\u6dfb\u52a0\u8ba1\u6570\u5217\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag n\n## 1  1 Alice      HR  25    80    1.2      5      TRUE 3\n## 2  2   Bob      IT  30    95    3.4      6     FALSE 2\n## 3  3 Carol Finance  27    67    2.5      7      TRUE 3\n## 4  4 David      HR  22    88    0.9      5     FALSE 3\n## 5  5   Eve Finance  29    90    4.1      8     FALSE 3\n## 6  6 Frank      IT  35    72    3.3      7      TRUE 2\n## 7  7 Grace Finance  28    85    2.9      6     FALSE 3\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE 3\n</code></pre> S<pre><code>df %&gt;% slice_sample(n = 100)                # \u968f\u673a\u62bd\u6837\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag\n## 1  8 Heidi      HR  26    60    1.5      5      TRUE\n## 2  4 David      HR  22    88    0.9      5     FALSE\n## 3  3 Carol Finance  27    67    2.5      7      TRUE\n## 4  6 Frank      IT  35    72    3.3      7      TRUE\n## 5  1 Alice      HR  25    80    1.2      5      TRUE\n## 6  7 Grace Finance  28    85    2.9      6     FALSE\n## 7  2   Bob      IT  30    95    3.4      6     FALSE\n## 8  5   Eve Finance  29    90    4.1      8     FALSE\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_8","title":"\u5206\u7ec4\u5185\u7684\u300c\u7a97\u53e3\u51fd\u6570\u300d\u4e0e\u6392\u540d","text":"<p>(\u6709\u70b9\u590d\u6742)</p> S<pre><code>df %&gt;%\n  arrange(dept, desc(score)) %&gt;%\n  group_by(dept) %&gt;%\n  mutate(\n    rk = row_number(),          # \u7ec4\u5185\u540d\u6b21\uff08\u4e25\u683c\u9012\u589e\uff09\n    dr = dense_rank(desc(score)),# \u7ec4\u5185\u6392\u540d\uff08\u5e76\u5217\u4e0d\u8df3\u53f7\uff09\n    sdiff = score - lag(score), # \u4e0e\u4e0a\u4e00\u540d\u5dee\u8ddd\n    next_score = lead(score)    # \u4e0b\u4e00\u540d\u5206\u6570\n  ) %&gt;%\n  ungroup()\n</code></pre> Text Only<pre><code>## # A tibble: 8 \u00d7 12\n##      id name  dept      age score feat_a feat_b warn_flag    rk    dr sdiff next_score\n##   &lt;int&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;lgl&gt;     &lt;int&gt; &lt;int&gt; &lt;dbl&gt;      &lt;dbl&gt;\n## 1     5 Eve   Finance    29    90    4.1      8 FALSE         1     1    NA         85\n## 2     7 Grace Finance    28    85    2.9      6 FALSE         2     2    -5         67\n## 3     3 Carol Finance    27    67    2.5      7 TRUE          3     3   -18         NA\n## 4     4 David HR         22    88    0.9      5 FALSE         1     1    NA         80\n## 5     1 Alice HR         25    80    1.2      5 TRUE          2     2    -8         60\n## 6     8 Heidi HR         26    60    1.5      5 TRUE          3     3   -20         NA\n## 7     2 Bob   IT         30    95    3.4      6 FALSE         1     1    NA         72\n## 8     6 Frank IT         35    72    3.3      7 TRUE          2     2   -23         NA\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_9","title":"\u6761\u4ef6\u4e0e\u7f3a\u5931\u503c\u5904\u7406","text":"<p><code>case_when</code> / <code>if_else</code> / <code>coalesce</code></p> S<pre><code>df %&gt;%\n  mutate(\n    level = case_when(\n      score &gt;= 90 ~ \"A\",\n      score &gt;= 80 ~ \"B\",\n      score &gt;= 70 ~ \"C\",\n      TRUE        ~ \"D\"\n    ),\n    pass = if_else(score &gt;= 60, TRUE, FALSE, missing = NA),\n    score_filled = coalesce(score, 0)   # \u75280\u586b\u8865\u7f3a\u5931\n  )\n</code></pre> Text Only<pre><code>##   id  name    dept age score feat_a feat_b warn_flag level pass score_filled\n## 1  1 Alice      HR  25    80    1.2      5      TRUE     B TRUE           80\n## 2  2   Bob      IT  30    95    3.4      6     FALSE     A TRUE           95\n## 3  3 Carol Finance  27    67    2.5      7      TRUE     D TRUE           67\n## 4  4 David      HR  22    88    0.9      5     FALSE     B TRUE           88\n## 5  5   Eve Finance  29    90    4.1      8     FALSE     A TRUE           90\n## 6  6 Frank      IT  35    72    3.3      7      TRUE     C TRUE           72\n## 7  7 Grace Finance  28    85    2.9      6     FALSE     B TRUE           85\n## 8  8 Heidi      HR  26    60    1.5      5      TRUE     D TRUE           60\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#join","title":"\u8fde\u63a5 (<code>join</code>)","text":"<p>\u8bbe <code>users(id, name)</code> \u4e0e <code>scores(uid, score)</code> :</p> S<pre><code># \u7528\u6237\u8868\nusers &lt;- data.frame(\n  id = 1:6,\n  name = c(\"Alice\", \"Bob\", \"Carol\", \"David\", \"Eve\", \"Frank\")\n)\n\n# \u6210\u7ee9\u8868\nscores &lt;- data.frame(\n  uid = c(1, 2, 2, 3, 5, 6, 6),\n  score = c(80, 95, 88, 67, 90, 72, 85)\n)\n</code></pre> S<pre><code>left_join(users, scores, by = c(\"id\" = \"uid\"))   # \u5de6\u8fde\u63a5\n</code></pre> Text Only<pre><code>##   id  name score\n## 1  1 Alice    80\n## 2  2   Bob    95\n## 3  2   Bob    88\n## 4  3 Carol    67\n## 5  4 David    NA\n## 6  5   Eve    90\n## 7  6 Frank    72\n## 8  6 Frank    85\n</code></pre> S<pre><code>inner_join(users, scores, by = c(\"id\" = \"uid\"))  # \u5185\u8fde\u63a5\n</code></pre> Text Only<pre><code>##   id  name score\n## 1  1 Alice    80\n## 2  2   Bob    95\n## 3  2   Bob    88\n## 4  3 Carol    67\n## 5  5   Eve    90\n## 6  6 Frank    72\n## 7  6 Frank    85\n</code></pre> S<pre><code>right_join(users, scores, by = c(\"id\" = \"uid\"))  # \u53f3\u8fde\u63a5\n</code></pre> Text Only<pre><code>##   id  name score\n## 1  1 Alice    80\n## 2  2   Bob    95\n## 3  2   Bob    88\n## 4  3 Carol    67\n## 5  5   Eve    90\n## 6  6 Frank    72\n## 7  6 Frank    85\n</code></pre> S<pre><code>full_join(users, scores, by = c(\"id\" = \"uid\"))   # \u5168\u8fde\u63a5\n</code></pre> Text Only<pre><code>##   id  name score\n## 1  1 Alice    80\n## 2  2   Bob    95\n## 3  2   Bob    88\n## 4  3 Carol    67\n## 5  4 David    NA\n## 6  5   Eve    90\n## 7  6 Frank    72\n## 8  6 Frank    85\n</code></pre> S<pre><code>semi_join(users, scores, by = c(\"id\" = \"uid\"))   # \u8fc7\u6ee4\u51fa\u80fd\u5339\u914d\u4e0a\u7684 users\uff08\u4e0d\u5f15\u5165\u5217\uff09\n</code></pre> Text Only<pre><code>##   id  name\n## 1  1 Alice\n## 2  2   Bob\n## 3  3 Carol\n## 4  5   Eve\n## 5  6 Frank\n</code></pre> S<pre><code>anti_join(users, scores, by = c(\"id\" = \"uid\"))   # \u8fc7\u6ee4\u51fa\u5339\u914d\u4e0d\u4e0a\u7684 users\uff08\u627e\u5b64\u513f\u884c\uff09\n</code></pre> Text Only<pre><code>##   id  name\n## 1  4 David\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/R/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#rowwise","title":"<code>rowwise</code>","text":"S<pre><code>df %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    max_feat = max(c_across(starts_with(\"feat_\")), na.rm = TRUE),\n    any_warn = any(c_across(ends_with(\"_warn\")))\n  ) %&gt;%\n  ungroup()\n</code></pre> Text Only<pre><code>## # A tibble: 8 \u00d7 10\n##      id name  dept      age score feat_a feat_b warn_flag max_feat any_warn\n##   &lt;int&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;lgl&gt;        &lt;dbl&gt; &lt;lgl&gt;   \n## 1     1 Alice HR         25    80    1.2      5 TRUE             5 FALSE   \n## 2     2 Bob   IT         30    95    3.4      6 FALSE            6 FALSE   \n## 3     3 Carol Finance    27    67    2.5      7 TRUE             7 FALSE   \n## 4     4 David HR         22    88    0.9      5 FALSE            5 FALSE   \n## 5     5 Eve   Finance    29    90    4.1      8 FALSE            8 FALSE   \n## 6     6 Frank IT         35    72    3.3      7 TRUE             7 FALSE   \n## 7     7 Grace Finance    28    85    2.9      6 FALSE            6 FALSE   \n## 8     8 Heidi HR         26    60    1.5      5 TRUE             5 FALSE\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/","title":"tmux","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 158 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6211\u8981\u7528 tmux \u4ee3\u66ff screen!</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li><code>session</code>: \u4f1a\u8bdd (\u4efb\u52a1)</li> <li><code>windows</code>: \u7a97\u53e3</li> <li><code>pane</code>: \u7a97\u683c</li> </ul> <p>\u5173\u7cfb\uff1a \\(\\mathrm{pane} \\in \\mathrm{window} \\in \\mathrm{session}\\)</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#session","title":"Session \u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_2","title":"\u542f\u52a8","text":"<p>\u9ed8\u8ba4 <code>tmux</code> \u542f\u52a8\u4e00\u4e2a id \u4e3a 0 \u7684 session</p> Bash<pre><code>tmux new -s session-name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_3","title":"\u5206\u79bb","text":"<p>\u5f53\u524d session \u4e0e\u5f53\u524d\u7a97\u53e3\u5206\u79bb\uff0csession \u8f6c\u5230\u540e\u53f0\u8fd0\u884c.</p> Bash<pre><code>tmux detach\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_4","title":"\u7ed1\u5b9a","text":"Bash<pre><code>tmux attach -t session-name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_5","title":"\u5207\u6362","text":"Bash<pre><code>tmux switch -t session-name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_6","title":"\u9000\u51fa","text":"Bash<pre><code>tmux kill-session -t session-name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_7","title":"\u91cd\u547d\u540d","text":"Bash<pre><code>tmux rename-session -t old-session new-session\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#window","title":"Window \u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_8","title":"\u65b0\u5efa","text":"Bash<pre><code>tmux new-window -n your-window-name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_9","title":"\u5207\u6362\u7a97\u53e3","text":"<ul> <li>ctrl+b c: \u521b\u5efa\u4e00\u4e2a\u65b0\u7a97\u53e3\uff08\u72b6\u6001\u680f\u4f1a\u663e\u793a\u591a\u4e2a\u7a97\u53e3\u7684\u4fe1\u606f\uff09</li> <li>ctrl+b p: \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u7a97\u53e3\uff08\u6309\u7167\u72b6\u6001\u680f\u7684\u987a\u5e8f\uff09</li> <li>ctrl+b n: \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3</li> <li>ctrl+b w: \u4ece\u5217\u8868\u4e2d\u9009\u62e9\u7a97\u53e3\uff08\u8fd9\u4e2a\u6700\u597d\u7528\uff09</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_10","title":"\u91cd\u547d\u540d","text":"Bash<pre><code>tmux rename-window -t old_name new_name\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#pane","title":"Pane \u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_11","title":"\u5212\u5206\u7a97\u683c","text":"Bash<pre><code># \u5212\u5206\u4e3a\u4e0a\u4e0b\u4e24\u4e2a\u7a97\u683c\ntmux split-window\n\n# \u5212\u5206\u5de6\u53f3\u4e24\u4e2a\u7a97\u683c\ntmux split-window -h\n</code></pre> <ul> <li>\u5de6\u53f3\u5212\u5206\uff1actrl+b %</li> <li>\u4e0a\u4e0b\u5212\u5206\uff1actrl+b \"</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_12","title":"\u5173\u95ed\u7a97\u683c","text":"<ul> <li>ctrl + d, \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7a97\u683c\u5c31\u662f\u5173\u95ed window \u4e86.</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/tmux/tmux/#_13","title":"\u67e5\u770b","text":"Bash<pre><code># \u5217\u51fa\u6240\u6709\u5feb\u6377\u952e\uff0c\u53ca\u5176\u5bf9\u5e94\u7684 Tmux \u547d\u4ee4\ntmux list-keys\n\n# \u5217\u51fa\u6240\u6709 Tmux \u547d\u4ee4\u53ca\u5176\u53c2\u6570\ntmux list-commands\n\n# \u5217\u51fa\u5f53\u524d\u6240\u6709 Tmux \u4f1a\u8bdd\u7684\u4fe1\u606f\ntmux info\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/","title":"Vim","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 586 \u4e2a\u5b57\u00a0\u00a040 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vim-cheat-sheet","title":"Vim \u64cd\u4f5c\u5927\u5168\uff08Cheat Sheet\uff09","text":"<p>\u4e00\u4efd\u5b8c\u6574\u7684 Vim \u64cd\u4f5c\u901f\u67e5\u7b14\u8bb0 \u9002\u7528\u4e8e Ubuntu / WSL / VSCode / Neovim \u7b49\u73af\u5883\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#modes","title":"\ud83d\uddc2\ufe0f \u57fa\u672c\u6a21\u5f0f\uff08Modes\uff09","text":"\u6a21\u5f0f \u8fdb\u5165\u65b9\u5f0f \u8bf4\u660e \u666e\u901a\u6a21\u5f0f (Normal) <code>Esc</code> \u9ed8\u8ba4\u6a21\u5f0f\uff0c\u7528\u4e8e\u79fb\u52a8\u3001\u590d\u5236\u3001\u5220\u9664\u7b49 \u63d2\u5165\u6a21\u5f0f (Insert) <code>i</code> / <code>a</code> / <code>o</code> \u7f16\u8f91\u6587\u5b57 \u53ef\u89c6\u6a21\u5f0f (Visual) <code>v</code> / <code>V</code> / <code>Ctrl+v</code> \u9009\u4e2d\u5b57\u7b26\u3001\u884c\u3001\u77e9\u5f62\u533a\u57df \u547d\u4ee4\u6a21\u5f0f (Command-line) <code>:</code> \u6267\u884c\u4fdd\u5b58\u3001\u9000\u51fa\u3001\u641c\u7d22\u7b49\u547d\u4ee4"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#insert-mode","title":"\u270d\ufe0f \u63d2\u5165\u6a21\u5f0f\uff08Insert Mode\uff09","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u63d2\u5165\u5149\u6807\u524d <code>i</code> insert before cursor \u63d2\u5165\u5149\u6807\u540e <code>a</code> append after cursor \u63d2\u5165\u884c\u9996 <code>I</code> insert at beginning of line \u63d2\u5165\u884c\u5c3e <code>A</code> append at end of line \u5728\u4e0b\u65b9\u65b0\u5efa\u884c <code>o</code> open a new line below \u5728\u4e0a\u65b9\u65b0\u5efa\u884c <code>O</code> open a new line above \u9000\u51fa\u63d2\u5165\u6a21\u5f0f <code>Esc</code> \u56de\u5230\u666e\u901a\u6a21\u5f0f"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_1","title":"\ud83d\udce6 \u6587\u4ef6\u64cd\u4f5c","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u4fdd\u5b58\u6587\u4ef6 <code>:w</code> write \u4fdd\u5b58\u5e76\u9000\u51fa <code>:wq</code> \u6216 <code>:x</code> save &amp; quit \u9000\u51fa\u4e0d\u4fdd\u5b58 <code>:q!</code> quit without saving \u4ec5\u9000\u51fa <code>:q</code> quit \u53e6\u5b58\u4e3a <code>:w filename</code> save as filename \u6253\u5f00\u6587\u4ef6 <code>:e filename</code> edit file \u67e5\u770b\u6253\u5f00\u6587\u4ef6 <code>:ls</code> show buffer list \u5207\u6362\u6587\u4ef6 <code>:b1</code>, <code>:b2</code> switch buffer"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#normal","title":"\ud83e\udded \u5149\u6807\u79fb\u52a8\uff08Normal \u6a21\u5f0f\uff09","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u5de6 / \u4e0b / \u4e0a / \u53f3 <code>h</code> / <code>j</code> / <code>k</code> / <code>l</code> \u57fa\u672c\u79fb\u52a8 \u884c\u9996 / \u884c\u5c3e <code>0</code> / <code>$</code> move to start / end of line \u5411\u524d / \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd <code>w</code> / <code>b</code> word forward/backward \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934 / \u7ed3\u5c3e <code>gg</code> / <code>G</code> first / last line \u8df3\u5230\u7b2c n \u884c <code>:n</code> \u6216 <code>nG</code> go to line n \u5c4f\u5e55\u79fb\u52a8 <code>Ctrl+u</code> / <code>Ctrl+d</code> up / down half page \u5411\u4e0a / \u5411\u4e0b\u6eda\u52a8\u4e00\u884c <code>Ctrl+y</code> / <code>Ctrl+e</code> scroll up/down one line \u5b9a\u4f4d\u5230\u5339\u914d\u7684\u62ec\u53f7 <code>%</code> match parentheses"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_2","title":"\u2702\ufe0f \u7f16\u8f91\u64cd\u4f5c\uff08\u5220\u9664 / \u590d\u5236 / \u7c98\u8d34\uff09","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 <code>x</code> delete char \u5220\u9664\u6574\u884c <code>dd</code> delete line \u5220\u9664 n \u884c <code>ndd</code> delete n lines \u5220\u9664\u5230\u884c\u5c3e <code>D</code> delete to end of line \u590d\u5236\uff08yank\uff09\u4e00\u884c <code>yy</code> yank line \u590d\u5236\u9009\u5b9a\u533a\u57df <code>y</code> in visual mode \u7c98\u8d34\u5230\u5149\u6807\u540e <code>p</code> paste \u7c98\u8d34\u5230\u5149\u6807\u524d <code>P</code> paste before cursor \u66ff\u6362\u5b57\u7b26 <code>r&lt;char&gt;</code> replace one character \u64a4\u9500 / \u91cd\u505a <code>u</code> / <code>Ctrl+r</code> undo / redo"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_3","title":"\ud83d\udd0d \u641c\u7d22\u4e0e\u66ff\u6362","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u641c\u7d22\u5b57\u7b26\u4e32 <code>/pattern</code> forward search \u5411\u540e\u641c\u7d22 <code>?pattern</code> backward search \u4e0b\u4e00\u4e2a\u5339\u914d <code>n</code> next result \u4e0a\u4e00\u4e2a\u5339\u914d <code>N</code> previous result \u66ff\u6362\u5355\u4e2a\u5339\u914d <code>:s/old/new/</code> substitute once \u66ff\u6362\u6574\u884c\u6240\u6709\u5339\u914d <code>:s/old/new/g</code> substitute globally in line \u66ff\u6362\u5168\u6587\u4ef6 <code>:%s/old/new/g</code> substitute globally in file \u5927\u5c0f\u5199\u4e0d\u654f\u611f\u641c\u7d22 <code>/pattern\\c</code> case-insensitive search"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#visual-mode","title":"\ud83c\udfaf \u53ef\u89c6\u6a21\u5f0f\uff08Visual Mode\uff09","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u8fdb\u5165\u5b57\u7b26\u9009\u62e9 <code>v</code> visual mode \u8fdb\u5165\u884c\u9009\u62e9 <code>V</code> visual line mode \u8fdb\u5165\u5757\u9009\u62e9 <code>Ctrl+v</code> visual block mode \u590d\u5236 <code>y</code> yank \u5220\u9664 <code>d</code> delete \u7c98\u8d34 <code>p</code> paste \u7f29\u8fdb / \u53cd\u7f29\u8fdb <code>&gt;</code> / <code>&lt;</code> indent / unindent"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_4","title":"\ud83e\udde9 \u591a\u6587\u4ef6 / \u5206\u5c4f\u64cd\u4f5c","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u6c34\u5e73\u5206\u5c4f <code>:sp filename</code> split window horizontally \u5782\u76f4\u5206\u5c4f <code>:vsp filename</code> split vertically \u5207\u6362\u5206\u5c4f <code>Ctrl+w</code> + <code>\u65b9\u5411\u952e</code> move between windows \u5173\u95ed\u5f53\u524d\u5206\u5c4f <code>:q</code> quit window \u6253\u5f00\u65b0\u6807\u7b7e\u9875 <code>:tabnew</code> new tab \u5207\u6362\u6807\u7b7e\u9875 <code>gt</code> / <code>gT</code> next / previous tab"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_5","title":"\u26a1 \u5feb\u6377\u547d\u4ee4\u7ec4\u5408\u793a\u4f8b","text":"\u76ee\u7684 \u547d\u4ee4 \u542b\u4e49 \u5220\u9664 3 \u884c <code>3dd</code> delete 3 lines \u590d\u5236 5 \u884c <code>5yy</code> yank 5 lines \u8df3\u5230\u7b2c 20 \u884c <code>20G</code> go to line 20 \u641c\u7d22\u5e76\u66ff\u6362\u5168\u6587\u4ef6 <code>:%s/foo/bar/g</code> replace all \u4fdd\u5b58\u5e76\u9000\u51fa <code>:wq</code> write + quit \u4e0d\u4fdd\u5b58\u9000\u51fa <code>:q!</code> quit without save"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_6","title":"\ud83d\udca1 \u5c0f\u6280\u5de7","text":"<ul> <li>\u6253\u5f00\u884c\u53f7\u663e\u793a\uff1a<code>:set number</code></li> <li>\u6253\u5f00\u8bed\u6cd5\u9ad8\u4eae\uff1a<code>:syntax on</code></li> <li>\u8bbe\u7f6e\u7f29\u8fdb\u5bbd\u5ea6\uff1a<code>:set tabstop=4 shiftwidth=4</code></li> <li>\u8bbe\u7f6e\u81ea\u52a8\u7f29\u8fdb\uff1a<code>:set autoindent</code></li> <li>\u67e5\u770b\u5e2e\u52a9\u6587\u6863\uff1a<code>:help &lt;command&gt;</code>   \u4f8b\uff1a<code>:help :wq</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vim","title":"\ud83d\ude80 \u9000\u51fa\u56f0\u5883\uff1a\u5f53\u4f60\u5361\u5728 Vim \u91cc","text":"Bash<pre><code># \u6700\u7ecf\u5178\u7684\u7ec4\u5408\uff1a\nEsc          # \u56de\u5230\u666e\u901a\u6a21\u5f0f\n:q!          # \u4e0d\u4fdd\u5b58\u9000\u51fa\n:wq          # \u4fdd\u5b58\u5e76\u9000\u51fa\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vimrc","title":"\ud83e\uddf1 \u63a8\u8350\u914d\u7f6e\uff08\u53ef\u653e\u5165 ~/.vimrc\uff09","text":"VimL<pre><code>set number          \" \u663e\u793a\u884c\u53f7\nsyntax on           \" \u542f\u7528\u8bed\u6cd5\u9ad8\u4eae\nset tabstop=4       \" Tab \u5bbd\u5ea6\nset shiftwidth=4    \" \u7f29\u8fdb\u5bbd\u5ea6\nset expandtab       \" \u7528\u7a7a\u683c\u4ee3\u66ff Tab\nset autoindent      \" \u81ea\u52a8\u7f29\u8fdb\nset cursorline      \" \u9ad8\u4eae\u5f53\u524d\u884c\nset showmatch       \" \u5339\u914d\u62ec\u53f7\u9ad8\u4eae\nset hlsearch        \" \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae\nset incsearch       \" \u589e\u91cf\u641c\u7d22\n</code></pre> <p>\u2705 \u603b\u7ed3\uff1a</p> <ul> <li>Vim \u7684\u672c\u8d28\u662f\u201c\u6a21\u5f0f\u7f16\u8f91\u5668\u201d\uff1b</li> <li>\u5e38\u7528\u7ec4\u5408\u5c31\u662f\uff1a   <code>i</code> \u2192 \u63d2\u5165\uff1b <code>Esc</code> \u2192 \u666e\u901a\uff1b <code>:wq</code> \u2192 \u4fdd\u5b58\u9000\u51fa\uff1b</li> <li>\u5b66\u4f1a hjkl + dd + yy + p\uff0c\u5c31\u80fd\u5728\u7ec8\u7aef\u4e2d\u9ad8\u6548\u5199\u4ee3\u7801\uff01</li> </ul> <p>\u975e\u5e38\u597d \ud83d\udc4d \u4f60\u73b0\u5728\u5df2\u7ecf\u638c\u63e1\u4e86 Vim \u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u8bb2\u7684\u5c31\u662f\u201c\u5982\u4f55\u5728 Vim \u91cc\u771f\u6b63\u5199\u4ee3\u7801\u201d\u2014\u2014 \u4e5f\u5c31\u662f\u8ba9 Vim \u4e0d\u53ea\u662f\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u800c\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7 IDE\uff08\u4ee3\u7801\u5f00\u53d1\u73af\u5883\uff09\u3002</p> <p>\u4e0b\u9762\u5185\u5bb9\u662f\u7cfb\u7edf\u5316\u6559\u7a0b\uff0c\u683c\u5f0f\u4e3a Markdown \u6559\u5b66\u7b14\u8bb0\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u653e\u5230\u4f60\u7684 MkDocs\u300cAbies Notebook\u300d\u91cc\u7528\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vim_1","title":"\ud83e\udde0 Vim \u5199\u4ee3\u7801\u5168\u653b\u7565\uff08\u4ece\u5165\u95e8\u5230\u9ad8\u6548\uff09","text":"<p>\u6559\u4f60\u5982\u4f55\u5728 Vim \u4e2d\u8fdb\u884c \u4ee3\u7801\u7f16\u5199\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u3001\u8865\u5168\u3001\u683c\u5f0f\u5316\u4e0e\u9879\u76ee\u7ba1\u7406</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vim_2","title":"\ud83d\uddc2\ufe0f \u4e00\u3001Vim \u57fa\u7840\u7ed3\u6784\u56de\u987e","text":"<p>Vim \u6709\u4e09\u79cd\u4e3b\u8981\u6a21\u5f0f\uff1a</p> \u6a21\u5f0f \u4f5c\u7528 Normal \u6a21\u5f0f \u5bfc\u822a / \u5220\u9664 / \u590d\u5236 / \u7c98\u8d34 Insert \u6a21\u5f0f \u8f93\u5165\u4ee3\u7801 Command \u6a21\u5f0f \u6267\u884c\u547d\u4ee4\uff08\u4fdd\u5b58\u3001\u8fd0\u884c\u3001\u8bbe\u7f6e\u7b49\uff09 <p>\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff1a</p> Bash<pre><code>i   # \u5728\u5149\u6807\u524d\u63d2\u5165\na   # \u5728\u5149\u6807\u540e\u63d2\u5165\no   # \u5728\u4e0b\u4e00\u884c\u63d2\u5165\u65b0\u884c\n</code></pre> <p>\u9000\u51fa\u63d2\u5165\u6a21\u5f0f\uff1a</p> Bash<pre><code>Esc\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_7","title":"\u270d\ufe0f \u4e8c\u3001\u521b\u5efa\u5e76\u7f16\u5199\u4ee3\u7801\u6587\u4ef6","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#1","title":"1. \u65b0\u5efa\u6587\u4ef6","text":"Bash<pre><code>vim hello.cpp\n</code></pre> <p>\u6216\u5728 Vim \u5185\u90e8\uff1a</p> VimL<pre><code>:e hello.cpp\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#2","title":"2. \u7f16\u5199\u4ee3\u7801","text":"<p>\u6309 <code>i</code> \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u8f93\u5165\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"Hello, Vim!\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u6309 <code>Esc</code> \u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#3","title":"3. \u4fdd\u5b58\u4e0e\u9000\u51fa","text":"Bash<pre><code>:w      # \u4fdd\u5b58\n:wq     # \u4fdd\u5b58\u5e76\u9000\u51fa\n:q!     # \u4e0d\u4fdd\u5b58\u9000\u51fa\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#ccpython","title":"\u2699\ufe0f \u4e09\u3001\u7f16\u8bd1\u4e0e\u8fd0\u884c\u4ee3\u7801\uff08C/C++/Python \u7b49\uff09","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#1-vim-shell","title":"\ud83e\udde9 \u65b9\u6cd5 1\uff1a\u5728 Vim \u5185\u6267\u884c shell \u547d\u4ee4","text":"<p>\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165\uff1a</p> VimL<pre><code>:!g++ hello.cpp -o hello &amp;&amp; ./hello\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>Hello, Vim!\n</code></pre> <p>\u4f60\u4e5f\u53ef\u4ee5\u4e3a\u4e0d\u540c\u8bed\u8a00\u6267\u884c\uff1a</p> \u8bed\u8a00 \u547d\u4ee4 C <code>:!gcc main.c -o main &amp;&amp; ./main</code> C++ <code>:!g++ main.cpp -o main &amp;&amp; ./main</code> Python <code>:!python3 script.py</code> Java <code>:!javac Main.java &amp;&amp; java Main</code>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#2_1","title":"\ud83e\udde9 \u65b9\u6cd5 2\uff1a\u914d\u7f6e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u5feb\u6377\u952e\uff08\u63a8\u8350\uff09","text":"<p>\u5728 <code>~/.vimrc</code> \u6dfb\u52a0\uff1a</p> VimL<pre><code>autocmd FileType c,cpp map &lt;F5&gt; :w&lt;CR&gt;:!g++ % -o %&lt; &amp;&amp; ./%&lt;&lt;CR&gt;\nautocmd FileType python map &lt;F5&gt; :w&lt;CR&gt;:!python3 %&lt;CR&gt;\n</code></pre> <p>\u8fd9\u6837\uff1a</p> <ul> <li>\u6309 <code>F5</code> \u81ea\u52a8\u4fdd\u5b58 + \u7f16\u8bd1 + \u8fd0\u884c\uff1b</li> <li><code>%</code> \u8868\u793a\u5f53\u524d\u6587\u4ef6\u540d\uff1b</li> <li><code>%&lt;</code> \u8868\u793a\u53bb\u6389\u6269\u5c55\u540d\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_8","title":"\ud83e\uddf1 \u56db\u3001\u5e38\u7528\u4ee3\u7801\u8f85\u52a9\u529f\u80fd","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#1_1","title":"\ud83d\udd39 1. \u884c\u53f7\u4e0e\u9ad8\u4eae","text":"VimL<pre><code>:set number          \" \u663e\u793a\u884c\u53f7\n:syntax on           \" \u542f\u7528\u8bed\u6cd5\u9ad8\u4eae\n:set cursorline      \" \u9ad8\u4eae\u5f53\u524d\u884c\n:set showmatch       \" \u62ec\u53f7\u5339\u914d\u63d0\u793a\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#2_2","title":"\ud83d\udd39 2. \u81ea\u52a8\u7f29\u8fdb","text":"VimL<pre><code>:set autoindent\n:set smartindent\n:set tabstop=4\n:set shiftwidth=4\n:set expandtab\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#3_1","title":"\ud83d\udd39 3. \u6ce8\u91ca\u6280\u5de7\uff08\u624b\u52a8\uff09","text":"<ul> <li>C/C++\uff1a<code>//</code> \u6216 <code>/* ... */</code></li> <li>Python\uff1a<code>#</code></li> <li>Vim \u63d2\u4ef6\u53ef\u4ee5\u81ea\u52a8\u6ce8\u91ca\uff08\u89c1\u4e0b\uff09\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_9","title":"\ud83e\udde9 \u4e94\u3001\u63d0\u5347\u751f\u4ea7\u529b\u7684\u63d2\u4ef6\uff08\u63a8\u8350\uff09","text":"<p>Vim \u672c\u8eab\u8f7b\u91cf\uff0c\u4f46\u63d2\u4ef6\u7cfb\u7edf\u6781\u5f3a\uff0c\u53ef\u4ee5\u50cf VSCode \u4e00\u6837\u589e\u5f3a\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#vim-plug","title":"\ud83d\udce6 \u63d2\u4ef6\u7ba1\u7406\u5668\uff1avim-plug","text":"<p>\u5b89\u88c5\uff1a</p> Bash<pre><code>curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\nhttps://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n</code></pre> <p>\u5728 <code>~/.vimrc</code> \u6dfb\u52a0\uff1a</p> VimL<pre><code>call plug#begin('~/.vim/plugged')\n\n\" \u57fa\u7840\u589e\u5f3a\nPlug 'preservim/nerdtree'        \" \u76ee\u5f55\u6811\nPlug 'jiangmiao/auto-pairs'      \" \u81ea\u52a8\u8865\u5168\u62ec\u53f7\nPlug 'tpope/vim-commentary'      \" \u5feb\u6377\u6ce8\u91ca\nPlug 'scrooloose/syntastic'      \" \u8bed\u6cd5\u68c0\u67e5\nPlug 'vim-airline/vim-airline'   \" \u72b6\u6001\u680f\u7f8e\u5316\n\n\" \u4ee3\u7801\u8865\u5168\uff08\u63a8\u8350\u914d\u5408 clangd / coc.nvim\uff09\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\n\ncall plug#end()\n</code></pre> <p>\u7136\u540e\u5728 Vim \u5185\u6267\u884c\uff1a</p> VimL<pre><code>:PlugInstall\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_10","title":"\ud83d\udcc1 \u516d\u3001\u4ee3\u7801\u76ee\u5f55\u7ba1\u7406","text":"<p>\u4f7f\u7528 <code>NERDTree</code>\uff1a</p> \u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u6253\u5f00\u4fa7\u8fb9\u6587\u4ef6\u6811 <code>:NERDTreeToggle</code> \u6587\u4ef6\u7ba1\u7406\u5668 \u5728\u6811\u4e2d\u521b\u5efa\u65b0\u6587\u4ef6 <code>m</code> + <code>a</code> add a file \u5220\u9664\u6587\u4ef6 <code>m</code> + <code>d</code> delete file \u6253\u5f00\u6587\u4ef6 <code>Enter</code> open file"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_11","title":"\ud83e\uddee \u4e03\u3001\u4ee3\u7801\u8865\u5168\u4e0e\u9519\u8bef\u63d0\u793a","text":"<p>\u5b89\u88c5 <code>coc.nvim</code> \u540e\uff0c\u652f\u6301\u667a\u80fd\u8865\u5168\uff08\u7c7b\u4f3c VSCode\uff09\uff1a</p> \u64cd\u4f5c \u547d\u4ee4 \u81ea\u52a8\u8865\u5168 \u8f93\u5165\u65f6\u81ea\u52a8\u63d0\u793a \u8df3\u8f6c\u5b9a\u4e49 <code>gd</code> \u67e5\u770b\u6587\u6863 <code>K</code> \u4fee\u590d\u9519\u8bef <code>&lt;leader&gt;qf</code> <p>\u793a\u4f8b\u914d\u7f6e\uff08C/C++ \u7528 clangd\uff09\uff1a</p> Bash<pre><code>:CocInstall coc-clangd\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_12","title":"\ud83e\uddf0 \u516b\u3001\u8c03\u8bd5\u4e0e\u8fd0\u884c\u6574\u5408","text":"<p>\u5bf9\u4e8e\u590d\u6742\u9879\u76ee\uff0c\u4f60\u53ef\u4ee5\uff1a</p> <ul> <li>\u4f7f\u7528 <code>Makefile</code>\uff1a</li> </ul> Bash<pre><code>:!make\n</code></pre> <ul> <li>\u6216\u5728 <code>.vimrc</code> \u5b9a\u4e49\u9879\u76ee\u7ea7\u547d\u4ee4\uff1a</li> </ul> VimL<pre><code>map &lt;F9&gt; :!make run&lt;CR&gt;\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#python","title":"\ud83e\uddea \u4e5d\u3001Python \u793a\u4f8b","text":"Bash<pre><code>vim test.py\n</code></pre> Python<pre><code>def fib(n):\n    if n &lt;= 1:\n        return n\n    return fib(n-1) + fib(n-2)\n\nprint(fib(6))\n</code></pre> <p>\u6267\u884c\uff1a</p> VimL<pre><code>:!python3 %\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>8\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/vim/vim/#_13","title":"\ud83e\uddf1 \u7ed3\u8bed","text":"\u76ee\u7684 \u64cd\u4f5c \u7f16\u8f91\u4ee3\u7801 <code>i</code> \u2192 \u5199\u4ee3\u7801 \u2192 <code>Esc</code> \u4fdd\u5b58\u8fd0\u884c <code>:w</code> \u2192 <code>:!g++ % -o %&lt; &amp;&amp; ./%&lt;</code> \u9ad8\u6548\u914d\u7f6e <code>.vimrc</code> \u6dfb\u52a0\u5feb\u6377\u952e\u4e0e\u63d2\u4ef6 \u9879\u76ee\u7ba1\u7406 <code>NERDTree + coc.nvim</code> <p>\u2705 \u4e00\u53e5\u8bdd\u603b\u7ed3\uff1a</p> <p>Vim \u5199\u4ee3\u7801\u7684\u6838\u5fc3\u601d\u8def\u662f\uff1a</p> <ol> <li>\u63d2\u5165\u6a21\u5f0f\u8f93\u5165\uff1b</li> <li>\u547d\u4ee4\u6a21\u5f0f\u8fd0\u884c\uff1b</li> <li>\u914d\u7f6e <code>.vimrc</code> \u63d0\u5347\u6548\u7387\uff1b</li> <li>\u63d2\u4ef6\u5316\u6253\u9020\u5c5e\u4e8e\u81ea\u5df1\u7684\u8f7b\u91cf IDE\u3002</li> </ol>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/","title":"\u56e0\u679c\u6548\u5e94\u4f30\u8ba1","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 352 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#_1","title":"\u6f5c\u5728\u7ed3\u679c\u4e0e\u56e0\u679c\u6548\u5e94\u516c\u5f0f","text":"<p>\u8bbe\uff1a - \\(T_i \\in \\{0,1\\}\\) \u8868\u793a\u4e2a\u4f53 \\(i\\) \u662f\u5426\u63a5\u53d7\u5904\u7406\uff08treatment\uff09\uff0c1=\u5904\u7406\uff0c0=\u5bf9\u7167 - \\(Y_i(1)\\) \u8868\u793a\u4e2a\u4f53 \\(i\\) \u5728 \\(T_i=1\\) \u65f6\u7684\u7ed3\u679c\uff08\u5904\u7406\u540e\u7684\u6f5c\u5728\u7ed3\u679c\uff09 - \\(Y_i(0)\\) \u8868\u793a\u4e2a\u4f53 \\(i\\) \u5728 \\(T_i=0\\) \u65f6\u7684\u7ed3\u679c\uff08\u672a\u5904\u7406\u7684\u6f5c\u5728\u7ed3\u679c\uff09  </p> <p>\u4e2a\u4f53\u56e0\u679c\u6548\u5e94\uff08Individual Treatment Effect, ITE\uff09\uff1a</p> \\[ \\tau_i = Y_i(1) - Y_i(0) \\] <p>\u5e73\u5747\u5904\u7406\u6548\u5e94\uff08Average Treatment Effect, ATE\uff09\uff1a</p> \\[ \\text{ATE} = E[Y(1) - Y(0)] \\] <p>\u5176\u4ed6\u5e38\u7528\u6548\u5e94\uff1a  </p> <ul> <li>ATT\uff08Average Treatment effect on the Treated\uff09\uff1a</li> </ul> \\[ \\text{ATT} = E[Y(1) - Y(0) \\mid T=1] \\] <ul> <li>ATC\uff08Average Treatment effect on the Controls\uff09\uff1a</li> </ul> \\[ \\text{ATC} = E[Y(1) - Y(0) \\mid T=0] \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#identification-assumptions","title":"\u6838\u5fc3\u8bc6\u522b\u5047\u8bbe\uff08Identification Assumptions\uff09","text":"<p>SUTVA\uff08\u7a33\u5b9a\u5355\u5143\u5904\u7406\u503c\u5047\u8bbe\uff09    \u6570\u5b66\u8868\u8fbe\uff1a</p> \\[ Y_i(t) \\ \\text{\u4e0e\u5176\u4ed6\u4e2a\u4f53\u7684\u5904\u7406\u72b6\u6001\u65e0\u5173\uff0c\u4e14\u5904\u7406\u5b9a\u4e49\u552f\u4e00} \\] <p>\u5bf9\u6240\u6709 \\(t \\in \\{0,1\\}\\)\u3002</p> <p>\u53ef\u5ffd\u7565\u6027 / \u65e0\u6df7\u6dc6\uff08Unconfoundedness\uff09    \u7ed9\u5b9a\u534f\u53d8\u91cf \\(X\\)\uff1a</p> \\[ (Y(1), Y(0)) \\perp\\!\\!\\!\\perp T \\mid X \\] <p>\u610f\u5473\u7740\u5904\u7406\u5206\u914d\u4e0e\u6f5c\u5728\u7ed3\u679c\u5728\u63a7\u5236\u4e86 \\(X\\) \u540e\u76f8\u4e92\u72ec\u7acb\u3002</p> <p>\u91cd\u53e0\u6027\uff08Overlap / Positivity\uff09    \u5bf9\u6240\u6709 \\(X\\)\uff1a</p> \\[ 0 &lt; P(T=1 \\mid X) &lt; 1 \\] <p>\u5904\u7406\u7ec4\u548c\u5bf9\u7167\u7ec4\u90fd\u6709\u53ef\u80fd\u5b58\u5728\u4e8e\u6bcf\u4e2a\u534f\u53d8\u91cf\u6c34\u5e73\u4e0b\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#_2","title":"\u4e0d\u540c\u4f30\u8ba1\u65b9\u6cd5\u7684\u516c\u5f0f","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#rct","title":"\u968f\u673a\u5bf9\u7167\u8bd5\u9a8c\uff08RCT\uff09","text":"<p>\u56e0\u4e3a\u968f\u673a\u5316 \\(\\Rightarrow (Y(1), Y(0)) \\perp\\!\\!\\!\\perp T\\) ATE \u4f30\u8ba1\uff1a</p> \\[ \\hat{\\tau}_{\\text{RCT}} = \\bar{Y}_{T=1} - \\bar{Y}_{T=0} \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#regression-adjustment","title":"\u56de\u5f52\u8c03\u6574\uff08Regression Adjustment\uff09","text":"<p>\u62df\u5408\uff1a</p> \\[ E[Y \\mid T, X] = \\alpha + \\tau T + f(X) \\] <p>\u4f30\u8ba1\uff1a</p> \\[ \\hat{\\tau} = \\frac{1}{n} \\sum_{i=1}^n \\big[ \\hat{E}(Y \\mid T=1, X_i) - \\hat{E}(Y \\mid T=0, X_i) \\big] \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#matching","title":"\u5339\u914d\uff08Matching\uff09","text":"<p>\u5bf9\u6bcf\u4e2a\u5904\u7406\u7ec4\u4e2a\u4f53 \\(i\\)\uff0c\u627e\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u76f8\u4f3c\u534f\u53d8\u91cf \\(X\\) \u7684\u5bf9\u7167\u7ec4\u4e2a\u4f53 \\(j\\)\uff1a</p> \\[ \\hat{\\tau}_{\\text{match}} = \\frac{1}{n_T} \\sum_{i: T_i=1} \\left[ Y_i - \\frac{1}{|M(i)|} \\sum_{j \\in M(i)} Y_j \\right] \\] <p>\u5176\u4e2d \\(M(i)\\) \u662f\u5339\u914d\u96c6\u5408\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#ipw-iptw","title":"\u503e\u5411\u5f97\u5206\u52a0\u6743\uff08IPW / IPTW\uff09","text":"<p>\u503e\u5411\u5f97\u5206\uff1a</p> \\[ e(X) = P(T=1 \\mid X) \\] <p>ATE \u4f30\u8ba1\uff1a</p> \\[ \\hat{\\tau}_{\\text{IPW}} = \\frac{1}{n} \\sum_{i=1}^n \\left( \\frac{T_i Y_i}{\\hat{e}(X_i)} - \\frac{(1-T_i) Y_i}{1 - \\hat{e}(X_i)} \\right) \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#iv","title":"\u5de5\u5177\u53d8\u91cf\uff08IV\uff09","text":"<p>\u82e5\u5b58\u5728 \\(Z\\) \u6ee1\u8db3\uff1a 1. \\(Z \\not\\!\\perp\\!\\!\\!\\perp T\\)\uff08\u76f8\u5173\u6027\uff09   2. \\(Z \\perp\\!\\!\\!\\perp (Y(1), Y(0)) \\mid X\\)\uff08\u5916\u751f\u6027\uff09    </p> <p>\u7ebf\u6027\u6a21\u578b\u4e0b\uff1a</p> \\[ \\tau_{\\text{IV}} = \\frac{\\text{Cov}(Y, Z)}{\\text{Cov}(T, Z)} \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#doubly-robust","title":"\u53cc\u91cd\u7a33\u5065\uff08Doubly Robust\uff09","text":"<p>\u7ed3\u5408\u56de\u5f52\u8c03\u6574\u4e0eIPW\uff1a</p> \\[ \\hat{\\tau}_{\\text{DR}} = \\frac{1}{n} \\sum_{i=1}^n \\left[ \\frac{T_i (Y_i - \\hat{m}_1(X_i))}{\\hat{e}(X_i)} - \\frac{(1-T_i) (Y_i - \\hat{m}_0(X_i))}{1 - \\hat{e}(X_i)} + \\hat{m}_1(X_i) - \\hat{m}_0(X_i) \\right] \\] <p>\u5176\u4e2d \\(\\hat{m}_t(X) = \\hat{E}[Y \\mid T=t, X]\\)\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/%E6%95%B0%E5%AD%A6/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/%E5%9B%A0%E6%9E%9C%E6%95%88%E5%BA%94%E4%BC%B0%E8%AE%A1/#_3","title":"\u603b\u7ed3\u516c\u5f0f\u5316\u7684\u56e0\u679c\u63a8\u65ad\u601d\u8def","text":"<ol> <li>\u5b9a\u4e49\u6f5c\u5728\u7ed3\u679c\uff1a\\(Y(1), Y(0)\\) </li> <li>\u5b9a\u4e49\u76ee\u6807\u6548\u5e94\uff1aATE / ATT / ATC  </li> <li>\u5047\u8bbe\u6761\u4ef6\uff1aSUTVA + \u53ef\u5ffd\u7565\u6027 + \u91cd\u53e0\u6027  </li> <li>\u9009\u62e9\u4f30\u8ba1\u516c\u5f0f\uff1a\u6839\u636e\u6570\u636e\u7c7b\u578b\uff08RCT / \u89c2\u6d4b\u6570\u636e\uff09\u548c\u5047\u8bbe\u9009\u62e9\u5bf9\u5e94\u65b9\u6cd5\u516c\u5f0f</li> </ol>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/4D%E7%94%9F%E6%88%90/L4GM/L4GM/","title":"L4GM","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 594 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u94fe\u63a5 L4GM:Large 4D Gaussian Reconstruction Model</p> <p>\u6700\u8fd1\u4e00\u76f4\u5728 test L4GM \u7136\u540e\u4e4b\u540e\u8fd8\u8981\u5b66\u600e\u4e48\u5fae\u8c03\u86e4\uff0c\u6709\u5fc5\u8981\u597d\u597d\u770b\u4e00\u770b\u8fd9\u4e2a\u8bba\u6587\u4e86\u3002\uff08\u5176\u5b9e\u8fd8\u6709 SV4D\uff09</p> <p>\u73b0\u5728\u5927\u591a\u6570 4D \u751f\u6210\u6a21\u578b\u90fd\u662f\u4ece\u73b0\u6709\u7684\u9884\u8bad\u7ec3 3D \u751f\u6210\u6a21\u578b\u521b\u5efa\u800c\u6765\u7684\uff0cL4GM \u5c31\u662f\u57fa\u4e8e LGM (\u5927\u578b\u591a\u89c6\u56fe\u9ad8\u65af\u6a21\u578b) \u7684\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/4D%E7%94%9F%E6%88%90/L4GM/L4GM/#lgm","title":"LGM (\u7b80\u4ecb)","text":"<p>\u57fa\u672c\u6d41\u7a0b\uff1a\u8f93\u5165\u56fe\u50cf (\u5176\u5b9e\u53ef\u4ee5\u662f\u6587\u672c\u6216\u8005\u4e8c\u8005\u6df7\u5408) \u2192 \u4ece\u5355\u4e00\u89c6\u89d2\u751f\u6210\u591a\u4e2a\u89c6\u89d2\u56fe\u7247 (\u53ef\u9009\uff0c\u53d6\u51b3\u4e8einput \u662f\u4e0d\u662f\u591a\u4e2a\u89c6\u89d2\u7684) \u2192 Gaussian \u2192 Grid Model</p> <p>\u5177\u4f53\u8bf4\uff0c\u8f93\u5165\u662f\u4e00\u7ec4\u56fe\u50cf (\\(V\\) \u4e2a) \u548c\u6bcf\u7ec4\u56fe\u50cf\u5bf9\u5e94\u7684\u76f8\u673a\u5916\u53c2\uff0c\u6bcf\u7ec4\u76f8\u673a\u5916\u53c2\u5c06\u88ab\u8f6c\u6362\u4e3a Pl\u00fccker Ray Embedding\uff0c\u548c\u56fe\u50cf\u7684\u7279\u5f81\u62fc\u63a5\uff1b\u63a5\u7740\u5c06\u8be5\u62fc\u63a5\u7684 embedding \u8f93\u5165\u5230\u4e00\u4e2a\u975e\u5bf9\u79f0\u7684 U-Net\uff0c\u6700\u540e\u8f93\u51fa \\(V\\) \u4e2a 14 \u901a\u9053\u7684\u7279\u5f81\u56fe (feature map)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20 (14\u4e2a\u901a\u9053) \u4fbf\u662f\u8be5 Gaussian \u7684 14 \u4e2a\u53c2\u6570</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/4D%E7%94%9F%E6%88%90/L4GM/L4GM/#l4gm","title":"L4GM","text":"<p>Score Distillation (\u5206\u6570\u84b8\u998f)</p> <p>\u7279\u522b\u7528\u4e8e\u6269\u6563\u6a21\u578b\uff1b Score Distillation \u5c31\u662f\u7528\u4e00\u4e2a\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6269\u6563\u6a21\u578b\uff08teacher\uff09\u6765\u201c\u6307\u5bfc\u201d\u53e6\u4e00\u4e2a\u6a21\u578b\u6216\u573a\u666f\uff08student\uff09\u53bb\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u8bad\u7ec3\u6574\u4e2a\u6269\u6563\u6a21\u578b\u3002\u5177\u4f53\u4ee5\u540e\u518d\u8bf4</p> <p>\u4f5c\u8005\u8ba4\u4e3a\uff0c\u4f7f\u7528 Score Distillation \u5bf9 prompt \u654f\u611f\u800c\u4e14 time consuming (\u9700\u8981\u591a\u6b21\u8fed\u4ee3)  </p> <p>\u76ee\u6807\uff1a\u5355\u76ee\u89c6\u9891 (monocular video) \u2192 \u9ad8\u65af\u5e8f\u5217 </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/4D%E7%94%9F%E6%88%90/L4GM/L4GM/#_1","title":"\u5177\u4f53\u505a\u6cd5 (\u4f18\u5316\u70b9)","text":"<p>1. \u7b2c\u4e00\u5e27\u7528 3D \u751f\u6210\u6a21\u578b\u8fdb\u884c\u591a\u89c6\u89d2\u751f\u6210 </p> <p>\u4f7f\u7528 ImageDream \u6a21\u578b (\u4e00\u4e2a diffusion \u6a21\u578b) \u751f\u6210 4 \u4e2a\u6b63\u4ea4\u7684\u91c7\u6837\u89c6\u89d2\u7684\u56fe\u50cf (\u7b2c\u4e00\u5e27 \\(I_1\\))\u3002\u7531\u4e8e\u76ee\u7684\u662f\u4fdd\u7559\u4e09\u4e2a\u751f\u6210\u89c6\u89d2\u548c input \u5782\u76f4 (\u8fd9\u91cc\u662f\u5728\u6c34\u5e73\u9762\u4e0a\u7684 \\(0^\\circ, 90^\\circ, 180^\\circ, 270^\\circ\\))\uff0c\u4f5c\u8005\u91c7\u7528\u4e86\u5148\u751f\u6210\u4e00\u7cfb\u5217\u65b9\u4f4d\u89d2 (azimuth\uff0c\u7279\u6307\u6c34\u5e73\u73af\u7ed5\u89d2) \u7684\u89c6\u89d2 \\(P_{\\text{init}}\\)\uff0c\u518d\u53d6\u5176\u4e2d\u4e0e input \u201c\u6700\u63a5\u8fd1\u201d \u7684\u89c6\u89d2\uff0c\u518d\u53d6\u4e0e\u4e4b\u5782\u76f4\u7684\u53e6\u5916\u4e09\u4e2a\u89c6\u89d2\u8fdb\u884c\u751f\u6210\u3002</p> <p>\u600e\u6837\u5224\u5b9a \u201c\u6700\u63a5\u8fd1\u201d\uff1f</p> <p>\u53d6\u65b9\u4f4d\u89d2 \\(\\theta_{\\text{align}} = \\mathrm{argmin} \\Vert f(P_{\\text{static}, \\theta}) - I_1\\Vert^2\\) (\u5176\u5b9e\u5c31\u662f L2 \u8ddd\u79bb\u6700\u5c0f\u7684\u89d2\u5ea6\u5566)</p> <p>2. \u52a0\u5165 Temporal Self-attention (\u65f6\u5e8f\u81ea\u6ce8\u610f\u529b) \u5c42 (temp-attention) </p> <p>\u6a21\u578b\u5047\u8bbe\u76f8\u673a\u4f4d\u7f6e\u4e0d\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u4e3a\u4fdd\u8bc1\u4e0d\u540c\u5e27\u4e4b\u95f4\u7684\u8fde\u7eed\u6027 (consistency)\uff0c\u9700\u8981\u5728 LGM \u7684\u57fa\u7840\u4e0a\u52a0\u5165\u65f6\u5e8f\u81ea\u6ce8\u610f\u529b\u5c42\u3002</p> <p>\u4e5f\u5373\u5904\u7406\u5408\u5e76\u4e4b\u540e\u7684 embedding (\\(\\texttt{(B T V) H W C}\\)) (\\(\\texttt{B}\\) \u662f batch size) \u8f93\u5165 U-Net \u4e4b\u540e\uff0c\u8fdb\u884c\u5982\u4e0b\u5904\u7406\uff1a</p> \\[ \\begin{aligned} \\mathbf{x} &amp;= \\texttt{rearrange}(\\mathbf{x}, \\texttt{(B T V) H W C} \\to \\texttt{(B V)(T H W) C}) \\\\ \\mathbf{x} &amp;= \\mathbf{x} + \\text{TempSelfAttn}(\\mathbf{x}) \\\\ \\mathbf{x} &amp;= \\texttt{rearrange}(\\mathbf{x}, \\texttt{(B V)(T H W) C} \\to \\texttt{(B T V) H W C}) \\end{aligned} \\] <p>\u7b26\u53f7\u6ce8\u91ca</p> \u7b26\u53f7 \u542b\u4e49 B Batch size\uff08\u6279\u5927\u5c0f\uff09 T \u65f6\u95f4\u6b65\uff08Temporal dimension\uff09\uff0c\u89c6\u9891\u5e27\u6570\u91cf V \u89c6\u89d2\u6570\uff08View dimension\uff09\uff0c\u591a\u89c6\u89d2\u6570\u91cf H, W \u7a7a\u95f4\u5c3a\u5bf8\uff08Height, Width\uff09 C \u901a\u9053\u6570\uff08Channel\uff09\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u7684\u7279\u5f81\u7ef4\u5ea6 <p>\u4e0a\u9762\u7684\u64cd\u4f5c\u628a\u65f6\u95f4\u7ef4\u5ea6 (\\(\\texttt{T}\\)) \u5c55\u5f00\u5230\u7a7a\u95f4\u7ef4\u5ea6 (\\(\\texttt{H W}\\)) \u4e2d\uff0c\u4fbf\u65b9\u4fbf\u505a\u65f6\u5e8f\u81ea\u6ce8\u610f\u529b</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/","title":"DOVE, Efficient One-Step Diffusion Model for Real-World Video Super-Resolution","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 985 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u8fde\u63a5 \u300aDOVE: Efficient One-Step Diffusion Model for Real-World Video Super-Resolution\u300b</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u5185\u5bb9\u4e3b\u8981\u7531 AI \u751f\u6210</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#1-introduction","title":"1. Introduction\uff08\u5f15\u8a00\uff09","text":"<p>\u672c\u6587\u7814\u7a76\u89c6\u9891\u8d85\u5206\u8fa8\u7387\uff08VSR\uff09\uff0c\u76ee\u6807\u662f\u4ece\u4f4e\u5206\u8fa8\u7387\u89c6\u9891\u6062\u590d\u51fa\u9ad8\u5206\u8fa8\u7387\u7ed3\u679c\u3002\u73b0\u6709\u7684\u591a\u6b65\u6269\u6563\u65b9\u6cd5\u80fd\u591f\u751f\u6210\u9ad8\u8d28\u91cf\u7ed3\u679c\uff0c\u4f46\u63a8\u7406\u901f\u5ea6\u6162\uff1b\u800c\u5355\u6b65\u6269\u6563\u65b9\u6cd5\u867d\u7136\u9ad8\u6548\uff0c\u5374\u5728\u751f\u6210\u8d28\u91cf\u4e0a\u6709\u660e\u663e\u9000\u5316\uff0c\u5e76\u4e14\u5f80\u5f80\u7f3a\u4e4f\u8de8\u5e27\u7684\u4e00\u81f4\u6027\uff0c\u5bfc\u81f4\u7ed3\u679c\u51fa\u73b0\u95ea\u70c1\u3002\u4e3a\u6b64\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86 DOVE (Diffusion One-step Video Enhancer)\uff0c\u5b83\u5728\u4fdd\u8bc1\u9ad8\u6548\u63a8\u7406\u7684\u540c\u65f6\uff0c\u517c\u987e\u4e86\u753b\u8d28\u548c\u65f6\u95f4\u4e00\u81f4\u6027\u3002\u6838\u5fc3\u8d21\u732e\u5305\u62ec\uff1a\u63d0\u51fa \u6761\u4ef6\u611f\u77e5\u7684\u566a\u58f0\u84b8\u998f\uff08Condition-aware Noise Distillation, CND\uff09\uff0c\u4ee5\u589e\u5f3a\u5355\u6b65\u6269\u6563\u751f\u6210\u8d28\u91cf\uff1b\u5f15\u5165 \u65f6\u5e8f\u4e00\u81f4\u6027\u6b63\u5219\u5316\uff08Temporal Consistency Regularization, TCR\uff09\uff0c\u786e\u4fdd\u8de8\u5e27\u7a33\u5b9a\u6027\u3002\u6700\u7ec8\uff0cDOVE \u5728\u771f\u5b9e\u4e16\u754c\u89c6\u9891\u8d85\u5206\u8fa8\u7387\u4e2d\u53d6\u5f97\u63a5\u8fd1\u591a\u6b65\u6269\u6563\u6a21\u578b\u7684\u8868\u73b0\uff0c\u4f46\u63a8\u7406\u901f\u5ea6\u5927\u5e45\u63d0\u5347\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#2-related-work","title":"2. Related Work\uff08\u76f8\u5173\u5de5\u4f5c\uff09","text":"<p>\u65e9\u671f\u89c6\u9891\u8d85\u5206\u8fa8\u7387\u65b9\u6cd5\u4e3b\u8981\u57fa\u4e8e CNN \u6216 RNN\uff0c\u5982 EDVR\u3001BasicVSR++\uff0c\u80fd\u591f\u63d0\u5347 PSNR\uff0c\u4f46\u91cd\u5efa\u7ec6\u8282\u4e0d\u8db3\u3002GAN \u7c7b\u65b9\u6cd5\uff08\u5982 Real-ESRGAN, VSRGAN\uff09\u80fd\u6062\u590d\u66f4\u591a\u7ec6\u8282\uff0c\u4f46\u8bad\u7ec3\u5f80\u5f80\u4e0d\u7a33\u5b9a\uff0c\u5e76\u53ef\u80fd\u5f15\u5165\u4f2a\u5f71\u3002\u6269\u6563\u6a21\u578b\u56e0\u9010\u6b65\u53bb\u566a\u800c\u5c55\u73b0\u4e86\u5f3a\u5927\u7684\u751f\u6210\u80fd\u529b\uff0c\u591a\u6b65\u6269\u6563\u5728\u56fe\u50cf\u548c\u89c6\u9891\u8d85\u5206\u8fa8\u7387\u4e0a\u5747\u53d6\u5f97\u4e86\u4f18\u5f02\u8868\u73b0\uff0c\u4f46\u63a8\u7406\u6548\u7387\u8fc7\u4f4e\u3002\u5355\u6b65\u6269\u6563\u867d\u7136\u5c1d\u8bd5\u5c06\u591a\u6b65\u538b\u7f29\u4e3a\u4e00\u6b65\u4ee5\u63d0\u5347\u901f\u5ea6\uff0c\u4f46\u7f3a\u4e4f\u6709\u6548\u76d1\u7763\uff0c\u5bfc\u81f4\u7ed3\u679c\u8d28\u91cf\u4e0b\u964d\u3002\u6b64\u5916\uff0c\u73b0\u6709\u65b9\u6cd5\u5728\u8de8\u5e27\u4e00\u81f4\u6027\u5efa\u6a21\u65b9\u9762\u4f9d\u8d56\u5149\u6d41\u5bf9\u9f50\u6216\u9012\u5f52\u4f20\u64ad\uff0c\u800c\u6269\u6563 VSR \u4e2d\u7f3a\u5c11\u7cfb\u7edf\u7684\u65f6\u95f4\u4e00\u81f4\u6027\u7ea6\u675f\u3002\u672c\u6587\u7684\u5b9a\u4f4d\u6b63\u662f\u5728\u9ad8\u6548\u5355\u6b65\u6269\u6563\u7684\u57fa\u7840\u4e0a\uff0c\u5f15\u5165\u84b8\u998f\u4e0e\u4e00\u81f4\u6027\u6b63\u5219\u5316\uff0c\u4ece\u800c\u5728\u771f\u5b9e\u89c6\u9891\u8d85\u5206\u4efb\u52a1\u4e2d\u517c\u987e\u6548\u7387\u4e0e\u8d28\u91cf\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#3-methodology","title":"3. Methodology\uff08\u65b9\u6cd5\uff09","text":"<p>\u5728\u6807\u51c6\u6269\u6563\u6a21\u578b\u4e2d\uff0c\u6b63\u5411\u52a0\u566a\u8fc7\u7a0b\u4e3a  </p> \\[ z_t = \\alpha_t z_0 + \\sigma_t \\epsilon, \\quad \\epsilon \\sim \\mathcal{N}(0,I), \\] <p>\u800c\u53cd\u5411\u53bb\u566a\u7684\u76ee\u6807\u662f\u901a\u8fc7 U-Net \u9884\u6d4b\u5e72\u51c0\u6837\u672c\u7684\u6b8b\u5dee\u4fe1\u606f\uff0c\u5176\u8bad\u7ec3\u635f\u5931\u5b9a\u4e49\u4e3a  </p> \\[ \\mathcal{L}_{\\text{diff}} = \\mathbb{E}_{z, t, \\epsilon}\\left[ \\| v - f_\\theta(z_t, t, c) \\|_2^2 \\right], \\] <p>\u5176\u4e2d \\(c\\) \u8868\u793a\u4f4e\u5206\u8fa8\u7387\u5e27\u4f5c\u4e3a\u6761\u4ef6\u8f93\u5165\u3002  </p> <p>\u4e3a\u589e\u5f3a\u5355\u6b65\u6269\u6563\u7684\u751f\u6210\u80fd\u529b\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86 \u6761\u4ef6\u611f\u77e5\u7684\u566a\u58f0\u84b8\u998f (CND)\u3002\u5176\u601d\u8def\u662f\u4ee5\u591a\u6b65\u6269\u6563\u6a21\u578b\u4f5c\u4e3a\u6559\u5e08\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684\u751f\u6210\u4fe1\u53f7\uff0c\u6307\u5bfc\u4e00\u6b65\u6269\u6563\u751f\u6210\u5668\u5b66\u4e60\u63a5\u8fd1\u6559\u5e08\u7684\u7ed3\u679c\u3002\u5176\u84b8\u998f\u635f\u5931\u4e3a  </p> \\[ \\mathcal{L}_{\\text{CND}} = \\mathbb{E}\\left[ \\| G_{1}(x_{LR}) - G_{T}(x_{LR}) \\|_1 \\right], \\] <p>\u5176\u4e2d \\(G_{1}\\) \u8868\u793a\u5355\u6b65\u6269\u6563\u5b66\u751f\u6a21\u578b\uff0c\\(G_{T}\\) \u8868\u793a\u591a\u6b65\u6269\u6563\u6559\u5e08\u6a21\u578b\u3002  </p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u4e3a\u89e3\u51b3\u8de8\u5e27\u6296\u52a8\u95ee\u9898\uff0c\u63d0\u51fa\u4e86 \u65f6\u5e8f\u4e00\u81f4\u6027\u6b63\u5219\u5316 (TCR)\u3002\u5177\u4f53\u505a\u6cd5\u662f\u5229\u7528\u5149\u6d41 \\(f_{i \\to i+1}\\) \u5c06\u7b2c \\(i\\) \u5e27 warp \u5230\u7b2c \\(i+1\\) \u5e27\uff0c\u5728\u6f5c\u7a7a\u95f4\u4e2d\u7ea6\u675f\u76f8\u90bb\u5e27\u7684\u4e00\u81f4\u6027\uff1a  </p> \\[ \\mathcal{L}_{\\text{TCR}} = \\mathbb{E}\\left[ \\| W(z^i, f_{i \\to i+1}) - z^{i+1} \\|_1 \\right], \\] <p>\u5176\u4e2d \\(W(\\cdot)\\) \u8868\u793a\u57fa\u4e8e\u5149\u6d41\u7684\u53d8\u6362\u64cd\u4f5c\u3002  </p> <p>\u7efc\u5408\u8d77\u6765\uff0c\u6700\u7ec8\u7684\u8bad\u7ec3\u76ee\u6807\u4e3a  </p> \\[ \\mathcal{L} = \\lambda_1 \\mathcal{L}_{\\text{diff}} + \\lambda_2 \\mathcal{L}_{\\text{CND}} + \\lambda_3 \\mathcal{L}_{\\text{TCR}}. \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#4-experiments","title":"4. Experiments\uff08\u5b9e\u9a8c\uff09","text":"<p>\u5b9e\u9a8c\u90e8\u5206\u4f7f\u7528 WebVid \u4e0e YouHQ \u7b49\u9ad8\u8d28\u91cf\u89c6\u9891\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6d4b\u8bd5\u96c6\u5305\u62ec\u5408\u6210\u6570\u636e\u96c6\uff08REDS, UDM10, SPMCS\uff09\u548c\u771f\u5b9e\u6570\u636e\u96c6\uff08VideoLQ, AIGC-Video\uff09\u3002\u5728\u6709 GT \u7684\u573a\u666f\u4e2d\uff0c\u91c7\u7528 PSNR\u3001SSIM\u3001LPIPS \u4e0e tOF\uff08\u4e00\u81f4\u6027\u6307\u6807\uff09\uff1b\u5728\u65e0 GT \u7684\u573a\u666f\u4e0b\uff0c\u4f7f\u7528 NIQE\u3001CLIP-IQA \u4e0e MUSIQ \u8fdb\u884c\u8bc4\u4f30\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cDOVE \u5728\u8d28\u91cf\u4e0a\u63a5\u8fd1\u591a\u6b65\u6269\u6563\u65b9\u6cd5 Upscale-A-Video\uff0c\u800c\u5728\u63a8\u7406\u901f\u5ea6\u4e0a\u5feb \\(20 \\sim 50\\) \u500d\uff0c\u5e76\u5728\u65f6\u95f4\u4e00\u81f4\u6027\u6307\u6807\u4e0a\u663e\u8457\u4f18\u4e8e\u5176\u4ed6\u5355\u6b65\u65b9\u6cd5\u3002\u6d88\u878d\u5b9e\u9a8c\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u4e86\u5404\u6a21\u5757\u7684\u91cd\u8981\u6027\uff1a\u82e5\u53bb\u6389 CND\uff0c\u56fe\u50cf\u4f1a\u8fc7\u4e8e\u5e73\u6ed1\uff1b\u53bb\u6389 TCR\uff0c\u5219\u51fa\u73b0\u660e\u663e\u95ea\u70c1\uff1b\u800c\u4e24\u8005\u7ed3\u5408\u80fd\u591f\u83b7\u5f97\u6700\u4f18\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/DOVE%2C%20Efficient%20One-Step%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#5-conclusion","title":"5. Conclusion\uff08\u7ed3\u8bba\uff09","text":"<p>\u672c\u6587\u63d0\u51fa\u4e86 DOVE\uff0c\u4e00\u79cd\u9ad8\u6548\u7684\u4e00\u6b65\u6269\u6563\u89c6\u9891\u8d85\u5206\u65b9\u6cd5\uff0c\u517c\u987e\u4e86\u901f\u5ea6\u4e0e\u751f\u6210\u8d28\u91cf\u3002\u5176\u521b\u65b0\u4e4b\u5904\u5728\u4e8e\u5f15\u5165\u4e86\u6761\u4ef6\u611f\u77e5\u7684\u566a\u58f0\u84b8\u998f\uff08CND\uff09\uff0c\u4ee5\u589e\u5f3a\u5355\u6b65\u6269\u6563\u6a21\u578b\u7684\u751f\u6210\u80fd\u529b\uff0c\u5e76\u63d0\u51fa\u65f6\u5e8f\u4e00\u81f4\u6027\u6b63\u5219\u5316\uff08TCR\uff09\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u8de8\u5e27\u4e0d\u7a33\u5b9a\u7684\u95ee\u9898\u3002\u5b9e\u9a8c\u8868\u660e\uff0cDOVE \u5728\u771f\u5b9e\u4e16\u754c\u89c6\u9891\u8d85\u5206\u4efb\u52a1\u4e2d\u5b9e\u73b0\u4e86\u9ad8\u8d28\u91cf\u3001\u65f6\u95f4\u4e00\u81f4\u4e14\u63a5\u8fd1\u5b9e\u65f6\u7684\u63a8\u7406\uff0c\u5177\u6709\u5f88\u5f3a\u7684\u5b9e\u7528\u4ef7\u503c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/","title":"Denoising Diffusion Implicit Models","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1061 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u8fde\u63a5 \u300aDenoising Diffusion Implicit Models\u300b</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u5185\u5bb9\u4e3b\u8981\u7531 AI \u751f\u6210</p> <p>DDIM \u7684\u6838\u5fc3\u76ee\u6807\u53ea\u6709\u4e00\u4e2a\uff1a\u5728\u201c\u4e0d\u91cd\u65b0\u8bad\u7ec3\u7f51\u7edc\u201d\u7684\u524d\u63d0\u4e0b\uff0c\u8ba9\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684 DDPM \u6a21\u578b\u66f4\u5feb\u5730\u751f\u6210\u9ad8\u8d28\u91cf\u6837\u672c\uff0c\u540c\u65f6\u8fd8\u80fd\u50cf GAN \u4e00\u6837\u505a\u8bed\u4e49\u63d2\u503c\u548c\u7cbe\u786e\u91cd\u5efa\u3002\u4e3a\u6b64\uff0c\u4f5c\u8005\u628a DDPM \u7684\u751f\u6210\u6d41\u7a0b\u91cd\u65b0\u68b3\u7406\u6210\u201c\u975e\u9a6c\u5c14\u53ef\u592b\u201d\u7684\u89c6\u89d2\uff0c\u7136\u540e\u7528\u4e00\u79cd\u66f4\u77ed\u3001\u66f4\u786e\u5b9a\u6027\u7684\u8def\u5f84\u5b8c\u6210\u4ece\u566a\u58f0\u5230\u56fe\u50cf\u7684\u53cd\u5411\u8fc7\u7a0b\u3002\u4e0b\u9762\u6309\u65f6\u95f4\u987a\u5e8f\u628a\u6574\u4e2a\u6d41\u7a0b\u62c6\u5f00\uff0c\u8bf4\u660e\u6bcf\u4e00\u6b65\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u3001\u5b83\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u3001\u4ee5\u53ca\u6700\u7ec8\u5e26\u6765\u4e86\u4ec0\u4e48\u597d\u5904\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#1-ddpm","title":"1. \u5148\u56de\u987e\u4e00\u4e0b DDPM \u7684\u539f\u59cb\u5957\u8def","text":"<p>DDPM \u628a\u6570\u636e \\(x_0\\) \u901a\u8fc7 \\(T\\) \u6b65\u9a6c\u5c14\u53ef\u592b\u94fe\u9010\u6b65\u52a0\u566a\u53d8\u6210\u8fd1\u4f3c\u9ad8\u65af\u5206\u5e03\u7684 \\(x_T\\)\uff0c\u518d\u8bad\u7ec3\u4e00\u4e2a\u7f51\u7edc \\(\\varepsilon_\\theta(x_t , t)\\) \u5b66\u4f1a\u201c\u9884\u6d4b\u6bcf\u4e00\u6b65\u52a0\u8fdb\u53bb\u7684\u566a\u58f0\u201d\u3002\u751f\u6210\u65f6\uff0c\u4ece\u7eaf\u9ad8\u65af\u566a\u58f0 \\(x_T\\) \u51fa\u53d1\uff0c\u6309 \\(T\\) \u6b65\u53cd\u5411\u53bb\u566a\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u5f20\u56fe\u7247\u3002</p> <p>\u516c\u5f0f\u4e0a\uff0c\u8bad\u7ec3\u65f6\u53ea\u7528\u5230\u8fb9\u7f18\u5206\u5e03</p> \\[ q(x_t \\mid x_0) = \\mathcal{N}(\\sqrt{\\alpha_t} x_0, (1-\\alpha_t) I) \\] <p>\u548c\u5bf9\u5e94\u7684\u566a\u58f0\u9884\u6d4b\u635f\u5931</p> \\[ L_1 = \\sum_t \\|\\varepsilon_\\theta(x_t , t) - \\varepsilon\\|^2 \\] <p>\u800c\u5b9e\u9645\u53cd\u5411\u94fe</p> \\[ p_\\theta(x_{t-1}\\mid x_t) = \\mathcal{N}(\\mu_\\theta(x_t , t), \\Sigma_t) \\] <p>\u5fc5\u987b\u4e00\u6b65\u4e00\u6b65\u8d70\uff0c\u4e14\u6b65\u6570 \\(T\\) \u5f88\u5927(1000)\uff0c\u6240\u4ee5\u6162\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#2","title":"2. \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u6539\u6d41\u7a0b\uff1f\u2014\u2014\u5173\u952e\u89c2\u5bdf","text":"<p>\u8bad\u7ec3\u76ee\u6807 \\(L_1\\) \u53ea\u4f9d\u8d56\u201c\\(x_t\\) \u7684\u8fb9\u7f18\u5206\u5e03\u201d\u548c\u201c\u566a\u58f0\u9884\u6d4b\u7f51\u7edc\u201d\uff0c\u800c\u4e0d\u5173\u5fc3\u201c\u6574\u6761\u94fe\u662f\u4e0d\u662f\u9a6c\u5c14\u53ef\u592b\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\u53ea\u8981\u4fdd\u8bc1 \\(q(x_t \\mid x_0)\\) \u4e0d\u53d8\uff0c\u94fe\u4e2d\u95f4\u600e\u4e48\u8df3\u6b65\u3001\u662f\u5426\u968f\u673a\uff0c\u90fd\u4e0d\u5f71\u54cd\u8bad\u7ec3\u597d\u7684 \\(\\varepsilon_\\theta\\) \u4f9d\u7136\u662f\u6700\u4f18\u89e3\u3002</p> <p>\u4e8e\u662f\u4f5c\u8005\u63d0\u51fa\u4e00\u65cf\u65b0\u7684\u201c\u975e\u9a6c\u5c14\u53ef\u592b\u524d\u5411\u8fc7\u7a0b\u201d \\(q_\\sigma(x_{1:T}\\mid x_0)\\)\uff0c\u7528\u4e00\u4e2a\u989d\u5916\u7684\u65b9\u5dee\u5411\u91cf \\(\\sigma\\) \u6765\u63a7\u5236\u6bcf\u4e00\u6b65\u7684\u968f\u673a\u7a0b\u5ea6\u3002\u5f53 \\(\\sigma_t \\to 0\\)\uff0c\u8fc7\u7a0b\u51e0\u4e4e\u786e\u5b9a\uff1b\u5f53 \\(\\sigma_t\\) \u53d6\u7279\u5b9a\u503c\uff0c\u5c31\u9000\u56de\u539f\u59cb DDPM\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#3","title":"3. \u6784\u9020\u975e\u9a6c\u5c14\u53ef\u592b\u94fe\u2014\u2014\u516c\u5f0f\u5c42\u9762","text":"<p>\u65b0\u7684\u524d\u5411\u94fe\u5199\u4f5c</p> \\[ q_\\sigma(x_{t-1}\\mid x_t , x_0) = \\mathcal{N}\\!\\bigl(\\mu(x_t , x_0),\\, \\sigma_t^2 I\\bigr) \\] <p>\u5176\u4e2d\u5747\u503c \\(\\mu\\) \u88ab\u7cbe\u5fc3\u9009\u6210\uff1a</p> \\[ \\mu = \\sqrt{\\alpha_{t-1}} x_0 + \\sqrt{1-\\alpha_{t-1}-\\sigma_t^2}\\, \\frac{x_t - \\sqrt{\\alpha_t} x_0}{\\sqrt{1-\\alpha_t}} \\] <p>\u8fd9\u6837\u8bbe\u8ba1\u662f\u4e3a\u4e86\u201c\u8fb9\u7f18\u4e00\u81f4\u6027\u201d\u2014\u2014\u65e0\u8bba \\(\\sigma\\) \u600e\u4e48\u53d8\uff0c\\(q(x_t \\mid x_0)\\) \u59cb\u7ec8\u662f \\(\\mathcal{N}(\\sqrt{\\alpha_t} x_0, (1-\\alpha_t) I)\\)\u3002</p> <p>\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u8bad\u7ec3\u76ee\u6807 \\(J_\\sigma\\) \u4e0e\u539f\u6765\u7684 \\(L_1\\) \u53ea\u5dee\u4e00\u4e2a\u4e0d\u4f9d\u8d56 \\(\\theta\\) \u7684\u5e38\u6570\uff0c\u56e0\u6b64 \u5b8c\u5168\u4e0d\u9700\u8981\u91cd\u8bad\u7f51\u7edc\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#4-sigma","title":"4. \u53cd\u5411\u751f\u6210\u65f6\u628a \\(\\sigma\\) \u5f53\u65cb\u94ae","text":"<p>\u751f\u6210\u65f6\uff0c\u6211\u4eec\u53cd\u8fc7\u6765\u7528 \\(x_t\\) \u9884\u6d4b \\(x_0\\)\uff0c\u518d\u7528\u4e0a\u9762\u7684 \\(q_\\sigma\\) \u91c7\u6837 \\(x_{t-1}\\)\u3002\u516c\u5f0f\u53d8\u6210</p> \\[ x_{t-1} = \\sqrt{\\alpha_{t-1}} f_\\theta(x_t) + \\sqrt{1-\\alpha_{t-1}-\\sigma_t^2}\\, \\varepsilon_\\theta(x_t) + \\sigma_t \\varepsilon \\] <p>\u5176\u4e2d</p> \\[ f_\\theta(x_t)=\\frac{x_t - \\sqrt{1-\\alpha_t}\\,\\varepsilon_\\theta(x_t,t)}{\\sqrt{\\alpha_t}} \\] <p>\u662f\u7f51\u7edc\u5bf9 \\(x_0\\) \u7684\u70b9\u4f30\u8ba1\u3002</p> <ul> <li>\u628a \\(\\sigma_t\\) \u5168\u8bbe\u4e3a 0\uff0c\u5c31\u5f97\u5230 DDIM\u2014\u2014\u4e00\u6761\u786e\u5b9a\u6027\u7684\u3001\u7531 \\(x_T\\) \u552f\u4e00\u51b3\u5b9a \\(x_0\\) \u7684\u9690\u5f0f\u6a21\u578b\u3002  </li> <li>\u628a \\(\\sigma_t\\) \u8bbe\u4e3a\u539f DDPM \u503c\uff0c\u5c31\u56de\u5230\u968f\u673a DDPM\u3002  </li> <li>\u628a \\(\\tau\\) \u9009\u6210 \\([1,\\dots,T]\\) \u7684\u5b50\u5e8f\u5217\uff08\u6bd4\u5982 20 \u6b65\uff09\uff0c\u5c31\u80fd\u5728 20 \u6b21\u8fed\u4ee3\u5185\u5b8c\u6210\u91c7\u6837\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#5-1-tau","title":"5. \u7ec6\u8282\u4f18\u5316 1\uff1a\u9009 \\(\\tau\\) \u7684\u7b56\u7565","text":"<p>\\(\\tau\\) \u7684\u9009\u53d6\u76f4\u63a5\u5f71\u54cd\u201c\u8df3\u6b65\u201d\u540e\u4fe1\u606f\u7684\u4e22\u5931\u7a0b\u5ea6\u3002\u4f5c\u8005\u8bd5\u4e86\u4e24\u79cd\u7b80\u5355\u89c4\u5219\uff1a</p> <ul> <li>\u7ebf\u6027\uff1a\\(\\tau_i = \\lfloor c \\cdot i \\rfloor\\) </li> <li>\u4e8c\u6b21\uff1a\\(\\tau_i = \\lfloor c \\cdot i^2 \\rfloor\\)</li> </ul> <p>\u5b9e\u9a8c\u91cc\u53d1\u73b0\u5bf9 32\u00d732 \u7684 CIFAR-10 \u7528\u4e8c\u6b21\u66f4\u597d\uff0c\u5bf9 64\u00d764 \u4ee5\u4e0a\u7528\u7ebf\u6027\u5373\u53ef\u3002\u8fd9\u4e00\u6b65\u7eaf\u7cb9\u662f\u4e3a\u4e86\u5728\u6781\u5c11\u6b65\u6570\u4e0b\u4ecd\u4fdd\u6301\u9ad8\u8d28\u91cf\uff0c\u6ca1\u6709\u7406\u8bba\u95e8\u69db\uff0c\u5b9e\u8df5\u4e2d\u6309\u9a8c\u8bc1\u96c6 FID \u6311\u5373\u53ef\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#6-2ode","title":"6. \u7ec6\u8282\u4f18\u5316 2\uff1aODE \u89c6\u89d2\u4e0e\u7f16\u7801\u80fd\u529b","text":"<p>\u628a\u8fed\u4ee3\u6539\u5199\u6210\u8fde\u7eed ODE \u540e\uff0cDDIM \u7684\u66f4\u65b0\u5f0f\u4e0e Euler \u6cd5\u89e3 ODE \u5b8c\u5168\u4e00\u81f4\uff1a</p> \\[ \\frac{\\mathrm{d}\\bar{x}(\\sigma)}{\\mathrm{d}\\sigma} = \\varepsilon_\\theta\\!\\left(\\frac{\\bar{x}(\\sigma)}{\\sqrt{\\sigma^2+1}}\\right) \\] <p>\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li>\u53ef\u4ee5\u7528\u66f4\u7cbe\u786e\u7684 ODE \u79ef\u5206\u5668\uff08\u591a\u6b65 Adams\u3001RK45 \u7b49\uff09\u8fdb\u4e00\u6b65\u51cf\u5c11\u6b65\u6570\uff1b  </li> <li>\u53ef\u4ee5\u4ece \\(x_0\\) \u9006\u5411\u79ef\u5206\u5230 \\(x_T\\)\uff0c\u628a\u771f\u5b9e\u56fe\u50cf\u201c\u7f16\u7801\u201d\u6210\u9690\u53d8\u91cf\uff0c\u518d\u6b63\u5411\u79ef\u5206\u56de\u6765\uff0c\u5b9e\u73b0\u8fd1\u4e4e\u65e0\u635f\u7684\u91cd\u5efa\uff08\u89c1\u8868 2 \u7684 MSE \u7ed3\u679c\uff09\u3002</li> </ul> <p>DDPM \u7531\u4e8e\u53cd\u5411\u94fe\u662f\u968f\u673a\u7684\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u505a\u8fd9\u79cd\u786e\u5b9a\u6027\u7684\u7f16\u89e3\u7801\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#7-x_t","title":"7. \u8bed\u4e49\u63d2\u503c\u2014\u2014\\(x_T\\) \u5c31\u662f\u9ad8\u5c42\u8bed\u4e49\u7801","text":"<p>\u5728 DDIM \u91cc\uff0c\\(x_T\\) \u5b8c\u5168\u51b3\u5b9a\u6700\u7ec8\u56fe\u50cf\u7684\u201c\u957f\u76f8\u201d\u3002\u4e8e\u662f\uff0c\u628a\u4e24\u5f20\u56fe\u7684 \\(x_T\\) \u505a\u7403\u9762\u7ebf\u6027\u63d2\u503c\uff08slerp\uff09\uff0c\u518d\u8dd1\u4e00\u6b21\u77ed\u94fe\uff0c\u5c31\u80fd\u751f\u6210\u4e00\u6761\u5e73\u6ed1\u3001\u8bed\u4e49\u8fde\u8d2f\u7684\u8fc7\u6e21\u5e8f\u5217\uff1b\u800c DDPM \u56e0\u4e3a\u6bcf\u4e00\u6b65\u90fd\u6ce8\u5165\u968f\u673a\u566a\u58f0\uff0c\u63d2\u503c\u7ed3\u679c\u51e0\u4e4e\u4e0d\u53ef\u7528\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#8","title":"8. \u5b9e\u9a8c\u9a8c\u8bc1\uff1a\u7701\u4e86\u591a\u5c11\u65f6\u95f4\uff1f","text":"<p>\u7528\u540c\u4e00\u7ec4\u9884\u8bad\u7ec3\u6743\u91cd\uff0c\u4ec5\u6539\u53d8 \\((\\tau,\\sigma)\\) \u7ec4\u5408\uff1a</p> <ul> <li>CIFAR-10\uff1a20 \u6b65 DDIM \u7684 FID \u2248 4.67\uff0c\u4e0e 1000 \u6b65 DDPM \u7684 4.04 \u51e0\u4e4e\u6301\u5e73\uff0c\u4f46\u65f6\u95f4 \u00d750 \u500d\u51cf\u5c11\u3002  </li> <li>CelebA-HQ 256\u00d7256\uff1a50 \u6b65 DDIM \u5f97\u5230 FID \u2248 6.5\uff0c\u800c 50 \u6b65 DDPM \u5df2\u6389\u5230 45 \u4ee5\u4e0a\u3002</li> </ul> <p>\u6b64\u5916\uff0c\u628a \\(\\sigma\\) \u8c03\u5230 0.2~0.5 \u8fd8\u80fd\u5728\u901f\u5ea6\u4e0e\u8d28\u91cf\u4e4b\u95f4\u505a\u5e73\u6ed1\u6298\u4e2d\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Implicit%20Models/Denoising%20Diffusion%20Implicit%20Models/#9","title":"9. \u7ed3\u8bba\u4e00\u53e5\u8bdd","text":"<p>DDIM \u7528\u201c\u540c\u8bad\u7ec3\u3001\u4e0d\u540c\u91c7\u6837\u201d\u7684\u601d\u8def\uff0c\u628a\u539f\u672c\u9700\u8981\u4e00\u5343\u6b65\u7684\u6269\u6563\u91c7\u6837\u538b\u7f29\u5230\u51e0\u5341\u6b65\u751a\u81f3\u5341\u6b65\u4ee5\u5185\uff0c\u540c\u65f6\u989d\u5916\u8d4b\u4e88\u6a21\u578b\u786e\u5b9a\u6027\u7684\u9690\u7a7a\u95f4\uff0c\u4f7f\u5f97\u63d2\u503c\u3001\u7f16\u7801\u3001\u91cd\u5efa\u90fd\u53d8\u6210\u987a\u624b\u529f\u80fd\uff0c\u800c\u6240\u6709\u8fd9\u4e9b\u53ea\u9700\u5728\u751f\u6210\u9636\u6bb5\u6539\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/","title":"Denoising Diffusion Probabilistic Models","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1006 \u4e2a\u5b57\u00a0\u00a09 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u8fde\u63a5 \u300aDenoising Diffusion Probabilistic Models\u300b</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u5185\u5bb9\u4e3b\u8981\u7531 AI \u751f\u6210</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#1","title":"1. \u751f\u6210\u6a21\u578b\u7684\u5171\u540c\u76ee\u6807","text":"<p>\u751f\u6210\u6a21\u578b\u7684\u6838\u5fc3\u76ee\u6807\u662f\u901a\u8fc7\u5b66\u4e60\u6570\u636e\u7684\u5206\u5e03\uff0c\u751f\u6210\u4e0e\u771f\u5b9e\u6570\u636e\u76f8\u4f3c\u7684\u65b0\u6837\u672c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u6a21\u578b\u80fd\u591f\uff1a - \u9ad8\u6548\u91c7\u6837\uff1a\u5feb\u901f\u751f\u6210\u65b0\u7684\u6837\u672c\u3002 - \u9ad8\u4fdd\u771f\uff1a\u751f\u6210\u7684\u6837\u672c\u4e0e\u771f\u5b9e\u6570\u636e\u5728\u89c6\u89c9\u4e0a\u96be\u4ee5\u533a\u5206\u3002 - \u53ef\u8bc4\u4f30\u5bc6\u5ea6\uff1a\u80fd\u591f\u8ba1\u7b97\u751f\u6210\u6837\u672c\u7684\u6982\u7387\u5bc6\u5ea6\uff0c\u7528\u4e8e\u8fdb\u4e00\u6b65\u7684\u5206\u6790\u548c\u5e94\u7528\u3002  </p> <p>Diffusion \u6a21\u578b\u901a\u8fc7\u201c\u53bb\u566a\u201d\u7684\u8fc7\u7a0b\uff0c\u5c06\u8fd9\u4e9b\u76ee\u6807\u7edf\u4e00\u5230\u4e00\u4e2a\u6846\u67b6\u4e2d\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#2-diffusion","title":"2. Diffusion \u6a21\u578b\u7684\u201c\u4e24\u9636\u6bb5\u201d\u76f4\u89c9","text":"<p>Diffusion \u6a21\u578b\u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u4e24\u4e2a\u9636\u6bb5\u5b9e\u73b0\u751f\u6210\u4efb\u52a1\uff1a 1. \u524d\u5411\u8fc7\u7a0b\uff08Forward Process\uff09\uff1a\u5c06\u6e05\u6670\u7684\u56fe\u50cf\u9010\u6e10\u52a0\u566a\uff0c\u76f4\u5230\u53d8\u6210\u7eaf\u566a\u58f0\u3002 2. \u53cd\u5411\u8fc7\u7a0b\uff08Reverse Process\uff09\uff1a\u4ece\u7eaf\u566a\u58f0\u5f00\u59cb\uff0c\u9010\u6b65\u53bb\u566a\uff0c\u6062\u590d\u51fa\u6e05\u6670\u7684\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u5171\u540c\u6784\u6210\u4e86 Diffusion \u6a21\u578b\u7684\u751f\u6210\u673a\u5236\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#3-forward-process","title":"3. \u524d\u5411\u8fc7\u7a0b\uff08Forward Process\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#31","title":"3.1 \u5b9a\u4e49","text":"<p>\u524d\u5411\u8fc7\u7a0b\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u9010\u6b65\u5c06\u56fe\u50cf\u52a0\u566a\u3002\u6bcf\u4e00\u6b65\u52a0\u7684\u566a\u58f0\u662f\u9ad8\u65af\u5206\u5e03\uff1a</p> \\[ q(x_t \\mid x_{t-1}) = \\mathcal{N}(x_t; \\sqrt{1-\\beta_t}\\,x_{t-1}, \\beta_t I) \\] <p>\u5176\u4e2d\uff0c\\(\\beta_t\\) \u662f\u9884\u8bbe\u7684\u8d85\u53c2\u6570\uff0c\u63a7\u5236\u6bcf\u4e00\u6b65\u52a0\u7684\u566a\u58f0\u91cf\u3002\u968f\u7740 \\(t\\) \u7684\u589e\u52a0\uff0c\u56fe\u50cf\u9010\u6e10\u53d8\u5f97\u6a21\u7cca\uff0c\u6700\u7ec8\u53d8\u6210\u7eaf\u566a\u58f0\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#32","title":"3.2 \u4efb\u610f\u6b65\u95ed\u5f0f\u91c7\u6837","text":"<p>\u5229\u7528\u9ad8\u65af\u5206\u5e03\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u4efb\u610f\u6b65 \\(t\\) \u91c7\u6837\uff0c\u800c\u4e0d\u9700\u8981\u9010\u6b65\u9012\u5f52\u3002\u5177\u4f53\u516c\u5f0f\u4e3a\uff1a</p> \\[ x_t = \\sqrt{\\bar{\\alpha}_t}\\,x_0 + \\sqrt{1-\\bar{\\alpha}_t}\\,\\epsilon, \\quad \\epsilon \\sim \\mathcal{N}(0,I) \\] <p>\u5176\u4e2d\uff0c\\(\\bar{\\alpha}_t = \\prod_{s=1}^{t}(1-\\beta_s)\\)\u3002\u8fd9\u4e2a\u516c\u5f0f\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728\u8bad\u7ec3\u65f6\u76f4\u63a5\u8df3\u5230\u4efb\u610f\u6b65 \\(t\\)\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6548\u7387\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#4-reverse-process","title":"4. \u53cd\u5411\u8fc7\u7a0b\uff08Reverse Process\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#41","title":"4.1 \u76ee\u6807","text":"<p>\u53cd\u5411\u8fc7\u7a0b\u7684\u76ee\u6807\u662f\u4ece\u7eaf\u566a\u58f0 \\(x_T \\sim \\mathcal{N}(0,I)\\) \u5f00\u59cb\uff0c\u9010\u6b65\u6062\u590d\u51fa\u6e05\u6670\u7684\u56fe\u50cf \\(x_0\\)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u901a\u8fc7\u5b66\u4e60\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u5b9e\u73b0\u7684\uff1a</p> \\[ p_\\theta(x_{t-1} \\mid x_t) = \\mathcal{N}(x_{t-1}; \\mu_\\theta(x_t, t), \\sigma_t^2 I) \\] <p>\u5176\u4e2d\uff0c\\(\\mu_\\theta(x_t, t)\\) \u662f\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff0c\\(\\sigma_t\\) \u662f\u56fa\u5b9a\u7684\u65b9\u5dee\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#42","title":"4.2 \u53c2\u6570\u5316","text":"<p>\u4e3a\u4e86\u7b80\u5316\u5b9e\u73b0\uff0c\\(\\sigma_t\\) \u88ab\u56fa\u5b9a\u4e3a \\(\\beta_t\\) \u6216 \\(\\tilde{\\beta}_t\\)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u5747\u503c\u51fd\u6570 \\(\\mu_\\theta(x_t, t)\\)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#5-elbo","title":"5. \u53d8\u5206\u4e0b\u754c ELBO \u7684\u5b8c\u6574\u63a8\u5bfc","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#51","title":"5.1 \u751f\u6210\u6a21\u578b\u4e0e\u8bc1\u636e","text":"<p>\u4e3a\u4e86\u8bc4\u4f30\u751f\u6210\u6a21\u578b\u7684\u6027\u80fd\uff0c\u6211\u4eec\u6700\u5927\u5316\u8bad\u7ec3\u6570\u636e\u7684\u5bf9\u6570\u4f3c\u7136\uff1a</p> \\[ \\log p_\\theta(x_0) = \\log \\int p_\\theta(x_{0:T})\\,dx_{1:T} \\] <p>\u7531\u4e8e\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u79ef\u5206\u975e\u5e38\u56f0\u96be\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u8fd1\u4f3c\u540e\u9a8c\u5206\u5e03 \\(q(x_{1:T} \\mid x_0)\\)\uff0c\u5e76\u4f7f\u7528\u53d8\u5206\u63a8\u65ad\u5f97\u5230\u4e00\u4e2a\u4e0b\u754c\uff08ELBO\uff09\uff1a</p> \\[ \\log p_\\theta(x_0) \\ge \\mathbb{E}_{q(x_{1:T} \\mid x_0)}\\!\\left[\\log\\frac{p_\\theta(x_{0:T})}{q(x_{1:T} \\mid x_0)}\\right] =: -\\mathcal{L}_{\\text{VLB}} \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#52-elbo","title":"5.2 \u5c55\u5f00 ELBO","text":"<p>\u5c06\u8054\u5408\u6982\u7387\u5206\u89e3\u4e3a\uff1a</p> \\[ p_\\theta(x_{0:T}) = p(x_T)\\prod_{t=1}^{T} p_\\theta(x_{t-1} \\mid x_t) \\] <p>\u4ee3\u5165 ELBO\uff0c\u5f97\u5230\uff1a</p> \\[ \\mathcal{L}_{\\text{VLB}} = D_{\\text{KL}}(q(x_T \\mid x_0) \\| p(x_T)) + \\sum_{t=2}^{T} D_{\\text{KL}}(q(x_{t-1} \\mid x_t, x_0) \\| p_\\theta(x_{t-1} \\mid x_t)) - \\mathbb{E}_q[\\log p_\\theta(x_0 \\mid x_1)] \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u5305\u542b\u4e86\u4e09\u4e2a\u90e8\u5206\uff1a 1. \u521d\u59cb\u566a\u58f0\u7684 KL \u6563\u5ea6\uff1a\u8861\u91cf\u521d\u59cb\u566a\u58f0\u5206\u5e03\u4e0e\u5148\u9a8c\u5206\u5e03\u7684\u5dee\u5f02\u3002 2. \u4e2d\u95f4\u6b65\u9aa4\u7684 KL \u6563\u5ea6\uff1a\u8861\u91cf\u6bcf\u4e00\u6b65\u7684\u53bb\u566a\u8fc7\u7a0b\u4e0e\u76ee\u6807\u5206\u5e03\u7684\u5dee\u5f02\u3002 3. \u6700\u7ec8\u6b65\u9aa4\u7684\u5bf9\u6570\u4f3c\u7136\uff1a\u8861\u91cf\u6700\u7ec8\u751f\u6210\u7684\u56fe\u50cf\u4e0e\u771f\u5b9e\u56fe\u50cf\u7684\u76f8\u4f3c\u5ea6\u3002  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#6-elbo-mse-loss","title":"6. \u4ece ELBO \u5230\u53ef\u8bad\u7ec3\u7684 MSE Loss","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#61","title":"6.1 \u91cd\u65b0\u53c2\u6570\u5316\u5747\u503c","text":"<p>\u4e3a\u4e86\u7b80\u5316\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c06\u5747\u503c\u51fd\u6570 \\(\\mu_\\theta(x_t, t)\\) \u91cd\u65b0\u53c2\u6570\u5316\u4e3a\uff1a</p> \\[ \\mu_\\theta(x_t, t) = \\frac{1}{\\sqrt{\\alpha_t}}\\!\\left(x_t - \\frac{\\beta_t}{\\sqrt{1-\\bar{\\alpha}_t}}\\,\\epsilon_\\theta(x_t, t)\\right) \\] <p>\u5176\u4e2d\uff0c\\(\\epsilon_\\theta(x_t, t)\\) \u662f\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff0c\u8868\u793a\u9884\u6d4b\u7684\u566a\u58f0\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#62-kl-mse","title":"6.2 \u4ee3\u5165 KL\uff0c\u5316\u7b80\u4e3a MSE","text":"<p>\u5c06\u4e0a\u8ff0\u5747\u503c\u51fd\u6570\u4ee3\u5165 KL \u6563\u5ea6\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u7b80\u5316\u7684\u635f\u5931\u51fd\u6570\uff1a</p> \\[ \\mathcal{L}_{\\text{simple}} = \\mathbb{E}_{x_0, \\epsilon, t}\\!\\big[\\|\\epsilon - \\epsilon_\\theta(\\sqrt{\\bar{\\alpha}_t}x_0 + \\sqrt{1-\\bar{\\alpha}_t}\\,\\epsilon, t)\\|^2\\big] \\] <p>\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u4e00\u4e2a\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff0c\u8868\u793a\u9884\u6d4b\u7684\u566a\u58f0\u4e0e\u771f\u5b9e\u566a\u58f0\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u901a\u8fc7\u6700\u5c0f\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8bad\u7ec3\u51fa\u4e00\u4e2a\u6709\u6548\u7684\u53bb\u566a\u6a21\u578b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#7-sampling","title":"7. \u91c7\u6837\uff08Sampling\uff09\u7b97\u6cd5","text":"<p>\u5728\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u4ece\u7eaf\u566a\u58f0\u751f\u6210\u6e05\u6670\u7684\u56fe\u50cf\uff1a</p> <ol> <li>\u4ece\u7eaf\u566a\u58f0\u5f00\u59cb\uff1a\\(x_T \\sim \\mathcal{N}(0, I)\\)\u3002</li> <li> <p>\u9010\u6b65\u53bb\u566a\uff1a\u5bf9\u4e8e \\(t = T, T-1, \\dots, 1\\)\uff0c\u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\u66f4\u65b0\u56fe\u50cf\uff1a</p> \\[ x_{t-1} = \\frac{1}{\\sqrt{\\alpha_t}}\\!\\left(x_t - \\frac{1-\\alpha_t}{\\sqrt{1-\\bar{\\alpha}_t}}\\,\\epsilon_\\theta(x_t, t)\\right) + \\sigma_t z, \\quad z \\sim \\mathcal{N}(0, I) \\] </li> <li> <p>\u6700\u7ec8\u5f97\u5230 \\(x_0\\)\uff0c\u5373\u751f\u6210\u7684\u56fe\u50cf\u3002</p> </li> </ol>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#8","title":"8. \u4ee3\u7801\u5b9e\u73b0\u89c6\u89d2\u7684\u516c\u5f0f\u6620\u5c04","text":"<p>\u5728\u5b9e\u9645\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u76f4\u63a5\u6620\u5c04\u4e3a\u4ee5\u4e0b PyTorch \u4ee3\u7801\u7247\u6bb5\uff1a</p> \u6570\u5b66\u7b26\u53f7 PyTorch \u4ee3\u7801\u7247\u6bb5 \u8bf4\u660e \\(x_0\\) <code>x0: Tensor</code> \u539f\u59cb\u56fe\u50cf\uff0c\u8303\u56f4 <code>[-1, 1]</code> \\(\\beta_t\\) <code>betas: Tensor[T]</code> \u9884\u5b9a\u4e49\u566a\u58f0\u8c03\u5ea6\uff0c\u957f\u5ea6 <code>T</code> \\(\\alpha_t = 1 - \\beta_t\\) <code>alphas = 1 - betas</code> \u6bcf\u4e00\u6b65\u7684\u4fdd\u7559\u7cfb\u6570 \\(\\bar{\\alpha}_t = \\prod_{s=1}^{t}\\alpha_s\\) <code>alphas_cumprod = alphas.cumprod(0)</code> \u7d2f\u79ef\u4e58\u79ef \\(\\sqrt{\\bar{\\alpha}_t}\\) <code>sqrt_alphas_cumprod = alphas_cumprod.sqrt()</code> \u7528\u4e8e\u52a0\u566a \\(\\sqrt{1 - \\bar{\\alpha}_t}\\) <code>sqrt_one_minus_alphas_cumprod = (1 - alphas_cumprod).sqrt()</code> \u7528\u4e8e\u52a0\u566a \u52a0\u566a\u516c\u5f0f \\(x_t = \\sqrt{\\bar{\\alpha}_t} x_0 + \\sqrt{1-\\bar{\\alpha}_t} \\epsilon\\) <code>x_t = sqrt_alphas_cumprod[t] * x0 + sqrt_one_minus_alphas_cumprod[t] * eps</code> \u8bad\u7ec3\u65f6\u4e00\u6b65\u5f97\u5230\u4efb\u610f\u6b65\u566a\u58f0\u56fe \\(\\epsilon_\\theta(x_t, t)\\) <code>eps_pred = model(x_t, t)</code> U-Net \u8f93\u51fa\u9884\u6d4b\u566a\u58f0 \u8bad\u7ec3\u635f\u5931 \\(\\|\\epsilon - \\epsilon_\\theta\\|_2^2\\) <code>loss = F.mse_loss(eps, eps_pred)</code> \u7b80\u5316\u635f\u5931 \u91c7\u6837\u66f4\u65b0 \\(x_{t-1}\\) \u516c\u5f0f <code>x_prev = (x_t - (1 - alphas[t]) / sqrt_one_minus_alphas_cumprod[t] * eps_pred) / alphas[t].sqrt() + sigma_t * torch.randn_like(x_t)</code> DDPM \u91c7\u6837\u4e00\u6b65 <code>sigma_t</code> \u9009\u62e9 <code>sigma_t = betas[t].sqrt()</code> \u5bf9\u5e94 DDPM \u968f\u673a\u91c7\u6837\uff1b\u82e5\u4e3a 0 \u2192 DDIM"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Denoising%20Diffusion%20Probabilistic%20Models/Denoising%20Diffusion%20Probabilistic%20Models/#_1","title":"\u8bad\u7ec3\u5faa\u73af\u4f2a\u4ee3\u7801\uff08\u6781\u7b80\u7248\uff09","text":"Python<pre><code># \u9884\u8ba1\u7b97\u5f20\u91cf\nalphas_cumprod = torch.cumprod(1 - betas, dim=0)\nsqrt_alphas_cumprod = alphas_cumprod.sqrt()\nsqrt_one_minus_alphas_cumprod = (1 - alphas_cumprod).sqrt()\n\nfor x0 in dataloader:\n    t = torch.randint(0, T, (x0.size(0),), device=x0.device)\n    noise = torch.randn_like(x0)\n    x_t = sqrt_alphas_cumprod[t, None, None, None] * x0 \\\n          + sqrt_one_minus_alphas_cumprod[t, None, None, None] * noise\n    eps_pred = model(x_t, t)\n    loss = F.mse_loss(noise, eps_pred)\n    optimizer.zero_grad(); loss.backward(); optimizer.step()\n    x_t = torch.randn_like(x0)  # \u4ece\u7eaf\u566a\u58f0\u5f00\u59cb\n    for t in reversed(range(T)):\n        eps_pred = model(x_t, torch.full((x_t.size(0),), t, device=x_t.device))\n        sigma_t = betas[t].sqrt()\n        z = torch.randn_like(x_t) if t &gt; 0 else 0\n        x_t = (x_t - (1 - alphas[t]) / sqrt_one_minus_alphas_cumprod[t] * eps_pred) \\\n              / alphas[t].sqrt() + sigma_t * z\n    return x_t  # \u6700\u7ec8\u751f\u6210\u56fe\n</code></pre>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/","title":"Score-Based Generative Modeling through Stochastic Differential Equations","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 717 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u94fe\u63a5 \u300aScore-Based Generative Modeling through Stochastic Differential Equations\u300b</p> <p>\u4e00\u79cd\u57fa\u4e8e \u968f\u673a\u5fae\u5206\u65b9\u7a0b (SDE) \u7684\u7edf\u4e00\u751f\u6210\u5efa\u6a21\u6846\u67b6\u3002 </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/#introduction","title":"\u5f15\u8a00\uff08Introduction\uff09","text":"<p>\u80cc\u666f - \u751f\u6210\u5efa\u6a21\u4e2d\u6709\u4e24\u5927\u7c7b\u5f88\u6210\u529f\u7684\u57fa\u4e8e\u566a\u58f0\u6270\u52a8\u7684\u6982\u7387\u751f\u6210\u65b9\u6cd5\uff1a   1. SMLD\uff08Score Matching with Langevin Dynamics\uff09      - \u5148\u5bf9\u6570\u636e\u52a0\u5165\u4e0d\u540c\u5f3a\u5ea6\u7684\u566a\u58f0      - \u5b66\u4e60\u6bcf\u4e2a\u566a\u58f0\u5c3a\u5ea6\u4e0b\u7684 score function \\(\\nabla_x \\log p_\\sigma(x)\\)      - \u91c7\u6837\u65f6\u7528 Langevin \u52a8\u529b\u5b66\u9010\u6b65\u53bb\u566a   2. DDPM\uff08Denoising Diffusion Probabilistic Model\uff09      - \u6784\u9020\u4e00\u6761\u566a\u58f0\u9010\u6e10\u589e\u5f3a\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff08\u524d\u5411\u8fc7\u7a0b\uff09      - \u5b66\u4e60\u9006\u9a6c\u5c14\u53ef\u592b\u94fe\uff08\u53cd\u5411\u8fc7\u7a0b\uff09\u7684\u53c2\u6570      - \u672c\u8d28\u4e0a\u4e5f\u5728\u5b66\u4e60\u6bcf\u4e2a\u566a\u58f0\u5c3a\u5ea6\u4e0b\u7684 score function  </p> <p>\u4e24\u8005\u5171\u540c\u70b9\uff1a - \u90fd\u662f score-based generative models - \u90fd\u662f\u4ece\u201c\u591a\u5c3a\u5ea6\u566a\u58f0\u201d\u51fa\u53d1\uff1a\u524d\u5411\u8fc7\u7a0b\u52a0\u566a\uff0c\u53cd\u5411\u8fc7\u7a0b\u53bb\u566a  </p> <p>\u4e3b\u8981\u8d21\u732e - \u63d0\u51fa\u4e00\u4e2a\u57fa\u4e8e\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09\u7684\u7edf\u4e00\u6846\u67b6\uff0c\u628a SMLD \u548c DDPM \u89c6\u4e3a\u79bb\u6563\u5316\u7684\u7279\u6b8a SDE - \u6b63\u5411 SDE\uff1a\u6570\u636e \\(\\to\\) \u9ad8\u65af\u5148\u9a8c - \u53cd\u5411 SDE\uff1a\u5148\u9a8c \\(\\to\\) \u6570\u636e\uff08\u9700\u5df2\u77e5\u5404\u65f6\u523b\u7684 score\uff09 - \u8bad\u7ec3\u65b9\u6cd5\uff1a\u7528\u65f6\u95f4\u4f9d\u8d56\u7684\u795e\u7ecf\u7f51\u7edc\u4f30\u8ba1 score function - \u65b0\u7279\u6027\uff1a\u7075\u6d3b\u91c7\u6837\u5668\u3001Predictor\u2013Corrector\u3001Probability Flow ODE\u3001\u6761\u4ef6\u751f\u6210 - \u5b9e\u9a8c\uff1a\u5728 CIFAR-10 \u4e0a\u8fbe\u5230\u5f53\u65f6\u6700\u4f73\u65e0\u6761\u4ef6\u751f\u6210\u6307\u6807\uff08FID 2.20, IS 9.89\uff09\u3001\u4f3c\u7136\u6700\u9ad8\u8bb0\u5f55\uff082.99 bits/dim\uff09\u3001\u9996\u6b21\u751f\u6210 1024\u00d71024 \u9ad8\u4fdd\u771f\u56fe\u50cf  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/#background","title":"\u80cc\u666f\uff08Background\uff09","text":"<p>SMLD\uff08Denoising Score Matching with Langevin Dynamics\uff09 - \u5bf9\u6570\u636e\u52a0\u566a\uff1a\\(p_\\sigma(\\tilde{x} | x) = \\mathcal{N}(\\tilde{x}; x, \\sigma^2 I)\\) - \u591a\u4e2a\u566a\u58f0\u5c3a\u5ea6\uff1a\\(\\sigma_{\\min} = \\sigma_1 &lt; \\dots &lt; \\sigma_N = \\sigma_{\\max}\\) - \u8bad\u7ec3\u76ee\u6807\uff1a  </p> \\[ \\min_\\theta \\sum_{i=1}^N \\sigma_i^2 \\, \\mathbb{E}\\big[ \\| s_\\theta(\\tilde{x},\\sigma_i) - \\nabla_{\\tilde{x}} \\log p_\\sigma(\\tilde{x} | x) \\|^2 \\big] \\] <ul> <li>\u91c7\u6837\uff1a\u4ece\u6700\u5927\u566a\u58f0 \\(\\sigma_N\\) \u7684\u9ad8\u65af\u5f00\u59cb\uff0c\u4f9d\u6b21\u7528 Langevin MCMC \u53bb\u566a\uff0c\u5230 \\(\\sigma_{\\min}\\) \u5f97\u5230\u6837\u672c  </li> </ul> <p>DDPM\uff08Denoising Diffusion Probabilistic Models\uff09 - \u524d\u5411\u9a6c\u5c14\u53ef\u592b\u94fe\uff1a \\(q(x_i | x_{i-1}) = \\mathcal{N}(\\sqrt{1 - \\beta_i} x_{i-1}, \\beta_i I)\\) - \u8bad\u7ec3\uff1a\u53cd\u5411\u94fe \\(p_\\theta(x_{i-1} | x_i)\\)\uff0cELBO \u7b49\u4ef7\u4e8e\u591a\u5c3a\u5ea6 score matching - \u91c7\u6837\uff1a\u4ece\u9ad8\u65af\u566a\u58f0 \\(x_N\\) \u5f00\u59cb\uff0c\u9010\u6b65\u8fd8\u539f\u5230 \\(x_0\\) </p> <p>\u4e24\u8005\u5173\u7cfb - \u90fd\u662f\u4e0d\u540c\u566a\u58f0\u5c3a\u5ea6\u4e0b\u7684 score matching - \u5dee\u5f02\u5728\u52a0\u566a\u65b9\u5f0f\uff1aSMLD \u2192 variance exploding\uff0cDDPM \u2192 variance preserving  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/#sde-score-based","title":"\u57fa\u4e8e SDE \u7684 Score-Based \u751f\u6210\u5efa\u6a21","text":"<p>\u6b63\u5411 SDE\uff08\u52a0\u566a\u8fc7\u7a0b\uff09 </p> \\[ dx = f(x,t) \\, dt + g(t) \\, dw \\] <ul> <li>\\(f(x,t)\\)\uff1a\u6f02\u79fb\u7cfb\u6570  </li> <li>\\(g(t)\\)\uff1a\u6269\u6563\u7cfb\u6570  </li> <li>\\(w\\)\uff1a\u6807\u51c6 Wiener \u8fc7\u7a0b  </li> <li>\u76ee\u6807\uff1a\u628a \\(p_0\\) \u5e73\u6ed1\u8f6c\u6210\u6613\u91c7\u6837\u7684 \\(p_T\\) </li> </ul> <p>\u53cd\u5411 SDE\uff08\u751f\u6210\u8fc7\u7a0b\uff09 </p> \\[ dx = \\big[ f(x,t) - g(t)^2 \\, \\nabla_x \\log p_t(x) \\big] \\, dt + g(t) \\, d\\bar{w} \\] <ul> <li>\\(d\\bar{w}\\) \u662f\u53cd\u5411\u65f6\u95f4\u7684 Wiener \u8fc7\u7a0b  </li> <li>\u9700\u5df2\u77e5 \\(\\nabla_x \\log p_t(x)\\) \u624d\u80fd\u751f\u6210  </li> </ul> <p>score \u4f30\u8ba1 </p> \\[ \\min_\\theta \\mathbb{E}_{t \\sim U(0,T)} \\big[ \\lambda(t) \\, \\mathbb{E}_{x_0 \\sim p_0, x_t \\sim p_{0t}(\\cdot|x_0)} \\| s_\\theta(x_t, t) - \\nabla_{x_t} \\log p_{0t}(x_t | x_0) \\|^2 \\big] \\] <ul> <li>\\(\\lambda(t)\\)\uff1a\u6743\u91cd\u51fd\u6570  </li> <li>\u5982\u679c \\(f\\) \u662f\u4eff\u5c04\u7684\uff0c\u6761\u4ef6\u5206\u5e03\u662f\u9ad8\u65af\uff0c\u8bad\u7ec3\u65b9\u4fbf  </li> </ul> <p>\u4e09\u79cd SDE - VE SDE\uff08variance exploding\uff09 - VP SDE\uff08variance preserving\uff09 - Sub-VP SDE\uff08VP \u6539\u8fdb\u7248\uff09  </p> <p>SMLD \u21d4 VE SDE \u79bb\u6563\u5316 DDPM \u21d4 VP SDE \u79bb\u6563\u5316  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/#sde","title":"\u6c42\u89e3\u53cd\u5411 SDE","text":"<p>\u901a\u7528\u6570\u503c\u89e3\u6cd5 - Euler\u2013Maruyama\u3001\u968f\u673a Runge\u2013Kutta \u7b49 - Reverse Diffusion Sampler\uff1a\u901a\u7528\uff0c\u4f18\u4e8e\u539f\u751f\u91c7\u6837  </p> <p>Predictor\u2013Corrector (PC) \u91c7\u6837\u5668 1. Predictor\uff1a\u6570\u503c SDE \u66f4\u65b0\u4e00\u6b65 2. Corrector\uff1a\u57fa\u4e8e score \u7684 MCMC\uff08\u5982 Langevin \u52a8\u529b\u5b66\uff09\u4fee\u6b63 - SMLD \u539f\u6cd5\uff1aPredictor=\u6052\u7b49\uff0cCorrector=Langevin - DDPM \u539f\u6cd5\uff1aPredictor=\u7956\u5148\u91c7\u6837\uff0cCorrector=\u6052\u7b49 - PC \u65b9\u6cd5\u6bd4\u5355\u7eaf\u589e\u52a0\u9884\u6d4b\u6b65\u6548\u679c\u66f4\u597d  </p> <p>Probability Flow ODE </p> \\[ dx = \\left[ f(x,t) - \\frac{1}{2} g(t)^2 \\, \\nabla_x \\log p_t(x) \\right] dt \\] <ul> <li>\u4e0e SDE \u8fb9\u9645\u5206\u5e03\u4e00\u81f4\uff0c\u4f46\u786e\u5b9a\u6027  </li> <li>\u7528\u9014\uff1a\u7cbe\u786e\u4f3c\u7136\u8ba1\u7b97\u3001\u6f5c\u7a7a\u95f4\u64cd\u4f5c\u3001\u81ea\u9002\u5e94\u91c7\u6837  </li> </ul> <p>\u7f51\u7edc\u7ed3\u6784\u6539\u8fdb - NCSN++\uff08VE SDE\uff09\u3001DDPM++\uff08VP/Sub-VP SDE\uff09 - \u66f4\u6df1\u7f51\u7edc + \u8fde\u7eed\u76ee\u6807 \u2192 CIFAR-10 FID 2.20, IS 9.89\uff1bbits/dim 2.99\uff1b\u9996\u6b21\u751f\u6210 CelebA-HQ 1024\u00d71024 \u9ad8\u4fdd\u771f\u56fe\u50cf  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/Score-Based%20Generative%20Modeling%20through%20Stochastic%20Differential%20Equations/#_1","title":"\u6761\u4ef6\u4e0e\u53ef\u63a7\u751f\u6210","text":"<p>\u5728\u53cd\u5411 SDE \u4e2d\u66ff\u6362\u4e3a\u6761\u4ef6 score\uff1a  </p> \\[ \\nabla_x \\log p_t(x|y) = \\nabla_x \\log p_t(x) + \\nabla_x \\log p_t(y|x) \\] <ul> <li>\\(\\nabla_x \\log p_t(x)\\)\uff1a\u65e0\u6761\u4ef6 score  </li> <li>\\(\\nabla_x \\log p_t(y|x)\\)\uff1a\u6761\u4ef6\u68af\u5ea6  </li> </ul> <p>\u5982\u4f55\u52a0\u6761\u4ef6 - \u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b - \u6761\u4ef6\u68af\u5ea6\u53ef\u6765\u81ea\u5206\u7c7b\u5668\u6216\u89c2\u6d4b\u6570\u636e\u4f3c\u7136  </p> <p>\u5e94\u7528\u793a\u4f8b - \u7c7b\u522b\u6761\u4ef6\u751f\u6210\uff1a\u7528\u5206\u7c7b\u5668\u68af\u5ea6\u63d0\u5347\u7c7b\u522b\u4e00\u81f4\u6027 - \u56fe\u50cf\u4fee\u8865\uff08inpainting\uff09\uff1a\u5f3a\u5236\u5df2\u77e5\u50cf\u7d20\u5339\u914d\u6761\u4ef6\u5206\u5e03 - \u56fe\u50cf\u4e0a\u8272\uff08colorization\uff09\uff1a\u6761\u4ef6\u662f\u7070\u5ea6\u50cf\u7d20\u503c  </p> <p>\u4f18\u52bf - \u540c\u4e00\u6a21\u578b\u652f\u6301\u591a\u4efb\u52a1 - \u7075\u6d3b\u66ff\u6362\u6761\u4ef6\u6765\u6e90 - CIFAR-10 \u7c7b\u522b\u6761\u4ef6\u751f\u6210\u3001\u4fee\u8865\u3001\u4e0a\u8272\u6548\u679c\u663e\u8457\u63d0\u5347  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/","title":"Unleashing the Power of One-Step Diffusion based Image Super-Resolution via a Large-Scale Diffusion Discriminator","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 751 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u8fde\u63a5 \u300aUnleashing the Power of One-Step Diffusion based Image Super-Resolution via a Large-Scale Diffusion Discriminator\u300b</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u5185\u5bb9\u4e3b\u8981\u7531 AI \u751f\u6210</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#1-introduction","title":"1. Introduction\uff08\u5f15\u8a00\uff09","text":"<ul> <li>\u95ee\u9898\u80cc\u666f\uff1a\u56fe\u50cf\u8d85\u5206\u8fa8\u7387\uff08Image Super-Resolution, SR\uff09\u5e0c\u671b\u4ece\u4f4e\u5206\u8fa8\u7387 (LR) \u56fe\u50cf\u6062\u590d\u9ad8\u5206\u8fa8\u7387 (HR) \u56fe\u50cf\u3002  </li> <li>\u73b0\u6709\u6311\u6218\uff1a  </li> <li>\u591a\u6b65\u6269\u6563\u6a21\u578b (multi-step diffusion) \u5728 SR \u4e2d\u8868\u73b0\u5f3a\uff0c\u4f46\u63a8\u7406\u5f00\u9500\u5927\uff08\u51e0\u5341\u5230\u4e0a\u767e\u6b65\u91c7\u6837\uff09\u3002  </li> <li>\u5355\u6b65\u6269\u6563\u6a21\u578b (one-step diffusion) \u63d0\u5347\u901f\u5ea6\uff0c\u5374\u5728\u8d28\u91cf\u4e0a\u660e\u663e\u843d\u540e\u3002  </li> <li> <p>GAN \u65b9\u6cd5\u8bad\u7ec3\u7a33\u5b9a\u6027\u5dee\uff0c\u7f3a\u4e4f\u5927\u89c4\u6a21\u7a33\u5b9a\u66ff\u4ee3\u65b9\u6848\u3002  </p> </li> <li> <p>\u8bba\u6587\u8d21\u732e\uff1a  </p> </li> <li>\u63d0\u51fa One-Step Diffusion GAN (OSDG) \u6846\u67b6\u3002  </li> <li>\u5f15\u5165 \u5927\u89c4\u6a21\u6269\u6563\u5224\u522b\u5668 (Diffusion Discriminator, DD)\uff0c\u4f5c\u4e3a\u8bad\u7ec3\u7684\u6838\u5fc3\u76d1\u7763\u3002  </li> <li>\u5728 \u8bad\u7ec3\u9636\u6bb5\u4f7f\u7528\u591a\u6b65\u6269\u6563\u5224\u522b\u5668\u7ea6\u675f \u2192 \u5728\u63a8\u7406\u9636\u6bb5\u53ea\u9700\u5355\u6b65\u6269\u6563\u751f\u6210\u3002  </li> <li>\u5728\u591a\u4e2a\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0 \u63a5\u8fd1\u591a\u6b65\u6269\u6563\u7684\u8d28\u91cf + \u8fdc\u5feb\u4e8e\u5176\u7684\u901f\u5ea6\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#2-related-work","title":"2. Related Work\uff08\u76f8\u5173\u5de5\u4f5c\uff09","text":"<ul> <li>\u8d85\u5206\u8fa8\u7387\u65b9\u6cd5\uff1a  </li> <li>CNN-based (EDSR, RCAN)\uff1a\u63d0\u5347 PSNR\uff0c\u4f46\u7f3a\u4e4f\u611f\u77e5\u8d28\u91cf\u3002  </li> <li> <p>GAN-based (SRGAN, ESRGAN)\uff1a\u589e\u5f3a\u611f\u77e5\u7ec6\u8282\uff0c\u4f46\u8bad\u7ec3\u4e0d\u7a33\u5b9a\uff0c\u5bb9\u6613\u8fc7\u62df\u5408\u6216\u5f15\u5165\u4f2a\u5f71\u3002  </p> </li> <li> <p>\u6269\u6563\u6a21\u578b (Diffusion Models)\uff1a  </p> </li> <li>\u4f18\u70b9\uff1a\u9010\u6b65\u53bb\u566a\u7684\u65b9\u5f0f\uff0c\u751f\u6210\u8d28\u91cf\u6781\u9ad8\u3002  </li> <li> <p>\u7f3a\u70b9\uff1a\u9700\u8981 \u591a\u6b65\u91c7\u6837\uff0c\u63a8\u7406\u901f\u5ea6\u6162\u3002  </p> </li> <li> <p>\u5355\u6b65\u6269\u6563 (One-Step Diffusion)\uff1a  </p> </li> <li>\u6700\u8fd1\u7814\u7a76\u8bd5\u56fe\u538b\u7f29\u6269\u6563\u8fc7\u7a0b\u5230\u4e00\u6b65\uff0c\u4f46\u5bfc\u81f4\u611f\u77e5\u8d28\u91cf\u6025\u5267\u4e0b\u964d\u3002  </li> <li>\u73b0\u6709\u65b9\u6cd5\u7f3a\u4e4f\u6709\u6548\u7684 \u8bad\u7ec3\u4fe1\u53f7 \u6765\u6307\u5bfc\u5355\u6b65\u751f\u6210\u5668\u3002  </li> </ul> <p>\u672c\u6587\u5b9a\u4f4d\uff1a\u63d0\u51fa Diffusion Discriminator\uff0c\u4f5c\u4e3a GAN \u5224\u522b\u5668\u7684\u66ff\u4ee3\u54c1\uff0c\u5229\u7528\u591a\u6b65\u6269\u6563\u7684\u5f3a\u5206\u5e03\u5bf9\u9f50\u80fd\u529b\uff0c\u6307\u5bfc\u5355\u6b65\u6269\u6563\u6a21\u578b\u3002  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#3-methodology","title":"3. Methodology\uff08\u65b9\u6cd5\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#31","title":"3.1 \u6269\u6563\u6a21\u578b\u56de\u987e","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#1","title":"(1) \u6b63\u5411\u52a0\u566a\u8fc7\u7a0b\uff1a","text":"\\[ q(x_t | x_{t-1}) = \\mathcal{N}(x_t; \\sqrt{1-\\beta_t}x_{t-1}, \\beta_t I) \\] <ul> <li>\\(x_t\\)\uff1a\u7b2c \\(t\\) \u6b65\u5e26\u566a\u6837\u672c  </li> <li>\\(\\beta_t\\)\uff1a\u566a\u58f0\u8c03\u5ea6  </li> </ul> <p>\u91cd\u53c2\u6570\u5316\u516c\u5f0f\uff1a  </p> \\[ x_t = \\alpha_t x_0 + \\sigma_t \\epsilon, \\quad \\epsilon \\sim \\mathcal{N}(0,I) \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#2","title":"(2) \u53cd\u5411\u53bb\u566a\u8fc7\u7a0b\uff1a","text":"\\[ p_\\theta(x_{t-1}|x_t) = \\mathcal{N}(x_{t-1}; \\mu_\\theta(x_t, t), \\Sigma_\\theta(x_t, t)) \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#32-one-step-generator","title":"3.2 \u5355\u6b65\u6269\u6563\u751f\u6210\u5668 (One-Step Generator)","text":"<ul> <li>\u5c06\u6269\u6563\u8fc7\u7a0b\u538b\u7f29\u4e3a\u4e00\u6b65\uff1a  </li> <li>\u8f93\u5165\uff1a\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf \\(x_{LR}\\) </li> <li> <p>\u8f93\u51fa\uff1a\u4e00\u6b65\u751f\u6210\u7684\u8d85\u5206\u8fa8\u7387\u56fe\u50cf \\(\\hat{x}_{HR}\\)\u3002  </p> </li> <li> <p>\u635f\u5931\u51fd\u6570\uff1a  </p> </li> <li>\u57fa\u7840\u91cd\u5efa\u635f\u5931 (L1, L2)\u3002  </li> <li>\u611f\u77e5\u635f\u5931 (LPIPS)\u3002  </li> <li>\u6700\u91cd\u8981\uff1a\u6765\u81ea \u6269\u6563\u5224\u522b\u5668\u7684\u5bf9\u6297\u6027\u635f\u5931\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#33-diffusion-discriminator-dd","title":"3.3 \u5927\u89c4\u6a21\u6269\u6563\u5224\u522b\u5668 (Diffusion Discriminator, DD)","text":"<ul> <li> <p>\u601d\u60f3\uff1a\u4f20\u7edf GAN \u5224\u522b\u5668 \\(D(x)\\) \u5224\u65ad\u771f/\u5047\uff1b\u800c\u672c\u5de5\u4f5c\u4f7f\u7528 \u591a\u6b65\u6269\u6563\u6a21\u578b \u4f5c\u4e3a\u5224\u522b\u5668\uff0c\u63d0\u4f9b\u66f4\u5f3a\u76d1\u7763\u3002  </p> </li> <li> <p>\u8bad\u7ec3\u673a\u5236\uff1a  </p> </li> <li>\u771f\u5b9e HR \u56fe\u50cf \u2192 \u7ecf\u8fc7\u6b63\u5411\u6269\u6563\u5f97\u5230 \\(x_t\\)\u3002  </li> <li>\u5355\u6b65\u751f\u6210\u7684 \\(\\hat{x}\\) \u4e5f\u7ecf\u8fc7\u76f8\u540c\u6269\u6563\u8fc7\u7a0b\u5f97\u5230 \\(\\hat{x}_t\\)\u3002  </li> <li> <p>\u591a\u6b65\u6269\u6563\u5224\u522b\u5668\u5b66\u4e60\u533a\u5206 \\((x_t)\\) \u4e0e \\((\\hat{x}_t)\\)\u3002  </p> </li> <li> <p>\u5224\u522b\u635f\u5931\uff1a  </p> </li> </ul> \\[ \\mathcal{L}_{DD} = \\mathbb{E}_{x} \\left[ \\log D(x_t, t) \\right] + \\mathbb{E}_{\\hat{x}} \\left[ \\log(1 - D(\\hat{x}_t, t)) \\right] \\] <ul> <li>\u6700\u7ec8\u8bad\u7ec3\u76ee\u6807\uff1a  </li> </ul> \\[ \\mathcal{L} = \\mathcal{L}_{rec} + \\lambda_1 \\mathcal{L}_{perc} + \\lambda_2 \\mathcal{L}_{DD} \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#4-experiments","title":"4. Experiments\uff08\u5b9e\u9a8c\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#41","title":"4.1 \u6570\u636e\u96c6","text":"<ul> <li>DIV2K  </li> <li>Flickr2K  </li> <li>RealSR  </li> <li>\u5bbd\u6cdb\u7684\u9ad8\u5206\u8fa8\u7387\u81ea\u7136\u56fe\u50cf\u96c6\u5408  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#42","title":"4.2 \u8bc4\u4ef7\u6307\u6807","text":"<ul> <li>\u4f20\u7edf\u6307\u6807\uff1aPSNR, SSIM  </li> <li>\u611f\u77e5\u6307\u6807\uff1aLPIPS, DISTS  </li> <li>\u7528\u6237\u7814\u7a76\uff1a\u4eba\u7c7b\u504f\u597d\u6d4b\u8bd5  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#43","title":"4.3 \u5bf9\u6bd4\u5b9e\u9a8c","text":"<ul> <li>Baselines\uff1aEDSR, RCAN, ESRGAN, Real-ESRGAN, DiffusionSR \u7b49\u3002  </li> <li>\u7ed3\u679c\uff1a  </li> <li>\u5355\u6b65\u6269\u6563\u5728\u901f\u5ea6\u4e0a\u6bd4\u591a\u6b65\u6269\u6563\u5feb \\(10\\sim 50\\times\\)\u3002  </li> <li>\u5728\u8d28\u91cf\u6307\u6807\u4e0a\u63a5\u8fd1\u591a\u6b65\u6269\u6563\uff0c\u4f18\u4e8e\u73b0\u6709\u5355\u6b65\u6269\u6563\u548c GAN-based \u65b9\u6cd5\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#44","title":"4.4 \u6d88\u878d\u5b9e\u9a8c","text":"<ul> <li>\u4ec5\u4f7f\u7528 L1 \u2192 \u56fe\u50cf\u8fc7\u4e8e\u5e73\u6ed1\u3002  </li> <li>\u4f7f\u7528 GAN \u5224\u522b\u5668 \u2192 \u4e0d\u7a33\u5b9a\uff0c\u5b58\u5728\u4f2a\u5f71\u3002  </li> <li>\u4f7f\u7528 Diffusion Discriminator \u2192 \u7a33\u5b9a\u6536\u655b\uff0c\u8d28\u91cf\u6700\u4f73\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/Unleashing%20the%20Power%20of%20One-Step%20Diffusion%20based%20Image%20Super-Resolution/#5-conclusion","title":"5. Conclusion\uff08\u7ed3\u8bba\uff09","text":"<ul> <li>\u63d0\u51fa OSDG \u6846\u67b6\uff0c\u5b9e\u73b0\u5355\u6b65\u6269\u6563\u56fe\u50cf\u8d85\u5206\u8fa8\u7387\u3002  </li> <li>\u521b\u65b0\u70b9\uff1a  </li> <li>\u63d0\u51fa \u5927\u89c4\u6a21\u6269\u6563\u5224\u522b\u5668 (Diffusion Discriminator)\uff0c\u66ff\u4ee3\u4f20\u7edf GAN \u5224\u522b\u5668\u3002  </li> <li>\u5728\u63a8\u7406\u9636\u6bb5\u53ea\u9700\u4e00\u6b65\u91c7\u6837\uff0c\u4f46\u8d28\u91cf\u63a5\u8fd1\u591a\u6b65\u6269\u6563\u3002  </li> <li>\u4f18\u52bf\uff1a\u517c\u987e \u9ad8\u6548\u6027\uff08\u901f\u5ea6\uff09 \u4e0e \u9ad8\u8d28\u91cf\uff08\u611f\u77e5\u6307\u6807\u3001\u7528\u6237\u504f\u597d\uff09\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/","title":"Upscale-A-Video, Temporal-Consistent Diffusion Model for Real-World Video Super-Resolution","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 959 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u6587\u7ae0\u8fde\u63a5 \u300aUpscale-A-Video: Temporal-Consistent Diffusion Model for Real-World Video Super-Resolution\u300b</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u5185\u5bb9\u4e3b\u8981\u7531 AI \u751f\u6210</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#1-introduction","title":"1. Introduction\uff08\u5f15\u8a00\uff09","text":"<ul> <li>\u4efb\u52a1\u76ee\u6807\uff1a\u89c6\u9891\u8d85\u5206\u8fa8\u7387\uff08Video Super-Resolution, VSR\uff09 \u2192 \u4ece\u4f4e\u8d28\u91cf\u89c6\u9891\u6062\u590d\u9ad8\u5206\u8fa8\u7387\u3001\u9ad8\u4fdd\u771f\u3001\u65f6\u95f4\u4e00\u81f4\u7684\u7ed3\u679c\u3002  </li> <li>\u6311\u6218\uff1a  </li> <li>\u590d\u6742\u9000\u5316\uff1a\u771f\u5b9e\u4e16\u754c\u4e2d\u4e0d\u4ec5\u6709\u4e0b\u91c7\u6837\uff0c\u8fd8\u5305\u62ec\u566a\u58f0\u3001\u6a21\u7cca\u3001\u538b\u7f29\u4f2a\u5f71\u3001\u95ea\u70c1\u7b49\u3002  </li> <li>\u65f6\u95f4\u4e00\u81f4\u6027\uff1a\u6269\u6563\u6a21\u578b\u91c7\u6837\u5177\u6709\u968f\u673a\u6027\uff0c\u5bb9\u6613\u5bfc\u81f4\u5e27\u95f4\u4e0d\u4e00\u81f4\uff08flickering\uff09\u3002  </li> <li> <p>\u5c40\u90e8 vs \u5168\u5c40\uff1a\u73b0\u6709\u65b9\u6cd5\u53ea\u80fd\u4fdd\u8bc1\u77ed\u5e8f\u5217\u5185\u4e00\u81f4\u6027\uff0c\u957f\u89c6\u9891\u4ecd\u6709\u8de8\u6bb5\u4e0d\u8fde\u8d2f\u3002  </p> </li> <li> <p>\u6838\u5fc3\u8d21\u732e\uff1a  </p> </li> <li>\u63d0\u51fa \u5c40\u90e8-\u5168\u5c40\uff08local-global\uff09\u65f6\u95f4\u4e00\u81f4\u6027\u7b56\u7565\uff1a  <ul> <li>\u5c40\u90e8\uff1a\u5728 U-Net \u4e0e VAE-Decoder \u4e2d\u52a0\u5165 3D \u5377\u79ef\u3001\u65f6\u95f4\u6ce8\u610f\u529b\u3002  </li> <li>\u5168\u5c40\uff1a\u63d0\u51fa \u8bad\u7ec3\u65e0\u5173\u7684\u5149\u6d41\u5f15\u5bfc\u6f5c\u7a7a\u95f4\u9012\u5f52\u4f20\u64ad\uff08flow-guided recurrent latent propagation\uff09\u3002  </li> </ul> </li> <li>\u5f15\u5165\u6587\u672c\u5f15\u5bfc\uff08text prompt\uff09\u4e0e\u566a\u58f0\u8c03\u8282\uff08noise level control\uff09\uff0c\u5728\u4fee\u590d\u4e0e\u751f\u6210\u4e4b\u95f4\u5b9e\u73b0\u5e73\u8861\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#2-related-work","title":"2. Related Work\uff08\u76f8\u5173\u5de5\u4f5c\uff09","text":"<ul> <li>Video Super-Resolution (VSR)\uff1a  </li> <li>CNN-based\uff08\u5982 EDVR\u3001BasicVSR++\uff09\uff1a\u5728\u77ed\u671f\u5185\u8868\u73b0\u597d\uff0c\u4f46\u751f\u6210\u7684\u7eb9\u7406\u5f80\u5f80\u8fc7\u4e8e\u5e73\u6ed1\u3002  </li> <li> <p>Real-world VSR\uff1a\u901a\u5e38\u4f9d\u8d56\u6570\u636e\u589e\u5f3a\u6216\u7279\u6b8a\u91c7\u96c6\u6570\u636e\uff0c\u6cdb\u5316\u6027\u4e0d\u8db3\u3002  </p> </li> <li> <p>Diffusion Models\uff1a  </p> </li> <li>\u57fa\u672c\u601d\u60f3\uff1a\u9010\u6b65\u52a0\u566a\u3001\u9010\u6b65\u53bb\u566a\u3002  </li> <li> <p>\u5728\u56fe\u50cf\u751f\u6210\u4e2d\u5df2\u5e7f\u6cdb\u5e94\u7528\uff08Stable Diffusion\uff09\uff0c\u4f46\u5728\u89c6\u9891\u4e2d\u9700\u8981\u89e3\u51b3\u8de8\u5e27\u4e00\u81f4\u6027\u3002  </p> </li> <li> <p>Diffusion for Restoration\uff1a  </p> </li> <li>\u4ece\u96f6\u8bad\u7ec3\uff08\u6602\u8d35\uff09\u6216\u57fa\u4e8e\u9884\u8bad\u7ec3\u6a21\u578b\uff08\u66f4\u9ad8\u6548\uff09\u3002  </li> <li>\u73b0\u6709\u6269\u6563\u65b9\u6cd5\u4ecd\u96be\u4ee5\u4fdd\u6301\u957f\u89c6\u9891\u7684\u4e00\u81f4\u6027\u3002  </li> </ul> <p>\u672c\u5de5\u4f5c\u5b9a\u4f4d\uff1a\u5728\u771f\u5b9e\u4e16\u754c VSR \u4e2d\uff0c\u9996\u6b21\u7cfb\u7edf\u6027\u7ed3\u5408\u6269\u6563\u6a21\u578b\u7684\u751f\u6210\u5148\u9a8c\u4e0e\u5c40\u90e8-\u5168\u5c40\u65f6\u95f4\u4e00\u81f4\u6027\u673a\u5236\u3002  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#3-methodology","title":"3. Methodology\uff08\u65b9\u6cd5\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#31","title":"3.1 \u9884\u5907\u77e5\u8bc6\uff1a\u6269\u6563\u6a21\u578b","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#1","title":"(1) \u6b63\u5411\u6269\u6563\uff08\u52a0\u566a\u8fc7\u7a0b\uff09","text":"<p>\u7ed9\u5b9a\u771f\u5b9e\u6837\u672c \\(z\\)\uff0c\u5728\u65f6\u95f4\u6b65 \\(t\\) \u52a0\u5165\u566a\u58f0\uff1a</p> \\[ z_t = \\alpha_t z + \\sigma_t \\epsilon, \\quad \\epsilon \\sim \\mathcal{N}(0, I) \\] <ul> <li>\\(\\alpha_t, \\sigma_t\\)\uff1a\u7531\u566a\u58f0\u8c03\u5ea6\uff08noise schedule\uff09\u63a7\u5236\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#2","title":"(2) \u53cd\u5411\u6269\u6563\uff08\u53bb\u566a\u8fc7\u7a0b\uff09","text":"<p>\u6a21\u578b\u5b66\u4e60\u5728\u6bcf\u4e00\u6b65\u4f30\u8ba1\u5e72\u51c0\u6837\u672c\uff1a</p> \\[ \\mathcal{L}_{\\text{LDM}} = \\mathbb{E}_{z, x, c, t, \\epsilon}\\left[ \\| v - f_\\theta(z_t, x_\\tau; c, t) \\|^2_2 \\right] \\tag{1} \\] <p>\u5176\u4e2d\uff1a - \\(f_\\theta\\)\uff1aU-Net \u53bb\u566a\u5668 - \\(v \\equiv \\alpha_t \\epsilon - \\sigma_t x\\) (v-prediction \u53c2\u6570\u5316) - \\(c\\)\uff1a\u6761\u4ef6\uff0c\u5305\u62ec\u6587\u672c prompt \u548c\u566a\u58f0\u6c34\u5e73  </p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#32-local-consistency","title":"3.2 \u5c40\u90e8\u4e00\u81f4\u6027\uff08Local Consistency\uff09","text":"<ul> <li>\u52a8\u673a\uff1a\u5355\u5e27 VAE \u89e3\u7801\u5668\u5728\u89c6\u9891\u4e2d\u4f1a\u4ea7\u751f\u95ea\u70c1\uff08flickering\uff09\u3002  </li> <li>\u65b9\u6cd5\uff1a  </li> <li> <p>Temporal U-Net </p> <ul> <li>\u5728\u539f\u59cb 2D \u5c42\u4e2d\u63d2\u5165 3D \u6b8b\u5dee\u5757\u548c temporal attention\u3002  </li> <li>\u4f7f\u7528 RoPE\uff08Rotary Position Embedding\uff09\u63d0\u4f9b\u65f6\u95f4\u4f4d\u7f6e\u4fe1\u606f\u3002  </li> <li>\u8bad\u7ec3\u65f6\u51bb\u7ed3\u7a7a\u95f4\u5c42\uff0c\u4ec5\u4f18\u5316\u65f6\u95f4\u5c42\uff0c\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002  </li> </ul> </li> <li> <p>Temporal VAE-Decoder </p> <ul> <li>VAE \u89e3\u7801\u5668\u539f\u672c\u662f\u9010\u5e27\u89e3\u7801 \u2192 \u5bb9\u6613\u4ea7\u751f\u989c\u8272\u6296\u52a8\u3002  </li> <li>\u6539\u8fdb\uff1a\u5728\u89e3\u7801\u5668\u4e2d\u52a0\u5165 3D \u6b8b\u5dee\u5757\uff0c\u5e76\u5f15\u5165 SFT\uff08Spatial Feature Transform\uff09 \u5c42\uff0c\u4ee5\u8f93\u5165\u89c6\u9891\u63d0\u4f9b\u4f4e\u9891\u4fe1\u606f\uff08\u989c\u8272\u3001\u5149\u7167\uff09\uff0c\u4fdd\u8bc1\u989c\u8272\u7a33\u5b9a\u6027\u3002  </li> <li>\u635f\u5931\u51fd\u6570\uff1a  </li> </ul> </li> </ul> \\[ \\mathcal{L}_{\\text{VAE}} = \\lambda_1 \\| y - \\hat{y} \\|_1 + \\lambda_2 \\text{LPIPS}(y, \\hat{y}) + \\lambda_3 \\mathcal{L}_{\\text{GAN}} \\]"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#33-global-consistency","title":"3.3 \u5168\u5c40\u4e00\u81f4\u6027\uff08Global Consistency\uff09","text":"<ul> <li> <p>\u52a8\u673a\uff1aU-Net \u548c VAE \u53ea\u80fd\u4fdd\u8bc1\u5c40\u90e8\u5e8f\u5217\uff08\u5982 8 \u5e27\uff09\u7684\u7a33\u5b9a\u6027\uff0c\u957f\u89c6\u9891\u4ecd\u7136\u4f1a\u6709\u8df3\u53d8\u3002  </p> </li> <li> <p>\u65b9\u6cd5\uff1a\u63d0\u51fa \u8bad\u7ec3\u65e0\u5173\u7684\u6f5c\u7a7a\u95f4\u9012\u5f52\u4f20\u64ad\uff08Recurrent Latent Propagation\uff09 </p> </li> <li>\u4f7f\u7528 RAFT \u5149\u6d41 \u8ba1\u7b97\u524d\u540e\u5e27\u7684\u50cf\u7d20\u6d41\u3002  </li> <li> <p>\u68c0\u67e5\u524d\u5411-\u540e\u5411\u4e00\u81f4\u6027\u8bef\u5dee\uff1a  </p> \\[ E_{i-1 \\to i}(p) = \\| f_{i-1 \\to i}(p) + f_{i \\to i-1}(p + f_{i-1 \\to i}(p)) \\|^2_2 \\tag{2} \\] <p>\u82e5\u8bef\u5dee\u5c0f \u2192 \u8bf4\u660e\u5149\u6d41\u6709\u6548\uff0c\u5141\u8bb8\u4f20\u64ad\uff1b\u5426\u5219\u4e22\u5f03\u3002  </p> </li> <li> <p>\u6f5c\u7a7a\u95f4\u66f4\u65b0\uff1a  </p> \\[ \\tilde{z}^i_0 = \\Big[ W(\\tilde{z}^{i-1}_0, f_{i \\to i-1}) \\cdot \\beta + \\hat{z}^i_0 \\cdot (1 - \\beta) \\Big] \\cdot M + \\hat{z}^i_0 \\cdot (1-M) \\tag{3} \\] </li> <li> <p>\\(W(\\cdot)\\)\uff1awarp \u64cd\u4f5c  </p> </li> <li>\\(\\beta\\)\uff1a\u878d\u5408\u6743\u91cd  </li> <li>\\(M\\)\uff1a\u7531\u8bef\u5dee\u9608\u503c \\(\\delta\\) \u5f97\u5230\u7684\u63a9\u7801  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#34","title":"3.4 \u63a8\u7406\u65f6\u7684\u53ef\u63a7\u6761\u4ef6","text":"<ol> <li>\u6587\u672c Prompt\uff1a\u53ef\u5f15\u5bfc\u7eb9\u7406\u751f\u6210\uff08\u5982\u201c\u72ee\u5b50\u9b03\u6bdb\u201d\u3001\u201c\u6cb9\u753b\u98ce\u683c\u201d\uff09\u3002  </li> <li>\u566a\u58f0\u6c34\u5e73 \\(\\tau\\)\uff1a  </li> <li>\u5c0f\u566a\u58f0 \u2192 \u504f\u5411\u6062\u590d\uff08restoration\uff09\u3002  </li> <li>\u5927\u566a\u58f0 \u2192 \u504f\u5411\u751f\u6210\uff08generation\uff09\uff0c\u7ec6\u8282\u66f4\u9510\u5229\u3002  </li> <li>Classifier-Free Guidance (CFG)\uff1a\u589e\u5f3a prompt \u4e0e\u566a\u58f0\u7684\u63a7\u5236\u6548\u679c\u3002  </li> </ol>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#4-experiments","title":"4. Experiments\uff08\u5b9e\u9a8c\uff09","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#41","title":"4.1 \u6570\u636e\u96c6\u4e0e\u5b9e\u73b0","text":"<ul> <li>\u8bad\u7ec3\u96c6\uff1a  </li> <li>WebVid10M \u5b50\u96c6\uff0833.5 \u4e07\u89c6\u9891-\u6587\u672c\u5bf9\uff09  </li> <li>\u65b0\u91c7\u96c6\u7684 YouHQ \u6570\u636e\u96c6\uff083.7 \u4e07\u9ad8\u6e05\u89c6\u9891\uff0c1080\u00d71920\uff0c\u5305\u542b\u8857\u666f\u3001\u52a8\u7269\u3001\u4eba\u8138\u3001\u6c34\u4e0b\u3001\u591c\u666f\u7b49\uff09  </li> <li>\u6d4b\u8bd5\u96c6\uff1a  </li> <li>\u5408\u6210\uff1aSPMCS, UDM10, REDS30, YouHQ40  </li> <li>\u771f\u5b9e\uff1aVideoLQ  </li> <li>AIGC\uff1aAIGC30\uff08\u6765\u81ea text-to-video \u751f\u6210\u6a21\u578b\uff09  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#42","title":"4.2 \u5bf9\u6bd4\u7ed3\u679c","text":"<ul> <li>\u6307\u6807\uff1a  </li> <li>\u6709 GT \u2192 PSNR, SSIM, LPIPS, E*warp\uff08\u5149\u6d41\u8bef\u5dee\uff09  </li> <li>\u65e0 GT \u2192 CLIP-IQA, MUSIQ, DOVER  </li> <li>\u7ed3\u8bba\uff1a  </li> <li>Upscale-A-Video \u5728\u6240\u6709\u5408\u6210\u4e0e\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u53d6\u5f97\u6700\u4f18\u6216\u6b21\u4f18\u3002  </li> <li>\u7279\u522b\u5728\u65f6\u95f4\u4e00\u81f4\u6027\uff08E*warp\uff09\u4e0a\u4f18\u4e8e RealBasicVSR\u3001StableSR \u7b49\u5f3a\u57fa\u7ebf\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#43","title":"4.3 \u6d88\u878d\u5b9e\u9a8c","text":"<ul> <li>VAE-Decoder finetune\uff1a\u663e\u8457\u51cf\u5c11\u95ea\u70c1\uff0c\u63d0\u9ad8\u4e00\u81f4\u6027\u3002  </li> <li>Propagation \u6a21\u5757\uff1a\u8fdb\u4e00\u6b65\u6539\u5584\u957f\u89c6\u9891\u7a33\u5b9a\u6027\u3002  </li> <li>Prompt / Noise level\uff1a\u53ef\u63a7\u6027\u5f3a\uff0c\u80fd\u5728 fidelity \u4e0e realism \u4e4b\u95f4\u8c03\u8282\u3002  </li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Diffusion/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/Upscale-A-Video%2C%20Temporal-Consistent%20Diffusion%20Model%20for%20Real-World%20Video%20Super-Resolution/#5-conclusion","title":"5. Conclusion\uff08\u7ed3\u8bba\uff09","text":"<ul> <li>\u63d0\u51fa Upscale-A-Video\uff1a\u7ed3\u5408 \u6269\u6563\u6a21\u578b\u751f\u6210\u5148\u9a8c \u4e0e \u5c40\u90e8-\u5168\u5c40\u4e00\u81f4\u6027\u7b56\u7565\uff0c\u5b9e\u73b0\u771f\u5b9e\u4e16\u754c\u89c6\u9891\u8d85\u5206\u8fa8\u7387\u3002  </li> <li>\u521b\u65b0\u70b9\uff1a  </li> <li>\u5c40\u90e8\u4e00\u81f4\u6027\uff1aTemporal U-Net + Temporal VAE-Decoder  </li> <li>\u5168\u5c40\u4e00\u81f4\u6027\uff1a\u8bad\u7ec3\u65e0\u5173\u7684\u5149\u6d41\u5f15\u5bfc\u6f5c\u7a7a\u95f4\u4f20\u64ad  </li> <li>\u53ef\u63a7\u6027\uff1aPrompt + Noise level  </li> <li>\u5728\u771f\u5b9e\u4e0e AIGC \u89c6\u9891\u4e0a\u5747\u8868\u73b0\u51fa SOTA \u7684\u6548\u679c\u3002  </li> </ul>"},{"location":"notices/archive/2025/","title":"2025","text":""},{"location":"notices/category/%E6%8C%87%E5%8D%97/","title":"#\u6307\u5357","text":""},{"location":"notices/category/%E8%A7%84%E8%8C%83/","title":"#\u89c4\u8303","text":""}]}