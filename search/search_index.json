{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Abies's Notebook ~","text":"<ul> <li> <p>\u5feb\u901f\u5bfc\u822a</p> <ul> <li>Notebook\u7684\u4ecb\u7ecd </li> <li>Git\u81ea\u5b66\u7b14\u8bb0</li> <li>\u539f\u751f\u7248fds\u7b14\u8bb0</li> <li>\u539f\u751f\u7248C\u7a0b\u7b14\u8bb0</li> </ul> </li> </ul> <p>   \u603b\u8bbf\u95ee\u91cf\uff1a \u6b21 </p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2001%20Overview%20of%20Computer%20Graphics/","title":"Lecture 01 Overview of Computer Graphics","text":"<p>Menu of this lecture</p> <ul> <li>Concepts of raterization, ray tracing etc.</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2001%20Overview%20of%20Computer%20Graphics/#basic-concepts","title":"Basic Concepts","text":"<p>Rasterization</p> <ol> <li>Project geometry primitives (3D triangles / polygons) onto the screen.</li> <li>Break projected primitives into fragments (pixels)</li> <li>Real-time applications is the gold standard in Video Games</li> </ol> translation <ol> <li>\u5c06\u51e0\u4f55\u5f62\u72b6\uff083D \u4e09\u89d2\u5f62/\u591a\u8fb9\u5f62\uff09\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a</li> <li>\u5c06\u6295\u5f71\u540e\u7684\u56fe\u5143\u5212\u5206\u4e3a\u7247\u6bb5\uff08\u50cf\u7d20\uff09</li> <li>\u5728\u89c6\u9891\u6e38\u620f\u4e2d\uff0c\u5b9e\u65f6\u5e94\u7528\u662f\u9ec4\u91d1\u6807\u51c6</li> </ol> <p>Curves and Meshes</p> <p>Ray Tracing</p> <p>Shoot rays from camera through each pixel Offline application is the gold standard in Animation / Movies</p> <p>Animation / Simulation</p> <p>Difference between Computer Graphics and Computer Vision?</p> <p></p> <p>Click here to jump to the course website</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2002%20Review%20of%20Linear%20Algebra/","title":"Lecture 02 Review of Linear Algebra","text":"<p>Menu of this lecture</p> <ul> <li>Functions of dot product and cross product</li> <li>Dot product and cross product in matrix</li> </ul> <p>Unit vector: \\(\\hat{a}=\\vec{a}/|\\vec{a}|\\) Usually use unit vectors to present directions.</p> <p>Vectors are represented as column vectors by default.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2002%20Review%20of%20Linear%20Algebra/#functions-of-dot-product-and-cross-product","title":"Functions of dot product and cross product","text":"<p>Dot product:</p> <ol> <li>Find the angle between two vectors.    e.g cosine of angle bwtween light source and surface.</li> <li>Find projection of one vector on another.</li> </ol> <p>More specifically:</p> <ol> <li>Measure how close two directions are.</li> <li>Decompose a vector.</li> <li>Determine forward / backward.</li> </ol> <p>Cross product:</p> <ol> <li>Construction coordinate systems.</li> </ol> <p>Functions:</p> <ol> <li>Determine left / right. Given a plane and two vectors on this plane, determine the relative position of the two vectors.</li> <li>Determine in / out. Several vectors are connected head-to-tail to form a closed shape. Given another point, determine whether this point lies inside the closed shape.</li> </ol> <p>e.g.  Check: \\(\\vec{AB}\\times\\vec{AP}, \\vec{BC}\\times\\vec{BP}, \\vec{CA}\\times\\vec{CP}\\). If the signs of all three are the same, then point P is inside the shape.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2002%20Review%20of%20Linear%20Algebra/#dot-product-and-cross-product-in-matrix","title":"Dot product and cross product in matrix:","text":"<p>2D reflection about y-axis:</p> \\[ \\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix}= \\begin{pmatrix} -x \\\\ y \\end{pmatrix} \\] matrix in latex Text Only<pre><code>\\begin{pmatrix}\na &amp; b \\\\\nc &amp; d\n\\end{pmatrix}\n</code></pre> <p>Rendered output:</p> \\[ \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\] \\[ \\vec{a}\\cdot\\vec{b}=A^T\\cdot B =\\begin{pmatrix} x_a &amp; y_a &amp; z_a \\end{pmatrix} \\begin{pmatrix} x_b \\\\ y_b \\\\ z_b \\end{pmatrix} \\] \\[ \\vec{a}\\times\\vec{b}=A^*B =\\begin{pmatrix}  0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}  \\begin{pmatrix}  x_b \\\\ y_b \\\\ z_b  \\end{pmatrix} \\] <p>(\\(\\begin{pmatrix}   0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}\\) is the dual matrix of \\(\\vec{a}\\))</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/","title":"Lecture 03 Transformation","text":"<p>Menu of this lecture</p> <ul> <li>2D transformations: rotation, scale, shear</li> <li>Homogeneous coordinates</li> <li>Composing transformation</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/#viewing-transformation","title":"Viewing transformation","text":"<p>Viewing transformation: 3D -&gt; 2D projection</p> <p>Scale</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} s_x &amp; 0 \\\\ 0 &amp; s_y \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Multiplying a matrix on the left corresponds to performing a row operation.</p> <p>Reflection</p> <p>E.g. reflection about the y-axis:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Sheer</p> <p>Illustration of sheer tranformation: </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} x+ay \\\\ y \\end{pmatrix} =\\begin{pmatrix} 1 &amp; a \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Rotation</p> <p>By default, the rotation is around the origin. \\(R_{45}\\) refers to rotatiing 45 degrees counterclockwose about the origin. </p> \\[ R_{\\theta}=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\ \\sin\\theta &amp; \\cos\\theta \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/#homogeneous-coordinates","title":"Homogeneous Coordinates","text":"<p>Translation is not linear transform, so it cannot be represented in matrix form.  But we don't want it to be a special case, so homogeneous coordinates are used to represent all transformations. </p> <p>Add a third coordinate (w-coordinate), to represent the translation characters of points or vectors.  </p> <p>Affine transformations: affine map = linear map + translation map  </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} +\\begin{pmatrix} t_x \\\\ t_y \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/#2d-version","title":"2D version","text":"<ul> <li>2D point: \\(\\begin{pmatrix}x , y , 1 \\end{pmatrix}^T\\)</li> <li>2D vector:\\(\\begin{pmatrix}x , y , 0 \\end{pmatrix}^T\\)</li> </ul> <p>When \\(w\\neq 0\\), 2D point \\(\\begin{pmatrix}x , y , w \\end{pmatrix}^T\\) means \\(\\begin{pmatrix}x/w , y/w , 1 \\end{pmatrix}^T\\)</p> <p>(The w-coordinate of vectors are 0, which means vectors are translation invariant. By comparison, w-coordinate of points are 1)</p> <p>Use homogeneous Coordinates to represent affine translations:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\\\ w' \\end{pmatrix} =\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ 1 \\end{pmatrix} =\\begin{pmatrix} x+t_x \\\\ y+t_y \\\\ 1 \\end{pmatrix} \\] <p>Properties:  1. The last row must be 0 0 1. 2. The top-left 2\u00d72 matrix represents a linear transformation. 3. The rightmost column represents translation. 4. Relations between points and vectors:    - vector + vector = vector    - point  - point  = vector    - point  + vector = point    - point  + point  = point</p> <p>Scale:</p> \\[ S(s_x, s_y)=\\begin{pmatrix} s_x &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Rotation:</p> \\[ R(\\alpha)=\\begin{pmatrix} \\cos\\alpha &amp; -\\sin\\alpha &amp; 0 \\\\ \\sin\\alpha &amp; \\cos\\alpha &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y)=\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\  0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Inverse transformations: \\(M^{-1}\\)</p> <p>Esp. matrix \\(R_{\\theta}\\) for rotation is orthogonal, so \\(R_{-\\theta}=R^{-1}=R^T\\).</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/#3d-version","title":"3D version","text":"<ul> <li>3D point: \\(\\begin{pmatrix}x , y , z, 1 \\end{pmatrix}^T\\)</li> <li>3D vector:\\(\\begin{pmatrix}x , y , z, 0 \\end{pmatrix}^T\\)</li> </ul> <p>Use 4\u00d74 matrix for affine transformations. </p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2003%20Transformation/#composing-transforms","title":"Composing Transforms","text":"<p>All matrices are left-multiplied to the original coordinates, and are composed in the order of transformations from right to left.</p> <p>Examples</p> <p>Transformations: A1 -&gt; A2 -&gt; ... -&gt; An Matrix: \\(A_n\\cdots A_2A_1\\begin{pmatrix}x \\\\ y \\\\ 1\\end{pmatrix}\\)</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/","title":"Lecture 04 Transformations Cont.","text":"<p>Menu of this lecture</p> <ul> <li>3D transformations</li> <li>Viewing transformations</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#3d-transformations","title":"3D Transformations","text":"<p>Scale:</p> \\[ S(s_x, s_y, s_z)= \\begin{pmatrix} s_x &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; s_z &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y, t_z)= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; 0 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#3d-rotations","title":"3D Rotations","text":""},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#compose-from-r_x-r_y-r_z","title":"Compose from \\(R_x, R_y, R_z\\)","text":"\\[ R_x(\\theta)=\\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos\\theta &amp; -\\sin\\theta &amp; 0 \\\\ 0 &amp; \\sin\\theta &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] \\[ R_y(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; 0 &amp; \\sin\\theta &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ -\\sin\\theta &amp; 0 &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>The rotation part of \\(R_y(\\theta)\\) is different from common rotation matrix, because \\(\\vec{y}=\\vec{z}\\times\\vec{x}\\), which is not the common sequence xyzxyz.</p> \\[ R_z(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta &amp; 0 &amp; 0 \\\\ \\sin\\theta &amp; \\cos\\theta &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>When rotating around x-, y-, and z- axis with angle \\(\\alpha, \\beta, \\gamma\\) respectively (\\(\\alpha, \\beta, \\gamma\\) are called Euler angles), </p> \\[ R_{xyz}(\\alpha, \\beta, \\gamma)=R_x(\\alpha)R_y(\\beta)R_z(\\gamma) \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#rodrigues-rotation-formation","title":"Rodrigues' Rotation Formation","text":"<p>Rotation by angle \\(\\alpha\\) around axis n,</p> \\[ R(n, \\alpha)=\\cos(\\alpha)I+(1-\\cos(\\alpha))n n^T+\\sin(\\alpha)\\begin{pmatrix} 0 &amp; -n_z &amp; n_y \\\\ n_z &amp; 0 &amp; -n_x \\\\ -n_y &amp; n_x &amp; 0 \\end{pmatrix} \\] <p>If the axis of rotation does not pass through the origin, first translate the entire system so that the axis passes through the origin, perform the rotation, and then translate the entire system back to its original position.</p> <p>Quaternions can be used for interpolation between rotation angles.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#viewing-transformations","title":"Viewing transformations","text":"<p>MVP Transformations:</p> <ol> <li>Model transformations (arrange objects and places)</li> <li>View transformations (arrange angles)</li> <li>Projection transformations</li> </ol>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#define-camera","title":"Define camera","text":"<ul> <li>position: \\(\\hat{e}\\) (points from the origin to the camera)</li> <li>look-at / gaze direction: \\(\\hat{g}\\) (points from the camera to the object)</li> <li>up direction: \\(\\hat{t}\\)</li> </ul> <p>Usually we transform the camera to the origin, up at Y, look at -Z. And transform the objects along with the camera.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#transform-the-camera-mv-transformation","title":"Transform the camera (MV transformation)","text":"<p>Steps:</p> <ol> <li>Translate e to origin (\\(T_{view}\\))</li> <li>Rotate g to -Z, t to Y, (g, x, t) to x (\\(R_{view}\\))</li> </ol> <p>\\(T_{view}\\):</p> \\[ T_{view}= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -x_e \\\\ 0 &amp; 1 &amp; 0 &amp; -y_e \\\\ 0 &amp; 0 &amp; 1 &amp; -z_e \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\\(R_{view}\\): Consider its inverse rotation (X to (g, x, t), Y to t, Z to -g).</p> <p>comment</p> <p>Both the direction and order of rotation must be reversed.</p> \\[ R_{view}^{-1}=\\begin{pmatrix} x_{\\hat{g}\\times\\hat{t}} &amp; x_t &amp; x_{-g} &amp; 0 \\\\ y_{\\hat{g}\\times\\hat{t}} &amp; y_t &amp; y_{-g} &amp; 0 \\\\ z_{\\hat{g}\\times\\hat{t}} &amp; z_t &amp; z_{-g} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Since \\(R_{view}\\) is orthoganal, </p> \\[R_{view}=(R_{view}^{-1})^T\\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#projection-transformation","title":"Projection transformation","text":"<p>Two 3D -&gt; 2D types:</p> <ol> <li>orthographic projection  </li> <li>perspective projection</li> </ol>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#orthographic-projection","title":"Orthographic projection","text":"<p>Consider a cuboid \\([l,r]\\times[b,t]\\times[f,n]\\), map it to the canonical cube \\([-1,1]^3\\), and drop Z coordinate to project.</p> Why we just need to drop Z coordinate? <p>In the \"Define camera\" part, we define the camera located at the origin, up at Y, look at -Z.</p> \\[ M_{ortho} = \\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\frac{r + l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t + b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n + f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2004%20Transformations%20Cont/#perspective-projection","title":"Perspective projection","text":"<p>Illustration:</p> <p></p> <p>Steps: 1. Squish the frustum into a cuboid, all points on the near plane remain unchanged, all points on the far plane undergo in-plane contraction, with the center point of the far plane remaining fixed. 2. Do orthographic projection.</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; n &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; n+f &amp; -nf\\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{pmatrix} \\] Derivation <p>Squish illustration: </p> \\[ M_{persp\\to ortho}\\begin{pmatrix}x\\\\y\\\\z\\\\1\\end{pmatrix} =\\begin{pmatrix}nx/z\\\\ny/z\\\\?\\\\1\\end{pmatrix} =\\begin{pmatrix}nx\\\\ny\\\\?\\\\z\\end{pmatrix} \\] <p>thus,</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n&amp;0&amp;0&amp;0\\\\ 0&amp;n&amp;0&amp;0\\\\ A&amp;B&amp;C&amp;D\\\\ 0&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>According to the properties of squishing, consider a point on the near plane and the middle point on the far plane to solve the third row.</p> <ol> <li>\\((x,y,n,1)\\to(x,y,n,1)=(nx,ny,n^2,n)\\) \\(n^2\\) is unrelated to x and y, thus \\(A=B=0, Cn+D=n^2\\) </li> <li>\\((0,0,f,1)\\to(0,0,f,1)=(0,0,f^2,f)\\) \\(Cf+D=f^2\\)</li> </ol> <p>Solve the equations above:</p> \\[C=n+f, D=-nf\\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2005%20Rasterization%201%20%28Triangles%29/","title":"Lecture 05 Rasterization 1 (Triangles)","text":"<p>Menu of this lecture</p> <ul> <li>Some basic concepts</li> <li>Rasterization process</li> <li>Different raster displays</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2005%20Rasterization%201%20%28Triangles%29/#some-basic-concepts","title":"Some basic concepts","text":"<ol> <li>Aspect radio: width / height</li> <li>Field of view</li> <li>Screen: an array of pixels</li> <li>Resolution: size of the array</li> <li>Rasterize: drawing onto the screen</li> <li>Pixel: (for now, ) a little square with uniform color</li> </ol> <p>\u4e0d\u60f3\u6253\u5b57\u4e86\uff0c\u5f85\u8865\u5145</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/","title":"Lecture 06 Rasterization 2 (Antiliasing)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 698 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>Menu of this lecture</p> <ul> <li>Concepts</li> <li>Frequency Domain</li> <li>Filtering</li> <li>Convolution</li> <li>Sampling</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#concepts","title":"Concepts","text":"<p>Photograph: sample space Video: sample time</p> <p>Artifact: errors/mistakes/inaccuracies in CG e.g. jaggies, Moire patterns, Wagon wheel effect... Reason: signals are changing too fast, but sampled too slowly.</p> <p>Antialiasing idea: blurring (pre-filtering) before sampleing \u53cd\u8d70\u6837\u7684\u601d\u60f3\uff1a\u5728\u91c7\u6837\u4e4b\u524d\u505a\u6a21\u7cca\uff08\u6ee4\u6ce2\uff09  </p> Antialiasing and Blurred Aliasing <ul> <li>Anitialiasing: filter then sample</li> <li>Blurred Aliasing: sample then filter</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#frequency-domain","title":"Frequency Domain","text":"<p>Frequencies: \\(\\cos 2\\pi fx\\), \\(f=\\frac{1}{T}\\) Fourier transform decomposes a signal into frequencies.</p> <p></p> <p>Why frequency leads to aliasing? Higher frequencies need faster sampling. Otherwise, the reconstruction will be inaccurate. It will appear to be a lower-frequency signal. Two frequencies that are indistinguishable at a given sampling are called \"aliases\".</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#filtering","title":"Filtering","text":"<p>Filtering(\u6ee4\u6ce2): Getting rid of certain frequency contents.</p> <p></p> <p>\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u56fe\u50cf\u4ece\u65f6\u57df\u53d8\u4e3a\u9891\u57df\uff0c\u5373\u5c06\u6bcf\u4e2a\u70b9\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u4e0d\u540c\u9891\u7387\u7684\u4fe1\u606f\u3002 \u53f3\u8fb9\u56fe\u50cf\uff08\u9891\u8c31\uff09\u7684\u4e2d\u5fc3\u5b9a\u4e49\u4e3a\u4f4e\u9891\u9891\u7387\uff0c\u5468\u56f4\u5b9a\u4e49\u4e3a\u9ad8\u9891\u9891\u7387\uff0c\u4ece\u4e2d\u5fc3\u5230\u5468\u56f4\u9891\u7387\u9012\u589e\u3002\u7528\u56fe\u7247\u7684\u4eae\u5ea6\u8868\u793a\u4e0d\u540c\u9891\u7387\u4e0a\u4fe1\u606f\u7684\u91cf\u3002 \u81ea\u7136\u4e0b\u56fe\u7247\u4fe1\u606f\u57fa\u672c\u51e0\u79cd\u5728\u4f4e\u9891\u533a\u57df\u3002 \u6c34\u5e73\u548c\u7ad6\u76f4\u6709\u9ad8\u4eae\u5ea6\u7684\u5341\u5b57\u7ebf\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u65f6\u8ba4\u4e3a\u56fe\u7247\u5468\u671f\u6027\u91cd\u590d\uff0c\u5230\u8fbe\u4e00\u4e2a\u8fb9\u754c\u540e\u91cd\u590d\u76f8\u5bf9\u8fb9\u754c\u7684\u5185\u5bb9\u3002\u4ea4\u754c\u5904\u56fe\u7247\u5267\u70c8\u53d8\u5316\uff0c\u4ea7\u751f\u6781\u9ad8\u7684\u9ad8\u9891\u4fe1\u53f7\u3002</p> <p></p> <p>\u9ad8\u901a\u6ee4\u6ce2\uff08High-pass filter\uff09\uff1a\u53bb\u9664\u4f4e\u9891\u9891\u7387\uff0c\u4fdd\u7559\u9ad8\u9891\u9891\u7387\uff0c\u5bf9\u5e94\u4fdd\u7559\u56fe\u50cf\u7684\u8fb9\u754c\u3002 \u4e3a\u4ec0\u4e48\u4fdd\u7559\u8fb9\u754c\uff1f\u8fb9\u754c\u5904\u56fe\u50cf\u53d8\u5316\u5267\u70c8\uff0c\u9ad8\u9891\u4fe1\u53f7\u4fe1\u606f\u5927\u3002</p> <p></p> <p>\u4f4e\u901a\u6ee4\u6ce2\uff08low-pass filter\uff09\uff1a\u4fdd\u7559\u4f4e\u9891\u9891\u7387\uff0c\u53bb\u9664\u9ad8\u9891\u9891\u7387\uff0c\u5bf9\u5e94\u56fe\u50cf\u53d8\u6a21\u7cca\u3002</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#convolution","title":"Convolution","text":"<p>Filtering=Convolution=Averaging</p> <p>\u5377\u79ef\uff1a\u5728\u79fb\u52a8\u7a97\u53e3\u65f6\u5c06\u7a97\u53e3\u7684\u6570\u548c\u8986\u76d6\u7684\u4fe1\u53f7\u503c\u70b9\u4e58\uff0c\u5728\u4efb\u610f\u4f4d\u7f6e\u548c\u5468\u56f4\u7684\u6570\u505a\u52a0\u6743\u5e73\u5747\u3002 \u5b9a\u7406\uff1a\u65f6\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff0c\u5bf9\u5e94\u4e8e\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u4e58\u79ef\u3002\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff0c\u5bf9\u5e94\u4e8e\u65f6\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u4e58\u79ef\u3002  </p> <p>\u5377\u79ef\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u76f4\u63a5\u5728\u65f6\u57df\u4e0a\u70b9\u4e58</li> <li>\u53d8\u6362\u5230\u9891\u57df\u4e0a\uff0c\u5728\u9891\u57df\u4e0a\u4e58\u79ef\uff0c\u518d\u9006\u53d8\u6362\u4f1a\u65f6\u57df</li> </ol> <p>\u5377\u79ef\u6838\uff1a\u6240\u6709\u7cfb\u6570\u548c\u4e3a1\u3002 \u9891\u8c31\u7684\u4e58\u79ef\u76f8\u5f53\u4e8e\u7559\u4e0b\u5377\u79ef\u6838\u9891\u8c31\u4e2d\u6709\u4fe1\u606f\u7684\u90e8\u5206\u3002 \u5377\u79ef\u6838\u8d8a\u5927\uff0c\u9891\u8c31\u4e0a\u56fe\u50cf\u8d8a\u5c0f\u3002</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/Lecture%2006%20Rasterization%202%20%28Antiliasing%29/#sampling","title":"Sampling","text":"<p>Sampling=repeating frequency contents</p> <p>\u51b2\u6fc0\u51fd\u6570\uff1a\u6a21\u62df\u5355\u4f4d\u8109\u51b2\uff0c\u53ea\u5728\u4e00\u7cfb\u5217\u5468\u671f\u6027\u7684\u70b9\u4e0a\u6709\u503c\uff0c\u5176\u4f59\u70b9\u4e3a\u96f6\u3002\u51b2\u6fc0\u51fd\u6570\u8f6c\u5316\u5230\u9891\u57df\u540e\u4ecd\u4e3a\u51b2\u6fc0\u51fd\u6570\u3002 \u539f\u4fe1\u53f7\u548c\u51b2\u6fc0\u51fd\u6570\u76f8\u4e58\uff08\u6216\u9891\u57df\u4e0a\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\uff09\uff0c\u5f97\u5230\u91c7\u6837\u540e\u4fe1\u53f7\u3002  </p> <p>\u91c7\u6837\u662f\u91cd\u590d\u539f\u59cb\u4fe1\u53f7\u7684\u9891\u8c31\u3002 \u91c7\u6837\u95f4\u9694\u5f71\u54cd\u539f\u59cb\u4fe1\u53f7\u590d\u5236\u7684\u95f4\u9694\u3002 \u91c7\u6837\u7387\u4e0d\u8db3\uff0c\u91c7\u6837\u95f4\u9694\u5927\uff0c\u539f\u59cb\u4fe1\u53f7\u9891\u8c31\u590d\u5236\u7684\u95f4\u9694\u5c0f\uff0c\u590d\u5236\u642c\u79fb\u65f6\u9891\u8c31\u90e8\u5206\u6df7\u5408\uff0c\u53d1\u751f\u8d70\u6837\u3002</p> <p>\u51cf\u5c0f\u8d70\u6837\u9519\u8bef\uff1a 1. \u63d0\u9ad8\u91c7\u6837\u9891\u7387 2. \u53cd\u8d70\u6837\uff1a\u5148\u53bb\u9664\u9ad8\u9891\u4fe1\u53f7\uff0c\u518d\u91c7\u6837</p> <p>\u53bb\u9664\u9ad8\u9891\u4fe1\u53f7\u540e\uff0c\u6bcf\u4e2a\u5468\u671f\u4e24\u4fa7\u7684\u9891\u7387\u5f3a\u5ea6\u4e3a\u96f6\uff0c\u5728\u7a00\u758f\u91c7\u6837\u642c\u79fb\u95f4\u9694\u5c0f\u7684\u60c5\u51b5\u4e0b\u4e0d\u4ea7\u751f\u91cd\u53e0\u90e8\u5206\u3002</p> <p>Antialiasing by averaging values in pixel area: 1. Convolve f(x,y) by a 1-pixel box-blur 2. Then sample at every pixel's center</p> <p>f(x,y)=inside(triangle,x,y) is equal to the area of the pixel covered by the triangles. </p> <p>\u8ba1\u7b97\u50cf\u7d20\u88ab\u8986\u76d6\u7684\u9762\u79ef\uff1f Multisample Antialiasing(MSAA)\uff1a\u7528\u66f4\u591a\u91c7\u6837\u70b9\u8fdb\u884c\u53cd\u8d70\u6837\u6a21\u7cca\u7684\u8fd1\u4f3c   \u5c06\u50cf\u7d20\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u50cf\u7d20   MAAA\u89e3\u51b3\u201c\u6a21\u7cca\u201d\u7684\u64cd\u4f5c\uff0c\u6ca1\u6709\u6539\u53d8\u5c4f\u5e55\u7684\u50cf\u7d20\u503c\uff0c\u6ca1\u6709\u63d0\u9ad8\u5206\u8fa8\u7387\u3002  </p> <p>\u5176\u4ed6\u6297\u952f\u9f7f\u7684\u65b9\u6cd5\uff1aFXAA\uff0cTAA \u8d85\u5206\u8fa8\u7387\uff1a\u9632\u6b62\u56fe\u7247\u653e\u5927\u540e\u51fa\u73b0\u952f\u9f7f\uff0cDLSS</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/","title":"Lecture 01 / Overview of Computer Graphics","text":"<p>Menu of this lecture</p> <ul> <li>Concepts of raterization, ray tracing etc.</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#basic-concepts","title":"Basic Concepts","text":"<p>Rasterization</p> <ol> <li>Project geometry primitives (3D triangles / polygons) onto the screen.</li> <li>Break projected primitives into fragments (pixels)</li> <li>Real-time applications is the gold standard in Video Games</li> </ol> translation <ol> <li>\u5c06\u51e0\u4f55\u5f62\u72b6\uff083D \u4e09\u89d2\u5f62/\u591a\u8fb9\u5f62\uff09\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a</li> <li>\u5c06\u6295\u5f71\u540e\u7684\u56fe\u5143\u5212\u5206\u4e3a\u7247\u6bb5\uff08\u50cf\u7d20\uff09</li> <li>\u5728\u89c6\u9891\u6e38\u620f\u4e2d\uff0c\u5b9e\u65f6\u5e94\u7528\u662f\u9ec4\u91d1\u6807\u51c6</li> </ol> <p>Curves and Meshes</p> <p>Ray Tracing</p> <p>Shoot rays from camera through each pixel Offline application is the gold standard in Animation / Movies</p> <p>Animation / Simulation</p> <p>Difference between Computer Graphics and Computer Vision?</p> <p></p> <p>Click here to jump to the course website</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#lecture-02-review-of-linear-algebra","title":"Lecture 02 / Review of Linear Algebra","text":"<p>Menu of this lecture</p> <ul> <li>Functions of dot product and cross product</li> <li>Dot product and cross product in matrix</li> </ul> <p>Unit vector: \\(\\hat{a}=\\vec{a}/|\\vec{a}|\\) Usually use unit vectors to present directions.</p> <p>Vectors are represented as column vectors by default.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#functions-of-dot-product-and-cross-product","title":"Functions of dot product and cross product","text":"<p>Dot product:</p> <ol> <li>Find the angle between two vectors.    e.g cosine of angle bwtween light source and surface.</li> <li>Find projection of one vector on another.</li> </ol> <p>More specifically:</p> <ol> <li>Measure how close two directions are.</li> <li>Decompose a vector.</li> <li>Determine forward / backward.</li> </ol> <p>Cross product:</p> <ol> <li>Construction coordinate systems.</li> </ol> <p>Functions:</p> <ol> <li>Determine left / right. Given a plane and two vectors on this plane, determine the relative position of the two vectors.</li> <li>Determine in / out. Several vectors are connected head-to-tail to form a closed shape. Given another point, determine whether this point lies inside the closed shape.</li> </ol> <p>e.g.  Check: \\(\\vec{AB}\\times\\vec{AP}, \\vec{BC}\\times\\vec{BP}, \\vec{CA}\\times\\vec{CP}\\). If the signs of all three are the same, then point P is inside the shape.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#dot-product-and-cross-product-in-matrix","title":"Dot product and cross product in matrix:","text":"<p>2D reflection about y-axis:</p> \\[ \\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix}= \\begin{pmatrix} -x \\\\ y \\end{pmatrix} \\] matrix in latex Text Only<pre><code>\\begin{pmatrix}\na &amp; b \\\\\nc &amp; d\n\\end{pmatrix}\n</code></pre> <p>Rendered output:</p> \\[ \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\] \\[ \\vec{a}\\cdot\\vec{b}=A^T\\cdot B =\\begin{pmatrix} x_a &amp; y_a &amp; z_a \\end{pmatrix} \\begin{pmatrix} x_b \\\\ y_b \\\\ z_b \\end{pmatrix} \\] \\[ \\vec{a}\\times\\vec{b}=A^*B =\\begin{pmatrix}  0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}  \\begin{pmatrix}  x_b \\\\ y_b \\\\ z_b  \\end{pmatrix} \\] <p>(\\(\\begin{pmatrix}   0 &amp; -z_a &amp; y_a \\\\  z_a &amp; 0 &amp; -x_a \\\\  -y_a &amp; x_a &amp; 0  \\end{pmatrix}\\) is the dual matrix of \\(\\vec{a}\\))</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#lecture-03-transformation","title":"Lecture 03 / Transformation","text":"<p>Menu of this lecture</p> <ul> <li>2D transformations: rotation, scale, shear</li> <li>Homogeneous coordinates</li> <li>Composing transformation</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#viewing-transformation","title":"Viewing transformation","text":"<p>Viewing transformation: 3D -&gt; 2D projection</p> <p>Scale</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} s_x &amp; 0 \\\\ 0 &amp; s_y \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Multiplying a matrix on the left corresponds to performing a row operation.</p> <p>Reflection</p> <p>E.g. reflection about the y-axis:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} -1 &amp; 0 \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Sheer</p> <p>Illustration of sheer tranformation: </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} x+ay \\\\ y \\end{pmatrix} =\\begin{pmatrix} 1 &amp; a \\\\ 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} \\] <p>Rotation</p> <p>By default, the rotation is around the origin. \\(R_{45}\\) refers to rotatiing 45 degrees counterclockwose about the origin. </p> \\[ R_{\\theta}=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\ \\sin\\theta &amp; \\cos\\theta \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#homogeneous-coordinates","title":"Homogeneous Coordinates","text":"<p>Translation is not linear transform, so it cannot be represented in matrix form.  But we don't want it to be a special case, so homogeneous coordinates are used to represent all transformations. </p> <p>Add a third coordinate (w-coordinate), to represent the translation characters of points or vectors.  </p> <p>Affine transformations: affine map = linear map + translation map  </p> \\[ \\begin{pmatrix} x' \\\\ y' \\end{pmatrix} =\\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\end{pmatrix} +\\begin{pmatrix} t_x \\\\ t_y \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#2d-version","title":"2D version","text":"<ul> <li>2D point: \\(\\begin{pmatrix}x , y , 1 \\end{pmatrix}^T\\)</li> <li>2D vector:\\(\\begin{pmatrix}x , y , 0 \\end{pmatrix}^T\\)</li> </ul> <p>When \\(w\\neq 0\\), 2D point \\(\\begin{pmatrix}x , y , w \\end{pmatrix}^T\\) means \\(\\begin{pmatrix}x/w , y/w , 1 \\end{pmatrix}^T\\)</p> <p>(The w-coordinate of vectors are 0, which means vectors are translation invariant. By comparison, w-coordinate of points are 1)</p> <p>Use homogeneous Coordinates to represent affine translations:</p> \\[ \\begin{pmatrix} x' \\\\ y' \\\\ w' \\end{pmatrix} =\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} x \\\\ y \\\\ 1 \\end{pmatrix} =\\begin{pmatrix} x+t_x \\\\ y+t_y \\\\ 1 \\end{pmatrix} \\] <p>Properties:  1. The last row must be 0 0 1. 2. The top-left 2\u00d72 matrix represents a linear transformation. 3. The rightmost column represents translation. 4. Relations between points and vectors:    - vector + vector = vector    - point  - point  = vector    - point  + vector = point    - point  + point  = point</p> <p>Scale:</p> \\[ S(s_x, s_y)=\\begin{pmatrix} s_x &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Rotation:</p> \\[ R(\\alpha)=\\begin{pmatrix} \\cos\\alpha &amp; -\\sin\\alpha &amp; 0 \\\\ \\sin\\alpha &amp; \\cos\\alpha &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y)=\\begin{pmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\  0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Inverse transformations: \\(M^{-1}\\)</p> <p>Esp. matrix \\(R_{\\theta}\\) for rotation is orthogonal, so \\(R_{-\\theta}=R^{-1}=R^T\\).</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#3d-version","title":"3D version","text":"<ul> <li>3D point: \\(\\begin{pmatrix}x , y , z, 1 \\end{pmatrix}^T\\)</li> <li>3D vector:\\(\\begin{pmatrix}x , y , z, 0 \\end{pmatrix}^T\\)</li> </ul> <p>Use 4\u00d74 matrix for affine transformations. </p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#composing-transforms","title":"Composing Transforms","text":"<p>All matrices are left-multiplied to the original coordinates, and are composed in the order of transformations from right to left.</p> <p>Examples</p> <p>Transformations: A1 -&gt; A2 -&gt; ... -&gt; An Matrix: \\(A_n\\cdots A_2A_1\\begin{pmatrix}x \\\\ y \\\\ 1\\end{pmatrix}\\)</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#lecture-04-transformations-cont","title":"Lecture 04 Transformations Cont.","text":"<p>Menu of this lecture</p> <ul> <li>3D transformations</li> <li>Viewing transformations</li> </ul>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#3d-transformations","title":"3D Transformations","text":"<p>Scale:</p> \\[ S(s_x, s_y, s_z)= \\begin{pmatrix} s_x &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; s_y &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; s_z &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Translation:</p> \\[ T(t_x, t_y, t_z)= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; 0 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#3d-rotations","title":"3D Rotations","text":""},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#compose-from-r_x-r_y-r_z","title":"Compose from \\(R_x, R_y, R_z\\)","text":"\\[ R_x(\\theta)=\\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\cos\\theta &amp; -\\sin\\theta &amp; 0 \\\\ 0 &amp; \\sin\\theta &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] \\[ R_y(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; 0 &amp; \\sin\\theta &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ -\\sin\\theta &amp; 0 &amp; \\cos\\theta &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>The rotation part of \\(R_y(\\theta)\\) is different from common rotation matrix, because \\(\\vec{y}=\\vec{z}\\times\\vec{x}\\), which is not the common sequence xyzxyz.</p> \\[ R_z(\\theta)=\\begin{pmatrix} \\cos\\theta &amp; -\\sin\\theta &amp; 0 &amp; 0 \\\\ \\sin\\theta &amp; \\cos\\theta &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>When rotating around x-, y-, and z- axis with angle \\(\\alpha, \\beta, \\gamma\\) respectively (\\(\\alpha, \\beta, \\gamma\\) are called Euler angles),  $$ R_{xyz}(\\alpha, \\beta, \\gamma)=R_x(\\alpha)R_y(\\beta)R_z(\\gamma) $$</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#rodrigues-rotation-formation","title":"Rodrigues' Rotation Formation","text":"<p>Rotation by angle \\(\\alpha\\) around axis n, $$ R(n, \\alpha)=\\cos(\\alpha)I+(1-\\cos(\\alpha))n n^T+\\sin(\\alpha)\\begin{pmatrix} 0 &amp; -n_z &amp; n_y \\ n_z &amp; 0 &amp; -n_x \\ -n_y &amp; n_x &amp; 0 \\end{pmatrix} $$</p> <p>If the axis of rotation does not pass through the origin, first translate the entire system so that the axis passes through the origin, perform the rotation, and then translate the entire system back to its original position.</p> <p>Quaternions can be used for interpolation between rotation angles.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#viewing-transformations","title":"Viewing transformations","text":"<p>MVP Transformations:</p> <ol> <li>Model transformations (arrange objects and places)</li> <li>View transformations (arrange angles)</li> <li>Projection transformations</li> </ol>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#define-camera","title":"Define camera","text":"<ul> <li>position: \\(\\hat{e}\\) (points from the origin to the camera)</li> <li>look-at / gaze direction: \\(\\hat{g}\\) (points from the camera to the object)</li> <li>up direction: \\(\\hat{t}\\)</li> </ul> <p>Usually we transform the camera to the origin, up at Y, look at -Z. And transform the objects along with the camera.</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#transform-the-camera-mv-transformation","title":"Transform the camera (MV transformation)","text":"<p>Steps:</p> <ol> <li>Translate e to origin (\\(T_{view}\\))</li> <li>Rotate g to -Z, t to Y, (g, x, t) to x (\\(R_{view}\\))</li> </ol> <p>\\(T_{view}\\):</p> \\[ T_{view}= \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -x_e \\\\ 0 &amp; 1 &amp; 0 &amp; -y_e \\\\ 0 &amp; 0 &amp; 1 &amp; -z_e \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>\\(R_{view}\\): Consider its inverse rotation (X to (g, x, t), Y to t, Z to -g).</p> <p>comment</p> <p>Both the direction and order of rotation must be reversed.</p> \\[ R_{view}^{-1}=\\begin{pmatrix} x_{\\hat{g}\\times\\hat{t}} &amp; x_t &amp; x_{-g} &amp; 0 \\\\ y_{\\hat{g}\\times\\hat{t}} &amp; y_t &amp; y_{-g} &amp; 0 \\\\ z_{\\hat{g}\\times\\hat{t}} &amp; z_t &amp; z_{-g} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\] <p>Since \\(R_{view}\\) is orthoganal,  \\(\\(R_{view}=(R_{view}^{-1})^T\\)\\)</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#projection-transformation","title":"Projection transformation","text":"<p>Two 3D -&gt; 2D types: 1. orthographic projection 2. perspective projection</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#orthographic-projection","title":"Orthographic projection","text":"<p>Consider a cuboid \\([l,r]\\times[b,t]\\times[f,n]\\), map it to the canonical cube \\([-1,1]^3\\), and drop Z coordinate to project.</p> Why we just need to drop Z coordinate? <p>In the \"Define camera\" part, we define the camera located at the origin, up at Y, look at -Z.</p> \\[ M_{ortho} = \\begin{pmatrix} \\frac{2}{r - l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t - b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n - f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; -\\frac{r + l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t + b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n + f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{pmatrix} \\]"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#perspective-projection","title":"Perspective projection","text":"<p>Illustration:</p> <p></p> <p>Steps: 1. Squish the frustum into a cuboid, all points on the near plane remain unchanged, all points on the far plane undergo in-plane contraction, with the center point of the far plane remaining fixed. 2. Do orthographic projection.</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; n &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; n+f &amp; -nf\\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{pmatrix} \\] Derivation <p>Squish illustration: </p> \\[ M_{persp\\to ortho}\\begin{pmatrix}x\\\\y\\\\z\\\\1\\end{pmatrix} =\\begin{pmatrix}nx/z\\\\ny/z\\\\?\\\\1\\end{pmatrix} =\\begin{pmatrix}nx\\\\ny\\\\?\\\\z\\end{pmatrix} \\] <p>thus,</p> \\[ M_{persp\\to ortho}=\\begin{pmatrix} n&amp;0&amp;0&amp;0\\\\ 0&amp;n&amp;0&amp;0\\\\ A&amp;B&amp;C&amp;D\\\\ 0&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>According to the properties of squishing, consider a point on the near plane and the middle point on the far plane to solve the third row.</p> <ol> <li>\\((x,y,n,1)\\to(x,y,n,1)=(nx,ny,n^2,n)\\) \\(n^2\\) is unrelated to x and y, thus \\(A=B=0, Cn+D=n^2\\)</li> <li>\\((0,0,f,1)\\to(0,0,f,1)=(0,0,f^2,f)\\) \\(Cf+D=f^2\\)</li> </ol> <p>Solve the equations above: \\(\\(C=n+f, D=-nf\\)\\)</p>"},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#lecture-05-rasterization-1-triangles","title":"Lecture 05 Rasterization 1 (Triangles)","text":""},{"location":"AbiesNotes/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E5%85%A5%E9%97%A8/games101/#lecture-06-rasterization-2-antiliasing-and-z-buffering","title":"Lecture 06 Rasterization 2 (Antiliasing and Z-Buffering)","text":""},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/","title":"Intro & K-NN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 0 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/#ways-to-compare-images","title":"Ways to compare images","text":"<ul> <li>L1 distances: \\(d_1(I_1, I_2) = \\sum_p \\vert I_1^p - I_2^p \\vert\\)</li> <li>L2 distances: \\(d_2(I_1, I_2) = \\sqrt{\\sum_p ( I_1^p - I_2^p )^2}\\)</li> </ul> <p>A classifier below with \\(O(1)\\) for training and \\(O(N)\\) for predecting with L1 distance.</p> Python<pre><code>import numpy as np\n\nclass NearestNeighbor(object):\n  def __init__(self):\n    pass\n\n  def train(self, X, y):\n    \"\"\" X is N x D where each row is an example. Y is 1-dimension of size N \"\"\"\n    # the nearest neighbor classifier simply remembers all the training data\n    self.Xtr = X\n    self.ytr = y\n\n  def predict(self, X):\n    \"\"\" X is N x D where each row is an example we wish to predict label for \"\"\"\n    num_test = X.shape[0]\n    # let's make sure that the output type matches the input type\n    Ypred = np.zeros(num_test, dtype = self.ytr.dtype)\n\n    # loop over all test rows\n    for i in range(num_test):\n      # find the nearest training image to the i'th test image\n      # using the L1 distance (sum of absolute value differences)\n      distances = np.sum(np.abs(self.Xtr - X[i,:]), axis = 1)\n      min_index = np.argmin(distances) # get the index with the smallest distance\n      Ypred[i] = self.ytr[min_index] # predict the label of the nearest example\n\n    return Ypred\n</code></pre> <p>It's bad: we want classifiers that are fast at prediction and slow for training</p>"},{"location":"NoflowersNotes/ComputerVision/Intro%26K-NN/#k-neatest-neighbours","title":"K-Neatest Neighbours","text":"<p>The idea is very simple: instead of finding the single closest image in the training set, we will find the top k closest images, and have them vote on the label of the test image. Higher values of k have a smoothing effect that makes the classifier more resistant to outliers</p> <p></p> <p>Ideas on the hyperparameters - \u274c Choose hyperparameters working best on the data. K = 1 always works best on the training data. - \u274c Choose hyperparameters working best on the test data. No idea how it will perform on new data.</p> <p>Note</p> <p>Whenever you\u2019re designing Machine Learning algorithms, you should think of the test set as a very precious resource that should ideally never be touched until one time at the very end.</p> <ul> <li>Split data into train, validation, test sets, train and test on train and validation sets and showcase the performance on the test set. (Test at the last time.)</li> </ul> Python<pre><code># assume we have Xtr_rows, Ytr, Xte_rows, Yte as before\n# recall Xtr_rows is 50,000 x 3072 matrix\nXval_rows = Xtr_rows[:1000, :] # take first 1000 for validation\nYval = Ytr[:1000]\nXtr_rows = Xtr_rows[1000:, :] # keep last 49,000 for train\nYtr = Ytr[1000:]\n\n# find hyperparameters that work best on the validation set\nvalidation_accuracies = []\nfor k in [1, 3, 5, 10, 20, 50, 100]:\n\n  # use a particular value of k and evaluation on validation data\n  nn = NearestNeighbor()\n  nn.train(Xtr_rows, Ytr)\n  # here we assume a modified NearestNeighbor class that can take a k as input\n  Yval_predict = nn.predict(Xval_rows, k = k)\n  acc = np.mean(Yval_predict == Yval)\n  print 'accuracy: %f' % (acc,)\n\n  # keep track of what works on the validation set\n  validation_accuracies.append((k, acc))\n</code></pre> <ul> <li>Cross-Validation (use less on CV). Split data into folds, try each fold as validation and average the results.</li> </ul> <p>Example</p> <p>For example, in 5-fold cross-validation, we would split the training data into 5 equal folds, use 4 of them for training, and 1 for validation. We would then iterate over which fold is the validation fold, evaluate the performance, and finally average the performance across the different folds.</p> <p>Tip</p> <p>In practice, people prefer to avoid cross-validation in favor of having a single validation split, since cross-validation can be computationally expensive.</p> <p>K-Nearest Neighbor on images never used: very slow at test time, and distance matrix on pixels are not informative. And our classifier should densely cover the space, which is harder when the dimension goes high. (Curse of dimensionality)</p>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/","title":"Loss Functions","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 5 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#parametric-approach","title":"Parametric Approach","text":"\\[ input: x \\rightarrow f(x, W[, b]) \\rightarrow \\text{10 numbers giving class scores} \\] <p>e.g.</p> \\[ f(x, W, b) = W \\text{vec}(x) + b \\] <ul> <li>Hard cases: Cases with no linear boundaries.</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#loss-function","title":"Loss function","text":"<p>Given a dataset of examples \\(\\{(x_i, y_i)\\}_{i = 1}^n\\), loss over the dataset is a sum of loss over examples:</p> \\[ L = \\frac{1}{N}\\sum_{i}L_i(f(x_i, W), y_i) \\]"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#multiclass-svm-loss-hinge-loss","title":"Multiclass SVM Loss (Hinge loss)","text":"<p>\\(y_i\\) are integers, \\(s_i\\) is the \\(j\\)-th class prediction of data \\(x_i\\), \\(L_i = \\sum_{j \\neq y_i}\\max \\{0, s_j - s_{y_i} + 1\\}\\)  (s -&gt; score). \\(1\\) here is a threshold, but it can be chosen randomly.</p> <p></p> Python<pre><code>def L_i_vectorized(x, y, W):\n    scores = W.dot(x)\n    margins = np.maximum(0, scores - scores[y] + 1)\n    margins[y] = 0\n    loss_i = np.sum(margins)\n    return loss_i\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#the-regularization","title":"The regularization","text":"<p>Model should be simple, so it works on test data. (\u9632\u6b62\u8fc7\u62df\u5408)</p> \\[ L(W) = \\frac{1}{N}\\sum_{i = 1}^{N}L_i(f(x_i, W), y_i) + \\lambda R(W) \\] <p>\\(\\lambda\\): regularization strength. \\(R(W)\\) allows the model to choose a simple model (It can be understood as reducing the degree of the fitted curve)</p> <ul> <li>L2 regularization: \\(R(W) = \\Vert W \\Vert_F\\)</li> <li>L1 regularization: \\(R(W) = \\Vert W \\Vert_1\\)</li> <li>Elastic net: \\(R(W) = \\beta \\Vert W \\Vert_F + \\Vert W \\Vert_1\\)</li> <li>Max norm regularization</li> <li>Dropout</li> <li>Fancier</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Loss%20Functions/#softmax-loss-cross-entropy-loss","title":"Softmax Loss (Cross-entropy loss)","text":"\\[ P(Y = k | X = x_i) = \\frac{\\mathrm{e}^{s_k}}{\\sum_j \\mathrm{e}^{s_j}} \\] <p>where \\(s = f(x_i, W)\\), which will normalize the score vector \\(s\\). We want to minimize the negative log likelihood of the correct class, so the loss function would be</p> \\[ L_i = -\\log P(Y = y_i | X = x_i) \\]"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/","title":"CNN","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#layers-of-cnns","title":"Layers of CNNs","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#the-conv-layers","title":"The Conv Layers","text":"<ul> <li>Accepts a volume of size \\(W_1 \\times H_1 \\times D_1\\)</li> <li>Requires four hyperparameters:<ul> <li>Number of filters \\(K\\),</li> <li>their spatial extent \\(F\\),</li> <li>the stride \\(S\\),</li> <li>the amount of zero padding \\(P\\)</li> </ul> </li> <li>Produces a volume of size \\(W_2 \\times H_2 \\times D_2\\) where:<ul> <li>\\(W_2 = \\displaystyle \\frac{W_1 - F + 2P}{S} + 1\\)</li> <li>\\(H_2 = \\displaystyle \\frac{H_1 - F + 2P}{S} + 1\\) (i.e. width and height are computed equally by symmetry)</li> <li>\\(D_2 = K\\)</li> </ul> </li> <li>With parameter sharing, it introduces \\(F \\cdot F \\cdot D_1\\) weights per filter, for a total of   \\((F \\cdot F \\cdot D_1) \\cdot K\\) weights and \\(K\\) biases.</li> <li>In the output volume, the \\(d\\)-th depth slice (of size \\(W_2 \\times H_2\\)) is the result of performing a valid convolution of the \\(d\\)-th filter over the input volume with a stride of \\(S\\), and then offset by \\(d\\)-th bias.</li> </ul> <p>Commonn settings:</p> <ul> <li>\\(K\\) is powers of 2     &gt;   - \\(F = 3, S = 1, P = 1\\)</li> <li>\\(F = 5, S = 1, P = 2\\)</li> <li>\\(F = 5, S = 2, P = \\text{(Whatever fits)}\\)</li> <li>\\(F = 1, S = 1, P = 0\\)</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#pooling-layers","title":"Pooling Layers","text":"<p>(Emitted)</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#normalization-layers","title":"Normalization Layers","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#batch-normalization","title":"Batch Normalization","text":"\\[ \\hat{x_i} = \\frac{x - \\mu}{\\sqrt{\\mathrm{Var}(x_i) + \\varepsilon}} \\]"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#layer-norm","title":"Layer Norm","text":"<p>Due to the disadvantages of Batch Norm: - Sensitive to batch size. - Not suitable for RNNs and Transformers (Attention based models) - Behaves differently during training and inference (due to running statistics)</p> <p>However, LN works on each feature of input data.</p> <p>$$ \\begin{cases} \\displaystyle \\mu = \\frac{1}{d} \\sum_{i=1}^{d} x_i \\ \\displaystyle \\sigma = \\sqrt{\\frac{1}{d} \\sum_{i=1}^{d} (x_i - \\mu)^2 + \\varepsilon} \\ \\displaystyle \\text{LN}(x_i) = \\gamma_i \\cdot \\frac{x_i - \\mu}{\\sigma} + \\beta_i \\end{cases} $$ where \\(\\gamma_i\\) and \\(\\beta_i\\) can be learnt through training.</p> <p>Remarks</p> <p>The computation of \\(\\mu\\) and \\(\\sigma\\) won't happen in testing. Instead, they will be predicted with train data.</p> <p>Other normalizations</p> <p></p> <p>C: Channels (Features), N Batch Size, H, W: data dimentions.</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#dropout","title":"Dropout","text":"<p>In each forward pass, randomly set some neurons to zero. Probability of dropping is a hyperparameter; 0.5 is common. </p> <p>At test time, all neurons are active always.</p> <p>A rule to be obeyed</p> <p>The output at test time must be the same as the expected output at training time</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#activation-functions","title":"Activation Functions","text":""},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#sigmoid","title":"Sigmoid","text":"\\[ \\sigma(x) = 1 / (1 + \\mathrm{e}^{-x}) \\] <p>Key problem: Large positive or negative values can \u201ckill\u201d the gradients.</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#relu","title":"ReLU","text":"\\[ f(x) = \\max \\{0, x\\} \\] <p>Main benefit: High efficiency, does not saturate in \\(+\\) region Key Problem: Not zero-centered, deaded values when \\(x &lt; 0\\).</p>"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#gelu","title":"GELU","text":"\\[ \\mathrm{GELU}(x) = x \\cdot \\Phi(x) \\] <p>where </p> \\[ \\Phi (x) = \\frac{1}{2} \\left[1 + \\mathrm{erf}\\left(\\frac{x}{\\sqrt{2}}\\right)\\right] \\]"},{"location":"NoflowersNotes/ComputerVision/CNN/CNN/#other-lus","title":"Other LUs","text":""},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/","title":"Gradient Descent","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 95 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#optimizers","title":"Optimizers","text":"Python<pre><code>while True:\n    weights_grad = evaluate_gradient(loss_fun, data, weights)\n    weights += -step_size * weights_grad\n</code></pre> <p><code>step_size</code> is a hyper-parameter called learning rate.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#stochastic-gradient-descent-sgd","title":"Stochastic Gradient Descent (SGD)","text":"<p>Full sum will be expensive when N is large, so we approximate the sum using a minibatch of examples.</p> \\[ L(W) = \\frac{1}{N}\\sum_{i = 1}^{N}L_i(x_i, y_i, W) + \\lambda R(W) \\] \\[ \\nabla_W L(W) = \\frac{1}{N} \\sum_{i=1}^{N} \\nabla_W L_i(x_i, y_i, W) + \\lambda \\nabla_W R(W) \\] Python<pre><code>while True:\n    data_batch = sample_training_data(data, 256)\n    weights_grad = evaluate_gradient(loss_fun, data_batch, weights)\n    weights += -step_size * weights_grad\n</code></pre> <p>Problems</p> <ol> <li>If the loss changes quickly in one direction and slowly in another, there will be very slow progress along shallow dimension and jitter along steep direction</li> <li>If the loss function has a local minima or saddle point, the gradient descent will get stuck.</li> <li>Our gradients come from minibatches so they can be noisy.</li> </ol>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#sgd-with-momentum-sgdm","title":"SGD with Momentum (SGDM)","text":"<p>While SGD is \\(x_{t + 1} = s_t - \\alpha \\nabla f(x_t)\\), SGD + momentum will be</p> \\[ \\begin{cases} v_{t + 1} = \\rho v_t + \\nabla f(x_t) \\\\ x_{t + 1} = x_t - \\alpha v_{t + 1} \\end{cases} \\] <p>We build up \"velocity\" and \"friction\" \\(\\rho\\) (typicaly \\(\\rho = 0.9\\) or \\(0.99\\))</p> Python<pre><code>vx = 0\nwhile True:\n    dx = compute_gradient(x)\n    vx = rho * vx + dx\n    x -= learning_rate * vx\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#rmsprop","title":"RMSProp","text":"<p>Adds element-wise scaling of the gradient based on the historical sum of squares in each dimension (with decay). \u524d\u9762\u6bcf\u4e00\u6b21\u7684\u68af\u5ea6\u90fd\u5728\u4e0d\u65ad\u7d2f\u79ef\uff0c\u4f46\u662f\u5f71\u54cd\u53c8\u4f1a\u8870\u51cf</p> \\[ \\begin{cases} x_{t+1} = x_t - \\frac{\\eta}{\\sqrt{v_{t+1}}} \\nabla f(x_t) \\\\ v_1 = (\\nabla f(x_0))^2 \\\\ v_{t+1} = \\alpha v_t + (1 - \\alpha)(\\nabla f(x_t))^2 \\end{cases} \\] <p>\\((\\nabla f(x_t))^2\\) denotes the element-wise square of the gradient.</p> Python<pre><code>grad_squared = 0\nwhile True:\n    dx = compute_gradient(x)\n    grad_squared = decay_rate * grad_squared + (1 - decay_rate) * dx * dx\n    x -= learning_rate * dx / (np.sqrt(grad_squared) + 1e-7)\n</code></pre> <p>Why adding <code>1e-7</code>?</p> <p>It's a numerical stability trick called epsilon smoothing\uff0c which can prevent division by 0 or near-zero values.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#adam","title":"Adam","text":"<p>Adam builds upon RMSProp by incorporating the first-moment term \\(m_t\\) and bias correction, which improves convergence speed and stability.</p> \\[ \\begin{cases} g_t = \\nabla f(x_t) &amp; \\text{(\u5f53\u524d\u68af\u5ea6)} \\\\ m_1 = 0,\\quad v_1 = 0 &amp; \\text{(\u4e00\u9636\u4e0e\u4e8c\u9636\u52a8\u91cf\u521d\u503c)} \\\\ m_{t+1} = \\beta_1 m_t + (1 - \\beta_1) g_t &amp; \\text{(\u4e00\u9636\u52a8\u91cf\u4f30\u8ba1)} \\\\ v_{t+1} = \\beta_2 v_t + (1 - \\beta_2) g_t^2 &amp; \\text{(\u4e8c\u9636\u52a8\u91cf\u4f30\u8ba1)} \\\\ \\hat{m}_{t+1} = \\dfrac{m_{t+1}}{1 - \\beta_1^{t+1}} &amp; \\text{(\u4e00\u9636\u52a8\u91cf\u504f\u5dee\u4fee\u6b63)} \\\\ \\hat{v}_{t+1} = \\dfrac{v_{t+1}}{1 - \\beta_2^{t+1}} &amp; \\text{(\u4e8c\u9636\u52a8\u91cf\u504f\u5dee\u4fee\u6b63)} \\\\ x_{t+1} = x_t - \\eta \\cdot \\dfrac{\\hat{m}_{t+1}}{\\sqrt{\\hat{v}_{t+1}} + \\epsilon} &amp; \\text{(\u66f4\u65b0\u53c2\u6570)} \\end{cases} \\] Python<pre><code>first_moment = 0\nsecond_moment = 0\nfor t in range(1, num_iterations):\n    dx = compute_gradient(x)\n\n    # Momentum\n    first_moment = beta1 * first_moment + (1 - beta1) * dx\n\n    # RMSProp / AdaGrad components\n    second_moment = beta2 * second_moment + (1 - beta2) * dx * dx\n\n    # Bias correction\n    first_unbias = first_moment / (1 - beta1 ** t)\n    second_unbias = second_moment / (1 - beta2 ** t)\n\n    # Update\n    x -= learning_rate * first_unbias / (np.sqrt(second_unbias) + 1e-7)\n</code></pre>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#adamw-adam-variant-with-weight-decay","title":"AdamW (Adam Variant with Weight Decay)","text":"<p>AdamW is an improvement over Adam that decouples weight decay from the gradient update, commonly used in training deep neural networks such as Transformers and BERT.</p> \\[ \\begin{cases} g_t = \\nabla f(x_t) &amp; \\text{(\u5f53\u524d\u68af\u5ea6)} \\\\ m_1 = 0,\\quad v_1 = 0 \\\\ m_{t+1} = \\beta_1 m_t + (1 - \\beta_1) g_t &amp; \\text{(\u4e00\u9636\u52a8\u91cf)} \\\\ v_{t+1} = \\beta_2 v_t + (1 - \\beta_2) g_t^2 &amp; \\text{(\u4e8c\u9636\u52a8\u91cf)} \\\\ \\hat{m}_{t+1} = \\dfrac{m_{t+1}}{1 - \\beta_1^{t+1}} &amp; \\text{(\u4e00\u9636\u504f\u5dee\u4fee\u6b63)} \\\\ \\hat{v}_{t+1} = \\dfrac{v_{t+1}}{1 - \\beta_2^{t+1}} &amp; \\text{(\u4e8c\u9636\u504f\u5dee\u4fee\u6b63)} \\\\ x_{t+1} = x_t - \\eta \\cdot \\left( \\dfrac{\\hat{m}_{t+1}}{\\sqrt{\\hat{v}_{t+1}} + \\epsilon} \\boxed{ + \\lambda x_t} \\right) &amp; \\text{(\u53c2\u6570\u66f4\u65b0)} \\end{cases} \\] Python<pre><code>first_moment = 0\nsecond_moment = 0\n\nfor t in range(1, num_iterations):\n    dx = compute_gradient(x)\n\n    # Momentum\n    first_moment = beta1 * first_moment + (1 - beta1) * dx\n\n    # RMSProp / AdaGrad components\n    second_moment = beta2 * second_moment + (1 - beta2) * dx * dx\n\n    # Bias correction\n    first_unbias = first_moment / (1 - beta1 ** t)\n    second_unbias = second_moment / (1 - beta2 ** t)\n\n    # AdamW update: \u53c2\u6570\u5148\u6309\u6743\u91cd\u8870\u51cf\u8870\u51cf\uff0c\u518d\u8fdb\u884cAdam\u66f4\u65b0\n    x -= learning_rate * weight_decay * x  # \u6743\u91cd\u8870\u51cf\u90e8\u5206\n\n    # Adam\u66f4\u65b0\u90e8\u5206\n    x -= learning_rate * first_unbias / (np.sqrt(second_unbias) + 1e-7)\n</code></pre> <p>Comparison plots of the optimizers are shown below</p> <p></p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#how-to-controll-the-learning-rate","title":"How to controll the learning rate?","text":"<p>One approach is to let learning rate decay over time.</p> <p>Way 1: Reduce learning rate at a few fixed points. E.g. for ResNets, multiply LR by 0.1 after epochs 30, 60, and 90</p> <p> </p> <p></p> <p>Way 2: Set learning rate as a decreasing function.   </p> <ul> <li>Cosine: \\(\\displaystyle{\\alpha_t = \\frac{1}{2}\\alpha_0(1 + \\cos (t \\pi / T))}\\) </li> <li>Linear: \\(\\alpha_t = \\alpha_0 (1 - t/T)\\) </li> <li>Inverse Sqrt: \\(\\displaystyle{\\alpha_t = \\alpha_0 / \\sqrt{t}}\\) </li> <li>Linear Warmup: \\(\\text{lr}(t) =  \\begin{cases} \\displaystyle \\frac{t}{T_{\\text{warmup}}} \\cdot \\text{lr}_{\\text{max}}, &amp; \\text{if } t \\leq T_{\\text{warmup}} \\\\ \\text{lr}_{\\text{schedule}}(t), &amp; \\text{otherwise} \\end{cases}\\)</li> </ul>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#image-features","title":"Image Features","text":""},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#histogram-of-oriented-gradients-hog","title":"Histogram of Oriented Gradients (HoG)","text":"<p>Divide each image into \\(8 \\times 8\\) pixel regions. Within each region quantize edge direction into 9 bins.</p>"},{"location":"NoflowersNotes/ComputerVision/Gradient_Descent/Gradient_Descent/#bag-of-words","title":"Bag of Words","text":"<ol> <li>Build codebook: Extract random patches from the image and cluster (K-Means) patches to form \"codebook\" of \"visual words\".</li> <li>Encode images.</li> </ol>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/","title":"\u6570\u6a21\u7684\u6982\u7387\u7edf\u8ba1\u7b14\u8bb0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 906 \u4e2a\u5b57\u00a0\u00a07 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> \u6ce8\u610f <p>\u672c\u6587\u7531 LaTeX \u4ee3\u7801\u8f6c\u5316\u800c\u6765</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_1","title":"\u6982\u7387\u8bba","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_2","title":"\u968f\u673a\u53d8\u91cf","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_3","title":"\u968f\u673a\u53d8\u91cf\u7684\u6570\u503c\u6027\u8d28","text":"<ul> <li>\u534f\u65b9\u5dee \\(\\mathrm{cov}(X, Y) = E((X - E(X))(Y - E(Y)))\\)</li> <li>\u76f8\u5173\u7cfb\u6570/\u6807\u51c6\u5316\u534f\u65b9\u5dee \\(\\rho(X, Y) = \\frac{\\mathrm{cov}(X, Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}\\)</li> <li>\u53d8\u5f02\u7cfb\u6570 \\(\\delta_X = \\frac{\\sqrt{D(X)}}{\\left\\lvert E(X)\\right\\rvert }\\)</li> <li>\\(k\\) \u9636\u539f\u70b9\u77e9 \\(E(X^k)\\)</li> <li>\\(k\\) \u9636\u4e2d\u5fc3\u77e9 \\(E\\left((X - E(X))^k\\right)\\)</li> </ul>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_4","title":"\u5927\u6570\u5b9a\u5f8b","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chebyshev","title":"Chebyshev \u4e0d\u7b49\u5f0f","text":"\\[ P(\\left\\lvert X - E(X)\\right\\rvert \\geqslant \\varepsilon) \\leqslant \\frac{D(X)}{\\varepsilon^2} \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_5","title":"\u4f9d\u6982\u7387\u6536\u655b","text":"<p>\\(\\exists c, \\forall \\varepsilon &gt; 0, \\lim_{n \\to +\\infty}P\\left(\\left\\lvert X_n - c\\right\\rvert \\leqslant \\varepsilon\\right) = 1\\), \u5219\u79f0\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(\\{X_n\\}\\) \u4f9d\u6982\u7387\u6536\u655b\u4e8e \\(c\\), \u8bb0\u4f5c \\(X_n \\xrightarrow[]{P}c\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chebyshev_1","title":"Chebyshev \u5927\u6570\u5b9a\u5f8b","text":"<p>\u968f\u673a\u53d8\u91cf\u5e8f\u5217 \\(\\{X_n\\}\\) \u4e24\u4e24\u4e0d(\u7ebf\u6027)\u76f8\u5173\uff0c\u4e14 \\(D(X_i)\\) \u6709\u4e00\u81f4\u4e0a\u754c \\(c\\) (\u5373 \\(D(X_i) &lt; c\\)), \u5219\u6709</p> \\[     \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\xrightarrow{P}\\frac{1}{n}\\sum_{i = 1}^{n}E(X_i) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_6","title":"\u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03(\u8f9b\u94a6)\u5927\u6570\u5b9a\u5f8b","text":"<p>\\(\\{X_i\\}\\) \u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03\uff0c \\(E(X_i) = \\mu\\) \u6709\u9650\uff0c\u5219</p> \\[ \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\xrightarrow{P}\\mu \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_7","title":"\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#-","title":"\u5217\u7ef4-\u6797\u5fb7\u4f2f\u683c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\\(\\{X_i\\}\\) \u76f8\u4e92\u72ec\u7acb\u540c\u5206\u5e03\uff0c\\(D(X_i) = \\sigma^2\\) \u6709\u9650\uff0c\\(E(X_i) = \\mu\\)\uff0c\u5219</p> \\[     \\lim_{n \\to \\infty}P\\left(\\frac{\\sum_{i = 1}^{n}X_i - n\\mu}{\\sqrt{n}\\sigma}\\right) = \\Phi(x) \\] <p>\u5373\u5f53 \\(n\\) \u5145\u5206\u5927\u65f6\uff0c\u53ef\u4ee5\u8ba4\u4e3a \\(\\sum_{i = 1}^{n}X_i \\overset{\\text{\u8fd1\u4f3c}}{\\sim} N(n\\mu, n\\sigma^2)\\) \u6216\u8005 \\(\\overline{X} \\overset{\\text{\u8fd1\u4f3c}}{\\sim} N\\left(\\mu, \\frac{\\sigma^2}{n}\\right)\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_8","title":"\u6570\u7406\u7edf\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_9","title":"\u7edf\u8ba1\u91cf","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_10","title":"\u65e0\u504f\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_11","title":"\u6837\u672c\u65b9\u5dee","text":"<p>\\((X_1, X_2, \\cdots , X_n)\\) \u662f\u53d6\u81ea\u603b\u4f53\u7684\u4e00\u4e2a\u6837\u672c\uff0c\u79f0</p> \\[     \\overline{X} = \\frac{1}{n}\\sum_{i = 1}^{n}X_i \\] <p>\u4e3a\u6837\u672c\u5747\u503c\uff0c</p> \\[     S^2 = \\frac{1}{n - 1}\\sum_{i = 1}^{m}\\left(X_i - \\overline{X}\\right)^2 \\] <p>\u4e3a\u6837\u672c\u65b9\u5dee.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_12","title":"\u4e09\u5927\u5206\u5e03","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#chi2","title":"\\(\\chi^2\\) \u5206\u5e03","text":"<p>\u8bbe \\(\\{X_i\\}_{i = 1}^n\\) \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u53d8\u91cf\uff0c\u79f0\u968f\u673a\u53d8\u91cf \\(Y = \\sum_{i = 1}^{n}X_i^2\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 \\(\\chi^2\\) \u5206\u5e03\uff0c\u8bb0\u4e3a \\(Y \\sim \\chi^2(n)\\).   </p> <p>\\(\\chi^2\\) \u5206\u5e03\u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(y) = \\begin{cases}             \\frac{1}{2^{\\frac{n}{2}}\\Gamma\\left(\\frac{n}{2}\\right)}y^{\\frac{n}{2} - 1}\\mathrm{e}^{-\\frac{y}{2}}, &amp; \\quad y &gt; 0 \\\\             0,&amp; \\quad \\text{\u5176\u5b83}         \\end{cases} \\end{aligned} \\] <p>\\(Y \\sim \\chi^2(n)\\) \u6709\u4ee5\u4e0b\u6027\u8d28     - \\(E(Y) = n, D(Y) = 2n\\) - \u53ef\u52a0\u6027\uff0c \\(X \\sim \\chi^2(m), Y \\sim \\chi^2(n)\\), \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(X + Y \\sim \\chi^2(m + n)\\)</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#t","title":"\\(t\\) \u5206\u5e03(\u5b66\u751f\u6c0f\u5206\u5e03)","text":"<p>\u8bbe \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c \\(X \\sim N(0, 1), Y \\sim \\chi^2(n)\\), \u5219\u79f0 \\(T = \\frac{X}{\\sqrt{Y/n}}\\) \u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(n\\) \u7684 \\(t\\) \u5206\u5e03.   </p> <p>\\(t\\) \u5206\u5e03\u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(x) = \\frac{\\Gamma\\left(\\frac{n + 1}{2}\\right)}{\\sqrt{\\pi n }\\Gamma\\left(\\frac{n}{2}\\right)}\\left(1 + \\frac{x^2}{n}\\right)^{-\\frac{n + 1}{2}} \\end{aligned} \\] <p>\\(t(n)\\)\u7684\u5bc6\u5ea6\u51fd\u6570\u4e0e\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(N(0, 1)\\) \u5bc6\u5ea6\u5f88\u76f8\u4f3c, \u5b83\u4eec\u90fd\u662f\u5173\u4e8e\u539f\u70b9\u5bf9\u79f0, \u5355\u5cf0\u5076\u51fd\u6570, \u5728 \\(x = 0\\) \u5904\u8fbe\u5230\u6781\u5927. \u4f46 \\(t(n)\\) \u7684\u5cf0\u503c\u4f4e\u4e8e \\(N(0, 1)\\) \u7684\u5cf0\u503c, \\(t(n)\\) \u7684\u5bc6\u5ea6\u51fd\u6570\u5c3e\u90e8\u90fd\u8981\u6bd4 \\(N(0, 1)\\) \u7684\u4e24\u4fa7\u5c3e\u90e8\u7c97\u4e00\u4e9b. \u5bb9\u6613\u8bc1\u660e:</p> \\[     \\lim_{n \\to \\infty} f(x) = \\Phi(x) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#f","title":"\\(F\\) \u5206\u5e03","text":"<p>\u8bbe \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c \\(X \\sim \\chi^2(m), Y \\sim \\chi^2(n)\\), \u5219\u79f0 \\(F = \\frac{X / m}{Y / n}\\) \u670d\u4ece \\(F\\) \u5206\u5e03\uff0c\u8bb0\u4e3a \\(F \\sim F(m, n)\\) \u5176\u4e2d \\(m\\) \u79f0\u4e3a\u7b2c\u4e00\u81ea\u7531\u5ea6\uff0c \\(n\\) \u79f0\u4e3a\u7b2c\u4e8c\u81ea\u7531\u5ea6.   </p> <p>\\(F(m, n)\\) \u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ \\begin{aligned} f(y) = \\begin{cases}             \\frac{\\Gamma\\left(\\frac{m + n}{2}\\right)}{\\Gamma\\left(\\frac{m}{2}\\right)\\Gamma\\left(\\frac{n}{2}\\right)}\\left(\\frac{m}{n}\\right)^{\\frac{m}{2}}y^{\\frac{m}{2} - 1}\\left(1 + \\frac{m}{n}y\\right)^{-\\frac{m + n}{2}},&amp; \\quad y &gt; 0 \\\\             0,&amp; \\quad \\text{\u5176\u5b83}          \\end{cases} \\end{aligned} \\] <p>\u8bb0 \\(F_\\alpha(m, n)\\) \u4e3a \\(F\\) \u5206\u5e03\u7684\u7b2c \\(\\alpha\\) \u5206\u4f4d\u6570 (\u5373 \\(P(F \\leqslant F_\\alpha(m, n)) = \\alpha\\))   </p> <p>\u6709\u6027\u8d28\uff1a</p> \\[     F_\\alpha(m, n) = \\frac{1}{F_{1 - \\alpha}}(n, m) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_13","title":"\u6b63\u6001\u603b\u4f53\u7684\u62bd\u6837\u5206\u5e03","text":"<p>\u6682\u65f6\u7565.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_14","title":"\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_15","title":"\u70b9\u4f30\u8ba1","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_16","title":"\u77e9\u4f30\u8ba1","text":"<p>\u7528\u6837\u672c\u539f\u70b9\u77e9\u4f30\u8ba1\u603b\u4f53\u539f\u70b9\u77e9.   </p> <p>\u8bbe\u603b\u4f53\u7684 \\(k\\) \u9636\u539f\u70b9\u77e9\u4e3a \\(\\mu_k = E(X^k)\\), \u6837\u672c\u7684 \\(k\\) \u9636\u539f\u70b9\u77e9\u4e3a \\(A_k = \\frac{1}{n}\\sum_{i = 1}^{n}X_i^k\\), \u7528 \\(A_k\\) \u4f30\u8ba1 \\(\\mu_k\\), \u5bf9\u67d0\u4e2a\u4f9d\u8d56 \\(\\mu_1, \\mu_2, \\cdots, \\mu_n\\) \u7684\u5206\u5e03\u53c2\u6570 \\(\\theta = \\theta(\\mu_1, \\mu_2, \\cdots, \\mu_n)\\), \u6709 \\(\\theta\\) \u7684\u4f30\u8ba1</p> \\[     \\hat{\\theta} = \\theta(A_1, A_2, \\cdots, A_n) \\]"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_17","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1","text":"<p>\u5b9a\u4e49\u8bbe\u603b\u4f53 \\(X\\) \u6709\u5206\u5e03\u5f8b \\(P(X=x;\\theta)\\) \u6216\u5bc6\u5ea6\u51fd\u6570 \\(f(x;\\theta)\\) \uff08\u5176\u4e2d \\(\\theta\\) \u4e3a\u4e00\u4e2a\u672a\u77e5\u53c2\u6570\u6216\u51e0\u4e2a\u672a\u77e5\u53c2\u6570\u7ec4\u6210\u7684\u5411\u91cf \\(\\theta=(\\theta_1,\\theta_2,\\cdots,\\theta_k)\\)\uff09\uff0c\u5df2\u77e5 \\(\\theta\\in\\Theta\\)\uff0c\\(\\Theta\\) \u662f\u53c2\u6570\u7a7a\u95f4. \\((x_1, x_2, \\cdots, x_n)\\) \u4e3a\u53d6\u81ea\u603b\u4f53 \\(X\\) \u7684\u4e00\u4e2a\u6837\u672c \\((X_1, X_2, \\cdots, X_n)\\) \u7684\u89c2\u6d4b\u503c\uff0c\u5c06\u6837\u672c\u7684\u8054\u5408\u5206\u5e03\u5f8b\u6216\u8054\u5408\u5bc6\u5ea6\u51fd\u6570\u770b\u6210 \\(\\theta\\) \u7684\u51fd\u6570\uff0c\u7528 \\(L(\\theta)\\) \u8868\u793a\uff0c\u53c8\u79f0\u4e3a \\(\\theta\\) \u7684\u4f3c\u7136\u51fd\u6570\uff0c\u5219\u4f3c\u7136\u51fd\u6570</p> \\[ L(\\theta)=\\prod_{i=1}^n P\\left(X_i=x_i;\\theta\\right), \\text{ \u6216 } L(\\theta)=\\prod_{i=1}^n f\\left(x_i;\\theta\\right),  \\] <p>\u79f0\u6ee1\u8db3\u5173\u7cfb\u5f0f \\(L(\\hat{\\theta})=\\max_{\\theta\\in\\Theta} L(\\theta)\\) \u7684\u89e3 \\(\\hat{\\theta}\\) \u4e3a \\(\\theta\\) \u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_18","title":"\u70b9\u4f30\u8ba1\u7684\u4f18\u826f\u6027\u5224\u65ad\u6807\u51c6","text":""},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_19","title":"\u65e0\u504f\u6027","text":"<p>\u8bbe \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\\(\\theta\\) \u53d6\u503c\u7684\u53c2\u6570\u7a7a\u95f4\u4e3a \\(\\Theta\\)\uff0c\u82e5\u5bf9\u4efb\u610f\u7684 \\(\\theta \\in \\Theta\\)\uff0c\u6709</p> \\[ E_\\theta\\left(\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\right) = \\theta,  \\] <p>\u5219\u79f0 \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\uff08\u91cf\uff09\uff0c\u5426\u5219\u79f0\u4e3a\u6709\u504f\u4f30\u8ba1\uff08\u91cf\uff09. \u5982\u679c\u6709</p> \\[ \\lim_{n \\rightarrow \\infty} E_\\theta\\left(\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\right) = \\theta,  \\] <p>\u5219\u79f0 \\(\\hat{\\theta}=\\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u6e10\u8fd1\u65e0\u504f\u4f30\u8ba1\uff08\u91cf\uff09. \u4f30\u8ba1\u91cf\u7684\u65e0\u504f\u6027\u662f\u6307\uff0c\u7531\u4f30\u8ba1\u91cf\u5f97\u5230\u7684\u4f30\u8ba1\u503c\u76f8\u5bf9\u4e8e\u672a\u77e5\u53c2\u6570\u771f\u503c\u6765\u8bf4\uff0c\u53d6\u67d0\u4e9b\u6837\u672c\u89c2\u6d4b\u503c\u65f6\u504f\u5927\uff0c\u53d6\u53e6\u4e00\u4e9b\u6837\u672c\u89c2\u6d4b\u503c\u65f6\u504f\u5c0f\u3002\u53cd\u590d\u5c06\u8fd9\u4e2a\u4f30\u8ba1\u91cf\u4f7f\u7528\u591a\u6b21\uff0c\u5c31\u5e73\u5747\u6765\u8bf4\u5176\u504f\u5dee\u4e3a 0\u3002\u5982\u679c\u4f30\u8ba1\u91cf\u4e0d\u5177\u6709\u65e0\u504f\u6027\uff0c\u5219\u65e0\u8bba\u4f7f\u7528\u591a\u5c11\u6b21\uff0c\u5176\u5e73\u5747\u503c\u4e5f\u4e0e\u771f\u503c\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u5c31\u662f\u7cfb\u7edf\u8bef\u5dee\u4e86\u3002</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_20","title":"\u6709\u6548\u6027","text":"<p>\u8bbe \\(\\hat{\\theta}_1\\) \u548c \\(\\hat{\\theta}_2\\) \u662f \\(\\theta\\) \u7684\u4e24\u4e2a\u65e0\u504f\u4f30\u8ba1\uff0c\u82e5\u5bf9\u4efb\u610f\u7684 \\(\\theta \\in \\Theta\\)\uff0c\u6709 \\(D(\\hat{\\theta}_1) \\leqslant D(\\hat{\\theta}_2)\\)\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a \\(\\theta \\in \\Theta\\) \u4f7f\u5f97\u4e0a\u8ff0\u4e0d\u7b49\u5f0f\u4e25\u683c\u6210\u7acb\uff0c\u5219\u79f0 \\(\\hat{\\theta}_1\\) \u6bd4 \\(\\hat{\\theta}_2\\) \u6709\u6548.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_21","title":"\u76f8\u5408\u6027(\u4e00\u81f4\u6027)","text":"<p>\u8bbe \\(\\hat{\\theta} = \\hat{\\theta}(X_1, X_2, \\cdots, X_n)\\) \u662f \\(\\theta\\) \u7684\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\u82e5\u5bf9 \\(\\forall \\varepsilon &gt; 0\\) \uff0c</p> \\[     \\lim_{n \\rightarrow \\infty} P(|\\hat{\\theta} - \\theta| \\geqslant \\varepsilon) = 0, \\] <p>\u5219\u79f0\u4f30\u8ba1\u91cf \\(\\hat{\\theta}\\) \u5177\u6709\u76f8\u5408\u6027\uff08\u4e00\u81f4\u6027\uff09\uff0c\u5373 \\(\\hat{\\theta} \\xrightarrow{P} \\theta\\)\uff0c\u6216\u79f0 \\(\\hat{\\theta}\\) \u662f \\(\\theta\\) \u7684\u76f8\u5408\uff08\u4e00\u81f4\uff09\u4f30\u8ba1\u91cf.</p> <p>\u76f8\u5408\u6027\u88ab\u89c6\u4e3a\u5bf9\u4f30\u8ba1\u7684\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u8981\u6c42\uff0c\u5982\u679c\u4e00\u4e2a\u4f30\u8ba1\u91cf\uff0c\u5728\u6837\u672c\u91cf\u4e0d\u65ad\u589e\u5927\u65f6\uff0c\u5b83\u4e0d\u80fd\u628a\u88ab\u4f30\u53c2\u6570\u4f30\u8ba1\u5230\u4efb\u610f\u6307\u5b9a\u7684\u7cbe\u5ea6\u5185\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f30\u8ba1\u662f\u4e0d\u597d\u7684. \u901a\u5e38\uff0c\u4e0d\u6ee1\u8db3\u76f8\u5408\u6027\u7684\u4f30\u8ba1\u4e00\u822c\u4e0d\u4e88\u8003\u8651.</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_22","title":"\u533a\u95f4\u4f30\u8ba1","text":"<p>\u8bbe \\((X_1, X_2, \\cdots, X_n)\\) \u662f\u53d6\u81ea\u603b\u4f53 \\(X\\) \u7684\u4e00\u4e2a\u6837\u672c\uff0c\u603b\u4f53 \\(X \\sim f(x; \\theta), \\theta \\in \\Theta\\) \u672a\u77e5\uff0c\u5bf9\u4e8e \\(\\forall 0 &lt; \\alpha &lt; 1\\)\uff0c\u82e5\u7edf\u8ba1\u91cf \\(\\underline{\\theta} = \\underline{\\theta}(X_1, X_2, \\cdots, X_n) &lt; \\overline{\\theta}(X_1, X_2, \\cdots, X_n) = \\overline{\\theta}\\)\uff0c\u4f7f\u5f97</p> \\[ P(\\underline{\\theta} \\leqslant \\theta \\leqslant \\overline{\\theta}) = 1 - \\alpha, \\theta \\in \\Theta,  \\] <p>\u5219\u79f0 \\([\\underline{\\theta}, \\overline{\\theta}]\\) \u4e3a \\(\\theta\\) \u7684\u53cc\u4fa7 \\(1 - \\alpha\\) \u7f6e\u4fe1\u533a\u95f4\uff0c\\(\\underline{\\theta}, \\overline{\\theta}\\) \u5206\u522b\u79f0\u4e3a \\(\\theta\\) \u7684\u53cc\u4fa7 \\(1 - \\alpha\\) \u7f6e\u4fe1\u533a\u95f4\u7684\u7f6e\u4fe1\u4e0b\u9650\u548c\u7f6e\u4fe1\u4e0a\u9650\uff0c\\(1 - \\alpha\\) \u4e3a\u7f6e\u4fe1\u6c34\u5e73\uff0c\u4e00\u65e6\u6837\u672c\u6709\u89c2\u6d4b\u503c \\((x_1, x_2, \\cdots, x_n)\\)\uff0c\u5219\u79f0\u76f8\u5e94\u7684 \\([\\underline{\\theta}(x_1, x_2, \\cdots, x_n), \\overline{\\theta}(x_1, x_2, \\cdots, x_n)]\\) \u4e3a\u7f6e\u4fe1\u533a\u95f4\u7684\u89c2\u6d4b\u503c\u3002</p>"},{"location":"NoflowersNotes/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/%E6%95%B0%E6%A8%A1%E7%9A%84%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AC%94%E8%AE%B0/#_23","title":"\u6570\u5b66\u5efa\u6a21","text":"<p>\u8bc1\u660e\uff1a\u5f53 \\(m &lt; n\\) \u65f6\uff0c</p> \\[ \\begin{aligned} \\sum_{k = 0}^{n}(-1)^k(n - k)^mC_n^k = 0 \\end{aligned} \\]"},{"location":"notices/","title":"\u901a\u77e5\u4e2d\u5fc3","text":""},{"location":"notices/2025/07/08/matplotlib%E7%BB%98%E5%9B%BE%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/","title":"Matplotlib\u7ed8\u56fe\u683c\u5f0f\u89c4\u8303","text":"<p>\u4e3a\u4e86\u6570\u6a21\u6bd4\u8d5b\u4ee5\u53ca\u5c0f\u7ec4\u4f5c\u4e1a\u62a5\u544a/\u8bba\u6587\u683c\u5f0f\u7edf\u4e00\u7f8e\u89c2\uff0c\u4f7f\u7528 Matplotlib \u7ed8\u56fe\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u89c4\u8303\uff1a</p> <p>\u4f7f\u7528 Seaborn \u7f8e\u5316\uff0c\u5b57\u4f53\u91c7\u7528\u6709\u886c\u7ebf\u5b57\u4f53\uff0c\u516c\u5f0f\u4f7f\u7528latex\u6e32\u67d3</p> Python<pre><code># \u5bfc\u5165\u5e93\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport matplotlib.font_manager as fm\n\n# \u89c9\u5f97\u54ea\u79cd\u597d\u770b\nsns.set_style('whitegrid')\n# sns.set_palette(\"Paired\") # \u53ef\u4ee5\u8bbe\u7f6e\u8c03\u8272\u677f\n\n# \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\uff08SimSun\uff09\nfont_path = 'C:/Windows/Fonts/simsun.ttc'   # \u8fd9\u4e2a\u5e94\u8be5\u662f\u81ea\u5df1\u7535\u8111\u7684\u5b57\u4f53\u8def\u5f84\uff0cwindows \u7535\u8111\u5e94\u8be5\u6ca1\u95ee\u9898\nchinese_font = fm.FontProperties(fname=font_path)\n\n# \u8bbe\u7f6e\u82f1\u6587\u5b57\u4f53\uff08Times New Roman\uff09\nrcParams.update({\n    \"font.family\": \"serif\",  # \u886c\u7ebf\u5b57\u4f53\n    \"font.serif\": [\"Times New Roman\"],  # \u82f1\u6587\u4e3b\u5b57\u4f53\n    \"mathtext.fontset\": \"custom\",  # \u81ea\u5b9a\u4e49\u6570\u5b66\u5b57\u4f53\n    \"mathtext.rm\": \"Times New Roman\",  # \u6570\u5b66\u516c\u5f0f\u7f57\u9a6c\u4f53\n    \"mathtext.it\": \"Times New Roman:italic\",  # \u6570\u5b66\u516c\u5f0f\u659c\u4f53\n    \"mathtext.bf\": \"Times New Roman:bold\",  # \u6570\u5b66\u516c\u5f0f\u7c97\u4f53\n    \"axes.unicode_minus\": False,  # \u4fee\u590d\u8d1f\u53f7\u663e\u793a\n})\n\n# \u4e0b\u9762\u7684 AI \u751f\u6210\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\n\nimport numpy as np\n\n# \u751f\u6210\u6570\u636e\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# \u521b\u5efa\u56fe\u8868\nplt.figure(figsize=(8, 4))\n\n# \u82f1\u6587\u6807\u9898\uff08Times New Roman\uff09\nplt.title(\"Example Plot with Mixed Fonts\", fontsize=14)\n\n# \u4e2d\u6587\u6587\u672c\uff08SimSun\uff09\nplt.xlabel(\"\u65f6\u95f4 (\u79d2)\", fontproperties=chinese_font, fontsize=12)\nplt.ylabel(\"\u632f\u5e45\", fontproperties=chinese_font, fontsize=12)\n\n# \u6570\u5b66\u516c\u5f0f\uff08Times New Roman \u98ce\u683c\uff09\nplt.plot(x, y, label=r\"$\\sin(x)$\")\nplt.legend()\n\n# \u6dfb\u52a0\u4e2d\u6587\u6ce8\u91ca\uff08SimSun\uff09\nplt.text(5, 0.5, \"\u8fd9\u662f\u4e2d\u6587\u6ce8\u91ca\", fontproperties=chinese_font)\n\nplt.grid(True)\n\n# \u4fdd\u5b58\u56fe\u7247\u4e3a PDF\nplt.savefig(\"filename.pdf\", dpi=300, bbox_inches=\"tight\")\nplt.show()  # \u4e5f\u53ef\u4ee5\u663e\u793a\u51fa\u6765\u770b\n</code></pre> <p>\u5927\u6982\u662f\u8fd9\u6837\uff1a(\u5176\u5b9e\u662fpdf\u6587\u4ef6)</p> <p></p> <p>Seaborn \u4e3b\u9898\u6709\u8fd9\u4e9b\uff1a\u6233\u8fd9\u91cc \u8c03\u8272\u677f\u6709\u8fd9\u4e9b \u6233\u8fd9\u91cc</p> <p>\u2192 \u8fd9\u4e9b\u56fe\u600e\u4e48\u753b\u554a\u5582</p>"},{"location":"notices/2025/07/08/%E9%80%9A%E7%9F%A5%E5%85%AC%E5%91%8A%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","title":"\u901a\u77e5\u516c\u544a\u4f7f\u7528\u6307\u5357","text":"<p>\u901a\u77e5\u516c\u544a\u9875\u9762\u4e66\u5199\u89c4\u8303</p> <ul> <li>\u6587\u6863\u653e\u5728 docs/notices/posts \u4e2d</li> <li>\u5f00\u5934\u5199\u5143\u6570\u636e YAML<pre><code>---\ntitle: \u901a\u77e5\u540d\u79f0\ndate: 2025-07-08T14:05:00 (\u65f6\u95f4\u6233\u4ee5\u6b64\u4e3a\u51c6)\nhide_reading_time: true   # \u7528\u4e8e\u4e0d\u663e\u793a\u9605\u8bfb\u65f6\u95f4\uff0c\u56e0\u4e3a\u63d2\u4ef6\u5df2\u7ecf\u652f\u6301\u4e86\nauthors:\n  - Noflower\ncategories:\n  - \u6761\u76ee1\n  - \u6761\u76ee2\n  - ...\nlinks:\n  - \u81ea\u5b66\u8bb0\u5f55/CSS/css_learning.md  # \u672c\u7ad9\u94fe\u63a5\n  - Nested section:\n    - External link: https://example.com # \u4e8c\u7ea7\u94fe\u63a5\u3001\u5916\u90e8\u94fe\u63a5\npin: true # \u7f6e\u9876\n---\n</code></pre></li> <li>\u901a\u77e5\u4e2d\u5fc3\u4f1a\u81ea\u52a8\u622a\u53d6\u6587\u7ae0\u7684\u524d\u4e00\u90e8\u5206\u52a0\u8f7d\u5728\u901a\u77e5\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>&lt;!-- more --&gt;</code> \u6765\u5728\u4e3b\u754c\u9762\u4e2d\u9690\u85cf\u540e\u7eed\u5185\u5bb9\uff0c\u6b64\u65f6\uff0c\u5728\u4e3b\u754c\u9762\u4f1a\u663e\u793a \"\u7ee7\u7eed\u9605\u8bfb\" \u5b57\u6837\uff0c\u70b9\u51fb\u540e\u8df3\u8f6c\u81f3\u539f\u6587\u3002</li> <li>\u5982\u679c\u8981\u5199 <code>authors</code> \u6761\u76ee\uff0c\u8bf7\u5728 docs/notices/.authors.yml \u4e2d\u5199\u5165\uff0c<code>name</code>, <code>discription</code>, <code>avatar</code> \u4e09\u4e2a\u5b57\u6bb5\u4e3a\u5fc5\u987b\uff0c\u5176\u4e2d <code>avatar</code> \u5b57\u6bb5\u5fc5\u987b\u5199url\u3002</li> </ul>"},{"location":"%E4%BB%8B%E7%BB%8D/Notebook%E4%BB%8B%E7%BB%8D/","title":"- \u0340\u0317 \u0dc6( \u02f6'\u1d55'\u02f6)\u0dc6 \u0341\u0316-  Hihi!","text":"<p>\u6b22\u8fce\u6765Abies\u548cNoflower\u7684\u7b14\u8bb0\u672c\u901b\u901b~</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/","title":"CSS","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 311 \u4e2a\u5b57\u00a0\u00a031 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_1","title":"\u8bed\u6cd5","text":"<p>CSS \u89c4\u5219\u7531\u4e24\u4e2a\u4e3b\u8981\u7684\u90e8\u5206\u6784\u6210\uff1a\u9009\u62e9\u5668\uff0c\u4ee5\u53ca\u4e00\u6761\u6216\u591a\u6761\u58f0\u660e\u3002 \u9009\u62e9\u5668\u901a\u5e38\u662f\u9700\u8981\u6539\u53d8\u6837\u5f0f\u7684 HTML \u5143\u7d20,\u6bcf\u6761\u58f0\u660e\u7531\u4e00\u4e2a\u5c5e\u6027\u548c\u4e00\u4e2a\u503c\u7ec4\u6210\u3002\u5c5e\u6027\uff08property\uff09\u662f\u5e0c\u671b\u8bbe\u7f6e\u7684\u6837\u5f0f\u5c5e\u6027\uff08style attribute\uff09\u3002\u6bcf\u4e2a\u5c5e\u6027\u6709\u4e00\u4e2a\u503c\u3002\u5c5e\u6027\u548c\u503c\u88ab\u5192\u53f7\u5206\u5f00\u3002 CSS \u58f0\u660e\u603b\u662f\u4ee5\u5206\u53f7 ; \u7ed3\u675f\uff0c\u58f0\u660e\u603b\u4ee5\u5927\u62ec\u53f7 {} \u62ec\u8d77\u6765\u3002 \u6837\u5f0f\uff1a<code>\u9009\u62e9\u5668 {\u5c5e\u6027:\u503c; \u5c5e\u6027:\u503c;}</code> \u793a\u4f8b\uff1a<code>h1 {color:blue; font-size:12px;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#id-class","title":"id \u548c class","text":"<p>\u8bbe\u7f6e CSS \u6837\u5f0f\u9700\u8981\u5728\u5143\u7d20\u4e2d\u8bbe\u7f6e\"id\" \u548c \"class\"\u9009\u62e9\u5668\u3002</p> <p>\u5728 HTML \u548c CSS \u4e2d\u53ef\u4ee5\u4f7f\u7528 id \u9009\u62e9\u5668\u6765\u7ed9\u7279\u5b9a\u7684 HTML \u5143\u7d20\u8bbe\u7f6e\u6837\u5f0f\u3002HTML \u91cc\u7528 <code>id=\"...\"</code> \u6765\u6807\u8bb0\u4e00\u4e2a\u5143\u7d20\uff1b\u800c\u5728 CSS \u91cc\uff0c\u7528 <code>#id</code> \u540d\u7684\u65b9\u5f0f\u6765\u7ed9\u8fd9\u4e2a\u5143\u7d20\u8bbe\u7f6e\u6837\u5f0f\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>#para1 {\n  text-align: center;\n  color: red;\n}\n</code></pre> <p>class \u9009\u62e9\u5668\u7528\u6765\u7ed9\u4e00\u7ec4 HTML \u5143\u7d20\u7edf\u4e00\u8bbe\u7f6e\u6837\u5f0f\u7684\u3002\u548c id \u4e0d\u540c\uff0c\u540c\u4e00\u4e2a class \u53ef\u4ee5\u7528\u5728\u591a\u4e2a\u5143\u7d20\u4e0a\u3002class \u9009\u62e9\u5668\u5728 HTML \u4e2d\u4ee5 class \u5c5e\u6027\u8868\u793a, \u5728 CSS \u4e2d\uff0c\u7c7b\u9009\u62e9\u5668\u4ee5\u4e00\u4e2a\u70b9 . \u53f7\u663e\u793a\u3002 \u793a\u4f8b\uff1a<code>.center{text-align:center;}</code></p> <p>\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684 HTML \u5143\u7d20\u4f7f\u7528 class\u3002 \u793a\u4f8b\uff08\u6240\u6709\u7684 p \u5143\u7d20\u4f7f\u7528 class=\"center\" \u8ba9\u8be5\u5143\u7d20\u7684\u6587\u672c\u5c45\u4e2d\uff09\uff1a<code>p.center{text-align:center;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_2","title":"\u521b\u5efa","text":"\u7c7b\u578b \u5199\u5728\u54ea\u91cc\uff1f \u793a\u4f8b \u884c\u5185\u6837\u5f0f\uff08Inline\uff09 \u5199\u5728 HTML \u6807\u7b7e\u5185\u90e8 <code>&lt;p style=\"color:red\"&gt;\u5185\u5bb9&lt;/p&gt;</code> \u5185\u90e8\u6837\u5f0f\u8868\uff08Internal\uff09 \u5199\u5728 HTML \u6587\u4ef6 <code>&lt;style&gt;</code> \u6807\u7b7e\u4e2d \u653e\u5728 <code>&lt;head&gt;</code> \u91cc \u5916\u90e8\u6837\u5f0f\u8868\uff08External\uff09 \u5199\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 <code>.css</code> \u6587\u4ef6\u91cc \u7528 <code>&lt;link&gt;</code> \u5f15\u5165"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_3","title":"\u5916\u90e8\u6837\u5f0f\u8868","text":"<p>\u5f53\u6837\u5f0f\u9700\u8981\u5e94\u7528\u4e8e\u5f88\u591a\u9875\u9762\u65f6\uff0c\u5916\u90e8\u6837\u5f0f\u8868\u5c06\u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u5728\u4f7f\u7528\u5916\u90e8\u6837\u5f0f\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u6765\u6539\u53d8\u6574\u4e2a\u7ad9\u70b9\u7684\u5916\u89c2\u3002\u6bcf\u4e2a\u9875\u9762\u4f7f\u7528  \u6807\u7b7e\u94fe\u63a5\u5230\u6837\u5f0f\u8868\u3002  \u6807\u7b7e\u5728\uff08\u6587\u6863\u7684\uff09\u5934\u90e8\u3002 \u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;head&gt;\n  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\" /&gt;\n&lt;/head&gt;\n</code></pre> <p>\u5176\u4e2d<code>rel</code>\u8868\u793a\u8fd9\u4e2a\u94fe\u63a5\u7684\u662f\u4e00\u4e2a\u201c\u6837\u5f0f\u8868\u201d\u6587\u4ef6\uff08stylesheet\uff09\uff0c<code>type</code>\u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u662f CSS \u7c7b\u578b\uff08\u53ef\u4ee5\u7701\u7565\uff0c\u4e0d\u5f3a\u5236\uff09\uff0c<code>herf</code>\u6307\u5b9a\u8981\u52a0\u8f7d\u7684 CSS \u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982 mystyle.css \u662f\u540c\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 \u6837\u5f0f\u8868\u6587\u4ef6\u7684\u793a\u4f8b\uff1a</p> CSS<pre><code>hr {color:sienna;}\np {margin-left:20px;}\nbody {background-image:url;}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_4","title":"\u5185\u90e8\u6837\u5f0f\u8868","text":"<p>\u5f53\u5355\u4e2a\u6587\u6863\u9700\u8981\u7279\u6b8a\u7684\u6837\u5f0f\u65f6\uff0c\u5c31\u5e94\u8be5\u4f7f\u7528\u5185\u90e8\u6837\u5f0f\u8868\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>&lt;style&gt;</code> \u6807\u7b7e\u5728\u6587\u6863\u5934\u90e8\u5b9a\u4e49\u5185\u90e8\u6837\u5f0f\u8868\u3002 \u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;head&gt;\n  &lt;style&gt;\n    hr {\n      color: sienna;\n    }\n    p {\n      margin-left: 20px;\n    }\n    body {\n      background-image: url;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_5","title":"\u5185\u8054\u6837\u5f0f","text":"<p>\u5728\u76f8\u5173\u7684\u6807\u7b7e\u5185\u4f7f\u7528\u6837\u5f0f\uff08style\uff09\u5c5e\u6027\u3002Style \u5c5e\u6027\u53ef\u4ee5\u5305\u542b\u4efb\u4f55 CSS \u5c5e\u6027\u3002 \u793a\u4f8b\uff1a<code>&lt;p style=\"color:sienna;margin-left:20px\"&gt;\u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d\u3002&lt;/p&gt;</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_6","title":"\u591a\u91cd\u6837\u5f0f","text":"<p>\u4f18\u5148\u7ea7\uff1a\u5185\u8054\u6837\u5f0f &gt; \u5185\u90e8\u6837\u5f0f &gt; \u5916\u90e8\u6837\u5f0f\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_7","title":"\u80cc\u666f","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_8","title":"\u80cc\u666f\u989c\u8272","text":"<p>background-color \u5c5e\u6027\u5b9a\u4e49\u4e86\u5143\u7d20\u7684\u80cc\u666f\u989c\u8272\u3002\u9875\u9762\u7684\u80cc\u666f\u989c\u8272\u4f7f\u7528\u5728 body \u7684\u9009\u62e9\u5668\u4e2d\u3002 \u793a\u4f8b\uff1a<code>body {background-color:#b0c4de;}</code></p> <p>\u989c\u8272\u503c\u5b9a\u4e49\uff1a</p> <ul> <li>\u5341\u516d\u8fdb\u5236\uff0c\u5982<code>#ff0000</code></li> <li>rgb\uff0c\u5982<code>rgb(255,0,0)</code></li> <li>\u989c\u8272\u540d\u79f0\uff0c\u5982<code>\"red\"</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_9","title":"\u80cc\u666f\u56fe\u50cf","text":"<p>background-image \u5c5e\u6027\u63cf\u8ff0\u4e86\u5143\u7d20\u7684\u80cc\u666f\u56fe\u50cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u80cc\u666f\u56fe\u50cf\u8fdb\u884c\u5e73\u94fa\u91cd\u590d\u663e\u793a\uff0c\u4ee5\u8986\u76d6\u6574\u4e2a\u5143\u7d20\u5b9e\u4f53\u3002 \u793a\u4f8b\uff1a<code>body {background-image:url('paper.gif');}</code></p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b background-image \u5c5e\u6027\u4f1a\u5728\u9875\u9762\u7684\u6c34\u5e73\u6216\u8005\u5782\u76f4\u65b9\u5411\u5e73\u94fa\u3002 background-repeat \u53ef\u4ee5\u8bbe\u7f6e\u5e73\u94fa\u7684\u65b9\u5411\uff08\u53c2\u6570\u4e3a repeat-x\uff0crepeat-y \u548c no-repeat\uff09\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>body {\n  background-image: url;\n  background-repeat: repeat-x;\n}\n</code></pre> <p>background-position \u5c5e\u6027\u53ef\u4ee5\u6539\u53d8\u56fe\u50cf\u5728\u80cc\u666f\u4e2d\u7684\u4f4d\u7f6e\u3002\u53c2\u6570\uff1aleft center right\uff1btop bottom\uff1b\u548c\u4e24\u8005\u7684\u7ec4\u5408\u3002 \u793a\u4f8b\uff1a<code>...background-position:right top;...</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_10","title":"\u80cc\u666f\u5c5e\u6027\u7b80\u5199","text":"<p>\u4e3a\u4e86\u7b80\u5316\u8fd9\u4e9b\u5c5e\u6027\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5c5e\u6027\u5408\u5e76\u5728\u540c\u4e00\u4e2a\u5c5e\u6027\u4e2d\u3002\u80cc\u666f\u989c\u8272\u7684\u7b80\u5199\u5c5e\u6027\u4e3a \"background\"\u3002 \u5c5e\u6027\u503c\u987a\u5e8f\uff1a</p> <ol> <li>background-color</li> <li>background-image</li> <li>background-repeat</li> <li>background-attachment</li> <li>background-position</li> </ol> <p>\u793a\u4f8b\uff1a<code>body {background:#ffffff url('img_tree.png') no-repeat right top;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_11","title":"\u6587\u672c","text":"\u5c5e\u6027 \u4f5c\u7528 \u5e38\u7528\u53d6\u503c/\u53c2\u6570 <code>color</code> \u8bbe\u7f6e\u6587\u672c\u989c\u8272 \u989c\u8272\u540d\uff08<code>red</code>\uff09\u3001\u5341\u516d\u8fdb\u5236\uff08<code>#ff0000</code>\uff09\u3001RGB\uff08<code>rgb(255,0,0)</code>\uff09\u7b49 <code>direction</code> \u8bbe\u7f6e\u6587\u672c\u65b9\u5411\uff08\u4ece\u5de6\u5230\u53f3\u6216\u4ece\u53f3\u5230\u5de6\uff09 <code>ltr</code>\uff08\u4ece\u5de6\u5230\u53f3\uff09\u3001<code>rtl</code>\uff08\u4ece\u53f3\u5230\u5de6\uff09 <code>letter-spacing</code> \u8bbe\u7f6e\u5b57\u7b26\u4e4b\u95f4\u7684\u95f4\u8ddd \u6b63\u6570\u589e\u52a0\u95f4\u8ddd\uff1a<code>2px</code>\uff0c\u8d1f\u6570\u51cf\u5c11\u95f4\u8ddd\uff1a<code>-1px</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 <code>line-height</code> \u8bbe\u7f6e\u6587\u672c\u7684\u884c\u9ad8 \u6bd4\u4f8b\u503c\uff1a<code>1.5</code>\uff0c\u957f\u5ea6\uff1a<code>20px</code>\uff0c\u767e\u5206\u6bd4\uff1a<code>150%</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 <code>text-align</code> \u8bbe\u7f6e\u6587\u672c\u7684\u6c34\u5e73\u5bf9\u9f50 <code>left</code>\u3001<code>right</code>\u3001<code>center</code>\u3001<code>justify</code>\uff08\u4e24\u7aef\u5bf9\u9f50\uff09 <code>text-decoration</code> \u6dfb\u52a0\u6587\u672c\u4fee\u9970\u7ebf\uff08\u5982\u4e0b\u5212\u7ebf\u3001\u5220\u9664\u7ebf\uff09 <code>none</code>\u3001<code>underline</code>\uff08\u4e0b\u5212\u7ebf\uff09\u3001<code>line-through</code>\uff08\u5220\u9664\u7ebf\uff09\u3001<code>overline</code>\uff08\u4e0a\u5212\u7ebf\uff09 <code>text-indent</code> \u8bbe\u7f6e\u9996\u884c\u7f29\u8fdb \u50cf\u7d20\uff08<code>20px</code>\uff09\u3001\u767e\u5206\u6bd4\uff08<code>5%</code>\uff09 <code>text-shadow</code> \u8bbe\u7f6e\u6587\u672c\u9634\u5f71 \u4f8b\uff1a<code>2px 2px 5px gray</code>\uff08\u53f3\u4e0b\u65b9\u5411\uff0c\u6a21\u7cca 5px\uff0c\u7070\u8272\uff09 <code>text-transform</code> \u63a7\u5236\u5b57\u6bcd\u5927\u5c0f\u5199 <code>none</code>\uff08\u65e0\u53d8\u5316\uff09\u3001<code>capitalize</code>\uff08\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\uff09\u3001<code>uppercase</code>\uff08\u5168\u5927\u5199\uff09\u3001<code>lowercase</code>\uff08\u5168\u5c0f\u5199\uff09 <code>unicode-bidi</code> \u63a7\u5236\u53cc\u5411\u6587\u672c\uff08\u4e0e <code>direction</code> \u914d\u5408\u4f7f\u7528\uff09 <code>normal</code>\u3001<code>embed</code>\u3001<code>bidi-override</code> <code>vertical-align</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u5782\u76f4\u5bf9\u9f50 <code>baseline</code>\u3001<code>middle</code>\u3001<code>top</code>\u3001<code>bottom</code>\u3001<code>sub</code>\u3001<code>super</code>\u3001<code>px</code> \u503c\u7b49 <code>white-space</code> \u8bbe\u7f6e\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u6362\u884c\uff09\u7684\u5904\u7406\u65b9\u5f0f <code>normal</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>nowrap</code>\u3001<code>pre</code>\u3001<code>pre-wrap</code>\u3001<code>pre-line</code> <code>word-spacing</code> \u8bbe\u7f6e\u5355\u8bcd\u4e4b\u95f4\u7684\u95f4\u8ddd \u50cf\u7d20\uff1a<code>10px</code>\uff0c<code>normal</code>\uff08\u9ed8\u8ba4\uff09 CSS<pre><code>p {\n  color: #333;\n  text-align: justify;\n  line-height: 1.6;\n  text-indent: 2em;\n  letter-spacing: 1px;\n  word-spacing: 3px;\n  text-shadow: 1px 1px 2px gray;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_12","title":"\u5b57\u4f53","text":"\u5c5e\u6027 \u4f5c\u7528\u8bf4\u660e \u5e38\u7528\u53d6\u503c\u793a\u4f8b / \u8bf4\u660e <code>font-family</code> \u8bbe\u7f6e\u5b57\u4f53\u7cfb\u5217 <code>\"Times New Roman\"</code>\u3001<code>Arial</code>\u3001<code>\"\u5b8b\u4f53\"</code>\uff0c\u591a\u4e2a\u7528\u9017\u53f7\u5206\u9694\uff0c\u6700\u540e\u5e38\u52a0 <code>serif</code>\uff08\u886c\u7ebf\u5b57\u4f53\uff09\u3001<code>sans-serif</code>\uff08\u65e0\u886c\u7ebf\uff09\u3001<code>monospace</code>\uff08\u7b49\u5bbd\uff09\u4f5c\u4e3a\u56de\u9000\u5b57\u4f53 <code>font-style</code> \u63a7\u5236\u5b57\u4f53\u662f\u5426\u4e3a\u659c\u4f53 <code>normal</code>\uff08\u6b63\u5e38\uff09\u3001<code>italic</code>\uff08\u659c\u4f53\uff09\u3001<code>oblique</code>\uff08\u503e\u659c\uff0c\u517c\u5bb9\u6027\u8f83\u5dee\uff09 <code>font-size</code> \u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f <code>15px</code>\u3001<code>1.2em</code>\u3001<code>120%</code>\u3001<code>1rem</code> \u7b49\uff1b\u767e\u5206\u6bd4\u6216 <code>em</code> \u901a\u5e38\u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u5b57\u4f53\u5927\u5c0f <code>font-weight</code> \u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 <code>normal</code>\u3001<code>bold</code>\u3001<code>lighter</code>\u3001<code>bolder</code>\uff0c\u6216\u5177\u4f53\u6570\u5b57\u5982 <code>400</code>\u3001<code>700</code> <code>font-variant</code> \u63a7\u5236\u5c0f\u578b\u5927\u5199\u5b57\u6bcd\uff08small-caps\uff09\u663e\u793a <code>normal</code>\u3001<code>small-caps</code> <code>line-height</code> \u8bbe\u7f6e\u884c\u9ad8 <code>normal</code>\u3001\u5177\u4f53\u6570\u503c\uff1a<code>1.5</code>\u3001<code>20px</code>\u3001<code>150%</code> <code>font</code>\uff08\u7b80\u5199\uff09 \u7b80\u5199\u6240\u6709\u5b57\u4f53\u5c5e\u6027\uff08\u987a\u5e8f\uff1astyle \u2192 variant \u2192 weight \u2192 size/line-height \u2192 family\uff09 \u4f8b\u5982\uff1a<code>font: italic small-caps bold 16px/1.5 Arial, sans-serif;</code>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_13","title":"\u94fe\u63a5","text":"<p>\u94fe\u63a5\u72b6\u6001\uff1a</p> <ul> <li>a:link\uff1a\u6b63\u5e38\uff0c\u672a\u8bbf\u95ee\u8fc7\u7684\u94fe\u63a5</li> <li>a:visited\uff1a\u7528\u6237\u5df2\u8bbf\u95ee\u8fc7\u7684\u94fe\u63a5</li> <li>a:hover\uff1a\u5f53\u7528\u6237\u9f20\u6807\u653e\u5728\u94fe\u63a5\u4e0a\u65f6</li> <li>a:active\uff1a\u94fe\u63a5\u88ab\u70b9\u51fb\u7684\u90a3\u4e00\u523b</li> </ul> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>a:link {\n  color: #000000;\n}\na:visited {\n  color: #00ff00;\n}\na:hover {\n  color: #ff00ff;\n}\na:active {\n  color: #0000ff;\n}\n</code></pre> <p>\u987a\u5e8f\u89c4\u5219\uff1a</p> <ul> <li>a:hover \u5fc5\u987b\u8ddf\u5728 a:link \u548c a:visited \u540e</li> <li>a:active \u5fc5\u987b\u8ddf\u5728 a:hover \u540e</li> </ul> <p><code>background-color</code>\u6307\u5b9a\u94fe\u63a5\u7684\u80cc\u666f\u8272 \u793a\u4f8b\uff1a<code>a:link {background-color:#B2FF99;}</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_14","title":"\u5217\u8868","text":"<p>html \u4e2d\u7684\u5217\u8868\uff1a</p> <ol> <li>\u65e0\u5e8f\u5217\u8868<code>ul</code></li> <li>\u6709\u5e8f\u5217\u8868<code>ol</code></li> </ol> <p><code>list-style-type</code>\u5c5e\u6027\u6307\u5b9a\u5217\u8868\u9879\u6807\u8bb0\u7684\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>ul.a {\n  list-style-type: circle;\n}\nol.d {\n  list-style-type: lower-alpha;\n}\n</code></pre> <p>\u5177\u4f53\u53c2\u6570\uff1a</p> <ul> <li>\u65e0\u5e8f\u5217\u8868\u7684 list-style-type\uff1adics\uff08\u5b9e\u5fc3\u5706\uff09\uff0ccircle\uff08\u7a7a\u5fc3\u5706\uff09\uff0csquare\uff08\u5b9e\u5fc3\u65b9\u5757\uff09\uff0cnone\uff08\u65e0\u6807\u8bb0\uff09\u3002</li> <li>\u6709\u5e8f\u5217\u8868\u7684 list-style-type\uff1adecimal\uff081\uff0c2\u2026\u2026\uff09\uff0cdemical-leading-zero\uff0801\uff0c02\u2026\u2026\uff09\uff0clower-alpha\uff0cupper-alpha\uff0clower-roman\uff0cupper-roman\uff0cnone\u3002</li> <li>\u56fe\u50cf\uff1a\u76f4\u63a5\u7528 url\u3002</li> <li>margin\uff1a\u8bbe\u7f6e\u5185\u8fb9\u8ddd</li> <li>padding\uff1a\u8bbe\u7f6e\u5916\u8fb9\u8ddd</li> </ul> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>ul {\n  list-style-type: none;\n  padding: 0px;\n  margin: 0px;\n}\nul li {\n  background-image: url(sqpurple.gif);\n  background-repeat: no-repeat;\n  background-position: 0px 5px;\n  padding-left: 14px;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_15","title":"\u8868\u683c","text":"<ul> <li>table\uff1a\u8868\u683c\u7684\u5916\u5c42\u5bb9\u5668</li> <li>tr\uff1aTable Row \u8868\u683c\u884c</li> <li>th\uff1aTable Header \u8868\u683c\u5355\u5143\u5934</li> <li>td\uff1aTable Data \u6570\u636e\u5355\u5143\u683c</li> </ul> <p><code>border</code>\u8bbe\u7f6e\u8fb9\u6846\u3002 \u793a\u4f8b\uff1a<code>table, th, td {border:1px solid black;}</code></p> <p><code>border-collapse</code>\u8bbe\u7f6e\u8fb9\u6846\u662f\u5426\u88ab\u6298\u53e0\u6210\u4e00\u6761\u7ebf\u3002 \u793a\u4f8b\uff1a<code>table {border-collapse:collapse;}</code></p> <p><code>width</code>\u548c<code>height</code>\u8bbe\u7f6e\u8868\u683c\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u793a\u4f8b\uff08\u8868\u683c\u5bbd\u5ea6 100%\uff0c\u8868\u5934\u9ad8\u5ea6 50 \u50cf\u7d20\uff09\uff1a</p> CSS<pre><code>table {\n  width: 100%;\n}\nth {\n  height: 50px;\n}\n</code></pre> <p><code>text-align</code>\u8bbe\u7f6e\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\uff08left\uff0cright\uff0ccenter\uff0cjustfy\uff09\uff0c<code>vertical-align</code>\u8bbe\u7f6e\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\uff08top\uff0cmiddle\uff0cbottom\u2026\u2026\uff09\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>td {\n  text-align: left;\n  vertical-align: bottom;\n}\n</code></pre> <p>\u8bbe\u7f6e\u989c\u8272\uff1a \u8fb9\u6846\u989c\u8272\u5728 border \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u8bbe\u7f6e\uff0c\u6587\u672c\u6587\u5b57\u5728 color \u8bbe\u7f6e\uff0c\u80cc\u666f\u989c\u8272\u5728 background-color \u8bbe\u7f6e\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_16","title":"\u76d2\u5b50\u6a21\u578b","text":"<p>\u4ece\u5916\u5230\u5185\uff1amargin -&gt; border -&gt; padding -&gt; content \u603b\u5143\u7d20\u7684\u5bbd\u5ea6=\u5bbd\u5ea6+\u5de6\u586b\u5145+\u53f3\u586b\u5145+\u5de6\u8fb9\u6846+\u53f3\u8fb9\u6846+\u5de6\u8fb9\u8ddd+\u53f3\u8fb9\u8ddd \u603b\u5143\u7d20\u7684\u9ad8\u5ea6=\u9ad8\u5ea6+\u9876\u90e8\u586b\u5145+\u5e95\u90e8\u586b\u5145+\u4e0a\u8fb9\u6846+\u4e0b\u8fb9\u6846+\u4e0a\u8fb9\u8ddd+\u4e0b\u8fb9\u8ddd</p> <p>\u793a\u4f8b\uff1a</p> CSS<pre><code>div {\n  width: 220px;\n  padding: 10px;\n  border: 5px solid gray;\n  margin: 0;\n}\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_17","title":"\u8fb9\u6846","text":"<p><code>border-style</code>\u7528\u4e8e\u6307\u5b9a\u8981\u663e\u793a\u7684\u8fb9\u6846\u7c7b\u578b\u3002</p> \u53d6\u503c \u542b\u4e49 \u8bf4\u660e <code>none</code> \u65e0\u8fb9\u6846 \u9ed8\u8ba4\uff0c\u65e0\u8fb9\u6846\u663e\u793a <code>hidden</code> \u9690\u85cf\u8fb9\u6846 \u4e0e <code>none</code> \u7c7b\u4f3c\uff0c\u4e3b\u8981\u7528\u4e8e\u51b2\u7a81\u5904\u7406 <code>dotted</code> \u70b9\u72b6\u8fb9\u6846 \u7531\u70b9\u7ec4\u6210\u7684\u8fb9\u6846 <code>dashed</code> \u865a\u7ebf\u8fb9\u6846 \u7531\u77ed\u7ebf\u6bb5\u7ec4\u6210\u7684\u8fb9\u6846 <code>solid</code> \u5b9e\u7ebf\u8fb9\u6846 \u8fde\u7eed\u7684\u5b9e\u7ebf <code>double</code> \u53cc\u7ebf\u8fb9\u6846 \u4e24\u6761\u5b9e\u7ebf\uff0c\u5bbd\u5ea6\u4e0e <code>border-width</code> \u76f8\u540c <code>groove</code> 3D \u6c9f\u69fd\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u6c9f\u69fd\u6548\u679c <code>ridge</code> 3D \u810a\u72b6\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u810a\u72b6\u6548\u679c <code>inset</code> 3D \u5d4c\u5165\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u5d4c\u5165\u6548\u679c <code>outset</code> 3D \u7a81\u51fa\u8fb9\u6846 \u6839\u636e <code>border-color</code> \u663e\u793a\u7a81\u51fa\u6548\u679c <p><code>border-width</code>\u8bbe\u7f6e\u8fb9\u6846\u5bbd\u5ea6\u3002 \u53c2\u6570\uff1athick\uff0cmedium\uff0cthin\uff0c\u6216\u7528 px \u8bbe\u7f6e\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p.one {\n  border-style: solid;\n  border-width: 5px;\n}\n</code></pre> <p><code>border-color</code>\u8bbe\u7f6e\u8fb9\u6846\u989c\u8272\u3002 border-color \u5355\u72ec\u4f7f\u7528\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u5fc5\u987b\u5f97\u5148\u4f7f\u7528 border-style \u6765\u8bbe\u7f6e\u8fb9\u6846\u6837\u5f0f\u3002 \u989c\u8272\u53ef\u8bbe\u7f6e\u4e3a transparent\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p.one {\n  border-style: solid;\n  border-color: red;\n}\n</code></pre> <p>border-top-style\uff0cborder-right-style\uff0cborder-bottom-style\uff0cborder-left-style \u53ef\u4ee5\u7ed9\u4e0d\u540c\u4fa7\u9762\u8bbe\u7f6e\u4e0d\u540c\u8fb9\u6846\u3002 \u793a\u4f8b\uff1a</p> CSS<pre><code>p {\n  border-top-style: dotted;\n  border-right-style: solid;\n  border-bottom-style: dotted;\n  border-left-style: solid;\n}\n</code></pre> <p>\u4e0a\u9762\u56db\u4e2a\u53ef\u4ee5\u5408\u5e76\u6210 border-style \u4e00\u4e2a\u5c5e\u6027\u3002</p> <ul> <li>4 \u4e2a\u53c2\u6570\uff1a\u4e0a\uff0c\u53f3\uff0c\u4e0b\uff0c\u5de6</li> <li>3 \u4e2a\u53c2\u6570\uff1a\u4e0a\uff0c\u5de6\u53f3\uff0c\u4e0b</li> <li>2 \u4e2a\u53c2\u6570\uff1a\u4e0a\u4e0b\uff0c\u5de6\u53f3</li> <li>1 \u4e2a\u53c2\u6570\uff1a\u56db\u5468</li> </ul> <p><code>border</code>\u662f border-width\uff0cborder-style\uff0cborder-color \u7684\u7b80\u5199</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_18","title":"\u8f6e\u5ed3","text":"\u5c5e\u6027\u540d \u8bf4\u660e \u5e38\u7528\u503c\uff08\u793a\u4f8b\uff09 CSS \u7248\u672c <code>outline</code> \u5728\u4e00\u6761\u58f0\u660e\u4e2d\u8bbe\u7f6e\u6240\u6709\u8f6e\u5ed3\u5c5e\u6027 \u7ec4\u5408 <code>outline-color</code>\u3001<code>outline-style</code>\u3001<code>outline-width</code> \u7b49 CSS2 <code>outline-color</code> \u8bbe\u7f6e\u8f6e\u5ed3\u989c\u8272 \u989c\u8272\u540d\u79f0\uff08<code>red</code>\uff09\u3001\u5341\u516d\u8fdb\u5236\uff08<code>#ff0000</code>\uff09\u3001RGB\uff08<code>rgb(255,0,0)</code>\uff09\u3001<code>invert</code>\u3001<code>inherit</code> CSS2 <code>outline-style</code> \u8bbe\u7f6e\u8f6e\u5ed3\u6837\u5f0f <code>none</code>\u3001<code>dotted</code>\u3001<code>dashed</code>\u3001<code>solid</code>\u3001<code>double</code>\u3001<code>groove</code>\u3001<code>ridge</code>\u3001<code>inset</code>\u3001<code>outset</code>\u3001<code>inherit</code> CSS2 <code>outline-width</code> \u8bbe\u7f6e\u8f6e\u5ed3\u5bbd\u5ea6 \u5173\u952e\u8bcd\uff1a<code>thin</code>\u3001<code>medium</code>\u3001<code>thick</code>\uff1b\u957f\u5ea6\u5355\u4f4d\uff08\u5982 <code>2px</code>\uff09\uff1b<code>inherit</code> CSS2"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_19","title":"\u5916\u8fb9\u8ddd","text":"\u5c5e\u6027 \u8bf4\u660e \u53d6\u503c/\u793a\u4f8b <code>margin</code> \u7b80\u5199\u5c5e\u6027\uff0c\u4e00\u6b21\u6027\u8bbe\u7f6e\u56db\u4e2a\u65b9\u5411\u7684\u5916\u8fb9\u8ddd <code>margin: 25px 50px 75px 100px;</code> \uff08\u4e0a \u53f3 \u4e0b \u5de6\uff09 <code>margin-top</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0a\u5916\u8fb9\u8ddd <code>100px</code>, <code>2em</code>, <code>10%</code>, <code>auto</code> <code>margin-right</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u53f3\u5916\u8fb9\u8ddd \u540c\u4e0a <code>margin-bottom</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0b\u5916\u8fb9\u8ddd \u540c\u4e0a <code>margin-left</code> \u8bbe\u7f6e\u5143\u7d20\u7684\u5de6\u5916\u8fb9\u8ddd \u540c\u4e0a \u53d6\u503c \u8bf4\u660e <code>auto</code> \u7531\u6d4f\u89c8\u5668\u51b3\u5b9a\u8fb9\u8ddd\u5927\u5c0f\uff0c\u5e38\u7528\u4e8e\u6c34\u5e73\u5c45\u4e2d <code>&lt;length&gt;</code> \u56fa\u5b9a\u957f\u5ea6\uff0c\u5982\u50cf\u7d20\uff08px\uff09\u3001\u70b9\uff08pt\uff09\u3001em\u3001cm \u7b49 <code>%</code> \u767e\u5206\u6bd4\u503c\uff0c\u76f8\u5bf9\u4e8e\u5305\u542b\u5757\u5bbd\u5ea6 \u8d1f\u503c\uff08\u5982 <code>-10px</code>\uff09 \u5141\u8bb8\u4f7f\u7528\u8d1f\u503c\uff0c\u5b9e\u73b0\u5185\u5bb9\u91cd\u53e0 <p>\u7b80\u5199\u5c5e\u6027 <code>margin</code> \u7684\u7528\u6cd5\u793a\u4f8b\uff1a</p> \u5199\u6cd5 \u542b\u4e49\u63cf\u8ff0 <code>margin: 25px;</code> \u4e0a\u3001\u53f3\u3001\u4e0b\u3001\u5de6\u8fb9\u8ddd\u5747\u4e3a 25px <code>margin: 25px 50px;</code> \u4e0a\u4e0b 25px\uff0c\u5de6\u53f3 50px <code>margin: 25px 50px 75px;</code> \u4e0a 25px\uff0c\u5de6\u53f3 50px\uff0c\u4e0b 75px <code>margin: 25px 50px 75px 100px;</code> \u4e0a 25px\uff0c\u53f3 50px\uff0c\u4e0b 75px\uff0c\u5de6 100px"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_20","title":"\u586b\u5145","text":"\u5c5e\u6027\u540d \u8bf4\u660e \u793a\u4f8b <code>padding</code> \u7b80\u5199\u5c5e\u6027\uff0c\u8bbe\u7f6e\u56db\u4e2a\u65b9\u5411\u7684\u5185\u8fb9\u8ddd <code>padding: 10px 20px 30px 40px</code> <code>padding-top</code> \u8bbe\u7f6e\u5143\u7d20\u9876\u90e8\u7684\u5185\u8fb9\u8ddd <code>padding-top: 10px</code> <code>padding-right</code> \u8bbe\u7f6e\u5143\u7d20\u53f3\u4fa7\u7684\u5185\u8fb9\u8ddd <code>padding-right: 20px</code> <code>padding-bottom</code> \u8bbe\u7f6e\u5143\u7d20\u5e95\u90e8\u7684\u5185\u8fb9\u8ddd <code>padding-bottom: 30px</code> <code>padding-left</code> \u8bbe\u7f6e\u5143\u7d20\u5de6\u4fa7\u7684\u5185\u8fb9\u8ddd <code>padding-left: 40px</code> \u5199\u6cd5\u793a\u4f8b \u542b\u4e49\u8bf4\u660e <code>padding: 25px</code> \u56db\u4e2a\u65b9\u5411\u5168\u90e8\u4e3a 25px <code>padding: 25px 50px</code> \u4e0a\u4e0b\u4e3a 25px\uff0c\u5de6\u53f3\u4e3a 50px <code>padding: 25px 50px 75px</code> \u4e0a\u4e3a 25px\uff0c\u5de6\u53f3\u4e3a 50px\uff0c\u4e0b\u4e3a 75px <code>padding: 25px 50px 75px 100px</code> \u4e0a\u4e3a 25px\uff0c\u53f3\u4e3a 50px\uff0c\u4e0b\u4e3a 75px\uff0c\u5de6\u4e3a 100px <p><code>padding</code> \u652f\u6301\u7684\u5355\u4f4d\uff1a</p> \u5355\u4f4d \u793a\u4f8b \u8bf4\u660e <code>px</code> <code>padding: 20px</code> \u50cf\u7d20 <code>em</code> <code>padding: 2em</code> \u76f8\u5bf9\u4e8e\u5f53\u524d\u5b57\u4f53\u5927\u5c0f <code>%</code> <code>padding: 10%</code> \u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u7684\u5bbd\u5ea6 <code>rem</code> <code>padding: 1rem</code> \u76f8\u5bf9\u4e8e\u6839\u5143\u7d20\u7684\u5b57\u4f53\u5927\u5c0f <code>pt</code> <code>padding: 10pt</code> \u70b9\uff08\u5728\u7f51\u9875\u4e2d\u8f83\u5c11\u7528\uff09 <p><code>padding</code> \u7279\u6027\uff1a</p> <ul> <li><code>padding</code> \u4e0d\u5f71\u54cd\u5185\u5bb9\u5927\u5c0f\uff0c\u4f46\u4f1a\u589e\u5927\u5143\u7d20\u603b\u5c3a\u5bf8\uff08\u9664\u975e\u4f7f\u7528 <code>box-sizing: border-box</code>\uff09\u3002</li> <li><code>padding</code> \u586b\u5145\u7684\u533a\u57df\u4f1a\u88ab\u80cc\u666f\u989c\u8272\u8986\u76d6\u3002</li> <li><code>padding</code> \u662f\u5185\u8fb9\u8ddd\uff0c\u4e0d\u540c\u4e8e <code>margin</code>\uff08\u5916\u8fb9\u8ddd\uff09\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/CSS/css_learning/#_21","title":"\u5206\u7ec4\u548c\u5d4c\u5957\u9009\u62e9\u5668","text":"<p>\u5206\u7ec4\u9009\u62e9\u5668\uff1a\u5c06\u591a\u4e2a\u9009\u62e9\u5668\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002 \u793a\u4f8b\uff1a CSS<pre><code>h1, h2, p {\n  color:green;\n}\n</code></pre></p> <p>\u5d4c\u5957\u9009\u62e9\u5668\uff1a\u9002\u7528\u4e8e\u9009\u62e9\u5668\u5185\u90e8\u7684\u9009\u62e9\u5668\u7684\u6837\u5f0f\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u8bbe\u7f6e\u4e86\u56db\u4e2a\u6837\u5f0f\uff1a - <code>p{ }</code>: \u4e3a\u6240\u6709 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>.marked{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u7684\u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>.marked p{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u5143\u7d20\u5185\u7684 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002 - <code>p.marked{ }</code>: \u4e3a\u6240\u6709 class=\"marked\" \u7684 p \u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u6837\u5f0f\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/","title":"Git","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 873 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#myproject","title":"\u7b80\u5316\u7248\u672c\uff1a\u4e0a\u4f20 MyProject \u9879\u76ee","text":"<ol> <li>\u5728\u672c\u5730\u521b\u5efa\u9879\u76ee\u5e76\u521d\u59cb\u5316 Git \u4ed3\u5e93</li> </ol> Bash<pre><code>mkdir MyProject          # \u521b\u5efa\u9879\u76ee\u6587\u4ef6\u5939\ncd MyProject             # \u8fdb\u5165\u76ee\u5f55\ngit init                 # \u521d\u59cb\u5316 Git \u4ed3\u5e93\n</code></pre> <ol> <li>\u521b\u5efa\u6587\u4ef6\u5e76\u63d0\u4ea4</li> </ol> Bash<pre><code>git add .                # \u6dfb\u52a0\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit commit -m \"&lt;comment&gt;\"\n</code></pre> <ol> <li>\u5728 GitHub \u4e0a\u65b0\u5efa\u4e00\u4e2a\u7a7a\u4ed3\u5e93</li> <li>\u5c06\u672c\u5730\u4ed3\u5e93\u8fde\u63a5\u5230 GitHub \u4ed3\u5e93</li> </ol> Bash<pre><code>git remote add origin &lt;URL&gt;\n</code></pre> <ol> <li>\u63a8\u9001\u672c\u5730\u5185\u5bb9\u5230 GitHub</li> </ol> Bash<pre><code>git branch -M main             # \u786e\u4fdd\u5206\u652f\u53eb main\uff08GitHub \u9ed8\u8ba4\u4e3b\u5206\u652f\uff09\ngit push -u origin main        # \u63a8\u9001\u5230 GitHub \u5e76\u7ed1\u5b9a\u8fdc\u7a0b\u4e3b\u5206\u652f\n</code></pre> \u6ce8\u610f <p>\u5982\u679c\u672c\u5730\u548c\u8fdc\u7a0b\u540c\u65f6\u5bf9\u67d0\u4e2a\u6587\u4ef6\u66f4\u6539\uff0c\u53ef\u80fd\u56e0\u4e3a error: Your local changes to the following files would be overwritten by merge \u5bfc\u81f4\u65e0\u6cd5\u62c9\u53d6\u3002  </p> <p>\u53ef\u4ee5\u6309\u4ee5\u4e0b\u65b9\u6cd5\u6267\u884c\uff1a</p> <ol> <li><code>git stash</code> \u4fdd\u5b58\u672c\u5730\u6539\u52a8</li> <li><code>git pull origin main</code> \u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801</li> <li><code>git stash pop</code> \u6062\u590d\u672c\u5730\u4fee\u6539\uff0c\u53ef\u80fd\u9700\u8981\u624b\u52a8\u9009\u62e9\u4fdd\u7559\u54ea\u90e8\u5206\u4fee\u6539</li> </ol>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_1","title":"\u63d0\u4ea4","text":"<ul> <li><code>git commit</code> \u521b\u5efa\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_2","title":"\u5206\u652f","text":"<ul> <li><code>git branch &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f</li> <li><code>git branch A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A</li> <li><code>git checkout &lt;BranchName&gt;</code> \u5207\u6362\u5206\u652f</li> <li><code>git checkout -b &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f</li> <li> <p><code>git checkout -b A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A\uff0c\u5e76\u5207\u6362\u5230\u5206\u652f A</p> </li> <li> <p><code>git merge &lt;BranchName&gt;</code> \u5c06 BranchName \u5408\u5e76\u5230 main\uff08\u5f53\u524d checkout \u7684\u5206\u652f\uff09\uff0c\u6b64\u65f6 main \u6709\u591a\u4e2a parent\uff0c\u5305\u542b\u4e86\u4e24\u4e2a\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55</p> </li> <li><code>git checkout A; git merge main</code> \u5c06 main \u5408\u5e76\u5230 A</li> <li><code>git rebase &lt;BranchName&gt;</code> \u5c06\u5f53\u524d checkout \u7684\u5206\u652f\u7684\u63d0\u4ea4\u642c\u8fd0\u5230 BranchName</li> </ul> <p>\u5c06 A \u5408\u5e76\u5230 main:</p> Text Only<pre><code>git checkout A\ngit rebase main\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_3","title":"\u79fb\u52a8","text":"<p>HEAD \u603b\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u4e0a\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55\u3002\u5206\u79bb\u7684 HEAD \u5c31\u662f\u8ba9\u5176\u6307\u5411\u4e86\u67d0\u4e2a\u5177\u4f53\u7684\u63d0\u4ea4\u8bb0\u5f55\u800c\u4e0d\u662f\u5206\u652f\u540d\u3002</p> <ul> <li><code>git checkout &lt;Name&gt;</code> \u4f7f HEAD \u6307\u5411 Name\uff08\u53ef\u4ee5\u662f\u67d0\u4e2a\u63d0\u4ea4\uff0c\u57fa\u4e8e\u54c8\u5e0c\u503c\u6307\u5b9a\u63d0\u4ea4\u8bb0\u5f55\uff09</li> </ul> <p>\u76f8\u5bf9\u5f15\u7528\uff1a \u4f7f\u7528<code>^</code>\u5411\u4e0a\u79fb\u52a8 1 \u4e2a\u63d0\u4ea4\u8bb0\u5f55 \u4f7f\u7528<code>~&lt;num&gt;</code>\u5411\u4e0a\u79fb\u52a8\u591a\u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5982<code>~3</code></p> <ul> <li><code>git checkout HEAD^</code> \u4f7f HEAD \u6307\u5411\u5f53\u524d HEAD\uff08\u4e00\u822c\u662f\u6700\u8fd1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff09\u7684 parent</li> <li> <p><code>git checkout HEAD~3</code> \u4f7f HEAD \u540e\u9000 3 \u6b65</p> </li> <li> <p><code>git branch -f A</code> \u5f3a\u5236\u5c06\u5206\u652f A \u6307\u5411\u5f53\u524d HEAD</p> </li> <li><code>git branch -f A B</code> \u5f3a\u5236\u8ba9\u5206\u652f A \u6307\u5411\u63d0\u4ea4 B \u6240\u5728\u7684\u4f4d\u7f6e</li> <li> <p><code>git branch -f main HEAD~3</code> \u5c06 main \u5206\u652f\u5f3a\u5236\u6307\u5411 HEAD \u7684\u7b2c 3 \u7ea7 parent \u63d0\u4ea4</p> </li> <li> <p><code>git cherry-pick &lt;CommitName&gt;</code> \u5c06\u5176\u4ed6\u5206\u652f\u4e0a\u7684\u63d0\u4ea4 CommitName \u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git cherry-pick c2 c4</code> \u5c06 c2\uff0cc4 \u4f9d\u6b21\u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git rebase -i &lt;CommitName&gt;</code> \u4ece CommitName \u7684\u4e0b\u4e00\u4e2a\u63d0\u4ea4\u5f00\u59cb\uff08\u4e0d\u5305\u62ec\u5b83\uff09\uff0c\u5217\u51fa\u76f4\u5230\u5f53\u524d\u5206\u652f HEAD \u7684\u6240\u6709\u63d0\u4ea4\uff0c\u4f9b\u4f60\u5728\u4ea4\u4e92\u5f0f\u754c\u9762\uff08interactive\uff09\u4e2d\u7f16\u8f91\u3001\u5408\u5e76\u3001\u91cd\u6392\u3001\u6539\u5199\u7b49</p> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_4","title":"\u64a4\u9500","text":"<ul> <li><code>git reset HEAD~2</code> \u56de\u9000 2 \u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4f46\u5bf9\u8fdc\u7a0b\u5206\u652f\u65e0\u6548</li> <li><code>git revert HEAD</code> \u521b\u5efa\u66f4\u6539\u7684\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_5","title":"\u8fdc\u7a0b\u64cd\u4f5c","text":"<p>\u8fdc\u7a0b\u5206\u652f\u547d\u540d\uff1a<code>\u8fdc\u7a0b\u4ed3\u5e93\u540d/\u5206\u652f\u540d</code>\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u540d\u9ed8\u8ba4\u4e3a<code>origin</code>\u3002\u5207\u6362\u5230\u8fdc\u7a0b\u5206\u652f\u65f6\uff0c\u81ea\u52a8\u8fdb\u5165\u5206\u79bb HEAD \u72b6\u6001\u3002</p> <ul> <li><code>git clone</code> \u590d\u5236\u6574\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u5206\u652f\uff0c\u5e76\u8ddf\u8e2a\u8fdc\u7a0b\u7684\u540c\u540d\u5206\u652f\u3002</li> <li><code>git fetch</code> \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\u672c\u5730\u4ed3\u5e93\u4e2d\u7f3a\u5931\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5e76\u66f4\u65b0\u8fdc\u7a0b\u5206\u652f\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u5c06\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\u66f4\u65b0\u6210\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u76f8\u5e94\u5206\u652f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u4f46\u4e0d\u4f1a\u6539\u53d8\u672c\u5730\u4ed3\u5e93\u7684\u72b6\u6001\uff09</li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e\u5148<code>git fetch</code>\u518d<code>git merge</code></li> <li><code>git push</code> \u5c06\u53d8\u66f4\u4e0a\u4f20\u5230\u6307\u5b9a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e0a\u5408\u5e76\u65b0\u63d0\u4ea4\u8bb0\u5f55</li> <li><code>git push origin A</code> \u628a\u672c\u5730\u7684\u5206\u652f A \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 origin\uff08\u9ed8\u8ba4\uff09\uff0c\u5728\u8fdc\u7a0b\u4e5f\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u5206\u652f A</li> </ul> <p>\u5f53\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0\u540e\uff0c\u76f4\u63a5<code>git push</code>\u4f1a\u7531\u4e8e\u5386\u53f2\u504f\u79fb\u800c\u5931\u8d25\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5148\u4f7f\u5de5\u4f5c\u57fa\u4e8e\u6700\u65b0\u7684\u8fdc\u7a0b\u5206\u652f</p> <ul> <li><code>git fetch; git rebase o/main; git push</code> \u7528<code>git fetch</code>\u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u7528 <code>rebase</code> \u5c06\u6211\u4eec\u7684\u5de5\u4f5c\u79fb\u52a8\u5230\u6700\u65b0\u7684\u63d0\u4ea4\u8bb0\u5f55\u4e0b\uff0c\u6700\u540e\u518d\u7528 - <code>git push</code> \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git fetch; git merge o/main; git push</code> \u7528 <code>git fetch</code> \u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u5408\u5e76\u4e86\u65b0\u53d8\u66f4\u5230\u6211\u4eec\u7684\u672c\u5730\u5206\u652f\uff08\u4e3a\u4e86\u5305\u542b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u66f4\uff09\uff0c\u6700\u540e\u6211\u4eec\u7528 <code>git push</code> \u628a\u5de5\u4f5c\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git pull --rebase</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git rebase o/main</code></li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git merge o/main</code></li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#ssh","title":"SSH","text":"<p>\u4ee5\u4e0b\u64cd\u4f5c\u5747\u5728\u7ec8\u7aef\u6267\u884c\u3002</p> <ol> <li><code>cd ~/.ssh</code> \u5982\u679c\u62a5\u9519\u6267\u884c\u7b2c 2 \u6b65\uff0c\u5982\u679c\u4e0d\u62a5\u9519\u6267\u884c\u7b2c 3 \u6b65\u3002</li> <li><code>ssh-keygen -t rsa -b 4096 -C \"&lt;\u90ae\u7bb1&gt;\"</code> \u521b\u5efa SSH \u5bc6\u94a5</li> <li><code>cd ~/.ssh</code>\u518d<code>cat id_rsa.pub</code> \u590d\u5236\u516c\u94a5\u5185\u5bb9</li> <li>GitHub -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key -&gt; \u7c98\u8d34</li> <li><code>ssh -T git@github.com</code> \u68c0\u9a8c\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff08\u7b2c 1 \u6b21\u9700\u8f93\u5165 yes\uff09</li> <li><code>git remote -v</code> \u68c0\u67e5\u8fdc\u7a0b\u4ed3\u5e93 URL</li> <li><code>git remote set-url origin git@github.com:&lt;http\u7684URL&gt;</code> \u4fee\u6539\u4e3a SSH \u5730\u5740</li> <li>\u6b63\u5e38\u6267\u884c git \u64cd\u4f5c</li> </ol>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/","title":"JavaScript","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 61 \u4e2a\u5b57\u00a0\u00a013 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"<p><code>windows.alert()</code>\u5f39\u51fa\u8b66\u544a\u6846</p> <p><code>document.write()</code>\u5c06\u5185\u5bb9\u5199\u5165 HTML</p> <p><code>innerHTML</code>\u5199\u5165\u5230 HTML \u5143\u7d20 \u901a\u8fc7 id \u4fee\u6539\u5185\u5bb9\uff1a<code>document.getElementById(\"demo\").innerHTML=\"\u4fee\u6539\u540e\u7ed3\u679c\";</code></p> <p><code>console.log()</code>\u5199\u5165\u5230\u63a7\u5236\u53f0</p> <p>\u5bf9\u8c61\uff1a<code>\u5bb9\u5668\u540d = {\u952e:\u503c, \u952e:\u503c}</code> \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let person = {\n  name: \"Abies\",\n  age: 3,\n  school: \"ZJU\",\n};\n</code></pre> <p>\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027\uff1a<code>person.name</code>\u6216<code>person[\"name\"]</code> \u5bf9\u8c61\u4e2d\u5305\u542b\u51fd\u6570\uff1a</p> JavaScript<pre><code>let person = {\n  name: \"Abies\",\n  school: \"ZJU\",\n  nameAndSchool: function () {\n    return this.name + \" \" + this.school;\n  },\n};\n\ndocument.getElementById(\"demo\").innerHTML = person.nameAndSchool();\n</code></pre> <p>\u51fd\u6570\uff1a</p> JavaScript<pre><code>function \u51fd\u6570\u540d(\u53c2\u6570) {\n  \u6267\u884c\u4ee3\u7801;\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;script&gt;\n      function myAlert() {\n        alert(\"Hello World!\");\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;button onclick=\"myAlert()\"&gt;A button&lt;/button&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u4e8b\u4ef6\uff1a<code>&lt;HTML\u5143\u7d20 \u4e8b\u4ef6=\"\u6267\u884c\u7684\u4ee3\u7801\"&gt;</code> \u5e38\u89c1\u7684\u4e8b\u4ef6\uff1a</p> <ul> <li>onchange\uff1aHTMl \u5143\u7d20\u6539\u53d8</li> <li>onclick\uff1a\u70b9\u51fb\u5143\u7d20</li> <li>onmouseover\uff1a\u9f20\u6807\u60ac\u505c</li> <li>onmouseout\uff1a\u9f20\u6807\u79fb\u5f00</li> <li>onkeydown\uff1a\u6309\u4e0b\u6309\u952e</li> <li>onload\uff1a\u9875\u9762\u52a0\u8f7d\u5b8c\u6210</li> </ul> <p>\u5b57\u7b26\u4e32\uff1a\u5b57\u7b26\u4e32\u51fd\u6570</p> <p>\u6a21\u677f\u5b57\u7b26\u4e32\uff1a\u7528<code>`\u5305\u56f4\uff0c\u4e2d\u95f4\u53ef\u7528${}\u4f7f\u7528\u53d8\u91cf    \u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u76f4\u63a5\u7528</code>+`\u62fc\u63a5 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>const name = \"Abies\";\nconst age = 3;\nconst message = `My name is ${name} and my age is ${age}.`;\n</code></pre> <p>\u53ef\u4f5c\u4e3a HTML \u7684\u6a21\u677f \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let header = \"\";\nlet tags = [\"RUNOOB\", \"GOOGLE\", \"TAOBAO\"];\n\nlet html = `&lt;h2&gt;${header}&lt;/h2&gt;&lt;ul&gt;`;\nfor (const x of tags) {\n  html += `&lt;li&gt;${x}&lt;/li&gt;`;\n}\n\nhtml += `&lt;/ul&gt;`;\n</code></pre> <p>\u9009\u62e9\u6761\u4ef6\uff1a<code>if ... else if ... else ...</code></p> <p>switch \u8bed\u53e5\uff1a</p> JavaScript<pre><code>switch (n) {\n  case 1:\n    \u8bed\u53e5;\n    break;\n  case 2:\n    \u8bed\u53e5;\n    break;\n  default:\n    \u8bed\u53e5;\n}\n</code></pre> <p>for \u5faa\u73af\uff1a</p> JavaScript<pre><code>for (let i = 0; i &lt; cars.length; i++) {\n  document.write(cars[i] + \"&lt;br&gt;\");\n}\n</code></pre> <p>\u6216</p> JavaScript<pre><code>for (x in cars) {\n  document.write(x + \"&lt;br&gt;\");\n}\n</code></pre> <p>while \u5faa\u73af\uff1a</p> JavaScript<pre><code>while (\u6761\u4ef6) {\n  \u8bed\u53e5;\n}\n</code></pre> <p><code>typeof</code>\u8fd0\u7b97\u7b26\u68c0\u67e5\u53d8\u91cf\u7c7b\u578b \u7c7b\u578b\u6709\uff1astring, number, boolean, object, function, bigint, undefined, date, array, null... <code>constructor</code>\u5c5e\u6027\u8fd4\u56de\u53d8\u91cf\u7684\u6784\u9020\u51fd\u6570 \u793a\u4f8b\uff08\u7528 constructor \u5224\u65ad\u662f\u4e0d\u662f\u6570\u7ec4\uff09\uff1a</p> JavaScript<pre><code>function isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") &gt; -1;\n}\n</code></pre> <p>\uff08\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u6bb5\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff1a\u5148 toString()\uff0c\u518d\u68c0\u67e5 indexOf()\uff09</p> <p>\u7c7b\u578b\u8f6c\u6362\u65b9\u6cd5\uff1a<code>String()</code>\u548c<code>toString()</code>\uff0c<code>Number()</code>... \u5b57\u7b26\u4e32\u548c\u6570\u5b57\u76f8\u52a0\uff0c\u5c06\u6570\u5b57\u53d8\u4e3a\u5b57\u7b26\u4e32</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a \u57fa\u672c\u7684\u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u6559\u7a0b</p> <p>\u9519\u8bef\u5c1d\u8bd5\uff1a <code>try</code>\u548c<code>catch</code>\u6210\u5bf9\u51fa\u73b0\uff0ctry \u8bed\u53e5\u5c1d\u8bd5\u8fd0\u884c\uff0ccatch \u8bed\u53e5\u6355\u83b7 try \u90e8\u5206\u7684\u9519\u8bef\u3002finally \u4e2d\u7684\u8bed\u53e5\u4e00\u5b9a\u4f1a\u6267\u884c\u3002</p> JavaScript<pre><code>try {\n    if (...) throw \"...\";\n} catch(err) {\n    \u5904\u7406\u5f02\u5e38\n} finally {\n    \u7ed3\u675f\u5904\u7406\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction() {\n  let message, x;\n  message = document.getElementById(\"message\");\n  message.innerHTML = \"\";\n  x = document.getElementById(\"demo\").value;\n  try {\n    if (x == \"\") throw \"\u7a7a\";\n    if (isNaN(x)) throw \"\u4e0d\u662f\u6570\u5b57\";\n    x = Number(x);\n    if (x &lt; 5) throw \"\u592a\u5c0f\";\n    if (x &gt; 10) throw \"\u592a\u5927\";\n  } catch (err) {\n    message.innerHTML = \"\u9519\u8bef\uff1a\" + err;\n  }\n}\n</code></pre> <p>\u8c03\u8bd5\uff1a\u7528<code>console.log()</code>\u8f93\u51fa\u5230\u63a7\u5236\u53f0</p> <p>\u58f0\u660e\u63d0\u5347\uff1a\u53d8\u91cf\u7684\u58f0\u660e\u548c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u88ab\u89e3\u91ca\u5668\u81ea\u52a8\u63d0\u5347\u5230\u6700\u9876\u90e8 \u800c\u521d\u59cb\u5316\u4e0d\u4f1a\u63d0\u5347 \u4f1a\u63d0\u5347\uff1a</p> JavaScript<pre><code>let x;\nx = 1;\n</code></pre> <p>\u4e0d\u4f1a\u63d0\u5347\uff1a</p> JavaScript<pre><code>let x = 1;\n</code></pre> <p><code>==</code>\u846b\u82a6\u6570\u636e\u7c7b\u578b\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d<code>x == y</code>\u4e3a true</p> JavaScript<pre><code>let x = 10;\nlet y = \"10\";\n</code></pre> <p>\u800c<code>===</code>\u4e3a\u4e25\u683c\u76f8\u7b49\uff0c\u9700\u8981\u53d8\u91cf\u7c7b\u578b\u4e5f\u76f8\u7b49\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d<code>x === y</code>\u4e3a false</p> <p>\u8868\u5355\uff0cHTML \u4ee3\u7801\uff1a</p> HTML<pre><code>&lt;form name=\"myForm\" action=\"/submit\" method=\"get\"&gt;\n  \u59d3\u540d\uff1a&lt;input type=\"text\" name=\"fname\" /&gt;\n  &lt;input type=\"submit\" value=\"\u63d0\u4ea4\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>\u5224\u65ad\u8868\u5355\u5b57\u6bb5 fname \u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u5f39\u51fa\u4fe1\u606f</p> JavaScript<pre><code>function validateForm() {\n  let x = document.forms[\"myForm\"][\"fname\"].value;\n  if (x == null || x == \"\") {\n    alert(\"\u9700\u8981\u8f93\u5165\u540d\u5b57\");\n    return false;\n  }\n}\n</code></pre> <p>\uff08\u89e3\u91ca\uff1a<code>document</code>\u8868\u793a\u6574\u4e2a\u7f51\u9875\u7684 DOM \u6587\u4ef6\uff0c<code>document.forms</code>\u8868\u793a\u7f51\u9875\u4e2d\u6240\u6709\u8868\u5355\u7684\u96c6\u5408\uff0c<code>document.forms[\"formName\"]</code>\u8868\u793a\u4ece\u6240\u6709\u8868\u5355\u4e2d\u53d6\u51fa\u540d\u4e3a formName \u7684\u8868\u5355\uff0c<code>document.forms[\"formName\"][\"name\"]</code>\u8868\u793a\u4ece formName \u8868\u5355\u4e2d\u53d6\u51fa name \u5b57\u6bb5\uff0c<code>.value</code>\u8868\u793a\u5f97\u5230\u5b9e\u9645\u7684\u503c\u3002\uff09</p> <p>\u793a\u4f8b\uff0c\u9a8c\u8bc1\u8f93\u5165\u7684\u6570\u5b57\u4e3a 1~9\uff1a</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;h1&gt;JavaScript \u9a8c\u8bc1\u8f93\u5165&lt;/h1&gt;\n    &lt;p&gt;\u8bf7\u8f93\u5165 1 \u5230 10 \u4e4b\u95f4\u7684\u6570\u5b57\uff1a&lt;/p&gt;\n    &lt;input id=\"numb\" /&gt;\n    &lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u63d0\u4ea4&lt;/button&gt;\n    &lt;p id=\"demo\"&gt;&lt;/p&gt;\n    &lt;script&gt;\n      function myFunction() {\n        let x, text;\n        x = document.getElementById(\"numb\").value;\n        if (isNaN(x) || x &lt; 1 || x &gt; 10) {\n          text = \"\u8f93\u5165\u9519\u8bef\";\n        } else {\n          text = \"\u8f93\u5165\u6b63\u786e\";\n        }\n        document.getElementById(\"demo\").innerHTML = text;\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u5728 input \u5757\u4e2d\u589e\u52a0<code>required=\"required\"</code>\uff0c\u4f1a\u5728\u5b57\u6bb5\u4e3a\u7a7a\u65f6\u81ea\u52a8\u963b\u503c\u63d0\u4ea4\u3002</p> <p>\u5176\u4ed6\u9a8c\u8bc1\u5c5e\u6027\uff1a</p> <p>HTML \u8f93\u5165\u5c5e\u6027\uff08\u6700\u91cd\u8981\u7684\u90e8\u5206\uff09\uff1a</p> \u5c5e\u6027 \u7528\u9014 \u793a\u4f8b \u6548\u679c <code>required</code> \u5fc5\u586b <code>&lt;input required&gt;</code> \u4e0d\u586b\u4e0d\u80fd\u63d0\u4ea4 <code>type</code> \u9650\u5b9a\u8f93\u5165\u7c7b\u578b <code>&lt;input type=\"email\"&gt;</code> \u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f <code>pattern</code> \u81ea\u5b9a\u4e49\u683c\u5f0f\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09 <code>&lt;input pattern=\"[A-Za-z]{3}\"&gt;</code> \u53ea\u80fd\u8f93\u5165 3 \u4e2a\u5b57\u6bcd <code>min</code> / <code>max</code> \u6700\u5c0f/\u6700\u5927\u503c\uff08\u6570\u503c\u6216\u65e5\u671f\uff09 <code>&lt;input type=\"number\" min=\"1\" max=\"10\"&gt;</code> \u53ea\u80fd\u8f93\u5165 1~10 <code>disabled</code> \u7981\u7528\u8f93\u5165\u6846\uff08\u4e0d\u53ef\u7f16\u8f91\u3001\u4e0d\u53ef\u63d0\u4ea4\uff09 <code>&lt;input disabled&gt;</code> \u7528\u6237\u65e0\u6cd5\u586b\u5199\u8fd9\u4e2a\u6846 <p>CSS \u4f2a\u7c7b\u9009\u62e9\u5668\uff08\u7528\u4e8e\u6837\u5f0f\u53cd\u9988\uff09\uff1a</p> <p>\u4f2a\u7c7b\u53ef\u4ee5\u7528\u6765\u6839\u636e\u9a8c\u8bc1\u72b6\u6001\u6539\u53d8\u6837\u5f0f\uff0c\u6bd4\u5982\u52a0\u7ea2\u6846\u3001\u663e\u793a\u5bf9\u52fe\u7b49\u3002</p> \u4f2a\u7c7b \u610f\u601d \u7528\u6cd5\u793a\u4f8b \u6548\u679c <code>:required</code> \u5fc5\u586b\u7684\u8f93\u5165\u6846 <code>input:required { border: red; }</code> \u5fc5\u586b\u6846\u52a0\u7ea2\u8fb9 <code>:optional</code> \u975e\u5fc5\u586b\u7684\u8f93\u5165\u6846 <code>input:optional { border: gray; }</code> \u53ef\u9009\u6846\u52a0\u7070\u8fb9 <code>:valid</code> \u503c\u5408\u6cd5 <code>input:valid { border: green; }</code> \u586b\u5199\u6b63\u786e\u65f6\u52a0\u7eff\u8fb9 <code>:invalid</code> \u503c\u4e0d\u5408\u6cd5 <code>input:invalid { border: red; }</code> \u9519\u8bef\u65f6\u52a0\u7ea2\u8fb9 <code>:disabled</code> \u4e0d\u53ef\u7528\u8f93\u5165\u6846 <code>input:disabled { background: #eee; }</code> \u7070\u6389\u80cc\u666f\u8272 <p>DOM \u5c5e\u6027\u548c\u65b9\u6cd5\uff08JavaScript \u64cd\u4f5c\u9a8c\u8bc1\uff09\uff1a</p> API \u8bf4\u660e \u793a\u4f8b <code>.checkValidity()</code> \u8fd4\u56de\u8f93\u5165\u6846\u662f\u5426\u901a\u8fc7\u9a8c\u8bc1\uff08true/false\uff09 <code>input.checkValidity()</code> <code>.reportValidity()</code> \u68c0\u67e5\u5e76\u663e\u793a\u63d0\u793a\u4fe1\u606f\uff08\u4f1a\u5f39\u7a97\uff09 <code>form.reportValidity()</code> <code>.validity</code> \u8fd4\u56de\u9a8c\u8bc1\u7ed3\u679c\u5bf9\u8c61\uff08\u5e03\u5c14\u5c5e\u6027\uff09 <code>input.validity.valueMissing</code> <code>.willValidate</code> \u8fd4\u56de\u662f\u5426\u4f1a\u88ab\u9a8c\u8bc1\uff08\u6bd4\u5982\u7981\u7528\u7684\u8f93\u5165\u6846\u4e0d\u4f1a\u9a8c\u8bc1\uff09 <code>input.willValidate</code> <p>\u9a8c\u8bc1 API\uff1a <code>checkValidity()</code>\u8fd4\u56de true/false <code>setCustomValidity()</code>\u8bbe\u7f6e input \u5143\u7d20\u7684 validationMessage \u5c5e\u6027\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\u4f7f\u7528 setCustomValidity \u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49\u63d0\u793a\u540e\uff0cvalidity.customError \u5c31\u4f1a\u53d8\u6210 true\uff0ccheckValidity \u603b\u662f\u4f1a\u8fd4\u56de false\u3002</p> <p>\u793a\u4f8b\uff1a</p> HTML<pre><code>&lt;input id=\"id1\" tyoe=\"number\" min=\"10\" max=\"300\" required /&gt;\n&lt;button onclick=\"myFunction()\"&gt;\u9a8c\u8bc1&lt;/button&gt;\n\n&lt;script&gt;\n  function myFunction() {\n    let inputObj = document.getElementById(\"id1\");\n    if (inputObj.checkValidity() == false) {\n      document.getElementById(\"demo\").innerHTML = inputObj.validitionMessage;\n    }\n  }\n&lt;/script&gt;\n</code></pre> <p>\u7ea6\u675f\u9a8c\u8bc1 DOM \u5c5e\u6027\uff1a</p> \u5c5e\u6027 \u63cf\u8ff0 validity true / false validationMessage \u6d4f\u89c8\u5668\u9519\u8bef\u63d0\u793a\u4fe1\u606f willValidate \u6307\u5b9a input \u662f\u5426\u9700\u8981\u9a8c\u8bc1 <p>Validity \u5c5e\u6027\uff1aValidity \u5c5e\u6027\u8868\u683c</p> <p>this \u662f\u4e00\u4e2a\u7279\u6b8a\u5173\u952e\u5b57\uff0c\u5b83\u4ee3\u8868\u201c\u5f53\u524d\u6267\u884c\u73af\u5883\u4e2d\u7684\u5bf9\u8c61\u201d\u3002 \u5728\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u4f7f\u7528 this\uff0c\u8868\u793a\u5b83\u6240\u5728\u7684\u5bf9\u8c61\u3002 \u5355\u72ec\u4f7f\u7528 this\uff0c\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6307 window</p> <p>JSON \u82f1\u6587\u5168\u79f0 JavaScript Object Notation\uff0c\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002\u7528\u4e8e\u5b58\u50a8\u548c\u4f20\u8f93\u6570\u636e\u7684\u683c\u5f0f\uff0c\u670d\u52a1\u7aef\u5411\u7f51\u9875\u4f20\u9012\u6570\u636e\u3002 JSON \u8bed\u6cd5\uff1a\u6570\u636e\u4e3a\u952e\uff1a\u503c\uff0c\u7528\u9017\u53f7\u5206\u9694\uff0c\u5927\u62ec\u53f7\u4fdd\u5b58\u5bf9\u8c61\uff0c\u4e2d\u62ec\u53f7\u4fdd\u5b58\u6570\u7ec4\u3002 \u793a\u4f8b\uff1a</p> JSON<pre><code>\"sites\":[\n    {\"name\":\"Runoob\", \"url\":\"www.runoob.com\"},\n    {\"name\":\"Google\", \"url\":\"www.google.com\"}\n]\n</code></pre> <p>\u51fd\u6570\u5b9a\u4e49\uff1a</p> JavaScript<pre><code>function myProduct(a, b) {\n  return a * b;\n}\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u3002\u6b64\u65f6\u51fd\u6570\u4e0d\u9700\u8981\u540d\u79f0\uff0c\u53ea\u8981\u7528\u53d8\u91cf\u540d\u6765\u8c03\u7528\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let x = function (a, b) {\n  return a * b;\n};\n</code></pre> <p>\u51fd\u6570\u58f0\u660e\u4e5f\u53ef\u4ee5\u63d0\u5347\u5230\u9876\u90e8\uff0c\u6240\u4ee5\u51fd\u6570\u53ef\u4ee5\u5148\u8c03\u7528\u518d\u5b9a\u4e49\u3002</p> <p>\u51fd\u6570\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002<code>arguments.length</code>\u5c5e\u6027\u8fd4\u56de\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u63a5\u6536\u5230\u7684\u7684\u53c2\u6570\u4e2a\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction(a, b) {\n  return arguments.length;\n}\n</code></pre> <p><code>toString()</code>\u65b9\u6cd5\u53ef\u5c06\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myFunction(a, b) {\n  return a * b;\n}\nvar txt = myFunction.toString();\n</code></pre> <p>\u7bad\u5934\u51fd\u6570\uff1a<code>(\u53c2\u6570) =&gt; {\u51fd\u6570\u58f0\u660e}</code> \uff0c\u9002\u7528\u4e8e\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let x = function (x, y) {\n  return x * y;\n};\n\nconst x = (x, y) =&gt; x * y;\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u6709\u81ea\u5e26\u53c2\u6570\uff0c\u5f53\u8c03\u7528\u51fd\u6570\u65f6\u8be5\u53c2\u6570\u672a\u4f20\u5165\u6216 undefined \u65f6\uff0c\u5c31\u53d6\u9ed8\u8ba4\u503c\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function myProduct(x, y = 10) {\n  return x * y;\n}\n</code></pre> <p>\u51fd\u6570\u6709\u4e2a\u5185\u7f6e\u7684 arguments \u5bf9\u8c61,arguments \u5bf9\u8c61\u5305\u542b\u4e86\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u6570\u7ec4\u3002 \u793a\u4f8b\uff0c\u6c42\u548c\u51fd\u6570\uff1a</p> JavaScript<pre><code>x = sumAll(1, 123, 500, 115, 44, 88);\n\nfunction sumAll() {\n  let i,\n    sum = 0;\n  for (i = 0; i &lt; arguments.length; i++) {\n    sum += arguments[i];\n  }\n  return sum;\n}\n</code></pre> <p>\u4efb\u4f55\u51fd\u6570\u90fd\u80fd\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\u548c\u4e0a\u4e00\u5c42\u7684\u51fd\u6570\u53d8\u91cf\u3002\u5982\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u5185\u5d4c\u51fd\u6570<code>plus()</code>\u53ef\u4ee5\u4f7f\u5f53\u524d\u51fd\u6570\u80fd\u8bbf\u95ee\u7236\u51fd\u6570\u7684\u53d8\u91cf\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>function add() {\n  let counter = 0;\n  function plus() {\n    counter += 1;\n  }\n  plus();\n  return counter;\n}\n</code></pre> <p>\u7c7b\u662f\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u6a21\u677f\u3002\u6211\u4eec\u4f7f\u7528 class \u5173\u952e\u5b57\u6765\u521b\u5efa\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u4f53\u5728\u4e00\u5bf9\u5927\u62ec\u53f7 {} \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5927\u62ec\u53f7 {} \u4e2d\u5b9a\u4e49\u7c7b\u6210\u5458\u7684\u4f4d\u7f6e\uff0c\u5982\u65b9\u6cd5\u6216\u6784\u9020\u51fd\u6570\u3002\u6bcf\u4e2a\u7c7b\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5 constructor()\uff0c\u5b83\u662f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u7531 class \u521b\u5efa\u7684\u5bf9\u8c61\u3002 \u683c\u5f0f\uff1a</p> JavaScript<pre><code>class \u7c7b\u540d {\n    constructor() {...}\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n}\n</code></pre> <p>\u4ee5\u4e0a\u5b9e\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\uff0c\u540d\u4e3a \"Runoob\"\u3002\u7c7b\u4e2d\u521d\u59cb\u5316\u4e86\u4e24\u4e2a\u5c5e\u6027\uff1a \"name\" \u548c \"url\"\u3002</p> <p>\u4f7f\u7528<code>new</code>\u521b\u5efa\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>let site = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", \"https://www.runoob.com\");\n</code></pre> <p>\u7c7b\u8868\u8fbe\u5f0f\u662f\u5b9a\u4e49\u7c7b\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u7c7b\u8868\u8fbe\u5f0f\u53ef\u4ee5\u547d\u540d\u6216\u4e0d\u547d\u540d\u3002\u547d\u540d\u7c7b\u8868\u8fbe\u5f0f\u7684\u540d\u79f0\u662f\u8be5\u7c7b\u4f53\u7684\u5c40\u90e8\u540d\u79f0\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>// \u672a\u547d\u540d/\u533f\u540d\u7c7b\nlet Runoob = class {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n};\nconsole.log(Runoob.name);\n// output: \"Runoob\"\n\n// \u547d\u540d\u7c7b\nlet Runoob = class Runoob2 {\n  constructor(name, url) {\n    this.name = name;\n    this.url = url;\n  }\n};\nconsole.log(Runoob.name);\n// \u8f93\u51fa: \"Runoob2\"\n</code></pre> <p>\u6784\u9020\u65b9\u6cd5\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff1a\u6784\u9020\u65b9\u6cd5\u540d\u4e3a constructor()\uff0c\u5728\u521b\u5efa\u65b0\u5bf9\u8c61\u65f6\u4f1a\u81ea\u52a8\u6267\u884c\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\u5c5e\u6027\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u53ef\u4ee5\u7528<code>\u65b9\u6cd5\u540d() {\u6784\u9020\u6307\u4ee4}</code>\u521b\u5efa\u6784\u9020\u65b9\u6cd5\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, year) {\n    this.name = name;\n    this.year = year;\n  }\n  age() {\n    let date = new Date();\n    return date.getFullYear() - this.year;\n  }\n}\n\nlet runoob = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", 2018);\ndocument.getElementById(\"demo\").innerHTML =\n  \"\u83dc\u9e1f\u6559\u7a0b \" + runoob.age() + \" \u5c81\u4e86\u3002\";\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u5411\u7c7b\u7684\u65b9\u6cd5\u53d1\u9001\u53c2\u6570\u3002 \u793a\u4f8b\uff1a</p> JavaScript<pre><code>class Runoob {\n  constructor(name, year) {\n    this.name = name;\n    this.year = year;\n  }\n  age(x) {\n    return x - this.year;\n  }\n}\n\nlet date = new Date();\nlet year = date.getFullYear();\n\nlet runoob = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", 2020);\ndocument.getElementById(\"demo\").innerHTML =\n  \"\u83dc\u9e1f\u6559\u7a0b \" + runoob.age(year) + \" \u5c81\u4e86\u3002\";\n</code></pre> <p>\u7c7b\u7ee7\u627f\uff1a<code>class \u7c7bB extends \u7c7bA</code>\u8868\u793a\u7c7b B \u7ee7\u627f\u7c7b A\u3002 \u7528<code>super()</code>\u5f15\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u53ef\u4ee5\u5411\u539f\u578b\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\uff0c\u793a\u4f8b\uff1a</p> JavaScript<pre><code>\u7c7b\u540d.prototype.\u65b9\u6cd5\u540d = function () {\n  \u6267\u884c\u4ee3\u7801;\n};\n</code></pre> <p>\u53d8\u91cf\u548c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u63d0\u5347\uff0c\u4f46\u7c7b\u4e0d\u4f1a\u3002\u56e0\u6b64\u9700\u5148\u5b9a\u4e49\u7c7b\uff0c\u518d\u4f7f\u7528\u3002</p> <p>\u9759\u6001\u65b9\u6cd5\u662f\u4f7f\u7528 static \u5173\u952e\u5b57\u4fee\u9970\u7684\u65b9\u6cd5\uff0c\u53c8\u53eb\u7c7b\u65b9\u6cd5\uff0c\u5c5e\u4e8e\u7c7b\u7684\uff0c\u4f46\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u65b9\u6cd5\u540d \u8c03\u7528\u9759\u6001\u65b9\u6cd5\u3002\u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u5728\u5bf9\u8c61\u4e0a\u8c03\u7528\uff0c\u53ea\u80fd\u5728\u7c7b\u4e2d\u8c03\u7528\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/JavaScript/js_learning/#_2","title":"\u6d4b\u8bd5\u9898","text":"<p>\u5f15\u7528\u540d\u4e3a \u201crunoob.js\u201d \u7684\u5916\u90e8\u811a\u672c\u7684\u6b63\u786e\u8bed\u6cd5\u662f\uff1f <code>&lt;script src=\"runoob.js\"&gt;</code></p> <p>\u5916\u90e8\u811a\u672c\u4e0d\u9700\u8981\u5305\u542b<code>&lt;script&gt;</code>\u6807\u7b7e</p> <p>HTML \u4e2d\u6ce8\u91ca\u7528<code>&lt;!----&gt;</code>\uff0cjs \u4e2d\u6ce8\u91ca\u7528<code>//</code></p> <p>\u5b9a\u4e49\u6570\u7ec4\uff1a<code>var txt = new Array(\"runoob\", \"google\", \"taobao\")</code></p> <p>\u5982\u4f55\u628a 7.25 \u56db\u820d\u4e94\u5165\u4e3a\u6700\u63a5\u8fd1\u7684\u6574\u6570\uff1f <code>Math.round(7.25)</code></p> <p>\u5982\u4f55\u6c42\u5f97 2 \u548c 4 \u4e2d\u6700\u5927\u7684\u6570\uff1f <code>Math.max(2,4)</code></p> <p>\u6253\u5f00\u540d\u4e3a \u201cwindow2\u201d \u7684\u65b0\u7a97\u53e3\u7684 JavaScript \u8bed\u6cd5\u662f\uff1f <code>window.open(\"https://www.runoob.com\",\"window2\")</code></p> <p>\u5982\u4f55\u5728\u6d4f\u89c8\u5668\u7684\u72b6\u6001\u680f\u653e\u5165\u4e00\u6761\u6d88\u606f\uff1f <code>window.status = \"put your message here\"</code></p> <p>\u5982\u4f55\u83b7\u5f97\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u540d\u79f0\uff1f <code>navigator.appName</code></p> <p>\u9884\u6d4b\u8f93\u51fa</p> HTML<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var a = \"RUNOOB-GOOGLE\";\n  var x = a.lastIndexOf(\"G\");\n  document.write(x);\n&lt;/script&gt;\n</code></pre> <p>10 \uff08\u5728\u5b57\u7b26\u4e32 a \u4e2d\uff0c\u4ece\u53f3\u5f80\u5de6\u627e\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u5b57\u7b26 \"G\" \u7684\u4f4d\u7f6e\u7d22\u5f15\uff09</p> <p>\u9884\u6d4b\u8f93\u51fa HTML<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;   \nvar a = \"RunoobGoogle\"; \nvar result = a.substring(4, 5); \ndocument.write(result);  \n&lt;/script&gt; \n</code></pre></p> <p>o \uff08<code>string.substring(startIndex, endIndex)</code>\u8fd4\u56de\u4ecestartIndex \u5f00\u59cb\uff08\u5305\u542b\u8be5\u4f4d\u7f6e\uff09\uff0c\u5230 endIndex \u7ed3\u675f\uff08\u4e0d\u5305\u542b\u8be5\u4f4d\u7f6e\uff09\u4e4b\u95f4\u7684\u5b57\u7b26\u3002\uff09</p> <p>\u9884\u6d4b\u8f93\u51fa HTML<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt; \nvar x=5; \nvar y=6; \nvar res=eval(\"x*y\"); \ndocument.write(res); \n&lt;/script&gt; \n</code></pre></p> <p>30 \uff08<code>eval()</code> \u662f JavaScript \u4e2d\u7684\u4e00\u4e2a\u51fd\u6570,\u5b83\u4f1a\u628a\u5b57\u7b26\u4e32\u5f53\u4f5c JavaScript \u4ee3\u7801\u6267\u884c\uff09</p> <p>JavaScript \u4e2d\u7528\u4e8e\u5220\u9664\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7a7a\u683c\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f <code>trim()</code></p> <p>\u5728 JavaScript\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709 integer \u548c float \u7b49\u6570\u636e\u7c7b\u578b\u3002\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u6570\u5b57\u662f\u5426\u662f\u6574\u6570\uff1f <code>Number.isInteger(value)</code></p> <p>\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u540e\uff0c\u53ef\u6539\u53d8\u53d8\u91cf\u7c7b\u578b\u3002 </p> <p>\u6570\u7ec4\u5bf9\u8c61\u7684\u54ea\u4e2a\u51fd\u6570\u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u51fd\u6570\uff1f <code>forEach()</code>  \uff08forEach() \u662f JavaScript \u6570\u7ec4\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u5bf9\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684 for \u5faa\u73af\u3002\u683c\u5f0f\uff1a JavaScript<pre><code>array.forEach(function(currentValue, index, array) {\n  // \u9488\u5bf9 currentValue \u6267\u884c\u7684\u64cd\u4f5c\n});\n</code></pre></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/","title":"MkDocs","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 183 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#grid-card","title":"grid card \u7684\u4f7f\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_1","title":"\u793a\u4f8b","text":"HTML<pre><code>&lt;div\n  class=\"grid cards\"\n  style=\"display: grid; grid-template-columns: 1fr;\"\n  markdown\n&gt;\n  &lt;!-- \u8fd9\u91cc\u5199 markdown \u5185\u5bb9 --&gt;\n&lt;/div&gt;\n</code></pre> <p>\u8c03\u6574\u5217\u5bbd\u9700\u8981\u4fee\u6539\uff1a<code>style=\"display: grid; grid-template-columns: 1fr;\"</code> \u5176\u4e2d<code>grid-template-columns: 1fr</code>\u5b9a\u4e49\u7f51\u683c\u7684\u5217\u6570\u548c\u5bbd\u5ea6\u3002<code>1fr</code>\u8868\u793a 1 \u4e2a\u5206\u6570\u5355\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5360\u6ee1\u6574\u4e2a\u7a7a\u95f4\u3002</p> <p>\u5176\u4ed6\u793a\u4f8b\uff1a</p> <ul> <li><code>grid-template-columns: 1fr 2fr 1fr;</code> \u2014 4 \u5217\uff0c\u5206\u522b\u5360 1\u30012\u30011 \u5217</li> <li><code>grid-template-columns: repeat(3, 1fr);</code> \u2014 3 \u5217\u7b49\u5bbd</li> <li><code>grid-template-columns: 100px 2fr 1fr;</code> \u2014 3 \u5217\uff0c\u5206\u522b\u662f 100px \u5bbd\uff0c2 \u4efd\u5bbd\uff0c1 \u4efd\u5bbd</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_2","title":"\u5206\u4e24\u5217\u793a\u4f8b","text":"Text Only<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n![\u793a\u4f8b](../../images/flower-dark.jpg){.img1}\n\n- __\u4e24\u5217\u6d4b\u8bd5__\n\n    ---\n\n    - 1\n    - 2\n\n&lt;/div&gt;\n</code></pre> <p>\u6548\u679c  </p> <p></p> <ul> <li> <p>\u4e24\u5217\u6d4b\u8bd5</p> <ul> <li>1</li> <li>2</li> </ul> </li> </ul> <p>\u6d4f\u89c8\u5668\u81ea\u52a8\u8c03\u6574\u4e3a\u4e24\u5217</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_3","title":"\u5206\u4e09\u5217\u793a\u4f8b","text":"Text Only<pre><code>&lt;div class=\"grid cards\" style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;\" markdown&gt;\n- __\u4e09\u5217\u6d4b\u8bd51__\n\n    ---\n\n    - 1\n    - 2\n\n- __\u4e09\u5217\u6d4b\u8bd52__\n\n    ---\n\n    - 1\n    - 2\n\n- __\u4e09\u5217\u6d4b\u8bd53__\n\n    ---\n\n    - 1\n    - 2\n&lt;/div&gt;\n</code></pre> <p>\u6548\u679c</p> <ul> <li> <p>\u4e09\u5217\u6d4b\u8bd51</p> <ul> <li>1</li> <li>2</li> </ul> </li> <li> <p>\u4e09\u5217\u6d4b\u8bd52</p> <ul> <li>1</li> <li>2</li> </ul> </li> <li> <p>\u4e09\u5217\u6d4b\u8bd53</p> <ul> <li>1</li> <li>2</li> </ul> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_4","title":"\u5706\u89d2\u56fe\u7247\u663e\u793a","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/MkDocs/mkdocs/#_5","title":"\u793a\u4f8b","text":"Text Only<pre><code>![\u793a\u4f8b](images/flower-dark.jpg){.img1}\n</code></pre> <p><code>img1</code>\u7c7b\u5b9a\u4e49\u4e86\u5706\u89d2\u56fe\u7247\uff0c<code>attr_list</code>\u6269\u5c55\u7684\u5f15\u5165\u4f7f\u6211\u4eec\u53ef\u4ee5\u7528<code>.{img1}</code>\u7ed9\u56fe\u7247\uff08\u6216\u5176\u4ed6\u5143\u7d20\uff09\u6dfb\u52a0\u8fd9\u4e2a\u7c7b\u3002 \u5176\u4e2d<code>images/flower-dark.jpg</code>\u8868\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684images\u6587\u4ef6\u5939\u4e2d\u7684flower-dark.jpg\u3002 \u5982\u8981\u56de\u9000\u5230\u4e0a\u4e00\u5c42\u76ee\u5f55\uff0c\u53ef\u4f7f\u7528<code>..</code></p> <p>\u53e6\u5916\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528URL\u4ee3\u66ff\u76f8\u5bf9\u8def\u5f84\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/","title":"Matplotlib","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 28 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u554a\u554a\u554a\u7528\u4e86\u8fd9\u4e48\u4e45\u7b2c\u4e00\u6b21\u7cfb\u7edf\u5b66</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"Python<pre><code>plt.figure(...)\nplt.plot(...)\nplt.show()\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Matplotlib/Matplotlib/#_2","title":"\u7ec6\u8282\u8c03\u6574","text":"Python<pre><code>plt.xlim((1, 2))\nplt.right((1, 2))\n\nplt.xticks([1, 1.2, 1.4, 1.6, 1.8])\nplt.yticks(\n    [-2, -1.8, -1, 1.22, 3],\n    [r'$really\\ bad$', r'$bad$', r'$normal$', r'$good$', r'$really\\ good$']\n)  # \u6bcf\u4e2a y \u503c\u5bf9\u5e94\u4e00\u4e2a\u540e\u9762\u7684 label\n\nax = plt.gca()\nax.spines['top'].set_color('none')  # \u4e0a\u65b9\u8fb9\u6846\u4e0d\u663e\u793a\nax.spines['left'].set_position(('data',0))\n\n# \u663e\u793a\u56fe\u4f8b\uff0c\u4e0d\u52a0\u5373\u9ed8\u8ba4\uff0c\u653e\u5728\u7a7a\u4f4d\uff0c\u5373 loc='best'\uff0c\u4e5f\u53ef\u4ee5\u5168\u90fd\u4e0d\u5199\nplt.lagend([l1,l2], [\"l1\", \"l2\"], loc=...)    \n\n# \u6587\u5b57 xytext \u5355\u4f4d\u4e3a px\n# \u56fe\u4e2d\u6587\u5b57\nplt.annotate(r'$2x+1=%s$' % y0, xy=(x0, y0), xycoords='data', xytext=(+30, -30),\n             textcoords='offset points', fontsize=16,\n             arrowprops=dict(arrowstyle='-&gt;', connectionstyle=\"arc3,rad=.2\"))\n# \u56fe\u5916\u6587\u5b57\nplt.text(-3.7, 3, r'$This\\ is\\ the\\ some\\ text. \\mu\\ \\sigma_i\\ \\alpha_t$',\n         fontdict={'size': 16, 'color': 'r'})\nplt.text(x, y , '%.2f' % y, ha='center', va='bottom')   # \u6c34\u5e73\u5bf9\u9f50\u548c\u5782\u76f4\u5bf9\u9f50\n\n# c: \u8c03\u8282\u989c\u8272   \nplt.scatter(X, Y, s=(T + 4) * 10, c=T, alpha=.5)\n</code></pre> Python<pre><code>def f(x,y):\n    # the height function\n    return (1 - x / 2 + x**5 + y**3) * np.exp(-x**2 -y**2)\n\nn = 256\nx = np.linspace(-3, 3, n)\ny = np.linspace(-3, 3, n)\nX,Y = np.meshgrid(x, y)\n\n# use plt.contourf to filling contours\n# X, Y and value for (X,Y) point\n# \u9009\u7528\u4e00\u4e2a\u8272\u5e26\uff0c\u8be6\u89c1 doc, 8: \u53f0\u9636\u6570\nplt.contourf(X, Y, f(X, Y), 8, alpha=.75, cmap=plt.cm.RdBu)\n</code></pre> <p>\u5b98\u65b9\u8272\u5e26 seaborn \u8272\u5e26</p> <p>test here</p> PythonJavaScriptC++ Python<pre><code>print(\"Hello from Python\")\n</code></pre> JavaScript<pre><code>console.log(\"Hello from JavaScript\");\n</code></pre> C++<pre><code>std::cout &lt;&lt; \"Hello from C++\" &lt;&lt; std::endl;\n</code></pre> 123 <p>123123</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/","title":"Numpy & Pandas","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 244 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u5efa\u8bae\u5fd8\u8bb0\u4e86\u627e GPT</p> <p>\u6570\u636e\u5e93\u64cd\u4f5c -&gt; Pandas \u6570\u636e\u91cf\u5927\uff0c\u4e0d\u5173\u5fc3\u5217\u542b\u4e49 -&gt; Numpy</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#numpy","title":"Numpy","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#list","title":"List \u7684\u590d\u6742\u5ea6\u5206\u6790","text":"<p>Python \u7684 <code>list</code> \u662f\u7528 \u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4 \u5b58\u50a8\u5143\u7d20\u7684\uff1a</p> <ul> <li>\u5185\u90e8\u5b9e\u9645\u662f\u4e00\u4e2a \u6307\u9488\u6570\u7ec4\uff08\u5373 <code>PyObject**</code> \u6307\u9488\u6570\u7ec4\uff09\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u4e00\u4e2a Python \u5bf9\u8c61\u3002</li> <li>\u6240\u4ee5\u5217\u8868\u672c\u8eab\u5b58\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e0d\u662f\u5bf9\u8c61\u672c\u8eab\u3002</li> <li>\u6240\u4ee5 Python \u7684 list \u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u56e0\u4e3a\u5b58\u7684\u662f\u6307\u9488\uff09\u3002</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_1","title":"\u5c0f\u6280\u5de7","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_2","title":"\u9006\u7f6e","text":"Python<pre><code>a -&gt; a[:: -1]\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#io","title":"IO","text":"Python<pre><code>## \u4fdd\u5b58\u5230 outfile.npy \u6587\u4ef6\u4e0a\nnp.save('outfile.npy', a) \n\n## \u4fdd\u5b58\u5230 outfile2.npy \u6587\u4ef6\u4e0a\nnp.save('outfile2', a)\n\n## c \u4f7f\u7528\u4e86\u5173\u952e\u5b57\u53c2\u6570 sin_array\nnp.savez(\"runoob.npz\", a, b, sin_array = c)\nr = np.load(\"runoob.npz\")  \n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#pandas","title":"Pandas","text":"<p>NaN \u5360\u4f4d\u7b26: <code>np.nan</code></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#series","title":"Series","text":"<p>\u521d\u59cb\u5316 <code>s = pd.Series(data, index=index)</code> \uff08\u76f8\u5f53\u4e8e\u4e00\u5217 \uff09</p> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cdata \u652f\u6301\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b \uff08\u4e00\u7ef4\uff09\uff1a</p> <ul> <li>Python \u5b57\u5178</li> <li>\u591a\u7ef4\u6570\u7ec4</li> <li>\u6807\u91cf\u503c\uff08\u5982\uff0c5\uff09</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#dataframe","title":"DataFrame","text":"<p>DataFrame \u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u8f93\u5165\u6570\u636e\uff1a</p> <ul> <li>\u4e00\u7ef4 ndarray\u3001\u5217\u8868\u3001\u5b57\u5178\u3001Series \u5b57\u5178</li> <li>\u4e8c\u7ef4 numpy.ndarray</li> <li>\u7ed3\u6784\u591a\u7ef4\u6570\u7ec4\u6216\u8bb0\u5f55\u591a\u7ef4\u6570\u7ec4</li> <li>Series</li> <li>DataFrame</li> </ul> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_3","title":"\u7d22\u5f15","text":"<p><code>df[xxx]</code> \u8fd4\u56de xxx \u5217\u6784\u6210\u7684 Series</p> <p>\u4e0b\u9762\u4e09\u79cd\u65b9\u6cd5\u5747\u5e26\u6709\u884c index</p> Python<pre><code>## \u4e24\u5217\ndf[['B', 'A']]\n\n## \u4e24\u5217\uff0c\u53ef\u53d6\u7d22\u5f15 \uff08\u5c5e\u6027\uff09\ndf.loc[:; ['B', 'A']]\n\n## \u4e24\u5217\uff0c\u6309\u5217 id \u53d6  \uff08\u4f4d\u7f6e\uff09\ndf.iloc[:; 1:2]\n</code></pre> <p><code>.values</code> \u4e0d\u5e26\u884c index\uff0c\u6362\u4e3a\u884c id\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u503c\u4f20\u9012</p> <p>\u4ea4\u6362\u4e24\u5217\uff1a Python<pre><code>df[['B', 'A']] = df[['A', 'B']]                   ## \u53ef\u4ee5\u4ea4\u6362\ndf.loc[:, ['B', 'A']] = df[['A', 'B']].values     ## \u4e0d\u80fd\u4ea4\u6362\ndf.loc[:, ['B', 'A']] = df[['A', 'B']]            ## \u53ef\u4ee5\u4ea4\u6362\n</code></pre></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_4","title":"\u4e24\u5f20\u8868\u4e4b\u95f4\u7684\u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#concat","title":"<code>concat</code>","text":"Python<pre><code>pd.concat(\n    objs,                   # \u5217\u8868\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\n    axis=0,                 # \u65b9\u5411\uff0c0 \u7ad6\u7740\u5408\u5e76\uff0c1 \u6a2a\u7740\u5408\u5e76\n    join='outer',\n    ignore_index=False,     # \u4e0d\u8003\u8651 index\uff0c\u5408\u5e76\u540e\u91cd\u65b0\u7f16\u53f7\n    keys=None,              # \u5bf9 objs \u6dfb\u52a0\u5217\u5173\u952e\u5b57\uff0c\u76f8\u5f53\u4e8e\u4e24\u5c42\n    levels=None,\n    names=None,\n    verify_integrity=False,\n    copy=True               # \u6df1\u6d45\u62f7\u8d1d\uff0c\u5c11\u7528\n)\n\n# \u7528\u4e8e\u884c\u5408\u5e76\uff0c\u6309 df1 \u7684 index \u8fdb\u884c\u5408\u5e76 (outer \u5408\u5e76), \u4f1a\u51fa\u73b0 NaN\npd.concat([df1, df2.reindex(df1.index)], axis=1)  \n\n# \u5408\u5e76\u540e\u4ec5\u4fdd\u7559\u5171\u6709\u7684\u884c\uff0c\u76f8\u5f53\u4e8e\u4ea4\u96c6\npd.concat([df1, df2], axis=1, join='inner')\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#merge","title":"<code>merge</code>","text":"Python<pre><code>pd.merge(\n    left,\n    right,\n    how='inner',        # left, right, inner, outer\n    on=None,\n    left_on=None,\n    right_on=None,\n    left_index=False, \n    right_index=False, \n    sort=True,\n    suffixes=('_x','_y'),\n    copy=True, \n    indicator=False,\n    validate=None\n)\n\npd.merge(df1, df2, on='key')            # \u6309 key \u5217\u5408\u5e76\npd.merge(df1, df2, on=['key1', 'key2']) # \u6309\u4e24\u5217\u5408\u5e76\uff0c\u4fdd\u7559\u4e24\u5217\u5b8c\u5168\u5bf9\u5e94\u7684\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#join","title":"<code>join</code>","text":"Python<pre><code>res = left.join(right)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_5","title":"\u5355\u5f20\u8868\u683c\u64cd\u4f5c","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#groupby","title":"<code>groupby</code>","text":"Python<pre><code>df.groupby('Column_1')    # \u6bcf\u7ec4\u4e00\u4e2a DataFrame\n\n# groupby \u6709\u52a9\u4e8e\u5e76\u884c\u64cd\u4f5c\ndf.groupby('Column_1').sum()\ndf.groupby('Column_1').mean()\n# \u5206\u5217\u4e0d\u540c\u64cd\u4f5c\ndf.groupby('Column_1')['Column_2'].sum()\n\n# apply \u51fd\u6570\uff0cfunc \u4f5c\u7528\u5728\u6bcf\u4e00\u884c\u4e0a\uff0c\u4e0e sum \u4f5c\u7528\u65b9\u5f0f\u76f8\u540c\ndf.groupby('Column_1').apply(func)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#_6","title":"\u4e22\u5931\u6570\u636e\u5904\u7406","text":"<p>\u6ce8\u610f\uff1a</p> Python<pre><code>np.nan == np.nan    # False\nnp.inf == np.inf    # True\n\nnp.ones(2) / np.zeros(2)    # array([inf, inf])\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Numpy%20%26%20Pandas/Numpy%20%26%20Pandas/#io_1","title":"IO","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/","title":"MLP\u4e0eCNN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 181 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#mlp-pytorch","title":"MLP (\u591a\u5c42\u795e\u7ecf\u7f51\u7edc) \u7684 PyTorch \u5b9e\u73b0","text":"Python<pre><code>class Net(nn.Module):\n\n    def __init__(self):\n        super(Net, self).__init__()\n        self.l1 = nn.Linear(784, 520)\n        self.l2 = nn.Linear(520, 320)\n        self.l3 = nn.Linear(320, 240)\n        self.l4 = nn.Linear(240, 120)\n        self.l5 = nn.Linear(120, 10)\n\n    def forward(self, x):\n        x = x.view(-1, 784)  # Flatten the data (n, 1, 28, 28)-&gt; (n, 784)\n        x = F.relu(self.l1(x))\n        x = F.relu(self.l2(x))\n        x = F.relu(self.l3(x))\n        x = F.relu(self.l4(x))\n        return self.l5(x)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#cnn","title":"CNN (\u5377\u79ef\u795e\u7ecf\u7f51\u7edc)","text":"<p>\u5728PyTorch\u4e2d\uff0c\u5377\u79ef\u5c42\u6709 Conv1d\u3001Conv2d\u3001Conv3d\uff0c \u8fd9\u4e09\u4e2a\u5206\u522b\u5bf9\u5e94\u7740\u4e00\u7ef4\u5377\u79ef\u3001\u4e8c\u7ef4\u5377\u79ef\u3001\u4e09\u7ef4\u5377\u79ef\uff0c\u7136\u540e\u5b83\u4eec\u7684\u8f93\u5165\u6570\u636e\u7684\u683c\u5f0f\u5206\u522b\u662f - Conv1d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iW) - Conv2d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iH, iW) - Conv3d\u7684\u8f93\u5165\u6570\u636e\u4e3a (minibatch, in_chanels, iT, iH, iW)</p> \u76f4\u63a5\u6784\u5efa\u5377\u79ef\u7528 <code>nn</code> \u6784\u5efa\u5377\u79ef\u6a21\u578b Python<pre><code># \u4f7f\u7528PyTorch\u7684\u51fd\u6570\u6765\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\n\nx = Variable(torch.Tensor(range(9)))\nx=x.view(1,1,3,3)\nweights = Variable(torch.Tensor([0,1,2,3]))\nweights = weights.view(1,1,2,2)\nbias = Variable(torch.Tensor([1]))\n\ny=F.conv2d(x, weights,bias, padding=0)\n</code></pre> Python<pre><code>x = Variable(torch.Tensor(range(9)))\nx = x.view(1,1,3,3)\n\nweights = torch.Tensor([0,1,2,3]).view(1,1,2,2)\nweights = torch.nn.Parameter(weights)\nbias = torch.nn.Parameter(torch.Tensor([1]))\n\n# model\nmodel = torch.nn.Conv2d(in_channels=x.data.size()[1], out_channels=x.data.size()[1], kernel_size=(2,2), stride=1 )\n\n# \u8bbe\u7f6e\u8be5\u5377\u79ef\u5c42\u8fc7\u6ee4\u5668\u5f62\u72b6 (out_channels, in_channels, kernel_size[0], kernel_size[1]) \u548c \u6743\u91cd\u6570\u503c\nmodel.weight = weights\nmodel.bias = bias\n\n# \u6c42\u89e3X\ny = m(x)\n</code></pre> <p>\u6a21\u578b\u6784\u5efa\uff1a</p> Python<pre><code>#%%\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Net(nn.Module):\n\n    def __init__(self):\n        super(Net, self).__init__()\n        # 1 input image channel, 6 output channels, 3x3 square convolution\n        # kernel\n        self.conv1 = nn.Conv2d(1, 6, 3)\n        self.conv2 = nn.Conv2d(6, 16, 3)\n        # an affine operation: y = Wx + b\n        self.fc1 = nn.Linear(16 * 6 * 6, 120)  # 6*6 from image dimension \n        self.fc2 = nn.Linear(120, 84)\n        self.fc3 = nn.Linear(84, 10)\n\n    def forward(self, x):\n        # Max pooling over a (2, 2) window\n        x = F.max_pool2d(F.relu(self.conv1(x)), (2, 2))\n        # If the size is a square you can only specify a single number\n        x = F.max_pool2d(F.relu(self.conv2(x)), 2)\n        x = x.view(-1, self.num_flat_features(x))\n        x = F.relu(self.fc1(x))\n        x = F.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n\n    def num_flat_features(self, x):\n        size = x.size()[1:]  # all dimensions except the batch dimension\n        num_features = 1\n        for s in size:\n            num_features *= s\n        return num_features\n</code></pre> <p>\u8be5\u6a21\u578b\u4e3a </p> Text Only<pre><code>Net(\n  (conv1): Conv2d(1, 6, kernel_size=(3, 3), stride=(1, 1))\n  (conv2): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))\n  (fc1): Linear(in_features=576, out_features=120, bias=True)\n  (fc2): Linear(in_features=120, out_features=84, bias=True)\n  (fc3): Linear(in_features=84, out_features=10, bias=True)\n)\n</code></pre> <p>\u6ce8\u610f</p> <p><code>torch.nn</code>\u53ea\u652f\u6301\u5c0f\u6279\u91cf\u8f93\u5165,\u6574\u4e2atorch.nn\u5305\u90fd\u53ea\u652f\u6301\u5c0f\u6279\u91cf\u6837\u672c,\u800c\u4e0d\u652f\u6301\u5355\u4e2a\u6837\u672c</p> <p>\u4f8b\u5982,<code>nn.Conv2d</code>\u5c06\u63a5\u53d7\u4e00\u4e2a4\u7ef4\u7684\u5f20\u91cf,\u6bcf\u4e00\u7ef4\u5206\u522b\u662f\\(nSamples\\times nChannels\\times Height\\times Width\\)(\u6837\u672c\u6570\u901a\u9053\u6570\u9ad8*\u5bbd). \u5982\u679c\u4f60\u6709\u5355\u4e2a\u6837\u672c,\u53ea\u9700\u4f7f\u7528<code>input.unsqueeze(0)</code>\u6765\u6dfb\u52a0\u5176\u5b83\u7684\u7ef4\u6570.</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#pooling","title":"Pooling (\u6c60\u5316)","text":"<p>\u4e0d\u505a\u4ecb\u7ecd</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/MLP%E4%B8%8ECNN/MLP%E4%B8%8ECNN/#alexnet","title":"\u5e94\u7528\uff1aAlexNet \u7684\u6784\u5efa","text":"Python<pre><code>class AlexNet(nn.Module):\n\n    def __init__(self, num_classes: int = 1000) -&gt; None:\n        super(AlexNet, self).__init__()\n        self.features = nn.Sequential(\n            nn.Conv2d(3, 64, kernel_size=11, stride=4, padding=2),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n            nn.Conv2d(64, 192, kernel_size=5, padding=2),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n            nn.Conv2d(192, 384, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(384, 256, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.Conv2d(256, 256, kernel_size=3, padding=1),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size=3, stride=2),\n        )\n        self.avgpool = nn.AdaptiveAvgPool2d((6, 6))\n        self.classifier = nn.Sequential(\n            nn.Dropout(),\n            nn.Linear(256 * 6 * 6, 4096),\n            nn.ReLU(inplace=True),\n            nn.Dropout(),\n            nn.Linear(4096, 4096),\n            nn.ReLU(inplace=True),\n            nn.Linear(4096, num_classes),\n        )\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        x = self.features(x)\n        x = self.avgpool(x)\n        x = torch.flatten(x, 1)\n        x = self.classifier(x)\n        return x\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/","title":"RNN\u4e0eDQN","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 14 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/#rnn","title":"RNN (\u5faa\u73af\u795e\u7ecf\u7f51\u7edc)","text":"Python<pre><code>class Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.rnn = nn.RNN(input_size=input_size,\n                          hidden_size=hidden_size, batch_first=True)\n    def forward(self, hidden, x):\n        # Reshape input (batch first)\n        x = x.view(batch_size, sequence_length, input_size)\n        # Propagate input through RNN\n        # Input: (batch, seq_len, input_size)\n        # hidden: (num_layers * num_directions, batch, hidden_size)\n        out, hidden = self.rnn(x, hidden)\n        return hidden, out.view(-1, num_classes)\n    def init_hidden(self):\n        # Initialize hidden and cell states\n        # (num_layers * num_directions, batch, hidden_size)\n        return Variable(torch.zeros(num_layers, batch_size, hidden_size))\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/RNN%E4%B8%8EDQN/RNN%E4%B8%8EDQN/#drl","title":"DRL (\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60)","text":"<p>\u76ee\u6807 </p> \\[ \\max_\\pi \\mathbb{E}_\\pi \\left[\\sum_{t = 1}^\\infty \\gamma^tr_t\\right] \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/","title":"Tensors \u5165\u95e8","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 307 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u539f\u6587\u6765\u81ea\uff1aDeep Learning with PyTorch: A 60 Minute Blitz</p> <p>\u7531\u4e8e\u6211\u4eec\u96be\u4ee5\u63d0\u53d6\u9ad8\u5c42\u6b21\u3001\u62bd\u8c61\u7684\u7279\u5f81\u6765\u8868\u8fbe\u590d\u6742\u8868\u793a\uff0c\u56e0\u6b64\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor","title":"Tensor \u7684\u57fa\u672c\u8ba1\u7b97","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor_1","title":"\u521d\u59cb\u5316 Tensor","text":"<p>\u76f4\u63a5\u521b\u5efa</p> Python<pre><code>shape = (2, 3, )\nrand_tensor = torch.rand(shape)\nones_tensor = torch.ones(shape)\nzeros_tensor = torch.zeros(shape)\n</code></pre> <p>\u4ece\u5176\u5b83\u6570\u636e\u7c7b\u578b\u521b\u5efa</p> Python<pre><code>data = [[1, 2],[3, 4]]\n# \u76f4\u63a5\u4ece\u6570\u636e\u521b\u5efa\nx_data = torch.tensor(data)\n\n# \u4ece Numpy \u521b\u5efa\nnp_array = np.array(data)\nx_np = torch.from_numpy(np_array)\n</code></pre> <p>\u4ece Tensor \u521b\u5efa</p> Python<pre><code>x_ones = torch.ones_like(x_data) # \u7ef4\u5ea6\u76f8\u540c\u7684\u5168 1 \u77e9\u9635\nx_rand = torch.rand_like(x_data, dtype=torch.float) # \u6539\u53d8 x_data \u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u751f\u6210\u540c\u7ef4\u5ea6\u7684\u968f\u673a Tensor\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#tensor_2","title":"Tensor \u7684\u76f8\u5173\u64cd\u4f5c","text":"<p>\u5e38\u7528 <code>my_tensor.shape</code>, <code>my_tensor.dtype</code>, <code>my_tensor.device</code> \u67e5\u770b\u5176\u5c5e\u6027</p> <p>\u6539\u53d8\u5f62\u72b6 </p> Python<pre><code>x2 = x1.view(2, 3)\nx1.reshape_(2, 3)   # \u7528 none \u6216\u8005 -1 \u6307\u5b9a\u81ea\u52a8\u8ba1\u7b97\u7684\u7ef4\u5ea6\n</code></pre> <p>\u6ce8\u610f</p> <p>\u539f\u5730\u64cd\u4f5c\u867d\u7136\u4f1a\u8282\u7701\u8bb8\u591a\u7a7a\u95f4\uff0c\u4f46\u662f\u7531\u4e8e\u4f1a\u7acb\u523b\u6e05\u9664\u5386\u53f2\u8bb0\u5f55\u6240\u4ee5\u5728\u8ba1\u7b97\u5bfc\u6570\u65f6\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u4f7f\u7528</p> <p>\u8ba1\u7b97 <code>+ - * / @</code></p> <p>\u5177\u4f53\u76f8\u5173\u8ba1\u7b97\u89c1 PyTorch \u6587\u6863 \u548c torch.Tensor API</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/Tensors%E5%85%A5%E9%97%A8/Tensors%E5%85%A5%E9%97%A8/#autograd","title":"Autograd \u81ea\u52a8\u6c42\u5bfc","text":"<p>\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u4ecetorchvision\u52a0\u8f7d\u4e00\u4e2a\u9884\u5148\u8bad\u7ec3\u597d\u7684resnet18\u6a21\u578b\uff0c\u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u6570\u636etensor\u6765\u8868\u793a\u4e00\u67093\u4e2a\u901a\u9053\u3001\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u4e3a64\u7684\u56fe\u50cf\uff0c\u5176\u5bf9\u5e94\u7684\u6807\u7b7e\u521d\u59cb\u5316\u4e3a\u4e00\u4e9b\u968f\u673a\u503c\u3002</p> Python<pre><code>import torch, torchvision\nmodel = torchvision.models.resnet18(weights=True)\ndata = torch.rand(1, 3, 64, 64)\nlabels = torch.rand(1, 1000)\n\nprediction = model(data) # \u524d\u5411\u4f20\u64ad\n\nloss = (prediction - labels).sum()\nloss.backward() # \u53cd\u5411\u4f20\u64ad\n</code></pre> <p>\u8c03\u7528.backward()\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u6709\u68af\u5ea6\u3002\u6b64\u5f20\u91cf\u7684\u68af\u5ea6\u5c06\u7d2f\u79ef\u5230.grad\u5c5e\u6027\u4e2d\u3002</p> <p>\u63a5\u7740\uff0c\u6211\u4eec\u52a0\u8f7d\u4e00\u4e2a\u4f18\u5316\u5668\uff0c\u5728\u672c\u4f8b\u4e2d\uff0cSGD\u7684\u5b66\u4e60\u7387\u4e3a0.01\uff0cmomentum \u4e3a0.9\u3002\u6211\u4eec\u5728\u4f18\u5316\u5668\u4e2d\u6ce8\u518c\u6a21\u578b\u7684\u6240\u6709\u53c2\u6570\u3002\u8c03\u7528<code>.step()</code>\u6765\u6267\u884c\u68af\u5ea6\u4e0b\u964d\uff0c\u4f18\u5316\u5668\u901a\u8fc7\u5b58\u50a8\u5728<code>.grad</code>\u4e2d\u7684\u68af\u5ea6\u6765\u8c03\u6574\u6bcf\u4e2a\u53c2\u6570\u3002</p> Python<pre><code>optim = torch.optim.SGD(model.parameters(), lr=1e-2, momentum=0.9)\noptim.step() #\u68af\u5ea6\u4e0b\u964d\n</code></pre> \u624b\u52a8\u6c42\u5bfc (\u624b\u5199\u4e00\u4e2a)\u81ea\u52a8\u6c42\u5bfc Python<pre><code># Training Data\nx_data = [1.0, 2.0, 3.0]\ny_data = [2.0, 4.0, 6.0]\n\nw = 1.0  # a random guess: random value\n\n# our model forward pass\ndef forward(x):\n    return x * w\n\n# Loss function\ndef loss(x, y):\n    y_pred = forward(x)\n    return (y_pred - y) * (y_pred - y)\n\n# compute gradient\ndef gradient(x, y):  # d_loss/d_w\n    return 2 * x * (x * w - y)\n\n# Before training\nprint(\"Prediction (before training)\",  4, forward(4))\n\n# Training loop\nfor epoch in range(10):\n    for x_val, y_val in zip(x_data, y_data):\n        # Compute derivative w.r.t to the learned weights\n        # Update the weights\n        # Compute the loss and print progress\n        grad = gradient(x_val, y_val)\n        w = w - 0.01 * grad\n        print(\"\\tgrad: \", x_val, y_val, round(grad, 2))\n        l = loss(x_val, y_val)\n    print(\"progress:\", epoch, \"w=\", round(w, 2), \"loss=\", round(l, 2))\n\n# After training\nprint(\"Predicted score (after training)\",  \"4 hours of studying: \", forward(4))\n</code></pre> Python<pre><code>import torch\n\nx_data = torch.tensor([1.0, 2.0, 3.0])\ny_data = torch.tensor([2.0, 4.0, 6.0])\nw = torch.tensor([1.0], requires_grad=True)\n\n# our model forward pass\ndef forward(x):\n    return x * w\n\n# Loss function\ndef loss(y_pred, y_val):\n    return (y_pred - y_val) ** 2\n\n# Before training\nprint(\"Prediction (before training)\",  4, forward(4).item())\n\n# Training loop\nfor epoch in range(10):\n    for x_val, y_val in zip(x_data, y_data):\n        y_pred = forward(x_val) # 1) Forward pass\n        l = loss(y_pred, y_val) # 2) Compute loss\n        l.backward() # 3) Back propagation to update weights\n        print(\"\\tgrad: \", x_val, y_val, w.grad.item())\n        w.data = w.data - 0.01 * w.grad.item()\n\n        # Manually zero the gradients after updating weights\n        w.grad.data.zero_()\n\n    print(f\"Epoch: {epoch} | Loss: {l.item()}\")\n\n# After training\nprint(\"Prediction (after training)\",  4, forward(4).item())\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/","title":"\u7ebf\u6027\u56de\u5f52\u548c\u903b\u8f91\u56de\u5f52","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 67 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>PyTorch \u7684\u7b80\u5355\u5e94\u7528: \u4f7f\u7528 nn</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/#_1","title":"\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6784\u5efa","text":"Python<pre><code># \u8fd8\u662f\u4f7f\u7528\u4e0a\u8ff0\u7684X\u548cY\n\nX = Variable(x) # PyTorch\u4e2d\u7684 Variable \u9ed8\u8ba4\u662f\u5141\u8bb8\u81ea\u52a8\u6c42\u5bfc\u7684\uff0c\u6240\u4ee5 requires_grad=True \u53ef\u4ee5\u4e0d\u52a0\nY = Variable(y) # \u540c\u4e0a\n\n####     \u8d85\u53c2\u6570     ####\nEPOCH = 100 # \u8fed\u4ee3\u6b21\u6570\nlearning_rate = 0.001 # \u5b66\u4e60\u901f\u7387\n\n# \u5b9a\u4e49\u6a21\u578b\n# \u4f7f\u7528 nn\u5305\u6765\u5b9a\u4e49\u6211\u4eec\u7684\u6a21\u578b\uff0c\u8fd9\u91cc\u7684Linear\u8868\u793a\u7684\u662f\u7ebf\u6027\u6a21\u578b\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316\u8fd9\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\n# \u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u662f: in_features, out_features \u4e5f\u5c31\u662f\u8f93\u51fa\u7279\u5f81\u548c\u8f93\u51fa\u7279\u5f81\n# \u9ed8\u8ba4\u4f1a\u5e2e\u6211\u4eec\u521d\u59cb\u5316\u6743\u91cd\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u521d\u59cb\u5316\u6743\u91cd\uff08\u8fd9\u91cc\u6682\u65f6\u4e0d\u8bf4\uff09\nmodel = nn.Linear(1, 1)\n\n# \u5b9a\u4e49\u635f\u5931\u51fd\u6570\n# \u6211\u4eec\u4f7f\u7528 Mean Square Loss\u4f5c\u4e3a\u6211\u4eec\u7684\u635f\u5931\u51fd\u6570\n# size_average=False\u8868\u793a\u6211\u4eec\u9700\u8981\u7684\u662f\u603b\u7684\u8bef\u5dee\uff0c\u4e0d\u9700\u8981\u53bb\u5e73\u5747\u8bef\u5dee\nsquare_loss = nn.MSELoss(size_average=False)\n\n# \u5b9a\u4e49\u4f18\u5316\u65b9\u6cd5\n# \u4ee5\u524d\uff0c\u6211\u4eec\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\u90fd\u662f\u6211\u4eec\u624b\u5199\u7684\uff0c\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528nn\u4e3a\u6211\u4eec\u5c01\u88c5\u597d\u7684\u3002\n# \u4f7f\u7528optim\u5305\u6765\u5b9a\u4e49\u4f18\u5316\u7b97\u6cd5\uff0c\u53ef\u4ee5\u81ea\u52a8\u7684\u5e2e\u6211\u4eec\u5bf9\u6a21\u578b\u7684\u53c2\u6570\u8fdb\u884c\u68af\u5ea6\u66f4\u65b0\n# model.parameters()\u4f1a\u81ea\u52a8\u7684\u4e3a\u6211\u4eec\u5c06\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u63d0\u53d6\u51fa\u6765\u3002\u7136\u540e\u6211\u4eec\u544a\u8bc9\u4f18\u5316\u5668\uff0c\u5b83\u4eec\u662f\u6211\u4eec\u8981\u66f4\u65b0\u7684\u53c2\u6570\u3002\n# lr\u8868\u793a\u7684\u662f\u5b66\u4e60\u901f\u7387\noptimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)\n\n####     \u5f00\u59cb\u8bad\u7ec3     ####\nfor t in range(EPOCH):\n    # \u6ca1\u6709\u53d8\u5316\uff0c\u8fd8\u662f\u8fd9\u6837\u4f7f\u7528\uff1a\u5bf9x\u8fdb\u884c\u9884\u6d4b\n    y_hat = model(X)\n\n    # \u6ca1\u6709\u53d8\u5316\uff0c\u8ba1\u7b97\u635f\u5931\n    loss = square_loss(y_hat, Y)\n\n    # \u6253\u5370\u635f\u5931\n    if (t+1) % 20 == 0:\n        print(loss)\n    # \u5728\u6211\u4eec\u53cd\u5411\u6c42\u5bfc\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u6e05\u7a7a\u79ef\u7d2f\u7684\u68af\u5ea6\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f torch.optim\u5305\u4e2d\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\n    # \u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6765\u81ea\u52a8\u7684\u6e05\u7a7a\u79ef\u7d2f\u7684\u68af\u5ea6\n    optimizer.zero_grad()\n\n    # \u53cd\u5411\u6c42\u5bfc\uff0c\u4e5f\u6ca1\u53d8\n    loss.backward()\n\n    # \u53cd\u5411\u6c42\u5bfc\u7ed3\u675f\uff0c\u6211\u4eec\u5f00\u59cb\u66f4\u65b0\u68af\u5ea6\uff0c\u4ee5\u524d\u66f4\u65b0\u68af\u5ea6\u9700\u8981\u624b\u52a8\u8f93\u5165w1.grad.data\uff0c\u73b0\u5728\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\uff01\n    optimizer.step()\n\n# \u753b\u56fe\nplt.scatter(X.data.numpy(), Y.data.numpy())\nplt.plot(X.data.numpy(), y_hat.data.numpy(), 'r-', lw = 4)\nplt.show()\n\nprint(\"\u5b9e\u9645\u7684\u53c2\u6570w\u662f\uff1a 5 \\n\" )\nprint(\"\u9884\u6d4b\u7684\u53c2\u6570w\u662f\", parameters[\"W\"])\nprint(\"\u9884\u6d4b\u7684\u5e38\u6570\u9879\u662f\uff1a\" , parameters[\"b\"])\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/PyTorch/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/#_2","title":"\u903b\u8f91\u56de\u5f52","text":"<p>\u6ce8\u610f\uff1a\u662f\u4e00\u4e2a\u5206\u7c7b\u6a21\u578b\uff0c\u5728\u7ebf\u6027\u56de\u5f52\u7684\u57fa\u7840\u4e0a\u589e\u52a0 Sigmoid \u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u8868\u793a\u6982\u7387\u3002</p> \\[ \\sigma(x) = \\frac{1}{1 + \\mathrm{e}^{-x}} \\] <p>\u4f7f\u7528 BCE Loss\uff0c</p> \\[ loss = - \\frac{1}{N}\\sum_{n = 1}^N \\left(y_n \\log \\hat{y_n} + (1 - y_n) \\log (1 - \\hat{y_n}))\\right), \\quad y_n \\in \\{0, 1\\} \\] <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u636e</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528</p> Python<pre><code># Define Logistic Regression model\nclass LogisticRegression(nn.Module):\n    def __init__(self, input_dim):\n        super(LogisticRegression, self).__init__()\n        self.linear = nn.Linear(input_dim, 1)\n\n    def forward(self, x):\n        return torch.sigmoid(self.linear(x))\n\n# Initialize model\nmodel = LogisticRegression(input_dim=2)\n\n# Loss and optimizer\ncriterion = nn.BCELoss()  # Binary Cross Entropy Loss\noptimizer = torch.optim.SGD(model.parameters(), lr=0.1)\n\n# Training loop\nepochs = 1000\nlosses = []\n\nfor epoch in range(epochs):\n    # Forward pass\n    outputs = model(X_tensor)\n    loss = criterion(outputs, y_tensor)\n    losses.append(loss.item())\n\n    # Backward pass and optimize\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\n\n    if (epoch+1) % 100 == 0:\n        print(f'Epoch [{epoch+1}/{epochs}], Loss: {loss.item():.4f}')\n\n# Plotting the decision boundary\nw = model.linear.weight.detach().numpy()[0]\nb = model.linear.bias.detach().numpy()\n\nx_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1\ny_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1\nxx, yy = np.meshgrid(np.linspace(x_min, x_max, 100),\n                     np.linspace(y_min, y_max, 100))\nZ = model(torch.tensor(np.c_[xx.ravel(), yy.ravel()], dtype=torch.float32)).detach().numpy()\nZ = Z.reshape(xx.shape)\n\nplt.figure(figsize=(10, 6))\nplt.contourf(xx, yy, Z, levels=[0, 0.5, 1], cmap=plt.cm.RdYlBu, alpha=0.6)\nplt.scatter(r0[:, 0], r0[:, 1], c='blue', label='Class 0')\nplt.scatter(r1[:, 0], r1[:, 1], c='red', label='Class 1')\nplt.contour(xx, yy, Z, levels=[0.5], colors='black')\nplt.title('Logistic Regression Decision Boundary')\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.legend()\nplt.show()\n\n# Plot training loss\nplt.figure(figsize=(10, 4))\nplt.plot(losses)\nplt.title('Training Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.show()\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230\u5212\u5206</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/","title":"K-Means \u805a\u7c7b","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 560 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u975e\u76d1\u7763\u5b66\u4e60\u7684\u805a\u7c7b\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_1","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u5b83\u6bcf\u6b21\u90fd\u4f1a\u6839\u636e\u6570\u636e\u7684\u5206\u5e03\u53bb\u5bfb\u627e\u805a\u7c7b\u4e2d\u5fc3\u3002\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5206\u7c7b\uff0c\u6bcf\u4e00\u4e2a\u70b9\u4e0e\u81ea\u5df1\u7c7b\u522b\u7684\u4e2d\u5fc3\u5728\u8ddd\u79bb\u4e0a\u90fd\u662f\u6700\u8fd1\u7684\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#k-means","title":"K-means \u7b97\u6cd5\uff1a\u6700\u5927\u671f\u671b","text":"<p>K-Means \u662f\u4e00\u4e2a\u7075\u6d3b\u8fd0\u7528\u4e86\u6700\u5927\u671f\u671b\u7684\u65b9\u6cd5\u53bb\u83b7\u5f97\u89e3\u51b3\u65b9\u6cd5\u7684\u7b97\u6cd5\u3002 \u6700\u5927\u671f\u671b\u662f\u4e00\u4e2a\u7531\u4e0b\u9762\u7684\u4e24\u6b65\u6784\u6210\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u731c\u6d4b\u7c7b\u522b\u7684\u4e2d\u5fc3  </li> <li>\u91cd\u590d\u4e0b\u9762\u7684\u6b65\u9aa4\u76f4\u5230\u6536\u655b       A. \u5c06\u6570\u636e\u70b9\u5f52\u4e3a\u6700\u8fd1\u7684\u4e2d\u5fc3\u6240\u5bf9\u5e94\u7684\u5206\u7c7b       B. \u6839\u636e\u8be5\u7c7b\u522b\u7684\u73b0\u6709\u7684\u6570\u636e\u70b9\u7684\u5206\u5e03\uff0c\u66f4\u65b0\u8be5\u7c7b\u522b\u4e2d\u5fc3  </li> </ol> <p>\u5173\u4e8e\u6536\u655b\u6027</p> <p>KMeans\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u6536\u655b\u7684\u3002\u6240\u4ee5\uff0cscikit-learn\u521d\u59cb\u5316\u4e86\u5f88\u591a\u968f\u673a\u503c\uff0c\u53bb\u5bfb\u627e\u6700\u4f18\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_2","title":"\u5e94\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_3","title":"\u624b\u5199\u8bc6\u522b","text":"Python<pre><code>est = KMeans(n_clusters=10)\nclusters = est.fit_predict(digits.data)\n</code></pre> <p>\u663e\u793a 10 \u4e2a\u5206\u7c7b\u51fa\u7684\u4e2d\u5fc3\u6709</p> Python<pre><code>fig = plt.figure(figsize=(8, 3))\nfor i in range(10):\n    ax = fig.add_subplot(2, 5, 1 + i, xticks=[], yticks=[])\n    ax.imshow(est.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)\n\nplt.show()\n</code></pre> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u6570\u5b57\u7684\u987a\u5e8f\u88ab\u6539\u53d8\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528</p> Python<pre><code>from scipy.stats import mode\n\nlabels = np.zeros_like(clusters)\nfor i in range(10):\n    mask = (clusters == i)\n    labels[mask] = mode(digits.target[mask])[0]\n</code></pre> <p>\u6839\u636e\u805a\u7c7b\u7ed3\u679c <code>clusters</code>\uff0c\u5c06\u6bcf\u4e2a\u805a\u7c7b\u7c07\u7f16\u53f7\uff08\u5982 0~9\uff09\u6620\u5c04\u4e3a\u771f\u5b9e\u6807\u7b7e\u4e2d\u51fa\u73b0\u6700\u591a\u7684\u7c7b\u522b\uff0c\u4ece\u800c\u83b7\u5f97\u6b63\u786e\u7684\u5206\u7c7b\u3002</p> <p>\u5c06\u5176\u4e0e PCA \u5f97\u5230\u7684\u6807\u7b7e\u5bf9\u6bd4</p> Python<pre><code>from sklearn.decomposition import PCA\n\nX = PCA(2).fit_transform(digits.data)\n\nkwargs = dict(cmap = plt.cm.get_cmap('rainbow', 10),\n              edgecolor='none', alpha=0.6)\nfig, ax = plt.subplots(1, 2, figsize=(8, 4))\nax[0].scatter(X[:, 0], X[:, 1], c=labels, **kwargs)\nax[0].set_title('learned cluster labels')\n\nax[1].scatter(X[:, 0], X[:, 1], c=digits.target, **kwargs)\nax[1].set_title('true labels')\n\nfor ax in ax:\n    ax.axis('off')\n\nplt.show()\n</code></pre> <p></p> <p>\u7ed8\u5236\u6df7\u6dc6\u77e9\u9635\u6709</p> Python<pre><code>plt.imshow(confusion_matrix(digits.target, labels),\n           cmap='Blues', interpolation='nearest')\nplt.colorbar()\nplt.grid(False)\nplt.ylabel('true')\nplt.xlabel('predicted')\n\nplt.show()\n</code></pre> <p></p> <p>\u518d\u4e00\u6b21\u8bf4\u660e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u7684\u65e0\u76d1\u7763\u7684\u4f30\u8ba1\uff0c\u5b83\u8fbe\u5230\u4e8680%\u7684\u6b63\u786e\u7387\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/K-Means%E8%81%9A%E7%B1%BB/K-Means%E8%81%9A%E7%B1%BB/#_4","title":"\u989c\u8272\u538b\u7f29","text":"<p>\u5047\u8bbe\u6709\u4e00\u5e45\u62e5\u6709\u767e\u4e07\u79cd\u989c\u8272\u7684\u56fe\u7247\u3002\u5728\u5927\u90e8\u5206\u7684\u56fe\u7247\u4e2d\uff0c\u5927\u91cf\u7684\u989c\u8272\u4e0d\u4f1a\u88ab\u4f7f\u7528\uff0c\u6216\u8005\u5f88\u5927\u4e00\u90e8\u5206\u7684\u50cf\u7d20\u62e5\u6709\u76f8\u4f3c\u6216\u8005\u76f8\u540c\u7684\u989c\u8272\u3002</p> <p>\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c</p> Python<pre><code>from sklearn.datasets import load_sample_image\nchina = load_sample_image(\"china.jpg\")\n\nX = (china / 255.0).reshape(-1, 3)\n</code></pre> <p>\u6211\u4eec\u73b0\u5728\u6709 273,280 \u4e2a3\u7ef4\u6570\u636e\u70b9 (RGB)\u3002</p> <p>\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u8fd0\u7528KMeans\u53bb\u538b\u7f29\\(256^3\\)\u79cd\u989c\u8272\uff0c\u8ba9\u989c\u8272\u7684\u79cd\u7c7b\u603b\u6570\u51cf\u5c0f\uff08\u6bd4\u5982\u51cf\u523032\u8272\uff09\u3002\u6211\u4eec\u60f3\u5728\u6240\u6709\u7684\u6570\u636e\u4e2d\u5bfb\u627e\\(N_{color}\\)\u4e2a\u7c7b\u522b\u4e2d\u5fc3\uff0c\u7136\u540e\u53bb\u7528\u8fd932\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u53bb\u521b\u5efa\u4e00\u526f\u65b0\u7684\u56fe\u50cf\uff0c\u5728\u8fd9\u4e2a\u65b0\u7684\u56fe\u50cf\u4e2d\uff0c\u539f\u6709\u56fe\u50cf\u6570\u636e\u4e2d\u7684\u989c\u8272\u4f1a\u6839\u636e\u5c31\u8fd1\u539f\u5219\u88ab\u6700\u8fd1\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u989c\u8272\u4ee3\u66ff\u3002</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528<code>MiniBatchKMeans</code>\uff0c\u4e00\u4e2a\u66f4\u5b8c\u5907\uff0c\u9002\u7528\u4e8e\u66f4\u5927\u7684\u6570\u636e\u96c6\u7684\u9884\u6d4b\u5668\uff1a</p> Python<pre><code>from sklearn.cluster import MiniBatchKMeans\n\nn_colors = 32\n\nX = (china / 255.0).reshape(-1, 3)\n\nmodel = MiniBatchKMeans(n_colors)\nlabels = model.fit_predict(X)\ncolors = model.cluster_centers_\nnew_image = colors[labels].reshape(china.shape)\nnew_image = (255 * new_image).astype(np.uint8)\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u989c\u8272\u7684\u6570\u91cf\u51cf\u5c11\u4e86\uff0c\u4f46\u662f\u4ecd\u65e7\u4fdd\u7559\u4e86\u56fe\u7247\u7684\u6574\u4f53\u4fe1\u606f\u3002</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 667 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u975e\u76d1\u7763\u5b66\u4e60\u7684\u964d\u7ef4\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_1","title":"\u57fa\u672c\u539f\u7406","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_2","title":"\u5904\u7406\u8fc7\u7a0b","text":"<p>\u5bf9\u8fd9\u6837\u7684\u6570\u636e\u96c6</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e00\u7ec4\u6570\u636e\u6709\u4e00\u4e2a\u660e\u663e\u7684\u8d8b\u52bf\u548c\u8d70\u5411\u3002\u4e3b\u6210\u5206\u5206\u6790(PCA)\u505a\u7684\u5c31\u662f\u53bb\u5bfb\u627e\u8fd9\u4e00\u7ec4\u6570\u636e\u4e2d\u7684\u6700\u57fa\u672c\u7684\u8f74\uff0c\u7136\u540e\u53bb\u89e3\u91ca\u8fd9\u4e9b\u8f74\u662f\u600e\u6837\u5f71\u54cd\u6570\u636e\u5206\u5e03\u7684\u3002</p> Python<pre><code>from sklearn.decomposition import PCA\n\npca = PCA(n_components=2)\npca.fit(X)\n</code></pre> <p>\u8f93\u51fa <code>pca.explained_variance_</code> \u4e3a <code>[0.7625315 0.0184779]</code>\uff0c<code>pca.components_</code> \u4e3a <code>[[-0.94446029 -0.32862557]  [-0.32862557  0.94446029]]</code>\u3002\u5c06\u5176\u7ed8\u5236\u5728\u56fe\u4e0a\u4e3a\uff1a</p> <p></p> <p>\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u5411\u91cf\u6bd4\u53e6\u4e00\u4e2a\u5411\u91cf\u957f\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u8fd9\u4e2a\u957f\u5411\u91cf\u5bf9\u5e94\u7684\u6570\u636e\u65b9\u5411\u6bd4\u53e6\u4e00\u4e2a\u65b9\u5411\u8981\"\u91cd\u8981\"\u3002\u65b9\u5dee\u91cf\u5316\u4e86\u65b9\u5411\u7684\"\u91cd\u8981\u6027\"\u3002</p> <p>\u964d\u4f4e\u4fdd\u6301\u7684\u65b9\u5dee\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e00\u4e9b\u6b21\u8981\u6210\u5206\u3002\u4e0b\u9762\u662f\u820d\u5f03 \\(5%\\) \u65b9\u5dee\u7684\u7ed3\u679c</p> Python<pre><code>clf = PCA(0.95) # \u4fdd\u630195%\u7684\u65b9\u5dee\nX_trans = clf.fit_transform(X)\n\nX_new = clf.inverse_transform(X_trans)\nplt.plot(X[:, 0], X[:, 1], 'o', alpha=0.2)\nplt.plot(X_new[:, 0], X_new[:, 1], 'ob', alpha=0.8)\nplt.axis('equal');\n</code></pre> <p></p> <p>\u5728\u56fe\u4e2d\uff0c\u6d45\u8272\u7684\u70b9\u662f\u539f\u59cb\u6570\u636e\uff0c\u6df1\u8272\u7684\u70b9\u662f\u7ecf\u8fc7\u6295\u5c04\u548c\u538b\u7f29\u540e\u7684\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u820d\u5f03\u4e865%\u7684\u6570\u636e\u65b9\u5dee\u4e4b\u540e\uff0c\u6570\u636e\u96c6\u4e2d\u6700\u91cd\u8981\u7684\u7279\u5f81\u88ab\u4fdd\u7559\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u6211\u4eec\u7684\u6570\u636e\u603b\u91cf\u88ab\u538b\u7f29\u4e86\u4e00\u534a\uff01</p> <p>\u8fd9\u5c31\u662f\"\u4e3b\u6210\u5206\u5206\u6790\"\u6240\u505a\u7684\uff1a\u5982\u679c\u5c06\u6570\u636e\u8fd1\u4f3c\u5728\u4e00\u4e2a\u4f4e\u7684\u7ef4\u5ea6\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u6570\u636e\u6216\u8005\u4e3a\u8fd9\u4e2a\u6570\u636e\u6dfb\u52a0\u66f4\u590d\u6742\u7684\u6a21\u578b\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_3","title":"\"\u6210\u5206\"\u6307\u7684\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5bf9\u4e8e\u56fe\u7247\u6765\u8bf4\uff0c\u5982\u679c\u5bf9\u5176\u76f4\u63a5\u964d\u7ef4\u4f1a\u5bfc\u81f4\u6211\u4eec\u53ea\u80fd\u770b\u5230\u56fe\u7247\u7684\u90e8\u5206\u50cf\u7d20\u3002\u800c\u5c06\u56fe\u7247\u8868\u793a\u7684\u5411\u91cf\u8fdb\u884c\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5f88\u5c11\u7684\u4fe1\u606f\u5c31\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u6548\u679c\u4e0d\u9519\u7684\u8fd1\u4f3c\u3002\u4f4e\u7ef4\u6570\u636e\u7684\u8868\u8fbe\u662f\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u53c2\u6570\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_4","title":"\u9009\u62e9\u6210\u5206\u7684\u6570\u91cf","text":"<p>\u5728\u6211\u4eec\u820d\u5f03\u6b21\u8981\u7684\u6210\u5206\u65f6\uff0c\u6211\u4eec\u7a76\u7adf\u820d\u5f03\u4e86\u591a\u5c11\u4fe1\u606f\uff1f\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u89e3\u91ca\u65b9\u5dee\uff0c\u4ece\u56fe\u4e2d\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002</p> Python<pre><code>pca = PCA().fit(X)\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel('number of components')\nplt.ylabel('cumulative explained variance')\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_5","title":"\u76f8\u5173\u5e94\u7528","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_6","title":"\u624b\u5199\u8bc6\u522b","text":"<p>\u5bf9\u4e8e 64 \u7ef4\u7684\u624b\u5199\u8bc6\u522b\u6570\u636e\uff0c\u6211\u4eec\u7528 PCA \u5c06\u5176\u6295\u5c04\u5230\u5e73\u9762\u4e0a\u3002</p> Python<pre><code>from sklearn.datasets import load_digits\ndigits = load_digits()\nX = digits.data\ny = digits.target\n\npca = PCA(2)  # \u5c0664\u4e2a\u7ef4\u5ea6\u6295\u5c04\u57282\u4e2a\u7ef4\u5ea6\nXproj = pca.fit_transform(X)\n\nplt.scatter(Xproj[:, 0], Xproj[:, 1], c=y, edgecolor='none', alpha=0.5,\n            cmap=plt.cm.get_cmap('nipy_spectral', 10))\nplt.colorbar()\n</code></pre> <p></p> <p>\u4e0a\u56fe\u4e2d\u6a2a\u7eb5\u8f74\u8868\u793a\u4e24\u4e2a\u4e3b\u6210\u5206\uff0c<code>c=y</code> \u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\u5bf9\u5e94\u5b83\u7684\u6570\u5b57\u6807\u7b7e\uff080~9\uff09</p> <p>\u4e0a\u56fe\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e0d\u540c\u6570\u5b57\u7684\u5173\u8054\u548c\u5dee\u5f02\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_7","title":"\u6570\u636e\u538b\u7f29","text":"<p>\u4e0b\u9762\u662f\u6539\u53d8\u4e0d\u540c\u6210\u5206\u7684\u6570\u76ee\u65f6\u540c\u4e00\u5bf9\u8c61\u7684\u538b\u7f29\u7ed3\u679c\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/#_8","title":"\u5176\u5b83\u7684\u964d\u7ef4\u7b97\u6cd5","text":"<p>Scikit-learn\u4e2d\u8fd8\u6709\u95e8\u591a\u5176\u4ed6\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u65b9\u6cd5</p> <ul> <li>sklearn.decomposition.PCA:     \u4e3b\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.RandomizedPCA:    \u57fa\u4e8e\u968f\u673a\u7b97\u6cd5\u7684\u9ad8\u901f\u7684\u4e3b\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.SparsePCA:    \u5305\u542bL1\u6b63\u5219\u5316\u60e9\u7f5a\u7684PCA</li> <li>sklearn.decomposition.FastICA:    \u72ec\u7acb\u6210\u5206\u5206\u6790</li> <li>sklearn.decomposition.NMF:    \u975e\u8d1f\u77e9\u9635\u56e0\u5b50\u5206\u89e3</li> <li>sklearn.manifold.LocallyLinearEmbedding:    \u57fa\u4e8e\u90bb\u5c45\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u6d41\u5f62\u5b66\u4e60\u6280\u672f</li> <li>sklearn.manifold.IsoMap:    \u57fa\u4e8e\u7a00\u758f\u56fe\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u6d41\u5f62\u5b66\u4e60\u7b97\u6cd5</li> </ul> <p>\u8be6\u89c1 scikit-learn website\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/","title":"\u5165\u95e8","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 665 \u4e2a\u5b57\u00a0\u00a06 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn","title":"\u5173\u4e8eScikit-Learn","text":"<p>Scikit-Learn\u662f\u4e00\u4e2a\u91c7\u7528\u7b80\u6d01\u5e76\u7075\u6d3b\u7684 API\uff0c\u5411\u7528\u6237\u63d0\u4f9b\u5e7f\u4e3a\u4eba\u77e5\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684Python\u5305\u3002\u5b83\u7531\u4e0a\u767e\u4e2a\u8d21\u732e\u8005\u6240\u5f00\u53d1\uff0c\u5e76\u4e14\u5df2\u7ecf\u5e7f\u6cdb\u8fd0\u7528\u81f3\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u4e2d\u3002</p> <p>Scikit-Learn\u4f9d\u8d56\u4e8ePython\u7684 NumPy (Numerical Python) \u548c SciPy (Scientific Python)\u5e93\uff0c\u5b83\u4eec\u4e3aPython\u4e2d\u9ad8\u6548\u7684\u6570\u503c\u548c\u79d1\u5b66\u8ba1\u7b97\u63d0\u4f9b\u4e86\u652f\u6301\u3002scikit-learn\u672c\u8eab\u5e76\u4e0d\u662f\u4e3a\u6781\u5927\u7684\u6570\u636e\u96c6\u91cf\u8eab\u5b9a\u505a\u7684\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u57fa\u4e8e\u6b64\u7684\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#iris-dataset","title":"\u9e22\u5c3e\u82b1\uff08iris dataset\uff09\u5206\u7c7b\u7684\u5168\u6d41\u7a0b\u4f8b\u5b50","text":"<p>\u52a0\u8f7d\u548c\u8bfb\u53d6\u6570\u636e</p> Python<pre><code># \u5bfc\u5165 sklearn\nfrom sklearn import neighbors, datasets, preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport pandas as pd\n\n# \u52a0\u8f7d\u6570\u636e\n# https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html\niris = datasets.load_iris()\n\n# \u67e5\u770biris\u539f\u59cb\u6570\u636e\nprint(pd.DataFrame(iris.data, columns=iris.feature_names).head())\nprint(iris.target)\n</code></pre> <p>\u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6</p> Python<pre><code>X, y = iris.data[:, :2], iris.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n</code></pre> <p><code>iris.data</code> \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08150\u00d74\uff09\uff0c\u4ee3\u8868 150 \u4e2a\u6837\u672c\u7684 4 \u4e2a\u7279\u5f81\uff1a - \u82b1\u843c\u957f\u5ea6\uff08sepal length\uff09 - \u82b1\u843c\u5bbd\u5ea6\uff08sepal width\uff09 - \u82b1\u74e3\u957f\u5ea6\uff08petal length\uff09 - \u82b1\u74e3\u5bbd\u5ea6\uff08petal width\uff09    </p> <p><code>iris.target</code> \u662f\u5bf9\u5e94\u7684\u6807\u7b7e\uff080, 1, 2\uff09\uff0c\u8868\u793a\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1\u54c1\u79cd\u3002 \u53ea\u53d6\u524d\u4e24\u4e2a\u7279\u5f81\uff08\u82b1\u843c\u957f\u5ea6 &amp; \u82b1\u843c\u5bbd\u5ea6\uff09\u4f5c\u4e3a\u7279\u5f81\u77e9\u9635 <code>X</code>\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u6216\u7b80\u5316\u6a21\u578b\u4efb\u52a1\u3002\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u6295\u5f71\u7684\u964d\u7ef4\u64cd\u4f5c\u3002  </p> <p><code>random_state=33</code>\uff1a\u8bbe\u7f6e\u968f\u673a\u79cd\u5b50\uff0c\u786e\u4fdd\u6bcf\u6b21\u8fd0\u884c\u90fd\u5212\u5206\u76f8\u540c\uff08\u4fbf\u4e8e\u7ed3\u679c\u590d\u73b0\uff09 \u9ed8\u8ba4 <code>train_test_split</code> \u662f 75% \u8bad\u7ec3\u96c6 + 25% \u6d4b\u8bd5\u96c6</p> <p>\u6570\u636e\u9884\u5904\u7406</p> Python<pre><code>scaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n</code></pre> <p><code>scaler</code> \u662f \u6807\u51c6\u5316\u5668 (StandardScaler)\uff0c\u5b83\u4f1a \u201c\u5b66\u201d\u8bad\u7ec3\u96c6\u7684\u5747\u503c\u4e0e\u6807\u51c6\u5dee \uff0c\u5e76\u8bb0\u4f4f\u8fd9\u4e9b\u503c\u3002 <code>scaler.transform()</code> \u7528\u4e0a\u4e00\u6b65\u201c\u5b66\u5230\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u201d\u6765 \u8f6c\u6362\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u5373 </p> \\[  x' = \\frac{x - \\mu}{\\sigma}  \\] <p>\u53ea\u80fd\u7528\u8bad\u7ec3\u96c6\u6765\u8ba1\u7b97\u5747\u503c\u548c\u6807\u51c6\u5dee\uff01</p> <p>\u5426\u5219\u6d4b\u8bd5\u96c6\u5c31\u201c\u6cc4\u6f0f\u201d\u4fe1\u606f\u7ed9\u6a21\u578b\u4e86\uff0c\u8fdd\u80cc\u673a\u5668\u5b66\u4e60\u7684\u57fa\u672c\u539f\u5219</p> <p>\u6a21\u578b\u8bad\u7ec3</p> Python<pre><code># \u521b\u5efa\u6a21\u578b\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\n# \u6a21\u578b\u62df\u5408\nknn.fit(X_train, y_train)\n</code></pre> <p>\u8fd9\u91cc\u7528\u7684\u662f KNN (KNeighborsClassifier)</p> <p>\u6a21\u578b\u9884\u6d4b\u8bc4\u4f30</p> Python<pre><code># \u9884\u6d4b\ny_pred = knn.predict(X_test)\n# \u8bc4\u4f30\naccuracy_score(y_test, y_pred)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn_1","title":"Scikit-learn\u4e2d\u7684\u6570\u636e\u5bfc\u5165\u4e0e\u8868\u793a","text":"<p>\u5728Scikit-learn\u4e2d\uff0c\u5927\u591a\u6570\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6570\u636e\u5728\u4e8c\u7ef4\u7684\u6570\u7ec4\u6216\u8005\u77e9\u9635\u4e2d\u5b58\u50a8\u3002\u8fd9\u4e9b\u6570\u636e\u53ef\u80fd\u662f<code>numpy</code>\u6570\u7ec4\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u662f<code>scipy.sparse</code>\u77e9\u9635\u3002\u6570\u7ec4\u7684\u5927\u5c0f\u5e94\u8be5\u662f<code>[\u6837\u672c\uff08sample\uff09\u6570\uff0c\u7279\u5f81\uff08feature\uff09\u6570]</code> \u3002</p> <ul> <li>\u6837\u672c\u6570\uff08n_sample\uff09: \u6837\u672c\u7684\u6570\u76ee\u3002\u6bcf\u4e00\u4e2a\u6837\u672c\u90fd\u662f\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684\u72ec\u7acb\u4e2a\u4f53\uff08\u4f8b\u5982\uff1a\u9700\u8981\u88ab\u5206\u7c7b\uff09\uff0c\u4e00\u4e2a\u6837\u672c\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u6863\u3001\u4e00\u5e45\u56fe\u7247\u3001\u4e00\u6bb5\u97f3\u9891\u3001\u4e00\u6bb5\u89c6\u9891\u3001\u4e00\u4e2a\u5929\u6587\u5b66\u6570\u636e\u3001\u6570\u636e\u5e93\u6216\u8005CSV\u6587\u4ef6\u4e2d\u7684\u4e00\u884c\uff0c\u6216\u8005\u4efb\u610f\u4e00\u4e2a\u786e\u5b9a\u7684\u6570\u503c\u7684\u96c6\u5408\u3002</li> <li>\u7279\u5f81\u6570\uff08n_feature\uff09: \u7279\u5f81\u7684\u6570\u76ee\uff0c\u7279\u5f81\u662f\u63cf\u8ff0\u4e00\u4e2a\u6837\u672c\u7684\u6570\u503c\u8868\u8fbe\u3002\u7279\u5f81\u4e00\u822c\u662f\u5b9e\u6570\uff0c\u4e0d\u8fc7\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u662f\u5e03\u5c14\u503c\u6216\u8005\u662f\u79bb\u6563\u6570\u636e\u3002</li> </ul> <p>\u7279\u5f81\u6570\u5fc5\u987b\u63d0\u524d\u786e\u5b9a\u3002\u4f46\u662f\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6837\u672c\uff0c\u7279\u5f81\u53ef\u4ee5\u662f\u5f88\u5927\uff08\u767e\u4e07\u7ea7\uff09\u7684\u4e00\u4e2a\u96f6\u5360\u5927\u591a\u6570\u7684\u96c6\u5408\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>scipy.sparse</code>\u77e9\u9635\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\uff0c\u7528\u8fd9\u4e2a\u77e9\u9635\u6bd4numpy\u77e9\u9635\u5728\u5b58\u50a8\u4e0a\u4f1a\u66f4\u52a0\u9ad8\u6548\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn_2","title":"Scikit-learn \u4e2d\u7684\u5176\u5b83\u5185\u7f6e\u6570\u636e","text":"<p>\u5b83\u4eec\u5206\u4e3a\u5982\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u5305\u5185\u7f6e\u6570\u636e\uff1a \u8fd9\u4e9b\u5c0f\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u88ab\u96c6\u6210\u5728scikit-learn\u7684\u5b89\u88c5\u5305\u91cc\u9762\u4e86\uff0c\u53ef\u4ee5\u7528<code>sklearn.datasets.load_*</code>\u53bb\u4e0b\u8f7d\u5b83</li> <li>\u4f9b\u4e0b\u8f7d\u6570\u636e\uff1a \u8fd9\u4e9b\u8f83\u5927\u7684\u6570\u636e\u53ef\u4ee5\u4f9b\u7528\u6237\u4eec\u4e0b\u8f7d\uff0cscikit-learn\u91cc\u9762\u5df2\u7ecf\u5305\u542b\u4e86\u4e0b\u8f7d\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u6d41\u901a\u9053\u3002\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u5728<code>sklearn.datasets.fetch_*</code>\u4e2d\u627e\u5230\u3002</li> <li>\u751f\u6210\u6570\u636e\uff1a \u901a\u8fc7\u968f\u673a\u79cd\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7\u73b0\u6709\u6a21\u578b\u968f\u673a\u751f\u6210\u4e00\u4e9b\u6570\u636e\u96c6\u3002\u5b83\u4eec\u53ef\u4ee5\u5728<code>sklearn.datasets.make_*</code>\u4e2d\u627e\u5230</li> </ul> \u4e73\u817a\u764c\u6570\u636e\u96c6\u624b\u5199\u6570\u5b57\uff08Digits\uff09\u6570\u636e\u96c6\u6ce2\u58eb\u987f\u623f\u4ef7\uff08California Housing \u66ff\u4ee3\u7248\uff09 Python<pre><code>from sklearn.datasets import load_breast_cancer\nX_breast, y_breast = load_breast_cancer(return_X_y=True)\n\nfrom sklearn.model_selection import train_test_split\nX_breast_train, X_breast_test, y_breast_train, y_breast_test = train_test_split(X_breast, y_breast, stratify=y_breast, random_state=0, test_size=0.3)\n</code></pre> <p>\u4f7f\u7528<code>sklearn.model_selection.train_test_split</code>\u62c6\u5206\u6570\u636e\u96c6\u5e76\u4fdd\u755930\uff05\u7684\u6570\u636e\u96c6\u4ee5\u8fdb\u884c\u6d4b\u8bd5\u3002\u786e\u4fdd\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5c42\uff08\u5373\u4f7f\u7528 <code>stratify</code>\u53c2\u6570\uff09\u5e76\u5c06<code>random_state</code>\u8bbe\u7f6e\u4e3a<code>0</code>\u3002</p> <p>\u4f7f\u7528 \u68af\u5ea6\u63d0\u5347\u5206\u7c7b\u5668\uff08Gradient Boosting Classifier\uff09\u8fdb\u884c\u8bad\u7ec3\u548c\u9884\u6d4b</p> Python<pre><code>from sklearn.ensemble import GradientBoostingClassifier\n\nclf = GradientBoostingClassifier(n_estimators=100, random_state=0)\nclf.fit(X_breast_train, y_breast_train)\ny_pred = clf.predict(X_breast_test)\n</code></pre> <p>\u8ba1\u7b97\u51c6\u786e\u7387</p> Python<pre><code>from sklearn.metrics import accuracy_score\n\naccuracy = accuracy_score(y_breast_test, y_pred)\nprint('Accuracy score of the {} is {:.2f}'.format(clf.__class__.__name__, accuracy))\n</code></pre> Python<pre><code>from sklearn.datasets import load_digits\nX_digits, y_digits = load_digits(return_X_y=True)\n</code></pre> Python<pre><code>from sklearn.datasets import fetch_california_housing\nX_house, y_house = fetch_california_housing(return_X_y=True)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#scikit-learn-estimator","title":"Scikit-learn \u4e2d\u7684 Estimator \u5bf9\u8c61","text":"<p>\u6bcf\u4e00\u4e2a\u5728scikit-learn\u4e2d\u5b9e\u73b0\u7684\u7b97\u6cd5\u90fd\u662f\u8868\u793a\u4e3a\u4e00\u4e2a \"Estimator\" \u7684\u5bf9\u8c61\u3002</p> <p>Estimator \u53c2\u6570\uff1a\u4e00\u4e2a Estimator \u5bf9\u8c61\u7684\u6240\u6709\u7cfb\u6570\u53ef\u4ee5\u5728\u5b83\u521d\u59cb\u5316\u7684\u65f6\u5019\u8bbe\u7f6e\uff0c\u8fd9\u4e9b\u7cfb\u6570\u62e5\u6709\u666e\u9002\u6027\u7684\u521d\u59cb\u503c\u3002</p> Python<pre><code>model = LinearRegression(normalize=True)\nprint(model.normalize)\n</code></pre> Text Output<pre><code>True\n</code></pre> <p>Estimator \u6a21\u578b\u53c2\u6570\uff1a\u5f53Estimator\u7528\u6570\u636e\u6765\u62df\u5408\u7cfb\u6570\u65f6\uff0c\u6a21\u578b\u7684\u7cfb\u6570\u662f\u6839\u636e\u6570\u636e\u4e00\u6b65\u6b65\u5f97\u5230\u7684\u3002\u6240\u6709\u7684\u6a21\u578b\u7cfb\u6570\u90fd\u662fEstimator\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u4ee5\u4e00\u4e2a\u4e0b\u5212\u7ebf(underscore)\u7ed3\u5c3e\u3002</p> Python<pre><code>model = LinearRegression(normalize=True)\n...\nmodel.fit(X, y)\n# \u4ee5\u4e0b\u5212\u7ebf\u7ed3\u5c3e\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u62df\u5408\u7684\u7cfb\u6570\nprint(model.coef_)\nprint(model.intercept_)\n# \u6b8b\u5dee\nprint(model._residues)\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#estimator","title":"\u5982\u4f55\u9009\u62e9Estimator","text":"<p>\u4e0b\u9762\u662f\u7531sckit-learn\u7684\u6700\u91cd\u8981\u7684\u8d21\u732e\u8005 Andreas Mueller \u63d0\u4f9b\u7684\u4e00\u5f20\u56fe\u3002\u5b83\u7ed9\u51fa\u4e86\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5e94\u8be5\u5e94\u7528\u4ec0\u4e48\u7b97\u6cd5\u7684\u603b\u7ed3\u3002</p> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/#_1","title":"\u5b66\u4e60\u66f2\u7ebf\u548c\u9a8c\u8bc1\u66f2\u7ebf","text":"<p>\u7ed8\u5236\u5b66\u4e60\u66f2\u7ebf</p> Python<pre><code>from sklearn.model_selection import learning_curve\nfrom sklearn.ensemble import RandomForestClassifier\n\nX,y = datasets.load_digits(return_X_y=True)\n\ntrain_sizes,train_score,test_score = learning_curve(RandomForestClassifier(n_estimators = 10),X,y,train_sizes=[0.1,0.2,0.4,0.6,0.8,1],scoring='accuracy')\n\ntrain_error =  1- np.mean(train_score,axis=1)\ntest_error = 1- np.mean(test_score,axis=1)\n\nplt.plot(train_sizes,train_error,'o-',color = 'r',label = 'training')\nplt.plot(train_sizes,test_error,'o-',color = 'g',label = 'testing')\nplt.legend(loc='best')\nplt.xlabel('traing examples')\nplt.ylabel('error')\nplt.show()\n</code></pre> <p></p> <p>\u7ed8\u5236\u9a8c\u8bc1\u66f2\u7ebf</p> Python<pre><code>from sklearn.model_selection import validation_curve\n\nX,y = datasets.load_digits(return_X_y=True)\nparam_range = [10,20,40,80,160,250]\n\ntrain_score,test_score = validation_curve(RandomForestClassifier(),X,y,param_name='n_estimators',param_range=param_range,cv=10,scoring='accuracy')\n\ntrain_score =  np.mean(train_score,axis=1)\ntest_score = np.mean(test_score,axis=1)\n\nplt.plot(param_range,train_score,'o-',color = 'r',label = 'training')\nplt.plot(param_range,test_score,'o-',color = 'g',label = 'testing')\nplt.legend(loc='best')\nplt.xlabel('number of tree')\nplt.ylabel('accuracy')\nplt.show()\n</code></pre> <p></p> <p>\u672c\u7b14\u8bb0\u4fee\u6539\u5e76\u603b\u7ed3\u81eaJake Vanderplas \u548c\u90d1\u51a0\u6770\u8001\u5e08\u7684\u8bfe\u4ef6\uff0c\u6e90\u4ee3\u7801\u548clicense\u6587\u4ef6\u5728GitHub\u3002 </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/","title":"\u652f\u6301\u5411\u91cf\u673a(SVM)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 184 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u5206\u7c7b\u65b9\u6cd5</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_1","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u652f\u6301\u5411\u91cf\u673a\uff08SVMs\uff09\u662f\u76d1\u7763\u5b66\u4e60\u4e2d\u7528\u6765\u5206\u7c7b\u6216\u8005\u56de\u5f52\u7684\u6700\u5f3a\u5927\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002\u652f\u6301\u5411\u91cf\u673a\u662f\u4e00\u79cd\u5224\u522b\u5206\u7c7b\u5668\uff1a\u5b83\u53ef\u4ee5\u5728\u6570\u636e\u7684\u96c6\u5408\u4e2d\u753b\u51fa\u4e00\u6761\u5206\u5272\u7ebf\u3002</p> <p>\u5b83\u4f1a\u4f18\u5316\u5206\u9694\u7684\u76f4\u7ebf\uff0c\u4f7f\u5f97\u76f4\u7ebf\u7684\u8fb9\u754c\u4e0e\u6570\u636e\u96c6\u7684\u5782\u76f4\u8ddd\u79bb\u6700\u5927\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_2","title":"\u76f4\u7ebf\u5206\u5272","text":"Python<pre><code>from sklearn.svm import SVC  # \"Support Vector Classifier\"\n\nclf = SVC(kernel='linear')\nclf.fit(X, y)\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u5206\u5272\u76f4\u7ebf</p> <p></p> <p>\u8fb9\u754c\u78b0\u5230\u7684\u70b9\u5c31\u662f\u6240\u8c13\u7684 \u652f\u6301\u5411\u91cf\uff0c \u5728scikit-learn\u4e2d\uff0c\u8fd9\u4e9b\u652f\u6301\u5411\u91cf\u88ab\u5b58\u50a8\u5728\u5206\u7c7b\u5668\u7684<code>suppport_vectors_</code>\u5c5e\u6027\u4e2d</p> Python<pre><code>plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='spring')\nplot_svc_decision_function(clf)\nplt.scatter(clf.support_vectors_[:, 0], clf.support_vectors_[:, 1],\n            s=200, alpha=0.3);\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_3","title":"\u6838\u65b9\u6cd5","text":"<p>\u6838\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u8f6c\u6362\u4e0d\u80fd\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u96c6\u3002</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u96be\u4ee5\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u96c6</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528\u5f84\u5411\u57fa\u51fd\u6570\uff0c\u628a <code>r</code> \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\uff0c</p> Python<pre><code>r = np.exp(-(X[:, 0] ** 2 + X[:, 1] ** 2))\n</code></pre> <p>\u5f97\u5230</p> <p></p> <p>\u5728 Scikit-learn \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>kernel='rbf'</code>\u6765\u5b9e\u73b0\uff0c\u5176\u4e2drbf\u662fradial basis function\u7684\u7f29\u5199\u3002</p> Python<pre><code>clf = SVC(kernel='rbf')\nclf.fit(X, y)\n</code></pre> <p>\u5f97\u5230\u7684\u5206\u5272\u4ee5\u53ca\u652f\u6301\u5411\u91cf\u4e3a</p> <p></p> <p>\u8865\u5145\u8bf4\u660e</p> <p>\u5173\u4e8e SVM \u548c \u6838\u65b9\u6cd5\u7684\u76f8\u5173\u63a8\u5230\u8be6\u89c1 https://zhuanlan.zhihu.com/p/131674827</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 130 \u4e2a\u5b57\u00a0\u00a01 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_1","title":"\u6570\u503c\u5904\u7406","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_2","title":"\u5f52\u4e00\u5316","text":"<ol> <li>Minmax \u7f29\u653e</li> </ol> Python<pre><code>data_scaler_minmax = preprocessing.MinMaxScaler(feature_range=(0, 1))\ndata_scaled_minmax = data_scaler_minmax.fit_transform(input_data)\n</code></pre> <ol> <li>\u6807\u51c6\u5316</li> </ol> \\[ x' = \\frac{x - \\mu}{\\sigma} \\]"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_3","title":"\u4e8c\u503c\u5316","text":"<ol> <li>\u6309\u5224\u636e\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c</li> </ol> Python<pre><code>data_binarized = preprocessing.Binarizer(threshold=0.5),transform(input_data)\n</code></pre> <ol> <li>OneHot \u7f16\u7801</li> </ol> Python<pre><code>onehot_encoder = preprocessing.OneHotEncoder(sparse=False)\nencoded = onehot_encoder.fit_transform(input_data)\n</code></pre> <p><code>sparse=False</code> \u8868\u793a\u8f93\u51fa\u7684\u77e9\u9635\u4e0d\u662f\u7a00\u758f\u77e9\u9635</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_4","title":"\u6570\u636e\u5206\u5272","text":"<p>\u6ce8\u610f</p> <p>\u4e0d\u8981\u628a\u6d4b\u8bd5\u6570\u636e\u6cc4\u9732\u7ed9\u8bad\u7ec3\u96c6\uff01</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/#_5","title":"\u6a21\u578b\u9a8c\u8bc1","text":"<p>\u4f8b\u5982\u5728 KNN \u4e0b\uff0c\u6784\u5efa\u6df7\u6dc6\u77e9\u9635</p> Python<pre><code>from sklearn.matrics import confusion_matrix\nconfusion_matrix(y, y_pred)\n</code></pre> <p>\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e0a\u7ed3\u679c\u4e0d\u540c</p> <p></p> <ul> <li>Accuracy (\u51c6\u786e\u5ea6) \u6307 </li> </ul> \\[ \\frac{|y = \\hat{y}|}{|y|} \\] <ul> <li>Precision (\u7cbe\u786e\u5ea6) \u6307</li> </ul> \\[ \\frac{|\\hat{y} = 1 \\&amp;\\&amp; y = 1|}{|\\hat{y} = 1|} \\] <ul> <li>Recall (\u53ec\u56de\u7387) \u6307</li> </ul> \\[ \\frac{|\\hat{y} = 1 \\&amp;\\&amp; y = 1|}{|y = 1|} \\] <p>\u5728\u5b9e\u8df5\u4e2d\uff0cPrcision \u589e\u52a0\u65f6 Recall \u4f1a\u964d\u4f4e\u3002\u4f8b\u5982\u5728\u75be\u75c5\u8bca\u65ad\u4e2d\u9700\u8981\u63d0\u9ad8 Recall\uff0c\u6545\u53ef\u4ee5\u9002\u5f53\u964d\u4f4e Precision\uff0c\u4e5f\u5373\u589e\u52a0 \\(|\\hat{y} = 1|\\) </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/","title":"\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 996 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_1","title":"\u76d1\u7763\u5b66\u4e60\uff1a\u5206\u7c7b\u4e0e\u56de\u5f52","text":"<p>\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u540c\u65f6\u5305\u542b\u7279\u5f81(feature)\u548c\u6807\u7b7e(label)\u7684\u6570\u636e\u96c6\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5bf9\u8c61\u7279\u5f81\uff0c\u53bb\u5efa\u7acb\u4e00\u4e2aEstimator\u9884\u6d4b\u5bf9\u8be5\u5bf9\u8c61\u7684\u6807\u7b7e\u3002\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff0c\u6211\u4eec\u7ed9\u51fa\u5bf9\u4e8eiris\u8fd9\u79cd\u82b1\u7684\u6d4b\u91cf\uff0c\u53bb\u9884\u6d4biris\u82b1\u7684\u5177\u4f53\u54c1\u79cd\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u66f4\u591a\u7684\u8f83\u4e3a\u590d\u6742\u7684\u4efb\u52a1\u89c1\u4e0b\u65b9\uff1a</p> <ul> <li>\u7ed9\u51fa\u4e00\u4e2a\u901a\u8fc7\u671b\u8fdc\u955c\u5f97\u5230\u7684\u5f69\u8272\u56fe\u7247\uff0c\u9884\u6d4b\u51fa\u8be5\u7269\u4f53\u662f\u4e00\u4e2a\u6052\u661f\uff0c\u4e00\u4e2a\u7c7b\u661f\u4f53\u6216\u8005\u4e00\u4e2a\u661f\u7cfb\u3002</li> <li>\u7ed9\u51fa\u4e00\u4e2a\u4eba\u7684\u7167\u7247\uff0c\u8bc6\u522b\u51fa\u8fd9\u4e2a\u4eba\u7684\u4fe1\u606f\u3002</li> <li>\u7ed9\u51fa\u4e00\u4e2a\u4eba\u770b\u8fc7\u7684\u7535\u5f71\uff0c\u548c\u8fd9\u4e9b\u7535\u5f71\u7684\u5f97\u5206\uff0c\u63a8\u8350\u7ed9\u8fd9\u4e2a\u4eba\u4ed6\u53ef\u80fd\u559c\u6b22\u7684\u5176\u4ed6\u7535\u5f71\uff08\u4e5f\u5c31\u662f\uff1a\u63a8\u8350\u7cfb\u7edf: \u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u4f8b\u5b50\u53ef\u4ee5\u53c2\u8003 Netflix Prize\uff09\u3002</li> </ul> <p>\u8fd9\u4e9b\u4efb\u52a1\u7684\u5171\u540c\u7279\u70b9\u5c31\u662f\uff0c\u6211\u4eec\u9700\u8981\u5229\u7528\u4e8b\u7269\u89c2\u6d4b\u5230\u7684\u5404\u79cd\u7279\u5f81\uff0c\u53bb\u9884\u6d4b\u4e00\u4e2a\u6216\u591a\u4e2a\u672a\u77e5\u7684\uff0c\u4e0e\u8fd9\u4e2a\u4e8b\u7269\u6709\u5173\u7684\u5176\u4ed6\u7279\u5f81\u3002</p> <p>\u8fdb\u4e00\u6b65\u7684\uff0c\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u88ab\u5212\u5206\u6210\u4e24\u4e2a\u5927\u7c7b\uff0c\u5373\u5206\u7c7b(classification)\u548c\u56de\u5f52(regression)\u3002\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u662f\u79bb\u6563\u7684\uff0c\u5728\u56de\u5f52\u95ee\u9898\u4e2d\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u662f\u8fde\u7eed\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u5929\u6587\u5b66\u4e2d\uff0c\u5224\u65ad\u4e00\u4e2a\u7269\u4f53\u662f\u4e00\u4e2a\u6052\u661f\uff0c\u4e00\u4e2a\u7c7b\u661f\u4f53\u6216\u8005\u662f\u4e00\u4e2a\u661f\u7cfb\u662f\u4e00\u4e2a\u5206\u7c7b\u7684\u95ee\u9898\uff1a\u8fd9\u4e2a\u4e09\u79cd\u6807\u7b7e\u6765\u81ea\u4e8e\u4e09\u4e2a\u72ec\u7acb\u7684\u7c7b\u522b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u53bb\u6839\u636e\u8fd9\u4e9b\u89c2\u6d4b\uff0c\u9884\u6d4b\u7269\u4f53\u7684\u5e74\u9f84\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u56de\u5f52\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6807\u7b7e\uff08\u5e74\u9f84\uff09\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6570\u5b57\u3002</p> <p>\u6ce8\u610f</p> <p>\u672c\u6587\u4e2d\u7684\u90e8\u5206\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u7b14\u8bb0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_2","title":"\u5206\u7c7b\u7b97\u6cd5\u7b80\u4ecb","text":"<p>K-NN\u3001SVC, \u8be6\u89c1 CV.</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_3","title":"\u56de\u5f52\u7b97\u6cd5\u7b80\u4ecb","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#linearregression","title":"<code>LinearRegression</code> \u7ebf\u6027\u62df\u5408","text":"Python<pre><code>model = LinearRegression()\nmodel.fit(X, y)\n\n# \u753b\u51fa\u6570\u636e\u548c\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u56fe\u5f62\nX_fit = np.linspace(0, 1, 100)[:, np.newaxis]\ny_fit = model.predict(X_fit)\n\nplt.plot(X.squeeze(), y, 'o')\nplt.plot(X_fit.squeeze(), y_fit);\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#randomforestregressor","title":"<code>RandomForestRegressor</code> \u968f\u673a\u68ee\u6797\u56de\u5f52","text":"<p>\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u6df1\u5165\u4ecb\u7ecd</p> Python<pre><code># \u8bad\u7ec3\u4e00\u4e2a\u968f\u673a\u68ee\u6797(Random Forest)\u6a21\u578b\nfrom sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor()\nmodel.fit(X, y)\n\n# \u753b\u51fa\u6570\u636e\u548c\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u56fe\u5f62\nX_fit = np.linspace(0, 1, 100)[:, np.newaxis]\ny_fit = model.predict(X_fit)\n\nplt.plot(X.squeeze(), y, 'o')\nplt.plot(X_fit.squeeze(), y_fit);\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#dimensionality-reductionclustering","title":"\u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u964d\u7ef4(Dimensionality Reduction)\u548c\u805a\u7c7b(Clustering)","text":"<p>\u65e0\u76d1\u7763\u5b66\u4e60\u4ece\u95ee\u9898\u7684\u53e6\u4e00\u4e2a\u89d2\u5ea6\u53bb\u8003\u8651\u3002\u6570\u636e\u5728\u8fd9\u91cc\u662f\u6ca1\u6709\u6807\u7b7e\u7684\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u95ee\u9898\u4e2d\u5bf9\u8c61\u7684\u76f8\u4f3c\u70b9\u3002\u4ece\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u60a8\u53ef\u4ee5\u8ba4\u4e3a\u65e0\u76d1\u7763\u5b66\u4e60\u662f\u4e00\u79cd\u4ece\u6570\u636e\u672c\u8eab\u53bb\u53d1\u6398\u6807\u7b7e\u7684\u65b9\u6cd5\u3002\u65e0\u76d1\u7763\u5b66\u4e60\u6709\u964d\u7ef4(dimensionality reduction) \u3001\u805a\u7c7b(clustering)\u548c\u5bc6\u5ea6\u4f30\u8ba1(density estimation)\u7b49\u7b97\u6cd5\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684iris\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u65e0\u76d1\u7763\u5b66\u4e60\u53bb\u53d1\u73b0\u54ea\u4e00\u79cd\u6d4b\u91cf\u7684\u7ec4\u5408\u6700\u80fd\u4f53\u73b0\u6570\u636e\u7684\u7ed3\u6784\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u4f1a\u770b\u5230\uff0c\u8fd9\u6837\u4e00\u79cd\u6570\u636e\u7684\u6295\u5f71\u80fd\u591f\u88ab\u7528\u6765\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u5c55\u73b0\u56db\u7ef4\u7684\u6570\u636e\u96c6\u3002\u8fd8\u6709\u4e00\u4e9b\u66f4\u8d34\u5207\u7684\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u7ed9\u51fa\u9065\u8fdc\u661f\u7cfb\u7684\u8be6\u7ec6\u7684\u89c2\u6d4b\u6570\u636e\uff0c\u51b3\u5b9a\u54ea\u4e00\u4e2a\u6216\u54ea\u51e0\u4e2a\u7279\u5f81\u662f\u6700\u80fd\u4f53\u73b0\u5176\u6570\u636e\u7684</li> <li>\u7ed9\u51fa\u4e24\u79cd\u58f0\u6e90\u7684\u6df7\u5408\uff08\u6bd4\u5982\u4e00\u4e2a\u4eba\u5728\u97f3\u4e50\u58f0\u4e2d\u8c08\u8bdd\uff09\uff0c\u5206\u79bb\u51fa\u4e24\u79cd\u58f0\u97f3\uff08\u8fd9\u53eb\u505a \u76f2\u6e90\u5206\u79bb \uff09</li> <li>\u7ed9\u51fa\u4e00\u6bb5\u89c6\u9891\uff0c\u5206\u79bb\u51fa\u5176\u4e2d\u8fd0\u52a8\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u8fd0\u52a8\u7269\u4f53\u6bd4\u8f83\uff0c\u7ed9\u51fa\u5206\u7c7b</li> </ul> <p>\u6709\u4e9b\u65f6\u5019\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u4f1a\u7ec4\u5408\u5728\u4e00\u8d77\uff1a\u65e0\u76d1\u7763\u5b66\u4e60\u53ef\u4ee5\u7528\u6765\u4ece\u6709\u591a\u4e2a\u7c7b\u522b\u7684\u6570\u636e\u4e2d\u627e\u5230\u6709\u7528\u7684\u7279\u5f81\uff0c\u800c\u83b7\u53d6\u7684\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u88ab\u7528\u5728\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u7684\u6846\u67b6\u4e2d\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#_4","title":"\u964d\u7ef4\u7b97\u6cd5\u7b80\u4ecb","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#pca","title":"<code>PCA</code> \u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u4e3b\u6210\u5206\u5206\u6790\uff08Principle Component Analysis, PCA\uff09\u662f\u4e00\u4e2a\u964d\u7ef4\u7b97\u6cd5\uff0c\u5b83\u53ef\u4ee5\u627e\u5230\u80fd\u8fbe\u5230\u6700\u5927\u65b9\u5dee\u7684\u6700\u4f73\u53d8\u91cf\u7684\u7ec4\u5408\u3002\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u7eed\u6df1\u5165\u4ecb\u7ecd</p> Python<pre><code>X, y = iris.data, iris.target\n\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=0.95)\npca.fit(X)\nX_reduced = pca.transform(X)\nprint(\"Reduced dataset shape:\", X_reduced.shape)\n\nimport matplotlib.pyplot as plt\n\nplt.scatter(X_reduced[:, 0], X_reduced[:, 1], \n            c=y, cmap='RdYlBu')\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/#kmeans-k-means","title":"<code>KMeans</code> K-means \u805a\u7c7b","text":"<p>\u805a\u7c7b\u7b97\u6cd5\u9488\u5bf9\u89c2\u6d4b\u5230\u7684\u6570\u636e\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u51c6\u5219\u53d1\u73b0\u5b83\u4eec\u7684\u5171\u540c\u70b9\uff0c\u5728\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u201c\u7fa4\u201d\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e9b\u805a\u7c7b(cluster)\u4f1a\u4ece\u6570\u636e\u4e2d\u53d1\u73b0\u4e00\u4e9b\u9690\u85cf\u7684\u76f8\u5173\u7ed3\u6784\uff0c\u5982\u679c\u6240\u4f7f\u7528\u5230\u7684\u6807\u51c6\u5c55\u73b0\u51fa\u4e86\u8fd9\u4e9b\u7ed3\u6784</p> Python<pre><code>from sklearn.cluster import KMeans\nX, y = iris.data, iris.target\nk_means = KMeans(n_clusters=3, random_state=0) # Fixing the RNG in kmeans\nk_means.fit(X)\ny_pred = k_means.predict(X)\n\nplt.scatter(X_reduced[:, 0], X_reduced[:, 1], c=y_pred,\n           cmap='RdYlBu');\n</code></pre> <p></p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/","title":"\u968f\u673a\u68ee\u6797","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 383 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u56de\u5f52\u65b9\u6cd5\uff08\u975e\u53c2\u6570\uff09</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_1","title":"\u51b3\u7b56\u6811","text":"<p>\u4e0d\u505a\u4ecb\u7ecd</p> Python<pre><code>import matplotlib.pyplot as plt\nfrom sklearn.datasets import make_blobs\nfrom sklearn.tree import DecisionTreeClassifier\nimport numpy as np\n\n# \u751f\u6210\u6570\u636e\nX, y = make_blobs(n_samples=300, centers=4,\n                  random_state=0, cluster_std=1.0)\n\n# \u521b\u5efa\u753b\u5e03\nfig, axes = plt.subplots(1, 2, figsize=(12, 5))\n\n# \u4e0d\u540c\u6df1\u5ea6\u7684\u6a21\u578b\nfor ax, depth in zip(axes, [1, 5]):\n    tree = DecisionTreeClassifier(max_depth=depth, random_state=0).fit(X, y)\n\n    # \u521b\u5efa\u7f51\u683c\u70b9\u7528\u4e8e\u7ed8\u56fe\n    x_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1\n    y_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1\n    xx, yy = np.meshgrid(np.linspace(x_min, x_max, 300),\n                         np.linspace(y_min, y_max, 300))\n    Z = tree.predict(np.c_[xx.ravel(), yy.ravel()])\n    Z = Z.reshape(xx.shape)\n\n    # \u7ed8\u5236\u51b3\u7b56\u8fb9\u754c\u548c\u6570\u636e\u70b9\n    ax.contourf(xx, yy, Z, alpha=0.3, cmap='rainbow')\n    ax.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='rainbow', edgecolor='k')\n    ax.set_title(f\"Decision Tree (max_depth={depth})\")\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>\u6ce8\u610f\u5230\u968f\u7740\u6df1\u5ea6\u7684\u589e\u52a0\uff0c\u9664\u4e86\u90a3\u4e9b\u672c\u6765\u53ea\u5305\u542b\u4e00\u7c7b\u7684\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u96c6\u90fd\u88ab\u6210\u529f\u7684\u5212\u5206\u3002 \u8fd9\u662f\u4e2a\u975e\u5e38\u5feb\u7684\u65e0\u53c2\u6570 \u5206\u7c7b\u8fc7\u7a0b\uff0c\u5728\u5b9e\u9645\u8fd0\u7528\u4e2d\u975e\u5e38\u5b9e\u7528\u3002</p> <p>\u4f46\u662f\uff0c\u51b3\u7b56\u6811\u7684\u4e00\u4e2a\u7279\u70b9\u5c31\u662f\uff0c\u5b83\u8bad\u7ec3\u51fa\u6765\u7684\u6a21\u578b\u975e\u5e38\u5bb9\u6613\u4ea7\u751f\u8fc7\u62df\u5408 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6a21\u578b\u7684\u5f39\u6027\u975e\u5e38\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u5bf9\u6570\u636e\u7684\u566a\u58f0\u7684\u5b66\u4e60\u53ef\u4ee5\u9ad8\u8fc7\u6570\u636e\u672c\u8eab\uff01\u4f8b\u5982\u4e0b\u9762\u662f\u9488\u5bf9\u4e00\u4e2a\u6570\u636e\u96c6\u7684\u4e24\u4e2a\u90e8\u5206\u7684\u9884\u6d4b\u6a21\u578b</p> <p> </p> <p>\u53ef\u89c1\u4e24\u4e2a\u6a21\u578b\u7684\u7ec6\u8282\u5b8c\u5168\u4e0d\u4e00\u6837\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_2","title":"\u968f\u673a\u68ee\u6797","text":"<p>\u4e00\u4e2a\u53ef\u80fd\u7684\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u91c7\u7528\u96c6\u6210\u65b9\u6cd5 \uff1a\u521b\u5efa\u4e00\u4e2a\u603b\u7684estimator\uff0c\u5b83\u5bf9\u5f88\u591a\u7684\u72ec\u7acb\u7684\uff0c\u5bb9\u6613\u4ea7\u751f\u8fc7\u62df\u5408\u7684estimator\u53d6\u4e86\u5e73\u5747\u3002\u8ba9\u4eba\u6709\u4e9b\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u4e2a\u603b\u7684estimator\u7684\u6548\u679c\u975e\u5e38\u597d\uff0c\u5b83\u6bd4\u4efb\u4f55\u4e00\u4e2a\u7ec4\u6210\u5b83\u7684\u72ec\u7acb\u7684estimator\u90fd\u8981\u7a33\u5b9a\u548c\u7cbe\u786e\uff01</p> <p>\u968f\u673a\u68ee\u6797\u5c31\u662f\u4f17\u591a\u96c6\u6210\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u91cc\uff0c\u96c6\u6210\u7684\u610f\u601d\u662f\u603b\u7684estimator\u4f1a\u7531\u5f88\u591a\u51b3\u7b56\u6811\u7ec4\u6210\u3002</p> <p>\u5177\u4f53\u4f7f\u7528\u89c1\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> Python<pre><code>from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nx = 10 * np.random.rand(100)\n\n\n# model \u7528\u4e8e\u751f\u6210\u566a\u58f0sigma\u52a0\u6210\u4e0b\u7684\u51fd\u6570\u503c\ndef model(x, sigma=0.3):\n    fast_oscillation = np.sin(5 * x)\n    slow_oscillation = np.sin(0.5 * x)\n    noise = sigma * np.random.randn(len(x))\n\n    return slow_oscillation + fast_oscillation + noise\n\n\ny = model(x)\n\nxfit = np.linspace(0, 10, 1000)\nyfit = RandomForestRegressor(100).fit(x[:, None], y).predict(xfit[:, None])\nytrue = model(xfit, 0)  # \u771f\u5b9e\u6b63\u5f26\u51fd\u6570\u503c\n\nplt.errorbar(x, y, 0.3, fmt='o')\nplt.plot(xfit, yfit, '-r');\nplt.plot(xfit, ytrue, '-k', alpha=0.5);\nplt.show()\n</code></pre> <p>\u8be5\u6a21\u578b\u4e0d\u7528\u6307\u5b9a\u5468\u671f\u53c2\u6570\u5c31\u80fd\u5f88\u597d\u7684\u62df\u5408\u8be5\u542b\u6709\u566a\u58f0\u7684\u66f2\u7ebf\uff1b\u4e0e\u4e4b\u76f8\u5bf9\u7684\uff0cSVM \u6a21\u578b\u5c31\u96be\u4ee5\u5f88\u597d\u5730\u62df\u5408\u3002</p> <p> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Python/Scikit-learn/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_3","title":"\u624b\u5199\u6570\u5b57\u5206\u7c7b","text":"Python<pre><code>from sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier\n\nXtrain, Xtest, ytrain, ytest = train_test_split(X, y, random_state=0)\nclf = DecisionTreeClassifier(max_depth=11)\nclf.fit(Xtrain, ytrain)\nypred = clf.predict(Xtest)\n</code></pre> <p>\u753b\u51fa\u6df7\u6dc6\u77e9\u9635</p> Python<pre><code>plt.imshow(metrics.confusion_matrix(ypred, ytest),\n           interpolation='nearest', cmap=plt.cm.binary)\nplt.grid(False)\nplt.colorbar()\nplt.xlabel(\"predicted label\")\nplt.ylabel(\"true label\")\n\nplt.show()\n</code></pre> <p></p> <p>\u672c\u7b14\u8bb0\u4fee\u6539\u81eaJake Vanderplas\uff0c\u6e90\u4ee3\u7801\u548clicense\u6587\u4ef6\u5728GitHub\u3002 </p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/","title":"C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1(\u672a\u6574\u7406)","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 10216 \u4e2a\u5b57\u00a0\u00a058 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p> <p>CNote==\u628a\u5927\u5199\u53d8\u4e3a\u5c0f\u5199:==</p> C<pre><code>#include&lt;stdio.h&gt;;\n#include&lt;ctype.h&gt;; //\u542b\u6709tolower\u7b49\u51fd\u6570\nint main()\n{\n    char c;\n    while (c=getchar()!=EOF)\n        putchar(tolower(c));\n    return 0;\n}\n</code></pre> <p>\u4f18\u5148\u7ea7</p> <ol> <li>\u540e\u7f00 ++ --</li> <li>\u4e00\u5143 + - ! ~ ++ -- * &amp; sizeof</li> <li>\u4e58\u9664 % / *</li> <li>\u52a0\u51cf + -</li> <li>\u4f4d\u79fb &lt;&lt; &gt;&gt;</li> <li>\u5173\u7cfb &lt; &lt;= &gt; &gt;=</li> <li>\u76f8\u7b49 == !=</li> <li>\u4f4d\u4e0e &amp;</li> <li>\u4f4d\u5f02\u6216 ^</li> <li>\u4f4d\u6216 |</li> <li>\u903b\u8f91\u4e0e &amp;&amp;</li> <li>\u903b\u8f91\u6216 ||</li> <li>\u6761\u4ef6 ?:</li> <li>\u8d4b\u503c = += -= *= /= %= &lt;&lt;= &gt;&gt;= &amp;= ^= |</li> <li> <p>\u9017\u53f7 ,</p> </li> <li> <p>\u4ece\u53f3\u5f80\u5de6:\u5355\u76ee\u8fd0\u7b97,\u8d4b\u503c\u8fd0\u7b97,\u6761\u4ef6\u8868\u8fbe\u5f0f</p> </li> </ol> <p>\u539f\u7801,\u53cd\u7801,\u8865\u7801,\u79fb\u7801</p> <ul> <li>\u771f\u503c:\u5c06\u5e26\u7b26\u53f7\u4f4d\u7684\u673a\u5668\u6570\u5bf9\u5e94\u7684\u771f\u6b63\u6570\u503c\u79f0\u4e3a\u673a\u5668\u6570\u7684\u771f\u503c</li> <li>\u539f\u7801:\u539f\u7801\u5c31\u662f\u7b26\u53f7\u4f4d\u52a0\u4e0a\u771f\u503c\u7684\u7edd\u5bf9\u503c,\u5373\u7528\u7b2c\u4e00\u4f4d\u8868\u793a\u7b26\u53f7 \u5176\u4f59\u4f4d\u8868\u793a\u503c\u3002\u6bd4\u5982\u5982\u679c\u662f 8 \u4f4d\u4e8c\u8fdb\u5236: +1 = 0000_0001</li> <li>\u53cd\u7801:\u6b63\u6570\u7684\u53cd\u7801\u662f\u5176\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4e2a\u4f4d\u53d6\u53cd\u3002</li> <li>\u8865\u7801:\u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1</li> <li>\u79fb\u7801:\u4e0d\u7ba1\u6b63\u8d1f\u6570\uff0c\u53ea\u8981\u5c06\u5176\u8865\u7801\u7684\u7b26\u53f7\u4f4d\u53d6\u53cd\u5373\u53ef   \u79fb\u7801\u683c\u5f0f\uff1a1 \u4f4d\u7b26\u53f7\u4f4d \u5176\u4f59\u4e3a \u771f\u503c+2^(N)\u22121, \u5176\u4e2d N \u8868\u793a\u4f4d\u6570   \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u636e\u4e3a 8 \u4f4d\uff0c \u53cc\u7cbe\u5ea6\u4e3a 11 \u4f4d</li> </ul> <p>\u53ef\u53d8\u53c2\u6570\u51fd\u6570 \u51fd\u6570\u53c2\u6570\u5b58\u50a8:\u4ece\u53f3\u5230\u5de6\u4f9d\u6b21\u5165\u6808,\u8fde\u7eed\u5b58\u50a8(\u4ece\u9ad8\u5730\u5740\u5230\u4f4e\u5730\u5740) \u5982\u679c\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u51fd\u6570\u53c2\u6570,\u9664\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e4b\u5916,\u540e\u9762\u7684\u53c2\u6570\u53ef\u7701\u7565,\u7528...\u4ee3\u66ff \u4f8b\u5982,\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u884c:</p> C<pre><code>void print(int a,...)\n{\n    int *ptr=&amp;a;\n    printf(\"%d \",*ptr);\n    printf(\"%d \",*(ptr+1));\n}\n</code></pre> <p>sprintf \u548c sscanf</p> C<pre><code>int n,m;\nchar s[80]=\"hello 11 22\";\nsscanf(s,\"%d%d\",&amp;n,&amp;m);\n    //sscanf:\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u5165,\u8bfb\u5230\u7a7a\u683c\u6216\u6362\u884c\u81ea\u52a8\u8df3\u8fc7,\u5269\u4f59\u90e8\u5206\u5339\u914d\n</code></pre> <p>C \u8bed\u8a00\u201c\u6bb5\u9519\u8bef\u201d\u7c7b\u578b \u5728 C \u8bed\u8a00\u7f16\u7a0b\u4e2d\uff0c\u6bb5\u9519\u8bef\uff08Segmentation Fault\uff09\u901a\u5e38\u662f\u6307\u7a0b\u5e8f\u5c1d\u8bd5\u8bbf\u95ee\u6216\u4fee\u6539\u5b83\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5bfc\u81f4\u6bb5\u9519\u8bef\u7684\u7c7b\u578b\uff1a</p> <ol> <li>\u7a7a\u6307\u9488\u89e3\u5f15\u7528\uff1a    \u7a0b\u5e8f\u8bd5\u56fe\u901a\u8fc7\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u6216\u5df2\u7ecf\u8bbe\u7f6e\u4e3a<code>NULL</code>\u7684\u6307\u9488\u8bbf\u95ee\u5185\u5b58\u3002    C<pre><code>int *p = NULL;\n*p = 10; // \u8fd9\u5c06\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u8d8a\u754c\u8bbf\u95ee\uff1a    \u5f53\u6570\u7ec4\u8bbf\u95ee\u8d85\u51fa\u5176\u8fb9\u754c\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u4e0d\u5c5e\u4e8e\u8be5\u6570\u7ec4\u7684\u5185\u5b58\u533a\u57df\u3002    C<pre><code>int arr[10];\narr[100] = 10; // \u8fd9\u53ef\u80fd\u5f15\u8d77\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u91ce\u6307\u9488\uff1a    \u6307\u9488\u6307\u5411\u5df2\u91ca\u653e\u7684\u5185\u5b58\u540e\u672a\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4e4b\u540e\u82e5\u5c1d\u8bd5\u901a\u8fc7\u8be5\u6307\u9488\u8bbf\u95ee\u5185\u5b58\uff0c\u5219\u4f1a\u5f15\u53d1\u6bb5\u9519\u8bef\u3002    C<pre><code>int *p = malloc(sizeof(int));\nfree(p);\n*p = 10; // \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u5199\u5165\u53ea\u8bfb\u5185\u5b58\uff1a    \u5c1d\u8bd5\u4fee\u6539 const \u53d8\u91cf\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u6240\u5728\u7684\u5185\u5b58\u533a\u57df\u3002    C<pre><code>const int x = 10;\nint *p = (int *)&amp;x;\n*p = 20; // \u8fd9\u5c06\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u6808\u6ea2\u51fa\uff1a    \u51fd\u6570\u8c03\u7528\u592a\u6df1\u5bfc\u81f4\u6808\u7a7a\u95f4\u8017\u5c3d\uff0c\u6216\u8005\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u4e86\u8fc7\u591a\u6808\u7a7a\u95f4\u3002    C<pre><code>void recursiveFunction() {\n    int a[1000000];\n    recursiveFunction(); // \u9012\u5f52\u592a\u6df1\u53ef\u80fd\u5bfc\u81f4\u6808\u6ea2\u51fa\uff0c\u8fdb\u800c\u5f15\u53d1\u6bb5\u9519\u8bef\n}\n</code></pre></li> <li>\u9519\u8bef\u7684\u5185\u5b58\u5206\u914d\uff1a    \u4f7f\u7528\u4e86\u4e0d\u6b63\u786e\u6216\u4e0d\u5339\u914d\u7684\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u51fd\u6570\uff0c\u4f8b\u5982\u6df7\u7528<code>malloc</code>\u548c<code>free</code>\u4e0e<code>new</code>\u548c<code>delete</code>\u3002    C<pre><code>void *p = malloc(sizeof(int));\ndelete p; // \u9519\u8bef\u7684\u4f7f\u7528delete\u6765\u91ca\u653emalloc\u5206\u914d\u7684\u5185\u5b58\uff0c\u53ef\u80fd\u5bfc\u81f4\u6bb5\u9519\u8bef\n</code></pre></li> <li>\u672a\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\uff1a    \u5728\u67d0\u4e9b\u786c\u4ef6\u67b6\u6784\u4e0a\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u662f\u5fc5\u987b\u7684\uff0c\u672a\u5bf9\u9f50\u7684\u8bbf\u95ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\u3002    \u8981\u907f\u514d\u6bb5\u9519\u8bef\uff0c\u9700\u8981\u517b\u6210\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\uff0c\u6bd4\u5982\u59cb\u7ec8\u521d\u59cb\u5316\u6307\u9488\u3001\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3a<code>NULL</code>\u3001\u786e\u4fdd\u6570\u7ec4\u8bbf\u95ee\u4e0d\u8d8a\u754c\u3001\u907f\u514d\u4f7f\u7528\u91ce\u6307\u9488\u3001\u4e0d\u8981\u4fee\u6539\u53ea\u8bfb\u5185\u5b58\u533a\u57df\uff0c\u4ee5\u53ca\u6b63\u786e\u7ba1\u7406\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u5982<code>valgrind</code>\uff08\u5728 Linux \u4e0a\uff09\u6765\u68c0\u6d4b\u5185\u5b58\u76f8\u5173\u95ee\u9898\u3002</li> </ol> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u95ee\u9898\u89c4\u6a21</p> <ul> <li>\u65f6\u95f4\u9891\u5ea6:\u4e00\u4e2a\u7b97\u6cd5\u4e2d\u7684\u8bed\u53e5\u6267\u884c\u6b21\u6570\u79f0\u4e3a\u8bed\u53e5\u9891\u5ea6\u6216\u65f6\u95f4\u9891\u5ea6\u3002\u8bb0\u4e3a T(n)\u3002</li> <li>\u95ee\u9898\u89c4\u6a21:\u5728\u521a\u624d\u63d0\u5230\u7684\u65f6\u95f4\u9891\u5ea6\u4e2d\uff0cn \u79f0\u4e3a\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u5f53 n \u4e0d\u65ad\u53d8\u5316\u65f6\uff0c\u65f6\u95f4\u9891\u5ea6 T(n)\u4e5f\u4f1a\u4e0d\u65ad\u53d8\u5316\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6: \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u4e2d\u57fa\u672c\u64cd\u4f5c\u91cd\u590d\u6267\u884c\u7684\u6b21\u6570\u662f\u95ee\u9898\u89c4\u6a21 n \u7684\u67d0\u4e2a\u51fd\u6570\uff0c\u7528 T(n)\u8868\u793a\uff0c\u82e5\u6709\u67d0\u4e2a\u8f85\u52a9\u51fd\u6570 f(n),\u4f7f\u5f97\u5f53 n \u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\uff0cT(n)/f(n)\u7684\u6781\u9650\u503c\u4e3a\u4e0d\u7b49\u4e8e\u96f6\u7684\u5e38\u6570\uff0c\u5219\u79f0 f(n)\u662f T(n)\u7684\u540c\u6570\u91cf\u7ea7\u51fd\u6570\u3002\u8bb0\u4f5c T(n)=\uff2f(f(n)),\u79f0\uff2f(f(n)) \u4e3a\u7b97\u6cd5\u7684\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7b80\u79f0\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> </ul> <p>\u7ec6\u8282 \u7531\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\uff1a\u6e90\u7a0b\u5e8f.c \u6e90\u7a0b\u5e8f.c-&gt;\uff08\u7f16\u8bd1\u540e\uff09\u76ee\u6807\u7a0b\u5e8f.obj-&gt;\uff08\u94fe\u63a5\u540e\uff09\u53ef\u6267\u884c\u7a0b\u5e8f.exe \u7ed3\u6784\u5316\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\uff1a\u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af \u4e3b\u8981\u539f\u5219\uff1a\u6a21\u5757\u5316\u3001\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u6c42\u79ef \u4e00\u4e2a c \u8bed\u8a00\u662f\u7531\u51fd\u6570\u7ec4\u6210\u7684\uff0c\u51fd\u6570\u662f C \u8bed\u8a00\u57fa\u672c\u5355\u4f4d\uff08C \u8bed\u8a00\u6ca1\u6709\u5b50\u7a0b\u5e8f\uff09 \u7a0b\u5e8f\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u8bed\u53e5 C \u8bed\u8a00\u7a0b\u5e8f\u603b\u662f\u4ece main \u51fd\u6570\u5f00\u59cb\u6267\u884c \u4e0d\u5e38\u89c1\u5173\u952e\u5b57\uff1asigned extern register sizeof auto sizeof \u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u662f\u51fd\u6570 \u6700\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u662f\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b \u6574\u578b\u6570\u636e\u5206\u4e3a\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\uff08\u6ca1\u6709\u4e8c\u8fdb\u5236\uff09 -017 \u8868\u793a\u516b\u8fdb\u5236\uff08o\uff09 \u79d1\u5b66\u8ba1\u6570\u6cd5\uff1ae \u524d e \u540e\u5fc5\u6709\u6570\uff0ce \u540e\u5fc5\u987b\u4e3a\u6574\u6570\uff08\u53ef\u5e26\u6b63\u8d1f\u53f7\uff09 int,char,short \u6240\u5360\u5b57\u8282\u6570\u7531\u6240\u7528\u673a\u5668\u7684\u5b57\u957f\u51b3\u5b9a '\\ddd'\u6bcf\u4f4d d \u4e3a\u516b\u8fdb\u5236\u6570\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26 \u4f8b\u5982'\\17' '\\xhh'\u6bcf\u4e2a h \u4e3a\u5341\u516d\u8fdb\u5236\u6570\uff0c\u8868\u793a\u5b57\u7b26 \u4f8b\u5982'\\xaa' \u5b57\u7b26\u52a0\u51cf\u4e3a ascii \u52a0\u51cf\uff0c\u5b57\u7b26\u578b\u53d8\u91cf\u53ef\u6309\u6574\u578b\u8d4b\u503c \u5b57\u7b26\u5e38\u91cf\uff1a\u5355\u5f15\u53f7 \u5b57\u7b26\u4e32\u5e38\u91cf\uff1a\u53cc\u5f15\u53f7 \u4f8b\u5982\"A\"\u5360\u4e24\u4e2a\u5b57\u8282 %d \u8f93\u51fa\u4e3a\u5341\u8fdb\u5236\uff0c%o \u516b\u8fdb\u5236\uff0c%x \u5341\u516d\u8fdb\u5236\uff08\u81ea\u52a8\u8f6c\u5316\uff09 printf(\"x=%%d,y=%%d\",x,y); \u8f93\u51fa x=%d,y=%d %\u524d\u540e\u5fc5\u987b\u4e3a\u6574\u6570 \u9017\u53f7\u8fd0\u7b97\u7b26\u5728\u6240\u6709\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u4f4e ++(i+1)\u662f\u975e\u6cd5\u7684\uff08i+1 \u662f\u8868\u8fbe\u5f0f\uff0c\u4e0d\u662f\u53d8\u91cf\uff09 x=i&gt;0 x \u7684\u503c\u4e3a 0 \u6216 1 \u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u542b\u591a\u79cd\u7c7b\u578b\uff0c\u6700\u7ec8\u7ed3\u679c\u7c7b\u578b\u4e3a\u5b58\u50a8\u8303\u56f4\u6700\u5927\u7684 \u5b58\u50a8\u8303\u56f4\uff1achar int long float double a=2 \u8868\u8fbe\u5f0f a=2; \u8bed\u53e5\uff08\u6709\u5206\u53f7\uff09 x=y=1 \u662f\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5 int a=3; a+=a-=a*a; a \u7684\u503c\u4e3a-12 int a=0; a+=(a=8); a \u7684\u503c\u4e3a 16 \u5355\u76ee\u8fd0\u7b97\u7b26\u5bf9\u8c61\u53ef\u4ee5\u662f\u5b57\u7b26\u3001\u6574\u578b\u3001\u5b9e\u578b\u7b49\u4efb\u4f55\u7c7b\u578b\uff0c\u4e0d\u80fd\u5e38\u91cf int a=10;printf(\"%d %d\",a--,--a); \u8f93\u51fa 10 9\uff0ca--\u540e\u8be5\u8bed\u53e5\u503c\u4e3a 10\uff0ca \u7684\u503c\u4e3a 9 x=(i=4,j=5,k=6)\uff1b x \u7684\u503c\u4e3a 6 (m=6,m+1,n=6,m+n) \u7684\u503c\u4e3a 12 char \u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u5f62\u5f0f\u4e3a ascii \u7801 \u6574\u578b\u6570\u636e\u5b58\u50a8\u5f62\u5f0f\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801 A \u7684 acsii \u7801\u4e3a 65\uff0ca \u4e3a 97\uff0c\u56de\u8f66 13\uff0c\u7a7a\u683c 32 \u6bcf\u4e2a c \u7a0b\u5e8f\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a main \u51fd\u6570 -19%4 \u7684\u503c\u4e3a-3\uff08\u7ed3\u679c\u6b63\u8d1f\u7531\u524d\u9762\u7684\u6570\u7684\u6b63\u8d1f\u51b3\u5b9a\uff09 \u5b9e\u578b+\u6574\u578b \u7ed3\u679c\u4e3a\u5b9e\u578b &lt; CR &gt;\u8868\u793a\u56de\u8f66 printf \u4e2d\u53c2\u6570\u591a\u4e8e\u683c\u5f0f\u8bf4\u660e\u7b26\uff1a\u4ece\u524d\u5f80\u540e\u8f93\u51fa\uff0c\u591a\u4f59\u7684\u5ffd\u7565 int a=1234; printf(\"%2d\",a); \u8f93\u51fa\u4e3a 1234\uff08\u6570\u5b57\u957f\u5ea6\u5927\u4e8e\u9650\u5b9a\uff0c\u5219\u5ffd\u7565\u9650\u5b9a\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u80fd\u7834\u574f\u6570\u636e\u5b8c\u6574\u6027\uff09 scanf \u4e2d%2d \u8868\u793a\u622a\u53d6\u4e24\u4e2a\u957f\u5ea6\u7684\u6570\u5b57\uff0c\u82e5\u8f93\u5165\u6709\u591a\u4f59\uff0c\u591a\u4f59\u90e8\u5206\u5ffd\u7565 \u5c06\u6574\u578b\u503c\u8d4b\u7ed9\u5b9e\u578b\uff0c\u81ea\u52a8\u8f6c\u5316\u4e3a\u5c0f\u6570\uff0c\u5e26.000000 %c \u53ef\u80fd\u8bfb\u5165\u7a7a\u683c\u3001\u56de\u8f66\uff08\u6709 ascii \u7801\u7684\u90fd\u662f\u5b57\u7b26\uff09 int x,y; scanf(\"%d%d\",&amp;x,&amp;y); \u8f93\u5165\u4e3a 1\uff0c2\uff0c\u5219 y \u4e3a\u4e0d\u786e\u5b9a\u7684\u503c putchar \u8f93\u51fa\u5b57\u7b26\u6216\u5b57\u7b26\u578b\u53d8\u91cf scanf \u683c\u5f0f\u63a7\u5236\u540e\u4e3a\u53d8\u91cf\u5730\u5740\uff0c\u683c\u5f0f\u63a7\u5236\u5305\u542b\u683c\u5f0f\u58f0\u660e\u548c\u666e\u901a\u5b57\u7b26 printf \u662f\u8f93\u51fa\u5217\u8868\uff1a\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f {}\u4e2d\u7684\u8bed\u53e5\u79f0\u4e3a\u590d\u5408\u8bed\u53e5\uff0c\u5355\u72ec\u7684\uff1b\u79f0\u4e3a\u7a7a\u8bed\u53e5 \u4ea4\u6362 x \u548c y \u7684\u503c\uff1ax+=y; y=x-y; x-=y; &amp;&amp;\u5de6\u8fb9\u4e3a\u5047\uff0c\u4e0d\u6267\u884c\u53f3\u8fb9\uff1b||\u5de6\u8fb9\u4e3a\u771f\uff0c\u4e0d\u6267\u884c\u53f3\u8fb9\uff08\u77ed\u8def\uff09 if\uff08-1\uff09\u540e\u9762\u8bed\u53e5\u6267\u884c\uff08\u4e0d\u7b49\u4e8e 0 \u90fd\u6267\u884c\uff09 int x=1,y=2,z=3; if (x&gt;y) x=y; y=z; z=x; \u6267\u884c\u540e x=1,y=2,z=1\uff08if \u540e\u65e0\u5927\u62ec\u53f7\uff09 switch \u62ec\u53f7\u4e2d\u53ef\u4ee5\u4e3a\u8868\u8fbe\u5f0f int char enum\uff0c\u4e0d\u80fd\u4e3a float \u4e09\u79cd\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a \uff01 &amp;&amp; || \u7b97\u672f\u8fd0\u7b97&gt;\u903b\u8f91\u8fd0\u7b97&gt;\u8d4b\u503c\u8fd0\u7b97\uff0c7&amp;&amp;3+12 \u7b49\u4ef7\u4e8e 7&amp;&amp;\uff083+12\uff09 num[]={...} {}\u4e2d\u5143\u7d20\u53ef\u591a\u4e0d\u53ef\u5c11 \u4e8c\u7ef4\u6570\u7ec4\u5b9a\u4e49\uff0c\u884c\u53ef\u4ee5\u7701\u7565\uff0c\u5217\u4e0d\u53ef\u7701\u7565 \u82e5\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\u53ea\u6709\u4e00\u4e2a{}\uff0c\u4ece\u524d\u5f80\u540e\u586b int a[4] \u4e0d\u80fd a=\u2026\uff0c\u56e0\u4e3a\u6570\u7ec4\u540d\u4e3a\u5730\u5740 \u51fd\u6570\u4e0d\u80fd\u5d4c\u5957\u5b9a\u4e49 \u5b9e\u53c2\u548c\u5176\u5bf9\u5e94\u7684\u5f62\u53c2\u5360\u7528\u72ec\u7acb\u7684\u5b58\u50a8\u5355\u5143 \u5f62\u53c2\u5fc5\u987b\u662f\u53d8\u91cf\uff0c\u4e0d\u80fd\u662f\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f \u82e5\u5b9e\u53c2\u3001\u5f62\u53c2\u7c7b\u578b\u4e0d\u4e00\u81f4\uff0c\u4ee5\u5f62\u53c2\u7c7b\u578b\u4e3a\u51c6 \u5b9e\u53c2\u5230\u5f62\u53c2\uff1a\u503c\u4f20\u9012\uff08\u5bf9\u5f62\u53c2\u7684\u4fee\u6539\u4e0d\u6539\u53d8\u5b9e\u53c2\u7684\u503c\uff09 \u51fd\u6570\u7c7b\u578b\u7531\u8fd4\u56de\u503c\u51b3\u5b9a \u4e00\u4e2a\u7a0b\u5e8f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u7a0b\u5e8f\u6587\u4ef6\u7ec4\u6210 C \u8bed\u8a00\u4e0d\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b \u82e5\u51fd\u6570\u7531\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u901a\u8fc7 return \u8fd4\u56de \u5f62\u53c2\u7684\u503c\u4e0d\u80fd\u4f20\u56de\u7ed9\u5b9e\u53c2 \u5b9e\u53c2\u5230\u5f62\u53c2\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u503c\u4f20\u9012\u3001\u5730\u5740\u4f20\u9012 ascii \u7801\u4e2d\u5927\u5c0f\u5199\u76f8\u5dee 32\uff0c\u5c0f\u5199\u5927\u4e8e\u5927\u5199 !x!=0 \u5148\u6267\u884c!x\uff0c\u518d\u5224\u65ad\u662f\u5426!=0 if (); while(); \u56e0\u4e3a\u540e\u9762\u6709\u5206\u53f7\uff0c\u4e3a\u7a7a\u8bed\u53e5\uff08\u4f46\u82e5\u62ec\u53f7\u4e2d\u8bed\u53e5\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff0c\u4ecd\u4f1a\u4f5c\u7528\uff09 \u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u53d8\u91cf\u540d\u548c\u5168\u5c40\u53d8\u91cf\u76f8\u540c\u7684\u53d8\u91cf\uff0c\u5219\u4ed6\u4eec\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff0c\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd \u5f62\u53c2\u53ef\u4ee5\u8bf4\u660e\u4e3a const\uff0c\u4e0d\u80fd\u4e3a static \u53d8\u91cf\u9690\u542b\u7684\u5b58\u50a8\u7c7b\u578b\u4e3a auto\uff08\u81ea\u52a8\u578b\uff09 \u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u578b\u5305\u62ec\u81ea\u52a8\u578b\u3001\u9759\u6001\u578b\u3001\u5916\u90e8\u578b\u3001\u5bc4\u5b58\u5668\u578b \u58f0\u660e\u5916\u90e8\u53d8\u91cf\uff1aextern C \u8bed\u8a00\u53d8\u91cf\u6309\u5176\u751f\u5b58\u671f\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5b83\u6240\u5728\u7684\u5c40\u90e8\uff0c\u751f\u5b58\u671f\u4e3a\u6574\u4e2a\u51fd\u6570 \u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210 define \u662f\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\uff08\u4f46\u4f7f\u7528\u540e\u539f\u542b\u4e49\u4e27\u5931\uff09 C \u8bed\u8a00\u6709 32 \u4e2a\u5173\u952e\u5b57 \u9884\u5904\u7406\u529f\u80fd\u6709\u4e09\u79cd\uff1a\u5b8f\u5b9a\u4e49\uff0c\u6587\u4ef6\u5305\u542b\uff0c\u6761\u4ef6\u7f16\u8bd1 \u9884\u5904\u7406\u547d\u4ee4\u4ee5#\u5f00\u5934</p> <p>\u4e00\u4e9b\u5947\u602a\u7684\u9898\u76ee\uff1a</p> C<pre><code>#include&lt;stdio.h&gt;\n#define max(a,b) (a)&gt;(b)?(a):(b)\nint main(){\n    int x,y,z;\n    x=10;y=15;\n    z=10*max(x,y);            //10*10&gt;15?10:15,\u7ed3\u679c\u4e3a10\n    printf(\"%d\\n\",z);\n    return 0;\n}\n</code></pre> C<pre><code>int m=0;\nif (m || (m=2) || (m=3));    //m=2\u4e3a\u8d4b\u503c\u8bed\u53e5\uff0c\u6267\u884c\u540em\u4e3a2\uff0c\u8be5\u8bed\u53e5\u4e3a2\uff0c\u6761\u4ef6\u6210\u7acb\uff0c\u540e\u7eed\u8bed\u53e5\u77ed\u8def\uff0cm\u4fdd\u75592\nprintf(\"%d\\n\",m);\n</code></pre> C<pre><code>int a=0,b=0,c=2,d=4;\nif ((c=a==b || d=b==a));       //(a==b)\u4e3a1\uff0c\u524d\u4e00\u8bed\u53e5\u4e3a\u8d4b\u503cc=1\uff0c\u6761\u4ef6\u6210\u7acb\uff0cd\u7ef4\u63014\nprintf(\"%d\\n\",d);\n</code></pre> C<pre><code>int x=1,y=2,z=3;\nx+=y+=z;                       //y\u4e3a5\uff0cx\u4e3a6\uff0c\u8f93\u51fa6\nprintf(\"%d\\n\",x&lt;y?y:x);\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int y=10;\n    while (y--);  //y=1\u65f6\u4ecd\u6267\u884c\uff0c\u6b64\u65f6y=0\uff1b\u4e0b\u4e00\u8f6e\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u4f46y--\u5df2\u6267\u884c\uff0c\u6545y\u4e3a-1\n    printf(\"y=%d\\n\",y);\n}\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int y=10;\n    do y--;\n    while (--y);  //y=2\u65f6y--\u540ey\u4e3a1\uff0c--y\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u4f46y\u503c\u53d8\u4e3a0\uff0c\u8f93\u51fa\u65f6\u8f93\u51fay\uff0c\u5373\u8f93\u51fa0\n    printf(\"%d\\n\",y--);\n}\n</code></pre> C<pre><code>for (i=0;i&lt;4;i++)\nfor (k=1;k&lt;3;k++); printf(\"*\"); //for\u540e\u6709\u5206\u53f7\uff0c\u8f93\u51fa*\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int x,y;\n    for (x=30,y=0;x&gt;=10,y&lt;10;x--,y++) {  //\u4e2d\u95f4\u4e3a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0cx&gt;=10\u65e0\u6548\uff0c\n\u8f93\u51fa\u4e3ax=0  y=12\n        x/=2;\n        y+=2;\n    }\n    printf(\"x=%d y=%d\\n\",x,y);\n}\n</code></pre> <p>main</p> <p>FILE</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc,char *argv[])\n{\n    FILE *fp1,*fp2;\n    if (argc!=3) { //\u8fd9\u662f\u5224\u65ad\u4ec0\u4e48?\n        printf(\"Usage:copy f1 f2\\n\");\n        exit(1); //\u8fd9\u662f\u4ec0\u4e48\u610f\u601d?\n    }\n    if ((fp1=fopen(argv[1],\"r\"))==NULL\n        || (fp2=fopen(argv[2],\"w\"))==NULL) {\n        printf(\"Can't open file!\\n\");\n        exit(2); //\u8fd9\u662f\u4ec0\u4e48\u610f\u601d?\n    }\n\n    while (putc(getc(fp1),fp2)!=EOF); //putc\u548cgetc\u5e72\u4ec0\u4e48?\n\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>if (argc!=3)</code> \u8fd9\u662f\u5224\u65ad\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u8fd9\u4e2a\u6761\u4ef6\u5224\u65ad\u7a0b\u5e8f\u63a5\u6536\u5230\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570\u662f\u5426\u4e0d\u7b49\u4e8e 3\u3002\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u671f\u671b\u63a5\u6536\u5230\u4e09\u4e2a\u53c2\u6570\uff1a\u7a0b\u5e8f\u540d\u3001\u6e90\u6587\u4ef6\u540d\u548c\u76ee\u6807\u6587\u4ef6\u540d\u3002\u5982\u679c\u53c2\u6570\u4e2a\u6570\u4e0d\u662f 3\uff0c\u8bf4\u660e\u7528\u6237\u6ca1\u6709\u6b63\u786e\u5730\u63d0\u4f9b\u6240\u9700\u7684\u53c2\u6570\u3002</p> </li> <li> <p><code>exit(1);</code> \u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> </li> <li> <p><code>exit(1);</code> \u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u7acb\u5373\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\u3002<code>exit</code>\u51fd\u6570\u7684\u53c2\u6570\u662f\u7a0b\u5e8f\u7684\u9000\u51fa\u72b6\u6001\u7801\uff0c<code>1</code> \u901a\u5e38\u8868\u793a\u7a0b\u5e8f\u56e0\u4e3a\u67d0\u79cd\u9519\u8bef\u6216\u5f02\u5e38\u60c5\u51b5\u800c\u7ec8\u6b62\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7528\u6237\u6ca1\u6709\u63d0\u4f9b\u6b63\u786e\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370\u4f7f\u7528\u8bf4\u660e\u5e76\u9000\u51fa\uff0c\u72b6\u6001\u7801\u4e3a 1\u3002</p> </li> <li> <p><code>exit(2);</code> \u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> </li> <li> <p>\u7c7b\u4f3c\u4e8e<code>exit(1);</code>\uff0c<code>exit(2);</code>\u4e5f\u662f\u7528\u4e8e\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u9000\u51fa\u72b6\u6001\u7801<code>2</code>\u3002\u5728\u8fd9\u91cc\uff0c\u5982\u679c\u7a0b\u5e8f\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6\uff08\u65e0\u8bba\u662f\u6e90\u6587\u4ef6\u8fd8\u662f\u76ee\u6807\u6587\u4ef6\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa\uff0c\u72b6\u6001\u7801\u4e3a 2\u3002</p> </li> <li> <p><code>while (putc(getc(fp1),fp2)!=EOF);</code> putc \u548c getc \u5e72\u4ec0\u4e48\uff1f</p> </li> <li><code>getc(fp1)</code> \u51fd\u6570\u7528\u4e8e\u4ece\u6587\u4ef6\u6307\u9488<code>fp1</code>\u6307\u5411\u7684\u6587\u4ef6\uff08\u6e90\u6587\u4ef6\uff09\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002<code>putc(c, fp2)</code> \u51fd\u6570\u7528\u4e8e\u5c06\u5b57\u7b26<code>c</code>\u5199\u5165\u6587\u4ef6\u6307\u9488<code>fp2</code>\u6307\u5411\u7684\u6587\u4ef6\uff08\u76ee\u6807\u6587\u4ef6\uff09\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\uff0c\u7528\u4e8e\u9010\u4e2a\u5b57\u7b26\u5730\u4ece\u6e90\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165\u5230\u76ee\u6807\u6587\u4ef6\uff0c\u76f4\u5230\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff08EOF\uff09\u3002<code>EOF</code>\u662f\u4e00\u4e2a\u5b8f\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u7b26\u3002</li> </ol> <p>\u6574\u4e2a\u7a0b\u5e8f\u7684\u5de5\u4f5c\u6d41\u7a0b\u662f\uff1a</p> <ul> <li>\u68c0\u67e5\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570\u3002</li> <li>\u5c1d\u8bd5\u6253\u5f00\u6e90\u6587\u4ef6\u548c\u76ee\u6807\u6587\u4ef6\u3002</li> <li>\u9010\u4e2a\u5b57\u7b26\u5730\u4ece\u6e90\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165\u5230\u76ee\u6807\u6587\u4ef6\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002</li> <li>\u5173\u95ed\u4e24\u4e2a\u6587\u4ef6\u3002</li> <li>\u7a0b\u5e8f\u7ed3\u675f\u3002</li> </ul> C<pre><code>//\u5c06\u5927\u5c0f\u5199\u4e92\u6362,\u5e76\u5b58\u50a8\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\n#include &lt;stdio.h&gt;\nint main(int argc,char *argv[])\n{\n    FILE *fp1,*fp2;\n    char c;\n    if (argc!=3) exit(1);\n    if ((fp1=fopen(*++argv,\"r\"))==NULL\n        || (fp2=fopen(*++argv,\"w\")==NULL)) exit(2);\n\n    while ((c=fgetc(fp1))!=EOF) {\n        fputc(c+'A'-'a',fp2);\n    }\n\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}\n</code></pre> C<pre><code>//concatenate files\n#include &lt;stdio.h&gt;\n\nvoid filecopy(FILE *ifp,FILE *ofp)  //FILE\u662f\u4ec0\u4e48?\u53ef\u4ee5\u662fstdin\u6216stdout\u5417?\n{\n    int c;\n    while ((c=getc(ifp))!=EOF) putc(c,ofp);\n}\n\nint main(int argc,char *argv[])  //argv\u662f\u4ec0\u4e48?\n{\n    FILE *fp;\n    if (argc==1) filecopy(stdin,stdout);\n    else {\n        while (--argc){\n            if ((fp=fopen(*++argv,\"r\"))==NULL) {\n                printf(\"cat:can't open %s\\n\",*argv);\n                return 1; //return 1\u548cexit(1)\u76f8\u540c\u5417?\n            } else {\n                filecopy(fp,stdout);\n                fclose(fp);\n            }\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u8fde\u63a5\uff08concatenate\uff09\u591a\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08stdout\uff09\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>FILE\u662f\u4ec0\u4e48\uff1f\u53ef\u4ee5\u662fstdin\u6216stdout\u5417\uff1f</code></p> </li> <li> <p><code>FILE</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u7528\u4e8e\u8868\u793a\u6587\u4ef6\u6d41\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u8bfb\u5199\u6587\u4ef6\u3002<code>FILE</code> \u7ed3\u6784\u4f53\u5305\u542b\u4e86\u6587\u4ef6\u7684\u7f13\u51b2\u533a\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u4fe1\u606f\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u80fd\u591f\u901a\u8fc7\u6807\u51c6\u5e93\u51fd\u6570\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002</p> </li> <li> <p>\u662f\u7684\uff0c<code>FILE</code> \u53ef\u4ee5\u662f <code>stdin</code> \u6216 <code>stdout</code>\u3002<code>stdin</code> \u662f\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u901a\u5e38\u4e0e\u952e\u76d8\u8f93\u5165\u5173\u8054\uff1b<code>stdout</code> \u662f\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u901a\u5e38\u4e0e\u5c4f\u5e55\u8f93\u51fa\u5173\u8054\u3002\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>filecopy(stdin, stdout);</code> \u8868\u793a\u5c06\u6807\u51c6\u8f93\u5165\u7684\u5185\u5bb9\u590d\u5236\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> </li> <li> <p><code>argv\u662f\u4ec0\u4e48\uff1f</code></p> </li> <li> <p><code>argv</code> \u662f <code>main</code> \u51fd\u6570\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u6570\u7ec4\u5305\u542b\u4e86\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5176\u4e2d <code>argv[0]</code> \u662f\u7a0b\u5e8f\u7684\u540d\u79f0\uff0c<code>argv[1]</code>\u3001<code>argv[2]</code> \u7b49\u662f\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u53c2\u6570\u3002<code>argc</code> \u662f <code>argv</code> \u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5305\u62ec\u7a0b\u5e8f\u540d\u3002</p> </li> <li> <p><code>return 1 //return 1\u548cexit(1)\u76f8\u540c\u5417\uff1f</code></p> </li> <li><code>return 1</code> \u548c <code>exit(1)</code> \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u5b83\u4eec\u90fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fd4\u56de\u72b6\u6001\u7801 <code>1</code> \u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002\u4e0d\u8fc7\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u5dee\u522b\uff1a<ul> <li><code>return</code> \u8bed\u53e5\u662f\u4ece\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u800c <code>exit</code> \u51fd\u6570\u662f\u76f4\u63a5\u4ece\u7a0b\u5e8f\u4e2d\u9000\u51fa\uff0c\u5e76\u4e14\u6e05\u7406\u6240\u6709\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u548c\u91ca\u653e\u5206\u914d\u7684\u5185\u5b58\u3002</li> <li>\u5728 <code>main</code> \u51fd\u6570\u4e2d\u4f7f\u7528 <code>return</code> \u548c <code>exit</code> \u6548\u679c\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a <code>main</code> \u51fd\u6570\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u4ece <code>main</code> \u8fd4\u56de\u610f\u5473\u7740\u7a0b\u5e8f\u7ed3\u675f\u6267\u884c\u3002\u4f46\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\uff0c<code>return</code> \u53ea\u80fd\u8fd4\u56de\u5230 <code>main</code> \u6216\u5176\u4ed6\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u800c <code>exit</code> \u5219\u662f\u76f4\u63a5\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\u3002</li> <li>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>return 1;</code> \u662f\u4ece <code>main</code> \u51fd\u6570\u8fd4\u56de\u72b6\u6001\u7801 <code>1</code>\uff0c\u56e0\u6b64\u5b83\u7684\u6548\u679c\u4e0e <code>exit(1)</code> \u662f\u76f8\u540c\u7684\u3002</li> </ul> </li> </ol> C<pre><code>//sort\n#include &lt;stdio.h&gt;\n\nvoid sort(int *list,int n)\n{\n    int i,j,next;\n    for (i=1;i&lt;n;i++) { //\u63d2\u5165\u6392\u5e8f\n        next=list[i];\n        for (j=i-1;j&gt;=0 &amp;&amp; next&lt;list[j];j--) {\n            list[j+1]=list[j];\n        }\n        list[j+1]=next;\n    }\n}\n\nint main()\n{\n    int input[10],i;\n    FILE *fpin,*fpout;\n    if ((fpin=fopen(\"file1.dat\",\"r\"))==NULL) {\n        printf(\"Can't open file1\\n\");\n        exit(-1);\n    }\n    for (i=0;i&lt;10;i++) {\n        fscanf(fpin,\"%d\",&amp;input[i]); //&amp;input[i]\u662f\u4ec0\u4e48\u610f\u601d?\n            //fread(input,sizeof(int),`10,fpout); //fscanf\u548cfread\u6709\u4ec0\u4e48\u533a\u522b?\n    }\n\n    sort(input,10);\n\n    if ((fpout=fopen(\"file2.dat\",\"w\"))==NULL) {\n        printf(\"Can't open file2\\n\");\n        exit(-1);\n    }\n    for (i=0;i&lt;10;i++) {\n        fprintf(fpout,\"%d\",input[i]);\n            //fwrite(input,sizeod(int),10,fpout); //fprintf\u548cfwrite\u6709\u4ec0\u4e48\u533a\u522b?\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u7528\u4e8e\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u6574\u6570\u6570\u636e\uff0c\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5199\u5165\u53e6\u4e00\u4e2a\u6587\u4ef6\u3002\u4e0b\u9762\u662f\u5bf9\u6ce8\u91ca\u6389\u7684\u95ee\u9898\u7684\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>&amp;input[i]\u662f\u4ec0\u4e48\u610f\u601d\uff1f</code></p> </li> <li> <p><code>&amp;input[i]</code> \u662f\u53d6\u6570\u7ec4 <code>input</code> \u4e2d\u7b2c <code>i</code> \u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002<code>fscanf</code> \u51fd\u6570\u9700\u8981\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u4fbf\u80fd\u591f\u5c06\u8bfb\u53d6\u7684\u6570\u636e\u5b58\u50a8\u5230\u76f8\u5e94\u7684\u5185\u5b58\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>//fscanf\u548cfread\u6709\u4ec0\u4e48\u533a\u522b\uff1f</code></p> </li> <li> <p><code>fscanf</code> \u548c <code>fread</code> \u90fd\u662f\u7528\u4e8e\u6587\u4ef6\u8bfb\u53d6\u7684\u51fd\u6570\uff0c\u4f46\u5b83\u4eec\u5728\u8bfb\u53d6\u6570\u636e\u65f6\u7684\u884c\u4e3a\u548c\u7528\u9014\u6709\u6240\u4e0d\u540c\uff1a</p> <ul> <li><code>fscanf</code> \u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u8f93\u5165\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u683c\u5f0f\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u6839\u636e\u6307\u5b9a\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u89e3\u6790\u6570\u636e\u3002\u4f8b\u5982\uff0c<code>fscanf(fpin,\"%d\",&amp;input[i]);</code> \u4f1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u6574\u6570\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728 <code>input[i]</code> \u6307\u5411\u7684\u4f4d\u7f6e\u3002</li> <li><code>fread</code> \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8bfb\u53d6\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u5757\u3002<code>fread</code> \u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u683c\u5f0f\u5316\u5904\u7406\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u5730\u6309\u5b57\u8282\u8bfb\u53d6\u6570\u636e\u3002\u4f8b\u5982\uff0c<code>fread(input,sizeof(int),10,fpin);</code> \u4f1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 10 \u4e2a\u6574\u6570\u5927\u5c0f\u7684\u6570\u636e\u5757\u5230 <code>input</code> \u6570\u7ec4\u4e2d\u3002</li> </ul> </li> <li> <p><code>//fprintf\u548cfwrite\u6709\u4ec0\u4e48\u533a\u522b\uff1f</code></p> </li> <li><code>fprintf</code> \u548c <code>fwrite</code> \u90fd\u662f\u7528\u4e8e\u6587\u4ef6\u5199\u5165\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u6570\u636e\u7684\u5199\u5165\u65b9\u5f0f\uff1a<ul> <li><code>fprintf</code> \u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5c06\u6570\u636e\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5199\u5165\u6587\u4ef6\u3002\u4f8b\u5982\uff0c<code>fprintf(fpout,\"%d\",input[i]);</code> \u4f1a\u5c06 <code>input[i]</code> \u7684\u503c\u6309\u7167\u6574\u6570\u683c\u5f0f\u5199\u5165\u6587\u4ef6\u3002</li> <li><code>fwrite</code> \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5199\u5165\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u5c06\u6570\u636e\u4f5c\u4e3a\u5b57\u8282\u6d41\u5199\u5165\u6587\u4ef6\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u683c\u5f0f\u5316\u5904\u7406\u3002\u4f8b\u5982\uff0c<code>fwrite(input,sizeof(int),10,fpout);</code> \u4f1a\u5c06 <code>input</code> \u6570\u7ec4\u4e2d\u7684 10 \u4e2a\u6574\u6570\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u5199\u5165\u6587\u4ef6\u3002</li> </ul> </li> </ol> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>fscanf</code> \u548c <code>fprintf</code> \u88ab\u7528\u6765\u8bfb\u53d6\u548c\u5199\u5165\u683c\u5f0f\u5316\u7684\u6574\u6570\u6570\u636e\uff0c\u800c\u6ce8\u91ca\u4e2d\u7684 <code>fread</code> \u548c <code>fwrite</code> \u5219\u662f\u7528\u6765\u6f14\u793a\u5982\u4f55\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u3002</p> <p>\u5b8f</p> <ul> <li>\u6ca1\u6709\u503c\u7684\u5b8f:<code>#define _DEBUG</code></li> <li>\u8fd9\u7c7b\u5b8f\u662f\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u7684\uff0c \u540e\u9762\u6709\u5176\u4ed6\u7684\u7f16\u8bd1\u9884\u5904\u7406\u6307\u4ee4\u6765     \u68c0\u67e5\u8fd9\u4e2a\u5b8f\u662f\u5426\u5df2\u7ecf\u88ab\u5b9a\u4e49\u8fc7\u4e86</li> <li>\u50cf\u51fd\u6570\u7684\u5b8f:<code>#define cube(x) ((x) * (x) * (x))</code></li> <li># operator:<code>#define PRINT_INT(n) printf(#n \"=%d\", n)</code>   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>#define</code> \u7528\u4e8e\u521b\u5efa\u5b8f\u5b9a\u4e49\uff0c\u800c <code>#</code> \u662f\u4e00\u4e2a\u9884\u5904\u7406\u64cd\u4f5c\u7b26\uff0c\u79f0\u4e3a\u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26\uff08stringizing operator\uff09\u3002\u5f53\u9884\u5904\u7406\u5668\u9047\u5230 <code>#</code> \u64cd\u4f5c\u7b26\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u64cd\u4f5c\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002</li> </ul> <p>\u5728\u4f60\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff1a</p> C<pre><code>#define PRINT_INT(n) printf(#n \"=%d\", n)\n</code></pre> <p>\u8fd9\u4e2a\u5b8f\u5b9a\u4e49 <code>PRINT_INT(n)</code> \u4f1a\u5c06 <code>n</code> \u8fd9\u4e2a\u53c2\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728 <code>printf</code> \u51fd\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ol> <li> <p><code>#n</code> \u5c06\u53c2\u6570 <code>n</code> \u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002\u5982\u679c <code>n</code> \u662f\u4e00\u4e2a\u5b8f\u53c2\u6570\uff0c\u6bd4\u5982 <code>x</code>\uff0c\u90a3\u4e48 <code>#n</code> \u5c06\u53d8\u6210 <code>\"x\"</code>\u3002</p> </li> <li> <p><code>printf(#n \"=%d\", n)</code> \u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0e <code>\"=%d\"</code> \u7ed3\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u4f7f\u7528 <code>n</code> \u7684\u503c\u4f5c\u4e3a <code>printf</code> \u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002</p> </li> </ol> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u4f7f\u7528\u5b8f\uff1a</p> C<pre><code>int x = 10;\nPRINT_INT(x);\n</code></pre> <p>\u9884\u5904\u7406\u5668\u4f1a\u5c06 <code>PRINT_INT(x)</code> \u66ff\u6362\u4e3a\uff1a</p> C<pre><code>printf(\"x = %d\", x);\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>x</code> \u88ab\u5b57\u7b26\u4e32\u5316\u4e86\uff0c\u53d8\u6210\u4e86 <code>\"x\"</code>\uff0c\u7136\u540e\u4e0e <code>\"=%d\"</code> \u7ed3\u5408\uff0c\u5f62\u6210\u4e86 <code>\"x = %d\"</code> \u8fd9\u4e2a\u683c\u5f0f\u5b57\u7b26\u4e32\u3002<code>printf</code> \u51fd\u6570\u968f\u540e\u4f1a\u6253\u5370\u51fa <code>x</code> \u7684\u503c\uff0c\u5e76\u4e14\u524d\u9762\u5e26\u6709\u53d8\u91cf\u540d <code>x</code>\u3002</p> <p>\u4f7f\u7528 <code>#</code> \u64cd\u4f5c\u7b26\u7684\u597d\u5904\u662f\uff0c\u5b83\u5141\u8bb8\u5b8f\u5728\u5c55\u5f00\u65f6\u5305\u542b\u53d8\u91cf\u540d\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff0c\u8fd9\u5728\u8c03\u8bd5\u548c\u65e5\u5fd7\u8bb0\u5f55\u65f6\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u663e\u793a\u54ea\u4e2a\u53d8\u91cf\u88ab\u6253\u5370\u51fa\u6765\u3002</p> <ul> <li>## operator:   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>##</code> \u662f\u4e00\u4e2a\u9884\u5904\u7406\u64cd\u4f5c\u7b26\uff0c\u79f0\u4e3a\u6807\u8bb0\u7c98\u8d34\u64cd\u4f5c\u7b26\uff08token-pasting operator\uff09\u3002\u5b83\u7528\u4e8e\u5728\u5b8f\u5c55\u5f00\u65f6\u5c06\u4e24\u4e2a\u6807\u8bb0\uff08tokens\uff09\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u6807\u8bb0\u53ef\u4ee5\u662f\u4efb\u4f55\u6709\u6548\u7684 C \u8bed\u8a00\u6807\u8bc6\u7b26\uff0c\u5305\u62ec\u5b8f\u53c2\u6570\u3001\u5173\u952e\u5b57\u3001\u64cd\u4f5c\u7b26\u7b49\u3002</li> </ul> <p>\u5728\u4f60\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff1a</p> C<pre><code>#define MYCASE(item,id) \\\ncase id: \\\nitem##_##id = id;\\\nbreak\n</code></pre> <p>\u8fd9\u4e2a\u5b8f\u5b9a\u4e49 <code>MYCASE(item, id)</code> \u7528\u4e8e\u5728 <code>switch</code> \u8bed\u53e5\u4e2d\u751f\u6210\u4e00\u4e2a <code>case</code> \u6807\u7b7e\uff0c\u5e76\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ol> <li> <p><code>item##_##id</code>\uff1a\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e24\u6b21 <code>##</code> \u64cd\u4f5c\u7b26\u3002\u9996\u5148\uff0c<code>##</code> \u5c06 <code>item</code> \u548c\u4e0b\u5212\u7ebf <code>_</code> \u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u6807\u8bb0 <code>item_</code>\u3002\u7136\u540e\uff0c<code>##</code> \u5c06 <code>_</code> \u548c <code>id</code> \u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210 <code>item_id</code>\u3002\u5982\u679c <code>item</code> \u662f <code>widget</code> \u800c <code>id</code> \u662f <code>23</code>\uff0c\u90a3\u4e48 <code>item##_##id</code> \u5c06\u53d8\u6210 <code>widget_23</code>\u3002</p> </li> <li> <p><code>case id:</code>\uff1a\u8fd9\u662f\u4e00\u4e2a <code>case</code> \u6807\u7b7e\uff0c\u5b83\u5c06\u5339\u914d <code>switch</code> \u8bed\u53e5\u4e2d\u7684\u503c <code>id</code>\u3002</p> </li> <li> <p><code>item##_##id = id;</code>\uff1a\u8fd9\u884c\u4ee3\u7801\u5c06 <code>id</code> \u7684\u503c\u8d4b\u7ed9\u65b0\u751f\u6210\u7684\u53d8\u91cf\u540d <code>item_id</code>\u3002</p> </li> <li> <p><code>break</code>\uff1a\u8fd9\u884c\u4ee3\u7801\u7528\u4e8e\u9000\u51fa <code>switch</code> \u8bed\u53e5\u3002</p> </li> </ol> <p>\u73b0\u5728\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u4f7f\u7528\u5b8f\uff1a</p> C<pre><code>switch(x) {\n    MYCASE(widget,23);\n}\n</code></pre> <p>\u9884\u5904\u7406\u5668\u4f1a\u5c06 <code>MYCASE(widget,23)</code> \u66ff\u6362\u4e3a\uff1a</p> C<pre><code>case 23:\n    widget_23 = 23;\n    break;\n</code></pre> <p>\u8fd9\u91cc\uff0c<code>widget</code> \u548c <code>23</code> \u88ab\u5206\u522b\u7c98\u8d34\u5230 <code>_</code> \u7684\u524d\u540e\uff0c\u751f\u6210\u4e86\u53d8\u91cf\u540d <code>widget_23</code>\uff0c\u5e76\u4e14\u8fd9\u4e2a\u53d8\u91cf\u88ab\u8d4b\u503c\u4e3a <code>23</code>\u3002</p> <p>\u4f7f\u7528 <code>##</code> \u64cd\u4f5c\u7b26\u7684\u597d\u5904\u662f\uff0c\u5b83\u5141\u8bb8\u5b8f\u5728\u5c55\u5f00\u65f6\u52a8\u6001\u751f\u6210\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bb0\uff0c\u8fd9\u5728\u521b\u5efa\u5177\u6709\u552f\u4e00\u540d\u79f0\u7684\u53d8\u91cf\u6216\u51fd\u6570\u65f6\u975e\u5e38\u6709\u7528\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u7c7b\u4f3c <code>switch</code> \u8bed\u53e5\u6216\u521b\u5efa\u591a\u4e2a\u76f8\u4f3c\u51fd\u6570\u65f6\u3002</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u53cd\u659c\u6760  \u7528\u4e8e\u7eed\u884c\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5458\u5c06\u4e00\u6761\u8bed\u53e5\u6216\u5b9a\u4e49\u8de8\u8d8a\u591a\u884c\u4e66\u5199\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u6613\u8bfb\u3002\u5f53\u7f16\u8bd1\u5668\u9884\u5904\u7406\u5668\u9047\u5230\u884c\u5c3e\u7684\u53cd\u659c\u6760\u65f6\uff0c\u5b83\u4f1a\u5ffd\u7565\u6362\u884c\u7b26\uff0c\u5e76\u5c06\u4e0b\u4e00\u884c\u4e0e\u5f53\u524d\u884c\u7684\u5185\u5bb9\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u662f\u4e00\u884c\u4e00\u6837\u3002</p> <p>\u7f16\u8bd1\u8fc7\u7a0b</p> <ul> <li>\u7f16\u8bd1\u9884\u5904\u7406 \u2192 .i</li> <li>\u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801 \u2192 .s</li> <li>\u6c47\u7f16\u6210\u76ee\u6807\u4ee3\u7801 \u2192 .o</li> <li>\u94fe\u63a5\u6210\u53ef\u6267\u884c\u7a0b\u5e8f \u2192 .exe \uff08 \u6216 a.out\uff09</li> <li>\u8fd9\u4e9b\u6587\u4ef6\u90fd\u53ef\u4ee5\u518d\u7528 gcc \u5355\u72ec\u64cd\u4f5c\uff0c \u4ea7\u751f\u4e0b\u4e00\u6b65\u7ed3\u679c \uff08\u4f46\u662f\u9009\u9879\u590d\u6742\uff09</li> <li>gcc -c \u7684\u9009\u9879\u53ef\u4ee5\u53ea\u7f16\u8bd1\uff0c \u4ea7\u751f\u76ee\u6807\u6587\u4ef6\uff0c \u4f46\u662f\u4e0d\u94fe\u63a5   \u7f16\u8bd1\u5355\u5143</li> <li>\u4e00\u4e2a.c \u6587\u4ef6\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143</li> <li>\u7f16\u8bd1\u5668\u6bcf\u6b21\u7f16\u8bd1\u53ea\u5904\u7406\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143   \u9879\u76ee</li> <li>\u5728 Dev C++\u4e2d\u65b0\u5efa\u2014\u4e2a\u9879\u76ee\uff0c \u7136\u540e\u628a\u51e0\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u52a0\u5165\u8fdb\u53bb</li> <li>\u5bf9\u4e8e\u9879\u76ee\uff0c Dev C++\u7684\u7f16\u8bd1\u4f1a\u628a\u2014\u4e2a\u9879\u76ee\u4e2d\u6240\u6709\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u90fd\u7f16\u8bd1\u540e\uff0c \u94fe\u63a5\u8d77\u6765</li> <li>\u6709\u7684 IDE \u6709\u5206\u5f00\u7684\u7f16\u8bd1\u548c\u6784\u5efa\u4e24\u4e2a\u6309\u94ae\uff0c \u524d\u8005\u662f\u5bf9\u5355\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u8bd1\uff0c \u540e\u8005\u662f\u5bf9\u6574\u4e2a\u9879\u76ee\u505a\u94fe\u63a5   include \"\" \u8fd8\u662f &lt;&gt;?</li> <li><code>#include</code>\u6709\u4e24\u79cd\u5f62\u5f0f\u6765\u6307\u51fa\u8981\u63d2\u5165\u7684\u6587\u4ef6</li> <li>\"\" \u8981\u6c42\u7f16\u8bd1\u5668\u9996\u5148\u5728\u5f53\u524d\u76ee\u5f55(.c \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55)\u5bfb\u627e\u8fd9\u4e2a\u6587\u4ef6\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u5230\u7f16\u8bd1\u5668\u6307\u5b9a\u7684\u76ee\u5f55\u53bb\u627e(\u81ea\u5df1\u5b9a\u4e49\u7684)</li> <li>&lt;&gt; \u8ba9\u7f16\u8bd1\u5668\u53ea\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u53bb\u627e(\u7cfb\u7edf\u91cc\u7684)</li> <li>\u7f16\u8bd1\u5668\u81ea\u5df1\u77e5\u9053\u81ea\u5df1\u7684\u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\u5728\u54ea\u91cc</li> <li>\u73af\u5883\u53d8\u91cf\u548c\u7f16\u8bd1\u5668\u547d\u4ee4\u884c\u53c2\u6570\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bfb\u627e\u5934\u6587\u4ef6\u7684\u76ee\u5f55   static</li> <li>\u5728\u51fd\u6570\u524d\u9762\u52a0\u4e0a static \u5c31\u4f7f\u5f97\u5b83\u6210\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u51fd\u6570</li> <li>\u5728\u5168\u5c40\u53d8\u91cf\u524d\u9762\u52a0\u4e0a static \u5c31\u4f7f\u5f97\u5b83\u6210\u4e3a\u53ea\u80fd\u5728\u6240\u5728\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u88ab\u4f7f\u7528\u7684\u5168\u5c40\u53d8\u91cf   \u58f0\u660e</li> <li><code>int i;</code> \u662f\u53d8\u91cf\u7684\u5b9a\u4e49</li> <li><code>extern int i;</code> \u662f\u53d8\u91cf\u7684\u58f0\u660e</li> <li>\u540c\u2014\u4e2a\u7f16\u8bd1\u5355\u5143\u91cc\uff0c \u540c\u540d\u7684\u7ed3\u6784\u4e0d\u80fd\u88ab\u91cd\u590d\u58f0\u660e</li> <li>\u5982\u679c\u4f60\u7684\u5934\u6587\u4ef6\u91cc\u6709\u7ed3\u6784\u7684\u58f0\u660e\uff0c \u5f88\u96be\u8fd9\u4e2a\u5934\u6587\u4ef6\u4e0d\u4f1a\u5728\u2014\u4e2a\u7f16\u8bd1\u5355\u5143\u91cc\u88ab<code>#include</code>\u591a\u6b21 \u6240\u4ee5\u9700\u8981\u201c\u6807\u51c6\u5934\u6587\u4ef6\u7ed3\u6784\u201d</li> </ul> <p>\u7a0b\u5e8f\u6587\u4ef6,\u6570\u636e\u6587\u4ef6 \u7a0b\u5e8f\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u5b83\u4eec\u5728\u7528\u9014\u548c\u529f\u80fd\u4e0a\u6709\u6240\u533a\u522b\uff1a</p> <ol> <li> <p>\u7a0b\u5e8f\u6587\u4ef6\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u7a0b\u5e8f\u6587\u4ef6\u662f\u6307\u5305\u542b\u53ef\u6267\u884c\u6307\u4ee4\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6307\u4ee4\u662f\u7531\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u5e76\u7f16\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u7684\u4ee3\u7801\u3002\u7a0b\u5e8f\u6587\u4ef6\u901a\u5e38\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u548c\u529f\u80fd\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u6267\u884c\u3002</p> </li> <li>\u7c7b\u578b\uff1a\u7a0b\u5e8f\u6587\u4ef6\u53ef\u4ee5\u662f\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u5982<code>.exe</code>\u6587\u4ef6\u5728 Windows \u7cfb\u7edf\u4e2d\uff0c\u6216 ELF \u683c\u5f0f\u7684\u6587\u4ef6\u5728\u7c7b Unix \u7cfb\u7edf\u4e2d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u89e3\u91ca\u578b\u8bed\u8a00\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff08\u5982<code>.py</code>\u6587\u4ef6\u5bf9\u4e8e Python\uff09\u3002</li> <li>\u4f5c\u7528\uff1a\u7a0b\u5e8f\u6587\u4ef6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6267\u884c\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5904\u7406\u6570\u636e\u3001\u663e\u793a\u56fe\u5f62\u754c\u9762\u3001\u63a7\u5236\u786c\u4ef6\u7b49\u3002</li> <li> <p>\u4f8b\u5b50\uff1aWord \u5904\u7406\u8f6f\u4ef6\u3001\u6d4f\u89c8\u5668\u3001\u6e38\u620f\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49\u3002</p> </li> <li> <p>\u6570\u636e\u6587\u4ef6\uff1a</p> </li> <li>\u5b9a\u4e49\uff1a\u6570\u636e\u6587\u4ef6\u662f\u6307\u5305\u542b\u6570\u636e\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u662f\u6587\u672c\u3001\u6570\u5b57\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u4efb\u4f55\u5f62\u5f0f\u7684\u4fe1\u606f\u3002\u6570\u636e\u6587\u4ef6\u901a\u5e38\u7531\u7a0b\u5e8f\u8bfb\u53d6\u6216\u5199\u5165\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u7d22\u4fe1\u606f\u3002</li> <li>\u7c7b\u578b\uff1a\u6570\u636e\u6587\u4ef6\u53ef\u4ee5\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff08\u5982<code>.txt</code>\uff09\u3001\u914d\u7f6e\u6587\u4ef6\uff08\u5982<code>.ini</code>\u3001<code>.xml</code>\u3001<code>.json</code>\uff09\u3001\u6570\u636e\u5e93\u6587\u4ef6\uff08\u5982<code>.db</code>\u3001<code>.sqlite</code>\uff09\u3001\u56fe\u50cf\u6587\u4ef6\uff08\u5982<code>.jpg</code>\u3001<code>.png</code>\uff09\u3001\u6587\u6863\u6587\u4ef6\uff08\u5982<code>.docx</code>\u3001<code>.pdf</code>\uff09\u7b49\u3002</li> <li>\u4f5c\u7528\uff1a\u6570\u636e\u6587\u4ef6\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b58\u50a8\u4fe1\u606f\uff0c\u4f9b\u7a0b\u5e8f\u5728\u9700\u8981\u65f6\u8bfb\u53d6\u6216\u5199\u5165\u3002\u5b83\u4eec\u53ef\u4ee5\u662f\u6301\u4e45\u5b58\u50a8\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e34\u65f6\u6570\u636e\u3002</li> <li>\u4f8b\u5b50\uff1a\u6587\u6863\u3001\u56fe\u7247\u3001\u97f3\u4e50\u3001\u89c6\u9891\u3001\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8bb0\u5f55\u7b49\u3002</li> </ol> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7a0b\u5e8f\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\u7ecf\u5e38\u76f8\u4e92\u914d\u5408\u5de5\u4f5c\u3002\u7a0b\u5e8f\u6587\u4ef6\u5904\u7406\u6570\u636e\u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u800c\u6570\u636e\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\u6587\u4ef6\u9700\u8981\u5904\u7406\u7684\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff08\u7a0b\u5e8f\u6587\u4ef6\uff09\u53ef\u4ee5\u6253\u5f00\u548c\u7f16\u8f91\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff08\u6570\u636e\u6587\u4ef6\uff09\uff0c\u6216\u8005\u4e00\u4e2a\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08\u7a0b\u5e8f\u6587\u4ef6\uff09\u53ef\u4ee5\u67e5\u8be2\u548c\u66f4\u65b0\u6570\u636e\u5e93\u6587\u4ef6\uff08\u6570\u636e\u6587\u4ef6\uff09\u4e2d\u7684\u6570\u636e\u3002 \u6587\u4ef6\u6307\u9488 \u6bcf\u4e2a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\uff0c\u90fd\u4f1a\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u51fa\u4e00\u4e2a\u76f8\u5e94\u7684\u6587\u4ef6\u4fe1\u606f\u533a\u3002\u8be5\u4fe1\u606f\u533a\u7528\u6765\u5b58\u653e\u6587\u4ef6\u76f8\u5173\u4fe1\u606f\uff08\u5982\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u72b6\u6001\u4ee5\u53ca\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e\u7b49\uff09\u3002\u8fd9\u4e9b\u4fe1\u606f\u662f\u4fdd\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u7684\uff0c\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u7531\u7cfb\u7edf\u7533\u660e\u7684\uff0c\u540d\u4e3a <code>FILE</code> \uff08\u6ce8\u610f\u662f\u7c7b\u578b\uff09\u3002 perror <code>perror</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u53d1\u751f\u9519\u8bef\u65f6\u5411\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08\u901a\u5e38\u662f\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\uff09\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u6839\u636e\u5f53\u524d\u7684 <code>errno</code> \u503c\uff08\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u8bb0\u5f55\u4e86\u4e0a\u4e00\u6b21\u5e93\u51fd\u6570\u8c03\u7528\u5931\u8d25\u7684\u9519\u8bef\u4ee3\u7801\uff09\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5e76\u5c06\u5176\u8f93\u51fa\u3002</p> <p>\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>void perror(const char *s);\n</code></pre> <ul> <li><code>s</code> \u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c<code>perror</code> \u4f1a\u5728\u8f93\u51fa\u7684\u9519\u8bef\u4fe1\u606f\u524d\u52a0\u4e0a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c <code>s</code> \u662f <code>NULL</code>\uff0c\u5219\u4e0d\u8f93\u51fa\u4efb\u4f55\u524d\u7f00\u3002</li> </ul> <p><code>perror</code> \u7684\u4f5c\u7528\u662f\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u62a5\u544a\u9519\u8bef\uff0c\u800c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u624b\u52a8\u7f16\u5199\u9519\u8bef\u6d88\u606f\u3002\u8fd9\u4e2a\u51fd\u6570\u901a\u5e38\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u540e\u88ab\u8c03\u7528\uff0c\u4f8b\u5982\u5728\u6587\u4ef6\u64cd\u4f5c\u6216\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u540e\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>perror</code> \u7684\u7b80\u5355\u793a\u4f8b\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n\nint main() {\n    FILE *fp = fopen(\"nonexistentfile.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return 1;\n    }\n    // \u6587\u4ef6\u64cd\u4f5c...\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c <code>fopen</code> \u8c03\u7528\u5931\u8d25\uff08\u6bd4\u5982\u56e0\u4e3a\u6587\u4ef6\u4e0d\u5b58\u5728\uff09\uff0c<code>perror</code> \u4f1a\u88ab\u8c03\u7528\uff0c\u5e76\u8f93\u51fa\u7c7b\u4f3c\u4e8e \"Error opening file: No such file or directory\" \u7684\u6d88\u606f\u3002\u8fd9\u91cc\u7684 \"Error opening file\" \u662f\u7528\u6237\u63d0\u4f9b\u7684\u524d\u7f00\uff0c\u540e\u9762\u8ddf\u7740\u7684\u662f <code>perror</code> \u6839\u636e <code>errno</code> \u503c\u67e5\u627e\u5230\u7684\u9519\u8bef\u63cf\u8ff0\u3002</p> <p><code>perror</code> \u51fd\u6570\u4f1a\u8f93\u51fa\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ol> <li>\u7528\u6237\u5b9a\u4e49\u7684\u524d\u7f00\uff1a\u8fd9\u662f\u4f60\u4f20\u9012\u7ed9 <code>perror</code> \u51fd\u6570\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u3002\u5982\u679c\u4f20\u9012\u7684\u662f <code>NULL</code>\uff0c\u5219\u6ca1\u6709\u524d\u7f00\u3002</li> <li>\u9519\u8bef\u63cf\u8ff0\uff1a\u8fd9\u662f <code>perror</code> \u6839\u636e\u5168\u5c40\u53d8\u91cf <code>errno</code> \u7684\u503c\u6765\u786e\u5b9a\u7684\u9519\u8bef\u6d88\u606f\u3002<code>errno</code> \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u5728\u5e93\u51fd\u6570\u53d1\u751f\u9519\u8bef\u65f6\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u6bcf\u4e2a\u503c\u5bf9\u5e94\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684\u9519\u8bef\u6761\u4ef6\u3002<code>perror</code> \u4f1a\u67e5\u627e\u8fd9\u4e2a\u503c\u5bf9\u5e94\u7684\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u3002</li> </ol> <p>\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u901a\u5e38\u662f\u56fa\u5b9a\u7684\uff0c\u7531 C \u5e93\u63d0\u4f9b\uff0c\u5e76\u4e14\u662f\u672c\u5730\u5316\u7684\uff0c\u610f\u5473\u7740\u5b83\u4f1a\u6839\u636e\u7cfb\u7edf\u7684\u533a\u57df\u8bbe\u7f6e\u8fdb\u884c\u672c\u5730\u5316\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>errno</code> \u7684\u503c\u662f <code>ENOENT</code>\uff08\u901a\u5e38\u8868\u793a\u201c\u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u201d\uff09\uff0c\u90a3\u4e48 <code>perror</code> \u53ef\u80fd\u4f1a\u8f93\u51fa \"No such file or directory\"\u3002</p> <p>\u987a\u5e8f\u8bfb\u5199 \u987a\u5e8f\u8bfb\u5199\u662f\u6307\u6570\u636e\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\uff08\u901a\u5e38\u662f\u7ebf\u6027\u987a\u5e8f\uff09\u88ab\u8bfb\u53d6\u6216\u5199\u5165\u5230\u5b58\u50a8\u4ecb\u8d28\uff08\u5982\u786c\u76d8\u3001\u6587\u4ef6\u7b49\uff09\u7684\u8fc7\u7a0b\u3002\u8fd9\u79cd\u8bfb\u5199\u65b9\u5f0f\u9075\u5faa\u6570\u636e\u5728\u5b58\u50a8\u4ecb\u8d28\u4e0a\u7684\u7269\u7406\u6216\u903b\u8f91\u6392\u5217\u987a\u5e8f\uff0c\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u6570\u636e\u9879\u3002\u987a\u5e8f\u8bfb\u5199\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u6570\u636e\u5904\u7406\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u952e\u70b9\uff1a</p> <ol> <li>\u987a\u5e8f\u8bfb\u53d6\uff1a</li> <li>\u5728\u987a\u5e8f\u8bfb\u53d6\u4e2d\uff0c\u6570\u636e\u88ab\u6309\u987a\u5e8f\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u7684\u5f00\u59cb\u5230\u7ed3\u675f\u9010\u884c\u8bfb\u53d6\u6587\u672c\u6570\u636e\u3002</li> <li>\u987a\u5e8f\u8bfb\u53d6\u901a\u5e38\u7528\u4e8e\u9700\u8981\u5904\u7406\u6574\u4e2a\u6570\u636e\u96c6\u7684\u60c5\u51b5\uff0c\u5982\u5907\u4efd\u6587\u4ef6\u6216\u5904\u7406\u65e5\u5fd7\u6587\u4ef6\u3002</li> <li>\u987a\u5e8f\u5199\u5165\uff1a</li> <li>\u5728\u987a\u5e8f\u5199\u5165\u4e2d\uff0c\u6570\u636e\u88ab\u6309\u987a\u5e8f\u5199\u5165\u5230\u5b58\u50a8\u4ecb\u8d28\u7684\u8fde\u7eed\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5c06\u8f93\u51fa\u7ed3\u679c\u9010\u884c\u5199\u5165\u5230\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d\u3002</li> <li>\u987a\u5e8f\u5199\u5165\u901a\u5e38\u7528\u4e8e\u751f\u6210\u62a5\u544a\u6216\u5c06\u5904\u7406\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002</li> </ol> <p>\u590d\u6742\u5b9a\u4e49</p> <ol> <li>int *f();    f: function returning pointer to int</li> <li>int (*f)()    f: pointer to function returning int</li> <li>char **argv    argv: pointer to pointer to char</li> <li>int (*daytab)[13]    daytab: pointer to array[13] of int</li> <li>void *comp()    comp: function returning pointer to void</li> <li>void (*comp)()    comp: pointer to function returning void</li> <li>char (*(*x())[])()    x: function returning pointer to array[] of pointer to function returning char</li> <li>char (*(*x[3])())[5]    x: array[3] of pointer to function returning pointer to array[5] of char</li> </ol> <p>stdint.h <code>stdint.h</code>\u662f C \u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6807\u51c6\u7684\u6574\u6570\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u5177\u6709\u660e\u786e\u7684\u5927\u5c0f\u548c\u7b26\u53f7\u3002<code>stdint.h</code>\u5934\u6587\u4ef6\u662f\u5728 C99 \u6807\u51c6\u4e2d\u5f15\u5165\u7684\uff0c\u76ee\u7684\u662f\u63d0\u4f9b\u8de8\u5e73\u53f0\u7684\u6574\u6570\u7c7b\u578b\u5b9a\u4e49\uff0c\u4ee5\u786e\u4fdd\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u4e4b\u95f4\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u884c\u4e3a\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_1","title":"\u5b9a\u4e49\u7684\u7c7b\u578b","text":"<p><code>stdint.h</code>\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u7c7b\u578b\u7684\u6574\u6570\uff1a</p> <ul> <li> <p>\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int8_t</code>\uff1a8 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</p> </li> <li><code>int16_t</code>\uff1a16 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</li> <li><code>int32_t</code>\uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</li> <li> <p><code>int64_t</code>\uff1a64 \u4f4d\u6709\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>uint8_t</code>\uff1a8 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li><code>uint16_t</code>\uff1a16 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</li> <li><code>uint32_t</code>\uff1a32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</li> <li> <p><code>uint64_t</code>\uff1a64 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>\u6700\u5c0f\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int_least8_t</code>\u3001<code>int_least16_t</code>\u3001<code>int_least32_t</code>\u3001<code>int_least64_t</code>\uff1a\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6700\u5c0f\u5bbd\u5ea6\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p><code>uint_least8_t</code>\u3001<code>uint_least16_t</code>\u3001<code>uint_least32_t</code>\u3001<code>uint_least64_t</code>\uff1a\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6700\u5c0f\u5bbd\u5ea6\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p>\u6700\u5feb\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li> <p><code>int_fast8_t</code>\u3001<code>int_fast16_t</code>\u3001<code>int_fast32_t</code>\u3001<code>int_fast64_t</code>\uff1a\u6700\u5feb\u4e14\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p><code>uint_fast8_t</code>\u3001<code>uint_fast16_t</code>\u3001<code>uint_fast32_t</code>\u3001<code>uint_fast64_t</code>\uff1a\u6700\u5feb\u4e14\u81f3\u5c11\u5177\u6709\u6307\u5b9a\u5bbd\u5ea6\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</p> </li> <li> <p>\u6700\u5927\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff1a</p> </li> <li><code>intmax_t</code>\uff1a\u6700\u5927\u7684\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b</li> <li><code>uintmax_t</code>\uff1a\u6700\u5927\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_2","title":"\u793a\u4f8b","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\nint main() {\n    int32_t a = 12345;\n    uint32_t b = 12345;\n    printf(\"int32_t: %d\\n\", a);\n    printf(\"uint32_t: %u\\n\", b);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86<code>int32_t</code>\u548c<code>uint32_t</code>\u7c7b\u578b\u6765\u5b9a\u4e49\u53d8\u91cf<code>a</code>\u548c<code>b</code>\uff0c\u5e76\u4f7f\u7528<code>printf</code>\u51fd\u6570\u8f93\u51fa\u5b83\u4eec\u7684\u503c\u3002\u901a\u8fc7\u4f7f\u7528<code>stdint.h</code>\u4e2d\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd<code>a</code>\u548c<code>b</code>\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u90fd\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u884c\u4e3a\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_3","title":"\u4e00\u79cd\u795e\u5947\u7684\u5e94\u7528","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\nint main() {\n    double x;\n    scanf(\"%lf\", &amp;x);\n\n    // \u4f7f\u7528union\u6765\u8bbf\u95eedouble\u7684\u5185\u5b58\u8868\u793a\n    union {\n        double d;\n        uint64_t i;\n    } u = {x};\n\n    // \u8f93\u51fa64\u4f4d\u673a\u5185\u7801\u7684\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\n    printf(\"%016llX\\n\", u.i);\n\n    return 0;\n}\n</code></pre> <p>\u5728<code>printf</code>\u51fd\u6570\u7684\u683c\u5f0f\u8bf4\u660e\u7b26\u4e2d\uff0c<code>%016llX</code>\u7528\u4e8e\u6307\u5b9a\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u5177\u4f53\u542b\u4e49\u5982\u4e0b\uff1a</p> <ul> <li><code>%</code>\uff1a\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u683c\u5f0f\u8bf4\u660e\u7b26\u7684\u5f00\u59cb\u3002</li> <li><code>0</code>\uff1a\u8868\u793a\u5982\u679c\u8f93\u51fa\u7684\u6570\u5b57\u4e0d\u8db3\u6307\u5b9a\u7684\u5bbd\u5ea6\uff0c\u5219\u5728\u5de6\u4fa7\u586b\u5145 0 \u4ee5\u8fbe\u5230\u6307\u5b9a\u7684\u5bbd\u5ea6\u3002</li> <li><code>16</code>\uff1a\u8868\u793a\u8f93\u51fa\u7684\u5bbd\u5ea6\u4e3a 16 \u4e2a\u5b57\u7b26\u3002\u5982\u679c\u6570\u5b57\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u4e0d\u8db3 16 \u4f4d\uff0c\u5de6\u4fa7\u4f1a\u586b\u5145 0 \u4ee5\u8fbe\u5230 16 \u4f4d\u3002</li> <li><code>ll</code>\uff1a\u8868\u793a<code>long long</code>\u7c7b\u578b\u3002\u5bf9\u4e8e\u5341\u516d\u8fdb\u5236\u6574\u6570\u8f93\u51fa\uff0c\u5b83\u544a\u8bc9<code>printf</code>\u51fd\u6570<code>u.i</code>\u662f\u4e00\u4e2a 64 \u4f4d\u7684\u6574\u6570\uff08<code>uint64_t</code>\u7c7b\u578b\uff09\u3002</li> <li><code>X</code>\uff1a\u8868\u793a\u4ee5\u5341\u516d\u8fdb\u5236\u5927\u5199\u5f62\u5f0f\u8f93\u51fa\u6574\u6570\u3002\u5982\u679c\u4f7f\u7528\u5c0f\u5199\u7684<code>x</code>\uff0c\u5219\u8f93\u51fa\u7684\u662f\u5341\u516d\u8fdb\u5236\u5c0f\u5199\u5f62\u5f0f\u3002</li> </ul> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c<code>%016llX</code>\u7684\u610f\u601d\u662f\uff1a\u4ee5\u5341\u516d\u8fdb\u5236\u5927\u5199\u5f62\u5f0f\u8f93\u51fa\u4e00\u4e2a 64 \u4f4d\u6574\u6570\uff0c\u8f93\u51fa\u7684\u5bbd\u5ea6\u4e3a 16 \u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u4e0d\u8db3 16 \u4f4d\u5219\u5728\u5de6\u4fa7\u586b\u5145 0\u3002</p> <p>#ifndef <code>#ifndef</code> \u662f C \u8bed\u8a00\u9884\u5904\u7406\u5668\u7684\u4e00\u4e2a\u6307\u4ee4\uff0c\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u3002\u5b83\u7684\u5168\u79f0\u662f \"if not defined\"\uff0c\u610f\u601d\u662f\u201c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u201d\u3002<code>#ifndef</code> \u901a\u5e38\u4e0e <code>#define</code> \u548c <code>#endif</code> \u4e00\u8d77\u4f7f\u7528\uff0c\u7528\u4e8e\u907f\u514d\u5934\u6587\u4ef6\u5185\u5bb9\u7684\u91cd\u590d\u5305\u542b\uff08\u4e5f\u79f0\u4e3a\u591a\u91cd\u5305\u542b\uff09\uff0c\u8fd9\u5728\u5927\u578b\u9879\u76ee\u4e2d\u975e\u5e38\u5e38\u89c1\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#ifndef","title":"\u4f7f\u7528 <code>#ifndef</code> \u907f\u514d\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b","text":"<p>\u5f53\u4f60\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u6709\u591a\u4e2a\u6e90\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\u7684\u60c5\u51b5\u3002\u8fd9\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u7b26\u53f7\uff08\u5982\u51fd\u6570\u539f\u578b\u6216\u7c7b\u578b\u5b9a\u4e49\uff09\u4f1a\u88ab\u591a\u6b21\u5b9a\u4e49\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>#ifndef</code>\u3001<code>#define</code> \u548c <code>#endif</code> \u6765\u521b\u5efa\u4e00\u4e2a\u5b8f\u4fdd\u62a4\uff08macro guard\uff09\u6216\u5934\u6587\u4ef6\u4fdd\u62a4\uff08header guard\uff09\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f7f\u7528 <code>#ifndef</code> \u7684\u5934\u6587\u4ef6\u793a\u4f8b\uff1a</p> C<pre><code>// my_header.h\n#ifndef MY_HEADER_H  // \u5982\u679c MY_HEADER_H \u6ca1\u6709\u88ab\u5b9a\u4e49\n#define MY_HEADER_H  // \u5b9a\u4e49 MY_HEADER_H\n\n// \u5934\u6587\u4ef6\u7684\u5185\u5bb9\nint my_function(int arg);\n\n#endif // MY_HEADER_H\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53\u7f16\u8bd1\u5668\u7b2c\u4e00\u6b21\u9047\u5230 <code>my_header.h</code> \u65f6\uff0c<code>MY_HEADER_H</code> \u8fd8\u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u6240\u4ee5\u5b83\u4f1a\u5b9a\u4e49 <code>MY_HEADER_H</code> \u5e76\u5305\u542b\u5934\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5982\u679c\u5728\u540e\u7eed\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u518d\u6b21\u9047\u5230 <code>my_header.h</code>\uff0c<code>MY_HEADER_H</code> \u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64 <code>#ifndef MY_HEADER_H</code> \u7684\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u7f16\u8bd1\u5668\u4f1a\u8df3\u8fc7\u5934\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ece\u800c\u907f\u514d\u4e86\u91cd\u590d\u5305\u542b\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#ifndef_1","title":"\u4f7f\u7528 <code>#ifndef</code> \u8fdb\u884c\u6761\u4ef6\u7f16\u8bd1","text":"<p>\u9664\u4e86\u907f\u514d\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\uff0c<code>#ifndef</code> \u8fd8\u53ef\u4ee5\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\uff0c\u6839\u636e\u662f\u5426\u5b9a\u4e49\u4e86\u67d0\u4e2a\u5b8f\u6765\u51b3\u5b9a\u662f\u5426\u5305\u542b\u67d0\u4e9b\u4ee3\u7801\u3002\u4f8b\u5982\uff1a</p> C<pre><code>#ifndef USE_MY_FEATURE\n// \u5982\u679c USE_MY_FEATURE \u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u4ee5\u4e0b\u4ee3\u7801\nvoid my_feature_function() {\n    // \u5b9e\u73b0\u4ee3\u7801\n}\n#endif\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c <code>USE_MY_FEATURE</code> \u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4f1a\u5305\u542b <code>my_feature_function</code> \u7684\u5b9a\u4e49\uff1b\u5982\u679c <code>USE_MY_FEATURE</code> \u88ab\u5b9a\u4e49\u4e86\uff0c\u5219\u4e0d\u4f1a\u5305\u542b\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_4","title":"\u603b\u7ed3","text":"<ul> <li>\u4f7f\u7528 <code>#ifndef</code> \u53ef\u4ee5\u907f\u514d\u5934\u6587\u4ef6\u7684\u91cd\u590d\u5305\u542b\uff0c\u8fd9\u662f\u901a\u8fc7\u521b\u5efa\u5b8f\u4fdd\u62a4\u6765\u5b9e\u73b0\u7684\u3002</li> <li><code>#ifndef</code> \u4e5f\u53ef\u4ee5\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\uff0c\u6839\u636e\u5b8f\u7684\u5b9a\u4e49\u60c5\u51b5\u6765\u51b3\u5b9a\u662f\u5426\u5305\u542b\u67d0\u4e9b\u4ee3\u7801\u3002</li> <li>\u5728\u4f7f\u7528 <code>#ifndef</code> \u65f6\uff0c\u901a\u5e38\u9700\u8981\u914d\u5408 <code>#define</code> \u548c <code>#endif</code> \u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\u548c\u53ef\u8bfb\u6027\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_5","title":"\u7ec6\u8282","text":"C<pre><code>int x = 5, y = 7;\nvoid swap ( )\n{\n      int z ;\n\n      z = x ;  x = y ;  y = z ;\n}\nint main(void)\n{\n      int x = 3, y = 8;\n      swap ( ) ;  //\u6539\u53d8\u7684\u662f\u5168\u5c40\u53d8\u91cf\u7684x,y,main\u51fd\u6570\u4e2d\u4e0d\u53d8\n      printf (\"%d,%d \\n\", x , y ) ;   //\u8f93\u51fa\u4e3a3,8\n\n      return 0 ;\n}\n</code></pre> <ul> <li>\u81ea\u52a8\u53d8\u91cf\uff0c\u7cfb\u7edf\u4e0d\u81ea\u52a8\u8d4b\u521d\u59cb\u503c</li> <li>\u53d8\u91cf\u7684\u9690\u542b\u5b58\u50a8\u53d8\u91cf\u4e3a auto(\u81ea\u52a8\u578b)</li> <li>\u5916\u90e8\u53d8\u91cf:extern</li> <li>C \u8bed\u8a00\u53d8\u91cf\u6309\u4f5c\u7528\u57df\u5206\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf</li> <li>\u6309\u751f\u5b58\u671f\u5206\u4e3a\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u548c\u52a8\u6001\u5b58\u50a8\u65b9\u5f0f</li> <li>\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5728\u7f16\u8bd1\u9636\u6bb5\u5b8c\u6210</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint fun(int a,int b) {\n    return a-b;\n}\nint a=10,b=4;\nint main() {\n    int a=4,b=10;\n    int t=fun(a,b);  //a,b\u5728main\u5185\u90e8\u5b9a\u4e49,\u4f20\u5165\u51fd\u6570\u4e2d\n    printf(\"%d\\n\",t); //\u8fd0\u884c\u7ed3\u679c\u4e3a-6\n    return 0;\n}\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\nint f(int m) {\n    static int n=0;\n    n+=m;\n    return n;\n}\nint main() {\n    int n=0;  //n\u5728main\u548cf\u4e2d\u91cd\u590d\u5b9a\u4e49,\u4e24\u4e2a\u51fd\u6570\u4e2d\u7684n\u4e0d\u662f\u540c\u4e00\u4e2an\n    printf(\"%d \",f(++n));\n    printf(\"%d\\n\",f(n++)); //\u8fd0\u884c\u7ed3\u679c\u4e3a1 2\n    return 0;\n}\n</code></pre> <ul> <li>\u7528\u9017\u53f7\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u5199\u591a\u884c\u8bed\u53e5</li> <li>\u5b8f\u5b9a\u4e49\u4e2d\u53ef\u4f7f\u7528\u6807\u8bc6\u7b26,\u5b9e\u9645\u51fd\u6570\u8fd0\u884c\u65f6\u5b9a\u4e49\u540c\u540d\u53d8\u91cf,\u51fd\u6570\u4e2d\u5c06\u5176\u66ff\u6362   \u4e3e\u4f8b:<code>#define F a+a \\\\ int a=3,x=9;</code>   \u6267\u884c<code>x=F*F</code>\u540e,x \u7684\u503c\u4e3a 15</li> <li>define \u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26(\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26)   if \u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26(\u5173\u952e\u5b57\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26)</li> <li>3&lt; x &lt;5 \u7684\u503c\u6052\u4e3a 1</li> <li>3==x==0 \u7684\u503c\u6052\u4e3a 0</li> <li>\u63a7\u5236\u8868\u8fbe\u5206\u4e3a\u8bed\u53e5\u7ea7\uff08\u987a\u5e8f\uff0c\u5206\u652f\uff0c\u5faa\u73af\uff09\u548c\u6a21\u5757\u7ea7\uff08\u51fd\u6570\uff09</li> <li>\u6df7\u5408\u8fd0\u7b97\u6ce8\u610f\u5de6\u7ed3\u5408\u548c\u53f3\u7ed3\u5408</li> <li>\u5206\u652f\u63a7\u5236\u5206\u4e3a\u53cc\u8def\u5206\u652f\uff08if else\uff09\u548c\u591a\u8def\u5206\u652f\uff08switch case\uff09</li> <li>static \u4fee\u9970\u5168\u5c40\u53d8\u91cf\uff1a\u53ea\u80fd\u5728\u8be5\u6587\u4ef6\u91cc\u4f7f\u7528\uff0c\u5176\u4ed6\u6587\u4ef6\u4e0d\u80fd\u8bbf\u95ee\uff08\u5373\u4f7f\u52a0 extern \u4e5f\u4e0d\u884c\uff09</li> <li><code>If (grade&lt;60) {\u2026}</code>grade \u7684\u53d6\u503c\u81f3\u5c11\u6709\u4e09\u7ec4</li> <li>\u591a\u91cd if else\uff1a\u6ce8\u610f else \u914d\u5bf9\u7684\u662f\u6700\u8fd1\u7684\u4e14\u4e0d\u5e26 else \u7684 if</li> <li>\u590d\u5408\u8bed\u53e5\uff1a\u7528\u5927\u62ec\u53f7\u5305\u56f4\u7684\u4e00\u7cfb\u5217\u8bed\u53e5\uff0c\u5728\u8bed\u6cd5\u4e0a\u88ab\u8ba4\u4e3a\u662f\u4e00\u6761\u8bed\u53e5</li> <li>\u6807\u8bc6\u7b26\uff1a\u7528\u4e8e\u5b9a\u4e49\u53d8\u91cf\uff0c\u51fd\u6570\uff0c\u5b8f</li> <li>for \u540e\u7684\u590d\u5408\u8bed\u53e5\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5373 for ( ; ; ) ;\u8bed\u6cd5\u6b63\u786e</li> <li>(a&amp;3)==(a%4)\u7684\u503c\u4e3a 1\uff0c\uff08\u56e0\u4e3a 3 \u7684\u4e8c\u8fdb\u5236\u662f 11\uff0ca&amp;3 \u76f8\u5f53\u4e8e\u53d6\u51fa\u6700\u540e\u4e24\u4f4d\uff09</li> <li>!!(x&gt;y)\u548c\uff08x&gt;y)\u7b49\u4ef7</li> <li>\u975e\u96f6\u503c\u90fd\u8ba4\u4e3a\u662f true</li> <li>\u5b9a\u4e49\u4e3a<code>int a[3][2]={1,2,3,4,5,6}</code>\uff0c\u82e5\u884c\u5217\u8d85\u8fc7\u5b9a\u4e49\uff0c\u81ea\u52a8\u5f80\u540e\u53d6\u503c\uff0c\u5982<code>a[1][3]</code>\u4e3a 6</li> <li>p++\u7b49\u4ef7\u4e8e(p++)\uff0c\u56e0\u4e3a++\u4e3a\u53f3\u7ed3\u5408</li> <li><code>char c[]=\u201cl\\t\\r\\\\\\0will\\n\u201d; \\\\ printf(\u201c%d\\n\u201dstrlen(c));</code>\u8fd0\u884c\u7ed3\u679c\u4e3a 4</li> <li><code>char str[10];  str[U+200E] = \u201cstring\u201d</code>\u9519\u8bef\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u53d8\u91cf\u540d\u4e0d\u80fd\u88ab\u6539\u53d8</li> <li><code>puts</code>\u8f93\u51fa\u5305\u542b\u2019\\0\u2019</li> <li>\u51fd\u6570\u5b9a\u4e49\u4e2d\u6570\u7ec4\u53ef\u89c4\u5b9a\u5927\u5c0f</li> <li>\u51fd\u6570\u7684\u5f62\u53c2\u548c\u5b9e\u53c2\u5206\u522b\u5360\u7528\u4e0d\u540c\u7684\u5b58\u50a8\u5355\u5143</li> <li>c \u8bed\u8a00\u6e90\u6587\u4ef6\u4e0d\u4e00\u5b9a\u8981\u5305\u542b main \u51fd\u6570</li> <li>\u51fd\u6570\u539f\u578b\u58f0\u660e\u53ef\u4ee5\u58f0\u660e\u591a\u6b21</li> <li>syntax error\uff1a\u8bed\u6cd5\u9519\u8bef   compilation error\uff1a\u7f16\u8bd1\u9519\u8bef</li> <li>\u7eed\u884c\u7b26\u4e3a<code>\\</code>,\u53ef\u5c06\u4e00\u884c\u4ee3\u7801\u5199\u5728\u591a\u884c</li> <li>\u4ece\u5c0f\u5230\u5927\u5192\u6ce1\u6392\u5e8f,\u7b2c i \u8f6e\u5c06\u539f\u672c\u7b2c i \u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e</li> <li>\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u5373\u9009\u62e9\u6392\u5e8f</li> <li><code>int a[10]; a++;</code>\u9519\u8bef.a \u4e3a\u6570\u7ec4\u540d,\u4e0d\u53ef\u6539\u53d8\u503c</li> <li><code>int a[10];</code>\u5219*a \u4e3a a[0]</li> <li>\u6307\u9488\u4e0d\u80fd\u76f8\u52a0,\u4f46\u662f\u53ef\u4ee5\u76f8\u51cf.\u540c\u4e00\u6570\u7ec4\u7684\u4e24\u6307\u9488\u76f8\u51cf,\u8fd4\u56de\u7740\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570</li> <li>\u4e24\u6307\u9488\u76f8\u7b49\u5373\u6307\u5411\u7684\u5730\u5740\u76f8\u7b49</li> <li>\u5e38\u7528\u7c7b\u578b\u5b57\u8282\u6570:</li> <li>char:1 \u5b57\u8282</li> <li>int:4 \u5b57\u8282</li> <li>long long:8 \u5b57\u8282</li> <li>float:4 \u5b57\u8282</li> <li>double:8 \u5b57\u8282</li> </ul> <ul> <li>sizeof \u4e0d\u662f\u51fd\u6570\uff0c\u662f\u7f16\u8bd1\u8fd0\u7b97\u7b26   <code>sizeof</code> \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u539f\u59cb\u7c7b\u578b\uff08\u5982 <code>int</code>\u3001<code>float</code>\uff09\u548c\u590d\u5408\u7c7b\u578b\uff08\u5982 <code>struct</code>\u3001<code>union</code>\u3001\u6570\u7ec4\uff09\u3002<code>sizeof</code> \u7684\u7ed3\u679c\u7c7b\u578b\u662f <code>size_t</code>\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u5b9a\u4e49\u5728 <code>stddef.h</code> \u6216 <code>stdint.h</code> \u5934\u6587\u4ef6\u4e2d\u3002</li> </ul> <ul> <li> <p>c \u8bed\u8a00\u62a5\u9519\u7c7b\u578b</p> </li> <li> <p>\u8bed\u6cd5\u9519\u8bef\uff08Syntax Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u5728\u4ee3\u7801\u4e0d\u7b26\u5408 C \u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\u65f6\u3002\u4f8b\u5982\uff0c\u7f3a\u5c11\u5206\u53f7\u3001\u62ec\u53f7\u4e0d\u5339\u914d\u3001\u9519\u8bef\u7684\u5173\u952e\u5b57\u4f7f\u7528\u7b49\u3002</p> </li> <li> <p>\u8bed\u4e49\u9519\u8bef\uff08Semantic Errors\uff09\uff1a</p> </li> <li> <p>\u8bed\u4e49\u9519\u8bef\u662f\u6307\u4ee3\u7801\u5728\u8bed\u6cd5\u4e0a\u6b63\u786e\uff0c\u4f46\u5728\u903b\u8f91\u4e0a\u6216\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u6b63\u786e\u3002\u4f8b\u5982\uff0c\u8d4b\u503c\u4e00\u4e2a\u6574\u6570\u503c\u7ed9\u4e00\u4e2a\u6d6e\u70b9\u53d8\u91cf\u800c\u6ca1\u6709\u7c7b\u578b\u8f6c\u6362\u3001\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u3001\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u6570\u91cf\u4e0d\u5339\u914d\u7b49\u3002</p> </li> <li> <p>\u94fe\u63a5\u9519\u8bef\uff08Linker Errors\uff09\uff1a</p> </li> <li> <p>\u94fe\u63a5\u9519\u8bef\u53d1\u751f\u5728\u7f16\u8bd1\u9636\u6bb5\u4e4b\u540e\uff0c\u5f53\u7f16\u8bd1\u5668\u8bd5\u56fe\u5c06\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\uff08\u6e90\u6587\u4ef6\uff09\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u3002\u5e38\u89c1\u7684\u94fe\u63a5\u9519\u8bef\u5305\u62ec\u672a\u5b9a\u4e49\u7684\u5f15\u7528\uff08\u4f8b\u5982\uff0c\u58f0\u660e\u4e86\u51fd\u6570\u4f46\u6ca1\u6709\u5b9a\u4e49\uff09\u548c\u591a\u91cd\u5b9a\u4e49\uff08\u540c\u4e00\u4e2a\u51fd\u6570\u6216\u53d8\u91cf\u88ab\u5b9a\u4e49\u4e86\u591a\u6b21\uff09\u3002</p> </li> <li> <p>\u8fd0\u884c\u65f6\u9519\u8bef\uff08Runtime Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5230\u7684\uff0c\u800c\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u3002\u4f8b\u5982\uff0c\u6570\u7ec4\u8d8a\u754c\u3001\u9664\u4ee5\u96f6\u3001\u5185\u5b58\u6cc4\u6f0f\u3001\u91ce\u6307\u9488\u7b49\u3002</p> </li> <li> <p>\u8b66\u544a\uff08Warnings\uff09\uff1a</p> </li> <li> <p>\u7f16\u8bd1\u5668\u4e5f\u4f1a\u62a5\u544a\u8b66\u544a\uff0c\u8fd9\u4e9b\u901a\u5e38\u4e0d\u662f\u9519\u8bef\uff0c\u4f46\u5b83\u4eec\u6307\u51fa\u4e86\u53ef\u80fd\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u672a\u88ab\u4f7f\u7528\u7684\u53d8\u91cf\u3001\u53ef\u80fd\u7684\u9664\u4ee5\u96f6\u3001\u683c\u5f0f\u5b57\u7b26\u4e32\u8b66\u544a\u7b49\u3002\u867d\u7136\u8b66\u544a\u4e0d\u4f1a\u963b\u6b62\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u6307\u793a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u88ab\u8ba4\u771f\u5bf9\u5f85\u3002</p> </li> <li> <p>\u7f16\u8bd1\u5668\u7279\u5b9a\u7684\u9519\u8bef\uff08Compiler-Specific Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u662f\u7531\u7279\u5b9a\u7f16\u8bd1\u5668\u5b9e\u73b0\u7684\u7279\u5b9a\u9650\u5236\u6216\u7279\u6027\u5f15\u8d77\u7684\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u7f16\u8bd1\u5668\u53ef\u80fd\u5bf9\u4ee3\u7801\u4f18\u5316\u7ea7\u522b\u6709\u4e0d\u540c\u7684\u8981\u6c42\uff0c\u6216\u8005\u5bf9\u67d0\u4e9b\u7279\u6027\u7684\u652f\u6301\u4e0d\u540c\u3002</p> </li> <li> <p>\u9884\u5904\u7406\u5668\u9519\u8bef\uff08Preprocessor Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u4e0e\u9884\u5904\u7406\u6307\u4ee4\u6709\u5173\uff0c\u6bd4\u5982\u5b8f\u5b9a\u4e49\u9519\u8bef\u3001\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\u9519\u8bef\u7b49\u3002</p> </li> <li> <p>\u7c7b\u578b\u9519\u8bef\uff08Type Errors\uff09\uff1a</p> </li> <li> <p>\u8fd9\u4e9b\u9519\u8bef\u53d1\u751f\u5728\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u5c06\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5b57\u7b26\u578b\u53d8\u91cf\u800c\u6ca1\u6709\u9002\u5f53\u7684\u7c7b\u578b\u8f6c\u6362\u3002</p> </li> <li> <p>\u5185\u5b58\u5206\u914d\u9519\u8bef\uff08Memory Allocation Errors\uff09\uff1a</p> </li> <li>\u5728\u52a8\u6001\u5185\u5b58\u5206\u914d\u65f6\uff0c\u5982\u679c\u5185\u5b58\u4e0d\u8db3\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u5982 <code>malloc</code> \u6216 <code>calloc</code> \u8fd4\u56de <code>NULL</code>\u3002</li> </ul> <p></p> C<pre><code>for(num = 1; num &lt;= 100; num++){\n    s = 0;   //\u6b64\u5904\u5e94int t=num;\u5426\u5219num\u503c\u6539\u53d8\n    do{\n       s = s + num % 10;\n       num = num / 10;\n    }while(num != 0);\n    printf(\"%d\\n\", s);\n}\n</code></pre> <p></p> <ul> <li><code>ftell</code>:\u83b7\u53d6\u6587\u4ef6\u6d41\u5f53\u524d\u4f4d\u7f6e   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>ftell</code>\u51fd\u6570\u662f\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u6d41\u5f53\u524d\u4f4d\u7f6e\u7684\u51fd\u6570\u3002\u5b83\u5b9a\u4e49\u5728<code>&lt;stdio.h&gt;</code>\u5934\u6587\u4ef6\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u8fd4\u56de\u7ed9\u5b9a\u6d41\uff08\u7531<code>FILE*</code>\u7c7b\u578b\u7684\u6307\u9488\u6307\u5411\uff09\u7684\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\u7684\u503c\uff0c\u5373\u4ece\u6587\u4ef6\u5f00\u5934\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u91cf\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_6","title":"\u51fd\u6570\u539f\u578b","text":"<p><code>ftell</code>\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>long int ftell(FILE *stream);\n</code></pre> <p>\u5176\u4e2d\uff0c<code>stream</code>\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411<code>FILE</code>\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_7","title":"\u8fd4\u56de\u503c","text":"<ul> <li>\u5982\u679c\u8c03\u7528\u6210\u529f\uff0c<code>ftell</code>\u51fd\u6570\u8fd4\u56de\u4ece\u6587\u4ef6\u5f00\u5934\u7b97\u8d77\u7684\u5b57\u8282\u6570\u91cf\uff0c\u5373\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\u7684\u503c\u3002</li> <li>\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u51fd\u6570\u8fd4\u56de<code>-1L</code>\uff0c\u5e76\u4e14\u5168\u5c40\u53d8\u91cf<code>errno</code>\u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6b63\u503c\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_8","title":"\u4f7f\u7528\u573a\u666f","text":"<p><code>ftell</code>\u51fd\u6570\u5e38\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ol> <li>\u968f\u673a\u6587\u4ef6\u8bbf\u95ee\uff1a\u5728\u968f\u673a\u65b9\u5f0f\u5b58\u53d6\u6587\u4ef6\u65f6\uff0c\u4f7f\u7528<code>fseek</code>\u51fd\u6570\u6765\u56de\u79fb\u52a8\u6587\u4ef6\u6307\u9488\uff0c\u4e0d\u5bb9\u6613\u786e\u5b9a\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\uff0c\u901a\u8fc7\u8c03\u7528<code>ftell</code>\u51fd\u6570\u53ef\u4ee5\u786e\u5b9a\u6307\u9488\u4f4d\u7f6e\u3002</li> <li>\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\uff1a\u901a\u8fc7\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\uff08\u4f7f\u7528<code>fseek</code>\u51fd\u6570\uff09\uff0c\u7136\u540e\u4f7f\u7528<code>ftell</code>\u83b7\u53d6\u6587\u4ef6\u6307\u9488\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5934\u7684\u504f\u79fb\u503c\uff0c\u4ece\u800c\u5f97\u5230\u6587\u4ef6\u7684\u5927\u5c0f\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_9","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528<code>ftell</code>\u51fd\u6570\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE *fp;\n    long len;\n    fp = fopen(\"file.txt\", \"r\");\n    if(fp == NULL) {\n        perror(\"\u6253\u5f00\u6587\u4ef6\u9519\u8bef\");\n        return(-1);\n    }\n    fseek(fp, 0, SEEK_END);\n    len = ftell(fp);\n    fclose(fp);\n    printf(\"file.txt \u7684\u603b\u5927\u5c0f = %ld \u5b57\u8282\\n\", len);\n    return(0);\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u9996\u5148\u6253\u5f00\u540d\u4e3a<code>file.txt</code>\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\uff0c\u6700\u540e\u4f7f\u7528<code>ftell</code>\u51fd\u6570\u83b7\u53d6\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u5e76\u6253\u5370\u51fa\u6765\u3002</p> <ul> <li><code>feof</code>:\u68c0\u67e5\u6587\u4ef6\u6d41\u662f\u5426\u8fbe\u5230\u672b\u5c3e   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>feof</code>\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u6587\u4ef6\u6d41\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5f53\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c<code>feof</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u8bfb\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_10","title":"\u51fd\u6570\u539f\u578b","text":"<p><code>feof</code>\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>int feof(FILE *stream);\n</code></pre> <p>\u5176\u4e2d\uff0c<code>stream</code>\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411<code>FILE</code>\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_11","title":"\u8fd4\u56de\u503c","text":"<ul> <li>\u5982\u679c\u6587\u4ef6\u672b\u5c3e\u5c1a\u672a\u5230\u8fbe\uff0c<code>feof</code>\u51fd\u6570\u8fd4\u56de<code>0</code>\u3002</li> <li>\u5982\u679c\u6587\u4ef6\u672b\u5c3e\u5df2\u7ecf\u5230\u8fbe\u6216\u53d1\u751f\u4e86\u9519\u8bef\uff0c<code>feof</code>\u51fd\u6570\u8fd4\u56de\u975e\u96f6\u503c\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_12","title":"\u4f7f\u7528\u573a\u666f","text":"<p><code>feof</code>\u51fd\u6570\u5e38\u7528\u4e8e\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5b83\u901a\u5e38\u4e0e<code>fgetc</code>\u6216<code>fgets</code>\u7b49\u8bfb\u53d6\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u5728\u8bfb\u53d6\u64cd\u4f5c\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u65f6\u80fd\u591f\u6b63\u786e\u5904\u7406\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_13","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528<code>feof</code>\u51fd\u6570\u68c0\u67e5\u6587\u4ef6\u672b\u5c3e\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE *fp;\n    int c;\n    fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\");\n        return -1;\n    }\n\n    // \u8bfb\u53d6\u6587\u4ef6\u76f4\u5230\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\n    while ((c = fgetc(fp)) != EOF) {\n        putchar(c);\n    }\n\n    // \u68c0\u67e5\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\n    if (feof(fp)) {\n        printf(\"\u5df2\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\\n\");\n    }\n\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a<code>example.txt</code>\u7684\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528<code>fgetc</code>\u51fd\u6570\u9010\u4e2a\u5b57\u7b26\u5730\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002\u6bcf\u6b21\u8bfb\u53d6\u540e\uff0c\u90fd\u4f1a\u68c0\u67e5\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002\u5982\u679c<code>feof</code>\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u8868\u793a\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u76f8\u5e94\u7684\u6d88\u606f\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>feof</code>\u51fd\u6570\u53ea\u6709\u5728\u5c1d\u8bd5\u8bfb\u53d6\u64cd\u4f5c\u4e4b\u540e\u624d\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u975e\u96f6\u503c\uff0c\u56e0\u6b64\u5728\u8c03\u7528<code>feof</code>\u4e4b\u524d\u81f3\u5c11\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8bfb\u53d6\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5982\u679c\u8bfb\u53d6\u64cd\u4f5c\u7531\u4e8e\u5176\u4ed6\u539f\u56e0\uff08\u5982\u6587\u4ef6\u9519\u8bef\uff09\u5bfc\u81f4<code>EOF</code>\u88ab\u8bbe\u7f6e\uff0c<code>feof</code>\u4e5f\u4f1a\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u56e0\u6b64\u5728\u4f7f\u7528<code>feof</code>\u65f6\u9700\u8981\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_14","title":"\u4e00\u4e9b\u5173\u4e8e\u6307\u9488\u5360\u5185\u5b58\u51e0\u4f4d\u7684\u4e1c\u897f","text":"<ul> <li>CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf,\u5730\u5740\u603b\u7ebf\u548c\u63a7\u5236\u603b\u7ebf\u4e0e\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u4e0e\u64cd\u4f5c</li> <li>\u6570\u636e\u603b\u7ebf:\u6570\u636e\u603b\u7ebf\u7684\u5bbd\u5ea6\u51b3\u5b9a CPU \u5355\u6b21\u6570\u636e\u4f20\u8f93\u7684\u4f20\u9001\u91cf,\u5373\u7535\u8111\u7684\u4f4d\u6570</li> <li>\u63a7\u5236\u603b\u7ebf:\u51b3\u5b9a CPU \u5bf9\u5176\u4ed6\u63a7\u4ef6\u7684\u63a7\u5236\u80fd\u529b\u4ee5\u53ca\u63a7\u5236\u65b9\u5f0f</li> <li>\u5730\u5740\u603b\u7ebf:\u51b3\u5b9a CPU \u7684\u5bfb\u5740\u80fd\u529b,\u6216\u5bfb\u5740\u7684\u6700\u5927\u5185\u5b58\u5bb9\u91cf.</li> <li>\u82e5\u5730\u5740\u603b\u7ebf\u4e3a 32 \u4f4d,\u5219\u4e00\u6b21\u80fd\u5904\u7406\u7684\u4fe1\u606f\u4f4d 2^32 \u6761,\u63cf\u8ff0\u7684\u5730\u5740\u7a7a\u95f4\u662f 0x0000 0000~2^32-1,\u6b64\u65f6\u9700\u8981 32 \u4e2a 0 \u6216 1 \u7684\u7ec4\u5408\u627e\u5230\u5185\u5b58\u4e2d\u7684\u5730\u5740,\u5373 4 \u4e2a\u5b57\u8282\u7684\u5927\u5c0f</li> <li>\u6240\u4ee5,32 \u4f4d\u8ba1\u7b97\u673a\u4e2d,\u6307\u9488\u5360 4 \u4e2a\u5b57\u8282</li> <li>64 \u4f4d\u8ba1\u7b97\u673a\u4e2d,\u6307\u9488\u5360 8 \u4e2a\u5b57\u8282</li> </ul> <p>\u9898\u76ee \u77e5\u8bc6\u70b9</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_15","title":"\u7ec6\u8282","text":"<ul> <li>source file:\u6e90\u6587\u4ef6   type modifier:\u7c7b\u578b\u4fee\u9970\u7b26   recursive functions:\u9012\u5f52\u51fd\u6570   concise:\u7b80\u660e\u7684   singly linked list:\u5355\u94fe\u8868   doubly linked list:\u53cc\u5411\u94fe\u8868   demical:\u5341\u8fdb\u5236   character constant:\u5b57\u7b26\u5e38\u91cf   call functions in nest:\u5d4c\u5957\u8c03\u7528\u51fd\u6570   recursive-call:\u9012\u5f52\u8c03\u7528   prototype:\u539f\u578b   parameter:\u53c2\u6570   compound statement:\u590d\u5408\u8bed\u53e5   call sentence:\u8c03\u7528\u8bed\u53e5   be proportional to:\u548c...\u6210\u6b63\u6bd4   memory:\u5185\u5b58   randomly access:\u968f\u673a\u8bbf\u95ee   headerfile:\u5934\u6587\u4ef6   assignment statement:\u8d4b\u503c\u8bed\u53e5   rules of precedence:\u4f18\u5148\u7ea7\u6cd5\u5219   type cast:\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362   storage-class specifiers:\u5b58\u50a8\u7c7b\u578b\u8bf4\u660e\u7b26(\u5982 static,extern,auto,register)   declaration specifier:\u7c7b\u578b\u8bf4\u660e\u7b26(\u5982 int,char...)</li> <li><code>#include \"stdio.h\"</code>\u4e5f\u6b63\u786e</li> <li>C \u8bed\u8a00\u9884\u5904\u7406\u529f\u80fd\u5305\u62ec\u5b8f\u5b9a\u4e49,\u6587\u4ef6\u5305\u542b,\u6761\u4ef6\u7f16\u8bd1</li> <li>\u6587\u4ef6\u8bfb\u5199\u65f6,\u4f4d\u7f6e\u6307\u9488\u4e0d\u65ad\u6539\u53d8,\u6587\u4ef6\u6307\u9488\u4e0d\u53d8</li> <li>\u968f\u673a\u64cd\u4f5c\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6,\u4e8c\u8fdb\u5236\u6587\u4ef6\u7b49</li> <li>fseek \u53ef\u7528\u4e8e\u6587\u672c\u6587\u4ef6,\u4e5f\u53ef\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u6309\u6570\u636e\u7684\u7ec4\u7ec7\u5f62\u5f0f\u5212\u5206,\u53ef\u4ee5\u5206\u4e3a\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u51fd\u6570 fopen \u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u6b63\u786e\u683c\u5f0f\u6837\u4f8b:\"c:\\user\\text.txt\"</li> <li>0~1 \u7684\u6d6e\u70b9\u6570\u53ef\u5c06 0 \u7701\u7565\uff0c\u4f8b\u5982\uff1a0.18 \u548c.18 \u7b49\u4ef7,-0.18 \u548c-.18 \u7b49\u4ef7</li> <li><code>a=2;</code>\u5219'a'\u662f\u5b57\u7b26 a \u800c\u4e0d\u662f\u5b57\u7b26 2</li> <li><code>!a&gt;b</code>\u5148\u8ba1\u7b97<code>!a</code>,\u518d\u5224\u65ad<code>(!a)&gt;b</code></li> <li>s \u662f\u6307\u9488,s+1 \u5373\u5c06\u6307\u9488\u540e\u79fb\u4e00\u4f4d</li> <li>\u975e NULL \u7684\u6307\u9488\u903b\u8f91\u503c\u4e3a 1</li> <li><code>!0</code>\u4e3a 1,<code>!\u975e\u96f6\u6570</code>\u4e3a 0</li> <li><code>if (a-b) ...;</code>\u53ea\u8981 a!=b \u5373\u6267\u884c(\u975e\u96f6\u503c\u90fd\u6267\u884c)</li> <li>static \u53ef\u4ee5\u5e94\u7528\u4e8e\u6570,\u4e5f\u53ef\u5e94\u7528\u4e8e\u6570\u7ec4</li> <li>switch \u4e2d default \u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u4f4d\u7f6e,\u4e14\u5176\u4f5c\u7528\u76f8\u540c</li> <li><code>(int)\u6d6e\u70b9\u6570</code>:\u76f4\u63a5\u53bb\u6389\u5c0f\u6570\u90e8\u5206,\u4fdd\u7559\u6574\u6570\u90e8\u5206</li> <li><code>typedef struct stc {...} *p;</code>defines p as a pointer to struct stc</li> <li>It's illegal in C to initialize a member of struct when it's defined.   e.g. <code>struct a {int n=100};</code> is illegal.</li> <li>C \u8bed\u8a00\u4e2d true \u4e0d\u662f\u5173\u952e\u5b57</li> <li><code>a&lt;b?a:c&lt;d?c:d</code>\u7b49\u4ef7\u4e8e<code>( a &lt; b ) ? a : ( ( c &lt; d ) ? c : d )</code>,\u6ce8\u610f?\u548c:\u4ece\u91cc\u5230\u5916\u524d\u540e\u914d\u5bf9</li> <li>0123 \u8868\u793a\u516b\u8fdb\u5236,\u4e0d\u662f 123</li> <li>64 \u4f4d\u67b6\u6784\u4e2d,\u6240\u6709\u6307\u9488\u90fd\u662f 8 \u5b57\u8282</li> <li><code>unsigned short sht=0;sht--;</code>\u6267\u884c\u540e sht \u4e0b\u6ea2\u4e3a 65535</li> <li>p,q \u662f\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6307\u9488,<code>p-q</code>\u8f93\u51fa\u5728\u6570\u7ec4\u4e2d\u76f8\u5dee\u51e0\u4e2a\u5355\u4f4d,<code>(int)p-(int)q</code>\u8f93\u51fa\u5b9e\u9645\u76f8\u5dee\u51e0\u4e2a\u5b57\u7b26</li> <li><code>char s[2][3] = {\"ab\", \"cd\"}, *p=(char*)s</code>p \u4e3a\u6307\u5411 s[0] [0]\u7684\u6307\u9488,\u53ef\u4ee5\u4f9d\u6b21\u8bbf\u95ee s \u4e2d\u5143\u7d20</li> <li><code>*++p+2</code>:p -&gt; ++p -&gt; _++p -&gt; _++p+2</li> <li><code>m=a&gt;b</code>:m=(a&gt;b)</li> <li>\u6761\u4ef6\u5224\u65ad<code>str[i]!='\\0'</code>\u548c<code>str[i]</code>\u7b49\u4ef7</li> <li>\u5982\u679c\u5b57\u7b26\u6570\u7ec4\u4e2d\u6709\\ooo \u8868\u793a\u7684\u5b57\u7b26,\\ooo \u89c6\u4e3a\u5b57\u7b26\u800c\u4e0d\u5c06\\0 \u4f5c\u4e3a\u7ed3\u675f\u6807\u5fd7</li> <li>\u91ce\u6307\u9488(\u6ca1\u8d4b\u8fc7\u503c,\u4e0d\u77e5\u9053\u6307\u5411\u54ea\u91cc\u7684\u6307\u9488)\u4e0d\u80fd\u89e3\u5f15\u7528,\u4e0d\u80fd\u5199\u5165,\u53ea\u80fd\u5c06\u5b83\u6307\u5411\u67d0\u4e2a\u5730\u65b9</li> <li><code>char *s;scanf(\"%s\",s);</code>\u662f\u9519\u8bef\u7684,\u5e94\u8be5\u4f7f\u7528<code>char s[100]</code></li> <li>\u5982\u679c\u5b9a\u4e49\u65f6\u4e3a<code>char *s</code>,\u5e94\u540e\u7eed\u4f7f\u7528<code>malloc</code>,\u6216\u53e6\u5f00\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4<code>temp</code>\u7136\u540e<code>s=temp</code></li> <li><code>#ifndef</code>\u540e\u9762\u4e0d\u533a\u5206\u5927\u5c0f\u5199</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b,<code>DeQueue</code>\u8868\u793a\u961f\u9996\u51fa\u961f,<code>DeleteQueue</code>\u8868\u793a\u6e05\u7a7a\u961f\u5217.   \"\u961f\u5217\u53ef\u4ee5\u53cc\u7aef\u64cd\u4f5c\"\u6b63\u786e</li> <li>\u5d4c\u5957\u8c03\u7528\u51fd\u6570\u5b9e\u73b0\u76f8\u4f3c\u64cd\u4f5c(\u6bd4\u5982\u9012\u589e\u6392\u5e8f,\u9012\u51cf\u6392\u5e8f),\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u6307\u9488,e.g. <code>int (*cmd)(int a,int b)</code></li> <li>\u5b9a\u4e49\u51fd\u6570\u65f6\u4e0d\u58f0\u660e\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a\u8fd4\u56de int \u7684\u51fd\u6570</li> <li><code>#include &lt;math.h&gt;</code>\u540e\uff0c\u53ef\u4f7f\u7528 pow \u51fd\u6570\uff0c<code>pow(x,y)</code>(\u53ea\u8981 x^y \u6709\u5b9a\u4e49\u5373\u53ef,\u4e0d\u4e00\u5b9a\u5747\u4e3a\u6b63\u6574\u6570)</li> <li><code>printf</code>\u4e2d-\u8868\u793a\u5de6\u5bf9\u9f50,+\u8868\u793a\u663e\u793a\u6b63\u8d1f\u53f7,\u7a7a\u683c\u8868\u793a\u5982\u679c\u7b2c\u4e00\u4f4d\u4e0d\u662f\u6b63\u8d1f\u53f7\u5219\u52a0\u7a7a\u683c</li> <li>sizeof \u8f93\u51fa\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662f\u5143\u7d20\u4e2a\u6570</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_16","title":"\u9898\u76ee","text":"<p>RETURN TO THE TOP</p> <ul> <li>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _.</li> </ul> C<pre><code>int x = -1;\nprintf(\"%d\", (unsigned int)x);\n</code></pre> <p>unsigned int \u7684\u8f6c\u6362\u5e76\u4e0d\u4f1a\u6539\u53d8 x \u7684\u4e8c\u8fdb\u5236\u503c\uff08\u800c\u662f\u4ee5\u65e0\u7b26\u53f7\u7684\u65b9\u5f0f\u6765\u7406\u89e3\u8fd9\u6bb5\u6570\u636e\uff09\uff0c\u800c\u5bf9\u4e8e printf \u6765\u8bf4\uff0c\u5b83\u8981\u8f93\u51fa\u7684\u662f\u4e00\u4e2a %d\uff0c\u5373\u6709\u7b26\u53f7\u6570\uff08\u65e0\u7b26\u53f7\u7528 %u\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u8fd8\u662f\u4f1a\u5f53\u4f5c\u6709\u7b26\u53f7\u6574\u578b\u6765\u7406\u89e3\uff0c\u5373\u8f93\u51fa -1\u3002</p> <ul> <li>(C16A) For the code below:</li> </ul> C<pre><code>int a, b; char c;\nscanf(\"%d%c%d\",&amp;a,&amp;c,&amp;b);\n</code></pre> <p>If let a=1,b=2,c='+', the input C _ is NOT correct. A. 1+2&lt; ENTER &gt; B. &lt; BLANK &gt;&lt; ENTER &gt;1+&lt; ENTER &gt;2&lt; ENTER&gt; C. &lt; ENTER &gt;1&lt; ENTER &gt;+&lt; BLANK &gt;2&lt; ENTER &gt; D. &lt; BLANK &gt;&lt; BLANK &gt;1+&lt; BLANK &gt;&lt; BLANK &gt;2&lt; ENTER &gt; %d \u4f1a\u5ffd\u7565\u6570\u5b57\u5de6\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u3001\u6362\u884c\u7b49\uff09\uff0c\u800c %c \u4f1a\u7acb\u5373\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002</p> <ul> <li>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _.</li> </ul> C<pre><code>void func(int a[5]) {\n    printf(\"%d\", sizeof(a));\n}\nint main() {\n    int a[5] = {0};\n    printf(\"%d\\n\", sizeof(a));\n    func(a);\n}\n</code></pre> <p>\u8fd9\u91cc\u9996\u5148\u8f93\u51fa\u6570\u7ec4 a \u5360\u7684\u5b57\u8282\u6570\uff0c\u4e5f\u5c31\u662f 4*5=20\u3002\u7136\u540e\u5c06 a \u4f20\u5165 func \u51fd\u6570\u540e\uff0ca \u9000\u5316\u4e3a\u4e86\u6307\u9488\uff08\u5373\u4f7f\u51fd\u6570\u524d\u9762\u91cc\u7c7b\u578b\u8fd8\u662f int[5]\uff09\uff0c\u5728 func \u51fd\u6570\u4e2d\u8ba1\u7b97 sizeof(a) \u7684\u8bdd\u8f93\u51fa\u7684\u5c31\u662f\u6307\u9488\u5360\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u503c\u662f\u4e0d\u4e00\u5b9a\u7684\uff0c\u5728 32 \u4f4d\u67b6\u6784\u4e2d\u662f 4\uff0c\u5728 64 \u4f4d\u67b6\u6784\u4e2d\u662f 8\u3002</p> <ul> <li> <p>For storage-class specifiers, which one below is NOT correct? ** C _**.   B. A static global variable is not accessible by other compile units.   C. A static function is accessible by other static functions in different compile units.</p> </li> <li> <p>B:\u8fd9\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684.\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff08static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff09\u53ea\u5728\u58f0\u660e\u5b83\u7684\u7f16\u8bd1\u5355\u5143\uff08\u6e90\u6587\u4ef6\uff09\u5185\u90e8\u53ef\u89c1\u3002\u5b83\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u8bbf\u95ee\u3002\u8fd9\u79cd\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6587\u4ef6\u4f5c\u7528\u57df\uff08file scope\uff09\uff0c\u5b83\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u6216\u53d8\u91cf\u76f4\u63a5\u5f15\u7528\u3002</p> </li> <li> <p>C:\u8fd9\u4e2a\u9009\u9879\u662f\u9519\u8bef\u7684\u3002\u9759\u6001\u51fd\u6570\uff08static \u4fee\u9970\u7684\u51fd\u6570\uff09\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u7f16\u8bd1\u5355\u5143\u5185\u53ef\u89c1\u3002\u9759\u6001\u51fd\u6570\u7684\u4f5c\u7528\u57df\u662f\u6587\u4ef6\u4f5c\u7528\u57df\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u80fd\u5728\u5b9a\u4e49\u5b83\u7684\u6e90\u6587\u4ef6\u4e2d\u88ab\u8c03\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u4e2d\u7684\u9759\u6001\u51fd\u6570\u6216\u5176\u4ed6\u51fd\u6570\u8bbf\u95ee\u3002</p> </li> <li> <p>The fllowing program will output _ 100 ___.</p> </li> </ul> C<pre><code>#include &lt;stdio.h&gt;\ntypedef void* (*H)(int a);\nvoid* h(int a)\n{\n   if(a) printf(\"%d\", a);\n   return h;\n}\nint main(void)\n{\n   ( (H) h(0) )(100);  //\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n   return 0;\n}\n</code></pre> <ul> <li> <p>Write down the declaration of a function pointer to a void procedure(\u8fc7\u7a0b) f with   two formal parameters: the first is an integer variable, the other is a pointer to an   array of 10 integers.   __ void (*f)(int,int(*)[10]); ___</p> </li> <li> <p>When input Hello,World&lt; ENTER&gt;, what\u2019s the result after executing the following   code fragment?</p> </li> </ul> C<pre><code>char *str;\nscanf(\u201c%s\u201d, str);\nprintf(\u201c%s\u201d, str);\n</code></pre> <p>__ the program may exit abnormally __</p> <ul> <li> <p>str \u4e3a\u91ce\u6307\u9488,\u4e0d\u80fd\u8d4b\u503c</p> </li> <li> <p>\u5224\u65ad:   A. The return type of a function shall be void or an object type other than array type.</p> </li> <li> <p>\u89e3\u91ca\uff1a\u6570\u7ec4\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\u6570\u7ec4\u3002\u4e0d\u8fc7\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u6765\u95f4\u63a5\u8fd4\u56de\u6570\u7ec4\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\u3002     B. Each parameter of a function has automatic storage duration.</p> </li> <li>\u89e3\u91ca\uff1a\u5728 C \u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u9ed8\u8ba4\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u671f\uff08Automatic Storage Duration\uff0c\u7b80\u79f0 ASL\uff09\u3002\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u53c2\u6570\u4f1a\u5728\u6808\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5e76\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u81ea\u52a8\u9500\u6bc1\u3002\u56e0\u6b64\uff0c\u51fd\u6570\u53c2\u6570\u7684\u5b58\u50a8\u671f\u662f \u81ea\u52a8\u7684\uff0c\u9664\u975e\u7279\u522b\u6307\u5b9a\u4e3a static\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\u3002     C. After all parameters have been assigned, the compound statement that constitutes the body of the function definition is executed.</li> <li> <p>\u89e3\u91ca\uff1a\u8fd9\u53e5\u8bdd\u63cf\u8ff0\u4e86\u51fd\u6570\u6267\u884c\u7684\u57fa\u672c\u6d41\u7a0b\u3002\u51fd\u6570\u7684\u53c2\u6570\u4f1a\u5728\u51fd\u6570\u4f53\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u88ab\u8d4b\u503c\uff0c\u5e76\u4e14\u5728\u6240\u6709\u53c2\u6570\u8d4b\u503c\u4e4b\u540e\uff0c\u51fd\u6570\u4f53\u7684\u590d\u5408\u8bed\u53e5\uff08\u51fd\u6570\u4f53\uff09\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u662f \u6b63\u786e\u7684\uff0c\u7b26\u5408 C \u8bed\u8a00\u51fd\u6570\u8c03\u7528\u7684\u5e38\u89c4\u6d41\u7a0b\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u8bed\u6cd5\u6b63\u786e\u7684\u662f _.   A. for ( ); B. do { } while ( ); C. while ( ) ; D. for ( ; ; ) ;</p> </li> <li> <p>while \u7684\u62ec\u53f7\u4e2d\u5fc5\u987b\u6709\u6761\u4ef6\u5224\u65ad,BC \u9519</p> </li> <li> <p>(C13A) In the following code fragments, item _C _ is correct.   A. int *p; scanf(\"%d\", &amp;p);   B. int *p; scanf(\"%d\", p);   C. int k, *p=&amp;k; scanf(\"%d\", p);   D. int k, *p; *p=&amp;k; scanf(\"%d\", p);</p> </li> <li> <p>A. \u8fd9\u91cc\u5b9e\u9645\u4e0a\u662f\u8bfb\u5165\u4e86\u6570\u636e\u5199\u5230\u4e86 p \u6307\u9488\u7684\u7a7a\u95f4\u4e0a\uff08\u5373\u901a\u8fc7\u8f93\u5165\u6765\u7ed9\u6307\u9488\u8d4b\u503c\uff09\uff0c\u662f\u9519\u8bef\u7684\u64cd\u4f5c\uff1b</p> </li> <li>B. \u8fd9\u91cc\u8bfb\u5165\u6570\u636e\u5199\u5230\u4e86 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u800c p \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u5199\u5165\u6570\u636e\uff0c\u662f\u9519\u8bef\u7684\uff1b</li> <li>C. \u8fd9\u91cc\u5c06 k \u7684\u5730\u5740\u8d4b\u503c\u7ed9\u4e86 p\uff0c\u6240\u4ee5\u8bfb\u5165\u4f1a\u5199\u5230 k \u4e2d\uff0c\u662f\u6b63\u786e\u7684\uff0c\u9009 C\uff1b</li> <li> <p>D. \u8fd9\u91cc *p=&amp;k \u4e00\u53e5\u5b9e\u9645\u4e0a\u662f\u5c06 k \u7684\u5730\u5740\u5199\u5165 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u540c\u7406\uff0cp \u662f\u91ce\u6307\u9488\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u662f\u9519\u8bef\u7684\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u662f\u5426\u5b58\u5728\u9519\u8bef\uff0c\u5982\u679c\u6709\u8bf7\u6307\u51fa\u54ea\u91cc\u6709\u95ee\u9898 _.</p> </li> </ul> C<pre><code>char *a = \"hello\";\nchar b[] = \"hello\";\na[0] = 'H';\nb[0] = 'H';\n</code></pre> <p>\u8fd9\u91cc\u6211\u4eec\u8981\u533a\u5206\u7684\u662f a \u548c b\u3002a \u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e86 \"hello\" \u7684\u5f00\u5934\uff0c\u800c\u8fd9\u4e2a \"hello\" \u5b58\u5728\u4e8e\u9759\u6001\u5b58\u50a8\u533a\u4e2d\uff0c\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5 a[0] = 'H' \u4f1a\u5728\u8fd0\u884c\u65f6\u4ea7\u751f\u9519\u8bef\uff08\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u8fd0\u884c\u4f1a\u62a5\u9519\uff09 \u800c b \u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b83\u81ea\u5e26\u4e86\u6808\u4e0a\u7a7a\u95f4\uff0c\u5728\u521d\u59cb\u5316\u8d4b\u503c\u7684\u65f6\u5019 \"hello\" \u4f1a\u88ab\u590d\u5236\u5230 b \u7684\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5 b[0] = 'H' \u662f\u5408\u6cd5\u7684\u3002</p> <ul> <li> <p>(C13A) Given: char format[] = \"No.%d%c\"; the statement printf(format, 3, *(\"xyz\"+2)); will print out ** No.3z _**.</p> </li> <li> <p>printf\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u7531\u5b57\u7b26\u6570\u7ec4\u76f4\u63a5\u4ee3\u66ff</p> </li> <li> <p>(C14A) The value of expression !*(\"2015-01-28\"+5) is ** 0 _**</p> </li> <li> <p>\u4e00\u5b9a\u8981\u533a\u5206\u6e05\u695a '0' \u548c '\\0'\uff0c'0'==48 \u800c '\\0'==0\uff0c\u6240\u4ee5 !'0' \u662f !48 \u5373 0</p> </li> <li> <p>\u5bf9\u4e8e\u51fd\u6570\u58f0\u660e void f(char p)\uff0c\u4ee5\u4e0b\u54ea\u4e2a var \u7684\u5b9a\u4e49\u4f1a\u4f7f f(var) \u8bed\u6cd5\u9519\u8bef **_.   A. char var[10] [10];   B. char var[10];   C. void *var = NULL;   D. char *v=NULL, *var=&amp;v;</p> </li> <li> <p>A. \u4e8c\u7ef4\u6570\u7ec4\u4e0d\u80fd\u9000\u5316\u4e3a\u4e8c\u7ea7\u6307\u9488\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u9519\u7684</p> </li> <li> <p>C. \u5728 C \u8bed\u8a00\u4e2d\uff0cvoid* \u8868\u793a\u300c\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u300d\uff0c\u800c\u8fd9\u4e2a\u300c\u4efb\u610f\u7c7b\u578b\u300d\u4e5f\u53ef\u4ee5\u662f char*\uff08\u5373\u6307\u5411 char \u7684\u6307\u9488\uff09\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u4ee3\u8868\u300c\u6307\u5411\u6307\u5411 char \u7684\u6307\u9488\u7684\u6307\u9488\u300d\uff08char**\uff09\uff0c\u6240\u4ee5\u662f\u5bf9\u7684</p> </li> <li> <p>(C13A) Given the declaration: int a[ 3 ] [ 3 ]={1,2,3,4,5,6,7,8,9};, the value of a[-1] [5] is _.</p> </li> </ul> <p>\u9996\u5148\u6765\u770b a[-1]\uff0c\u5373 (a-1)\uff0ca-1 \u4f1a\u4ee5\u4e09\u4e2a int \u4e3a\u5355\u4f4d\u5411\u5de6\u79fb\u52a8\uff0c\u5373 (a-1) \u662f\u4e00\u4e2a\u6307\u5411\u5982\u4e0b\u4f4d\u7f6e\u7684\u6307\u9488\uff1a</p> Text Only<pre><code>   0 0 0 1 2 3 4 5 6 7 8 9\n   ^\n   |\n*(a-1) = p\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5c06 a[-1] \u4e5f\u5c31\u662f *(a-1) \u89c6\u4e3a p\uff0c\u90a3\u6211\u4eec\u8981\u627e\u7684\u7ed3\u679c\u5c31\u662f p[5]\uff0c\u6b64\u65f6 p \u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\uff0c*(p+5) \u5c31\u76f8\u5f53\u4e8e\u627e\u5230\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u53f3\u4fa7\u7b2c 5 \u4e2a int \u7684\u503c\uff0c\u4e5f\u5c31\u662f 3\u3002</p> <ul> <li> <p>(C14A) Given the declaration: int a[3] [2]={1,2,3,4,5,6}; what is the value of expression (a[1]+1)[0]? 4 _.   <code>a[1]+1</code>\u4e3a 4 \u7684\u4f4d\u7f6e,\u6b64\u65f6\u76f8\u5f53\u4e8e\u4ece 4 \u5f00\u59cb\u7684\u6570\u7ec4,<code>(a[1]+1)[0]</code>\u5373\u4e3a\u5f53\u524d\u4f4d\u7f6e</p> </li> <li> <p>(C17A) The following code fragment will output ** ue _**.</p> </li> </ul> C<pre><code>char *week[]={\"Mon\", \"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"}, **pw=week;\nchar c1, c2;\nc1 = (*++pw)[1];\nc2 = *++pw[1];\nprintf(\"%c#%c#\", c1, c2);\n</code></pre> <ul> <li>\u9996\u5148 c1 = (*++pw)[1]\uff0c++pw \u4f7f pw \u6307\u5411\u4e86 week[1]\uff0c\u7136\u540e (*++pw) \u5c31\u662f week[1]\uff0c\u518d [1] \u5c31\u662f week[1] [1] \u4e5f\u5c31\u662f 'u'</li> <li> <p>\u7136\u540e c2 = *++pw[1]\uff0c\u8fd9\u91cc\u7684\u7406\u89e3\u65b9\u5f0f\u4e00\u5b9a\u662f\u5bf9 pw[1] \u8fdb\u884c ++\uff0cpw[1] \u6b64\u65f6\u662f week[2]\uff0c\u7136\u540e\u5c06\u5176\u81ea\u589e\u5f97\u5230\u6307\u5411 week[2] [1] \u7684\u6307\u9488\uff0c\u518d\u89e3\u5f15\u7528\u5f97\u5230 'e'</p> </li> <li> <p>(C15A/C16A) For the declarations: char s, str[10];, statement ** D _** is completely correct.   A. strcpy(s, \"hello\");   B. str=\"hello\"+1   C. s=&amp;(str+1)   D. s=str+1   \u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u4e00\u4e2a\u91ce\u6307\u9488\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u4f1a\u4e13\u95e8\u6709\u4e00\u4e2a\u90e8\u5206   A. \u5c06 <code>\"hello\"</code> \u62f7\u8d1d\u5230 s \u6307\u5411\u7684\u7a7a\u95f4\u3002\u4f46\u662f s \u6307\u5411\u4ec0\u4e48\u5462\uff1f\u4f60\u5e76\u4e0d\u6e05\u695a\uff0c\u4e5f\u5c31\u662f\u8bf4 s \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4f60\u4e0d\u6e05\u695a\u5b83\u6307\u5411\u54ea\u91cc\uff0c\u4e5f\u5c31\u81ea\u7136\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u4e2d\u5199\u5165\u6570\u636e   B. <code>str</code> \u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u540d\u4e0d\u80fd\u88ab\u8d4b\u503c\uff0c\u6240\u4ee5\u662f\u9519\u7684   C. <code>str+1</code> \u4e0d\u80fd\u88ab\u53d6\u5730\u5740\uff0c\u56e0\u4e3a\u8fd9\u662f\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u6570\uff0c\u6240\u4ee5\u662f\u9519\u7684   D. <code>str+1</code> \u8868\u793a\u7684\u5c31\u662f <code>str</code> \u6570\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 s\uff0c\u662f\u6b63\u786e\u7684</p> </li> <li> <p>In which of the following is p a pointer variable? _ C____.   A. int* *p(); B. int *p(); C. int (*p)[5]; D. int *p[6];</p> </li> <li> <p>\u7ffb\u8bd1:\u54ea\u4e2a p \u662f\u6307\u9488\u53d8\u91cf?</p> </li> <li>A:p \u662f\u51fd\u6570\u6307\u9488,\u6307\u5411\u8fd4\u56de int*\u7684\u51fd\u6570</li> <li>B:p \u662f\u51fd\u6570,\u8fd4\u56de int*</li> <li>C:p \u662f\u6307\u5411 5 \u4e2a int \u7684\u6570\u7ec4\u7684\u6307\u9488(\u76f8\u6bd4\u4e8e int p[5],\u8fd9\u91cc\u7684 p \u4e0d\u662f\u5e38\u503c\u6307\u9488)</li> <li> <p>D:p \u662f\u5305\u542b 6 \u4e2a\u6574\u578b\u6307\u9488\u7684\u6570\u7ec4</p> </li> <li> <p>\u5df2\u77e5<code>unsigned short  m=65539;</code> \u5219\u6267\u884c\u8bed\u53e5<code>printf(\"%d\", m);</code>\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__3____.</p> </li> <li> <p><code>unsigned short</code> \u7c7b\u578b\u901a\u5e38\u662f 16 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u53d6\u503c\u8303\u56f4\u662f <code>0</code> \u5230 <code>65535</code>\u3002</p> </li> <li> <p>\u7531\u4e8e <code>65539</code> \u8d85\u51fa\u4e86 <code>unsigned short</code> \u7c7b\u578b\u7684\u6700\u5927\u503c\uff08<code>65535</code>\uff09\uff0c\u6240\u4ee5\u8d4b\u503c <code>65539</code> \u4f1a\u5bfc\u81f4\u6570\u503c\u6ea2\u51fa\u3002\u5177\u4f53\u6ea2\u51fa\u7684\u65b9\u5f0f\u662f\uff1a\u5c06 <code>65539</code> \u5bf9 <code>65536</code> \u53d6\u6a21\uff0c\u5f97\u5230 <code>65539 % 65536 = 3</code>\u3002</p> </li> <li> <p>14.\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_z#yz#xyz#___\uff0e</p> </li> </ul> C<pre><code>char s[]=\"xyz\", *ps=s;\nwhile (*ps++);   ps--;\nfor(ps--; ps-s&gt;=0; ps--) printf(\"%s#\",ps);\n</code></pre> <ul> <li> <p>*p++\u540e p \u6307\u5411\\0 \u540e\u4e00\u4f4d</p> </li> <li> <p>\u5047\u8bbe\u5df2\u6709\u7ed3\u6784\u7c7b\u578b\u5b9a\u4e49\uff1astruct point { int a, int b }\uff1b\u8bf7\u7528 typedef \u628a\u5177\u6709 5 \u4e2a\u4e0a\u8ff0\u7ed3\u6784\u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\u7c7b\u578b\u91cd\u65b0\u547d\u540d\u4e3a RECT\uff0c\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a_typedef struct point RECT[5] ___;</p> </li> <li> <p>\u901a\u8fc7 <code>typedef</code> \u5173\u952e\u5b57\uff0c\u6211\u4eec\u4e3a <code>struct point[5]</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u522b\u540d <code>RECT</code>\u3002\u8fd9\u610f\u5473\u7740\uff0c<code>RECT</code> \u662f\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\uff0c\u8868\u793a\u4e00\u4e2a\u5305\u542b 5 \u4e2a <code>struct point</code> \u5143\u7d20\u7684\u6570\u7ec4\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4ee5\u4e0b\u4ee3\u7801\u6bb5\uff0c\u82e5\u8f93\u5165\u201c12e-0x34.56\u201d\uff08\u4e0d\u542b\u5f15\u53f7\uff09\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f_12.00x34__.</p> </li> </ul> C<pre><code>float f; char c; int d;\nscanf(\"%f%c%d\", &amp;f, &amp;c, &amp;d);\nprintf(\"%.2f%c%d\", f, c, d);\n</code></pre> <ul> <li> <ul> <li>12e-0 \u7b49\u4ef7\u4e8e 12e0 \u7b49\u4ef7\u4e8e 12</li> </ul> </li> <li>c \u4e3a x</li> <li> <p>d \u4e3a 34</p> </li> <li> <p>\u82e5\u6709\u4ee5\u4e0b\u7684\u5b9a\u4e49\u548c\u8bed\u53e5\uff0c\u5219\u7a0b\u5e8f\u6bb5\u8fd0\u884c\u7684\u7ed3\u679c\u662f_32_****.</p> </li> </ul> C<pre><code>struct wc{ int a;int *b;}\\*p;\nint x0[]={11,12}, x1[]={31,32};\nstruct wc x[2]={100,x0,300,x1};\np=x;\nprintf(\"%d \",*++(++p)-&gt;b);\n</code></pre> <ul> <li> <ul> <li>\u8fd0\u7b97\u987a\u5e8f\u603b\u7ed3\uff1a</li> </ul> </li> <li> <p><code>++p</code>\uff1a\u5c06\u6307\u9488 <code>p</code> \u4ece <code>x[0]</code> \u9012\u589e\u5230 <code>x[1]</code>\u3002</p> </li> <li><code>(++p)-&gt;b</code>\uff1a\u8bbf\u95ee <code>x[1].b</code>\uff0c\u5b83\u6307\u5411\u6570\u7ec4 <code>x1</code>\u3002</li> <li><code>++(++p)-&gt;b)</code>\uff1a\u9012\u589e <code>p-&gt;b</code> \u6307\u9488\uff0c\u6307\u5411 <code>x1[1]</code>\uff08\u503c\u4e3a <code>32</code>\uff09\u3002</li> <li> <p><code>*++(++p)-&gt;b</code>\uff1a\u89e3\u5f15\u7528 <code>p-&gt;b</code>\uff0c\u5373\u89e3\u5f15\u7528 <code>x1[1]</code>\uff0c\u5f97\u5230\u503c <code>32</code>\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f__first string____.</p> </li> </ul> C<pre><code>#include&lt;stdio.h&gt;\n#define F \"first %s\"\n#define D \"string\"\nvoid main( )\n{   char string[ ] = \"character\";\n printf( F, D );\n}\n</code></pre> <ul> <li>\u7a0b\u5e8f\u4e2d\u7684 <code>printf</code> \u8bed\u53e5\uff1a</li> </ul> C<pre><code>printf( F, D );\n</code></pre> <ul> <li><code>F</code> \u88ab\u5c55\u5f00\u4e3a <code>\"first %s\"</code>\uff0c\u6240\u4ee5\u5b9e\u9645\u8c03\u7528\u7684\u662f <code>printf(\"first %s\", D)</code>\u3002</li> <li><code>D</code> \u88ab\u5c55\u5f00\u4e3a <code>\"string\"</code>\uff0c\u56e0\u6b64 <code>printf</code> \u8bed\u53e5\u53d8\u4e3a <code>printf(\"first %s\", \"string\")</code>\u3002</li> <li> <p><code>D</code>\u672c\u8eab\u662f\u5b57\u7b26\u4e32,\u4e0d\u4f1a\u66ff\u6362\u6210<code>string</code></p> </li> <li> <p>\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u662f_7_.</p> </li> </ul> C<pre><code>int c=0,k;\nfor (k=1;k&lt;3;k++)\n   switch (k)\n   {\n      default: c+=k;\n      case 2: c++;\n      case 4: c+=2;\n   }\nprintf(\"%d\\n\",c);\n</code></pre> <ul> <li> <p>\u6ca1\u6709<code>break</code>,\u4f1a\u4ece\u5339\u914d\u7684\u4e00\u9879\u5f00\u59cb\u6267\u884c\u4e4b\u540e\u7684\u6240\u6709\u9879</p> </li> <li> <p>\u5404\u79cd\u7c7b\u578b\u8868\u793a\u7684\u6570\u7684\u8303\u56f4</p> </li> <li>\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u662f <code>-2^(n-1)</code> \u5230 <code>2^(n-1) - 1</code>\uff0c\u5176\u4e2d <code>n</code> \u662f\u4f4d\u6570\u3002</li> <li>\u65e0\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u662f <code>0</code> \u5230 <code>2^n - 1</code>\uff0c\u5176\u4e2d <code>n</code> \u662f\u4f4d\u6570\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#32-64","title":"\u5e38\u89c1\u7c7b\u578b\u53ca\u5176\u53d6\u503c\u8303\u56f4\uff08\u4ee5 32 \u4f4d\u548c 64 \u4f4d\u7cfb\u7edf\u4e3a\u4f8b\uff09\uff1a","text":"<ul> <li><code>char</code>: <code>signed char</code> \u8303\u56f4 <code>-128</code> \u5230 <code>127</code>\uff0c<code>unsigned char</code> \u8303\u56f4 <code>0</code> \u5230 <code>255</code></li> <li><code>short</code>: <code>signed short</code> \u8303\u56f4 <code>-32,768</code> \u5230 <code>32,767</code>\uff0c<code>unsigned short</code> \u8303\u56f4 <code>0</code> \u5230 <code>65,535</code></li> <li><code>int</code>: <code>signed int</code> \u8303\u56f4 <code>-2,147,483,648</code> \u5230 <code>2,147,483,647</code>\uff0c<code>unsigned int</code> \u8303\u56f4 <code>0</code> \u5230 <code>4,294,967,295</code></li> <li><code>long</code>: <code>signed long</code> \u8303\u56f4 <code>-2,147,483,648</code> \u5230 <code>2,147,483,647</code>\uff0c<code>unsigned long</code> \u8303\u56f4 <code>0</code> \u5230 <code>4,294,967,295</code>\uff0832 \u4f4d\uff09</li> <li><code>long long</code>: <code>signed long long</code> \u8303\u56f4 <code>-9,223,372,036,854,775,808</code> \u5230 <code>9,223,372,036,854,775,807</code>\uff0c<code>unsigned long long</code> \u8303\u56f4 <code>0</code> \u5230 <code>18,446,744,073,709,551,615</code></li> <li><code>float</code>: \u8303\u56f4 <code>1.5 \u00d7 10^\u221245</code> \u5230 <code>3.4 \u00d7 10^38</code></li> <li><code>double</code>: \u8303\u56f4 <code>5.0 \u00d7 10^\u2212324</code> \u5230 <code>1.7 \u00d7 10^308</code></li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_17","title":"\u77e5\u8bc6\u70b9","text":"<p>RETURN TO THE TOP</p> <ul> <li> <p>\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u5f62\u5f0f</p> </li> <li> <p>printf:<code>printf(\"%s\",s);</code></p> </li> <li>fprintf:<code>fprintf(fp,\"%s\",s);</code></li> <li> <p>sprintf:<code>sprintf(str,\"%s\",s);</code></p> </li> <li> <p>scanf:<code>scanf(\"%d\",&amp;a);</code></p> </li> <li>fscanf:<code>fscanf(fp,\"%d\",&amp;a);</code></li> <li> <p>sscanf:<code>sscanf(str,\"%d\",&amp;a);</code></p> </li> <li> <p>getc:<code>c=getc(fp);</code>\u6216<code>c=getc(stdin);</code></p> </li> <li>fgetc:<code>c=fgetc(fp);</code></li> <li> <p>getchar:<code>c=getchar();</code></p> </li> <li> <p>putc:<code>putc('A',fp);</code>\u6216<code>putc('A',stdout);</code></p> </li> <li>fputc:<code>fputc('A',fp);</code></li> <li> <p>putchar:<code>putchar('A');</code></p> </li> <li> <p>gets:\u4e0d\u4f7f\u7528</p> </li> <li> <p>fgets:<code>fgets(str,100,fp);</code>\u6216<code>fgets(str,100,stdin);</code> \u4fdd\u7559'\\n'</p> </li> <li> <p>puts:<code>puts(str);</code> \u81ea\u52a8\u6dfb\u52a0'\\n'</p> </li> <li>fputs:<code>fputs(str,fp);</code>\u6216<code>fputs(str,stdout);</code> \u4e0d\u6dfb\u52a0'\\n'</li> </ul> <p>\u8fd4\u56de\u503c:</p> \u51fd\u6570\u540d \u6b63\u5e38\u65f6\u8fd4\u56de\u503c \u9519\u8bef\u65f6\u8fd4\u56de\u503c <code>printf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>fprintf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>sprintf</code> \u8f93\u51fa\u7684\u5b57\u7b26\u6570 \u8d1f\u503c <code>scanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>fscanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>sscanf</code> \u626b\u63cf\u7684\u9879\u6570 <code>EOF</code> <code>getc</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>fgetc</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>getchar</code> \u8bfb\u53d6\u7684\u5b57\u7b26 <code>EOF</code> <code>putc</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>fputc</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>putchar</code> \u8f93\u51fa\u7684\u5b57\u7b26 <code>EOF</code> <code>gets</code> \u5b57\u7b26\u4e32\u6307\u9488 <code>NULL</code> <code>fgets</code> \u5b57\u7b26\u4e32\u6307\u9488 <code>NULL</code> <code>puts</code> \u975e\u8d1f\u503c <code>EOF</code> <code>fputs</code> \u975e\u8d1f\u503c <code>EOF</code> <ul> <li>\u5173\u4e8e<code>typedef</code>   \u5728 C \u8bed\u8a00\u4e2d\uff0c<code>typedef</code> \u7528\u6765\u4e3a\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u540d\u79f0\uff0c\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\u6240\u4ee5\uff0c<code>typedef</code> \u540e\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u540d\u79f0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>typedef</code> \u4e3a\u73b0\u6709\u7c7b\u578b\uff08\u5305\u62ec\u57fa\u7840\u6570\u636e\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u7b49\uff09\u91cd\u65b0\u547d\u540d\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#1","title":"1. \u4e3a\u57fa\u7840\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#2","title":"2. \u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#3","title":"3. \u4e3a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff1a","text":"C<pre><code>typedef int (*FunctionPointer)(int);  // \u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u522b\u540d 'FunctionPointer'\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u8fd4\u56de int \u7c7b\u578b\u5e76\u63a5\u53d7 int \u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\nFunctionPointer fp;                   // 'fp' \u73b0\u5728\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u7b26\u5408\u8fd9\u4e2a\u7c7b\u578b\u7684\u51fd\u6570\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#4","title":"4. \u76f4\u63a5\u4e3a\u6570\u7ec4\u7c7b\u578b\u6307\u5b9a\u522b\u540d\uff1a","text":"C<pre><code>typedef int Array[10];  // \u4e3a 'int[10]' \u6570\u7ec4\u7c7b\u578b\u5b9a\u4e49\u522b\u540d 'Array'\nArray arr;              // 'arr' \u5c31\u662f\u4e00\u4e2a\u5305\u542b 10 \u4e2a int \u7684\u6570\u7ec4\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#5","title":"5. \u76f4\u63a5\u4e3a\u6307\u9488\u7c7b\u578b\u6307\u5b9a\u522b\u540d\uff1a","text":"C<pre><code>typedef int* IntPointer;  // \u4e3a 'int*' \u6307\u9488\u7c7b\u578b\u5b9a\u4e49\u522b\u540d 'IntPointer'\nIntPointer ptr;           // 'ptr' \u73b0\u5728\u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\n</code></pre> <ul> <li>\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217</li> <li><code>\\ooo</code></li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_18","title":"\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u7684\u89c4\u5219\uff1a","text":"<ul> <li>\u516b\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u4ee5\u53cd\u659c\u6760\uff08<code>\\</code>\uff09\u5f00\u59cb\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u6216\u4e24\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u3002</li> <li>\u6bcf\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u53ea\u80fd\u662f <code>0</code> \u5230 <code>7</code> \u4e4b\u95f4\u7684\u6570\u5b57\u3002</li> <li> <p>\u516b\u8fdb\u5236\u6570\u5b57\u6700\u591a\u53ef\u4ee5\u6709\u4e09\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff08\u5373 8 \u4f4d\uff09\u3002\u56e0\u6b64\uff0c\u6700\u591a\u53ef\u4ee5\u8868\u793a\u7684\u503c\u662f <code>\\377</code>\uff0c\u5373 255\uff08\u5341\u8fdb\u5236\uff09\u3002</p> </li> <li> <p>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217</p> </li> <li><code>\\xhh</code>   \u5176\u4e2d <code>hh</code> \u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\uff08\u53ef\u4ee5\u662f 0-9 \u6216 A-F\uff09\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u7801\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_19","title":"\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u7684\u89c4\u5219\uff1a","text":"<ul> <li>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u4ee5 <code>\\x</code> \u5f00\u5934\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6216\u591a\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u3002</li> <li>\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u662f <code>0</code> \u5230 <code>9</code> \u6216 <code>A</code> \u5230 <code>F</code> \u4e4b\u95f4\u7684\u5b57\u7b26\u3002</li> <li>\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u6700\u591a\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff08\u5373 8 \u4f4d\uff09\uff0c\u6240\u4ee5\u5b83\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece <code>\\x00</code> \u5230 <code>\\xFF</code>\uff08\u5373 0 \u5230 255\uff09\u3002</li> </ul> C<pre><code>typedef struct s {\n    ...\n} new ; //\u6709typedef\u65f6new\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b,\u6ca1\u6709typedef\u65f6new\u4e3a\u7ed3\u6784\u4f53\u53d8\u91cf\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#union","title":"union","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nunion Data {\n    int i;\n    float f;\n    char str[4];\n};\n\nint main() {\n    union Data data;\n\n    // \u4f7f\u7528\u8054\u5408\u4f53\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\n    data.i = 1234;\n    printf(\"int: %d\\n\", data.i);  //1234\n    printf(\"float: %f\\n\", data.f);  //\u6574\u578b\u7684\u4e8c\u8fdb\u5236\u5bf9\u6d6e\u70b9\u6570\u800c\u8a00\u6ca1\u6709\u610f\u4e49,\u8f93\u51fa\u968f\u673a\u6d6e\u70b9\u6570\n    printf(\"str: %s\\n\", data.str);  //1234\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0d\u5bf9\u5e94ASCII\u7801,\u8f93\u51fa\u968f\u673a\u5b57\u7b26\u4e32\n\n    // \u8054\u5408\u4f53\u7684\u5185\u5b58\u5171\u4eab\u7279\u6027\n    data.f = 3.14f;\n    printf(\"float: %f\\n\", data.f);\n    printf(\"int: %d\\n\", data.i);\n    printf(\"str: %s\\n\", data.str);\n\n    // \u4f4d\u5b57\u6bb5\u64cd\u4f5c\n    data.i = 0;\n    data.str[0] = 0xAB; // \u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u5b57\u8282\n    printf(\"int: %d\\n\", data.i); // \u8f93\u51fa\u6574\u578b\u503c\uff0c\u89c2\u5bdf\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u53d8\u5316\n\n    return 0;\n}\n</code></pre> <ul> <li>\u6c47\u7f16\u4ee3\u7801</li> <li> <p>\u6c47\u7f16\u4ee3\u7801\u662f\u4e00\u79cd\u4f4e\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5458\u7528\u63a5\u8fd1\u673a\u5668\u6307\u4ee4\u7684\u65b9\u5f0f\u6765\u7f16\u5199\u7a0b\u5e8f\uff0c\u76f4\u63a5\u63a7\u5236\u786c\u4ef6\u8d44\u6e90\u3002\u6bcf\u6761\u6c47\u7f16\u6307\u4ee4\u901a\u5e38\u5bf9\u5e94\u4e8e CPU \u7684\u4e00\u6761\u673a\u5668\u6307\u4ee4\uff0c\u5177\u6709\u9ad8\u6548\u7387\u548c\u5e73\u53f0\u4f9d\u8d56\u6027\uff0c\u4f46\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u8f83\u5dee\u3002</p> </li> <li> <p>IDE</p> </li> <li> <p>IDE \u662f\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff09\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u79cd\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7f16\u5199\u3001\u8c03\u8bd5\u548c\u6d4b\u8bd5\u4ee3\u7801\u7684\u7efc\u5408\u6027\u5de5\u5177\u3002IDE \u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u529f\u80fd\uff1a</p> </li> <li> <p>\u4ee3\u7801\u7f16\u8f91\u5668\uff1a\u63d0\u4f9b\u8bed\u6cd5\u9ad8\u4eae\u3001\u4ee3\u7801\u8865\u5168\u3001\u4ee3\u7801\u683c\u5f0f\u5316\u7b49\u7f16\u8f91\u529f\u80fd\u3002</p> </li> <li>\u7f16\u8bd1\u5668\u6216\u89e3\u91ca\u5668\uff1a\u5c06\u7f16\u5199\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002</li> <li>\u8c03\u8bd5\u5668\uff1a\u5e2e\u52a9\u5f00\u53d1\u8005\u67e5\u627e\u548c\u4fee\u590d\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u3002</li> <li>\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff1a\u7ba1\u7406\u9879\u76ee\u6587\u4ef6\u548c\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u7248\u672c\u63a7\u5236\uff1a\u96c6\u6210 Git \u7b49\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u65b9\u4fbf\u4ee3\u7801\u7684\u7248\u672c\u7ba1\u7406\u548c\u56e2\u961f\u534f\u4f5c\u3002</li> <li>\u6570\u636e\u5e93\u7ba1\u7406\uff1a\u4e00\u4e9b IDE \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u548c\u7ba1\u7406\u529f\u80fd\u3002</li> <li>\u7528\u6237\u754c\u9762\u8bbe\u8ba1\uff1a\u5bf9\u4e8e\u56fe\u5f62\u754c\u9762\u5e94\u7528\u7a0b\u5e8f\uff0cIDE \u53ef\u80fd\u5305\u542b\u754c\u9762\u8bbe\u8ba1\u5de5\u5177\u3002</li> <li>\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff1a\u68c0\u67e5\u4ee3\u7801\u8d28\u91cf\u548c\u6f5c\u5728\u7684\u9519\u8bef\u3002</li> <li> <p>\u63d2\u4ef6\u548c\u6269\u5c55\uff1a\u8bb8\u591a IDE \u652f\u6301\u63d2\u4ef6\uff0c\u4ee5\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002</p> </li> <li> <p>argc \u600e\u4e48\u8ba1\u6570   <code>argc</code> \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\u3002\u5b83\u7531\u64cd\u4f5c\u7cfb\u7edf\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u8bbe\u7f6e\uff0c\u5e76\u4f20\u9012\u7ed9\u7a0b\u5e8f\u3002<code>argc</code> \u8ba1\u6570\u7684\u662f\uff1a</p> </li> <li> <p>\u7a0b\u5e8f\u540d\uff08<code>argv[0]</code>\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002</p> </li> <li>\u901a\u8fc7\u547d\u4ee4\u884c\u8f93\u5165\u7684\u53c2\u6570\uff0c\u6bcf\u4e2a\u53c2\u6570\u7528\u7a7a\u683c\u5206\u9694\u3002\u6bcf\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u5355\u8bcd\u90fd\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_20","title":"\u5177\u4f53\u8ba1\u6570\u89c4\u5219\uff1a","text":"<ul> <li><code>argc</code> \u7684\u503c\u662f\u53c2\u6570\u4e2a\u6570\uff0c\u5305\u542b\u7a0b\u5e8f\u540d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>argc</code> \u7684\u503c\u603b\u662f\u81f3\u5c11\u4e3a 1\uff0c\u56e0\u4e3a <code>argv[0]</code> \u5b58\u50a8\u4e86\u7a0b\u5e8f\u7684\u540d\u79f0\u3002</li> <li>\u5982\u679c\u547d\u4ee4\u884c\u6ca1\u6709\u989d\u5916\u7684\u53c2\u6570\uff0c<code>argc</code> \u4e3a 1\uff0c\u4ec5\u5305\u542b\u7a0b\u5e8f\u540d\u3002</li> <li>\u5982\u679c\u547d\u4ee4\u884c\u6709\u591a\u4e2a\u53c2\u6570\uff0c<code>argc</code> \u4f1a\u968f\u7740\u989d\u5916\u7684\u53c2\u6570\u589e\u52a0\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_21","title":"\u4f8b\u5b50\uff1a","text":"<ol> <li>\u7b80\u5355\u547d\u4ee4\u884c\u8f93\u5165\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram\n</code></pre> <p><code>argc = 1</code>\uff0c\u53ea\u6709\u7a0b\u5e8f\u540d <code>./myprogram</code>\u3002</p> <ol> <li>\u547d\u4ee4\u884c\u6709\u4e00\u4e2a\u53c2\u6570\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram hello\n</code></pre> <p><code>argc = 2</code>\uff0c<code>argv[0] = \"./myprogram\"</code>\uff0c<code>argv[1] = \"hello\"</code>\u3002</p> <ol> <li>\u547d\u4ee4\u884c\u6709\u591a\u4e2a\u53c2\u6570\uff1a    \u8f93\u5165\u547d\u4ee4\uff1a</li> </ol> Bash<pre><code>$ ./myprogram hello world 123\n</code></pre> <p><code>argc = 4</code>\uff0c<code>argv[0] = \"./myprogram\"</code>, <code>argv[1] = \"hello\"</code>, <code>argv[2] = \"world\"</code>, <code>argv[3] = \"123\"</code>\u3002</p> <ol> <li>\u5e26\u7a7a\u683c\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1a    \u5982\u679c\u53c2\u6570\u672c\u8eab\u5305\u542b\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f15\u53f7\u5c06\u5176\u5305\u56f4\uff0c\u547d\u4ee4\u884c\u53ea\u4f1a\u5c06\u6574\u4e2a\u5f15\u53f7\u5185\u7684\u5185\u5bb9\u5f53\u4f5c\u4e00\u4e2a\u53c2\u6570\u3002\u6bd4\u5982\uff1a    Bash<pre><code>$ ./myprogram \"hello world\"\n</code></pre> <code>argc = 2</code>\uff0c<code>argv[0] = \"./myprogram\"</code>, <code>argv[1] = \"hello world\"</code>\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#argc-argv","title":"<code>argc</code> \u548c <code>argv</code> \u4f8b\u5b50\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[]) {\n    printf(\"argc = %d\\n\", argc); // \u8f93\u51fa\u53c2\u6570\u4e2a\u6570\n\n    // \u6253\u5370\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"argv[%d] = %s\\n\", i, argv[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_22","title":"\u8fd0\u884c\u7ed3\u679c\uff1a","text":"<p>\u5047\u8bbe\u8fd0\u884c\u547d\u4ee4\uff1a</p> Bash<pre><code>$ ./myprogram how are you\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>argc = 4\nargv[0] = ./myprogram\nargv[1] = how\nargv[2] = are\nargv[3] = you\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_23","title":"\u603b\u7ed3\uff1a","text":"<ul> <li><code>argc</code> \u8ba1\u6570\u7684\u662f\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u5305\u542b\u7a0b\u5e8f\u540d\u3002</li> <li>\u6bcf\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u7684\u90e8\u5206\u90fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_24","title":"\u6587\u4ef6\u3001\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<ul> <li>Q&amp;A</li> <li>\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u4ee3\u7801</li> <li>fopen</li> <li>fclose</li> <li>fscanf</li> <li>fprintf</li> <li>fgetc</li> <li>fputc</li> <li>fread</li> <li>fwrite</li> <li>fseek</li> <li>feof</li> <li>linux \u6587\u4ef6\u8f93\u5165\u8f93\u51fa</li> <li>cat</li> </ul> <p> 1.\u6587\u4ef6\u6307\u9488\u548c\u4f4d\u7f6e\u6307\u9488\u662f\u4ec0\u4e48\uff1f \u6587\u4ef6\u6307\u9488\u548c\u4f4d\u7f6e\u6307\u9488\u662f\u6587\u4ef6\u64cd\u4f5c\u4e2d\u5e38\u7528\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u5728 C \u8bed\u8a00\u7b49\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5c24\u5176\u91cd\u8981\u3002 \u6587\u4ef6\u6307\u9488\uff1a \u6587\u4ef6\u6307\u9488\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff08\u5728 C \u8bed\u8a00\u4e2d\u901a\u5e38\u4e3a<code>FILE*</code>\u7c7b\u578b\uff09\uff0c\u5b83\u7528\u4e8e\u5728\u7a0b\u5e8f\u4e2d\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u3002\u5f53\u4f60\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6307\u9488\u6765\u8fdb\u884c\u8bfb\u3001\u5199\u3001\u5173\u95ed\u7b49\u64cd\u4f5c\u3002\u6587\u4ef6\u6307\u9488\u76f8\u5f53\u4e8e\u6587\u4ef6\u7684\u201c\u628a\u624b\u201d\uff0c\u901a\u8fc7\u5b83\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6\u7684\u5185\u5bb9\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 C \u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528<code>fopen</code>\u51fd\u6570\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e76\u83b7\u53d6\u5176\u6587\u4ef6\u6307\u9488\uff1a</p> C<pre><code>FILE *fp = fopen(\"example.txt\", \"r\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\nif (fp != NULL) {\n    // \u4f7f\u7528fp\u8fdb\u884c\u6587\u4ef6\u64cd\u4f5c\n    fclose(fp); // \u64cd\u4f5c\u5b8c\u6210\u540e\u5173\u95ed\u6587\u4ef6\n}\n</code></pre> <p>\u4f4d\u7f6e\u6307\u9488\uff1a \u4f4d\u7f6e\u6307\u9488\uff08\u6216\u79f0\u4e3a\u6587\u4ef6\u4f4d\u7f6e\u6307\u793a\u5668\uff09\u662f\u4e00\u4e2a\u5185\u90e8\u6307\u9488\uff0c\u5b83\u6307\u793a\u5f53\u524d\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u3002\u5f53\u4f60\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\u65f6\uff0c\u4f4d\u7f6e\u6307\u9488\u4f1a\u6839\u636e\u8bfb\u53d6\u6216\u5199\u5165\u7684\u6570\u636e\u91cf\u81ea\u52a8\u79fb\u52a8\u3002\u4f4d\u7f6e\u6307\u9488\u5bf9\u4e8e\u968f\u673a\u8bbf\u95ee\u6587\u4ef6\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7a0b\u5e8f\u8df3\u8f6c\u5230\u6587\u4ef6\u7684\u4efb\u610f\u4f4d\u7f6e\u3002 \u5728 C \u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u64cd\u4f5c\u4f4d\u7f6e\u6307\u9488\uff1a</p> <ul> <li><code>fseek()</code>\uff1a\u7528\u4e8e\u5b9a\u4f4d\u6587\u4ef6\u6307\u9488\u5230\u6587\u4ef6\u4e2d\u7684\u6307\u5b9a\u4f4d\u7f6e\u3002</li> <li><code>ftell()</code>\uff1a\u8fd4\u56de\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</li> <li><code>rewind()</code>\uff1a\u5c06\u4f4d\u7f6e\u6307\u9488\u91cd\u7f6e\u5230\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002   \u4f8b\u5982\uff1a</li> </ul> C<pre><code>FILE *fp = fopen(\"example.txt\", \"r\");\nif (fp != NULL) {\n    fseek(fp, 10, SEEK_SET); // \u5c06\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u7684\u7b2c10\u4e2a\u5b57\u8282\n    long pos = ftell(fp); // \u83b7\u53d6\u5f53\u524d\u4f4d\u7f6e\u6307\u9488\u7684\u503c\n    printf(\"Current position in file: %ld\\n\", pos);\n    fclose(fp);\n}\n</code></pre> <p>\u603b\u7ed3\u6765\u8bf4\uff0c\u6587\u4ef6\u6307\u9488\u662f\u7a0b\u5e8f\u64cd\u4f5c\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u800c\u4f4d\u7f6e\u6307\u9488\u7528\u4e8e\u5728\u6587\u4ef6\u5185\u90e8\u8fdb\u884c\u5b9a\u4f4d\u3002\u4e24\u8005\u5728\u6587\u4ef6\u64cd\u4f5c\u4e2d\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002</p> <p>2.\u968f\u673a\u64cd\u4f5c\u53ea\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6\u5417\uff1f</p> <p>\u4e0d\u662f\u7684\uff0c\u968f\u673a\u64cd\u4f5c\u4e0d\u4ec5\u9002\u7528\u4e8e\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u4e5f\u9002\u7528\u4e8e\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\u4e8c\u8fdb\u5236\u6587\u4ef6\u5305\u542b\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u662f\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u4ee3\u7801\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u89c6\u9891\u6216\u5176\u4ed6\u590d\u6742\u7684\u5bf9\u8c61\u3002\u968f\u673a\u64cd\u4f5c\u5728\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\u975e\u5e38\u5e38\u89c1\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u6587\u4ef6\u4e2d\u7684\u7279\u5b9a\u5b57\u8282\u6216\u6570\u636e\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u5e93\u6587\u4ef6\uff1a\u6570\u636e\u5e93\u6587\u4ef6\u901a\u5e38\u8bbe\u8ba1\u4e3a\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u5feb\u901f\u68c0\u7d22\u548c\u66f4\u65b0\u8bb0\u5f55\u3002\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08DBMS\uff09\u5229\u7528\u7d22\u5f15\u548c\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u968f\u673a\u8bbf\u95ee\u64cd\u4f5c\u3002</li> <li>\u65e5\u5fd7\u6587\u4ef6\uff1a\u867d\u7136\u65e5\u5fd7\u6587\u4ef6\u901a\u5e38\u662f\u987a\u5e8f\u5199\u5165\u7684\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u4ee5\u652f\u6301\u968f\u673a\u8bfb\u53d6\uff0c\u4ee5\u4fbf\u5206\u6790\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u4e8b\u4ef6\u3002</li> <li>\u914d\u7f6e\u6587\u4ef6\uff1a\u914d\u7f6e\u6587\u4ef6\u901a\u5e38\u4ee5\u6587\u672c\u5f62\u5f0f\u5b58\u50a8\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u4ee5\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\u3002\u968f\u673a\u64cd\u4f5c\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u8bfb\u53d6\u7279\u5b9a\u7684\u914d\u7f6e\u9879\u3002</li> <li> <p>\u7d22\u5f15\u6587\u4ef6\uff1a\u7d22\u5f15\u6587\u4ef6\u5305\u542b\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u5176\u4ed6\u6570\u636e\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5b83\u4eec\u4f9d\u8d56\u4e8e\u968f\u673a\u8bbf\u95ee\u6765\u9ad8\u6548\u5730\u5de5\u4f5c\u3002    \u968f\u673a\u64cd\u4f5c\u7684\u5173\u952e\u5728\u4e8e\u6570\u636e\u7684\u5b58\u50a8\u65b9\u5f0f\u662f\u5426\u652f\u6301\u5feb\u901f\u5b9a\u4f4d\u5230\u7279\u5b9a\u4f4d\u7f6e\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u652f\u6301\u968f\u673a\u64cd\u4f5c\u7684\u5b58\u50a8\u4ecb\u8d28\u548c\u6570\u636e\u7ed3\u6784\uff1a</p> </li> <li> <p>\u786c\u76d8\u9a71\u52a8\u5668\uff08HDD\uff09\u548c\u56fa\u6001\u9a71\u52a8\u5668\uff08SSD\uff09\uff1a\u8fd9\u4e9b\u5b58\u50a8\u8bbe\u5907\u5141\u8bb8\u968f\u673a\u8bfb\u5199\u64cd\u4f5c\u3002</p> </li> <li>\u6570\u7ec4\uff1a\u5728\u5185\u5b58\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\u4efb\u4f55\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</li> <li>\u54c8\u5e0c\u8868\uff1a\u54c8\u5e0c\u8868\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u63d0\u4f9b\u5feb\u901f\u7684\u968f\u673a\u8bbf\u95ee\u80fd\u529b\u3002   \u603b\u7684\u6765\u8bf4\uff0c\u53ea\u8981\u6587\u4ef6\u683c\u5f0f\u548c\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u5141\u8bb8\uff0c\u968f\u673a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5e94\u7528\u4e8e\u591a\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6587\u672c\u6587\u4ef6\u3002</li> </ol> <p>3.\"a\"\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u540e\uff0c\u6587\u4ef6\u6307\u9488\u6307\u5411\u54ea\u91cc\uff1f \u5f53\u4f7f\u7528 \u201ca\u201d \u6a21\u5f0f\uff08\u8ffd\u52a0\u6a21\u5f0f\uff09\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u6307\u9488\u4f1a\u6307\u5411\u6587\u4ef6\u7684\u672b\u5c3e\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u4efb\u4f55\u5199\u5165\u64cd\u4f5c\u90fd\u4f1a\u5728\u6587\u4ef6\u7684\u73b0\u6709\u5185\u5bb9\u4e4b\u540e\u6dfb\u52a0\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u8986\u76d6\u73b0\u6709\u5185\u5bb9\u3002</p> <p>4.\u6587\u4ef6\u7684\u8bfb\u51fd\u6570\u5c06\u8bfb\u5165\u7684\u4fe1\u606f\u5b58\u653e\u5728\u54ea\u91cc\uff1f \u5728 C \u8bed\u8a00\u4e2d\uff0c\u6587\u4ef6\u7684\u8bfb\u51fd\u6570\uff08\u5982 <code>fread</code>\u3001<code>fgets</code>\u3001<code>fgetc</code> \u7b49\uff09\u4f1a\u5c06\u8bfb\u53d6\u7684\u4fe1\u606f\u5b58\u653e\u5728\u4f60\u6307\u5b9a\u7684\u7f13\u51b2\u533a\uff08buffer\uff09\u4e2d\u3002\u8fd9\u4e2a\u7f13\u51b2\u533a\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8\u91cf\u3001\u4e00\u4e2a\u6570\u7ec4\u6216\u8005\u4efb\u4f55\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u8981\u5b83\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u8bfb\u53d6\u7684\u6570\u636e\u3002 \u7f13\u51b2\u533a\u662f\u5185\u5b58\u5417\uff1f \u662f\u7684\uff0c\u7f13\u51b2\u533a\u662f\u5185\u5b58\u4e2d\u9884\u7559\u7684\u4e00\u5757\u533a\u57df\uff0c\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u6570\u636e\u3002\u5728\u6587\u4ef6\u64cd\u4f5c\u4e2d\uff0c\u7f13\u51b2\u533a\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u6570\u636e\u6216\u8005\u5373\u5c06\u5199\u5165\u6587\u4ef6\u7684\u6570\u636e\u3002 \u7f13\u51b2\u533a\u7684\u4f7f\u7528\u6709\u51e0\u4e2a\u76ee\u7684\uff1a</p> <ol> <li>\u51cf\u5c11\u78c1\u76d8 I/O \u64cd\u4f5c\u6b21\u6570\uff1a\u76f4\u63a5\u5bf9\u78c1\u76d8\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u662f\u975e\u5e38\u8017\u65f6\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u7f13\u51b2\u533a\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u8bfb\u53d6\u6216\u5199\u5165\u66f4\u591a\u7684\u6570\u636e\uff0c\u51cf\u5c11\u5bf9\u78c1\u76d8\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002</li> <li>\u6570\u636e\u6682\u5b58\uff1a\u5f53\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u91cf\u5f88\u5927\u65f6\uff0c\u7f13\u51b2\u533a\u53ef\u4ee5\u4f5c\u4e3a\u6570\u636e\u7684\u4e34\u65f6\u5b58\u50a8\u5730\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5206\u6279\u5904\u7406\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u6027\u5904\u7406\u5168\u90e8\u6570\u636e\u3002</li> <li> <p>\u6570\u636e\u8f6c\u6362\uff1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u8fd8\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u539f\u59cb\u4e8c\u8fdb\u5236\u6570\u636e\u53ef\u4ee5\u5728\u7f13\u51b2\u533a\u4e2d\u88ab\u8f6c\u6362\u6210\u7a0b\u5e8f\u5185\u90e8\u4f7f\u7528\u7684\u683c\u5f0f\u3002    \u7f13\u51b2\u533a\u53ef\u4ee5\u662f\u5404\u79cd\u7c7b\u578b\u7684\u5185\u5b58\u533a\u57df\uff0c\u4f8b\u5982\uff1a</p> </li> <li> <p>\u6808\u5185\u5b58\uff1a\u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e\u7684\u5c40\u90e8\u6570\u7ec4\u901a\u5e38\u5206\u914d\u5728\u6808\u4e0a\uff0c\u53ef\u4ee5\u7528\u4f5c\u7f13\u51b2\u533a\u3002</p> </li> <li>\u5806\u5185\u5b58\uff1a\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08\u5982 C \u8bed\u8a00\u4e2d\u7684<code>malloc</code>\u6216<code>calloc</code>\uff09\u5728\u5806\u4e0a\u5206\u914d\u7684\u5185\u5b58\u5757\u4e5f\u53ef\u4ee5\u7528\u4f5c\u7f13\u51b2\u533a\u3002   \u5728 C \u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u4f7f\u7528\u6807\u51c6 I/O \u51fd\u6570\uff08\u5982<code>fread</code>\u3001<code>fwrite</code>\u3001<code>fgets</code>\u3001<code>fputs</code>\u7b49\uff09\u65f6\uff0c\u8fd9\u4e9b\u51fd\u6570\u5185\u90e8\u901a\u5e38\u5df2\u7ecf\u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u7f13\u51b2\u533a\u3002\u4f8b\u5982\uff0c\u6bcf\u4e2a<code>FILE</code>\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u51cf\u5c11\u5b9e\u9645\u7684\u78c1\u76d8\u8bfb\u5199\u6b21\u6570\u3002\u7136\u800c\uff0c\u5f53\u4f60\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u65f6\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u8fd9\u4e9b\u51fd\u6570\u3002</li> </ol> <p>5.\u600e\u4e48\u7528\u6587\u4ef6\u8def\u5f84\u6253\u5f00\u6587\u4ef6\uff1f \u5728 C \u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u6587\u4ef6\u8def\u5f84\u4e2d\u5305\u542b\u53cd\u659c\u6760 <code>\\</code>\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u53cc\u53cd\u659c\u6760 <code>\\\\</code> \u6765\u8f6c\u4e49\uff0c\u56e0\u4e3a\u5728 C \u5b57\u7b26\u4e32\u4e2d\u53cd\u659c\u6760 <code>\\</code> \u662f\u4e00\u4e2a\u8f6c\u4e49\u5b57\u7b26\u3002 \u9009\u9879\u5206\u6790\u5982\u4e0b\uff1a A. <code>c:user\\text.txt</code> - \u8fd9\u4e0d\u662f\u6b63\u786e\u7684\u8def\u5f84\u683c\u5f0f\uff0c\u53cd\u659c\u6760\u6ca1\u6709\u8f6c\u4e49\uff0c\u4e14\u6ca1\u6709\u9a71\u52a8\u5668\u76d8\u7b26\u524d\u7684\u5192\u53f7\u3002 B. <code>c:\\user\\text.txt</code> - \u8fd9\u4e5f\u4e0d\u662f\u6b63\u786e\u7684\u8def\u5f84\u683c\u5f0f\uff0c\u56e0\u4e3a\u53cd\u659c\u6760\u6ca1\u6709\u8f6c\u4e49\u3002 C. <code>\"c:\\user\\text.txt\"</code> - \u867d\u7136\u4f7f\u7528\u4e86\u5f15\u53f7\uff0c\u4f46\u662f\u53cd\u659c\u6760\u4ecd\u7136\u6ca1\u6709\u8f6c\u4e49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9009\u9879\u4e5f\u662f\u4e0d\u6b63\u786e\u7684\u3002 D. <code>\"c:\\\\user\\\\text.txt\"</code> - \u8fd9\u662f\u6b63\u786e\u7684\u683c\u5f0f\uff0c\u53cd\u659c\u6760\u88ab\u6b63\u786e\u5730\u8f6c\u4e49\u4e86\uff0c\u4e14\u6574\u4e2a\u8def\u5f84\u88ab\u53cc\u5f15\u53f7\u5305\u56f4\uff0c\u8fd9\u662f C \u8bed\u8a00\u5b57\u7b26\u4e32\u7684\u6807\u51c6\u5199\u6cd5\u3002 \u56e0\u6b64\uff0c\u6b63\u786e\u7b54\u6848\u662f D. <code>\"c:\\\\user\\\\text.txt\"</code>\u3002</p> <p>6.fgetc \u6253\u5f00\u6587\u4ef6\u7528\u4ec0\u4e48\u65b9\u5f0f? \u51fd\u6570<code>fgetc</code>\u7528\u4e8e\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002\u4e3a\u4e86\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u6587\u4ef6\u5fc5\u987b\u4ee5\u8bfb\u6a21\u5f0f\u6216\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u3002</p> <p>\u6253\u5f00\u6587\u4ef6\u7684\u6807\u51c6\u4ee3\u7801 </p> C<pre><code>FILE *fp=fopen(\"filename\",\"r\");\nif (fp) { //\u5982\u679c\u6ca1\u6709\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56deNULL\n    int a;\n    fscanf(fp,\"%d\",&amp;a);\n    printf(\"%d\\n\",a);\n    fclose(fp);\n} else {\n    printf(\"ERROR\");\n}\n</code></pre> <ul> <li><code>\"r\"</code> (read):\u53ea\u8bfb.\u6587\u4ef6\u5fc5\u987b\u5b58\u5728.</li> <li><code>\"w\"</code> (write):\u53ea\u5199.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5219\u4f1a\u88ab\u622a\u65ad\u81f3 0 \u5b57\u8282\u5927\u5c0f;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"a\"</code> (append):\u8ffd\u52a0.\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"r+\"</code> (read/update):\u8bfb\u5199.\u6587\u4ef6\u5fc5\u987b\u5b58\u5728.</li> <li><code>\"w+\"</code> (write/update):\u8bfb\u5199.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5219\u4f1a\u88ab\u622a\u65ad\u81f3 0 \u5b57\u8282\u5927\u5c0f;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"a+\"</code> (append/update):\u8bfb\u5199\u8ffd\u52a0.\u5982\u679c\u6587\u4ef6\u5b58\u5728,\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e;\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u5219\u521b\u5efa\u65b0\u6587\u4ef6.</li> <li><code>\"x\"</code>:\u53ea\u65b0\u5efa,\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u4e0d\u80fd\u6253\u5f00(\u9632\u6b62\u5bf9\u539f\u6709\u6587\u4ef6\u7834\u574f)   \u6bcf\u4e2a\u6a21\u5f0f\u90fd\u53ef\u4ee5\u4e0e <code>b</code> \u7ed3\u5408\u4f7f\u7528,\u8868\u793a\u4e8c\u8fdb\u5236\u6a21\u5f0f,\u4f8b\u5982 <code>\"rb\"</code> \u8868\u793a\u4ee5\u4e8c\u8fdb\u5236\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6.\u5728\u67d0\u4e9b\u7cfb\u7edf\u4e2d,\u5982\u679c\u4e0d\u4f7f\u7528 <code>b</code> \u6a21\u5f0f,\u53ef\u80fd\u4f1a\u5f71\u54cd\u6587\u4ef6\u7684\u8bfb\u5199,\u7279\u522b\u662f\u6d89\u53ca\u5230\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u4ea4\u6362\u65f6\u3002</li> </ul> <p>fopen  \u5728 C \u8bed\u8a00\u4e2d,<code>fopen</code> \u51fd\u6570\u7528\u4e8e\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>fopen</code> \u7684\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p> <ol> <li>\u5305\u542b <code>stdio.h</code> \u5934\u6587\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <ol> <li>\u8c03\u7528 <code>fopen</code> \u51fd\u6570\uff0c\u5e76\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff1a\u6587\u4ef6\u540d\u548c\u6253\u5f00\u6a21\u5f0f\u3002</li> </ol> C<pre><code>FILE *fp = fopen(\"filename.txt\", \"r\");\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>\"filename.txt\"</code> \u662f\u4f60\u60f3\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\u548c\u540d\u79f0\uff0c<code>\"r\"</code> \u662f\u6253\u5f00\u6a21\u5f0f\uff0c\u8868\u793a\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002 <code>fopen</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a <code>FILE*</code> \u7c7b\u578b\u7684\u6307\u9488\uff0c\u5982\u679c\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff0c\u8fd9\u4e2a\u6307\u9488\u5c06\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u6587\u4ef6\u64cd\u4f5c\u3002\u5982\u679c\u6253\u5f00\u5931\u8d25\uff0c<code>fopen</code> \u5c06\u8fd4\u56de <code>NULL</code>\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 <code>fopen</code> \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u8bfb\u53d6\u5176\u5185\u5bb9\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp;\n    char buffer[100];\n    // \u6253\u5f00\u6587\u4ef6\n    fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    // \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\n    while (fgets(buffer, 100, fp) != NULL) {\n        printf(\"%s\", buffer);\n    }\n    // \u5173\u95ed\u6587\u4ef6\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6587\u4ef6 <code>example.txt</code> \u5b58\u5728\u5e76\u4e14\u6210\u529f\u6253\u5f00\uff0c\u7a0b\u5e8f\u5c06\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002\u6700\u540e\uff0c\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002 <code>perror</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u6253\u5370\u51fa\u4e00\u4e2a\u63cf\u8ff0\u6700\u540e\u4e00\u6b21\u8c03\u7528\u5e93\u51fd\u6570\u65f6\u53d1\u751f\u9519\u8bef\u7684\u4fe1\u606f\u3002\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void perror(const char *s);\n</code></pre> <p>\u5f53\u4f60\u8c03\u7528 <code>perror</code> \u65f6\uff0c\u5b83\u4f1a\u8f93\u51fa\u53c2\u6570 <code>s</code> \u6307\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u5192\u53f7\u3001\u4e00\u4e2a\u7a7a\u683c\u548c\u4e00\u6761\u9519\u8bef\u6d88\u606f\u3002\u8fd9\u6761\u9519\u8bef\u6d88\u606f\u901a\u5e38\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4e0a\u4e00\u4e2a\u5e93\u51fd\u6570\u8c03\u7528\u5931\u8d25\u3002 \u53c2\u6570 <code>s</code> \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u662f\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4e0e\u9519\u8bef\u76f8\u5173\u7684\u6807\u8bc6\u7b26\u6216\u8005\u63d0\u793a\u4fe1\u606f\u3002\u5982\u679c <code>s</code> \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff08<code>NULL</code>\uff09\uff0c\u5219 <code>perror</code> \u53ea\u6253\u5370\u51fa\u9519\u8bef\u6d88\u606f\uff0c\u4e0d\u6253\u5370\u524d\u5bfc\u5b57\u7b26\u4e32\u3002 \u9519\u8bef\u6d88\u606f\u672c\u8eab\u662f\u7531 <code>perror</code> \u51fd\u6570\u57fa\u4e8e\u5168\u5c40\u53d8\u91cf <code>errno</code> \u7684\u5f53\u524d\u503c\u6765\u751f\u6210\u7684\u3002<code>errno</code> \u662f\u4e00\u4e2a\u5728 <code>errno.h</code> \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5916\u90e8\u6574\u6570\u53d8\u91cf\uff0c\u8bb8\u591a\u5e93\u51fd\u6570\u5728\u6267\u884c\u5931\u8d25\u65f6\u4f1a\u8bbe\u7f6e <code>errno</code> \u7684\u503c\u6765\u6307\u793a\u5177\u4f53\u7684\u9519\u8bef\u7c7b\u578b\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 <code>perror</code> \u7684\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;unistd.h&gt;\nint main() {\n    if (close(10) == -1) { // \u5047\u8bbe10\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n        perror(\"close\");\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>close</code> \u51fd\u6570\u5c1d\u8bd5\u5173\u95ed\u4e00\u4e2a\u65e0\u6548\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u5c06\u5bfc\u81f4 <code>close</code> \u8fd4\u56de <code>-1</code> \u5e76\u8bbe\u7f6e <code>errno</code>\u3002\u968f\u540e\u8c03\u7528 <code>perror</code> \u5c06\u6253\u5370\u51fa\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u7684\u6d88\u606f\uff1a</p> Text Only<pre><code>close: Bad file descriptor\n</code></pre> <p>\u8fd9\u91cc\u7684 \"Bad file descriptor\" \u662f\u6839\u636e <code>errno</code> \u7684\u503c\u751f\u6210\u7684\u9519\u8bef\u63cf\u8ff0\u3002</p> <p>fclose </p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c<code>fclose</code> \u51fd\u6570\u7528\u4e8e\u5173\u95ed\u4e00\u4e2a\u7531 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u7684\u6587\u4ef6\u6d41\u3002\u4ee5\u4e0b\u662f <code>fclose</code> \u7684\u4f7f\u7528\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p> <ol> <li>\u5305\u542b <code>stdio.h</code> \u5934\u6587\u4ef6\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <ol> <li>\u5728\u6253\u5f00\u6587\u4ef6\u540e\uff0c\u5f53\u5b8c\u6210\u6587\u4ef6\u7684\u6240\u6709\u64cd\u4f5c\u65f6\uff0c\u8c03\u7528 <code>fclose</code> \u51fd\u6570\u6765\u5173\u95ed\u6587\u4ef6\u3002</li> </ol> C<pre><code>int fclose(FILE *stream);\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>stream</code> \u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u7ed3\u6784\u7684\u6307\u9488\uff0c\u5b83\u4ee3\u8868\u4e86\u4f60\u8981\u5173\u95ed\u7684\u6587\u4ef6\u6d41\u3002 <code>fclose</code> \u51fd\u6570\u6267\u884c\u6210\u529f\u65f6\u8fd4\u56de <code>0</code>\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\u5219\u8fd4\u56de <code>EOF</code>\uff08\u5728 <code>stdio.h</code> \u4e2d\u901a\u5e38\u5b9a\u4e49\u4e3a <code>-1</code>\uff09\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 <code>fclose</code>\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp;\n    // \u6253\u5f00\u6587\u4ef6\n    fp = fopen(\"example.txt\", \"w\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    // \u5199\u5165\u6587\u4ef6\u5185\u5bb9\n    fprintf(fp, \"Hello, World!\\n\");\n    // \u5173\u95ed\u6587\u4ef6\n    if (fclose(fp) != 0) {\n        perror(\"Error closing file\");\n        return -1;\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u9996\u5148\u5c1d\u8bd5\u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00 <code>example.txt</code> \u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u6210\u529f\u6253\u5f00\uff0c\u5b83\u5c06\u5199\u5165\u4e00\u884c\u6587\u672c\u3002\u5b8c\u6210\u5199\u5165\u64cd\u4f5c\u540e\uff0c\u7a0b\u5e8f\u8c03\u7528 <code>fclose</code> \u6765\u5173\u95ed\u6587\u4ef6\u3002\u5982\u679c <code>fclose</code> \u8fd4\u56de <code>EOF</code>\uff0c\u8868\u793a\u5173\u95ed\u6587\u4ef6\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u7a0b\u5e8f\u5c06\u6253\u5370\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de <code>-1</code>\u3002</p> <p>fscanf <code>fscanf</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\u4e4b\u4e00\uff0c\u5b83\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u683c\u5f0f\u5316\u7684\u8f93\u5165\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0e <code>scanf</code> \u7c7b\u4f3c\uff0c\u4f46\u662f <code>fscanf</code> \u662f\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09\u3002 \u4e0b\u9762\u662f <code>fscanf</code> \u51fd\u6570\u7684\u57fa\u672c\u7528\u6cd5\uff1a</p> C<pre><code>int fscanf(FILE *stream, const char *format, ...);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>const char *format</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u5b9a\u4e86\u6570\u636e\u7684\u683c\u5f0f\uff0c\u4e0e <code>scanf</code> \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u76f8\u540c\u3002</li> <li><code>...</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u3002   <code>fscanf</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6210\u529f\u5339\u914d\u5e76\u8d4b\u503c\u7684\u8f93\u5165\u9879\u4e2a\u6570,\u5982\u679c\u9047\u5230\u9519\u8bef\u6216\u6587\u4ef6\u7ed3\u675f(EOF),\u5219\u8fd4\u56de EOF\u3002   \u4e0b\u9762\u662f\u4e00\u4e9b <code>fscanf</code> \u7684\u4f7f\u7528\u793a\u4f8b\uff1a</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_25","title":"\u8bfb\u53d6\u6574\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    int number;\n    if (file != NULL) {\n        while (fscanf(file, \"%d\", &amp;number) != EOF) {\n            printf(\"Read number: %d\\n\", number);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4ece <code>data.txt</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u6574\u6570\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_26","title":"\u8bfb\u53d6\u5b57\u7b26\u4e32","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    char buffer[100];\n    if (file != NULL) {\n        while (fscanf(file, \"%99s\", buffer) != EOF) { // \u6ce8\u610f\uff1a\u4f7f\u7528 %99s \u4ee5\u907f\u514d\u7f13\u51b2\u533a\u6ea2\u51fa\n            printf(\"Read string: %s\\n\", buffer);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4ece <code>data.txt</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4f7f\u7528 <code>%99s</code> \u6765\u9650\u5236\u8bfb\u53d6\u7684\u5b57\u7b26\u6570\uff0c\u907f\u514d\u8d85\u51fa <code>buffer</code> \u7684\u5927\u5c0f\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_27","title":"\u8bfb\u53d6\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"data.txt\", \"r\");\n    int number;\n    char name[50];\n    if (file != NULL) {\n        while (fscanf(file, \"%d %49s\", &amp;number, name) != EOF) {\n            printf(\"Number: %d, Name: %s\\n\", number, name);\n        }\n        fclose(file);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fscanf</code> \u4e00\u6b21\u8bfb\u53d6\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u8bb0\u4f4f\uff0c<code>fscanf</code> \u4f1a\u8df3\u8fc7\u4efb\u4f55\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u7b49\uff09\uff0c\u76f4\u5230\u9047\u5230\u4e0e\u683c\u5f0f\u5b57\u7b26\u4e32\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u3002\u5982\u679c\u8bfb\u53d6\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u683c\u5f0f\u5b57\u7b26\u4e32\u4e0d\u5339\u914d\uff0c<code>fscanf</code> \u53ef\u80fd\u4f1a\u5931\u8d25\u6216\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</p> <p></p> <p>fprintf <code>fprintf</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u683c\u5f0f\u5316\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u6d41\u3002\u5b83\u4e0e <code>printf</code> \u51fd\u6570\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46 <code>fprintf</code> \u5141\u8bb8\u4f60\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\uff08\u901a\u5e38\u662f\u5c4f\u5e55\uff09\u3002 \u4e0b\u9762\u662f <code>fprintf</code> \u51fd\u6570\u7684\u57fa\u672c\u539f\u578b\uff1a</p> C<pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>const char *format</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u5b9a\u4e86\u6570\u636e\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u4e0e <code>printf</code> \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u76f8\u540c\u3002</li> <li><code>...</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u53d8\u91cf\u53c2\u6570\u5217\u8868\uff0c\u5305\u542b\u4e86\u6839\u636e <code>format</code> \u5b57\u7b26\u4e32\u6307\u5b9a\u7684\u683c\u5f0f\u8981\u5199\u5165\u7684\u6570\u636e\u3002   <code>fprintf</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6210\u529f\u5199\u5165\u7684\u5b57\u7b26\u6570\uff0c\u6216\u8005\u5728\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de\u4e00\u4e2a\u8d1f\u6570\u3002   \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fprintf</code> \u7684\u7b80\u5355\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"example.txt\", \"w\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\n    if (file == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    int number = 42;\n    const char *text = \"The answer to life, the universe, and everything\";\n    // \u5c06\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6\n    fprintf(file, \"Number: %d\\nText: %s\\n\", number, text);\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u6211\u4eec\u9996\u5148\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a \"example.txt\" \u7684\u6587\u4ef6\uff0c\u4ee5\u4f9b\u5199\u5165\uff08\"w\" \u6a21\u5f0f\uff09\u3002</li> <li>\u6211\u4eec\u68c0\u67e5 <code>fopen</code> \u662f\u5426\u6210\u529f\u8fd4\u56de\u4e86\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u6307\u9488\u3002</li> <li>\u4f7f\u7528 <code>fprintf</code> \u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5199\u5165\u5230\u6587\u4ef6\u4e2d\u3002\u683c\u5f0f\u5b57\u7b26\u4e32\u5305\u542b\u4e86 <code>%d</code> \u7528\u4e8e\u6574\u6570\u548c <code>%s</code> \u7528\u4e8e\u5b57\u7b26\u4e32\u3002</li> <li>\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u6ce8\u610f\uff0c\u5982\u679c\u6587\u4ef6\u6253\u5f00\u6a21\u5f0f\u662f \"w\"\uff0c\u5219\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\"example.txt\" \u6587\u4ef6\u90fd\u4f1a\u88ab\u8986\u76d6\u3002\u5982\u679c\u60f3\u8981\u8ffd\u52a0\u5185\u5bb9\u5230\u6587\u4ef6\u672b\u5c3e\uff0c\u5e94\u8be5\u4f7f\u7528 \"a\" \u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002</li> </ol> <p></p> <p>fgetc <code>fgetc</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f <code>fgetc</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_28","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>int fgetc(FILE *stream);\n</code></pre> <ul> <li><code>FILE *stream</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u5b57\u7b26\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_29","title":"\u8fd4\u56de\u503c","text":"<ul> <li><code>fgetc</code> \u51fd\u6570\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\uff0c\u5982\u679c\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u6216\u53d1\u751f\u8bfb\u53d6\u9519\u8bef\uff0c\u5219\u8fd4\u56de <code>EOF</code>\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u4f8b\u5982 <code>-1</code>\uff09\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_30","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528 <code>fgetc</code> \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5b57\u7b26\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *file = fopen(\"example.txt\", \"r\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int ch; // \u7528\u4e8e\u5b58\u50a8\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\n    while ((ch = fgetc(file)) != EOF) { // \u5faa\u73af\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\n        putchar(ch); // \u5c06\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a \"example.txt\" \u7684\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fgetc</code> \u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u76f4\u5230 <code>EOF</code> \u88ab\u8fd4\u56de\u3002</li> <li>\u4f7f\u7528 <code>putchar</code> \u51fd\u6570\u5c06\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c\u5f53 <code>fgetc</code> \u8fd4\u56de <code>EOF</code> \u65f6\uff0c\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5b83\u4e5f\u53ef\u80fd\u662f\u6b63\u5e38\u5230\u8fbe\u4e86\u6587\u4ef6\u672b\u5c3e\u3002\u8981\u533a\u5206\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u68c0\u67e5 <code>ferror</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c <code>ferror(file)</code> \u8fd4\u56de\u975e\u96f6\u503c\uff0c\u5219\u8868\u793a\u5728\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u9519\u8bef\u3002</li> </ol> <p>fputc <code>fputc</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u6d41\u4e2d\u3002\u5176\u539f\u578b\u5b9a\u4e49\u5728 <code>stdio.h</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>int fputc(int char, FILE *stream);\n</code></pre> <p>\u4e0b\u9762\u662f <code>fputc</code> \u51fd\u6570\u7684\u4f7f\u7528\u6b65\u9aa4\u548c\u793a\u4f8b\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_31","title":"\u53c2\u6570\u8bf4\u660e\uff1a","text":"<ul> <li><code>char</code>\uff1a\u9700\u8981\u5199\u5165\u6587\u4ef6\u7684\u5b57\u7b26\uff0c\u4ee5 <code>int</code> \u7c7b\u578b\u4f20\u9012\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u4f20\u9012\u4e00\u4e2a <code>char</code> \u7c7b\u578b\u7684\u503c\u3002</li> <li><code>stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u7c7b\u578b\u7684\u6307\u9488\uff0c\u4ee3\u8868\u4e86\u8981\u5199\u5165\u5b57\u7b26\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_32","title":"\u8fd4\u56de\u503c\uff1a","text":"<ul> <li>\u6210\u529f\uff1a\u8fd4\u56de\u5199\u5165\u7684\u5b57\u7b26\uff08\u5373 <code>char</code> \u53c2\u6570\u7684\u503c\uff09\u3002</li> <li>\u5931\u8d25\uff1a\u8fd4\u56de <code>EOF</code>\uff08\u901a\u5e38\u5728 <code>stdio.h</code> \u4e2d\u5b9a\u4e49\u4e3a <code>-1</code>\uff09\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_33","title":"\u4f7f\u7528\u793a\u4f8b\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp = fopen(\"example.txt\", \"w\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    char ch = 'A'; // \u8981\u5199\u5165\u7684\u5b57\u7b26\n    // \u5c06\u5b57\u7b26 'A' \u5199\u5165\u6587\u4ef6\n    if (fputc(ch, fp) == EOF) {\n        perror(\"Error writing to file\");\n        fclose(fp); // \u5173\u95ed\u6587\u4ef6\n        return -1;\n    }\n    // \u53ef\u4ee5\u7ee7\u7eed\u5199\u5165\u5176\u4ed6\u5b57\u7b26\n    fputc('B', fp);\n    fputc('\\n', fp); // \u5199\u5165\u6362\u884c\u7b26\n    fclose(fp); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u9996\u5148\u5c1d\u8bd5\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a <code>example.txt</code> \u7684\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u6210\u529f\u6253\u5f00\uff0c\u5b83\u5c06\u4f7f\u7528 <code>fputc</code> \u51fd\u6570\u5199\u5165\u5b57\u7b26 'A'\uff0c\u7136\u540e\u662f 'B' \u548c\u4e00\u4e2a\u6362\u884c\u7b26\u3002\u6bcf\u8c03\u7528\u4e00\u6b21 <code>fputc</code>\uff0c\u5b83\u90fd\u4f1a\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u4e3a <code>EOF</code> \u6765\u786e\u5b9a\u5199\u5165\u662f\u5426\u6210\u529f\u3002\u6700\u540e\uff0c\u6587\u4ef6\u88ab\u5173\u95ed\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u4f7f\u7528 <code>fputc</code> \u4e4b\u524d\uff0c\u5e94\u8be5\u786e\u4fdd\u6587\u4ef6\u5df2\u7ecf\u6210\u529f\u6253\u5f00\uff0c\u5e76\u4e14\u5728\u5199\u5165\u5b8c\u6210\u540e\uff0c\u5e94\u8be5\u5173\u95ed\u6587\u4ef6\u4ee5\u91ca\u653e\u8d44\u6e90\u3002\u5982\u679c\u5199\u5165\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c<code>fputc</code> \u5c06\u8fd4\u56de <code>EOF</code>\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 <code>perror</code> \u6765\u83b7\u53d6\u9519\u8bef\u4fe1\u606f\u3002</p> <p>fread <code>fread</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e\u5757\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u8005\u9700\u8981\u4e00\u6b21\u6027\u8bfb\u53d6\u591a\u4e2a\u6570\u636e\u9879\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f <code>fread</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_34","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);\n</code></pre> <ul> <li><code>void *ptr</code>\uff1a\u6307\u5411\u8981\u8bfb\u53d6\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002</li> <li><code>size_t size</code>\uff1a\u8981\u8bfb\u53d6\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>size_t nmemb</code>\uff1a\u8981\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li><code>FILE *stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_35","title":"\u8fd4\u56de\u503c","text":"<p><code>fread</code> \u51fd\u6570\u8fd4\u56de\u6210\u529f\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u53ef\u80fd\u4f1a\u5c0f\u4e8e <code>nmemb</code> \u6307\u5b9a\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7279\u522b\u662f\u5728\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u65f6\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_36","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fread</code> \u7684\u4f8b\u5b50\uff0c\u5b83\u4ece\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u7cfb\u5217\u6574\u6570\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main() {\n    FILE *file = fopen(\"data.bin\", \"rb\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u4e8c\u8fdb\u5236\u8bfb\u53d6\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int numbers[10]; // \u5047\u8bbe\u6587\u4ef6\u4e2d\u670910\u4e2a\u6574\u6570\n    size_t elements_read;\n    // \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d610\u4e2a\u6574\u6570\u5230numbers\u6570\u7ec4\u4e2d\n    elements_read = fread(numbers, sizeof(int), 10, file);\n    if (elements_read == 10) {\n        printf(\"Successfully read 10 integers from the file.\\n\");\n        // \u6253\u5370\u8bfb\u53d6\u5230\u7684\u6574\u6570\n        for (int i = 0; i &lt; 10; ++i) {\n            printf(\"%d \", numbers[i]);\n        }\n        printf(\"\\n\");\n    } else {\n        printf(\"Could not read 10 integers. Only %zu integers were read.\\n\", elements_read);\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u4ee5\u4e8c\u8fdb\u5236\u8bfb\u53d6\u6a21\u5f0f\u6253\u5f00\u540d\u4e3a \"data.bin\" \u7684\u6587\u4ef6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fread</code> \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 10 \u4e2a\u6574\u6570\u5230 <code>numbers</code> \u6570\u7ec4\u4e2d\u3002</li> <li>\u68c0\u67e5 <code>fread</code> \u8fd4\u56de\u7684\u8bfb\u53d6\u5143\u7d20\u4e2a\u6570\u662f\u5426\u4e3a 10\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u8bfb\u53d6\u5230\u7684\u6574\u6570\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u6253\u5370\u5b9e\u9645\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c<code>fread</code> \u4e0d\u4f1a\u5728\u8bfb\u53d6\u5230\u7684\u6570\u636e\u540e\u81ea\u52a8\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff08null terminator\uff09\uff0c\u6240\u4ee5\u5b83\u901a\u5e38\u7528\u4e8e\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6570\u636e\u6216\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u6b63\u5728\u8bfb\u53d6\u6587\u672c\u6570\u636e\uff0c\u5e76\u4e14\u9700\u8981\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5904\u7406\u8fd9\u4e9b\u6570\u636e\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 <code>fgets</code> \u6216 <code>fgetc</code>\u3002</li> </ol> <p></p> <p>fwrite <code>fwrite</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u6570\u636e\u5757\u5199\u5165\u6587\u4ef6\u6d41\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5199\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u8005\u9700\u8981\u4e00\u6b21\u6027\u5199\u5165\u591a\u4e2a\u6570\u636e\u9879\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f <code>fwrite</code> \u7684\u57fa\u672c\u7528\u6cd5\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_37","title":"\u51fd\u6570\u539f\u578b","text":"C<pre><code>size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);\n</code></pre> <ul> <li><code>const void *ptr</code>\uff1a\u6307\u5411\u8981\u5199\u5165\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002</li> <li><code>size_t size</code>\uff1a\u8981\u5199\u5165\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002</li> <li><code>size_t nmemb</code>\uff1a\u8981\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li><code>FILE *stream</code>\uff1a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u6d41\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_38","title":"\u8fd4\u56de\u503c","text":"<p><code>fwrite</code> \u51fd\u6570\u8fd4\u56de\u6210\u529f\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u901a\u5e38\u4f1a\u7b49\u4e8e <code>nmemb</code> \u6307\u5b9a\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u9664\u975e\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_39","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 <code>fwrite</code> \u7684\u4f8b\u5b50\uff0c\u5b83\u5c06\u4e00\u7cfb\u5217\u6574\u6570\u5199\u5165\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main() {\n    FILE *file = fopen(\"data.bin\", \"wb\"); // \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u4e8c\u8fdb\u5236\u5199\u5165\n    if (file == NULL) {\n        perror(\"Error opening file\"); // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n        return -1;\n    }\n    int numbers[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; // \u8981\u5199\u5165\u7684\u6574\u6570\u6570\u7ec4\n    // \u5c06\u6570\u7ec4\u4e2d\u768410\u4e2a\u6574\u6570\u5199\u5165\u5230\u6587\u4ef6\u4e2d\n    size_t elements_written = fwrite(numbers, sizeof(int), 10, file);\n    if (elements_written == 10) {\n        printf(\"Successfully wrote 10 integers to the file.\\n\");\n    } else {\n        printf(\"Could not write 10 integers. Only %zu integers were written.\\n\", elements_written);\n    }\n    fclose(file); // \u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u4f7f\u7528 <code>fopen</code> \u51fd\u6570\u4ee5\u4e8c\u8fdb\u5236\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u540d\u4e3a \"data.bin\" \u7684\u6587\u4ef6\u3002</li> <li>\u68c0\u67e5 <code>fopen</code> \u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\u662f\u5426\u4e3a <code>NULL</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>fwrite</code> \u5c06 <code>numbers</code> \u6570\u7ec4\u4e2d\u7684 10 \u4e2a\u6574\u6570\u5199\u5165\u5230\u6587\u4ef6\u4e2d\u3002</li> <li>\u68c0\u67e5 <code>fwrite</code> \u8fd4\u56de\u7684\u5199\u5165\u5143\u7d20\u4e2a\u6570\u662f\u5426\u4e3a 10\uff0c\u5982\u679c\u662f\uff0c\u5219\u6253\u5370\u6210\u529f\u6d88\u606f\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u6253\u5370\u5b9e\u9645\u5199\u5165\u7684\u5143\u7d20\u4e2a\u6570\u3002</li> <li>\u4f7f\u7528 <code>fclose</code> \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002    \u8bf7\u6ce8\u610f\uff0c<code>fwrite</code> \u4e0d\u4f1a\u5728\u5199\u5165\u7684\u6570\u636e\u540e\u81ea\u52a8\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff08null terminator\uff09\uff0c\u56e0\u6b64\u5b83\u9002\u5408\u4e8e\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\u6216\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u9700\u8981\u5199\u5165\u6587\u672c\u6570\u636e\u5e76\u4e14\u9700\u8981\u5728\u6bcf\u4e2a\u6570\u636e\u9879\u540e\u6dfb\u52a0\u7a7a\u5b57\u7b26\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u624b\u52a8\u6dfb\u52a0\u8fd9\u4e9b\u7a7a\u5b57\u7b26\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u9002\u5408\u6587\u672c\u6570\u636e\u7684\u51fd\u6570\uff0c\u5982 <code>fprintf</code> \u6216 <code>fputs</code>\u3002</li> </ol> <p></p> <p>fseek <code>fseek</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u6587\u4ef6\u4e2d\u79fb\u52a8\u6587\u4ef6\u6307\u9488\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002\u5b83\u7684\u539f\u578b\u5b9a\u4e49\u5728 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff0c\u4ee5\u4e0b\u662f <code>fseek</code> \u51fd\u6570\u7684\u58f0\u660e\uff1a</p> C<pre><code>int fseek(FILE *stream, long int offset, int whence);\n</code></pre> <p>\u4ee5\u4e0b\u662f <code>fseek</code> \u51fd\u6570\u7684\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>FILE *stream</code>\uff1a\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6807\u8bc6\u4e86\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u6d41\u3002</li> <li><code>long int offset</code>\uff1a\u76f8\u5bf9\u4e8e <code>whence</code> \u53c2\u6570\u6307\u5b9a\u7684\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\u3002\u8fd9\u4e2a\u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u6570\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6570\u3002</li> <li><code>int whence</code>\uff1a\u6307\u5b9a <code>offset</code> \u53c2\u6570\u662f\u57fa\u4e8e\u54ea\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u504f\u79fb\u7684\uff0c\u5b83\u53ef\u4ee5\u662f\u4ee5\u4e0b\u4e09\u4e2a\u5b8f\u4e4b\u4e00\uff1a</li> <li><code>SEEK_SET</code>\uff1a\u6587\u4ef6\u7684\u5f00\u5934\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\uff09\u3002</li> <li><code>SEEK_CUR</code>\uff1a\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\u7684\uff09\u3002</li> <li> <p><code>SEEK_END</code>\uff1a\u6587\u4ef6\u7684\u672b\u5c3e\uff08\u504f\u79fb\u91cf\u5e94\u8be5\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u672b\u5c3e\u7684\uff09\u3002     <code>fseek</code> \u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de 0\uff0c\u51fa\u9519\u65f6\u8fd4\u56de\u975e 0 \u503c\u3002     \u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 <code>fseek</code> \u7684\u793a\u4f8b\uff1a</p> </li> <li> <p>\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\uff1a</p> </li> </ul> C<pre><code>fseek(fp, 0, SEEK_SET);\n</code></pre> <ol> <li>\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u79fb\u52a8 10 \u4e2a\u5b57\u8282\uff1a</li> </ol> C<pre><code>fseek(fp, -10, SEEK_CUR);\n</code></pre> <ol> <li>\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\u524d\u7684 100 \u4e2a\u5b57\u8282\uff1a</li> </ol> C<pre><code>fseek(fp, -100, SEEK_END);\n</code></pre> <p>\u5728\u4f7f\u7528 <code>fseek</code> \u4e4b\u540e\uff0c\u5982\u679c\u60f3\u8981\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>ftell</code> \u51fd\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c<code>fseek</code> \u51fd\u6570\u901a\u5e38\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u6362\u884c\u7b26\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u8868\u793a\uff08\u4f8b\u5982\uff0cWindows \u4e0a\u662f <code>\\r\\n</code>\uff0c\u800c Unix/Linux \u4e0a\u662f <code>\\n</code>\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd <code>fseek</code> \u7684\u7cbe\u786e\u4f4d\u7f6e\u8ba1\u7b97\u3002\u5982\u679c\u8981\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u5b9a\u4f4d\uff0c\u901a\u5e38\u5efa\u8bae\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002</p> <p><code>SEEK_SET</code>\u3001<code>SEEK_CUR</code> \u548c <code>SEEK_END</code> \u662f\u5728 C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u5b9a\u4e49\u7684\u5b8f\uff0c\u5b83\u4eec\u7528\u4e8e <code>fseek</code> \u51fd\u6570\u4e2d\uff0c\u4ee5\u6307\u5b9a\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u7684\u53c2\u8003\u4f4d\u7f6e\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e09\u4e2a\u5b8f\u7684\u542b\u4e49\uff1a</p> <ol> <li><code>SEEK_SET</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 0\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_SET</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, 100, SEEK_SET);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u4e4b\u540e\u7684\u7b2c 100 \u4e2a\u5b57\u8282\u3002</li> <li><code>SEEK_CUR</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 1\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_CUR</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, 50, SEEK_CUR);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u79fb\u52a8 50 \u4e2a\u5b57\u8282\u3002</li> <li><code>SEEK_END</code>:</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5176\u503c\u4e3a 2\u3002</li> <li>\u5f53\u4f7f\u7528 <code>fseek</code> \u51fd\u6570\u65f6\uff0c\u5982\u679c <code>whence</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>SEEK_END</code>\uff0c\u5219 <code>offset</code> \u53c2\u6570\u6307\u5b9a\u7684\u504f\u79fb\u91cf\u662f\u76f8\u5bf9\u4e8e\u6587\u4ef6\u672b\u5c3e\u7684\u3002</li> <li>\u4f8b\u5982\uff0c<code>fseek(fp, -10, SEEK_END);</code> \u4f1a\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u672b\u5c3e\u4e4b\u524d\u7684\u7b2c 10 \u4e2a\u5b57\u8282\u3002      \u8fd9\u4e9b\u5b8f\u5b9a\u4e49\u5728 <code>&lt;stdio.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u5b83\u4eec\u4e4b\u524d\u9700\u8981\u5305\u542b\u8be5\u5934\u6587\u4ef6\u3002\u901a\u8fc7\u8fd9\u4e9b\u5b8f\uff0c<code>fseek</code> \u51fd\u6570\u80fd\u591f\u7075\u6d3b\u5730\u5728\u6587\u4ef6\u4e2d\u5b9a\u4f4d\u5230\u7279\u5b9a\u7684\u4f4d\u7f6e\uff0c\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u64cd\u4f5c\u3002</li> </ol> <p>feof <code>feof</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u6d4b\u6d41\u4e0a\u7684\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\uff08end-of-file\uff09\u3002\u5f53\u5728\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c<code>feof</code> \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\uff08\u901a\u5e38\u662f <code>1</code>\uff09\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u5c1a\u672a\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u5219\u8fd4\u56de <code>0</code>\u3002 \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a</p> C<pre><code>int feof(FILE *stream);\n</code></pre> <p>\u53c2\u6570 <code>stream</code> \u662f\u4e00\u4e2a\u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5\u5bf9\u8c61\u4ee3\u8868\u4e86\u4e0e\u67d0\u4e2a\u6587\u4ef6\u76f8\u5173\u8054\u7684\u6d41\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u4e8e <code>feof</code> \u51fd\u6570\u7684\u8981\u70b9\uff1a</p> <ul> <li><code>feof</code> \u4ec5\u5728\u6267\u884c\u4e86\u6587\u4ef6\u8bfb\u53d6\u64cd\u4f5c\u5e76\u4e14\u8be5\u64cd\u4f5c\u9047\u5230\u4e86\u6587\u4ef6\u672b\u5c3e\u65f6\uff0c\u624d\u4f1a\u8bbe\u7f6e\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\u3002\u56e0\u6b64\uff0c\u5728\u8c03\u7528 <code>feof</code> \u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u5c1d\u8bd5\u8bfb\u53d6\u6587\u4ef6\u3002</li> <li>\u5982\u679c\u5728\u8bfb\u53d6\u64cd\u4f5c\u540e\u7acb\u5373\u8c03\u7528 <code>feof</code>\uff0c\u5e76\u4e14\u5b83\u8fd4\u56de <code>0</code>\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u4e00\u5b9a\u4e0d\u4f1a\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u53ef\u80fd\u8fd8\u9700\u8981\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bfb\u53d6\u5c1d\u8bd5\uff0c\u7136\u540e\u518d\u6b21\u68c0\u67e5 <code>feof</code>\u3002</li> <li>\u5f53\u68c0\u6d4b\u5230\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\u65f6\uff0c\u5e94\u8be5\u505c\u6b62\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u8bfb\u53d6\u5230\u65e0\u6548\u7684\u6570\u636e\u6216\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</li> <li><code>feof</code> \u4e0d\u4f1a\u91cd\u7f6e\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\uff0c\u4e00\u65e6\u8bbe\u7f6e\u4e86\uff0c\u5b83\u5c06\u4fdd\u6301\u8bbe\u7f6e\u72b6\u6001\u76f4\u5230\u5173\u95ed\u6587\u4ef6\u6216\u6e05\u9664\u9519\u8bef\u6807\u5fd7\u3002   \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 <code>feof</code> \u68c0\u6d4b\u6587\u4ef6\u7ed3\u675f\u7684\u7b80\u5355\u793a\u4f8b\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        perror(\"Error opening file\");\n        return -1;\n    }\n    int c;\n    while ((c = fgetc(fp)) != EOF) {\n        putchar(c);\n        if (feof(fp)) {\n            break; // \u6587\u4ef6\u7ed3\u675f\uff0c\u9000\u51fa\u5faa\u73af\n        }\n    }\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u9010\u5b57\u7b26\u8bfb\u53d6\uff0c\u76f4\u5230\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u4f7f\u7528 <code>feof</code> \u6765\u68c0\u6d4b\u662f\u5426\u5230\u8fbe\u4e86\u6587\u4ef6\u672b\u5c3e\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u9000\u51fa\u5faa\u73af\u3002</p> <p>linux \u6587\u4ef6\u8f93\u5165\u8f93\u51fa  \u5728 Linux \u7ec8\u7aef\u4e2d\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u901a\u5e38\u6307\u7684\u662f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff08\u8f93\u5165\uff09\u548c\u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\uff08\u8f93\u51fa\uff09\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u547d\u4ee4\u548c\u4f7f\u7528\u65b9\u6cd5\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_40","title":"\u8f93\u51fa\uff08\u5199\u5165\uff09\u5230\u6587\u4ef6","text":"<ol> <li>\u4f7f\u7528\u91cd\u5b9a\u5411\u7b26\u53f7 <code>&gt;</code> \u548c <code>&gt;&gt;</code>:</li> <li><code>&gt;</code> \u7528\u4e8e\u521b\u5efa\u65b0\u6587\u4ef6\u6216\u8986\u76d6\u73b0\u6709\u6587\u4ef6\u3002</li> <li><code>&gt;&gt;</code> \u7528\u4e8e\u5728\u73b0\u6709\u6587\u4ef6\u672b\u5c3e\u8ffd\u52a0\u5185\u5bb9\u3002      \u793a\u4f8b\uff1a    Bash<pre><code>echo \"Hello, World!\" &gt; hello.txt  # \u521b\u5efa\u6216\u8986\u76d6\u6587\u4ef6 hello.txt\necho \"\u518d\u89c1\" &gt;&gt; hello.txt          # \u5728\u6587\u4ef6 hello.txt \u672b\u5c3e\u8ffd\u52a0\u5185\u5bb9\n</code></pre></li> <li>\u4f7f\u7528\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411:    \u547d\u4ee4\u7684\u8f93\u51fa\u53ef\u4ee5\u4f7f\u7528 <code>&gt;</code> \u6216 <code>&gt;&gt;</code> \u88ab\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>ls -l &gt; directory_listing.txt  # \u5c06\u76ee\u5f55\u5217\u8868\u5199\u5165\u6587\u4ef6\n</code></pre></li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_41","title":"\u8f93\u5165\uff08\u8bfb\u53d6\uff09\u6587\u4ef6","text":"<ol> <li>\u4f7f\u7528\u547d\u4ee4\u8bfb\u53d6\u6587\u4ef6:    \u8bb8\u591a\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\u4f5c\u4e3a\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>cat hello.txt  # \u663e\u793a\u6587\u4ef6\u5185\u5bb9\nless hello.txt # \u5206\u9875\u663e\u793a\u6587\u4ef6\u5185\u5bb9\n</code></pre></li> <li>\u4f7f\u7528\u7ba1\u9053 <code>|</code>:    \u7ba1\u9053\u53ef\u4ee5\u5c06\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>cat hello.txt | grep \"Hello\"  # \u4ece\u6587\u4ef6\u4e2d\u67e5\u627e\u5305\u542b \"Hello\" \u7684\u884c\n</code></pre></li> <li>\u4f7f\u7528\u8f93\u5165\u91cd\u5b9a\u5411 <code>&lt;</code>:    \u4f7f\u7528 <code>&lt;</code> \u53ef\u4ee5\u5c06\u6587\u4ef6\u5185\u5bb9\u4f5c\u4e3a\u547d\u4ee4\u7684\u8f93\u5165\u3002    \u793a\u4f8b\uff1a    Bash<pre><code>sort &lt; hello.txt  # \u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\n</code></pre></li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_42","title":"\u793a\u4f8b\uff1a\u7ed3\u5408\u8f93\u5165\u8f93\u51fa","text":"<p>\u5047\u8bbe\u4f60\u60f3\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u6392\u5e8f\u540e\u5199\u5165\u53e6\u4e00\u4e2a\u6587\u4ef6\uff1a</p> Bash<pre><code>sort &lt; unsorted.txt &gt; sorted.txt\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>sort</code> \u547d\u4ee4\u4ece\u6587\u4ef6 <code>unsorted.txt</code> \u8bfb\u53d6\u5185\u5bb9\uff0c\u6392\u5e8f\u540e\u5c06\u5176\u8f93\u51fa\u5230 <code>sorted.txt</code>\u3002 \u8fd9\u4e9b\u662f\u57fa\u672c\u7684\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u7ec4\u5408\u548c\u6269\u5c55\u3002</p> <p>cat <code>cat</code> \u662f Linux \u548c\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u5e38\u7528\u547d\u4ee4\uff0c\u5b83\u7684\u540d\u5b57\u6765\u6e90\u4e8e \"concatenate\"\uff08\u8fde\u63a5\uff09\u7684\u7f29\u5199\u3002<code>cat</code> \u547d\u4ee4\u7684\u4e3b\u8981\u7528\u9014\u662f\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\u3001\u521b\u5efa\u6587\u4ef6\u3001\u6587\u4ef6\u5185\u5bb9\u5408\u5e76\u4ee5\u53ca\u57fa\u672c\u7684\u6587\u672c\u5904\u7406\u3002 \u4ee5\u4e0b\u662f <code>cat</code> \u547d\u4ee4\u7684\u4e00\u4e9b\u5e38\u89c1\u7528\u6cd5\uff1a</p> <ol> <li>\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\uff1a    Bash<pre><code>cat filename.txt\n</code></pre>    \u8fd9\u4f1a\u663e\u793a <code>filename.txt</code> \u6587\u4ef6\u7684\u5185\u5bb9\u3002</li> <li>\u521b\u5efa\u6587\u4ef6\u6216\u5411\u6587\u4ef6\u8ffd\u52a0\u5185\u5bb9\uff1a    Bash<pre><code>cat &gt; filename.txt\n</code></pre>    \u6309\u4e0b\u56de\u8f66\u540e\uff0c\u4f60\u53ef\u4ee5\u5f00\u59cb\u8f93\u5165\u6587\u672c\u3002\u5f53\u4f60\u5b8c\u6210\u8f93\u5165\u5e76\u6309\u4e0b <code>Ctrl + D</code> \u65f6\uff0c\u8f93\u5165\u7684\u6587\u672c\u4f1a\u88ab\u5199\u5165 <code>filename.txt</code>\u3002\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8986\u76d6\u539f\u6709\u5185\u5bb9\u3002    \u8981\u8ffd\u52a0\u5185\u5bb9\u800c\u4e0d\u662f\u8986\u76d6\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a    Bash<pre><code>cat &gt;&gt; filename.txt\n</code></pre></li> <li>\u5408\u5e76\u6587\u4ef6\u5185\u5bb9\uff1a    Bash<pre><code>cat file1.txt file2.txt &gt; combined.txt\n</code></pre>    \u8fd9\u4f1a\u5c06 <code>file1.txt</code> \u548c <code>file2.txt</code> \u7684\u5185\u5bb9\u5408\u5e76\u540e\u5199\u5165 <code>combined.txt</code>\u3002</li> <li>\u4e0e\u7ba1\u9053\u914d\u5408\u4f7f\u7528\uff1a    <code>cat</code> \u547d\u4ee4\u5e38\u4e0e\u5176\u4ed6\u547d\u4ee4\u901a\u8fc7\u7ba1\u9053\uff08<code>|</code>\uff09\u914d\u5408\u4f7f\u7528\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u6765\u53d1\u9001\u6587\u4ef6\u5185\u5bb9\u5230\u5176\u4ed6\u547d\u4ee4\u8fdb\u884c\u5904\u7406\uff1a    Bash<pre><code>cat filename.txt | grep \"keyword\"\n</code></pre>    \u8fd9\u4f1a\u663e\u793a <code>filename.txt</code> \u4e2d\u5305\u542b \"keyword\" \u7684\u6240\u6709\u884c\u3002    <code>cat</code> \u547d\u4ee4\u662f\u5b66\u4e60 Linux \u547d\u4ee4\u884c\u65f6\u7684\u57fa\u7840\u5de5\u5177\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u7b80\u5355\u4e14\u529f\u80fd\u591a\u6837\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u67e5\u770b\u5927\u6587\u4ef6\uff0c<code>cat</code> \u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u4f1a\u4e00\u6b21\u6027\u52a0\u8f7d\u6574\u4e2a\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 <code>less</code> \u6216 <code>more</code> \u547d\u4ee4\u6765\u5206\u9875\u67e5\u770b\u3002</li> </ol> <p></p> <p>\u4e0a\u8bfe\u4ee3\u7801:</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\nint main()\n{\n    int c;\n    FILE *fpin,*fpout;\n    char s[101];\n\n    fpin=fopen(\"upper.txt\",\"r\");\n    fpout=fopen(\"upper2.txt\",\"a+\");\n    while ((c=fgetc(fpin))!=EOF)\n    {\n        fputc(tolower(c),fpout);\n    }\n\n    fscanf(fpout,\"%s\",s);\n    printf(\"%s\",s);\n\n    fseek(fpout,12L,0);\n\n    fclose(fpin);\n    fclose(fpout);\n    return 0;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#memcpy","title":"memcpy","text":"<p><code>memcpy</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u4e00\u4e2a\u5757\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5757\u3002\u4ee5\u4e0b\u662f <code>memcpy</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void *memcpy(void *dest, const void *src, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>dest</code>\uff1a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u590d\u5236\u7684\u6570\u636e\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u5730\u65b9\u3002</li> <li><code>src</code>\uff1a\u6307\u5411\u6e90\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u8981\u590d\u5236\u7684\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</li> <li><code>n</code>\uff1a\u8981\u590d\u5236\u7684\u5b57\u8282\u6570\u3002   <code>memcpy</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757 <code>dest</code> \u7684\u6307\u9488\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memcpy</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char src[50] = \"Hello, World!\";\n    char dest[50];\n    // \u4f7f\u7528 memcpy \u590d\u5236\u5b57\u7b26\u4e32\n    memcpy(dest, src, strlen(src) + 1); // +1 \u662f\u4e3a\u4e86\u5305\u542b\u5b57\u7b26\u4e32\u7684\u7a7a\u7ec8\u6b62\u7b26 '\\0'\n    printf(\"Source: %s\\n\", src);\n    printf(\"Destination: %s\\n\", dest);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6e90\u5b57\u7b26\u4e32 <code>src</code> \u548c\u4e00\u4e2a\u76ee\u6807\u5b57\u7b26\u4e32\u6570\u7ec4 <code>dest</code>\u3002\u6211\u4eec\u4f7f\u7528 <code>memcpy</code> \u6765\u590d\u5236 <code>src</code> \u4e2d\u7684\u5185\u5bb9\u5230 <code>dest</code> \u4e2d\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4f20\u9012\u7ed9 <code>memcpy</code> \u7684\u5b57\u8282\u6570\u662f <code>strlen(src) + 1</code>\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u590d\u5236\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4ee5\u53ca\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u786e\u4fdd <code>dest</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u8db3\u591f\u5927\uff0c\u80fd\u591f\u5bb9\u7eb3\u4ece <code>src</code> \u590d\u5236\u8fc7\u6765\u7684 <code>n</code> \u4e2a\u5b57\u8282\uff0c\u4ee5\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u3002</li> <li><code>memcpy</code> \u4e0d\u4f1a\u68c0\u67e5\u6e90\u548c\u76ee\u6807\u5185\u5b58\u5757\u4e4b\u95f4\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5982\u679c\u5b58\u5728\u91cd\u53e0\uff0c\u5e94\u8be5\u4f7f\u7528 <code>memmove</code> \u51fd\u6570\uff0c\u5b83\u4f1a\u6b63\u786e\u5904\u7406\u91cd\u53e0\u533a\u57df\u7684\u590d\u5236\u3002</li> <li><code>memcpy</code> \u51fd\u6570\u4e0d\u4f1a\u5728\u76ee\u6807\u5185\u5b58\u5757\u540e\u6dfb\u52a0\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6b63\u5728\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u786e\u4fdd\u624b\u52a8\u590d\u5236\u7a7a\u7ec8\u6b62\u7b26\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#memmove","title":"memmove","text":"<p><code>memmove</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u4e00\u4e2a\u5757\u7684\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u5757\uff0c\u5373\u4f7f\u8fd9\u4e24\u4e2a\u5757\u6709\u91cd\u53e0\u4e5f\u662f\u5b89\u5168\u7684\u3002\u4ee5\u4e0b\u662f <code>memmove</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>void *memmove(void *dest, const void *src, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>dest</code>\uff1a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u590d\u5236\u7684\u6570\u636e\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u5730\u65b9\u3002</li> <li><code>src</code>\uff1a\u6307\u5411\u6e90\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u5373\u8981\u590d\u5236\u7684\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</li> <li><code>n</code>\uff1a\u8981\u590d\u5236\u7684\u5b57\u8282\u6570\u3002   <code>memmove</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5185\u5b58\u5757 <code>dest</code> \u7684\u6307\u9488\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memmove</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char buffer[50] = \"This is a string, and it will be modified.\";\n    // \u4f7f\u7528 memmove \u5728\u540c\u4e00\u5185\u5b58\u5757\u5185\u79fb\u52a8\u6570\u636e\n    memmove(buffer + 10, buffer + 15, 10); // \u5c06 \"and it\" \u79fb\u52a8\u5230 \"This is a \" \u4e4b\u540e\n    printf(\"Resulting string: %s\\n\", buffer);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 <code>buffer</code>\uff0c\u6211\u4eec\u4f7f\u7528 <code>memmove</code> \u6765\u5728\u6570\u7ec4\u5185\u90e8\u79fb\u52a8\u6570\u636e\u3002\u6211\u4eec\u79fb\u52a8\u4e86\u4ece\u7d22\u5f15 15 \u5f00\u59cb\u7684 10 \u4e2a\u5b57\u8282\uff08\u5373\u5b57\u7b26\u4e32 \"and it\"\uff09\u5230\u4ece\u7d22\u5f15 10 \u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u539f\u6765\u7684\u5b57\u7b26\u4e32 \"This is a string, and it will be modified.\" \u88ab\u4fee\u6539\u4e3a \"This is a and it string, will be modified.\"\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u4e0e <code>memcpy</code> \u4e0d\u540c\uff0c<code>memmove</code> \u80fd\u591f\u6b63\u786e\u5904\u7406\u6e90\u548c\u76ee\u6807\u5185\u5b58\u5757\u91cd\u53e0\u7684\u60c5\u51b5\u3002</li> <li>\u786e\u4fdd <code>dest</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u8db3\u591f\u5927\uff0c\u80fd\u591f\u5bb9\u7eb3\u4ece <code>src</code> \u590d\u5236\u8fc7\u6765\u7684 <code>n</code> \u4e2a\u5b57\u8282\uff0c\u4ee5\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u3002</li> <li><code>memmove</code> \u51fd\u6570\u4e0d\u4f1a\u5728\u76ee\u6807\u5185\u5b58\u5757\u540e\u6dfb\u52a0\u7a7a\u7ec8\u6b62\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6b63\u5728\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u786e\u4fdd\u624b\u52a8\u590d\u5236\u7a7a\u7ec8\u6b62\u7b26\uff0c\u6216\u8005\u5728\u79fb\u52a8\u540e\u624b\u52a8\u8bbe\u7f6e\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#memcmp","title":"memcmp","text":"<p><code>memcmp</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5185\u5b58\u5757\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u3002\u4ee5\u4e0b\u662f <code>memcmp</code> \u51fd\u6570\u7684\u539f\u578b\uff0c\u5b83\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\uff1a</p> C<pre><code>int memcmp(const void *s1, const void *s2, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s1</code>\uff1a\u6307\u5411\u7b2c\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>s2</code>\uff1a\u6307\u5411\u7b2c\u4e8c\u4e2a\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>n</code>\uff1a\u8981\u6bd4\u8f83\u7684\u5b57\u8282\u6570\u3002   <code>memcmp</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\uff0c\u5176\u7ed3\u679c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</li> <li>\u5982\u679c\u8fd4\u56de\u503c &lt; 0\uff0c\u5219\u8868\u793a <code>s1</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u5c0f\u4e8e <code>s2</code> \u6307\u5411\u7684\u5185\u5b58\u5757\uff08\u6309\u5b57\u8282\u6bd4\u8f83\uff09\u3002</li> <li>\u5982\u679c\u8fd4\u56de\u503c &gt; 0\uff0c\u5219\u8868\u793a <code>s1</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u5927\u4e8e <code>s2</code> \u6307\u5411\u7684\u5185\u5b58\u5757\u3002</li> <li>\u5982\u679c\u8fd4\u56de\u503c = 0\uff0c\u5219\u8868\u793a\u4e24\u4e2a\u5185\u5b58\u5757\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u76f8\u7b49\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memcmp</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char str1[] = \"Hello, World!\";\n    char str2[] = \"Hello, world!\";\n    size_t n = 12; // \u6bd4\u8f83\u524d12\u4e2a\u5b57\u8282\n    int result = memcmp(str1, str2, n);\n    if (result &lt; 0) {\n        printf(\"str1 is less than str2.\\n\");\n    } else if (result &gt; 0) {\n        printf(\"str1 is greater than str2.\\n\");\n    } else {\n        printf(\"str1 is equal to str2.\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u4e86 <code>str1</code> \u548c <code>str2</code> \u7684\u524d 12 \u4e2a\u5b57\u8282\u3002\u7531\u4e8e <code>str1</code> \u4e2d\u7684 \"World\" \u4e2d\u7684 \"W\" \u5927\u5199\uff0c\u800c <code>str2</code> \u4e2d\u7684 \"world\" \u4e2d\u7684 \"w\" \u5c0f\u5199\uff0c\u6bd4\u8f83\u7684\u7ed3\u679c\u662f <code>str1</code> \u5927\u4e8e <code>str2</code>\uff0c\u56e0\u6b64\u8f93\u51fa \"str1 is greater than str2.\"\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li><code>memcmp</code> \u6bd4\u8f83\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5b9e\u9645\u5b57\u8282\u503c\uff0c\u4e0d\u533a\u5206\u5b57\u7b26\u7684\u5927\u5c0f\u5199\u3002</li> <li>\u5982\u679c\u6bd4\u8f83\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u786e\u4fdd\u6bd4\u8f83\u7684\u5b57\u8282\u957f\u5ea6\u4e0d\u8d85\u8fc7\u5b57\u7b26\u4e32\u7684\u5b9e\u9645\u957f\u5ea6\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5230\u672a\u5b9a\u4e49\u7684\u5185\u5b58\u533a\u57df\u3002</li> <li>\u5f53\u6bd4\u8f83\u7684\u662f\u4ee5\u7a7a\u5b57\u7b26 <code>\\0</code> \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u901a\u5e38\u6bd4\u8f83\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u5373\u53ef\uff0c\u5373 <code>n</code> \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u7a7a\u7ec8\u6b62\u7b26\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#memchr","title":"memchr","text":"<p><code>memchr</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5728\u6307\u5b9a\u7684\u5185\u5b58\u5757\u4e2d\u67e5\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5b57\u7b26(\u53ea\u80fd\u67e5\u627e\u5355\u4e2a\u5b57\u7b26)\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f <code>memchr</code> \u51fd\u6570\u7684\u539f\u578b\uff1a</p> C<pre><code>void *memchr(const void *s, int c, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s</code>\uff1a\u6307\u5411\u8981\u641c\u7d22\u7684\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>c</code>\uff1a\u8981\u67e5\u627e\u7684\u5b57\u7b26\uff08\u4ee5 <code>int</code> \u7c7b\u578b\u4f20\u9012\uff0c\u4f46\u51fd\u6570\u5185\u90e8\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a <code>unsigned char</code>\uff09\u3002</li> <li><code>n</code>\uff1a\u8981\u5728\u5176\u4e2d\u641c\u7d22\u7684\u5185\u5b58\u5757\u7684\u5b57\u8282\u6570\u3002   \u5982\u679c <code>memchr</code> \u5728\u5185\u5b58\u5757\u4e2d\u627e\u5230\u4e86\u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u5b83\u4f1a\u8fd4\u56de\u6307\u5411\u8be5\u5b57\u7b26\u7684\u6307\u9488\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u51fd\u6570\u8fd4\u56de <code>NULL</code>\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memchr</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    const char str[] = \"Hello, World!\";\n    char to_find = 'W';\n    // \u5728 str \u4e2d\u67e5\u627e\u5b57\u7b26 'W'\n    void *ptr = memchr(str, to_find, strlen(str));\n    if (ptr != NULL) {\n        // \u627e\u5230\u4e86\u5b57\u7b26 'W'\n        printf(\"Found '%c' at position: %ld\\n\", to_find, (long)(ptr - str));\n    } else {\n        // \u6ca1\u6709\u627e\u5230\u5b57\u7b26 'W'\n        printf(\"Character '%c' not found.\\n\", to_find);\n    }\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 'W'\u3002\u5982\u679c\u627e\u5230\u4e86\uff0c<code>memchr</code> \u4f1a\u8fd4\u56de\u6307\u5411\u8be5\u5b57\u7b26\u7684\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51cf\u53bb\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u6307\u9488\u6765\u8ba1\u7b97\u5b57\u7b26\u7684\u4f4d\u7f6e\u3002 \u8f93\u51fa\u7ed3\u679c\u5c06\u662f\uff1a</p> Text Only<pre><code>Found 'W' at position: 7\n</code></pre> <p>\u8fd9\u91cc\u7684\u4f4d\u7f6e\u662f\u4ece 0 \u5f00\u59cb\u7684\u7d22\u5f15\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u8ba1\u7b97\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u5047\u8bbe <code>str</code> \u662f\u4e00\u4e2a\u4ee5 null \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14 <code>ptr</code> \u548c <code>str</code> \u90fd\u662f\u6307\u5411 <code>char</code> \u7c7b\u578b\u7684\u6307\u9488\u3002\u5982\u679c <code>str</code> \u662f\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f4d\u7f6e\u7684\u65b9\u5f0f\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#memset","title":"memset","text":"<p><code>memset</code> \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u7528\u4e8e\u5c06\u4e00\u6bb5\u5185\u5b58\u5757\u4e2d\u7684\u524d <code>n</code> \u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a\u7279\u5b9a\u7684\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002\u4ee5\u4e0b\u662f <code>memset</code> \u51fd\u6570\u7684\u539f\u578b\uff1a</p> C<pre><code>void *memset(void *s, int c, size_t n);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li><code>s</code>\uff1a\u6307\u5411\u8981\u8bbe\u7f6e\u503c\u7684\u5185\u5b58\u5757\u7684\u6307\u9488\u3002</li> <li><code>c</code>\uff1a\u8981\u8bbe\u7f6e\u7684\u503c\u3002\u8fd9\u4e2a\u503c\u4f1a\u88ab\u8f6c\u6362\u4e3a <code>unsigned char</code> \u7c7b\u578b\uff0c\u7136\u540e\u586b\u5145\u5230\u5185\u5b58\u5757\u4e2d\u3002</li> <li><code>n</code>\uff1a\u8981\u8bbe\u7f6e\u7684\u5185\u5b58\u5757\u7684\u5b57\u8282\u6570\u3002   <code>memset</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u88ab\u8bbe\u7f6e\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u901a\u5e38\u4e0e <code>s</code> \u76f8\u540c\u3002   \u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528 <code>memset</code> \u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char str[50] = \"This is a sample string.\";\n    // \u5c06\u5b57\u7b26\u4e32\u7684\u524d5\u4e2a\u5b57\u7b26\u8bbe\u7f6e\u4e3a\u5b57\u7b26 'X'\n    memset(str, 'X', 5);\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"Modified string: %s\\n\", str);\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>str</code> \u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u4f7f\u7528 <code>memset</code> \u5c06\u5b83\u7684\u524d 5 \u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a\u5b57\u7b26 'X'\u3002\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\uff1a</p> Text Only<pre><code>Modified string: XXXXX is a sample string.\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li><code>memset</code> \u7528\u4e8e\u8bbe\u7f6e\u5b57\u8282\uff0c\u800c\u4e0d\u662f\u8bbe\u7f6e\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff08\u5982 int\u3001float \u7b49\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528 <code>memset</code> \u8bbe\u7f6e\u975e\u5b57\u7b26\u7c7b\u578b\u7684\u6570\u636e\u65f6\uff0c\u9700\u8981\u8c28\u614e\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u9884\u671f\u7684\u7ed3\u679c\u3002</li> <li>\u5f53 <code>c</code> \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\uff08\u5373 <code>char</code> \u7c7b\u578b\uff09\u65f6\uff0c\u53ea\u6709 <code>c</code> \u7684\u6700\u4f4e\u5b57\u8282\u4f1a\u88ab\u7528\u6765\u586b\u5145\u5185\u5b58\uff0c\u5176\u4ed6\u5b57\u8282\u4f1a\u88ab\u5ffd\u7565\u3002</li> <li>\u5982\u679c <code>s</code> \u662f\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u4f53\u6216\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u4f7f\u7528 <code>memset</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ed3\u6784\u4f53\u6216\u5bf9\u8c61\u7684\u6210\u5458\u88ab\u9519\u8bef\u5730\u521d\u59cb\u5316\uff0c\u7279\u522b\u662f\u5982\u679c\u6210\u5458\u7684\u5927\u5c0f\u4e0d\u662f 1 \u5b57\u8282\u65f6\u3002</li> <li><code>memset</code> \u4e0d\u4f1a\u81ea\u52a8\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u7a7a\u5b57\u7b26 <code>\\0</code>\uff0c\u6240\u4ee5\u5f53\u7528\u4e8e\u5b57\u7b26\u4e32\u65f6\uff0c\u5e94\u786e\u4fdd\u4e0d\u4f1a\u8986\u76d6\u7ed3\u5c3e\u7684\u7a7a\u5b57\u7b26\uff0c\u9664\u975e\u6709\u610f\u8fd9\u6837\u505a\u3002</li> </ul> <p>\u4ee5\u4e0b\u662f 17 \u4e2a\u4ee5 <code>str</code> \u5f00\u5934\u7684\u51fd\u6570\u7684\u4ecb\u7ecd\u3001\u4f5c\u7528\u3001\u8fd4\u56de\u503c\u3001\u4f7f\u7528\u8bed\u53e5\u548c\u7b80\u5355\u89e3\u91ca\uff1a</p> <ol> <li> <p>strcpy(dest, src);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u590d\u5236\u5b57\u7b26\u4e32 <code>src</code> \u5230 <code>dest</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strcpy(buffer, \"Hello\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u590d\u5236\u5230 <code>buffer</code> \u4e2d\u3002</p> </li> <li> <p>strncpy(dest, src, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u590d\u5236 <code>src</code> \u4e2d\u7684\u6700\u591a <code>n</code> \u4e2a\u5b57\u7b26\u5230 <code>dest</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strncpy(buffer, \"Hello\", 4);</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u7684\u524d 4 \u4e2a\u5b57\u7b26\u590d\u5236\u5230 <code>buffer</code> \u4e2d\u3002</p> </li> <li> <p>strcat(dest, src);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06\u5b57\u7b26\u4e32 <code>src</code> \u8fde\u63a5\u5230 <code>dest</code> \u7684\u672b\u5c3e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strcat(buffer, \" World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\" World\"</code> \u8fde\u63a5\u5230 <code>buffer</code> \u7684\u672b\u5c3e\u3002</p> </li> <li> <p>strncat(dest, src, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06 <code>src</code> \u4e2d\u7684\u6700\u591a <code>n</code> \u4e2a\u5b57\u7b26\u8fde\u63a5\u5230 <code>dest</code> \u7684\u672b\u5c3e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>dest</code> \u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>strncat(buffer, \"World\", 3);</code></li> <li> <p>\u89e3\u91ca\uff1a\u5c06\u5b57\u7b26\u4e32 <code>\"World\"</code> \u7684\u524d 3 \u4e2a\u5b57\u7b26\u8fde\u63a5\u5230 <code>buffer</code> \u7684\u672b\u5c3e\u3002</p> </li> <li> <p>strcmp(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u5982\u679c <code>str1</code> \u5c0f\u4e8e <code>str2</code> \u8fd4\u56de\u8d1f\u6570\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de 0\uff0c\u5982\u679c <code>str1</code> \u5927\u4e8e <code>str2</code> \u8fd4\u56de\u6b63\u6570\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strcmp(\"abc\", \"abd\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"abc\"</code> \u548c <code>\"abd\"</code>\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strncmp(str1, str2, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strncmp(\"abc\", \"abd\", 2);</code></li> <li> <p>\u89e3\u91ca\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"abc\"</code> \u548c <code>\"abd\"</code> \u7684\u524d 2 \u4e2a\u5b57\u7b26\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strcasecmp(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strcasecmp(\"Hello\", \"hello\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u548c <code>\"hello\"</code>\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strncasecmp(str1, str2, n);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>str1</code> \u548c <code>str2</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strcmp</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>int result = strncasecmp(\"Hello\", \"help\", 3);</code></li> <li> <p>\u89e3\u91ca\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5730\u6bd4\u8f83\u5b57\u7b26\u4e32 <code>\"Hello\"</code> \u548c <code>\"help\"</code> \u7684\u524d 3 \u4e2a\u5b57\u7b26\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>result</code> \u4e2d\u3002</p> </li> <li> <p>strchr(str, c);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>c</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u5b57\u7b26 <code>c</code> \u7684\u6307\u9488\uff0c\u5982\u679c\u672a\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strchr(\"example\", 'e');</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"example\"</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>'e'</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strrchr(str, c);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>c</code> \u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u540c <code>strchr</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strrchr(\"example\", 'e');</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"example\"</code> \u4e2d\u67e5\u627e\u5b57\u7b26 <code>'e'</code> \u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strstr(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32 <code>str2</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u5b50\u5b57\u7b26\u4e32 <code>str2</code> \u7684\u6307\u9488\uff0c\u5982\u679c\u672a\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strstr(\"Hello World\", \"World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"Hello World\"</code> \u4e2d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32 <code>\"World\"</code> \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002   \u4ee5\u4e0b\u662f\u7b2c 12 \u5230\u7b2c 17 \u4e2a\u4ee5 <code>str</code> \u5f00\u5934\u7684\u51fd\u6570\u7684\u4ecb\u7ecd\u3001\u4f5c\u7528\u3001\u8fd4\u56de\u503c\u3001\u4f7f\u7528\u8bed\u53e5\u548c\u7b80\u5355\u89e3\u91ca\uff1a</p> </li> <li> <p>strtok(str, delim);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06\u5b57\u7b26\u4e32 <code>str</code> \u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u6807\u8bb0\uff0c<code>delim</code> \u662f\u5206\u9694\u7b26\u5b57\u7b26\u4e32\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411\u4e0b\u4e00\u4e2a\u6807\u8bb0\u7684\u6307\u9488\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u591a\u6807\u8bb0\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *token = strtok(buffer, \" ,\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728 <code>buffer</code> \u4e2d\u67e5\u627e\u7531\u7a7a\u683c\u6216\u9017\u53f7\u5206\u9694\u7684\u4e0b\u4e00\u4e2a\u6807\u8bb0\uff0c\u5e76\u5c06\u5176\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>token</code> \u4e2d\u3002</p> </li> <li> <p>strlen(str);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>str</code> \u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u672b\u5c3e\u7684\u7a7a\u5b57\u7b26 <code>\\0</code>\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32 <code>str</code> \u7684\u957f\u5ea6\uff0c\u7c7b\u578b\u4e3a <code>size_t</code>\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strlen(\"Hello World\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"Hello World\"</code> \u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 <code>length</code>\u3002</p> </li> <li> <p>strerror(errnum);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u6839\u636e\u9519\u8bef\u7f16\u53f7 <code>errnum</code> \u8fd4\u56de\u4e00\u4e2a\u63cf\u8ff0\u9519\u8bef\u7684\u5b57\u7b26\u4e32\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u9519\u8bef\u63cf\u8ff0\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *error = strerror(errno);</code></li> <li> <p>\u89e3\u91ca\uff1a\u83b7\u53d6\u4e0e <code>errno</code> \u76f8\u5173\u7684\u9519\u8bef\u63cf\u8ff0\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728 <code>error</code> \u4e2d\u3002</p> </li> <li> <p>strpbrk(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6307\u5411 <code>str1</code> \u4e2d\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u7684\u6307\u9488\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56de NULL\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>char *pos = strpbrk(\"hello\", \"aeiou\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u5728\u5b57\u7b26\u4e32 <code>\"hello\"</code> \u4e2d\u67e5\u627e <code>\"aeiou\"</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f4d\u7f6e\u5b58\u50a8\u5728 <code>pos</code> \u4e2d\u3002</p> </li> <li> <p>strcspn(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u5728\u5b57\u7b26\u4e32 <code>str1</code> \u4e2d\u67e5\u627e <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u90e8\u5206\u7684\u957f\u5ea6\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>str1</code> \u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d <code>str2</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strcspn(\"hello\", \"aeiou\");</code></li> <li> <p>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"hello\"</code> \u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0 <code>\"aeiou\"</code> \u4e2d\u4efb\u4e00\u5b57\u7b26\u4e4b\u524d\u7684\u5b57\u7b26\u6570\u3002</p> </li> <li> <p>strspn(str1, str2);</p> </li> <li> <p>\u4f5c\u7528\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>str1</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>str2</code> \u4e2d\u5b57\u7b26\u7684\u957f\u5ea6\u3002</p> </li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de <code>str1</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>str2</code> \u4e2d\u5b57\u7b26\u7684\u957f\u5ea6\u3002</li> <li>\u4f7f\u7528\u8bed\u53e5\uff1a<code>size_t length = strspn(\"123abc\", \"1234567890\");</code></li> <li>\u89e3\u91ca\uff1a\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>\"123abc\"</code> \u5f00\u5934\u8fde\u7eed\u5305\u542b <code>\"1234567890\"</code> \u4e2d\u6570\u5b57\u7684\u957f\u5ea6\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_43","title":"\u57fa\u7840\u7684\u4e1c\u897f","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u7528 do while \u800c\u4e0d\u662f\u76f4\u63a5\u52a0{}\uff1f \u4f7f\u7528 <code>do { ... } while(0)</code> \u800c\u4e0d\u662f\u76f4\u63a5\u52a0 <code>{}</code> \u6765\u5b9a\u4e49\u5b8f\u7684\u539f\u56e0\u6709\u51e0\u4e2a\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u786e\u4fdd\u5b8f\u7684\u4f7f\u7528\u66f4\u52a0\u5b89\u5168\u548c\u7075\u6d3b\uff1a</p> <ol> <li> <p>\u8bed\u53e5\u8fb9\u754c\uff1a</p> </li> <li> <p>\u5982\u679c\u76f4\u63a5\u4f7f\u7528 <code>{}</code> \u5b9a\u4e49\u5b8f\uff0c\u90a3\u4e48\u5b8f\u5c55\u5f00\u540e\u53ef\u80fd\u4f1a\u7834\u574f\u539f\u6709\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u5c24\u5176\u662f\u5728\u5b8f\u9700\u8981\u4f5c\u4e3a\u6761\u4ef6\u8bed\u53e5\uff08\u5982 <code>if</code>\u3001<code>while</code>\u3001<code>for</code>\uff09\u7684\u4e00\u90e8\u5206\u65f6\u3002\u4f8b\u5982\uff1a      C<pre><code>if (condition)\n    MACRO(x, y);\n</code></pre>      \u5982\u679c <code>MACRO</code> \u53ea\u662f\u7b80\u5355\u5730\u7528 <code>{ ... }</code> \u5b9a\u4e49\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u4e0e <code>if</code> \u8bed\u53e5\u7684\u8bed\u6cd5\u51b2\u7a81\uff0c\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002</p> </li> <li> <p>\u591a\u6761\u8bed\u53e5\uff1a</p> </li> <li> <p>\u5982\u679c\u5b8f\u5305\u542b\u591a\u6761\u8bed\u53e5\uff0c\u76f4\u63a5\u4f7f\u7528 <code>{}</code> \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u8bed\u53e5\u610f\u5916\u5730\u6210\u4e3a\u66f4\u5927\u7684\u4ee3\u7801\u5757\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u903b\u8f91\u9519\u8bef\u6216\u7f16\u8bd1\u9519\u8bef\u3002</p> </li> <li> <p>\u53ef\u9884\u6d4b\u6027\uff1a</p> </li> <li> <p><code>do { ... } while(0)</code> \u7ed3\u6784\u786e\u4fdd\u5b8f\u603b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u51fa\u73b0\uff0c\u65e0\u8bba\u5b83\u5728\u54ea\u91cc\u88ab\u4f7f\u7528\u3002\u8fd9\u610f\u5473\u7740\u5b8f\u7684\u4f7f\u7528\u4e0d\u4f1a\u5f71\u54cd\u5468\u56f4\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u63d0\u9ad8\u4e86\u5b8f\u7684\u53ef\u9884\u6d4b\u6027\u548c\u5b89\u5168\u6027\u3002</p> </li> <li> <p>\u907f\u514d\u60ac\u6302\u7684 else \u95ee\u9898\uff1a</p> </li> <li> <p>\u5982\u679c\u5b8f\u5c55\u5f00\u4e3a\u591a\u4e2a\u8bed\u53e5\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8bed\u53e5\u5305\u62ec <code>if</code> \u6761\u4ef6\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u9047\u5230\u201c\u60ac\u6302\u7684 else\u201d\u95ee\u9898\u3002\u4f8b\u5982\uff1a      C<pre><code>if (condition)\n    MACRO(x, y);\nelse\n    do_something_else();\n</code></pre>      \u5982\u679c <code>MACRO</code> \u5305\u542b\u591a\u4e2a\u8bed\u53e5\uff0c\u90a3\u4e48 <code>else</code> \u53ef\u80fd\u4f1a\u4e0e\u5b8f\u5185\u90e8\u7684 <code>if</code> \u800c\u4e0d\u662f\u5916\u90e8\u7684 <code>if</code> \u914d\u5bf9\uff0c\u5bfc\u81f4\u903b\u8f91\u9519\u8bef\u3002</p> </li> <li> <p>\u4ee3\u7801\u6e05\u6670\uff1a</p> </li> <li>\u4f7f\u7528 <code>do { ... } while(0)</code> \u53ef\u4ee5\u6e05\u695a\u5730\u8868\u660e\u5b8f\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u5757\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u3002</li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c<code>do { ... } while(0)</code> \u662f\u4e00\u79cd\u5e38\u7528\u7684\u5b8f\u5b9a\u4e49\u6280\u5de7\uff0c\u5b83\u786e\u4fdd\u5b8f\u5728\u4f7f\u7528\u65f6\u603b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8bed\u53e5\u6267\u884c\uff0c\u907f\u514d\u4e86\u4e0a\u8ff0\u95ee\u9898\uff0c\u5e76\u4e14\u4f7f\u5f97\u5b8f\u7684\u884c\u4e3a\u66f4\u52a0\u53ef\u9884\u6d4b\u548c\u5b89\u5168\u3002</p> <p>C \u8bed\u8a00\u4e2d\uff0c\u7f16\u8bd1\u9884\u5904\u7406\u540e\uff0c\u6240\u6709\u7684\u7b26\u53f7\u5e38\u91cf\u540d\u548c\u5b8f\u540d\u90fd\u7528\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u3002\u5bf9\u5417\uff1f \u8fd9\u4e2a\u8bf4\u6cd5\u4e0d\u5b8c\u5168\u6b63\u786e\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u7f16\u8bd1\u9884\u5904\u7406\u9636\u6bb5\u786e\u5b9e\u4f1a\u5904\u7406\u7b26\u53f7\u5e38\u91cf\u548c\u5b8f\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u662f\u88ab\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u88ab\u66ff\u6362\u4e3a\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u503c\u6216\u5b9a\u4e49\u7684\u4ee3\u7801\u3002</p> <p>\u5b8f\u5b9a\u4e49\u4e0d\u5b58\u5728\u7c7b\u578b\u95ee\u9898\uff0c\u5b8f\u540d\u65e0\u7c7b\u578b\uff0c\u5b83\u7684\u53c2\u6570\u4e5f\u65e0\u7c7b\u578b\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u548c\u5b8f\u53c2\u6570\u786e\u5b9e\u6ca1\u6709\u7c7b\u578b\u7684\u6982\u5ff5\uff1a</p> <ol> <li> <p>\u5b8f\u540d\u65e0\u7c7b\u578b\uff1a</p> </li> <li> <p>\u5b8f\u540d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u5b83\u5728\u9884\u5904\u7406\u9636\u6bb5\u88ab\u66ff\u6362\u4e3a\u5b8f\u5b9a\u4e49\u4e2d\u6307\u5b9a\u7684\u4ee3\u7801\u3002\u5b8f\u540d\u4e0d\u6d89\u53ca\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7b26\u53f7\uff0c\u7528\u6765\u6307\u793a\u9884\u5904\u7406\u5668\u5728\u54ea\u91cc\u8fdb\u884c\u6587\u672c\u66ff\u6362\u3002</p> </li> <li> <p>\u5b8f\u53c2\u6570\u65e0\u7c7b\u578b\uff1a</p> </li> <li>\u5b8f\u53c2\u6570\u5728\u5b8f\u5b9a\u4e49\u4e2d\u51fa\u73b0\u65f6\uff0c\u5b83\u4eec\u662f\u4f5c\u4e3a\u666e\u901a\u6807\u8bc6\u7b26\u5904\u7406\u7684\u3002\u9884\u5904\u7406\u5668\u5728\u5c55\u5f00\u5b8f\u65f6\uff0c\u4f1a\u5c06\u5b8f\u53c2\u6570\u66ff\u6362\u4e3a\u5b83\u4eec\u5728\u5b8f\u8c03\u7528\u4e2d\u5bf9\u5e94\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u4e2a\u66ff\u6362\u8fc7\u7a0b\u4e0d\u8003\u8651\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u5b83\u53ea\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\u3002\u56e0\u6b64\uff0c\u5b8f\u53c2\u6570\u6ca1\u6709\u7c7b\u578b\uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u662f\u5728\u5b8f\u5c55\u5f00\u540e\u7684\u4ee3\u7801\u4e2d\u7531\u7f16\u8bd1\u5668\u6839\u636e\u4e0a\u4e0b\u6587\u786e\u5b9a\u7684\u3002</li> </ol> <p>\u7531\u4e8e\u5b8f\u7684\u8fd9\u79cd\u65e0\u7c7b\u578b\u7279\u6027\uff0c\u4f7f\u7528\u5b8f\u65f6\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u7c7b\u578b\u5b89\u5168\u548c\u5b8f\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u95ee\u9898\u3002</p> <p>C \u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5c40\u90e8\u53d8\u91cf\u662f\u6307\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u53ea\u5728\u5b9a\u4e49\u5b83\u4eec\u7684\u51fd\u6570\u5185\u90e8\u53ef\u89c1\u548c\u53ef\u7528\u3002\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5728\u51fd\u6570\u5916\u90e8\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u4e5f\u65e0\u6cd5\u88ab\u8bbf\u95ee\u3002</p> <p>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u8d4b\u503c\uff0c\u5176\u5b58\u50a8\u5355\u5143\u4e2d\u5c06\u662f\u968f\u673a\u503c\u3002\u5bf9\u5417\uff1f \u4e0d\u5bf9\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08\u5373\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528 <code>static</code> \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff09\u5373\u4f7f\u6ca1\u6709\u663e\u5f0f\u8d4b\u503c\uff0c\u5b83\u4eec\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u4e5f\u4e0d\u4f1a\u662f\u968f\u673a\u503c\u3002\u76f8\u53cd\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\uff08\u5bf9\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff09\u3002\u8fd9\u662f C \u6807\u51c6\u89c4\u5b9a\u7684\u3002</p> <p>\u8fd9\u79cd\u521d\u59cb\u5316\u884c\u4e3a\u9002\u7528\u4e8e\u6240\u6709\u9759\u6001\u5b58\u50a8\u671f\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u5168\u5c40\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u3002\u5bf9\u4e8e\u975e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4f53\u3001\u6570\u7ec4\u7b49\uff09\uff0c\u5982\u679c\u5b83\u4eec\u4e0d\u662f\u6307\u5411\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6\u7684\u7c7b\u578b\uff0c\u5219\u9700\u8981\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5426\u5219\u5b83\u4eec\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid function() {\n    static int value;  // \u6ca1\u6709\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5c06\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\n    printf(\"%d\\n\", value);  // \u8f93\u51fa\u5c06\u4e3a0\n}\n\nint main() {\n    function();  // \u8f93\u51fa0\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f <code>value</code> \u6ca1\u6709\u88ab\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5b83\u4e5f\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316\u4e3a 0\uff0c\u56e0\u4e3a <code>value</code> \u662f\u4e00\u4e2a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u3002\u6bcf\u6b21\u8c03\u7528 <code>function</code> \u65f6\uff0c<code>value</code> \u7684\u503c\u90fd\u4f1a\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u9759\u6001\u5b58\u50a8\u671f\u3002\u5982\u679c <code>value</code> \u662f\u4e00\u4e2a\u975e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u4e00\u4e2a\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5bb9\u5c06\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u9664\u975e\u663e\u5f0f\u521d\u59cb\u5316\u3002</p> <p>C \u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u9759\u6001\u53d8\u91cf\u5b58\u653e\u5728\u6808\u533a\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u4f4d\u4e8e\u5806\u533a\u3002\u5bf9\u5417\uff1f \u4e0d\u5bf9\uff0c\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u9759\u6001\u53d8\u91cf\uff08\u5305\u62ec\u5168\u5c40\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u5e76\u4e0d\u5b58\u653e\u5728\u6808\u533a\uff0c\u800c\u662f\u5b58\u653e\u5728\u9759\u6001\u5b58\u50a8\u533a\uff08\u4e5f\u79f0\u4e3a\u5168\u5c40\u6570\u636e\u533a\uff09\u3002\u9759\u6001\u5b58\u50a8\u533a\u662f\u7a0b\u5e8f\u5185\u5b58\u4e2d\u4e13\u95e8\u7528\u4e8e\u5b58\u50a8\u9759\u6001\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u7684\u533a\u57df\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u786e\u5b9e\u4f4d\u4e8e\u5806\u533a\u3002\u5806\u533a\u662f\u7a0b\u5e8f\u5185\u5b58\u4e2d\u7528\u4e8e\u52a8\u6001\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u7684\u533a\u57df\u3002\u901a\u8fc7\u4f7f\u7528 malloc\u3001calloc\u3001realloc \u7b49\u51fd\u6570\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7533\u8bf7\u548c\u91ca\u653e\u5806\u533a\u7684\u5185\u5b58\u3002</p> <p>\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4e3a\u5176\u6240\u5728\u7684\u6574\u4e2a\u6587\u4ef6\u8303\u56f4\u3002\u5bf9\u5417\uff1f</p> <p>\u5168\u5c40\u53d8\u91cf\u5fc5\u987b\u5728\u51fd\u6570\u4e4b\u5916\u8fdb\u884c\u5b9a\u4e49\u3002\u5bf9\u5417\uff1f \u662f\u7684\uff0c\u60a8\u7684\u7406\u89e3\u662f\u6b63\u786e\u7684\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5fc5\u987b\u5728\u51fd\u6570\u4e4b\u5916\u8fdb\u884c\u5b9a\u4e49\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5fc5\u987b\u5728\u4efb\u4f55\u51fd\u6570\u5b9a\u4e49\u4e4b\u5916\u7684\u4ee3\u7801\u533a\u57df\u4e2d\u58f0\u660e\u548c\u521d\u59cb\u5316\u3002\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u6587\u4ef6\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u8be5\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u51fd\u6570\u8bbf\u95ee\u548c\u4fee\u6539\u3002</p> <p>\u51e1\u662f\u51fd\u6570\u4e2d\u672a\u6307\u5b9a\u5b58\u50a8\u7c7b\u522b\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u9690\u542b\u7684\u5b58\u50a8\u7c7b\u578b\u4e3a( )\u3002 \u81ea\u52a8\u7c7b\u578b(auto)</p> <p>\u5404\u79cd\u7c7b\u578b\u53d8\u91cf\u7684\u751f\u5b58\u671f\u548c\u4f5c\u7528\u57df\u662f\u4ec0\u4e48?</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#automatic-variable","title":"\u81ea\u52a8\u53d8\u91cf\uff08Automatic Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u81ea\u52a8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u671f\u95f4\u5b58\u5728\u3002\u5f53\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u4f1a\u88ab\u91ca\u653e\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u81ea\u52a8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u53ef\u89c1\u3002\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u81ea\u52a8\u53d8\u91cf\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#static-variable","title":"\u9759\u6001\u53d8\u91cf\uff08Static Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u9759\u6001\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5168\u5c40\u7684\uff0c\u4ece\u58f0\u660e\u65f6\u5f00\u59cb\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\u5373\u4f7f\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u7ed3\u675f\u540e\uff0c\u9759\u6001\u53d8\u91cf\u4ecd\u7136\u5b58\u5728\uff0c\u5176\u503c\u4e0d\u4f1a\u4e22\u5931\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u9759\u6001\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5c40\u90e8\u7684\uff0c\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u53ef\u89c1\u3002\u4e0d\u540c\u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#external-variable","title":"\u5916\u90e8\u53d8\u91cf\uff08External Variable\uff09","text":"<ul> <li>\u751f\u5b58\u671f\uff1a\u5916\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5168\u5c40\u7684\uff0c\u4ece\u58f0\u660e\u65f6\u5f00\u59cb\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002\u5b83\u4eec\u5728\u6574\u4e2a\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u5185\u90fd\u5b58\u5728\u3002</li> <li>\u4f5c\u7528\u57df\uff1a\u5916\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u5168\u5c40\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u6587\u4ef6\u6216\u51fd\u6570\u4e4b\u95f4\u5171\u4eab\u3002\u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u58f0\u660e\u4e86\u540c\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\uff08\u4f7f\u7528 <code>extern</code> \u5173\u952e\u5b57\uff09\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u6307\u5411\u540c\u4e00\u4e2a\u53d8\u91cf\u3002</li> </ul> <p>\u8fd9\u4e9b\u7279\u6027\u4f7f\u5f97\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u7f16\u7a0b\u573a\u666f\u3002\u4f8b\u5982\uff0c\u81ea\u52a8\u53d8\u91cf\u9002\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u6570\u636e\uff0c\u9759\u6001\u53d8\u91cf\u9002\u7528\u4e8e\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u4fdd\u6301\u72b6\u6001\uff0c\u800c\u5916\u90e8\u53d8\u91cf\u9002\u7528\u4e8e\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</p> <p>\u7f16\u8bd1,\u94fe\u63a5\u5206\u522b\u662f\u5e72\u4ec0\u4e48\u7684? \u7f16\u8bd1\uff08Compilation\uff09\u548c\u94fe\u63a5\uff08Linking\uff09\u662f\u5c06\u6e90\u4ee3\u7801\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u4e24\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_44","title":"\u7f16\u8bd1","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\u8f6c\u6362\u6210\u673a\u5668\u4ee3\u7801\u6587\u4ef6\uff08\u901a\u5e38\u662f\u76ee\u6807\u6587\u4ef6\uff0c\u5982 <code>.o</code> \u6587\u4ef6\uff09\u3002</li> <li>\u8fc7\u7a0b\uff1a</li> <li>\u9884\u5904\u7406\uff1a\u5904\u7406\u6e90\u4ee3\u7801\u4e2d\u7684\u5b8f\u5b9a\u4e49\u3001\u6587\u4ef6\u5305\u542b\u6307\u4ee4\u7b49\u3002\u4f8b\u5982\uff0c\u5c55\u5f00 <code>#include</code> \u6307\u4ee4\uff0c\u5c06\u5305\u542b\u7684\u5934\u6587\u4ef6\u5185\u5bb9\u63d2\u5165\u5230\u6e90\u6587\u4ef6\u4e2d\u3002</li> <li>\u8bed\u6cd5\u5206\u6790\uff1a\u68c0\u67e5\u6e90\u4ee3\u7801\u7684\u8bed\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u751f\u6210\u8bed\u6cd5\u6811\u3002</li> <li>\u8bed\u4e49\u5206\u6790\uff1a\u68c0\u67e5\u8bed\u6cd5\u6811\u4e2d\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff0c\u4f8b\u5982\u7c7b\u578b\u68c0\u67e5\u3002</li> <li>\u4f18\u5316\uff1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002</li> <li>\u4ee3\u7801\u751f\u6210\uff1a\u5c06\u4f18\u5316\u540e\u7684\u4ee3\u7801\u8f6c\u6362\u6210\u76ee\u6807\u4ee3\u7801\uff08\u673a\u5668\u4ee3\u7801\uff09\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_45","title":"\u94fe\u63a5","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u7ec4\u5408\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li>\u8fc7\u7a0b\uff1a</li> <li>\u7b26\u53f7\u89e3\u6790\uff1a\u89e3\u6790\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u5f15\u7528\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7b26\u53f7\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5b9a\u4e49\u3002</li> <li>\u91cd\u5b9a\u4f4d\uff1a\u8c03\u6574\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u5730\u5740\uff0c\u4f7f\u5176\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u6b63\u786e\u5730\u5b9a\u4f4d\u3002</li> <li>\u5408\u5e76\uff1a\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u5408\u5e76\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_46","title":"\u4e3e\u4f8b\u8bf4\u660e","text":"<p>\u5047\u8bbe\u4f60\u6709\u4e24\u4e2a\u6e90\u6587\u4ef6 <code>file1.c</code> \u548c <code>file2.c</code>\uff0c\u5b83\u4eec\u5206\u522b\u5305\u542b\u4e00\u4e9b\u51fd\u6570\u5b9a\u4e49\u548c\u8c03\u7528\u3002\u7f16\u8bd1\u5668\u4f1a\u5206\u522b\u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 <code>file1.o</code> \u548c <code>file2.o</code>\u3002\u7136\u540e\uff0c\u94fe\u63a5\u5668\u4f1a\u5c06\u8fd9\u4e24\u4e2a\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u8d77\u6765\uff0c\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 <code>a.out</code> \u6216\u5176\u4ed6\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u3002\u5982\u679c\u5728\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u67d0\u4e2a\u51fd\u6570\u6216\u53d8\u91cf\u5728\u6240\u6709\u76ee\u6807\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u4e2d\u90fd\u6ca1\u6709\u5b9a\u4e49\uff0c\u5c31\u4f1a\u62a5\u94fe\u63a5\u9519\u8bef\u3002</p> <p>C \u8bed\u8a00\u7684\u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u5316\u662f\u5728\u54ea\u4e2a\u9636\u6bb5\u5b8c\u6210\u7684 \u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u5316\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u5b8c\u6210\u7684\uff0c\u5373\u5728 main() \u51fd\u6570\u5f00\u59cb\u4e4b\u524d\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u52a0\u8f7d\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u6839\u636e\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5728\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u8fdb\u5165 main() \u51fd\u6570\u4e4b\u524d\u5b8c\u6210\u7684\u3002</p> <p>\u53ef\u6267\u884c\u6587\u4ef6\u662f\u4ec0\u4e48\uff1f \u53ef\u6267\u884c\u6587\u4ef6\uff08Executable File\uff09\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u673a\u5668\u4ee3\u7801\u7684\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u4e9b\u5173\u952e\u70b9\uff1a</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_47","title":"\u7ec4\u6210","text":"<ul> <li>\u673a\u5668\u4ee3\u7801\uff1a\u53ef\u6267\u884c\u6587\u4ef6\u5305\u542b\u4e86\u7f16\u8bd1\u540e\u7684\u673a\u5668\u4ee3\u7801\uff0c\u8fd9\u662f CPU \u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u7684\u6307\u4ee4\u3002</li> <li>\u6570\u636e\uff1a\u5305\u62ec\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u503c\u3002</li> <li>\u5143\u6570\u636e\uff1a\u5982\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff08\u901a\u5e38\u662f <code>main()</code> \u51fd\u6570\u7684\u5730\u5740\uff09\u3001\u7a0b\u5e8f\u9700\u8981\u7684\u52a8\u6001\u5e93\u4fe1\u606f\u7b49\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_48","title":"\u52a0\u8f7d\u548c\u6267\u884c","text":"<ul> <li>\u52a0\u8f7d\uff1a\u5f53\u7528\u6237\u542f\u52a8\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u5176\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5305\u62ec\u5206\u914d\u5185\u5b58\u3001\u5c06\u673a\u5668\u4ee3\u7801\u548c\u6570\u636e\u4ece\u6587\u4ef6\u590d\u5236\u5230\u5185\u5b58\u7b49\u3002</li> <li>\u6267\u884c\uff1a\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff08\u901a\u5e38\u662f <code>main()</code> \u51fd\u6570\uff09\uff0c\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_49","title":"\u793a\u4f8b","text":"<ul> <li>Windows\uff1a\u7528\u6237\u53ef\u4ee5\u53cc\u51fb <code>.exe</code> \u6587\u4ef6\u6765\u8fd0\u884c\u7a0b\u5e8f\u3002</li> <li>Linux/macOS\uff1a\u7528\u6237\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u76f4\u63a5\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5982 <code>./program</code>\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/#_50","title":"\u51fd\u6570\u6307\u9488","text":"<p>C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\nint main()\n{\n    double t1 , t2;\n    double (*p)(double); //\u5b9a\u4e49\u51fd\u6570\u6307\u9488,\u4f20\u5165double,\u8f93\u51fadouble\n    p=sin;\n    p=(double (*)(double))sin; //\u5f3a\u5236\u8f6c\u6362:\u590d\u5236\u53d8\u91cf\u7684\u5b9a\u4e49,\u53bb\u6389\u53d8\u91cf\n    t=sin(0.5);\n    t2=(*p)sin(0.5);\n    printf(\"%lf %lf\",t1,t2);\n}\n</code></pre> \u51fd\u6570\u6307\u9488\u6709\u4ec0\u4e48\u7528? - \u4e00\u4e2a\u6570\u7ec4,\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u4e0d\u540c\u51fd\u6570,\u53ef\u4ee5\u521b\u5efa\u51fd\u6570\u6307\u9488\u7684\u6570\u7ec4. C<pre><code>struct node\n{\n    float data;\n    float (*p)(float);\n} a[20] ;\n//\u4f7f\u7528\u65f6:(*(a[i].p))(a[i].data);\n</code></pre> - \u5bf9\u4e0d\u540c\u51fd\u6570\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c,\u901a\u8fc7\u6539\u53d8\u51fd\u6570\u6307\u9488\u5feb\u901f\u4fee\u6539. C<pre><code>//\u5b9a\u4e49\u51fd\u6570\ndouble froot(int a,int b,double (*p)(double));\n//\u8c03\u7528\ndouble t=froot(1,2,sin);\n</code></pre> </p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/0.%20%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/","title":"0. \u6570\u636e\u7ed3\u6784\u590d\u4e60","text":"<p>\u70b9\u51fb\u4e0b\u8f7d\u201c\u6570\u636e\u7ed3\u6784\u590d\u4e60\uff082016\u5e74\u4e0b\uff09.doc\u201d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/","title":"1. \u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/#class-one","title":"Class One","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/1.%20%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(f(n))\\):\u4e0a\u754c \\(\\Omega(f(n))\\):\u4e0b\u754c \\(\\Theta(f(n))\\):\u6700\u597d\u6700\u574f\u60c5\u51b5\u7684\u5e73\u5747   \\(o(f(n))\\):\u771f\u4e0a\u754c(\u6700\u574f\u60c5\u51b5\u4e0b\u4e0a\u754c)  </p> <p>nlogn \u63a8\u5bfc: \uff08\u8fd9\u4e00\u6bb5\u663e\u793a\u653e\u5f03\u4fee\u6539\u4e86\u3002\u3002\uff09 \\(\\(\\begin{aligned} T(n) &amp;= 2T\\left(\\frac{n}{2}\\right) + Cn \\\\[1.5ex] T(\\frac{n}{2}) &amp;= 2T(\\frac{n}{4}) + Cn \\\\[1.5ex] &amp;\\ \\, \\vdots \\\\ \\end{aligned}\\)\\)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","title":"10. \u7f51\u7edc\u6d41\u95ee\u9898\u548c\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 648 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#compassclass-ten","title":":compass:Class Ten","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#network-flow-problems","title":"Network Flow Problems \u7f51\u7edc\u6d41\u95ee\u9898","text":"<p>\u57ce\u5e02\u6539\u9020\u6d89\u53ca\u5730\u4e0b\u7ba1\u7f51\u5de5\u7a0b\u3002\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6709\u4e0d\u540c\u7ba1\u9053\uff0c\u4e0d\u540c\u7ba1\u9053\u7684\u6d41\u91cf\u4e0d\u540c\uff0c\u7528\u6709\u5411\u56fe\u8868\u793a\u3002\u8981\u6c42\u8ba1\u7b97\u51fa\u6700\u5927\u6d41\u91cf\u3002 \u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p>\u904d\u5386\u56fe\uff0c\u627e\u5230\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5927\u6d41\u91cf\u4e3a\u7ba1\u9053\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002 \u7136\u540e\u6bcf\u6761\u8fb9\u51cf\u53bb\u53d6\u5230\u7684\u8def\u5f84\u6700\u5927\u6d41\u91cf\uff0c\u5269\u4f59\u56fe\u91cd\u65b0\u904d\u5386\u3002 \u76f4\u5230\u6ca1\u6709\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u65f6\uff0c\u5f97\u5230\u7684\u6d41\u91cf\u548c\u4e3a\u6700\u5927\u6d41\u91cf\u3002</p> <p>\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u9009\u62e9\u8def\u5f84\u65f6\u53ef\u80fd\u4e0e\u5176\u4ed6\u8def\u5f84\u51b2\u7a81\uff0c\u5bfc\u81f4\u5176\u4ed6\u8def\u5f84\u4e0a\u8def\u5f84\u88ab\u5220\u9664\u3002 \u4fee\u6539\uff1a\u5efa\u7acb\u53cd\u6094\u673a\u5236\uff0c\u67d0\u6761\u7ebf\u6bb5\u6d41\u5411\u53ef\u6539\u53d8\u3002 \u5177\u4f53\u64cd\u4f5c\uff1a</p> <p>\u5728\u67d0\u6761\u8def\u5f84\u5220\u9664\u540e\uff0c\u6dfb\u52a0\u6d41\u91cf\u76f8\u540c\u7684\u53cd\u5411\u8fb9\u3002\u76f8\u5f53\u4e8e\u5c06\u6765\u53ef\u4ee5\u53cd\u6094\uff0c\u91cd\u65b0\u7ecf\u8fc7\u88ab\u5220\u9664\u7684\u8fb9\u3002 \u76f4\u5230\u6240\u6709\u548c\u8d77\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u6307\u5411\u8d77\u70b9\uff0c\u7ec8\u6b62\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T=O(f\\cdot \\left| E\\right|)\\)\uff0cf \u662f\u6700\u5927\u6d41\u91cf \u6539\u8fdb\uff1a</p> <ol> <li>\u4e0b\u4e00\u6b65\u6709\u4e0d\u540c\u9009\u62e9\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u6d41\u91cf\u5927\u7684\u8fb9\u3002</li> <li>\u6bcf\u6b21\u9009\u62e9\u8fb9\u6700\u5c11\u3002</li> </ol> <p>\u8fdb\u4e00\u6b65\u5f3a\u5316\uff1a\u6700\u5927\u6d41\u91cf\u53ef\u80fd\u6709\u4e0d\u540c\u8def\u5f84\uff0c\u5404\u4e2a\u8def\u5f84\u901a\u8fc7\u65f6\u6709\u4ee3\u4ef7\u3002\u9700\u8981\u627e\u5230\u6700\u5927\u6d41\u91cf\u4e14\u6700\u4f4e\u4ee3\u4ef7\u7684\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#mininum-spanning-tree","title":"\u6700\u5c0f\u751f\u6210\u6811(Mininum Spanning Tree)","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u6743\u91cd\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002 \u8d2a\u5fc3\u7b97\u6cd5(Greedy Method) \u6570\u5b66\u4f18\u5316\uff1a\u7ed9\u5b9a\u51fd\u6570\u548c\u533a\u95f4\uff0c\u6c42\u51fd\u6570\u5728\u533a\u95f4\u4e0a\u7684\u6700\u5927\u503c\u3002\u968f\u673a\u9009\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u8fd9\u4e2a\u70b9\u7684\u503c f(x0)\u3002\u5230\u5de6\u53f3 x0+d\uff0cx0-d\uff0c\u53d6\u4e09\u4e2a\u503c\u4e2d\u6700\u5927\u503c\u3002\u6bcf\u6b21\u627e\u5de6\u53f3 d \u7684\u8ddd\u79bb\u3002\u5f53\u5de6\u53f3\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u503c\u65f6\u505c\u6b62\u3002 \u8fd9\u79cd\u65b9\u6cd5\u53d6\u5230\u5c40\u90e8\u6700\u4f18\u89e3\u3002 \u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6bcf\u6b21\u79fb\u52a8\u65f6\u6709\u4e00\u5b9a\u6982\u7387\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002</p> <p>\u5982\u4f55\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff1f</p> <ol> <li>prim\uff1a\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\u3002 <p>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\uff0c\u627e\u548c\u5b83\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\u52a0\u5165\u3002 \u518d\u627e\u548c\u8fd9\u4e2a\u5c40\u90e8\u7684\u6811\u548c\u5916\u90e8\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\uff08\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u5c40\u90e8\u7684\u6811\u4e2d\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\u5728\u6811\u5916\uff09\uff0c\u52a0\u5165\u3002 \u91cd\u590d\u627e\u6700\u77ed\u8fb9\u3001\u52a0\u5165\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5728\u6811\u5185\u3002</p> </li> <li>kruskal\uff1a\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff08\u9009\u62e9 n-1 \u6761\u8fb9\uff0c\u4f7f\u5f97\u5b83\u6784\u6210\u6811\u4e14\u6743\u503c\u548c\u6700\u5c0f\uff09\u3002 <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\u4ece\u6700\u77ed\u8fb9\u5f00\u59cb\uff0c\u6bcf\u6b21\u653e\u4e00\u6761\u8fb9\u8fdb\u53bb \u68c0\u67e5\u662f\u5426\u6784\u6210\u56de\u8def\uff08\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u8fde\u901a\uff09\uff0c\u5982\u679c\u6784\u6210\u56de\u8def\u5219\u8df3\u8fc7\u3002 \u5f53\u653e\u5165\u7684\u8fb9\u6570\u5230\u8fbe n-1 \u65f6\u505c\u6b62\u3002</p> </li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/10.%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#dfs","title":"DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"C<pre><code>void dfs(\u70b9 v) {\n  vis[v] = true;\n  for (\u4e0ev\u76f8\u8fde\u7684\u70b9w) {\n    if (!vis[w]) {\n      dfs(w);\n    }\n  }\n}\n</code></pre> <p>\u5982\u679c\u6574\u4f53\u4e0d\u8fde\u901a\uff0c\u5728\u5916\u9762\u5957 for \u5faa\u73af\u904d\u5386\u56fe\u4e2d\u6240\u6709\u70b9\u3002</p> C<pre><code>void dfsConn(\u56fe g) {\n  for (g\u4e2d\u7684\u70b9v) {\n    if (!vis[v]) {\n      dfs(v);\n      // ????\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/","title":"11. \u53cc\u8fde\u901a\u56fe\u548c\u6b27\u62c9\u56de\u8def","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 479 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#class-eleven","title":"Class Eleven","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_1","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"C<pre><code>void dfs(\u70b9v) {\n    for (\u4e0ev\u76f8\u90bb\u7684\u70b9w) {\n        if (w\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7) {\n            dfs(w);\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_2","title":"\u5224\u65ad\u8fde\u901a\u5757","text":"C<pre><code>void solve(\u56fe g) {\n    for (g\u4e2d\u7684\u70b9v) {\n        if (\u6ca1\u8bbf\u95ee\u8fc7v) {\n            dfs(v);\n            cnt++;\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_3","title":"\u53cc\u8fde\u901a\u56fe\u95ee\u9898","text":"<p>\u53cc\u8fde\u901a\uff1a\u4efb\u610f\u5220\u9664\u8282\u70b9\u540e\uff0c\u56fe\u4e0d\u5206\u88c2\u6210\u4e24\u4e2a \u5220\u9664\u540e\u56fe\u5206\u88c2\u7684\u70b9\u6210\u4e3a articulation\uff08\u5173\u8282\u70b9\uff09\uff0c\u6ca1\u6709 articulation \u7684\u56fe\u662f biconnected\u3002 \u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e2d\u95f4\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\uff0c\u4e5f\u662f\u53cc\u8fde\u901a\u56fe\u3002 biconnected component: a maximum biconnected subgraph. \u5173\u952e\u662f\u627e\u5230\u5173\u8282\u70b9</p> <p>dfs \u5bf9\u56fe\u8fdb\u884c\u6574\u7406\uff0c\u6839\u636e dfs \u987a\u5e8f\u5f62\u6210\u6811\u3002\u8d77\u70b9\u662f\u6839\u7ed3\u70b9\uff0c\u901a\u8fc7 v \u627e\u5230 w\uff0c\u5219 v \u662f w \u7684\u7236\u8282\u70b9\u3002 \u8f6c\u5316\u540e\u7f3a\u5c11\u90e8\u5206\u8fb9\uff0c\u5728\u6811\u4e2d\u8865\u4e0a\u3002 \u8fd9\u4e9b\u65b0\u6dfb\u52a0\u7684\u8fb9\u4e00\u5b9a\u8fde\u63a5\u7956\u5148\u548c\u540e\u88d4\uff0c\u6210\u4e3a back edge\u3002\uff08\u5982\u679c\u8fde\u63a5\u4e0d\u540c\u5206\u652f\u7684\u8fb9\uff0c\u4e00\u5b9a\u901a\u8fc7\u8fd9\u6761\u8fb9 dfs \u65f6\u76f4\u63a5\u8bbf\u95ee\u5230\u3002\uff09</p> <p>\u4ec0\u4e48\u70b9\u662f\u5173\u8282\u70b9\uff1f</p> <ol> <li>\u81f3\u5c11\u542b\u4e24\u4e2a\u513f\u5b50\u7684\u6839\u8282\u70b9</li> <li>\u6240\u6709\u513f\u5b50\u90fd\u6ca1\u6709\u5411\u4e0a\u7684\u56de\u8fb9\u3002</li> </ol> <p>\u540c\u4e00\u5206\u652f\u4e0a\u7528\u6570\u5b57\u8868\u793a\u5c42\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u5c42\u7ea7\u8d8a\u5927\u3002\u56de\u8fb9\u5c06\u4f4e\u5c42\u6b21\u4e0e\u9ad8\u5c42\u6b21\u7684\u5173\u7cfb\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u7684\u5c42\u7ea7 num\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u548c\u6240\u6709\u513f\u5b50\u7684\u6700\u9ad8\u5c42\u7ea7 low\u3002 \u5f53\u5b58\u5728\u4e00\u4e2a\u5206\u652f\u7684 low&lt; num\uff0c\u8be5\u70b9\u4e3a\u5173\u8282\u70b9\u3002</p> Text Only<pre><code>low(u) = min{num(u),\n             min{low(w) | w is a child of u},\n             min{num(w) | (u,w) is a back edge} }\n</code></pre> <p>u is an articulation point iff:</p> <ol> <li>u is the root and has et least 2 children</li> <li>u is not the root, and has at least 1 child such that low(child) &gt;= num(u)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/11.%20%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%9B%BE%E5%92%8C%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/#_4","title":"\u6b27\u62c9\u56de\u8def\u95ee\u9898","text":"<p>\u6b27\u62c9\u56de\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u5c06\u6240\u6709\u8fb9\u8d70\u4e00\u904d\u5e76\u56de\u5230\u8d77\u70b9\u3002 \u7ed3\u8bba\uff1a\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002 \u6240\u6709\u70b9\u7684\u5ea6\u4e4b\u548c\u4e00\u5b9a\u662f\u5076\u6570\u3002 \u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u6709\u4e24\u4e2a\uff0c\u4e00\u5b9a\u80fd\u4ece\u5176\u4e2d\u4e00\u4e2a\u70b9\u51fa\u53d1\u8d70\u8fc7\u6240\u6709\u8fb9\u5230\u8fbe\u53e6\u5916\u4e00\u4e2a\u70b9\u3002</p> <p>\u600e\u4e48\u6784\u9020\u89e3\uff1f</p> <p>\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1 dfs\uff0c\u6700\u540e\u4e00\u5b9a\u56de\u5230\u8d77\u70b9\uff0c\u4f46\u4e0d\u4e00\u5b9a\u628a\u6240\u6709\u8fb9\u8d70\u5b8c\u3002 \uff08\u6bcf\u4e2a\u70b9\u5165\u548c\u51fa\u7684\u6b21\u6570\u4e00\u5b9a\u76f8\u7b49\uff09 \u5220\u9664 dfs \u56de\u5230\u8d77\u70b9\u540e\u7ecf\u8fc7\u7684\u8def\uff0c\u5269\u4e0b\u7684\u6240\u6709\u70b9\u7684\u5ea6\u8fd8\u662f\u90fd\u4e3a\u5076\u6570\u3002 \u5728\u8def\u5f84\u4e0a\u9009\u53d6\u8fd8\u6709\u8fb9\u7684\u70b9\u7ee7\u7eed dfs\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u8d70\u5b8c\u3002</p> <p>\u54c8\u5bc6\u5c14\u987f\u56de\u8def\u95ee\u9898\uff08\u65c5\u884c\u5546\u95ee\u9898\uff09 \u5c06\u6240\u6709\u70b9\u90fd\u8d70\u4e00\u904d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/","title":"12. \u5e0c\u5c14\uff0c\u5806\uff0c\u5f52\u5e76\uff0c\u5feb\u901f\u6392\u5e8f","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 811 \u4e2a\u5b57\u00a0\u00a05 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#banjoclass-twelve","title":":banjo:Class Twelve","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_1","title":"\u6392\u5e8f","text":"<p>\u7b80\u5355\u6392\u5e8f\uff1a</p> <ol> <li>\u9009\u62e9\u6392\u5e8f seection\uff1a\u6bcf\u6b21\u627e\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5728\u672b\u5c3e</li> <li>\u4ea4\u6362\u6392\u5e8f exchange\uff1a\u4ece\u5934\u5230\u5c3e\u904d\u5386\uff0c\u770b\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u662f\u5426\u7b26\u5408\uff0c\u4f4d\u7f6e\u4e0d\u5bf9\u5219\u4ea4\u6362\uff08\u5192\u6ce1\uff09</li> <li>\u63d2\u5165\u6392\u5e8f insertion\uff1a\u6bcf\u6b21\u4e4b\u524d\u7684\u5143\u7d20\u90fd\u6392\u597d\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4f7f\u5176\u4fdd\u6301\u6392\u5e8f\u7684\u7279\u6027\u3002    \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n^2)    \u4f46\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u540c\uff0c\u9009\u62e9\u6392\u5e8f\u4e3a O(n^2)\uff0c\u5192\u6ce1\u6392\u5e8f\u53ef\u901a\u8fc7\u6807\u7b7e\u4f18\u5316\uff0c\u63d2\u5165\u6392\u5e8f\u6700\u4f18\u4e3a O(n)\u3002</li> </ol> <p>inversion \u9006\u5e8f\u5bf9\uff1a\u5927\u7684\u5728\u524d\u5c0f\u7684\u5728\u540e\uff0c\u6210\u4e3a\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002 \u5982\u679c\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217\uff0c\u6700\u591a n(n-1)/2 \u4e2a\u9006\u5e8f\u5bf9\uff0c\u5e73\u5747\u7ea6 nn/4 \u4e2a\u9006\u5e8f\u3002 \u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u5bf9\u8c03\uff0c\u6539\u53d8\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002 \u6392\u5e8f\u7b97\u6cd5\u7a81\u7834\uff1a\u8df3\u7740\u6bd4\u8f83 \u5e0c\u5c14\u6392\u5e8f\uff1a\u5206\u7ec4\u6bd4\u8f83+\u63d2\u5165\u6392\u5e8f</p> <p>\u5206\u6cbb\u6cd5\uff1a\u5f52\u5e76\u6392\u5e8f T(n)=2T(n/2)+Cn =&gt; T(n)=O(nlogn)</p> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u9009\u62e9 pivot\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002</p> <p>\u5806\u6392\u5e8f\uff1a\u6784\u5efa\u6811\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5927\u540e\u3002\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u662f\u7b2c\u4e8c\u5927\u3002</p> <p>\u6876\u6392\u5e8f\uff1a</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5148\u6309\u4e2a\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u6392\u6210\u5e8f\u5217\u3002\u518d\u6309\u5341\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u518d\u6309\u767e\u4f4d\u6570\u2026\u2026\u6700\u540e\u6392\u6210\u4ece\u5c0f\u5230\u5927\u7684\u5e8f\u5217\u3002 \u5faa\u73af\u7684\u6b21\u6570\u7b49\u4e8e\u4f4d\u6570\u3002</p> <p>\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\uff1a\u76f8\u7b49\u7684\u5143\u7d20\u6392\u5e8f\u524d\u540e\u987a\u5e8f\u662f\u4e0d\u662f\u76f8\u540c\u3002</p> <p>\u63d2\u5165\u6392\u5e8f\u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f.\u5982\u679c\u8f93\u5165\u6570\u636e\u57fa\u672c\u6392\u597d,\u5219\u6392\u5e8f\u65f6\u95f4\u77ed.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_2","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u8de8\u533a\u57df\u6bd4\u8f83:\u5206\u7ec4</p> <p>\u5c06\u6570\u636e\u95f4\u9694\u5206\u7ec4,\u6bcf\u7ec4\u6392\u5e8f \u51cf\u5c11\u7ec4\u6570,\u518d\u5c06\u6bcf\u7ec4\u6392\u5e8f \u7ee7\u7eed\u51cf\u5c11\u5206\u7ec4,\u76f4\u5230\u53ea\u5206\u4e00\u7ec4,\u5b8c\u6210\u6392\u5e8f</p> <p>\u82e5\u6570\u636e\u57fa\u672c\u6709\u5e8f,\u63d2\u5165\u6392\u5e8f\u65f6\u95f4\u63a5\u8fd1\u7ebf\u6027. \u5206\u7ec4\u591a,\u5355\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e;\u5206\u7ec4\u5c11\u65f6,\u6570\u636e\u63a5\u8fd1\u6709\u5e8f,\u65f6\u95f4\u7ebf\u6027. \u5f00\u59cb\u65f6\u5206 k \u7ec4,\u7ec4\u5185\u6709\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5168\u90e8\u6709\u5e8f\u7684 1/k.</p> C<pre><code>void shellsort(int arr[], int n) {\n    for (int step = n / 2; step &gt; 0; step /= 2) {  // step\u8868\u793a\u6b65\u957f\n        for (int i = step; i &lt; n; i++) {\n            int tmp = arr[i];\n            int j;\n            for (j = i; j &gt;= step; j -= step) {  // \u63d2\u5165\u6392\u5e8f\n                if (tmp &lt; arr[j - step])\n                    arr[j] = arr[j - step];\n                else\n                    break;\n            }\n            arr[j] = tmp;\n        }\n    }\n}\n</code></pre> <p>\u6309<code>step = n / 2; step &gt; 0; step /= 2</code>\u5206\u7ec4,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6:\\(O(N^2)\\) Hibbard's Increment Sequence: \u6309\\(step=2^k-1\\)\u5206\u7ec4</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_3","title":"\u5806\u6392\u5e8f","text":"<p>\u65b9\u6cd5 1(\u4e0d\u597d)</p> C<pre><code>void heapsort(int arr[]) {\n    BuildHeap(H);\n    for (int i = 0; i &lt; n; i++)\n        tmpH[i] = DeleteMin(H);\n    for (int i = 0; i &lt; n; i++)\n        H[i] = tmpH[i];\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6:\\(N\\log N-N\\log\\log N\\)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_4","title":"\u5f52\u5e76\u6392\u5e8f(\u5206\u6cbb\u6cd5)","text":"<p>\u5148\u5206\u522b\u6392\u5e8f,\u518d merge. \u65f6\u95f4\u590d\u6742\u5ea6: \u5206\u6210\u4e24\u7ec4:\\(O(1)\\) \u9012\u5f52\u5c06\u4e24\u7ec4\u5206\u522b\u6392\u5e8f:\\(2T(N/2)\\) merge: \\(O(N)\\)</p> <p>quicksort: merge \u7684\u6b65\u9aa4\u51cf\u5c0f\u65f6\u95f4.\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4. \u8fd9\u6837\u5206\u7ec4\u4e0d\u4e00\u5b9a\u662f n/2 \u7684\u4e24\u7ec4,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(i)+T(N-i)\\)</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u907f\u514d\u6bcf\u6b21\u8c03\u7528\u751f\u6210temp\u4e34\u65f6\u6570\u7ec4,\u5728\u5916\u90e8\u540c\u4e00\u7533\u8bf7temp,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid merge(int a[],\n           int left,\n           int leftend,\n           int right,\n           int temp[]) {  // \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\n    int i, j, k;\n    i = left;\n    j = leftend + 1;\n    k = left;\n\n    while (i &lt;= leftend &amp;&amp; j &lt;= right) {\n        if (a[i] &lt;= a[j])\n            temp[k++] = a[i++];\n        else\n            temp[k++] = a[j++];\n    }\n    while (i &lt;= leftend)\n        temp[k++] = a[i++];\n    while (j &lt;= right)\n        temp[k++] = a[j++];\n}\n\n// \u8bbe\u8ba1\u6210\u9012\u5f52\u51fd\u6570,\u5fc5\u987b\u5c06\u8fb9\u754c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid mergesort(int a[],\n               int left,\n               int right,\n               int temp[]) {  // \u6392\u5e8f\uff0c\u7528temp\u4e34\u65f6\u5b58\u50a8\n    if (left &gt;= right)\n        return;\n\n    int mid = (left + right) / 2;\n    mergesort(a, left, mid, temp);\n    mergesort(a, mid + 1, right, temp);\n    merge(a, left, mid, right, temp);\n    for (int i = left; i &lt;= right; i++) {\n        a[i] = temp[i];\n    }\n}\n\nint main() {\n    int a[101], tempa[101];\n    int n;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;a[i]);\n    }\n    mergesort(a, 0, n - 1, tempa);\n\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"%d \", a[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83 \u548c\\(T(n)=2T(n/2)+Cn\\)\u6bd4\u8f83 \\(T(n)=3T(n/2)+Cn\\): \u66f4\u590d\u6742 \\(T(n)=2T(n/3)+Cn\\): \u66f4\u7b80\u5355</p> <p>\u4e34\u65f6\u6570\u7ec4</p> <ol> <li>\u5916\u90e8\u7edf\u4e00\u7533\u8bf7,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165</li> <li>\u6bcf\u6b21\u5408\u5e76\u65b0\u7533\u8bf7\u7a7a\u95f4</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u7a7a\u95f4(\u590d\u6742)</li> <li>\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u6570\u7ec4,\u4e00\u4e2a\u6392\u5e8f\u65f6\u5360\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4</li> <li>\u4e09\u4e2a\u5df2\u6392\u5e8f\u6570\u7ec4\u5408\u5e76,\u7528\u5806(??)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/12.%20%E5%B8%8C%E5%B0%94%EF%BC%8C%E5%A0%86%EF%BC%8C%E5%BD%92%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/#_5","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5173\u952e:\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4.</p> <p>\u96be\u70b9:</p> <ol> <li>\u600e\u4e48\u9009\u62e9 pivot</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u6570\u7ec4</li> </ol> <p>\u9009\u62e9 pivot \u7684\u65b9\u6cd5:</p> <ol> <li>\u9009\u7b2c\u4e00\u4e2a(\u4e0d\u597d)</li> <li>\u968f\u673a\u9009\u62e9(\u4ecd\u4e0d\u597d)</li> <li>\u5934,\u5c3e,\u4e2d\u95f4\u503c\u4e09\u4e2a\u4e2d\u9009\u4e2d\u95f4\u503c</li> <li>\u4e94\u7b49\u5206\u70b9\u9009\u4e2d\u95f4\u503c</li> <li>\u968f\u4fbf\u9009\u4e00\u4e2a\u5206\u7ec4,\u770b\u4e24\u7ec4\u662f\u5426\u5747\u5300(\u53ef \u00bc \u4e3a\u754c),\u82e5\u5747\u5300\u5219\u7ee7\u7eed\u8fdb\u884c,\u82e5\u4e0d\u5747\u5300\u5219\u91cd\u6765(\u6309\u671f\u671b\u4e3a\u505a\u4e24\u6b21)</li> </ol> <p>\u8499\u5854\u5361\u6d1b:\u505a\u7279\u5b9a\u6b21\u6570,\u505a\u5b8c\u540e\u505c\u6b62,\u4e0d\u7ba1\u662f\u5426\u7b26\u5408\u6700\u4f73\u6761\u4ef6 \u62c9\u65af\u7ef4\u52a0\u65af:\u6309\u7279\u5b9a\u8981\u6c42,\u82e5\u4e00\u76f4\u4e0d\u7b26\u5408\u8981\u6c42\u5219\u4e00\u76f4\u8fdb\u884c</p> <p>\u4f46\u662f,\u6570\u7ec4\u5c0f\u65f6\u9009 pivot \u5feb\u6392\u6548\u7387\u4f4e. \u5728\u6570\u7ec4\u89c4\u6a21\u5c0f\u4e8e\u9608\u503c\u65f6,\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u6392\u5e8f.</p> <p>\u600e\u4e48\u539f\u5730\u5206\u7c7b?</p> <p>\u4e24\u8fb9\u626b\u63cf</p> <p>\u57fa\u51c6\u5143\u7d20\u653e\u5728\u6700\u540e \u6307\u9488 i \u653e\u5728\u5f00\u5934,\u6bd4 pivot \u5c0f\u65f6\u5411\u53f3\u8d70,&gt;=\u65f6\u505c\u4e0b \u6307\u9488 j \u653e\u5728\u7ed3\u5c3e,\u6bd4 pivot \u5927\u65f6\u5411\u5de6\u8d70,&lt;=\u65f6\u505c\u4e0b \u90fd\u505c\u4e0b\u65f6\u4ea4\u6362 i \u548c j \u7684\u503c \u76f4\u5230 i==j \u6216 i&gt;j,\u5c06 pivot \u653e\u5728\u6700\u7ec8\u4f4d\u7f6e</p> <p>\u4e00\u8fb9\u626b\u63cf</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f\u5c0f\u7684\u4e00\u5806\u548c\u5927\u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u5927,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u5c0f,\u548c\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362(\u9700\u8981\u6807\u8bb0\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e)</p> <p>\u8377\u5170\u65d7\u95ee\u9898 \u4e09\u79cd\u6570\u636e\u6392\u5e8f</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f R \u7684\u4e00\u5806,G \u7684\u4e00\u5806,B \u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u662f B,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u662f G,\u548c B \u5806\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6362 \u5982\u679c\u6307\u9488\u5904\u662f R,\u6307\u9488\u5904\u5143\u7d20\u653e\u5728 G \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,G \u5806\u7b2c\u4e00\u4e2a\u653e\u5728 B \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,B \u5806\u7b2c\u4e00\u4e2a\u653e\u5728\u6307\u9488\u4f4d\u7f6e</p> <p>\u6307\u9488\u79fb\u52a8\u8981\u6c42:\u7ef4\u62a4\u626b\u8fc7\u7684\u533a\u57df\u7b26\u5408\u8981\u6c42. \u53cc\u8fb9\u626b\u63cf:\u5de6\u6307\u9488\u5de6\u4fa7\u90fd\u5c0f,\u53f3\u6307\u9488\u53f3\u4fa7\u90fd\u5927 \u4e00\u8fb9\u626b\u63cf:\u6307\u9488\u5de6\u4fa7\u662f\u5206\u597d\u7684\u5806</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/","title":"13. \u5faa\u73af\u4e0d\u53d8\u5f0f\u548c\u533a\u5757\u94fe","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 575 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#class-thirteen","title":"Class Thirteen","text":"<p>\u5faa\u73af\u4e0d\u53d8\u5f0f</p> <p>cutoff\uff1a\u5f53\u6570\u7ec4\u4e2d\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u8be5\u503c\u65f6\uff0c\u4e0d\u518d\u8c03\u7528\u9012\u5f52\uff08\u9632\u6b62\u5c0f\u6570\u7ec4\u65f6\u6548\u7387\u4f4e\uff09</p> Text Only<pre><code>int median3(int a[], int left, int right) {\n    if (a[left] &lt; a[mid])\n        \u4ea4\u6362\u5de6\uff0c\u4e2d\uff1b\n    if (a[left] &lt; a[right])\n        \u4ea4\u6362\u5de6\uff0c\u53f3\uff1b\n    if (a[mid] &lt; a[right])\n        \u4ea4\u6362\u4e2d\uff0c\u53f3\uff1b\n    // \u6b64\u65f6\u5df2\u8fbe\u5230\u5de6 &lt; \u4e2d &lt; \u53f3\n    \u4ea4\u6362\u4e2d\uff0c\u53f3-1\uff1b // \u5c06pivot \u653e\u5728\u7aef\u4f4d\n    return a[right - 1];\n}\n</code></pre> Text Only<pre><code>void Qsort(int a[], int let, int right) {\n    if (left + cutoff &lt;= right) {\n        for ( ; ; ) {\n            while (a[++i] &lt; pivot) ;\n            while (a[- -j] &gt; pivot) ;\n            if (i &lt; j) swap(i, j);\n            else break;\n        }\n    } else {\n        InsertionSort(a);\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a T(N) = T(i) + T(N-i-1) + cN \u6700\u574f\uff1aT(N) = T(N-1) + cN, T(N) = O(N^2) \u6700\u597d\uff1aT(N) = 2T(N/2) +cN, T(N) = O(N logN)</p> <p>\u95ee\u9898\uff1a\u7ed9 n \u4e2a\u6574\u6570\uff0c\u6c42\u7b2c k \u5927\u7684\u6570</p> <ol> <li>\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53d6\u7b2c k \u4e2a -&gt; O(N logN)</li> <li>\u627e\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002\u5982\u679c\u5927\u7684\u5143\u7d20\u6709 k-1 \u4e2a\uff0c\u5219\u7b2c k \u4f4d\u57fa\u51c6\u5143\u7d20\uff1b\u5982\u679c\u5c0f\u4e8e k-1 \u4e2a\uff0c\u4ece\u5927\u7684\u5143\u7d20\u4e2d\u627e\uff1b\u2026\u2026\u5c0f\uff0c\u4ece\u5c0f\u7684\u5143\u7d20\u4e2d\u627e -&gt; O(1+\u00bd+\u00bc+\u2026N)=O(N)</li> </ol> <p>\u5927\u7ed3\u6784\u7684\u6392\u5e8f\u95ee\u9898 \u548c\u6570\u7ec4\u6392\u5e8f\u4e0d\u540c\uff0c\u5927\u7ed3\u6784\u4ea4\u6362\u7684\u4ee3\u4ef7\u9ad8\u3002\u7528 keyword \u4ee3\u66ff\uff0c\u6839\u636e\u5927\u7ed3\u6784\u7684\u6027\u8d28\u5bf9 keyword \u6392\u5e8f\u3002 \u5173\u952e\u95ee\u9898\uff1a\u7ed9\u5b9a\u7b2c\u51e0\u4e2a\u5143\u7d20\u653e\u5230\u7f16\u53f7\u51e0\u7684\u4f4d\u7f6e\uff0c\u600e\u4e48\u91cd\u65b0\u7f16\u6392\u6570\u7ec4\uff1f\uff1f</p> <p>\u8bc1\u660e\uff1a\u901a\u8fc7\u6bd4\u8f83\u3001\u4ea4\u6362\uff0c\u4e0d\u53ef\u80fd\u627e\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e O(N logN)\u7684\u7b97\u6cd5 \u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5\uff0c\u90fd\u5bf9\u5e94\u4e00\u4e2a\u51b3\u7b56\u6811\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u6bd4\u8f83\u8bed\u53e5\uff0c\u5206\u652f\u8868\u793a T \u6216 F \u7684\u60c5\u5f62\uff0c\u53f6\u8282\u70b9\u4e3a\u6700\u7ec8\u6392\u5e8f\u7ed3\u679c\u3002 \u53f6\u8282\u70b9\u603b\u6570\u4e3a n\uff01\uff0c\u5219\u6811\u7684\u9ad8\u5ea6\u81f3\u5c11 log N\uff01\u3002 O(log N!) = O(N logN)</p> <p>\u4e0d\u7528\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u5c0f\u4e8e O(N logN)\uff1a\u5982\u6876\u6392\u5e8f\u3002</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5206\u522b\u6309\u4e2a\u4f4d\u6570\u3001\u5341\u4f4d\u6570\u2026\u2026\u8fdb\u884c\u6876\u6392\u5e8f\u3002\uff08\u6700\u4e0d\u91cd\u8981\u7684\u6570\u5f00\u59cb\uff09 \u6bcf\u6b21\u6392\u5e8f\u65f6\u6309\u4e0a\u4e00\u6b21\u6392\u5e8f\u7ed3\u679c\u904d\u5386\u3002\u5148\u628a\u4e00\u4e2a\u6876\u4e2d\u7684\u6570\u4f9d\u6b21\u904d\u5386\u5b8c\uff0c\u518d\u904d\u5386\u4e0b\u4e00\u4e2a\u6876\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u9700\u8981 O(logN)\u7684\u7a7a\u95f4\u3002\uff08\u9012\u5f52\u9700\u8981\u4e0d\u65ad\u538b\u6808\uff09</p> <p>\u7a33\u5b9a\u6027\uff1a \u63d2\u5165\u6392\u5e8f \u7a33\u5b9a \u5806\u6392\u5e8f \u4e0d\u7a33\u5b9a\uff08\u6ca1\u6709\u4f9d\u6b21\u6bd4\u8f83\uff09 \u5206\u7ec4\u6392\u5e8f \u4e0d\u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \u4e0d\u7a33\u5b9a</p> <p>\u8fd8\u53ef\u80fd\u8003\uff1a\u7ecf\u8fc7\u51e0\u8f6e\u540e\u6570\u636e\u5e8f\u5217\uff0c\u5224\u65ad\u662f\u4ec0\u4e48\u6392\u5e8f\u65b9\u6cd5</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#_1","title":"\u54c8\u5e0c","text":"<p>\u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\uff0c\u5bf9\u6bcf\u4e2a x \u751f\u6210 y\uff0c\u4e14\u4e0d\u540c x \u5f97\u5230\u4e0d\u540c\u7684 y\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/13.%20%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F%E5%92%8C%E5%8C%BA%E5%9D%97%E9%93%BE/#_2","title":"\u533a\u5757\u94fe\u5e94\u7528","text":"<p>\u76ee\u7684\uff1a\u8ba9\u6570\u7ec4\u4e0d\u53ef\u7be1\u6539\u4e0d\u53ef\u66ff\u4ee3 \u6570\u636e\u7ec4\u7ec7\u548c\u7ba1\u7406\u6280\u672f\uff1a\u6570\u636e\u5e93\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u533a\u5757\u94fe\uff08\u589e\u67e5\uff09 \u6838\u5fc3\u601d\u60f3\uff1a</p> <ol> <li>\u628a\u6570\u636e\u653e\u5728\u591a\u4e2a\u5730\u65b9\uff08\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f\uff09\uff0c\u591a\u4e2a\u5907\u4efd</li> <li>\u628a\u6570\u636e\u524d\u540e\u5173\u8054</li> </ol> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u8bb0\u5f55\u7684\u6240\u6709\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u533a\u5757\u3002 \u5c06\u5404\u4e2a\u533a\u5757\u4e32\u8054\uff0c\u5f62\u6210\u533a\u5757\u94fe\u3002 \u600e\u4e48\u5c06\u6570\u636e\u4e32\u8054\uff1f\u7528\u54c8\u5e0c\u51fd\u6570\u3002 \u7ed9\u6bcf\u4e2a\u533a\u5757\u7f16\u53f7\uff0c\u524d\u4e00\u4e2a\u7f16\u53f7\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e0b\u4e00\u4e2a\u7f16\u53f7\u3002 \uff08\u54c8\u5e0c\u503c\u53ef\u4ee5\u4f5c\u4e3a index\uff0c\u8fd9\u91cc\u4f5c\u4e3a\u6570\u636e\u7684\u6307\u7eb9\uff09</p> <p>\u4f5c\u7528\uff1a\u5efa\u7acb\u53ef\u4fe1\u673a\u5236</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/","title":"14. \u6bd4\u7279\u5e01\u548c\u54c8\u5e0c","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1085 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#class-fourteen","title":"Class Fourteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_1","title":"\u6bd4\u7279\u5e01","text":"<p>\u53d1\u884c:\u6bd4\u7279\u5e01\u603b\u91cf\u4e00\u5b9a,\u6bcf\u5341\u5206\u949f\u53d1\u884c,\u6bcf\u56db\u5e74\u6bcf\u5341\u5206\u949f\u53d1\u884c\u91cf\u51cf\u534a \u6d41\u901a</p> <ul> <li>\u600e\u4e48\u8bc1\u660e\u662f\u81ea\u5df1\u7684? \u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93,\u6bcf\u4e2a\u4eba\u6709\u8d26\u53f7\u548c\u5bc6\u7801</li> <li>\u600e\u4e48\u9632\u6b62\"\u53cc\u82b1\"? \u6bcf\u4e2a\u8d26\u53f7\u8bb0\u5f55\u4f59\u989d</li> </ul> <p>\u6bd4\u7279\u5e01\u4e0d\u53d7\u7edf\u4e00\u63a7\u5236,\u4e0d\u80fd\u5efa\u7acb\u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93.\u91c7\u7528\u5206\u5e03\u5f0f\u8d26\u672c. \u89e3\u51b3\u5206\u5e03\u5f0f\u8d26\u672c\u4e4b\u95f4\u53ef\u80fd\u4e0d\u540c\u7684\u95ee\u9898:\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u9009\u62e9\u4e00\u4e2a\u4eba\u8bb0\u5f55,\u5c06\u8d26\u672c\u590d\u5236\u540e\u5206\u53d1,\u540e\u7eed\u53ef\u8865\u5145</p> <p>\u65b0\u4ea4\u6613\u521b\u5efa -&gt; \u4ea4\u6613\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u9a8c\u8bc1 -&gt; \u9a8c\u8bc1\u7ed3\u679c\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u5199\u5165\u8d26\u672c</p> <p>\u8bb0\u8d26\u6709\u597d\u5904,\u7ade\u4e89\u8ba1\u7b97\u901f\u5ea6.\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u503c,\u8ba1\u7b97\u8f93\u5165\u503c.(\u5bb9\u6613\u5f62\u6210\u5171\u8bc6) \u77ff\u673a:\u4e13\u95e8\u8ba1\u7b97\u8f93\u5165\u503c\u7684\u8ba1\u7b97\u673a \u77ff\u6c60:\u591a\u53f0\u77ff\u673a \u6316\u77ff:\u731c\u8f93\u5165\u503c</p> <p>\u600e\u4e48\u63a7\u5236\u8f93\u51fa\u503c y? y \u6709 128 \u4f4d.\u5982\u679c 128 \u4f4d\u5168\u90e8\u968f\u673a\u751f\u6210,\u6700\u5927\u6709 2^128 \u79cd,\u8ba1\u7b97\u65f6\u95f4\u5f88\u957f. \u6839\u636e\u6700\u8fd1\u6316\u77ff\u7684\u8ba1\u7b97\u673a\u6570\u91cf,\u9650\u5236 y \u4e2d 0 \u7684\u4e2a\u6570,\u4fdd\u8bc1 10 \u5206\u949f\u5de6\u53f3\u80fd\u6316\u5230.</p> <p>\u667a\u80fd\u5408\u7ea6:\u666e\u901a\u7a0b\u5e8f,\u7528\u6765\u6267\u884c\u5408\u540c\u89c4\u5b9a\u7684\u67d0\u4e9b\u6761\u6b3e. \u95ee\u9898:\u7a0b\u5e8f\u5728\u4fe1\u606f\u7a7a\u95f4,\u600e\u4e48\u5224\u65ad\u7269\u7406\u7a7a\u95f4\u4e2d\u662f\u5426\u5b8c\u6210\u4e1a\u52a1? \u89e3\u51b3:\u627e\u4e2d\u95f4\u5a92\u4ecb,\u8bc1\u660e\u4e1a\u52a1\u5b8c\u6210. \u9632\u6b62\u4e2d\u95f4\u5a92\u4ecb\u9020\u5047:\u5c06\u6570\u636e\u4f20\u5165\u533a\u5757\u94fe</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_2","title":"\u54c8\u5e0c","text":"<p>\u54c8\u5e0c\u51fd\u6570:\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4,\u54c8\u5e0c\u503c\u4ee3\u8868\u4f4d\u7f6e(\u533a\u5757\u94fe\u4e2d\u4ee3\u8868\u6307\u7eb9) \u5e94\u7528: \u5b57\u5178,\u641c\u7d22\u5f15\u64ce({\u952e:\u503c}) \u641c\u7d22\u5f15\u64ce:\u7528\u722c\u866b\u722c\u53d6\u6240\u6709\u7f51\u9875\u4fe1\u606f,\u5c06\u9875\u9762\u770b\u6210\u8282\u70b9,\u6784\u6210\u5de8\u5927\u7684\u56fe -&gt; \u53ef\u80fd\u7531\u4e0d\u540c\u8def\u5f84\u5230\u8fbe\u540c\u4e00\u4e2a\u7f51\u9875,\u9700\u8981\u5bf9\u7f51\u9875\u505a\u6807\u8bb0(URL \u5730\u5740),\u5b58\u50a8\u5230 URL \u96c6\u5408 -&gt; \u76f4\u63a5\u6bd4\u8f83 URL \u5219\u65f6\u95f4\u957f,\u5229\u7528\u54c8\u5e0c\u51fd\u6570,\u8ba1\u7b97 URL \u7684\u54c8\u5e0c\u503c</p> <p>\u5012\u6392\u7d22\u5f15:\u6309\u5173\u952e\u8bcd\u5b58\u50a8. \u67e5\u8be2\u65f6\u627e\u4e0d\u540c\u5173\u952e\u8bcd\u7684\u4ea4\u96c6</p> <p>\u54c8\u5e0c\u8868:\u8ba1\u7b97\u51fa f(x)\u653e\u5230\u4e00\u884c identifier density : n/T (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u7b97\u51fa\u7684\u503c\u7684\u6240\u6709\u53ef\u80fd\u503c\u7684\u603b\u6570) loading density : n/(sb) (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / (slots * buckets))</p> <p>collision : \u4e0d\u540c\u8f93\u5165\u503c\u6709\u76f8\u540c\u8f93\u51fa overflow : \u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570\u5927\u4e8e\u7a7a\u95f4\u603b\u6570(\u540c\u4e00\u8f93\u51fa\u503c\u5bf9\u5e94\u7684\u8f93\u5165\u503c\u6570\u91cf &gt; slots)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_3","title":"\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1","text":"<p>\u8981\u6c42:: \u5bb9\u6613\u8ba1\u7b97,\u8f93\u51fa\u5747\u5300</p> <p>\u6574\u6570:</p> <ol> <li>\u6c42\u4f59\u6cd5: x -&gt; x%p,\u4e00\u822c\u53d6 p \u4e3a\u7d20\u6570</li> <li>\u6298\u53e0\u6cd5: \u5c06\u957f\u6574\u6570\u6620\u5c04\u4e3a\u4e24\u4f4d\u6570,\u5219\u4e24\u4f4d\u4e00\u6bb5\u518d\u76f8\u52a0,\u4e2d\u95f4\u53ef\u4ee5\u98a0\u5012\u7b49</li> <li>\u5e73\u65b9\u53d6\u4e2d: \u5e73\u65b9\u540e\u53d6\u4e2d\u95f4\u7684\u4e00\u6bb5,\u4f7f\u7ed3\u679c\u80fd\u88ab\u591a\u4f4d\u5f71\u54cd</li> <li>\u5206\u6790\u6cd5</li> </ol> <p>\u5b57\u7b26\u4e32: \u5b57\u7b26\u4e32\u600e\u4e48\u53d8\u6210\u6570\u636e?</p> <ol> <li>\u76f8\u52a0\u6c42\u4f59\u6570. \u9632\u6b62\u8f93\u51fa\u503c\u96c6\u4e2d\u5728\u8f83\u5c0f\u503c,\u53ef\u4ee5<code>str[0]+str[1]*27+str[2]*27*27...</code>.(\u7528 32 \u4ee3\u66ff 27 \u53ef\u52a0\u5feb\u8ba1\u7b97,\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u4e58\u4e00\u6b21,\u6bcf\u6b21\u52a0\u65b0\u7684\u503c\u518d\u79fb\u4f4d)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_4","title":"\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","text":"<ol> <li>seperate chaining \u94fe\u5730\u5740\u6cd5</li> </ol> C<pre><code>struct HashTbl {\n  int tableSize;\n  List *theList;\n};\n</code></pre> <p><code>theList</code>\u4e2d\u5b58\u50a8\u5e26\u5934\u94fe\u8868</p> <ol> <li>open address \u5f00\u653e\u5730\u5740\u6cd5 <code>h(k) + f(i)</code>,\u51b2\u7a81\u65f6<code>i++</code>\u6216<code>+-i</code>,f(i)\u4e3a\u7ebf\u6027\u65f6\u79f0\u4e3a\u7ebf\u6027\u63a2\u6d4b    \u5220\u9664\u65f6\u53ef\u80fd\u5224\u65ad\u9519\u8bef,\u6545\u5220\u9664\u65f6\u8981\u505a\u6807\u8bb0    average search time \u5e73\u5747\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6240\u6709 search time \u76f8\u52a0\u6c42\u5e73\u5747    \u5e73\u5747\u4e0d\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6309\u5165\u53e3\u5206\u7c7b</li> </ol> <p>\u7ebf\u6027\u63a2\u6d4b\u51b2\u7a81\u591a,\u6362\u6210\u4e8c\u6b21\u63a2\u6d4b,\u4f9d\u6b21\u8c03\u6574\u4e3a<code>f(i)=i^2</code>, <code>f(i)=i^3</code>..., \u8d85\u51fa\u8303\u56f4\u65f6\u6c42\u6a21\u8fd4\u56de    \u4e8c\u6b21\u63a2\u6d4b\u53ef\u80fd\u53d1\u751f\u4e8c\u6b21\u805a\u96c6    \u7f3a\u70b9:\u4e0d\u4e00\u5b9a\u80fd\u63a2\u6d4b\u5230\u7a7a\u4f4d</p> <ol> <li>\u516c\u5171\u533a\u57df    \u51b2\u7a81\u65f6\u5f00\u8f9f\u7edf\u4e00\u7684\u65b0\u533a\u57df\uff0c\u5b58\u653e\u51b2\u7a81\u503c\u3002\u6bcf\u6b21\u8bbf\u95ee\u65f6\u5148\u770b\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u7a7a\u8868\u793a\u8981\u8bbf\u95ee\u7684\u6570\u4e0d\u5728\uff1b\u6709\u6570\u518d\u770b\u65b0\u533a\u57df\uff0c\u8bbf\u95ee\u8981\u8bbf\u95ee\u7684\u503c\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#_5","title":"\u8865\u5145","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/14.%20%E6%AF%94%E7%89%B9%E5%B8%81%E5%92%8C%E5%93%88%E5%B8%8C/#loading-density","title":"Loading Density \u662f\u4ec0\u4e48","text":"<p>1. \u5b9a\u4e49 Loading Density\uff08\u4e5f\u79f0\u4e3a Load Factor\uff0c\u88c5\u8f7d\u56e0\u5b50\uff09\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5df2\u5b58\u50a8\u5143\u7d20\u6570\u91cf\u4e0e\u54c8\u5e0c\u8868\u603b\u5bb9\u91cf\u7684\u6bd4\u503c\uff1a [ \\text{Loading Density} = \\frac{\\text{\u5df2\u63d2\u5165\u7684\u5143\u7d20\u6570\u91cf}}{\\text{\u54c8\u5e0c\u8868\u7684\u603b\u69fd\u4f4d\u6570\uff08Size\uff09}} ]</p> <p>2. \u4f5c\u7528</p> <ul> <li>\u8861\u91cf\u7a7a\u95f4\u5229\u7528\u7387\uff1a\u503c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u54c8\u5e0c\u8868\u8d8a\u201c\u6ee1\u201d\u3002</li> <li>\u5f71\u54cd\u6027\u80fd\uff1a</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\u8d8a\u9ad8\uff0c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u8d8a\u5927\uff0c\u67e5\u627e/\u63d2\u5165\u64cd\u4f5c\u53ef\u80fd\u53d8\u6162\u3002</li> <li>\u901a\u5e38\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff08\u5982 0.7\uff09\uff0c\u8d85\u8fc7\u65f6\u89e6\u53d1\u6269\u5bb9\uff08Rehashing\uff09\u3002</li> </ul> <p>3. \u4e0e\u51b2\u7a81\u7684\u5173\u7cfb</p> <ul> <li>\u4f4e\u88c5\u8f7d\u5bc6\u5ea6\uff08&lt;0.5\uff09\uff1a\u51b2\u7a81\u6982\u7387\u4f4e\uff0c\u4f46\u7a7a\u95f4\u6d6a\u8d39\u8f83\u591a\u3002</li> <li>\u9ad8\u88c5\u8f7d\u5bc6\u5ea6\uff08&gt;0.7\uff09\uff1a\u51b2\u7a81\u6982\u7387\u663e\u8457\u589e\u52a0\uff0c\u7ebf\u6027\u63a2\u6d4b\u7b49\u65b9\u6cd5\u7684\u6027\u80fd\u4e0b\u964d\u3002</li> </ul> <p>\u5e38\u89c1\u7b56\u7565\uff1a</p> <ul> <li>\u5f53\u88c5\u8f7d\u5bc6\u5ea6\u8d85\u8fc7\u9608\u503c\uff08\u5982 0.75\uff09\uff0c\u54c8\u5e0c\u8868\u4f1a\u6269\u5bb9\uff08\u901a\u5e38\u52a0\u500d\u5927\u5c0f\uff09\uff0c\u5e76\u91cd\u65b0\u54c8\u5e0c\u6240\u6709\u5143\u7d20\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/","title":"15. \u54c8\u5e0c\u52a8\u6001\u67e5\u627e","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 324 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#class-fifteen","title":"Class Fifteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_1","title":"\u54c8\u5e0c\u52a8\u6001\u67e5\u627e\u95ee\u9898","text":"<ol> <li>\u67e5\u627e\u6811\uff0c\u53ea\u8981\u89e3\u51b3\u6811\u7684\u5e73\u8861\u7684\u95ee\u9898</li> <li>\u8ba1\u7b97\uff0c\u8bbe\u8ba1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09</li> </ol> <p>\u907f\u514d\u51b2\u7a81\uff1a</p> <ol> <li>\u727a\u7272\u7a7a\u95f4\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</li> </ol> <p>\u5f00\u653e\u5730\u5740\u6cd5,\u4e8c\u6b21\u63a2\u6d4b Thm. \u5982\u679c\u6ee1\u8db3:</p> <ol> <li>\u6c42\u4f59\u65f6\u7528\u7d20\u6570</li> <li>\u81f3\u5c11\u6709\u4e00\u534a\u4f4d\u7f6e\u7a7a    \u5219\u53ef\u4ee5\u8bc1\u660e\u6709\u65b0\u7684\u5143\u7d20,\u5219\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e.</li> </ol> <p>Pf:\u9996\u5148\u8bc1\u660e,\u5982\u679c i,j \u6ee1\u8db3\\(0&lt;i\\neq j\\le tablesize/2\\), \u5219</p> <p>$(h(x)+i^2)\\% tablesize \\neq (h(x)+j^2)\\%tablesize $.</p> C<pre><code>position find (int key, hash H) {\n  position pos;\n  int colliNum;\n  pos = hash(key, H.size());\n  while (H[pos]\u975e\u7a7a &amp;&amp; H[pos].Element != key) {\n    pos += 2 * ++colliNum - 1;   // \u5c06\u5e73\u65b9\u53d8\u4e3a\u4e582\uff0c\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\n    if (pos &gt; H.size())\n      pos -= H.size();\n  }\n  return pos;\n}\n</code></pre> <p>f(i)\u4e5f\u53ef\u4ee5\u65f6\u54c8\u5e0c\u51fd\u6570(double hash \u65b9\u6cd5) \u793a\u4f8b\uff1a<code>f(i) = i * hash(key)</code>, <code>f(i) = R - i * hash(key)</code></p> <p>Rehashing \u65b9\u6cd5 \u5c06\u539f\u6765\u7684\u54c8\u5e0c\u8868\u6269\u5927\u4e00\u500d\uff0c\u5c06\u539f\u6765\u5176\u4e2d\u6240\u6709\u5143\u7d20\u91cd\u65b0\u7b97\u4e00\u904d \u4ec0\u4e48\u65f6\u5019\u9700\u8981 rehash\uff1f\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u63d2\u5165\u65f6\u51b2\u7a81\u591a\uff0c\u8bbe\u7f6e\u51e0\u6b21\u63d2\u5165\u4e2d\u51b2\u7a81\u5728\u51e0\u6b21\u4ee5\u4e0a\uff0c\u8fdb\u884c rehash</li> <li>\u8868\u7684\u88c5\u8f7d\u7387\u8d85\u8fc7\u8bbe\u5b9a\u65f6 rehash</li> <li>\u63d2\u5165\u65f6\u627e\u4e0d\u5230\u4f4d\u7f6e</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_2","title":"\u53e6\u5916","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_3","title":"\u5806\u5408\u5e76","text":"<p>\u6bcf\u6b21\u53d6\u4e24\u6811\u9876\u70b9\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u5408\u6210\u540e\u9876\u70b9\uff0c\u4e00\u9897\u5b50\u6811\u76f4\u63a5\u4f5c\u4e3a\u5408\u5e76\u540e\u9876\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u548c\u5408\u5e76\u524d\u7684\u53e6\u4e00\u4e2a\u6811\u5408\u5e76\uff08\u9012\u5f52\uff09 \u6700\u5de6\u5806\uff1a\u4e0d\u7ef4\u62a4\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u6027\uff0c\u5168\u90e8\u504f\u5411\u5de6\u8fb9</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.%20%E5%93%88%E5%B8%8C%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE/#_4","title":"\u9700\u8981\u719f\u7ec3\u638c\u63e1\u7684\u7a0b\u5e8f","text":"<p>\u51fa\u5165\u6808\uff0c\u51fa\u5165\u961f\u5217\uff0c\u4e8c\u53c9\u6811\u7684\u5de6\u4e2d\u53f3\u5c42\u6b21\u904d\u5386\uff0c\u975e\u9012\u5f52\u904d\u5386\uff0c\u5806\u7684\u63d2\u5165\u5220\u9664\uff0c\u67e5\u627e\u6811\u7684\u67e5\u627e\u63d2\u5165\u5220\u9664\uff0c \u56fe\u7684 bfs dfs\uff0c\u6700\u77ed\u8def\u5f84\uff0c\u62d3\u6251\u6392\u5e8f\uff0c \uff08\u68ee\u6797\u7684\u904d\u5386\uff09</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/","title":"15.5 \u4e00\u4e9b\u4ee3\u7801","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 850 \u4e2a\u5b57\u00a0\u00a08 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/#_1","title":"\u8bfe\u4e0a\u590d\u4e60","text":"<p>\u7ebf\u6027\u8868 \u987a\u5e8f\u5b58\u50a8\uff1a\u6570\u7ec4 \u94fe\u5f0f\u5b58\u50a8\uff1a\u94fe\u8868 \u6570\u7ec4\u4e0e\u94fe\u8868\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9 \u94fe\u8868\u7684\u64cd\u4f5c \u5178\u578b\u4e60\u9898\uff1a\u5b9e\u73b0\u5355\u94fe\u8868\u7684\u539f\u5730\u9006\u8f6c\uff08\u5faa\u73af\u4e0d\u53d8\u5f0f\uff09\uff0c \u5206\u522b\u7528\u4e00\u5143\u591a\u9879\u5f0f\u7684\u4e24\u79cd\u8868\u793a\u5b9e\u73b0\u591a\u9879\u5f0f\u52a0\u6cd5</p> <p>\u5806\u6808 \u987a\u5e8f\u6808\uff1a\u6570\u7ec4\uff0ctop++, top-- lianzhan\uff1a\u94fe\u8868\uff0ctop \u5373\u5934\u6307\u9488 \u5e94\u7528\uff1a\u62ec\u53f7\u5339\u914d\u68c0\u9a8c\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0cn \u8282\u6c49\u8bfa\u5854\u95ee\u9898\uff08\u5178\u578b\u9012\u5f52\uff09\uff0c\u8ff7\u5bab\u95ee\u9898 \u5feb\u901f\u6392\u5e8f\u9012\u5f52\u7528\u5806\u6808\u600e\u4e48\u5b9e\u73b0\uff1f\u6bcf\u6b21\u9012\u5f52\u5076\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4ee3\u8868\u8d77\u70b9\u7ec8\u70b9\u5927\u5c0f\uff0c\u4e00\u79cd\u65b9\u6cd5\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\u4ece\u5806\u6808\u4e2d\u629b\u51fa\u5143\u7d20\uff0c\u62c6\u6210\u4e24\u4e2a\u518d\u538b\u5230\u5806\u6808\u4e2d \u53ef\u4ee5\u628a\u6240\u6709\u9012\u5f52\u7528\u5faa\u73af\u5b9e\u73b0\uff0c\u6838\u5fc3\u662f\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d \u8ff7\u5bab\u95ee\u9898\uff1a\u7528\u6570\u7ec4\u8868\u793a\u8ff7\u5bab\uff0c0 \u8868\u793a\u901a\u8def\uff0c1 \u8868\u793a\u5899\u3002\u4e00\u76f4\u6cbf\u7740\u67d0\u4e2a\u65b9\u5411\u8d70\u3002\u6bcf\u6b21\u5c06\uff08\u4f4d\u7f6e\u5750\u6807\uff0c\u65b9\u5411\u9009\u62e9\uff09\u538b\u6808\uff0c\u56de\u5934\u8868\u793a\u5148\u4e0d\u65ad\u538b\u6808\u518d\u4e0d\u65ad\u629b\u51fa\u3002\u56de\u6eaf\u6cd5\u3002</p> <p>\u4e24\u4e2a\u5806\u6808\u5b9e\u73b0\u961f\u5217 \u5165\u961f\uff1a \u5982\u679c\u6808 1 \u6ee1\u4f46\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u4e2d\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u5c06\u65b0\u5143\u7d20\u653e\u5165\u6808 1 \u5982\u679c\u6808 1 \u6709\u5143\u7d20\u4f46\u6ca1\u6ee1\uff0c\u5c06\u6808 2 \u5012\u56de\u6808 1\uff0c\u518d\u65b0\u5143\u7d20\u5165\u6808 \u51fa\u961f\uff1a \u5982\u679c\u6808 2 \u6709\u5143\u7d20\uff0c\u76f4\u63a5\u629b\u51fa \u5982\u679c\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u6240\u6709\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u629b\u51fa</p> <p>\u518d\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u5b9e\u73b0\u7a7a\u95f4\u5171\u4eab\uff1a \u4e24\u5934\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u653e\u3002\u6ee1\u7684\u5224\u5b9a\uff1a<code>top_right == top_left + 1</code></p> <p>\u6811\uff0clevel \u548c degree \u4e2d\u5e8f\u904d\u5386\u65f6\uff0cn \u5728 m \u524d\u7684\u6761\u4ef6\u662f\uff1an \u5728 m \u7684\u5de6\u65b9 \u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u5b9a\u4e49\u672a\u6811\u7684\u76f4\u5f84\u3002\u7ed9\u5b9a\u6811\u6c42\u76f4\u5f84</p> <p>\u7ed9\u5b9a\u94fe\u8868\u8868\u793a\u7684\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811</p> <p>\u5de6\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u53f3\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u6839\u8282\u70b9\u6bd4\u5de6\u513f\u5b50\u6253\uff0c\u6bd4\u53f3\u513f\u5b50\u5c0f\uff0c\u662f\u4e0d\u662f\u67e5\u627e\u6811\uff1f \u4e0d\u662f \u5de6\u8fb9\u662f\u5806\uff0c\u53f3\u8fb9\u662f\u5806\uff0c\u6839\u6bd4\u5de6\u53f3\u513f\u5b50\u5927\uff0c\u662f\u4e0d\u662f\u5806\uff1f \u662f</p> <p>\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u53ef\u4e0d\u53ef\u80fd\u662f\u67e5\u627e\u987a\u5e8f \u521d\u59cb\u4e3a\u8d1f\u65e0\u7a77\u5230\u6b63\u65e0\u7a77\u3002\u6bcf\u6b21\u78b0\u5230\u5c0f\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u5de6\u8fb9\u754c\uff1b\u78b0\u5230\u5927\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u53f3\u8fb9\u754c\u3002</p> <p>\u6811\u7684\u53cc\u4eb2\u8868\u793a\u6cd5\u548c\u5b69\u5b50\u8868\u793a\u6cd5\uff0c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\u3002</p> <p>\u56fe\u7684\u8868\u793a\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u90bb\u63a5\u8868\uff0c\u9006\u90bb\u63a5\u8868\uff0c\u5341\u5b57\u94fe\u8868\uff08\u6709\u5411\u56fe\uff09</p> <p>\u7528 Floyd \u7b97\u6cd5\u5224\u65ad\u56fe\u662f\u5426\u6709\u56de\u8def\uff1f Floyd\uff1a\u90bb\u63a5\u77e9\u9635\u7684\u5e42\u76f8\u52a0\u3002\u68c0\u67e5\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\uff0c\u5982\u679c\u5bf9\u89d2\u7ebf\u4e0a\u6709\u975e\u96f6\u5143\uff0c\u5219\u6709\u73af\u3002</p> <p>\u7ed9\u5b9a\u6751\u5e84\u548c\u4e0d\u540c\u6751\u5e84\u95f4\u9053\u8def\u7684\u957f\u5ea6\u3002\u5bfb\u627e\u4f4d\u7f6e\uff0c\u4f7f\u5176\u5230\u5404\u4e2a\u6751\u5e84\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u3002</p> <p>\u54c8\u5e0c\uff0c\u6c42\u7b49\u6982\u7387\u6210\u529f\u4e0e\u4e0d\u6210\u529f\u67e5\u627e\u7684\u5e73\u5747\u67e5\u627e\u6b21\u6570\u3002</p> <p>\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u548c\u54c8\u5e0c\u7ed3\u679c\uff0c\u6c42\u6700\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff1a\u6784\u5efa\u6709\u5411\u56fe\uff0c\u6c42\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\u5217</p> <p>\u6392\u5e8f\u7684\u8f85\u52a9\u7a7a\u95f4 \u5806\u6392\u5e8f\uff1a\u65e0\u8f85\u52a9\u7a7a\u95f4 \u5feb\u901f\u6392\u5e8f\uff1a\u9012\u5f52\u9700\u8981\u6808\u7a7a\u95f4 \u5f52\u5e76\u6392\u5e8f\uff1a\u989d\u5916\u9700\u8981\u6570\u7ec4</p> <p>\u6392\u5e8f\u7b97\u6cd5\u662f\u5426\u7a33\u5b9a\uff1a\u9700\u8981\u4ea4\u6362\u7684\u80af\u5b9a\u4e0d\u7a33\u5b9a</p> <p>\u5f88\u5927\u7684\u6570\u636e\uff0c\u5728\u4e0d\u5b8c\u5168\u6392\u5e8f\u7684\u524d\u63d0\u4e0b\u627e\u51fa\u524d m \u5c0f\u7684\u5143\u7d20\uff1a \u5efa\u7acb\u5927\u5c0f\u4e3a m \u7684\u5806\uff0c\u5c06\u6240\u6709\u5143\u7d20\u4f9d\u6b21\u63d2\u5165</p> <p>\u7528\u5feb\u901f\u6392\u5e8f\u627e\u5230\u7b2c k \u5927\u7684\u5143\u7d20</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u975e\u9012\u5f52\u7b97\u6cd5\uff1f \u5c06\u9012\u5f52\u8f6c\u5316\u4e3a\u5faa\u73af\uff1f</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/15.5%20%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81/#_2","title":"\u4e00\u4e9b\u4ee3\u7801","text":"<p>BST.c</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElementType;\ntypedef struct TNode* Position;\ntypedef Position BinTree; /* \u4e8c\u53c9\u6811\u7c7b\u578b */\nstruct TNode {            /* \u6811\u7ed3\u70b9\u5b9a\u4e49 */\n    ElementType Data;     /* \u7ed3\u70b9\u6570\u636e */\n    BinTree Left;         /* \u6307\u5411\u5de6\u5b50\u6811 */\n    BinTree Right;        /* \u6307\u5411\u53f3\u5b50\u6811 */\n};\n\nPosition Find(ElementType X, BinTree BST) {\n    if (!BST)\n        return NULL; /*\u67e5\u627e\u5931\u8d25*/\n    if (X &gt; BST-&gt;Data)\n        return Find(X, BST-&gt;Right); /*\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else if (X &lt; BST-&gt;Data)\n        return Find(X, BST-&gt;Left); /*\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else                           /* X == BST-&gt;Data */\n        return BST;                /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n}\n\nPosition IterFind(ElementType X, BinTree BST) {\n    while (BST) {\n        if (X &gt; BST-&gt;Data)\n            BST = BST-&gt;Right; /*\u5411\u53f3\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else if (X &lt; BST-&gt;Data)\n            BST = BST-&gt;Left; /*\u5411\u5de6\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else                 /* X == BST-&gt;Data */\n            return BST;      /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n    }\n    return NULL; /*\u67e5\u627e\u5931\u8d25*/\n}\n\nPosition FindMin(BinTree BST) {\n    if (!BST)\n        return NULL; /*\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd4\u56deNULL*/\n    else if (!BST-&gt;Left)\n        return BST; /*\u627e\u5230\u6700\u5de6\u53f6\u7ed3\u70b9\u5e76\u8fd4\u56de*/\n    else\n        return FindMin(BST-&gt;Left); /*\u6cbf\u5de6\u5206\u652f\u7ee7\u7eed\u67e5\u627e*/\n}\n\nPosition FindMax(BinTree BST) {\n    if (BST)\n        while (BST-&gt;Right) /*\u6cbf\u53f3\u5206\u652f\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u6700\u53f3\u53f6\u7ed3\u70b9*/\n            BST = BST-&gt;Right;\n    return BST;\n}\n\nBinTree Insert(BinTree BST, ElementType X) {\n    if (!BST) { /* \u82e5\u539f\u6811\u4e3a\u7a7a\uff0c\u751f\u6210\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u641c\u7d22\u6811 */\n        BST = (BinTree)malloc(sizeof(struct TNode));\n        BST-&gt;Data = X;\n        BST-&gt;Left = BST-&gt;Right = NULL;\n    } else { /* \u5f00\u59cb\u627e\u8981\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e */\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Insert(BST-&gt;Left, X); /*\u9012\u5f52\u63d2\u5165\u5de6\u5b50\u6811*/\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Insert(BST-&gt;Right, X); /*\u9012\u5f52\u63d2\u5165\u53f3\u5b50\u6811*/\n        /* else X\u5df2\u7ecf\u5b58\u5728\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a */\n    }\n    return BST;\n}\n\nBinTree Delete(BinTree BST, ElementType X) {\n    Position Tmp;\n    if (!BST)\n        printf(\"\u8981\u5220\u9664\u7684\u5143\u7d20\u672a\u627e\u5230\");\n    else {\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Delete(BST-&gt;Left, X); /* \u4ece\u5de6\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Delete(BST-&gt;Right, X); /* \u4ece\u53f3\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else {                                  /* BST\u5c31\u662f\u8981\u5220\u9664\u7684\u7ed3\u70b9 */\n            /* \u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u6709\u5de6\u53f3\u4e24\u4e2a\u5b50\u7ed3\u70b9 */\n            if (BST-&gt;Left &amp;&amp; BST-&gt;Right) {\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5c0f\u7684\u5143\u7d20\u586b\u5145\u5220\u9664\u7ed3\u70b9 */\n                Tmp = FindMin(BST-&gt;Right);\n                BST-&gt;Data = Tmp-&gt;Data;\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u6700\u5c0f\u5143\u7d20 */\n                BST-&gt;Right = Delete(BST-&gt;Right, BST-&gt;Data);\n            } else { /* \u88ab\u5220\u9664\u7ed3\u70b9\u6709\u4e00\u4e2a\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                Tmp = BST;\n                if (!BST-&gt;Left) /* \u53ea\u6709\u53f3\u5b69\u5b50\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                    BST = BST-&gt;Right;\n                else /* \u53ea\u6709\u5de6\u5b69\u5b50 */\n                    BST = BST-&gt;Left;\n                free(Tmp);\n            }\n        }\n    }\n    return BST;\n}\n</code></pre> <p>\u8868\u8fbe\u5f0f\u6811</p> C<pre><code>/*\n\u4e8c\u5143\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8054\u7cfb\u5230\u4e8c\u53c9\u6811:\n\u4ee5\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\u4f5c\u4e3a\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u4ee5\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u975e\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u5176\u4e24\u68f5\u5b50\u6811\u662f\u5b83\u7684\u8fd0\u7b97\u5bf9\u8c61,\n\u5b50\u6811\u53ef\u4ee5\u662f\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u590d\u6742\u8868\u8fbe\u5f0f.\n\n\u7b97\u5f0f\u8868\u8fbe\u5f0f\u548c\u8868\u8fbe\u5f0f\u6811\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\n    \u8868\u8fbe\u5f0f\u6811\u7684\u5148\u6839\u904d\u5386\uff1a\u524d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u4e2d\u6839\u904d\u5386\uff1a\u4e2d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u540e\u6839\u904d\u5386\uff1a\u540e\u7f00\u8868\u8fbe\u5f0f\n\n\u6784\u5efa\u8868\u8fbe\u5f0f\u6811:\n1. \u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u4e2d\u7f00\u5f62\u5f0f\uff1a(4+1*(5-2))-6/3\n2. \u9996\u5148\u5c06\u6bcf\u4e2a\u8fd0\u7b97\u52a0\u4e0a\u62ec\u53f7\uff0c\u533a\u5206\u4f18\u5148\u7ea7\uff0c\u5f97\u5230(4+(1*(5-2)))-(6/3)\n3. \u62ec\u53f7\u5916\u7684-\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c(4+(1*(5-2)))\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c(6/3)\u4f5c\u4e3a\u53f3\u5b50\u6811\uff1b\n4. \u9012\u5f52\u7684\u8f6c\u63624+(1*(5-2))\uff0c+\u6700\u4e3a\u6839\u8282\u70b9\uff0c4\u662f\u5de6\u5b50\u6811\uff0c\n    (1*(5-2))\u662f\u53f3\u5b50\u6811\u3002*\u662f\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c1\u662f\u5de6\u5b50\u6811\uff0c(5-2)\u662f\u53f3\u5b50\u6811\u3002\n    \u6700\u540e\u8ba1\u7b97(5-2)\uff0c-\u662f\u6839\u8282\u70b9\uff0c5\u662f\u5de6\u5b50\u6811\uff0c2\u662f\u53f3\u5b50\u6811\u3002\n\u6784\u9020\u597d\u8868\u8fbe\u5f0f\u6811\u4e4b\u540e\uff0c\u524d\u7f00\u8868\u8fbe\u5f0f\u548c\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53ef\u6839\u636e\u5148\u6839\u904d\u5386\u548c\u540e\u6839\u904d\u5386\u5f97\u5230\u3002\n    \u524d\u7f00\u8868\u8fbe\u5f0f\uff1a- + 4 * 1 - 5 2 / 6 3\n    \u540e\u7f00\u8868\u8fbe\u5f0f\uff1a4 1 5 2 - * + 6 3 / -\n*/\n\n#include &lt;stdio.h&gt;\n#define MAXN 1000\n\nint lch[MAXN], rch[MAXN];\nchar op[MAXN];\nint nc = 0;  // \u7ed3\u70b9\u6570\n\nint build_tree(char* s, int x, int y) {\n    int i, c1 = -1, c2 = -1, p = 0;\n    int u;\n    if (y - x == 1)  // \u4ec5\u4e00\u4e2a\u5b57\u7b26\uff0c\u5efa\u7acb\u5355\u72ec\u7ed3\u70b9\n    {\n        u = ++nc;\n        lch[u] = rch[u] = 0;\n        op[u] = s[x];\n        return u;\n    }\n    for (i = x; i &lt; y; i++) {\n        switch (s[i]) {\n            case '(':\n                p++;\n                break;\n            case ')':\n                p--;\n                break;\n            case '+':\n            case '-':\n                if (!p)\n                    c1 = i;\n                break;\n            case '*':\n            case '/':\n                if (!p)\n                    c2 = i;\n                break;\n        }\n    }\n    if (c1 &lt; 0)\n        c1 = c2;  // \u627e\u4e0d\u5230\u62ec\u53f7\u5916\u7684\u52a0\u51cf\u53f7\uff0c\u5c31\u7528\u4e58\u9664\u53f7\n    if (c1 &lt; 0)\n        return build_tree(s, x + 1, y - 1);  // \u6574\u4e2a\u8868\u8fbe\u5f0f\u88ab\u4e00\u5bf9\u62ec\u53f7\u62ec\u8d77\u6765\n    u = ++nc;\n    lch[u] = build_tree(s, x, c1);\n    rch[u] = build_tree(s, c1 + 1, y);\n    op[u] = s[c1];\n    return u;\n}\n</code></pre> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811</p> C<pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u7ebf\u7d22\u4e8c\u53c9\u6811\ntypedef struct ThreadNode {\n    int data;\n    struct ThreadNode *left, *right;\n    int ltag, rtag;  // tag\u4e3a0\u8868\u793a\u6709\u5b69\u5b50\n} ThreadNode;\n\n// \u6307\u5411\u5f53\u524d\u8bbf\u95ee\u53d8\u91cf\u7684\u524d\u9a71\nThreadNode* pre = NULL;\n\nvoid visit(ThreadNode* node);\n\n// \u521d\u59cb\u5316\u8282\u70b9\nThreadNode* initNode() {\n    ThreadNode* Node = (ThreadNode*)malloc(sizeof(ThreadNode));\n    Node-&gt;left = NULL;\n    Node-&gt;right = NULL;\n    Node-&gt;ltag = 0;  // \u9ed8\u8ba4\u8282\u70b9\u6709\u5de6\u53f3\u5b69\u5b50\n    Node-&gt;rtag = 0;\n    return Node;\n}\n\n// \u63d2\u5165\u65b0\u8282\u70b9\u5e76\u8d4b\u503c\nbool insertNode(ThreadNode* node, int data, int contain) {\n    ThreadNode* newNode = initNode();\n    // contain\u4e3a0\u65f6\u5411\u5de6\u63d2\u5165,\u4e3a1\u65f6\u5411\u53f3\u63d2\u5165\n    if (node-&gt;left == NULL &amp;&amp; contain == 0) {\n        node-&gt;left = newNode;\n        newNode-&gt;data = data;\n        return true;\n    } else if (node-&gt;right == NULL &amp;&amp; contain == 1) {\n        node-&gt;right = newNode;\n        newNode-&gt;data = data;\n        return true;\n    }\n    free(newNode);\n    return false;\n}\n\n// \u8fb9\u4e2d\u5e8f\u904d\u5386\u8fb9\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid InThread(ThreadNode* node) {\n    if (node != NULL) {\n        InThread(node-&gt;left);   // \u904d\u5386\u5de6\u5b50\u6811\n        visit(node);            // \u8bbf\u95ee\u6839\u8282\u70b9\n        InThread(node-&gt;right);  // \u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n\n// \u521b\u5efa\u4e2d\u5e8f\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid createInThread(ThreadNode* node) {\n    // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf\n    pre = NULL;\n    InThread(node);\n    // \u6700\u540e\u4e00\u4e2a\u904d\u5386\u7684\u8282\u70b9\u7684\u540e\u7ee7\u8bbe\u7f6e\u4e3aNULL\n    pre-&gt;right = NULL;\n    pre-&gt;rtag = 1;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u5148\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* FirstNode(ThreadNode* node) {\n    // \u5f53\u4e3a\u7a7a\u65f6\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;ltag == 0) {\n        node = node-&gt;left;\n    }\n    return node;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u540e\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* LastNode(ThreadNode* node) {\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;rtag == 0) {\n        node = node-&gt;right;\n    }\n    return node;\n}\n\n// \u8bbf\u95ee\u6839\u8282\u70b9\nvoid visit(ThreadNode* node) {\n    if (node-&gt;left == NULL) {\n        node-&gt;left = pre;\n        node-&gt;ltag = 1;\n    }\n\n    if (pre != NULL &amp;&amp; pre-&gt;right == NULL) {\n        pre-&gt;right = node;\n        pre-&gt;rtag = 1;\n    }\n    pre = node;\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u540e\u7ee7\u8282\u70b9\nThreadNode* NextNode(ThreadNode* p) {\n    if (p-&gt;rtag == 0) {\n        return FirstNode(p-&gt;right);\n    }\n    return p-&gt;right;\n}\n\nvoid visit0(ThreadNode* thread_node) {\n    printf(\"%d  \", thread_node-&gt;data);\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u904d\u5386\nvoid Inorder(ThreadNode* rootNode) {\n    for (ThreadNode* p = FirstNode(rootNode); p != NULL; p = NextNode(p)) {\n        visit0(p);\n    }\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u524d\u9a71\u8282\u70b9\nThreadNode* BeforeNode(ThreadNode* p) {\n    if (p-&gt;ltag == 0) {\n        return LastNode(p-&gt;left);\n    }\n    return p-&gt;left;\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u9006\u5e8f\u904d\u5386\nvoid InorderNi(ThreadNode* rootNode) {\n    for (ThreadNode* p = LastNode(rootNode); p != NULL; p = BeforeNode(p)) {\n        visit0(p);\n    }\n}\n\nint main(void) {\n    // \u521d\u59cb\u5316\u4e8c\u53c9\u6811\n    ThreadNode* rootNode = initNode();\n    // \u6d4b\u8bd5\u6839\u8282\u70b9\u63d2\u5165\u6570\u636e\n    rootNode-&gt;data = 1;\n    printf(\"\u6839\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;data);\n    // \u6d4b\u8bd5\u5f80\u4e8c\u53c9\u6811\u521b\u5efa\u8282\u70b9\n    insertNode(rootNode, 2, 0);\n    insertNode(rootNode, 3, 1);\n    printf(\"\u7b2c\u4e8c\u5c42\u5de6\u8282\u70b9\u6570\u636e:%d\\n\u7b2c\u4e8c\u5c42\u53f3\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;left-&gt;data,\n           rootNode-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left, 4, 1);\n    insertNode(rootNode-&gt;right, 5, 1);\n    printf(\"\u7b2c\u4e09\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\u7b2c\u4e09\u5c42\u7b2c\u4e8c\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;data, rootNode-&gt;right-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left-&gt;right, 6, 0);\n    printf(\"\u7b2c\u56db\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u5de6\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;left-&gt;data);\n\n    createInThread(rootNode);\n\n    printf(\"\u4e2d\u5e8f\u904d\u5386:\\n\");\n    Inorder(rootNode);\n    printf(\"\\n\u9006\u4e2d\u5e8f\u904d\u5386:\\n\");\n    InorderNi(rootNode);\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/","title":"2. \u6700\u5927\u8fde\u7eed\u548c\u5b50\u6570\u7ec4","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 97 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#class-two","title":"Class Two","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#_1","title":"\u6700\u5927\u548c\u8fde\u7eed\u5b50\u6570\u7ec4","text":"<ol> <li>\u66b4\u529b\u6cd5:O(n^3)</li> <li>\u66b4\u529b\u6cd5\u4f18\u5316:O(n^2) \u786e\u5b9a i \u540e,\u904d\u5386 j \u65f6\u5373\u5b8c\u6210\u6c42\u548c</li> </ol> C<pre><code>int MaxSum(int a[],int len) {\n    int nsum,maxsum;\n    maxsum=0;\n    for (int i=0;i&lt;len;i++) {\n        nsum=0;\n        for (int j=1;j&lt;len;j++) {\n            nsum+=a[j]; //j\u53f3\u79fb\u65f6\u52a0\n            if (nsum&gt;maxsum) maxsum=nsum;\n        }\n    }\n    return maxsum;\n}\n</code></pre> <ol> <li>\u641c\u7d22\u533a\u95f4+\u524d\u7f00\u548c:O(n^2)</li> <li>\u5206\u6cbb\u6cd5:O(nlogn) \u5206\u6210\u5de6\u534a\u8fb9,\u53f3\u534a\u8fb9,\u4e2d\u95f4</li> </ol> C<pre><code>int MaxSum(int l,int r) {\n    if (l==r) return a[l]; //\u8fd4\u56de\u6761\u4ef6\n\n    int mid=(l+r)&gt;&gt;1;\n    int max1=MaxSum(l,mid); //\u8ba1\u7b97\u5de6\u534a\u8fb9\n    int max2=MaxSUm(mid,r); //\u8ba1\u7b97\u53f3\u534a\u8fb9\n\n    int max3,lmax=0,rmax=0,sum=0;\n    for (int i=mid;i&gt;=l;i--) {\n        sum+=a[i];\n        lmax=max(lmax,sum);\n    }\n    sum=0;\n    for (int i=mid+a;i&lt;=r;i++) {\n        sum+=a[i];\n        ramx=max(ramx,sum);\n    }\n    max3=lmax+rmax;\n\n    return max(max1,max2,max3);\n}\n</code></pre> <ol> <li>\u7ebf\u6027 dp:O(n) \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:<code>dp[i]=max(dp[i-1]+a[i],a[i])</code></li> <li>\u626b\u63cf\u6cd5:O(n)</li> </ol> C<pre><code>int MaxSum() {\n    int res=-INF,sum=0;\n    for (int i=1;i&lt;=len;i++) {\n        if (sum&lt;0) sum=a[i];\n        else sum+=a[i];\n\n        res=max(res,sum);\n    }\n    return res;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#_2","title":"\u94fe\u8868(\u7565)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/2.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84/#hw2","title":"HW2","text":"<p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient? A.doubly linked list B.singly linked circular list C.doubly linked circular list with a dummy head node D.sequential list \u8bbf\u95ee\u968f\u673a\u8282\u70b9:\u76f8\u540c \u6700\u540e\u4f4d\u7f6e:\u5faa\u73af\u94fe\u8868\u53ef\u901a\u8fc7\u865a\u62df\u5934\u7ed3\u70b9\u540e\u79fb\u4e00\u4f4d\u76f4\u63a5\u627e\u5230\u6700\u540e\u4e00\u4f4d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"3. \u5806\u6808\u548c\u961f\u5217","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 965 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#class-three","title":"Class Three","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_1","title":"\u5f15\u8a00","text":"<ul> <li>Taylor \u5c55\u5f00\u672c\u8d28\u662f\u591a\u9879\u5f0f\u903c\u8fd1\u590d\u6742\u51fd\u6570,\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u4e5f\u662f\u903c\u8fd1,\u7528\u6570\u636e\u8bad\u7ec3\u6c42\u51fa\u6743\u91cd,\u5f97\u5230\u6570\u636e\u7ed3\u6784.</li> <li>\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784(\u5173\u7cfb).\u901a\u8fc7\u4e0d\u65ad\u6539\u8fdb\u6570\u636e\u7ed3\u6784,\u83b7\u5f97\u667a\u80fd.</li> <li>\u5747\u644a\u4ee3\u4ef7\u5206\u6790:\u5c06\u4ee3\u4ef7\u4e0e\u7ed3\u6784\u7ed3\u5408.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_2","title":"\u6709\u5e8f\u7684\u5e8f\u5217\u662f\u7ebf\u6027\u8868","text":"<p>\u591a\u9879\u5f0f(The Polynomial ADT)</p> <ul> <li>\u7528\u6570\u7ec4\u8868\u793a\u591a\u9879\u5f0f.\u4e3a\u4e86\u9632\u6b62\u7a00\u758f\u6570\u7ec4\u6d6a\u8d39\u7a7a\u95f4,\u53ea\u8868\u793a\u975e\u96f6\u9879.\u4f7f\u7528\u7ed3\u6784\u6570\u7ec4\u6216\u94fe\u8868.</li> </ul> <p>\u591a\u91cd\u7ebf\u6027\u8868</p> <ul> <li>e.g. \u8868\u793a\u5f88\u591a\u5b66\u751f\u9009\u51e0\u95e8\u8bfe.\u5217\u51fa\u5b66\u751f\u4e3a\u5217,\u8bfe\u7a0b\u4e3a\u884c\u7684\u7a00\u758f\u77e9\u9635.\u53ea\u8868\u793a\u9009\u7684\u8282\u70b9\u5e76\u6309\u7eb5\u5411,\u6a2a\u5411\u8fde\u6210\u94fe\u8868.</li> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u7eb5\u5411,\u6a2a\u5411\u4e24\u4e2a\u94fe\u8868\u4e2d.</li> </ul> <p>\u5185\u5b58\u7ba1\u7406</p> <ul> <li>\u600e\u4e48\u7ba1\u7a7a\u95f2\u4f4d\u7f6e?\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u600e\u4e48\u5206\u914d,\u91ca\u653e\u5185\u5b58.\u7528\u94fe\u8868\u7ba1\u7406</li> <li>\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u5206\u914d\u76f8\u5bf9\u4f4d\u7f6e(\u76f8\u5bf9\u5730\u5740),\u7b49\u4ee3\u7801\u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4(\u7edd\u5bf9\u5730\u5740)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_3","title":"\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b","text":"<ol> <li>\u7406\u60f3\u60c5\u51b5\u4e0b,\u7533\u8bf7\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u90fd\u76f8\u540c,\u5185\u5b58\u4e2d\u5229\u7528\u4e00\u5c0f\u5757\u4f5c\u4e3a\u6307\u9488\u8868\u793a\u5730\u5740,\u5c06\u4e0d\u540c\u5730\u5740\u4e32\u6210\u94fe\u8868,\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4.</li> <li>malloc \u7533\u8bf7\u7a7a\u95f4\u65f6,\u5206\u914d\u5934\u4e0a\u7684\u7a7a\u95f2\u7a7a\u95f4\u7684\u6307\u9488.\u4fee\u6539\u94fe\u8868,\u5c06\u5934\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e.</li> <li>free \u91ca\u653e\u7a7a\u95f4\u65f6,\u5c06\u91ca\u653e\u7684\u7a7a\u95f4\u8fde\u5230\u5934\u6307\u9488.</li> <li>\u4f7f\u7528\u65f6\u95f4\u957f\u540e,\u5185\u5b58\u7684\u94fe\u8868\u66f4\u65e0\u5e8f,\u4f46\u5934\u8282\u70b9\u59cb\u7ec8\u7ef4\u6301\u5934.</li> <li>\u5b9e\u9645\u60c5\u51b5\u4e2d,\u7533\u8bf7\u548c\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u4efb\u610f,\u6bcf\u4e2a\u8282\u70b9\u5927\u5c0f\u4e0d\u540c.\u6b64\u65f6\u6bcf\u4e2a\u8282\u70b9\u4e2d\u5305\u542b\u8fd9\u4e2a\u8282\u70b9\u5927\u5c0f,\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4\u4f4d\u7f6e,\u6807\u8bb0\u8be5\u7a7a\u95f4\u662f\u5426\u88ab\u5360\u7528\u7684\u6807\u8bb0 flag \u8fd9\u4e09\u4e2a\u4fe1\u606f.</li> <li>\u6bcf\u6b21\u7533\u8bf7\u65f6,\u5148\u770b\u8be5\u8282\u70b9\u5927\u5c0f\u662f\u5426\u6ee1\u8db3.\u82e5\u8282\u70b9\u5c0f,\u770b\u4e0b\u4e00\u4e2a\u8282\u70b9;\u82e5\u8282\u70b9\u6ee1\u8db3,\u4ece\u8be5\u8282\u70b9\u4e2d\u5207\u4e00\u5757.</li> <li>\u9632\u6b62\u591a\u6b21\u4f7f\u7528\u540e\u5185\u5b58\u788e\u7247\u5316,\u91ca\u653e\u5185\u5b58\u65f6\u5c3d\u91cf\u4f7f\u4e0b\u4e00\u5757\u6216\u4e0a\u4e00\u5757\u8fde\u7eed.\u6839\u636e\u8be5\u8282\u70b9\u5927\u5c0f\u627e\u5230\u4e0b\u4e00\u8282\u70b9,\u68c0\u67e5\u4e0b\u4e00\u8282\u70b9\u7684 flag.</li> <li>\u4e3a\u4e86\u80fd\u548c\u524d\u4e00\u8282\u70b9,\u9700\u8981\u5728\u8282\u70b9\u672b\u5c3e\u52a0 size,next,flag \u4fe1\u606f.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#the-stack-adt","title":"\u5806\u6808(The Stack ADT)","text":"<p>\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97</p> <ul> <li>\u6bcf\u6b21\u9047\u5230\u8fd0\u7b97\u7b26\u53f7,\u8ba1\u7b97\u524d\u4e24\u4e2a\u6570,\u5e76\u538b\u5165\u8ba1\u7b97\u7ed3\u679c.</li> <li>\u600e\u4e48\u628a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53d8\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f?</li> <li>\u9047\u5230\u6570,\u653e\u5165;\u9047\u5230\u7b26\u53f7,\u8bb0\u4f4f.\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u9ad8,\u9ad8\u7684\u51fa\u53bb;\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u4f4e,\u8bb0\u4f4f\u65b0\u7b26\u53f7;\u5982\u679c\u5df2\u6709\u7684\u548c\u65b0\u7684\u4f18\u5148\u7ea7\u4e00\u6837,\u5148\u8bfb\u5230\u7684\u51fa\u53bb.</li> <li>\u7531\u62ec\u53f7\u600e\u4e48\u529e?\u5c06\u62ec\u53f7\u89c6\u4e3a\u8fd0\u7b97.\u5de6\u62ec\u53f7\u4f18\u5148\u7ea7\u4f4e.\u9047\u5230\u53f3\u62ec\u53f7\u629b\u51fa\u4e4b\u524d\u7684\u7b26\u53f7,\u76f4\u5230\u5de6\u62ec\u53f7.</li> </ul> <p>\u5806\u6808\u4e0e\u51fd\u6570\u8c03\u7528</p> <ul> <li>\u8fde\u7eed\u591a\u6b21\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u6267\u884c\u540e\u56de\u7b54\u4e0a\u4e00\u4e2a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u5229\u7528\u5806\u6808:\u5148\u653e main \u51fd\u6570,\u518d\u6bcf\u6b21\u8c03\u7528\u4e00\u6b21\u538b\u5165\u51fd\u6570\u540d.\u6bcf\u6b21\u8fd4\u56de\u65f6\u6808\u9876\u7684\u51fd\u6570\u4e3a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u89e3\u51b3\u9012\u5f52\u8c03\u7528\u7684\u95ee\u9898.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/3.%20%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#the-queue-adt","title":"\u961f\u5217(The Queue ADT)","text":"<ul> <li>\u7528\u94fe\u8868\u5b9e\u73b0\u65f6,front \u5220\u9664\u5143\u7d20,rear \u63d2\u5165\u5143\u7d20(front \u6307\u5411 next,\u5220\u9664\u540e\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u4e0b\u4e00\u4e2a).</li> <li>\u6307\u9488\u6307\u5411\u53f3,\u5219\u4ece\u53f3\u63d2\u5165,\u4ece\u5de6\u5220\u9664</li> <li>\u961f\u5217\u7a7a\u95f4\u7528\u6ee1\u540e\u600e\u4e48\u529e?\u5faa\u73af\u961f\u5217.</li> <li>\u5faa\u73af\u961f\u5217\u7a7a\u548c\u6ee1:front==rear+1(\u53d6\u4f59)</li> <li>\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u5224\u65ad?\u961f\u5217\u4e2d n \u4e2a\u4f4d\u7f6e,\u5171\u6709 n+1 \u4e2d\u60c5\u51b5,\u4f46 front \u548c rear \u7684\u72b6\u6001\u5171\u6709 n \u79cd(\u4fe1\u606f\u91cf\u4e0d\u591f)</li> <li>\u600e\u4e48\u589e\u52a0\u4fe1\u606f?\u52a0\u5165 tag,\u63d2\u5165\u65f6\u8bbe\u7f6e\u4e3a 1,\u5220\u9664\u65f6\u8bbe\u7f6e\u4e3a 0.\u65e0\u6cd5\u5224\u65ad\u65f6\u770b tag.</li> <li>\u6216\u8005\u4f7f\u961f\u5217\u72b6\u6001\u4e00\u5171 n \u79cd.\u7a7a\u65f6 rear+1==front,\u4e00\u4e2a\u5143\u7d20\u65f6 front==rear,\u6ee1\u65f6 front==rear+2.</li> <li>\u4e00\u822c\u4f7f\u7528 rear \u4e0d\u6307\u5b9e\u9645\u7684\u4f4d\u7f6e,\u800c\u662f\u6307\u4e0b\u4e00\u4e2a\u8981\u653e\u7684\u4f4d\u7f6e.\u7a7a:<code>front\\==rear</code>,\u6ee1:<code>front\\==rear+1</code>.</li> <li>\u6216\u8005 front \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e(\u54d1\u5934),\u7a7a:front==rear,\u6ee1:front==rear+1.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/","title":"4. \u6811\u7684\u6982\u5ff5","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 903 \u4e2a\u5b57\u00a0\u00a03 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#class-four","title":"Class Four","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_1","title":"\u535a\u5f08\u6811","text":"<ul> <li>\u7528\u6811\u89e3\u51b3\u96f6\u548c\u535a\u5f08\u7684\u95ee\u9898(e.g.\u68cb\u7c7b)</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8868\u793a\u4e0b\u4e00\u6b65\u6240\u6709\u53ef\u80fd\u7684\u8d70\u6cd5,\u4f7f\u7528 minmax \u7b97\u6cd5\u548c\\(\\alpha\\beta\\)\u526a\u679d</li> <li>\u6838\u5fc3 1:\u8bc4\u4f30\u6bcf\u4e2a\u8282\u70b9.AlphaGo:\u6839\u636e\u4e4b\u524d\u4eba\u7c7b\u68cb\u8c31\u5b66\u4e60,\u8ba1\u7b97\u5404\u79cd\u68cb\u5c40\u83b7\u80dc\u6982\u7387(\u6536\u76ca)</li> <li>\u6838\u5fc3 2:\u81ea\u5df1\u5c42\u53d6 max,\u5bf9\u624b\u5c42\u53d6 min</li> <li>\u5bf9\u56f4\u68cb\u800c\u8a00 minmax \u8ba1\u7b97\u91cf\u592a\u5927,\u5229\u7528\u8499\u7279\u5361\u6d1b\u6309\u6982\u7387\u9009\u62e9\u65b9\u5411</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_2","title":"\u6811\u7684\u6982\u5ff5","text":"<ul> <li>\u6811\u548c\u56fe\u7684\u533a\u522b:\u6811\u4e00\u5b9a\u8fde\u901a,\u6ca1\u6709\u56de\u8def.</li> <li>\u5bf9\u4e8e\u56fe\u800c\u8a00,\u8fde\u901a,\u6ca1\u56de\u8def,n \u4e2a\u70b9 n-1 \u6761\u8fb9,\u8fd9\u4e09\u4e2a\u6761\u4ef6\u77e5\u4e8c\u63a8\u4e00</li> <li>\u68ee\u6797:\u6811\u7684\u96c6\u5408</li> <li>degree of tree:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u4e2a\u513f\u5b50;degree of graph:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u6761\u51fa\u8fb9</li> <li>\u6811\u4e0a\u4efb\u4f55\u4e24\u70b9\u4e4b\u95f4\u7684 path \u4e00\u5b9a\u552f\u4e00</li> <li>depth:\u8be5\u70b9\u5230\u6839\u7684\u8ddd\u79bb</li> <li>height:\u8be5\u70b9\u5230\u6700\u4f4e\u70b9\u7684\u8ddd\u79bb</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_3","title":"\u6811\u7684\u5b9e\u73b0","text":"<ul> <li>\u7528\u94fe\u8868,\u600e\u4e48\u89e3\u51b3\u6bcf\u4e2a\u8282\u70b9\u513f\u5b50\u6570\u4e0d\u786e\u5b9a\u7684\u95ee\u9898?\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u4ec5\u6709 FirstChild,NextSibling \u4e24\u4e2a\u6307\u9488</li> <li>\u8fd9\u6837\u7684\u6811\u5373\u5316\u4e3a\u4e8c\u53c9\u6811</li> <li>\u5229\u7528\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6784\u5efa\u6811\uff1a</li> <li>\u8bfb\u5165\u6570,\u5b58\u50a8\u6307\u9488</li> <li>\u8bfb\u5165\u7b26\u53f7,\u629b\u51fa\u4e24\u4e2a\u6570,\u5c06\u7b26\u53f7\u7684\u6307\u9488\u538b\u5165,\u629b\u51fa\u7684\u6570\u4f5c\u4e3a\u8be5\u7b26\u53f7\u7684\u513f\u5b50</li> <li>\u8868\u8fbe\u5f0f\u524d\u5e8f\u904d\u5386\u5f97\u5230\u524d\u5e8f\u8868\u8fbe\u5f0f\uff0c\u540e\u5e8f\u904d\u5386\u5f97\u5230\u540e\u5e8f\u8868\u8fbe\u5f0f</li> <li>\u904d\u5386\u7684\u672c\u8d28:\u5c06\u4e8c\u7ef4\u7ed3\u6784\u53d8\u6210\u4e00\u7ef4\u7684\u5e8f\u5217</li> <li>\u7ebf\u7d22\u6811:\u6839\u8282\u70b9\u548c\u53f6\u8282\u70b9\u6d6a\u8d39\u7684\u6307\u9488\u6307\u5411\u904d\u5386\u65f6\u7684\u524d\u4e00\u4e2a\u70b9\u548c\u540e\u4e00\u4e2a\u70b9.\u9700\u8981\u6807\u8bb0\u662f\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fd8\u662f\u6839\u6216\u53f6\u7684\u6307\u9488.\u6bcf\u6b21\u5224\u65ad\u662f\u4e0d\u662f\u7ebf\u7d22.</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u53ef\u589e\u52a0\u54d1\u5934\u8282\u70b9.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#hw4","title":"HW4","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_4","title":"\u4e8c\u53c9\u6811\u6982\u5ff5","text":"<ul> <li>\u6811\u7684\u5ea6\uff1a\u4e00\u4e2a\u8282\u70b9\u6709 m \u4e2a\u5206\u53c9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u5c31\u4e3a m\u3002\u53f6\u5b50\u8282\u70b9\u7684\u5ea6\u4e3a 0\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5206\u53c9\u3002\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u5ea6\u53ea\u6709 0\uff0c1\uff0c2 \u8fd9\u4e09\u79cd\uff0c\u5176\u4e2d\u4e3a 0 \u7684\u80af\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\uff1amax(\u5de6\u5b50\u6811\u6df1\u5ea6\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6)+1\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u5206\u7c7b</li> <li>\u6ee1\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u4e14\u6709\u4e2a\\(2^k-1\\)\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u6ee1\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u7684\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3a i\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811(AVL \u6811)\uff1a\u5b83\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28</li> <li>\u5728\u4e8c\u53c9\u6811\u4e0a\u7684\u7b2c i \u5c42\u4e0a\u81f3\u591a\u6709\\(2^{i-1}\\)\u4e2a\u8282\u70b9(i&gt;=1)</li> <li>\u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u81f3\u591a\u6709\\(2^k-1\\)\u4e2a\u8282\u70b9(k &gt;= 1)</li> <li>\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u6761\u6027\u8d28\uff1an0\u3001n1\u3001n2 \u5206\u522b\u4ee3\u8868\u5ea6\u6570\u4e3a 0\u30011\u30012 \u7684\u8282\u70b9\u603b\u6570\u3002n \u4e3a\u603b\u7ed3\u70b9\u6570\uff0c\u5219\u6709\uff1a     n=\u6240\u6709\u8282\u70b9\u5ea6\u4e4b\u548c+1 (\u6240\u6709\u6811\u7684\u6027\u8d28)     \\(n_0=n_2+1;\\) (\u6ee1\u4e8c\u53c9\u6811\\(n_0=2^k,n_2=2^k-1\\),\u975e\u6ee1\u4e8c\u53c9\u6811\\(n_0,n_2\\)\u540c\u65f6\u51cf\u5c0f)     \\(n=n_0+n_1+n_2;\\) \\(\u5206\u652f\u603b\u7ebf=n-1=n_1+2n_2;\\) (\u8fde\u901a\u65e0\u56de\u8def\u56fe\u7684\u8fb9\u4e3a n-1\uff0c\u5c06 n0 \u7528 n2 \u4ee3\u5165)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/4.%20%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5/#_5","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ol> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> </li> <li> <p>\u5bf9\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6309\u7167\u67d0\u79cd\u904d\u5386\u65b9\u5f0f\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u53eb\u4f5c\u7ebf\u7d22\u5316\uff0c\u88ab\u7ebf\u7d22\u5316\u4e86\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u7ebf\u7d22\u4e8c\u53c9\u6811(Threaded binary tree)\u3002</p> </li> <li> <p>\u5f15\u5165\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u76ee\u7684\u662f\uff1a\u52a0\u5feb\u67e5\u627e\u7ed3\u70b9\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u6784\u9020</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784\uff1alchild ltag data rtag rchild</p> </li> <li>ltag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u5de6\u513f\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u524d\u9a71.rtag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u53f3\u5b69\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u540e\u7ee7.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/","title":"5. \u6811\u7684\u904d\u5386\u548c\u7279\u6b8a\u7684\u6811","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 575 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#class-five","title":"Class Five","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_1","title":"\u524d\u5e8f,\u4e2d\u5e8f,\u540e\u5e8f\u548c\u6808","text":"<ul> <li>\u524d\u5e8f,\u4e2d\u5e8f\u63a8\u540e\u5e8f:\u524d\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u4e2d\u5e8f,\u540e\u5e8f\u63a8\u524d\u5e8f:\u540e\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u524d\u5e8f,\u540e\u5e8f\u63a8\u4e2d\u5e8f:\u4e0d\u80fd\u5b9e\u73b0,\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u5b50\u6811\u5728\u5de6\u8fd8\u662f\u5728\u53f3.</li> <li>e.g. \u524d\u5e8f AB,\u540e\u5e8f BA</li> <li>\u6811\u7684\u5806\u6808\u64cd\u4f5c:\u4e00\u76f4\u5411\u5de6 push \u5230\u5e95,\u5230\u53f6\u8282\u70b9\u65f6 pop \u4e00\u4e2a\u5143\u7d20,\u518d\u4ece pop \u51fa\u7684\u5143\u7d20\u5f00\u59cb\u5411\u53f3\u8d70.</li> <li>\u6808\u63a8\u524d\u5e8f:push \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u4e2d\u5e8f:pop \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u540e\u5e8f:</li> <li>\u7b2c\u4e00\u4e2a push \u7684\u662f\u6839.</li> <li>\u540e\u9762 push \u7684\u5143\u7d20,\u5982\u679c\u524d\u4e00\u4e2a\u662f push,\u5219\u662f\u5de6\u513f\u5b50;\u5982\u679c\u524d\u4e00\u4e2a\u662f pop,\u5219\u662f pop \u51fa\u5143\u7d20\u7684\u53f3\u513f\u5b50</li> <li>\u6811\u548c\u6808</li> <li>\u6bcf\u4e2a\u5408\u6cd5\u7684\u5806\u6808\u64cd\u4f5c\u5e8f\u5217,\u90fd\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u6811.</li> <li>m \u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811,\u5171\u6709 Catalan(n)\u79cd.\\(C_n=\\sum\\limits_{i=0}^{n-1}C_iC_{n-i-1}\\)</li> <li>Catalan \u6570\u9012\u63a8:m \u4e2a\u8282\u70b9\u5de6\u53f3\u5206\u914d</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_2","title":"\u51e0\u79cd\u7279\u6b8a\u7684\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#skewed-binary-trees","title":"Skewed Binary Trees \u504f\u659c\u4e8c\u53c9\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#complete-binary-trees","title":"Complete Binary Trees \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<ul> <li>\u4f18\u70b9:\u80fd\u7528\u6570\u7ec4\u5b58\u50a8</li> <li>\u7b2c k \u5c42,\u8fd9\u4e00\u5c42\u6700\u591a\u8282\u70b9\u6570\u4e3a\\(2^{k-1}\\),\u6240\u6709\u5c42\u6700\u591a\u8282\u70b9\u6570\\(2_k-1\\)</li> <li>\\(n_0=n_2+1\\)   Pf:\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n0+n1+n2;\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n1+2n2.\u8054\u7acb\u4e24\u5f0f\u5f97\u5230.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#binary-search-trees","title":"Binary Search Trees \u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u5de6\u5b50\u6811\u5747\u6bd4\u5176\u5c0f,\u53f3\u5b50\u6811\u90fd\u6bd4\u5176\u5927.</p> <ul> <li>find:\u6bcf\u6b21\u5411\u5de6\u6216\u5411\u53f3\u67e5\u627e   \u4f7f\u7528\u5c3e\u9012\u5f52\u5b9e\u73b0.\u6240\u6709\u5c3e\u9012\u5f52\u90fd\u80fd\u5316\u6210\u5faa\u73af.</li> <li>insert:\u5148\u5411\u5de6\u6216\u5411\u53f3\u627e\u5230\u5408\u9002\u4f4d\u7f6e,\u8d70\u5230 NULL \u65f6 malloc \u5185\u5b58,\u5c06 NULL \u53d8\u4e3a\u8282\u70b9.</li> <li>delete:</li> <li>\u6ca1\u6709\u513f\u5b50\u6216\u53ea\u6709 1 \u4e2a\u513f\u5b50:\u76f4\u63a5\u5220\u9664</li> <li>\u6709 2 \u4e2a\u513f\u5b50:\u4ece\u5de6\u5b50\u6811\u627e\u6700\u5927\u503c(\u6216\u53f3\u5b50\u6811\u627e\u6700\u5c0f\u503c),\u66ff\u6362\u8981\u5220\u9664\u7684\u8282\u70b9,\u518d\u5728\u5de6(\u6216\u53f3)\u5b50\u6811\u79cd\u5220\u9664\u76f8\u5e94\u503c.      PS:\u6bcf\u6b21\u5220\u9664\u64cd\u4f5c\u591a,\u53ef\u4f7f\u7528\u61d2\u6807\u8bb0(lazy tag).</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.%20%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E5%92%8C%E7%89%B9%E6%AE%8A%E7%9A%84%E6%A0%91/#_3","title":"\u5e73\u8861\u6811","text":"<p>\u51e0\u79cd\u51b3\u5b9a\u662f\u5426\u5e73\u8861\u7684\u6307\u6807:</p> <ol> <li>AVL \u6811(\u5e73\u8861\u6811)    \u7531\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u51b3\u5b9a.\u4efb\u610f\u8282\u70b9,\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u76f8\u5dee\u4e3a 0 \u6216 1,\u8ba4\u4e3a\u6811\u5e73\u8861.</li> <li>\u7ea2\u9ed1\u6811    \u5c06\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u6216\u9ed1.\u4efb\u610f\u5206\u652f\u6ee1\u8db3: 1. \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e3a\u7ea2 2. \u7ea2\u8282\u70b9\u6570\u76f8\u540c 3. \u9ed1\u8282\u70b9\u4e0d\u76f8\u90bb    \u5219\u8ba4\u4e3a\u8be5\u6811\u5e73\u8861.    \u5e73\u8861\u7684\u7ea2\u9ed1\u6811\u6700\u957f\u5206\u652f\u548c\u6700\u77ed\u5206\u652f\u6700\u591a\u76f8\u5dee 1 \u500d.</li> <li>B+\u6811    \u6ee1\u8db3\u6240\u6709\u5206\u652f\u8282\u70b9\u6570\u6700\u591a\u4e3a m,\u6700\u5c11\u4e3a m/2,\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u6811,\u8ba4\u4e3a\u5e73\u8861.    B+\u6811\u5e94\u7528\u4e8e\u6570\u636e\u5e93\u7ba1\u7406.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/","title":"5.5 \u4e00\u4e9b\u9898\u76ee\u548c\u7b14\u8bb0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1604 \u4e2a\u5b57\u00a0\u00a035 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_1","title":"\u4e00\u4e9b\u5224\u65ad\u9898","text":"<p>\uff08\u7c98\u8d34\u81ea csdn\uff0c\u4e0d\u786e\u4fdd\u6b63\u786e\uff09</p> <p>1-1 \u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F 1-2 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F 1-3 \u6570\u636e\u7ed3\u6784\u6982\u5ff5\u5305\u62ec\u6570\u636e\u4e4b\u95f4\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u6570\u636e\u7684\u8fd0\u7b97\u4e09\u4e2a\u65b9\u9762\u3002T 1-4 \u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u7c7b\u578b\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u636e\u9879\u6784\u6210\u3002T 1-5 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u8bf4\u660e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5b83\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u7ed3\u6784\u3002F 1-6 2N \u548c N \u5177\u6709\u76f8\u540c\u7684\u589e\u957f\u901f\u5ea6\u3002F 1-7 \u7b97\u6cd5\u5206\u6790\u7684\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002T 1-8 n! is O(n^n).T 1-9 O(N2) is the same as O(1+2+3+\u22ef+N).T 1-10 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002T 1-11 \u82e5\u67d0\u7ebf\u6027\u8868\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5b58\u53d6\u4efb\u4e00\u6307\u5b9a\u5e8f\u53f7\u7684\u5143\u7d20\u548c\u5728\u6700\u540e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u8fd0\u7b97\uff0c\u5219\u5229\u7528\u987a\u5e8f\u8868\u5b58\u50a8\u6700\u8282\u7701\u65f6\u95f4\u3002T 1-12 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u63d2\u5165\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-13 (neuDS)\u5728\u987a\u5e8f\u8868\u4e2d\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5176\u5bf9\u5e94\u7684\u7269\u7406\u4f4d\u7f6e\u4e5f\u662f\u76f8\u90bb\u7684\u3002T 1-14 (neuDS)\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T 1-15 (neuDS)\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\u3002F 1-16 (neuDS)\u5728\u987a\u5e8f\u8868\u4e0a\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u65f6\u9700\u8981\u79fb\u52a8\u5143\u7d20\u7684\u4e2a\u6570\u4e0e\u5f85\u63d2\u5165\u6216\u5f85\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\u65e0\u5173\u3002F 1-17 (neuDS)\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f\u53ea\u80fd\u7528\u4e8e\u5b58\u50a8\u7ebf\u6027\u7ed3\u6784\u3002F 1-18 \u5728\u5177\u6709 N \u4e2a\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-19 \u82e5\u7528\u94fe\u8868\u6765\u8868\u793a\u4e00\u4e2a\u7ebf\u6027\u8868\uff0c\u5219\u8868\u4e2d\u5143\u7d20\u7684\u5730\u5740\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002F 1-20 \u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F 1-21 \u901a\u8fc7\u5bf9\u5806\u6808 S \u64cd\u4f5c\uff1aPush(S,1), Push(S,2), Pop(S), Push(S,3), Pop(S), Pop(S)\u3002\u8f93\u51fa\u7684\u5e8f\u5217\u4e3a\uff1a123\u3002F 1-22 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\uff0c\u8f93\u51fa\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f i\uff0c\u5219\u7b2c j \u4e2a\u8f93\u51fa\u5143\u7d20\u662f j\u2212i\u22121\u3002F 1-23 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a{1, 2, 3, 4, 5}\uff0c\u5219\u4e0d\u53ef\u80fd\u5f97\u5230{3, 4, 1, 2, 5}\u8fd9\u6837\u7684\u51fa\u6808\u5e8f\u5217\u3002T 1-24 \u6808\u548c\u961f\u5217\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u65e2\u53ef\u4ee5\u662f\u987a\u5e8f\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u94fe\u5f0f\u65b9\u5f0f\u3002T 1-25 \u6808\u5e95\u5143\u7d20\u662f\u4e0d\u80fd\u5220\u9664\u7684\u5143\u7d20\u3002F 1-26 \u987a\u5e8f\u6808\u4e2d\u5143\u7d20\u503c\u7684\u5927\u5c0f\u662f\u6709\u5e8f\u7684\u3002F 1-27 \u5728 n \u4e2a\u5143\u7d20\u8fde\u7eed\u8fdb\u6808\u4ee5\u540e\uff0c\u5b83\u4eec\u7684\u51fa\u6808\u987a\u5e8f\u548c\u8fdb\u6808\u987a\u5e8f\u4e00\u5b9a\u6b63\u597d\u76f8\u53cd\u3002T 1-28 \u6808\u9876\u5143\u7d20\u548c\u6808\u5e95\u5143\u7d20\u6709\u53ef\u80fd\u662f\u518b\u4e00\u4e2a\u5143\u7d20\u3002T 1-29 \u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u5728\u8868\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u3002 T 1-30 \u94fe\u6808\u7684\u63d2\u5165\u5728\u6808\u9876\uff0c\u5220\u9664\u5728\u6808\u5e95\u3002F 1-31 \u6240\u8c13\u201c\u5faa\u73af\u961f\u5217\u201d\u662f\u6307\u7528\u5355\u5411\u5faa\u73af\u94fe\u8868\u6216\u8005\u5faa\u73af\u6570\u7ec4\u8868\u793a\u7684\u961f\u5217\u3002F 1-32 \u5728\u7528\u6570\u7ec4\u8868\u793a\u7684\u5faa\u73af\u961f\u5217\u4e2d\uff0cfront \u503c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e rear \u503c\u3002F 1-33 \u5faa\u73af\u961f\u5217\u6267\u884c\u51fa\u961f\u64cd\u4f5c\u65f6\u4f1a\u5f15\u8d77\u5927\u91cf\u5143\u7d20\u7684\u79fb\u52a8\u3002F 1-34 \u961f\u5217\u4e2d\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u53eb\u961f\u5934\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u53eb\u961f\u5c3e\u3002 F 1-35 \u961f\u5217\u7ed3\u6784\u7684\u987a\u5e8f\u5b58\u50a8\u4f1a\u4ea7\u751f\u5047\u6ea2\u51fa\u73b0\u8c61\u3002 T 1-36 \u4e8c\u53c9\u6811\u901a\u5e38\u6709\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002T 1-37 \u5728\u542b\u6709 n \u4e2a\u7ed3\u70b9\u7684\u6811\u4e2d\uff0c\u8fb9\u6570\u53ea\u80fd\u662f n-1 \u6761\u3002T 1-38 \u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u82e5\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5b83\u5fc5\u662f\u6811\u53f6\u3002T 1-39 \u4e00\u68f5\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7528\u81ea\u7136\u6570\u4f9d\u6b21\u7f16\u53f7\uff0c\u5219\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a 2i(2i&lt; n),\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u662f 2i+1(2i+1&lt; n)\u3002F 1-40 \u7528\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u5bfc\u51fa\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002F\uff1f 1-41 \u4e8c\u53c9\u6811\u53ea\u80fd\u7528\u4e8c\u53c9\u94fe\u8868\u8868\u793a\u3002F 1-42 \u6811\u5f62\u7ed3\u6784\u4e2d\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb\u3002T 1-43 \u5ea6\u4e3a\u4e8c\u7684\u6811\u5c31\u662f\u4e8c\u53c9\u6811\u3002F \u4e8c\u53c9\u6811\u8fd8\u8981\u6709\u533a\u5206\u5de6\u53f3\u513f\u5b50\u7684\u987a\u5e8f 1-44 \u67d0\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002T 1-45 \u67d0\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002F 1-46 \u4e00\u68f5\u6709 124 \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u53f6\u7ed3\u70b9\u4e2a\u6570\u662f\u786e\u5b9a\u7684\u3002T 1-47 \u4efb\u4f55\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u540c\u4e00\u5c42\u7684\u7ed3\u70b9\u4ece\u5de6\u5230\u53f3\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-48 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u67e5\u627e\u548c\u6298\u534a\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\u3002F 1-49 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002F 1-50 \u82e5\u4e00\u641c\u7d22\u6811\uff08\u67e5\u627e\u6811\uff09\u662f\u4e00\u4e2a\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5219\u8be5\u6811\u7684\u6700\u5927\u503c\u4e00\u5b9a\u5728\u53f6\u7ed3\u70b9\u4e0a F 1-51 N \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u6709\u591a\u79cd\uff0c\u5176\u4e2d\u6811\u9ad8\u6700\u5c0f\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u6700\u4f73\u7684\u3002 T \u6839\u8282\u70b9\u9009\u53d6\u4e0d\u540c\uff0cBST \u4e0d\u540c 1-52 \u4e2d\u6839\u904d\u5386\u4e8c\u53c9\u67e5\u627e\u6811\u6240\u5f97\u5e8f\u5217\u4e00\u5b9a\u662f\u6709\u5e8f\u5e8f\u5217\u3002T 1-53 \u5728\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u90fd\u6bd4\u5de6\u5b69\u5b50\u5173\u952e\u5b57\u5927\uff0c\u6bd4\u53f3\u5b69\u5b50\u5173\u952e\u5b57\u5c0f\u3002T 1-54 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u67e5\u627e\u6548\u7387\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u9ad9\u5ea6\u6709\u5173\u3002T 1-55 \u4efb\u4f55\u6700\u5c0f\u5806\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002F 1-56 \u4efb\u4f55\u6700\u5c0f\u5806\u4e2d\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u4e00\u53f6\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-57 \u5bf9 N\uff08\u22652\uff09\u4e2a\u6743\u503c\u5747\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6784\u9020\u54c8\u592b\u66fc\u6811\uff0c\u5219\u6811\u4e2d\u4efb\u4e00\u975e\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u4e0b\u4e00\u5c42\u4efb\u4e00\u7ed3\u70b9\u7684\u6743\u503c\u3002T 1-58 \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u6700\u4f18\u7684\u524d\u7f00\u7801\u3002\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u96c6\u53ca\u5176\u5b57\u7b26\u9891\u7387\uff0c\u5176\u54c8\u592b\u66fc\u7f16\u7801\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002F \u591a\u4e2a\u5b57\u7b26\u9891\u7387\u76f8\u540c\u65f6\uff0c\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\u53ef\u4ea4\u6362\uff0c\u53ef\u80fd\u5bfc\u81f4\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e0d\u552f\u4e00 1-59 \u54c8\u592b\u66fc\u6811\u662f\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u6811\uff0c\u8def\u5f84\u4e0a\u6743\u503c\u8f83\u5927\u7684\u7ed3\u70b9\u79bb\u6839\u8f83\u8fd1\u3002F\uff1f 1-60 \u65e0\u5411\u8fde\u901a\u56fe\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e4b\u548c\u4e3a\u5076\u6570\u3002T 1-61 \u65e0\u5411\u8fde\u901a\u56fe\u8fb9\u6570\u4e00\u5b9a\u5927\u4e8e\u9876\u70b9\u4e2a\u6570\u51cf 1\u3002F \u53ef\u4ee5\u7b49\u4e8e 1-62 \u7528\u90bb\u63a5\u8868\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002F 1-63 \u7528\u90bb\u63a5\u77e9\u9635\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002T 1-64 \u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u8fb9\u4e4b\u548c\u7684 2 \u500d\u3002T 1-65 \u5728\u4efb\u4e00\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u4e4b\u548c\u3002T 1-66 \u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u5806\u6808\u5b9e\u73b0\u3002F 1-67 \u5982\u679c\u65e0\u5411\u56fe G \u5fc5\u987b\u8fdb\u884c\u4e24\u6b21\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u624d\u80fd\u8bbf\u95ee\u5176\u6240\u6709\u9876\u70b9\uff0c\u5219 G \u4e2d\u4e00\u5b9a\u6709\u56de\u8def\u3002F 1-68 \u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56fe\uff0c\u5176\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u3002F 1-69 \u82e5\u6709\u5411\u56fe\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u5373\u4f7f\u4e0d\u7528\u8bbf\u95ee\u6807\u5fd7\u4f4d\u540c\u4e00\u7ed3\u70b9\u4e5f\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u4e24\u6b21\u3002F 1-70 \u5728\u4e00\u4e2a\u6709\u6743\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5 b \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u662f 12\uff0c\u4e14 c \u5230 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u4e3a 2 \u7684\u8fb9\uff0c\u5219 c \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u5c0f\u4e8e 10\u3002T 1-71 P \u662f\u9876\u70b9 S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c\u8be5\u56fe\u4e2d\u7684\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u90fd\u52a0 1\uff0cP \u4ecd\u7136\u662f S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\u3002F 1-72 \u5bf9\u4e8e\u5e26\u6743\u65e0\u5411\u56fe G = (V, E)\uff0cM \u662f G \u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219 M \u4e2d\u4efb\u610f\u4e24\u70b9 V1 \u5230 V2 \u7684\u8def\u5f84\u4e00\u5b9a\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002F 1-73 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u5f52\u5e76\u8d9f\u6570\u7684\u6570\u91cf\u7ea7\u662f O(NlogN)\u3002F 1-74 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u9700\u8981\u7684\u989d\u5916\u7a7a\u95f4\u4e3a O(N)\u3002F 1-75 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff0c\u6bd4\u8f83\u6b21\u6570\u548c\u79fb\u52a8\u6b21\u6570\u5206\u522b\u4e3a O(N2)\u548c O(N)\u3002T 1-76 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(NlogN)\u3002F 1-77 \u5e0c\u5c14\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-78 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-79 \u8981\u4ece 50 \u4e2a\u952e\u503c\u4e2d\u627e\u51fa\u6700\u5927\u7684 3 \u4e2a\u503c\uff0c\u9009\u62e9\u6392\u5e8f\u6bd4\u5806\u6392\u5e8f\u5feb\u3002T 1-80 \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u6216\u8005\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u6b21\u5e73\u65b9\u7ea7 O(N * logN)\uff0c\u5219\u8be5\u6392\u5e8f\u7b97\u6cd5\u4e00\u5b9a\u662f\u4e0d\u7a33\u5b9a\u7684\u3002F 1-81 \u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u82e5\u8981\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u9700\u8981\u5efa\u7acb\u5927\u6839\u5806\u3002T 1-82 \u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u5806\u3002T 1-83 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002F 1-84 \u5185\u6392\u5e8f\u8981\u6c42\u6570\u636e\u4e00\u5b9a\u8981\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8\u3002F 1-85 \u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u662f\u6307\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u6bd4\u8f83\u6b21\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e14\u7b97\u6cd5\u80fd\u591f\u7ec8\u6b62\u3002F 1-86 \u5f53\u5f85\u6392\u5e8f\u8bb0\u5f55\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u6216\u8005\u5df2\u7ecf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u65f6\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u6700\u7701\u3002F 1-87 \u5feb\u901f\u6392\u5e8f\u7684\u901f\u5ea6\u5728\u6240\u6709\u6392\u5e8f\u65b9\u6cd5\u4e2d\u4e3a\u6700\u5feb\uff0c\u800c\u4e14\u6240\u9700\u9644\u52a0\u7a7a\u95f4\u4e5f\u6700\u5c11\u3002F 1-88 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-89 \u5feb\u901f\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-90 \u7528\u5e0c\u5c14(shell)\u65b9\u6cd5\u6392\u5e8f\u65f6\uff0c\u82e5\u5173\u952e\u5b57\u7684\u521d\u59cb\u6392\u5e8f\u6742\u4e71\u65e0\u5e8f\uff0c\u5219\u6392\u5e8f\u6548\u7387\u5c31\u4f4e\u3002F 1-91 \u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n2)\uff0c\u4e0d\u53d7\u6570\u636e\u521d\u59cb\u6392\u5217\u7684\u5f71\u54cd\u3002T 1-92 \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(n2)\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(nlog2n)\uff0c\u6240\u4ee5\u5feb\u901f\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u6548\u7387\u597d\u3002F 1-93 \uff08101,88,46,70,34,39,45,58,66,10\uff09\u662f\u5806\u3002T 1-94 \u6709\u4e00\u5927\u6839\u5806\uff0c\u5806\u4e2d\u4efb\u610f\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u5747\u5927\u4e8e\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u5173\u952e\u5b57\uff0c\u5219\u5176\u5177\u6709\u6700\u5c0f\u503c\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5e76\u53ef\u80fd\u5728\u5806\u7684\u6700\u540e\u4e24\u5c42\u4e2d\u3002T 1-95 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5f52\u5e76\u6392\u5e8f\u90fd\u6bd4\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u5feb\u3002F 1-96 \u5728\u6563\u5217\u8868\u4e2d\uff0c\u6240\u8c13\u540c\u4e49\u8bcd\u5c31\u662f\u88ab\u4e0d\u540c\u6563\u5217\u51fd\u6570\u6620\u5c04\u5230\u540c\u4e00\u5730\u5740\u7684\u4e24\u4e2a\u5143\u7d20\u3002F 1-97 \u5c06 M \u4e2a\u5143\u7d20\u5b58\u5165\u7528\u957f\u5ea6\u4e3a S \u7684\u6570\u7ec4\u8868\u793a\u7684\u6563\u5217\u8868\uff0c\u5219\u8be5\u8868\u7684\u88c5\u586b\u56e0\u5b50\u4e3a M/S\u3002T 1-98 \u5728\u6563\u5217\u4e2d\uff0c\u51fd\u6570\u201c\u63d2\u5165\u201d\u548c\u201c\u67e5\u627e\u201d\u5177\u6709\u540c\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002T 1-99 \u5373\u4f7f\u628a 2 \u4e2a\u5143\u7d20\u6563\u5217\u5230\u6709 100 \u4e2a\u5355\u5143\u7684\u8868\u4e2d\uff0c\u4ecd\u7136\u6709\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002T 1-100 \u5c06 10 \u4e2a\u5143\u7d20\u6563\u5217\u5230 100 000 \u4e2a\u5355\u5143\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002F</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#hw","title":"HW \u603b\u7ed3","text":"<p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The time complexity of the function which calculates \\(F_N\\) recursively is \\(\\Theta(N!)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\\( T(N)=T(N-1)+T(N-2)+O(1)\\),\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(\\phi^n)\\).</p> <p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The space complexity of the function which calculates \\(F_N\\) recursively is:</p> <ul> <li>[ ] A. \\(O(\\log N)\\)</li> <li>[x] B. \\(O(N)\\)</li> <li>[ ] C. \\(O(F_N)\\)</li> <li>[ ] D. \\(O(N!)\\)</li> </ul> <p>\u6bcf\u4e2a\\(F(N)\\)\u867d\u7136\u5728\u4e0d\u540c\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4ea7\u751f,\u4f46\u662f\u5b58\u50a8\u5728\u7edf\u4e00\u7a7a\u95f4,\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\).</p> <p>For a sequentially stored linear list of length \\(N\\), the time complexities for deleting the first element and inserting the last element are \\(O(1)\\) and \\(O(N)\\), respectively.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u901a\u5e38\u6307\u7684\u662f\u6570\u7ec4\uff08Array\uff09\u6216\u987a\u5e8f\u8868\uff08Sequential List\uff09\uff0c\u5176\u7279\u70b9\u662f\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u4e14\u5fc5\u987b\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u3002 \u5220\u9664\u7b2c\u4e00\u4e2a\u540e\uff0c\u540e\u9762\u7684\u6240\u6709\u5143\u7d20\u90fd\u9700\u8981\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u4ee5\u586b\u8865\u7a7a\u7f3a\uff0c\u65f6\u95f4\u4e3a\\(O(N)\\). \u5982\u679c\u6570\u7ec4\u7a7a\u95f4\u8db3\u591f\uff08\u672a\u6ee1\uff09\uff0c\u76f4\u63a5\u5728 A[N] \u7684\u4f4d\u7f6e\u5199\u5165\u65b0\u5143\u7d20\uff0c\u65e0\u9700\u79fb\u52a8\u5176\u4ed6\u5143\u7d20,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\).</p> <p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient?</p> <ul> <li>[ ] A. doubly linked list</li> <li>[ ] B. singly linked circular list</li> <li>[ ] C. doubly linked circular list with a dummy head node</li> <li>[x] D. sequential list</li> </ul> <p>\u94fe\u8868\u4e0d\u80fd\u5feb\u901f\u968f\u673a\u8bbf\u95ee \u800c\u63d2\u5165\u5220\u9664\u53ea\u9700\u8981\u5bf9\u672b\u5c3e\u8fdb\u884c,\u7ebf\u6027\u8868\u64cd\u4f5c\u65f6\u4e0d\u7528\u79fb\u52a8\u5176\u4ed6\u4f4d.</p> <p>It is always possible to represent a tree by a one-dimensional integer array.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u6811\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u7528\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u4e00\u7ef4\u6570\u7ec4\uff09\u8868\u793a\u3002\u5e38\u89c1\u7684\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u6811\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ol> <li>\u7236\u8282\u70b9\u8868\u793a\u6cd5\uff1a\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7d22\u5f15\u3002</li> <li>\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\uff1a\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5144\u5f1f\u3002\uff08\u8fd9\u91cc\u8981\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e0d\u7b26\u5408\uff09</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u8868\u793a\uff1a\u8865\u5168\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u7ec4\u6309\u5c42\u7ea7\u987a\u5e8f\u5b58\u50a8\u3002</li> </ol> <p>\u5173\u952e\u5728\u4e8e\u5b58\u50a8\u7684\u4e0d\u662f\u8282\u70b9\u7684\u6570\u503c\uff0c\u800c\u662f\u8282\u70b9\u7684\u7f16\u53f7\u3002</p> <p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>n=2016\uff0cn1=16 n=n0+n1+n2 \u603b\u8fb9\u6570\uff1a e=n-1 =n0+n1+n2 -1(\u6811\u7684\u6027\u8d28\uff1a\u8fb9\u6570=\u70b9\u6570-1) e=n1+2*n2 \u7ed3\u8bba: n2=n0 -1 n=n1+2*n2 -1 2*n2=1001,\u4e0d\u5b58\u5728</p> <p>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</p> <ul> <li>[ ] A. 5</li> <li>[ ] B. 6</li> <li>[ ] C. 7</li> <li>[x] D. 8</li> </ul> <p>\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u6307\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u76f4\u63a5\u540e\u4ee3\uff09\u7684\u6570\u91cf\u3002\u5b83\u7684\u201c\u5ea6\u201d\u5c31\u662f\u5b83\u62e5\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\uff08\u5373\u76f4\u63a5\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u6570\uff09\u3002 Given a tree of degree 3 \u4ec0\u4e48\u610f\u601d\uff1f\u6811\u7684 degree \u901a\u5e38\u6307\u8282\u70b9\u7684\u6700\u5927\u5ea6\u6570\uff08\u5373\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u5927\u5b50\u8282\u70b9\u6570\uff09\u3002\u8fd9\u91cc\"degree 3 \u7684\u6811\"\u53ef\u80fd\u6307\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u6700\u591a\u6709 3 \u4e2a\u5b50\u8282\u70b9\uff08\u5373 3 \u53c9\u6811\uff0cternary tree\uff09\u3002 n2=3, n3=2 n0+n1+n2+n3-1=n1+2*n2+3*n3 n0+n1+5-1=n1+12 n0=8</p> <p>If a general tree \\( T \\) is converted into a binary tree \\( BT \\), then which of the following \\( BT \\) traversals gives the same sequence as that of the post-order traversal of \\( T \\)?</p> <ul> <li>[ ] A. Pre-order traversal</li> <li>[x] B. In-order traversal</li> <li>[ ] C. Post-order traversal</li> <li>[ ] D. Level-order traversal</li> </ul> <p>\u600e\u4e48\u628a\u666e\u901a\u7684\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\uff1f</p> <ol> <li>\u9009\u62e9\u6839\u8282\u70b9\uff1a</li> <li>\u4fdd\u6301\u539f\u6811\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002</li> <li>\u5904\u7406\u5b50\u8282\u70b9\uff1a</li> <li>\u5c06\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u5176\u5de6\u5b69\u5b50\uff08left child\uff09\u3002</li> <li>\u5c06\u8be5\u8282\u70b9\u7684\u5176\u4ed6\u5b50\u8282\u70b9\uff08\u6309\u987a\u5e8f\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08right siblings\uff09\u3002</li> <li>\u9012\u5f52\u5e94\u7528\uff1a</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u8282\u70b9\u9012\u5f52\u5e94\u7528\u76f8\u540c\u7684\u89c4\u5219\u3002</li> </ol> <p>\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u540e\u7684\u4e2d\u5e8f\u904d\u5386\u7b49\u4ef7\u4e8e\u539f\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002</p> <p>In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u3002 \u540c\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u5de6\u8fb9\u7684\u4e00\u5b9a\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u7684\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002 \u6240\u4ee5\u4ece\u5de6\u5230\u53f3\u4e00\u5b9a\u5355\u8c03\u9012\u589e\u3002</p> <p>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u5982\u679c 4 \u548c 6 \u662f\u5144\u5f1f\uff0c5 \u4e00\u5b9a\u662f\u7236\u4eb2\uff1b \u5982\u679c 4 \u548c 6 \u5728\u540c\u4e00\u5c42\u4f46\u4e0d\u76f8\u90bb\uff0c5 \u4e00\u5b9a\u5728\u4e2d\u95f4\uff0c\u77db\u76fe\uff1b \u5982\u679c 4 \u548c 6 \u76f8\u90bb\u4f46\u4e0d\u662f\u5144\u5f1f\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b:</p> Text Only<pre><code>      5\n     / \\\n    3   7\n   / \\ / \\\n  1  4 6  8\n</code></pre> <p>In a max-heap with \\( n \\) (\\( &gt; 1 \\)) elements, the array index of the minimum key may be ____.</p> <ul> <li>[ ] A. 1</li> <li>[ ] B. \\(\\lfloor n/2 \\rfloor - 1\\)</li> <li>[ ] C. \\(\\lfloor n/2 \\rfloor\\)</li> <li>[x] D. \\(\\lfloor n/2 \\rfloor + 2\\)</li> </ul> <p>\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\u3002 \u4e00\u5171 n \u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6700\u540e\u4e00\u5c42\u7b2c\u4e00\u4e2a\u662f\\(2^{n-1}\\)\uff0c\u6700\u540e\u4e00\u4e2a\u662f\\(2^n-1\\)\uff0c \u603b\u8282\u70b9\u6570\\(2^{n-1} &lt; N &lt;2^n-1\\)\uff0c\\(\\lfloor N/2 \\rfloor + 1\\)\u5f97\u5230\u6700\u540e\u4e00\u884c\u7b2c\u4e00\u4e2a</p> <p>Using the linear algorithm to build a min-heap from the sequence {15, 26, 32, 8, 7, 20, 12, 13, 5, 19}, and then insert 6. Which one of the following statements is FALSE?</p> <ul> <li>[ ] A. The root is 5</li> <li>[ ] B. The path from the root to 26 is {5, 6, 8, 26}</li> <li>[x] C. 32 is the left child of 12</li> <li>[ ] D. 7 is the parent of 19 and 15</li> </ul> <p>Using the linear algorithm to build a min-heap \u662f\u600e\u4e48\u6837\u5efa\u5806\uff1f \u5efa\u5806\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u81ea\u5e95\u5411\u4e0a\uff08Bottom-up\uff0cLinear-time Heapify\uff09\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u548c\u5176\u5b50\u6811\u53d8\u4e3a\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> <li>\u9010\u4e2a\u63d2\u5165\uff08Top-down\uff0cIncremental Heap Construction\uff09\uff1a\u6392\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6570\u63d2\u5165\u5230\u6700\u540e\u518d\u8c03\u6574\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)\u3002</li> </ol> <p>If a \\(d\\)-heap is stored as an array, for an entry located in position \\(i\\), the parent, the first child and the last child are at:</p> <ul> <li>[ ] A. \\(\\lceil (i + d - 2) / d \\rceil\\), \\((i - 2)d + 2\\), and \\((i - 1)d + 1\\)</li> <li>[ ] B. \\(\\lceil (i + d - 1) / d \\rceil\\), \\((i - 2)d + 1\\), and \\((i - 1)d\\)</li> <li>[ ] C. \\(\\lfloor (i + d - 2) / d \\rfloor\\), \\((i - 1)d + 2\\), and \\(id + 1\\)</li> <li>[ ] D. \\(\\lfloor (i + d - 1) / d \\rfloor\\), \\((i - 1)d + 1\\), and \\(id\\)</li> </ul> <p>d-heap \u4ec0\u4e48\u610f\u601d? d-heap \u662f\u5806\uff08Heap\uff09\u7684\u4e00\u79cd\u6cdb\u5316\u5f62\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 d \u4e2a\u5b50\u8282\u70b9\uff08\u800c\u975e\u4e8c\u53c9\u5806\u7684 2 \u4e2a\u5b50\u8282\u70b9\uff09\u3002\u5b83\u662f\u5b8c\u5168 d \u53c9\u6811\uff08Complete d-ary Tree\uff09\u3002 \u53ef\u7528 d=3 \u4ee3\u5165\u9a8c\u8bc1\uff0c\u6392\u9664\u9519\u8bef\u9009\u9879</p> <p>If a binary search tree of \\(N\\) nodes is complete, which one of the following statements is FALSE?</p> <ul> <li>[ ] A. the average search time for all nodes is \\(O(\\log N)\\)</li> <li>[ ] B. the minimum key must be at a leaf node</li> <li>[x] C. the maximum key must be at a leaf node</li> <li>[ ] D. the median node must either be the root or in the left subtree</li> </ul> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u8981\u6c42\u4e0a\u9762\u5168\u6ee1\uff0c\u6700\u540e\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u586b\uff0c\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811\u3002 BST \u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\u6811\u7684\u9ad8\u5ea6\u3002\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f\\(log(N)\\),\u6545\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\\(O(\\log N)\\)\u3002 \u4e2d\u4f4d\u6570\uff08median node\uff09\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u5947\u6570\u4e2a\u8282\u70b9\uff1a\u6b63\u4e2d\u95f4\u7684\u8282\u70b9\uff08\u7b2c \\(\\lfloor(N/2)\\rfloor\\)\u4e2a\uff09\u3002</li> <li>\u5076\u6570\u4e2a\u8282\u70b9\uff1a\u4e2d\u95f4\u4e24\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c N/2 \u4e2a\u8282\u70b9\uff0c\u79f0\u4e3a\u4e0b\u4e2d\u4f4d\u6570\uff09\u3002</li> </ul> <p>N \u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u662f\u6839\uff1bN \u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5728\u5de6\u5b50\u6811\u4e2d\u3002</p> <p>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than \\(N/2\\), but not \\(O(\\log N)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u901a\u8fc7\u6309\u5927\u5c0f\u5408\u5e76\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7\\(O(\\log N)\\)\uff08\u5176\u4e2d N \u662f\u603b\u5143\u7d20\u6570\uff09\u3002</p> <p>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</p> <ul> <li>[ ] A. 1 and -6</li> <li>[x] B. 4 and -5</li> <li>[ ] C. 8 and -5</li> <li>[ ] D. 8 and -6</li> </ul> <p>disjoint set \u662f\u4ec0\u4e48\uff1f \u5e76\u67e5\u96c6 \u4e60\u60ef\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1aroot \u548c merge\uff0c\u521d\u59cb\u5316\u4e3a\u81ea\u73af \u4e0a\u8bfe\u8bb2\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1a\u6240\u6709\u7684\u6839\u4e3a\u8d1f\u6570\uff0c\u7edd\u5bf9\u503c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f</p> <p>A relation \\( R \\) is defined on a set \\( S \\). If for every element \\( e \\) in \\( S \\), \"\\( e \\, R \\, e \\)\" is always true, then \\( R \\) is said to be ____ over \\( S \\).</p> <ul> <li>[ ] A. consistent</li> <li>[ ] B. symmetric</li> <li>[ ] C. transitive</li> <li>[x] D. reflexive</li> </ul> <p>\u5728\u6570\u5b66\u4e2d\uff0c\u5173\u7cfb \\( R \\) \u5728\u96c6\u5408 \\( S \\) \u4e0a\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u91cd\u8981\u6027\u8d28\uff1a</p> <ol> <li> <p>\u81ea\u53cd\u6027\uff08Reflexive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( e \\in S \\)\uff0c\u6709 \\( e \\, R \\, e \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u5b9e\u6570\u4e0a\u7684\u201c\u2264\u201d\u5173\u7cfb\u662f\u81ea\u53cd\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u5b9e\u6570 \\( x \\)\uff0c\\( x \\leq x \\) \u90fd\u6210\u7acb\u3002</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff08Symmetric\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\)\uff0c\u90a3\u4e48 \\( b \\, R \\, a \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c=\u201d\u5173\u7cfb\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a = b \\)\uff0c\u90a3\u4e48 \\( b = a \\)\u3002</p> </li> <li> <p>\u4f20\u9012\u6027\uff08Transitive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b, c \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\) \u4e14 \\( b \\, R \\, c \\)\uff0c\u90a3\u4e48 \\( a \\, R \\, c \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c\u2264\u201d\u5173\u7cfb\u662f\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a \\leq b \\) \u4e14 \\( b \\leq c \\)\uff0c\u90a3\u4e48 \\( a \\leq c \\)\u3002</p> </li> <li> <p>\u4e00\u81f4\u6027\uff08Consistent\uff09\uff1a</p> </li> <li>\u8fd9\u4e2a\u672f\u8bed\u5728\u5173\u7cfb\u7684\u6027\u8d28\u4e2d\u4e0d\u5e38\u89c1\uff0c\u901a\u5e38\u4e0d\u662f\u5173\u7cfb\u7684\u57fa\u672c\u6027\u8d28\u4e4b\u4e00\u3002\u53ef\u80fd\u662f\u6307\u5173\u7cfb\u5728\u67d0\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00\u81f4\u6027\uff0c\u4f46\u4e00\u822c\u4e0d\u4f5c\u4e3a\u5173\u7cfb\u7684\u6807\u51c6\u6027\u8d28\u3002</li> </ol> <p>\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F</p> <p>\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6570\u636e\u9879\uff08Data Item\uff09\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5143\u7d20\uff08Data Element\uff09\u3002</p> <ul> <li>\u6570\u636e\u9879\uff1a\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u6570\u636e\u5355\u4f4d\uff0c\u4e5f\u79f0\u4e3a\u5b57\u6bb5\u6216\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u5b66\u751f\u7684\u201c\u5b66\u53f7\u201d\u6216\u201c\u59d3\u540d\u201d\u662f\u4e00\u4e2a\u6570\u636e\u9879\u3002</li> <li>\u6570\u636e\u5143\u7d20\uff1a\u662f\u7531\u82e5\u5e72\u6570\u636e\u9879\u7ec4\u6210\u7684\uff0c\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b66\u751f\u7684\u5b8c\u6574\u8bb0\u5f55\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u3001\u5e74\u9f84\u7b49\u6570\u636e\u9879\uff09\u662f\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u9879\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> <li>\u6216\u201c\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F</p> <p>\u9519\u8bef\u539f\u56e0\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u7684\u5b9a\u4e49\u662f\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u975e\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u903b\u8f91\u7ed3\u6784\uff1a\u63cf\u8ff0\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u8054\u65b9\u5f0f\uff08\u5982\u7ebf\u6027\u7ed3\u6784\u3001\u6811\u5f62\u7ed3\u6784\u3001\u56fe\u7ed3\u6784\u7b49\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5b66\u751f\u8bb0\u5f55\uff08\u6570\u636e\u5143\u7d20\uff09\u6309\u5b66\u53f7\u987a\u5e8f\u6392\u5217\u662f\u7ebf\u6027\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5c5e\u4e8e\u6570\u636e\u5143\u7d20\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u662f\u7269\u7406\u5b58\u50a8\u6216\u5177\u4f53\u5b9e\u73b0\u7684\u8303\u7574\u3002</li> </ul> <p>\u6df7\u6dc6\u903b\u8f91\u7ed3\u6784\u4e0e\u7269\u7406\u7ed3\u6784\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u662f\u62bd\u8c61\u7684\uff08\u5982\u94fe\u8868\u3001\u6811\uff09\uff0c\u4e0e\u5b58\u50a8\u65e0\u5173\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u63a5\u8fd1\u7269\u7406\u5b58\u50a8\uff08\u5982\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u6392\u5217\uff09\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T</p> <p>\u968f\u673a\u5b58\u53d6\u662f\u6307\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b58\u50a8\u4ecb\u8d28\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u6309\u987a\u5e8f\u904d\u5386\u524d\u9762\u7684\u6570\u636e\u3002\u8fd9\u79cd\u8bbf\u95ee\u65b9\u5f0f\u7684\u7279\u70b9\u662f\u8bbf\u95ee\u65f6\u95f4\u4e0e\u6570\u636e\u4f4d\u7f6e\u65e0\u5173\uff0c\u65e0\u8bba\u6570\u636e\u5b58\u50a8\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u80fd\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u76f4\u63a5\u8bfb\u53d6\u6216\u5199\u5165\u3002</p> <p>\u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F</p> <p>1. \u4e8c\u5206\u67e5\u627e\u7684\u524d\u63d0\u662f\u201c\u968f\u673a\u5b58\u53d6\u201d \u4e8c\u5206\u67e5\u627e\uff08Binary Search\uff09\u7684\u6838\u5fc3\u64cd\u4f5c\u662f \u201c\u901a\u8fc7\u4e0b\u6807\u76f4\u63a5\u8bbf\u95ee\u4e2d\u95f4\u5143\u7d20\u201d\uff08\u5373 <code>arr[mid]</code>\uff09\uff0c\u8fd9\u8981\u6c42\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u652f\u6301 \u968f\u673a\u5b58\u53d6\uff08Random Access\uff09\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6570\u7ec4\uff1a\u901a\u8fc7\u4e0b\u6807\u53ef\u5728 \\( O(1) \\) \u65f6\u95f4\u5185\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\u3002</li> <li>\u652f\u6301\u968f\u673a\u5b58\u53d6\u7684\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u52a8\u6001\u6570\u7ec4\uff09\u3002</li> </ul> <p>\u4f46 \u5355\u5411\u94fe\u8868\uff08Singly Linked List\uff09 \u7684\u5b58\u50a8\u7279\u6027\u662f\uff1a</p> <ul> <li>\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\uff1a\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff08\u5982 <code>list[5]</code>\uff09\u3002</li> <li>\u5fc5\u987b\u987a\u5e8f\u904d\u5386\uff1a\u8981\u8bbf\u95ee\u7b2c \\( k \\) \u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u9010\u4e2a\u79fb\u52a8 \\( k-1 \\) \u6b21\u3002</li> </ul> <p>\u5728\u4efb\u610f\u4e00\u68f5\u975e\u7a7a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5220\u9664\u67d0\u7ed3\u70b9\u540e\u53c8\u5c06\u5176\u63d2\u5165\uff0c\u5219\u6240\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u5220\u9664\u524d\u539f\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\u3002 F</p> <p>\u5220\u9664\u975e\u53f6\u8282\u70b9\u540e\u8be5\u70b9\u88ab\u5176\u4ed6\u8282\u70b9\u4ee3\u66ff\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\u3002\u91cd\u65b0\u63d2\u5165\u540e\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\uff0c\u4e00\u5b9a\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_2","title":"\u4e00\u4e9b\u7b14\u8bb0","text":"<ul> <li>\u961f\u5217\u5047\u6ea2\u51fa\u662f\u4ec0\u4e48\uff1f\u961f\u5934\u5df2\u6ee1\uff0c\u961f\u5c3e\u7a7a\uff0c\u4f46\u4f1a\u8bef\u8ba4\u4e3a\u961f\u5217\u5df2\u6ee1\u3002\u53ef\u7528\u5faa\u73af\u961f\u5217\u89e3\u51b3\u3002</li> <li>\u5ea6\u4e3a 2 \u7684\u6811\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u6811\u3002\u4e8c\u53c9\u6811\u8981\u6c42\u6240\u6709\u8282\u70b9\u7684\u5ea6&lt;=2\uff0c\u4e14\u5b50\u8282\u70b9\u6709\u987a\u5e8f\u3002\u53ef\u80fd\u5b58\u5728\u6811\u7684\u5b50\u8282\u70b9\u65e0\u987a\u5e8f\uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u5b50\u8282\u70b9\u4e0d\u5f71\u54cd\u6811\u7684\u5b9a\u4e49\u3002</li> <li>\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u4e0d\u4e00\u5b9a\u80fd\u63a8\u51fa\u540e\u5e8f\u904d\u5386\u3002\u8981\u6c42\u4e3a\u4e8c\u53c9\u6811\uff08\u6216\u666e\u901a\u6811\u4f46\u5b50\u8282\u70b9\u6709\u987a\u5e8f\uff09\u3002</li> <li>\u81ea\u7136\u6570\u8ba4\u4e3a\u5305\u62ec\u96f6\u5417\uff1f\u5305\u62ec\u3002</li> <li>\u56fe\u4e2d\u9876\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u3002\u6709\u5411\u56fe\u5206\u5165\u5ea6\u548c\u51fa\u5ea6\u3002</li> <li>\u6df1\u5ea6\u4f18\u5148\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6570\u636e\u7ed3\u6784\uff1aDFS \u8c03\u7528\u5806\u6808\uff0c\u5b9e\u73b0\u6df1\u5ea6\u4f18\u5148\uff1bBFS \u8c03\u7528\u961f\u5217\uff0c\u4fdd\u8bc1\u6309\u5c42\u904d\u5386\u3002</li> <li>\u6709\u5411\u56fe\u4e2d\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u540c\u4e00\u8282\u70b9\u4e5f\u53ef\u80fd\u88ab\u591a\u6b21\u8bbf\u95ee\u3002\u56e0\u4e3a\u540c\u4e00\u8282\u70b9\u5165\u5ea6\u53ef\u80fd\u5927\u4e8e 1\uff0c\u5373\u53ef\u80fd\u88ab\u591a\u4e2a\u8282\u70b9\u6307\u5411\uff0c\u904d\u5386\u65f6\u53ef\u901a\u8fc7\u6bcf\u4e2a\u6307\u5411\u5b83\u7684\u8282\u70b9\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u3002</li> <li>\u5806\u6392\u5e8f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5927\u6839\u5806\uff1b\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5c0f\u6839\u5806\u3002\u56e0\u4e3a\u5806\u6392\u5e8f\u7684\u89c4\u5b9a\u64cd\u4f5c\u4e3a\u5806\u9876\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362\u3002</li> <li>\u867d\u7136\u7ed9\u51fa\u5173\u952e\u5b57\u5e8f\u5217\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u4f46\u4f9d\u6b21\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u80fd\u4e0d\u4e00\u6837\u3002</li> <li>\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u56fe\u4e2d\u662f\u5426\u6709\u73af\u3002\u6392\u5e8f\u65f6\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u52a0\u5165\uff0c\u5e76\u4f9d\u6b21\u4e3a\u57fa\u7840\u4fee\u6539\u5176\u4ed6\u70b9\u7684\u5165\u5ea6\u3002\u82e5\u6240\u6709\u70b9\u90fd\u88ab\u6392\u5e8f\uff0c\u5219\u6ca1\u6709\u73af\uff08DAG\uff09\uff1b\u82e5\u6709\u7684\u70b9\u6ca1\u6709\u88ab\u6392\u5e8f\uff0c\u5219\u6709\u73af\u3002</li> <li>Partial order is a precedence relation which is both transitive and irreflexive.\u504f\u5e8f\u5173\u7cfb\u662f\u4e00\u79cd\u4f18\u5148\u5173\u7cfb\uff0c\u6ee1\u8db3\u4f20\u9012\u6027\u548c\u975e\u81ea\u53cd\u6027\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#aoe-aov","title":"AOE \u7f51\u548c AOV \u7f51\u662f\u4ec0\u4e48","text":"<p>AOE \u7f51\uff08Activity On Edge network\uff09\uff0c\u5373\u8fb9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\u7edc\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u5de5\u7a0b\u9879\u76ee\u4e2d\u6d3b\u52a8\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u3002</p> <p>AOE \u7f51\u4e0e AOV \u7f51\u7684\u533a\u522b\uff1a</p> \u7279\u6027 AOE \u7f51 AOV \u7f51\uff08Activity On Vertex\uff09 \u8868\u793a\u65b9\u5f0f \u8fb9\u8868\u793a\u6d3b\u52a8\uff0c\u9876\u70b9\u8868\u793a\u4e8b\u4ef6 \u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u4f9d\u8d56\u5173\u7cfb \u6743\u503c \u8fb9\u6709\u6743\u503c\uff08\u6d3b\u52a8\u65f6\u95f4\uff09 \u8fb9\u65e0\u6743\u503c\uff08\u4ec5\u8868\u793a\u987a\u5e8f\uff09 \u5e94\u7528\u91cd\u70b9 \u8ba1\u7b97\u5173\u952e\u8def\u5f84\u548c\u5de5\u671f \u62d3\u6251\u6392\u5e8f\uff08\u786e\u5b9a\u6d3b\u52a8\u6267\u884c\u987a\u5e8f\uff09"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_3","title":"\u81ea\u5e95\u5411\u4e0a\u548c\u9010\u4e2a\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83","text":"<p>\u81ea\u5e95\u5411\u4e0a\u5efa\u5806\uff08Bottom-up Heap Construction\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u800c\u975e\u76f4\u89c2\u8ba4\u4e3a\u7684 O(n log n)\uff0c\u8fd9\u662f\u7531\u5806\u7684\u6811\u72b6\u7ed3\u6784\u7279\u6027\u548c\u6bcf\u5c42\u8282\u70b9\u6570\u4e0e\u8c03\u6574\u6210\u672c\u7684\u5e73\u8861\u51b3\u5b9a\u7684\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a</p> <p>1. \u590d\u6742\u5ea6\u5206\u6790\u7684\u6570\u5b66\u63a8\u5bfc \u5047\u8bbe\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6\u4e3a h = log\u2082n\uff0c\u5404\u5c42\u8282\u70b9\u6570\u548c\u8c03\u6574\u6210\u672c\u5982\u4e0b\uff1a</p> \u5c42\u7ea7\uff08\u4ece\u4e0b\u5230\u4e0a\uff09 \u8282\u70b9\u6570 \u6700\u591a\u4e0b\u6c89\u6b65\u6570\uff08\u9ad8\u5ea6\uff09 \u7b2c h \u5c42\uff08\u53f6\u5b50\uff09 \u2248 n/2 0\uff08\u65e0\u9700\u8c03\u6574\uff09 \u7b2c h-1 \u5c42 \u2248 n/4 1 \u7b2c h-2 \u5c42 \u2248 n/8 2 ... ... ... \u7b2c 0 \u5c42\uff08\u6839\uff09 1 h <p>\u603b\u8c03\u6574\u6b21\u6570 T(n) \u4e3a\u5404\u5c42\u8282\u70b9\u6570 \u00d7 \u5176\u4e0b\u6c89\u6b65\u6570\u4e4b\u548c\uff1a [ T(n) = \\sum{i=0}^{h-1} (\\text{\u7b2c } i \\text{ \u5c42\u8282\u70b9\u6570}) \\times (\\text{\u4e0b\u6c89\u6b65\u6570}) = \\sum \\cdot i ]}^{h-1} \\frac{n}{2^{i+1}</p> <p>\u7b80\u5316\u6c42\u548c\uff08\u4ee4 k = h - i\uff09\uff1a [ T(n) \\leq n \\sum{k=1}^{h} \\frac{k}{2^{k+1}} &lt; n \\sum = n \\cdot 2 = O(n) ]}^{\\infty} \\frac{k}{2^{k} \uff08\u6ce8\uff1a\u7ea7\u6570 \\(\\sum\\_{k=1}^{\\infty} \\frac{k}{2^k} = 2\\) \u662f\u6536\u655b\u7684\uff09</p> <p>2. \u76f4\u89c2\u7406\u89e3</p> <ul> <li>\u5927\u90e8\u5206\u8282\u70b9\u4f4d\u4e8e\u5e95\u5c42\uff1a\u7ea6 n/2 \u7684\u53f6\u5b50\u8282\u70b9\u65e0\u9700\u8c03\u6574\uff0cn/4 \u7684\u8282\u70b9\u53ea\u9700\u4e0b\u6c89 1 \u6b65\u3002</li> <li>\u9ad8\u5c42\u8282\u70b9\u5c11\u4f46\u4ee3\u4ef7\u9ad8\uff1a\u4ec5\u6709 1 \u4e2a\u6839\u8282\u70b9\u9700\u4e0b\u6c89 h \u6b65\uff0c\u4f46\u56e0\u5176\u6570\u91cf\u6781\u5c11\uff081 \u4e2a\uff09\uff0c\u5bf9\u603b\u590d\u6742\u5ea6\u7684\u8d21\u732e\u88ab\u4f4e\u5c42\u8282\u70b9\u5e73\u8861\u3002</li> </ul> <p>3. \u5bf9\u6bd4\u81ea\u9876\u5411\u4e0b\u5efa\u5806\uff08O(n log n)\uff09</p> <ul> <li>\u81ea\u9876\u5411\u4e0b\uff08\u63d2\u5165\u5f0f\u5efa\u5806\uff09\uff1a   \u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\u5e76\u6267\u884c \u4e0a\u6d6e\uff08Sift Up\uff09\uff0c\u5171 n \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6700\u574f O(log n)\uff0c\u603b\u590d\u6742\u5ea6 O(n log n)\u3002</li> <li>\u81ea\u5e95\u5411\u4e0a\uff1a   \u5229\u7528\u5df2\u6709\u5b50\u6811\u7ed3\u6784\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u8c03\u6574\uff0c\u8d8a\u4e0a\u5c42\u8282\u70b9\u8c03\u6574\u6b21\u6570\u8d8a\u591a\uff0c\u4f46\u8282\u70b9\u6570\u6307\u6570\u7ea7\u51cf\u5c11\uff0c\u603b\u548c\u6536\u655b\u4e3a O(n)\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_4","title":"\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6\u603b\u8868</p> \u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u4f18\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u9002\u7528\u573a\u666f \u5192\u6ce1\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u6559\u5b66\u3001\u5c0f\u89c4\u6a21\u6570\u636e \u9009\u62e9\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u7b80\u5355\u5b9e\u73b0\uff0c\u4ea4\u6362\u6b21\u6570\u5c11 \u63d2\u5165\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u5c0f\u89c4\u6a21\u6216\u90e8\u5206\u6709\u5e8f\u6570\u636e \u5e0c\u5c14\u6392\u5e8f \\(O(n^{1.3})\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u4e2d\u7b49\u89c4\u6a21\u6570\u636e\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u5316\u7248 \u5f52\u5e76\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n)\\) \u7a33\u5b9a \u5927\u89c4\u6a21\u6570\u636e\uff0c\u5916\u90e8\u6392\u5e8f \u5feb\u901f\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n^2)\\) \\(O(n \\log n)\\) \\(O(\\log n)\\)~\\(O(n)\\) \u4e0d\u7a33\u5b9a \u901a\u7528\u9ad8\u6548\uff0c\u5185\u5b58\u6392\u5e8f \u5806\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u9700\u8981\u539f\u5730\u6392\u5e8f \u8ba1\u6570\u6392\u5e8f \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u975e\u8d1f\u6574\u6570\uff0c\u8303\u56f4 k \u8f83\u5c0f \u6876\u6392\u5e8f \\(O(n + k)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(n + k)\\) \u7a33\u5b9a \u6570\u636e\u5747\u5300\u5206\u5e03 \u57fa\u6570\u6392\u5e8f \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u591a\u5173\u952e\u5b57\u6392\u5e8f\uff08\u5982\u5b57\u7b26\u4e32\uff09 <p>\u5173\u952e\u8bf4\u660e</p> <ol> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u5e73\u5747\u6027\u80fd\u6700\u4f18\uff0c\u4f46\u6700\u574f\u60c5\u51b5\uff08\u5982\u5df2\u6392\u5e8f\u6570\u7ec4\uff09\u9000\u5316\u4e3a \\(O(n^2)\\)\uff0c\u53ef\u901a\u8fc7\u968f\u673a\u5316\u67a2\u8f74\u907f\u514d\u3002</p> </li> <li>\u5806\u6392\u5e8f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\uff0c\u4f46\u5e38\u6570\u56e0\u5b50\u8f83\u5927\uff0c\u5b9e\u9645\u6162\u4e8e\u5feb\u901f\u6392\u5e8f\u3002</li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a\u5747\u57fa\u4e8e\u975e\u6bd4\u8f83\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a81\u7834 \\(O(n \\log n)\\)\uff0c\u4f46\u9700\u7279\u5b9a\u6761\u4ef6\uff08\u5982\u6570\u636e\u8303\u56f4\u6709\u9650\uff09\u3002</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u539f\u5730\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\u3002</p> </li> <li> <p>\u9012\u5f52\u5f00\u9500\uff1a\u5feb\u901f\u6392\u5e8f\u5e73\u5747 \\(O(\\log n)\\)\uff08\u9012\u5f52\u6808\uff09\uff0c\u6700\u574f \\(O(n)\\)\uff1b\u5f52\u5e76\u6392\u5e8f\u9700 \\(O(n)\\) \u989d\u5916\u7a7a\u95f4\u3002</p> </li> <li> <p>\u7a33\u5b9a\u6027\uff1a</p> </li> <li>\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5f52\u5e76\u3001\u5192\u6ce1\uff09\u4fdd\u6301\u76f8\u7b49\u5143\u7d20\u7684\u539f\u59cb\u987a\u5e8f\uff0c\u9002\u7528\u4e8e\u591a\u5173\u952e\u5b57\u6392\u5e8f\u3002</li> <li>\u4e0d\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5feb\u901f\u3001\u5806\u6392\u5e8f\uff09\u53ef\u80fd\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002</li> </ol> <p>\u5404\u7b97\u6cd5\u7279\u70b9\u53ca\u9002\u7528\u573a\u666f</p> <ol> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u5e73\u5747\u6548\u7387\u6700\u9ad8\uff0c\u7f13\u5b58\u53cb\u597d\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u6700\u574f\u60c5\u51b5\u6027\u80fd\u5dee\uff0c\u9700\u4f18\u5316\u67a2\u8f74\u9009\u62e9\u3002</li> <li> <p>\u9002\u7528\uff1a\u901a\u7528\u573a\u666f\uff0c\u5185\u5b58\u6392\u5e8f\uff08\u5982 C++ <code>std::sort</code>\uff09\u3002</p> </li> <li> <p>\u5f52\u5e76\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u7a33\u5b9a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u9700\u989d\u5916\u7a7a\u95f4\u3002</li> <li> <p>\u9002\u7528\uff1a\u5916\u90e8\u6392\u5e8f\uff08\u5927\u6570\u636e\u6587\u4ef6\uff09\u3001\u94fe\u8868\u6392\u5e8f\u3002</p> </li> <li> <p>\u5806\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u539f\u5730\u6392\u5e8f\uff0c\u65e0\u6700\u574f\u60c5\u51b5\u98ce\u9669\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u7f13\u5b58\u4e0d\u53cb\u597d\uff0c\u5b9e\u9645\u901f\u5ea6\u8f83\u6162\u3002</li> <li> <p>\u9002\u7528\uff1a\u5185\u5b58\u53d7\u9650\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002</p> </li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a</p> </li> <li>\u4f18\u70b9\uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> <li>\u7f3a\u70b9\uff1a\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8981\u6c42\uff08\u5982\u8303\u56f4\u5c0f\u3001\u5747\u5300\u5206\u5e03\uff09\u3002</li> <li>\u9002\u7528\uff1a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\uff08\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\uff09\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_5","title":"\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u5404\u79cd\u57fa\u672c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u4e00\u3001\u6808\uff08Stack\uff09 \u6808\u901a\u5e38\u7528 \u6570\u7ec4 \u6216 \u94fe\u8868 \u5b9e\u73b0\uff0c\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff1a</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u6808 <code>push</code> \\(O(1)\\) \u76f4\u63a5\u6dfb\u52a0\u5230\u6808\u9876 \u51fa\u6808 <code>pop</code> \\(O(1)\\) \u76f4\u63a5\u79fb\u9664\u6808\u9876\u5143\u7d20 \u67e5\u770b\u6808\u9876 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u6808\u9876\u5143\u7d20\uff0c\u4e0d\u5220\u9664 \u5224\u7a7a <code>isEmpty</code> \\(O(1)\\) \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a \u641c\u7d22\u5143\u7d20 \\(O(n)\\) \u9700\u8981\u904d\u5386\u6240\u6709\u5143\u7d20 <p>\u4e8c\u3001\u961f\u5217\uff08Queue\uff09 1. \u666e\u901a\u961f\u5217\uff08\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u961f <code>enqueue</code> \\(O(1)\\) \u6dfb\u52a0\u5230\u961f\u5c3e \u51fa\u961f <code>dequeue</code> \\(O(1)\\) \u79fb\u9664\u961f\u5934\u5143\u7d20\uff08\u94fe\u8868\u5b9e\u73b0\uff09 \\(O(n)\\) \u6570\u7ec4\u5b9e\u73b0\u9700\u79fb\u52a8\u5143\u7d20\uff08\u82e5\u7528\u5faa\u73af\u6570\u7ec4\u4f18\u5316\u4e3a \\(O(1)\\)\uff09 \u67e5\u770b\u961f\u5934 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u961f\u5934\u5143\u7d20 <p>2. \u4f18\u5148\u961f\u5217\uff08Priority Queue\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u57fa\u4e8e\u5806\uff08Heap\uff09\u5b9e\u73b0 \u5220\u9664\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(\\log n)\\) \u5806\u8c03\u6574 \u67e5\u770b\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(1)\\) \u8bbf\u95ee\u5806\u9876\u5143\u7d20 <p>\u4e09\u3001\u6811\uff08Tree\uff09 1. \u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff0c\u672a\u5e73\u8861\uff09</p> \u64cd\u4f5c \u5e73\u5747 \u6700\u574f\uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \\(O(n)\\) \u4f9d\u8d56\u6811\u7684\u9ad8\u5ea6 \u5220\u9664 \\(O(\\log n)\\) \\(O(n)\\) \u67e5\u627e \\(O(\\log n)\\) \\(O(n)\\) <p>2. \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff08AVL/\u7ea2\u9ed1\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u65cb\u8f6c\u64cd\u4f5c\u4fdd\u6301\u5e73\u8861 \u5220\u9664 \\(O(\\log n)\\) \u67e5\u627e \\(O(\\log n)\\) <p>3. \u5806\uff08Heap\uff0c\u4ee5\u4e8c\u53c9\u5806\u4e3a\u4f8b\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 <code>push</code> \\(O(\\log n)\\) \u4e0a\u6d6e\u8c03\u6574 \u5220\u9664\u5806\u9876 <code>pop</code> \\(O(\\log n)\\) \u4e0b\u6c89\u8c03\u6574 \u67e5\u770b\u5806\u9876 <code>peek</code> \\(O(1)\\) \u6784\u5efa\u5806 <code>heapify</code> \\(O(n)\\) \u4ece\u65e0\u5e8f\u6570\u7ec4\u6784\u5efa\u5806 <p>4. Trie\uff08\u5b57\u5178\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165/\u5220\u9664 \\(O(L)\\) \\(L\\) \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6 \u67e5\u627e \\(O(L)\\) <p>\u56db\u3001\u56fe\uff08Graph\uff09 1. \u56fe\u7684\u8868\u793a\u65b9\u5f0f</p> <ul> <li> <p>\u90bb\u63a5\u77e9\u9635\uff1a</p> </li> <li> <p>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(1)\\)</p> </li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(V)\\)\uff08\\(V\\) \u4e3a\u9876\u70b9\u6570\uff09</li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V^2)\\)</p> </li> <li> <p>\u90bb\u63a5\u8868\uff1a</p> </li> <li>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(k)\\)\uff08\\(k\\) \u4e3a\u76f8\u90bb\u8282\u70b9\u6570\uff09</li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(k)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V + E)\\)\uff08\\(E\\) \u4e3a\u8fb9\u6570\uff09</li> </ul> <p>2. \u5e38\u89c1\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6</p> \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \\(O(V + E)\\) \u90bb\u63a5\u8868\u8868\u793a \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 \\(O(V + E)\\) Dijkstra\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O((V + E) \\log V)\\) \u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u65e0\u8d1f\u6743\u8fb9\uff09 Bellman-Ford \\(O(VE)\\) \u5141\u8bb8\u8d1f\u6743\u8fb9 Floyd-Warshall \\(O(V^3)\\) \u591a\u6e90\u6700\u77ed\u8def\u5f84 \u62d3\u6251\u6392\u5e8f \\(O(V + E)\\) \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09 Kruskal\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09 \\(O(E \\log E)\\) \u57fa\u4e8e\u5e76\u67e5\u96c6\u4f18\u5316 Prim\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O(E \\log V)\\)"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_6","title":"\u6808,\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808","text":"<p>\u6808\u5206\u4e3a\u987a\u5e8f\u6808(\u6570\u7ec4\u5b58\u50a8)\u548c\u94fe\u5f0f\u6808(\u94fe\u8868\u5b58\u50a8)\u4e24\u79cd.</p> \u7279\u6027 \u987a\u5e8f\u6808 \u666e\u901a\u6808\uff08\u6cdb\u6307\uff09 \u5b9e\u73b0\u65b9\u5f0f \u6570\u7ec4\uff08\u8fde\u7eed\u5185\u5b58\uff09 \u4e0d\u9650\u5b9a\uff08\u53ef\u80fd\u662f\u94fe\u5f0f\u6808\u3001\u987a\u5e8f\u6808\u7b49\uff09 \u5b58\u50a8\u7ed3\u6784 \u5185\u5b58\u8fde\u7eed \u53ef\u80fd\u8fde\u7eed\uff08\u987a\u5e8f\u6808\uff09\u6216\u975e\u8fde\u7eed\uff08\u94fe\u5f0f\u6808\uff09 \u5bb9\u91cf \u56fa\u5b9a\u5927\u5c0f\uff08\u9700\u9884\u5206\u914d\uff09 \u53ef\u56fa\u5b9a\uff08\u987a\u5e8f\u6808\uff09\u6216\u52a8\u6001\uff08\u94fe\u5f0f\u6808\uff09 \u6269\u5bb9\u6210\u672c \u9700\u590d\u5236\u5168\u90e8\u5143\u7d20\uff08\u9ad8\u6210\u672c\uff09 \u94fe\u5f0f\u6808\u52a8\u6001\u6269\u5c55\uff08\u4f4e\u6210\u672c\uff09 \u64cd\u4f5c\u901f\u5ea6 \u6240\u6709\u64cd\u4f5c \\( O(1) \\)\uff08\u65e0\u6307\u9488\u5f00\u9500\uff09 \u94fe\u5f0f\u6808\u64cd\u4f5c\u9700\u7ef4\u62a4\u6307\u9488\uff08\u4ecd\u4e3a \\( O(1) \\)\uff09 \u9002\u7528\u573a\u666f \u5143\u7d20\u6570\u91cf\u5df2\u77e5\u3001\u9ad8\u9891\u64cd\u4f5c \u5143\u7d20\u6570\u91cf\u4e0d\u786e\u5b9a\u6216\u9700\u9891\u7e41\u589e\u5220"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_7","title":"\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868","text":"<p>\u4e0d\u53cd\u8f6c\u94fe\u8868\uff0c\u9012\u5f52\u5012\u5e8f\u8f93\u51fa:</p> <ol> <li>\u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9</li> <li>\u5728\u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u503c</li> </ol> <p>\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868:</p> C<pre><code>void printReverse(Node* head) {\n  if (head == NULL) // \u8fd4\u56de\u6761\u4ef6:\u7a7a\u94fe\u8868\n   return;\n\n  printReverse(head-&gt;next); // \u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9\n  printf(\"%d \", head-&gt;data); // \u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u6570\u636e\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_8","title":"\u4e2d\u7f00\u8f6c\u540e\u7f00","text":"<p>\u6570\u636e\u7ed3\u6784:stack,\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7b26;output,\u7528\u4e8e\u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f \u6b65\u9aa4:</p> <ol> <li>\u8f93\u5165\u53d8\u91cf:\u76f4\u63a5\u653e\u5165 output</li> <li>\u8f93\u5165(:\u653e\u5165 stack</li> <li>\u8f93\u5165):\u5c06 stack \u4e2d(\u4e4b\u524d\u7684\u7b26\u53f7\u5168\u90e8\u5f39\u51fa,\u653e\u5165 output</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u9ad8\u7684\u8fd0\u7b97\u7b26:\u653e\u5165 stack</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u4f4e\u7684\u8fd0\u7b97\u7b26:\u5f39\u51fa\u4f18\u5148\u7ea7\u9ad8\u7684\u6808\u9876\u7b26\u53f7,\u518d\u5c06\u8be5\u7b26\u53f7\u653e\u5165 stack</li> <li>\u8f93\u5165\u7ed3\u675f:\u5c06 stack \u4e2d\u5269\u4f59\u7b26\u53f7\u4f9d\u6b21\u5f39\u51fa,\u653e\u5165 output    \u4ee3\u7801:</li> </ol> C<pre><code>char postfix[N]; // \u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f\nchar stk[N];     // \u5b58\u653e\u8fd0\u7b97\u7b26\n\nvoid infixToPostfix (char* infix, char* postfix) {\n  for (int i = 0; i &lt; \u8868\u8fbe\u5f0f\u957f\u5ea6; i++) {\n    char ch = infix[i];\n    int j = 0; // \u8ddf\u8e2apostfix\u4e2d\u4f4d\u7f6e\n    if (ch\u662f\u6570\u5b57\u6216\u53d8\u91cf) {\n      postfix[j++] = ch;\n    } else if (ch == '(') {\n      push(stk, ch);\n    } else if (ch == ')') {\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876 != '(') {\n        postfix[j++] = pop(stk);\n      }\n      pop(stk); // \u5f39\u51fa\u5de6\u62ec\u53f7\n    } else {    // \u8fd0\u7b97\u7b26\u5904\u7406\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876\u5143\u7d20\u4f18\u5148\u7ea7 &gt;= ch\u7684\u4f18\u5148\u7ea7) {\n        postfix[j++] = pop(stk);\n      }\n      push(stk, ch);\n    }\n  }\n  while (\u6808\u975e\u7a7a) { // \u5f39\u51fa\u5269\u4f59\u8fd0\u7b97\u7b26\n    postfix[j++] = pop(stk);\n  }\n  postfix[j] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#bst","title":"BST \u6811\u64cd\u4f5c","text":"<p>\u7279\u70b9:\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5c0f,\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5927. BST \u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9 BST \u6811\u63d2\u5165:</p> <ol> <li>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e:\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5927,\u5f80\u5de6\u8d70;\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5c0f,\u5f80\u53f3\u8d70</li> <li>\u65b0\u5efa\u8282\u70b9\u5e76\u8fde\u63a5(\u63d2\u5165\u5f62\u6210\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u53f6\u8282\u70b9)    BST \u6811\u5220\u9664:</li> <li>\u53f6\u8282\u70b9:\u76f4\u63a5\u5220\u9664</li> <li>\u6709\u4e00\u4e2a\u513f\u5b50:\u5220\u9664\u7236\u4eb2,\u7528\u513f\u5b50\u4ee3\u66ff</li> <li>\u6709\u4e24\u4e2a\u513f\u5b50:\u627e\u5230\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u5e76\u5220\u9664,\u5220\u9664\u6839,\u7528\u8be5\u8282\u70b9\u4ee3\u66ff</li> </ol> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* insert(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return \u5efa\u7acb\u65b0\u8282\u70b9; // \u8fd4\u56de\u6761\u4ef6\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = insert(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = insert(rt\u7684\u53f3\u5b50\u6811, val);\n  }\n  return rt;\n}\n</code></pre> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u5faa\u73af,\u6570\u7ec4):</p> C<pre><code>void insert(int* bst, int val) {\n  if (bst[1]\u4e3a\u521d\u59cb\u503c) {\n    bst[1] = val; // val\u662f\u6839\n    return;\n  }\n\n  int cur = 1; // \u4ece\u6839\u5f00\u59cb\n  if (val &lt; bst[cur]) {\n    if (cur\u5de6\u5b50\u6811\u7a7a) {\n      bst[cur * 2] = val;\n      break;\n    } else {\n      cur = cur * 2;   // \u4e0b\u79fbcur\n    }\n  } else if (val &gt; bst[cur]) {\n    if (cur\u53f3\u5b50\u6811\u7a7a) {\n      bst[cur * 2 + 1] = val;\n      break;\n    } else {\n      cur = cur *2 + 1; // \u4e0b\u79fbcur\n    }\n  } else { // val\u5df2\u5b58\u5728\n    break;\n  }\n}\n</code></pre> <p>BST \u6811\u5220\u9664\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* delete(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return rt;\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = delete(rt\u7684\u53f3\u5b50\u6811, val);\n  } else { // \u8981\u5220\u9664rt\n    // \u60c5\u51b51:\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\n    if (rt\u7684\u5de6\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u53f3\u513f\u5b50;\n      free(rt);\n      return tmp;\n    } else if (rt\u7684\u53f3\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u5de6\u513f\u5b50;\n      free(rt);\n      return tmp;\n    }\n    // \u60c5\u51b52:rt\u6709\u4e24\u4e2a\u513f\u5b50\n    BSTNode* tmp = rt\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9;\n    rt\u7684\u503c = tmp\u7684\u503c;\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, tmp\u7684\u503c);\n  }\n  return rt;\n}\n</code></pre> <p>\u8f85\u52a9\u51fd\u6570,\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u8282\u70b9:</p> C<pre><code>BSTNode* findMax(BSTNode* node) {\n  while (node\u7684\u5de6\u5b50\u6811\u975e\u7a7a) {\n    node = node\u7684\u5de6\u513f\u5b50;\n  }\n  return node;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#avl","title":"AVL \u6811\u5e73\u8861","text":"<p>\u5e73\u8861\u56e0\u5b50 BF:\u5de6\u5b50\u6811\u9ad8\u5ea6-\u53f3\u5b50\u6811\u9ad8\u5ea6 \u5e73\u8861\u56e0\u5b50\u7edd\u5bf9\u503c\u9700\u8981&lt;=1 \u6bcf\u6b21\u63d2\u5165\u6216\u5220\u9664\u540e\u901a\u8fc7\u65cb\u8f6c\u4fdd\u6301\u5e73\u8861</p> \u5931\u8861\u7c7b\u578b \u5931\u8861\u8282\u70b9 BF \u5931\u8861\u8282\u70b9\u513f\u5b50 BF \u65cb\u8f6c\u65b9\u5f0f LL \u578b 2 \u5de6 1 \u53f3\u65cb RR \u578b -2 \u53f3 -1 \u5de6\u65cb LR \u578b 2 \u5de6 -1 \u5de6\u65cb\u5de6\u513f\u5b50,\u7136\u540e\u53f3\u65cb RL \u578b -2 \u53f3 1 \u53f3\u65cb\u53f3\u513f\u5b50,\u7136\u540e\u5de6\u65cb <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* leftRotate(AVLNode *y) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *x = y-&gt;right;\n    AVLNode *B = x-&gt;left;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    x-&gt;left = y;\n    y-&gt;right = B; // \u51b2\u7a81\u7684\u5de6\u513f\u5b50\u53d8\u4e3a\u53f3\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0y\uff0c\u518d\u66f4\u65b0x\uff09\n    updateHeight(y);\n    updateHeight(x);\n\n    return x; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: y x  / \\  x -- \u5de6\u65cb(y) \u2192 y C /  \\  B C B</p> <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* rightRotate(AVLNode *x) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *y = x-&gt;left;\n    AVLNode *B = y-&gt;right;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    y-&gt;right = x;\n    x-&gt;left = B; // \u51b2\u7a81\u7684\u53f3\u513f\u5b50\u53d8\u4e3a\u5de6\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0x\uff0c\u518d\u66f4\u65b0y\uff09\n    updateHeight(x);\n    updateHeight(y);\n\n    return y; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: x y / / \\  y -- \u53f3\u65cb(x) \u2192 A x /  / A B B</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/5.5%20%E4%B8%80%E4%BA%9B%E9%A2%98%E7%9B%AE%E5%92%8C%E7%AC%94%E8%AE%B0/#_9","title":"\u5806\u7684\u64cd\u4f5c(\u5927\u6839\u5806\u4e3a\u4f8b)","text":"<p>\u5927\u6839\u5806\u7684\u7279\u70b9:\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9,\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6240\u6709\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u503c \u5806\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5c06\u666e\u901a\u5b8c\u5168\u4e8c\u53c9\u6811\u6539\u4e3a\u5927\u6839\u5806:</p> <p>\u4ece\u7b2c\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\u5012\u7740\u904d\u5386,\u5c06\u6bcf\u4e2a\u5b50\u6811\u6539\u4e3a\u5806 (1) \u5982\u679c\u6839\u7684\u503c\u5927\u4e8e\u5de6\u53f3\u513f\u5b50,continue (2) \u5982\u679c\u6839\u7684\u503c\u5c0f\u4e8e\u4e00\u4e2a\u513f\u5b50,\u7528\u8be5\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb (3) \u5982\u679c\u6839\u6bd4\u4e24\u4e2a\u513f\u5b50\u90fd\u5c0f,\u7528\u8f83\u5927\u7684\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb</p> <p>\u5927\u6839\u5806\u4e2d\u63d2\u5165\u5143\u7d20:</p> <ol> <li>\u63d2\u5165\u672b\u5c3e</li> <li>\u4e0a\u6d6e\u5230\u6b63\u786e\u4f4d\u7f6e</li> </ol> <p>\u5927\u6839\u5806\u6392\u5e8f:</p> <ol> <li>\u5efa\u7acb\u5927\u6839\u5806</li> <li>\u5c06\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362,\u8c03\u6574\u672a\u6392\u5e8f\u7684\u90e8\u5206,\u76f4\u5230\u5168\u90e8\u6392\u5e8f</li> </ol> <p>\u5806\u5316:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u5c06i\u4e3a\u6839\u7684\u5b50\u6811\u5806\u5316\nvoid heapify(int* arr, int n, int i) {\n  int largest = i;\n  if (\u5de6\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u5de6\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u5de6\u513f\u5b50\u4f4d\u7f6e;\n  }\n  if (\u53f3\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u53f3\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u53f3\u513f\u5b50\u4f4d\u7f6e;\n  }\n\n  if (largest != i) {\n    \u4ea4\u6362arr[i]\u548carr[largest];\n    heapify(arr, n, largest);  // \u9012\u5f52\u8c03\u6574\u53d7\u5f71\u54cd\u7684\u5b50\u6811\n  }\n}\n\n// \u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u8f6c\u6362\u4e3a\u5927\u6839\u5806\nvoid buildMaxHeap(int arr[], int n) {\n    // \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u524d\u904d\u5386\u5230\u6839\u8282\u70b9\n    for (int i = n / 2 - 1; i &gt;= 0; i--) {\n        heapify(arr, n, i);\n    }\n}\n</code></pre> <p>\u5806\u4e2d\u63d2\u5165\u8282\u70b9:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u4e0a\u6d6e\nvoid siftUp(int* heap, int idx) {\n  while (idx &gt; 0) {\n    int pa = idx\u7236\u4eb2\u7684\u7d22\u5f15;\n  }\n  if (heap[idx] &gt; heap[pa]) {\n    \u4ea4\u6362heap[idx]\u548cheap[pa];\n    idx = pa; // \u66f4\u65b0\u7d22\u5f15,\u5411\u4e0a\u68c0\u67e5\n  } else {\n    break;\n  }\n}\n\n// \u5411\u5927\u6839\u5806\u4e2d\u63d2\u5165\u65b0\u5143\u7d20\nvoid insertMaxHeap(int* heap, int size, int capacity, int val) {\n  if (size &gt; capacity)\n    return;\n\n  heap[size++] = val; // \u6dfb\u52a0\u5230\u672b\u5c3e\n  siftUp(heap, size-1);\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/","title":"6. \u5806\u7684\u5b9e\u73b0","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 199 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#class-five","title":"Class Five","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_1","title":"\u4f18\u5148\u961f\u5217(\u5806)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_2","title":"\u76ee\u6807\u529f\u80fd","text":"<p>insert \u548c delete,\u4e14\u6bcf\u6b21 delete \u5220\u9664\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_3","title":"\u5b9e\u73b0(\u5c0f\u6839\u5806\u4e3a\u4f8b)","text":"<ul> <li>\u51e0\u79cd\u4f20\u7edf\u65b9\u6cd5:\u6570\u7ec4,\u94fe\u8868,\u6709\u5e8f\u6570\u7ec4,\u6709\u5e8f\u94fe\u8868...</li> <li>\u5c0f\u6839\u5806:\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5b83\u6240\u5728\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9(order property).</li> <li>\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u662f\u4ece\u5c0f\u5230\u5927.\u6bcf\u6b21\u63d2\u5165\u65b0\u8282\u70b9\u65f6,\u5728\u5f53\u524d\u8282\u70b9\u8c03\u6210\u4ece\u5c0f\u5230\u5927\u5373\u53ef.(\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f,\u7531 i \u8ddf i-1 \u6bd4\u6362\u6210 i \u8ddf i/2 \u6bd4)</li> <li>\u4e00\u5c42\u4e00\u5c42\u63d2\u5165,\u5f97\u5230\u5b8c\u5168\u4e8c\u53c9\u6811(structure property).</li> <li>\u591a\u53c9\u5806?\u6811\u7684\u9ad8\u5ea6\u964d\u4f4e,\u4f46\u603b\u65f6\u95f4\u4e0d\u53d8.</li> <li>\u63d2\u5165:</li> </ul> C<pre><code>// \u63d2\u5165\u5143\u7d20\nbool Insert(Heap H, int x){\n  if (\u5806\u5df2\u6ee1) return false\n\n  i\u8868\u793a\u5f53\u524d\u5806\u7684\u5927\u5c0f(\u539f\u5148\u5927\u5c0f+1)\n  for (i\u7684\u7236\u4eb2\u6bd4i\u5904\u7684\u503c\u5927,i/2) {\n    i\u7684\u7236\u4eb2\u4e0b\u79fb\u5230i\u5904\n  }\n  // \u6b64\u65f6i\u7684\u7236\u4eb2\u6bd4i\u5c0f,i\u8868\u793a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u7b2ci\u4f4d\u7684\u503c\u8d4b\u4e3ax\n}\n\n// \u5220\u9664(\u5c0f\u6839\u5806)\nint DeleteMin(Heap H) {\n  if (\u5806\u662f\u7a7a\u7684)\n    return ERROR\n\n  min\u8868\u793a\u6700\u5c0f\u503c(\u6839)\n  x\u8868\u793a\u5f53\u524d\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20(\u5806\u7684\u5927\u5c0f\u4e3a\u539f\u5148\u5927\u5c0f-1)\n  pa\u8868\u793a\u904d\u5386\u7684\u8282\u70b9,child\u8868\u793a\u8f83\u5c0f\u7684\u5b50\u8282\u70b9\n\n  for (pa\u4ece\u6839\u5f00\u59cb,pa\u7684\u513f\u5b50\u4e0d\u8d85\u8fc7\u5806\u7684\u5927\u5c0f,pa\u66f4\u65b0\u4e3achild) {\n    \u5047\u8bbe\u8f83\u5c0f\u7684child\u662fpa\u7684\u5de6\u513f\u5b50\n    if (child\u4e0d\u662f\u6700\u540e\u4e00\u4e2a,\u800c\u4e14\u53f3\u513f\u5b50\u7684\u503c\u66f4\u5c0f) {\n      child\u66f4\u65b0\u4e3apa\u7684\u53f3\u513f\u5b50\n    }\n\n    if (child\u7684\u503c\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5927)\n      break\n    else\n      pa\u7684\u503c\u4e0b\u79fb\u5230child\n  }\n\n  // \u6b64\u65f6pa\u8868\u793ax\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u5c06\u7b2cpa\u4f4d\u8d4b\u4e3ax\n\n  return min\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/6.%20%E5%A0%86%E7%9A%84%E5%AE%9E%E7%8E%B0/#_4","title":"\u52a8\u6001\u7b49\u4ef7\u5173\u7cfb","text":"<p>\u7ed9\u5b9a\u5143\u7d20\u548c\u51e0\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb,\u6c42\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u662f\u5426\u7b49\u4ef7.</p> Text Only<pre><code>// \u6784\u5efa\nwhile (\u8bfb\u5165a\u548cb\u7b49\u4ef7) {\n  if (a\u7684\u96c6\u5408!=b\u7684\u96c6\u5408) {\n    \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n  }\n}\n\n// \u67e5\u8be2\n\u8bfb\u5165\u4e24\u4e2a\u8981\u67e5\u8be2\u7684\u5143\u7d20\nif (a\u7684\u96c6\u5408==b\u7684\u96c6\u5408) {\n  print (true)\n}\n</code></pre> <p>\u7528\u6570\u7ec4\u8868\u793a:\u4e0b\u6807\u4ee3\u8868\u5143\u7d20,\u503c\u4ee3\u8868\u6839</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/","title":"7. \u5e76\u67e5\u96c6\u548c\u56fe","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 1010 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#cloud_with_lightning_and_rainclass-seven","title":":cloud_with_lightning_and_rain:Class Seven","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_1","title":"\u8003\u8bd5\u9898\u578b","text":"<p>\u9009\u62e9\u9898,\u51fd\u6570\u586b\u7a7a,\u51fd\u6570\u7f16\u7a0b\u9898(1 \u9898)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_2","title":"\u7b49\u4ef7\u7c7b\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u96c6\u5408,\u7ed9\u5b9a\u8c01\u548c\u8c01\u7b49\u4ef7,\u6839\u636e\u6b64\u7b49\u4ef7\u5212\u5206\u96c6\u5408. e.g.\u8c01\u548c\u8c01\u662f\u4e00\u7ec4,\u56fe\u4e2d\u6700\u5c0f\u751f\u6210\u6811(\u57ce\u5e02\u4e4b\u95f4\u8fde\u901a\u9053\u8def\u7684\u6700\u5c0f\u957f\u5ea6) \u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u79cd\u65b9\u6cd5:</p> <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\u751f\u6210\u7684\u56fe\u68c0\u9a8c. \u5f53\u653e\u5165\u8fb9\u540e\u5f62\u6210\u56de\u8def\u65f6,\u8be5\u8fb9\u4e0d\u6b63\u786e. \u6838\u5fc3\u662f\u7ed9\u5b9a\u4e00\u6761\u8fb9,\u5224\u5b9a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u5c5e\u4e8e\u4ec0\u4e48\u96c6\u5408.\u5982\u679c\u5728\u540c\u4e00\u7ec4,\u653e\u5165;\u5728\u4e0d\u540c\u7ec4,\u4e0d\u653e\u5165. \u7528<code>find</code>\u51fd\u6570\u5b9e\u73b0,\u540c\u4e00\u7ec4\u7684\u70b9\u7528<code>union</code>\u8fde\u63a5.</p> <ul> <li>\u7528\u6811\u8868\u793a:\u8fd9\u6837\u7684\u6811\u4e0d\u9700\u8981\u627e\u513f\u5b50,\u53ea\u9700\u8981\u627e\u7236\u4eb2.\u56e0\u6b64\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u7236\u4eb2.</li> <li>\u7528\u6570\u7ec4\u8868\u793a:\u7d22\u5f15\u4ee3\u8868\u5f53\u524d\u8282\u70b9,\u6570\u503c\u4ee3\u8868\u4e0a\u4e00\u4e2a\u7236\u4eb2.\u5982\u679c<code>s[i]==0</code>,\u8868\u793a\u662f\u6839.   \u96c6\u5408\u7684\u5e76:<code>s[rt1]=rt2</code>.</li> </ul> <p>\u627e\u5230 parent \u7684\u4ee3\u7801:</p> Text Only<pre><code>  while (s[i]&gt;0) {\n    i=s[i];\n  }\n  return i;\n</code></pre> <ul> <li>\u5408\u5e76\u65b9\u6cd5:union by height,union by size(\u53ef\u63a8\u5bfc\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7\\(log_2 N\\)),\u6bcf\u6b21\u8c03\u6574\u8f83\u5c0f\u7684\u6811</li> <li>\u600e\u4e48\u5224\u65ad\u6811\u7684\u5927\u5c0f?\u4e4b\u524d\u6811\u6839\u7528 0 \u8868\u793a,\u53ef\u4ee5\u7528\u8d1f\u6570\u8868\u793a\u6811\u6839,\u6570\u503c\u7684\u7edd\u5bf9\u503c\u8868\u793a\u6811\u7684\u5927\u5c0f.<code>s[root]=-size</code>.</li> <li>\u8def\u5f84\u538b\u7f29:\u627e\u5230\u6811\u6839\u65f6,\u8fd9\u4e00\u6761\u8def\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u7ecf\u8fc7.\u5c06\u8fd9\u6761\u8def\u4e0a\u7684\u8282\u70b9\u90fd\u76f4\u63a5\u6307\u5411\u6811\u6839.</li> </ul> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  if (s[x]&lt;=0)               // \u662f\u6811\u6839\n    return\n  else\n    return s[x]=find(s[x],s) // \u627ex\u4e0a\u4e00\u4e2a\u7236\u4eb2\u7684\u6839,\u5e76\u7528\u6839\u66f4\u65b0s[x]\n}\n</code></pre> <p>\u6216\u4f7f\u7528\u4e24\u5c42\u5faa\u73af:</p> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  for (root=x;s[root]&gt;0;root=s[root]); // \u4e0d\u65ad\u66f4\u65b0root,\u5148\u627e\u5230\u6839\n\n  for (trail=x;trail!=root;trail=lead) {\n    lead=s[trail]; // \u7528\u4e8e\u4fdd\u5b58\u8def\u5f84\u4e0a\u7684\u503c\n    s[trail]=root; // \u5c06\u8def\u5f84\u4e0a\u7684\u503c\u66f4\u65b0\u4e3a\u6839\n  }\n\n  return root;\n}\n</code></pre> <p>\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\u8fd1\u4f3c\u5e38\u91cf.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_3","title":"\u56fe","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_4","title":"\u4eba\u5de5\u667a\u80fd\u539f\u7406","text":"<p>\u7528\u7b80\u7b54\u7684\u6a21\u578b\u5b9e\u73b0\u590d\u6742\u7684\u6620\u5c04.\u5176\u4e2d\u7684\u53d8\u91cf\u662f\u6743\u91cd. \u8bbe\u8ba1\u8bc4\u4f30\u51fd\u6570\u5224\u65ad\u8bbe\u8ba1\u7684\u6a21\u578b\u548c\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u8ddd,\u6210\u4e3a\u8bef\u5dee\u51fd\u6570\\(L(w_i)\\).\u8be5\u51fd\u6570\u662f\u6743\u91cd\\(w_i\\)\u7684\u51fd\u6570.\u4e0d\u65ad\u8c03\u6574\u6743\u91cd\u4f7f\u8be5\u51fd\u6570\u7684\u503c\u6700\u5c0f. \u76f8\u5f53\u4e8e\u6c42\u51fd\u6570\u7684\u6781\u5c0f\u503c.\u5411\u5bfc\u6570\u4e3a\u96f6\u7684\u65b9\u5411\u8c03\u6574.\u5229\u7528\u7684\u65b9\u6cd5\u4e3a\u68af\u5ea6\u9012\u964d\u6cd5. \u795e\u7ecf\u7f51\u7edc\u7684\u672c\u8d28\u662f\u56fe.\u5927\u6a21\u578b\u8bad\u7ec3\u7684\u672c\u8d28\u662f\u5c06\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_5","title":"\u56fe\u7684\u63cf\u8ff0","text":"<ul> <li>G(V,E)\u5206\u522b\u8868\u793a\u70b9,\u8fb9</li> <li>\u4e00\u822c\u8003\u8651:\u6ca1\u6709\u81ea\u73af,\u6ca1\u6709\u91cd\u8fb9</li> <li>\u5b8c\u5168\u56fe:\u6240\u6709\u80fd\u8fde\u7684\u8fb9\u90fd\u8fde\u63a5.\u65e0\u5411\u56fe\u8fb9\u7684\u6761\u6570\u4e3a\\(C_n^2\\).</li> <li>\u5b50\u56fe:\u70b9\u548c\u8fb9\u90fd\u662f\u5b50\u96c6</li> <li>\u8def\u5f84:\u70b9\u7684\u5e8f\u5217,\u4efb\u4f55\u524d\u540e\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5</li> <li>\u8def\u5f84\u957f\u5ea6:\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u6761\u8fb9</li> <li>\u7b80\u5355\u8def\u5f84:\u8def\u5f84\u4e0a\u7684\u70b9\u6ca1\u6709\u91cd\u53e0</li> <li>\u73af:\u7b80\u5355\u8def\u5f84,\u4e14\u5934\u5c3e\u8fde\u63a5</li> <li>\u8fde\u901a\u56fe:\u65e0\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u90fd\u662f\u8fde\u901a\u7684;\u6709\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u80fd\u8d70\u5230.</li> <li>\u8fde\u901a\u5b50\u56fe(component):\u6700\u5927\u7684\u8fde\u901a\u7684\u5b50\u56fe</li> <li>\u6811:\u8fde\u901a\u7684,\u6ca1\u6709\u56de\u8def\u7684\u56fe</li> <li>DAG(directed acyclic graph):\u6709\u5411\u65e0\u73af\u56fe,\u8282\u70b9\u524d\u540e\u6709\u4f9d\u8d56\u5173\u7cfb</li> <li>\u5f3a\u8fde\u901a\u56fe(strong connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u6709\u5411\u56fe</li> <li>\u5f31\u8fde\u901a\u56fe(weakly connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u65e0\u5411\u56fe</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component)</li> <li>\u5ea6(degree):\u6bcf\u4e2a\u70b9\u6709\u51e0\u4e2a\u70b9\u548c\u5b83\u8fde\u901a</li> <li>\u5165\u5ea6(in-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u6709\u591a\u5c11\u5176\u4ed6\u70b9\u6307\u5411\u5b83</li> <li>\u51fa\u5ea6(out-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u5b83\u6307\u5411\u51e0\u4e2a\u5176\u4ed6\u70b9</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_6","title":"\u56fe\u7684\u8868\u793a(\u6709\u5411\u56fe)","text":"<p>\u90bb\u63a5\u8868:\u628a\u6240\u6709\u8be5\u70b9\u51fa\u53bb\u7684\u8fb9\u90fd\u7528\u94fe\u8868\u4e32\u5728\u4e00\u8d77 \u9006\u90bb\u63a5\u8868:\u5c06\u6307\u5411\u8be5\u70b9\u7684\u70b9\u4e32\u5728\u4e00\u8d77. \u90bb\u63a5\u8868\u548c\u9006\u90bb\u63a5\u8868\u5b8c\u6574\u5730\u8868\u793a\u6574\u4e2a\u56fe</p> <p>\u5341\u5b57\u94fe\u8868(\u53ea\u7528\u4e8e\u6709\u5411\u56fe):\u7528\u8282\u70b9\u8868\u793a\u8fb9,\u6bcf\u4e2a\u8282\u70b9\u6709 4 \u4e2a\u5206\u91cf,\u5206\u522b\u4e3a 2 \u4e2a\u6570\u636e\u548c 2 \u4e2a\u6307\u9488.\u7528\u6570\u7ec4\u8868\u793a\u6240\u6709\u8282\u70b9.\u6570\u7ec4\u4e2d vi \u6307\u5411 vi \u5f00\u5934\u7684\u8282\u70b9. \u524d\u9762\u7684\u6307\u9488\u8868\u793a\u7b2c\u4e00\u4e2a\u6570\u636e\u6307\u5411\u8c01,\u7b2c\u4e8c\u4e2a\u6307\u9488\u8868\u793a\u4ec0\u4e48\u6570\u636e\u6307\u5411\u7b2c\u4e8c\u4e2a\u6570\u636e.</p> <p>\u591a\u91cd\u94fe\u8868 multilist(\u53ea\u7528\u4e8e\u65e0\u5411\u56fe):\u6570\u7ec4\u51fa\u53d1\u7684\u6bcf\u4e2a\u70b9\u5c06\u542b\u6709\u8be5\u70b9\u7684\u8282\u70b9\u4e32\u5728\u4e00\u8d77.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/7.%20%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%92%8C%E5%9B%BE/#_7","title":"\u56fe\u7684\u4f5c\u7528","text":"<ol> <li>\u793e\u7fa4\u6316\u6398:\u5c06\u4e0d\u540c\u4eba\u4e4b\u95f4\u7684\u8054\u7cfb\u8868\u793a\u6210\u56fe.\u6839\u636e\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u5212\u5206\u793e\u7fa4.</li> <li>\u4e00\u79cd\u5224\u65ad\u793e\u7fa4\u662f\u5426\u7d27\u5bc6\u7684\u65b9\u6cd5:\u91cc\u9762\u7684\u8fb9\u548c\u5916\u9762\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6bd4\u503c</li> <li>\u53ef\u4ee5\u6839\u636e\u70b9\u7684\u5165\u5ea6,\u51fa\u5ea6\u7684\u6743\u91cd\u5224\u65ad\u70b9\u7684\u6027\u8d28</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/","title":"8. \u62d3\u6251\u6392\u5e8f\u548cDijkstra","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 263 \u4e2a\u5b57\u00a0\u00a04 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#class-eight","title":"Class Eight","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#_1","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>\u4f8b\u5b50:   \u4e0d\u540c\u8bfe\u7a0b\u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb,\u6709\u4e9b\u8bfe\u7a0b\u9700\u8981\u5176\u4ed6\u8bfe\u4f5c\u4e3a\u524d\u7f6e\u8bfe\u7a0b.\u7528\u56fe\u8868\u793a\u4f9d\u8d56\u5173\u7cfb,\u6709\u4ee5\u4e0b\u5173\u7cfb:</li> <li>\u5f62\u6210\u65e0\u56de\u8def\u7684\u6709\u5411\u56fe(DAG,\u6709\u5411\u65e0\u73af\u56fe)</li> <li>\u7528\u70b9\u6216\u8fb9\u8868\u793a\u8981\u7d20(AOV)</li> <li>\u76ee\u6807:   \u6839\u636e\u8bfe\u7a0b\u7684\u4f9d\u8d56\u5173\u7cfb,\u5217\u51fa\u4e0d\u77db\u76fe\u7684\u9009\u8bfe\u7684\u987a\u5e8f.</li> <li>\u62d3\u6251\u6392\u5e8f\u65b9\u6cd5:</li> </ul> <ol> <li>\u627e\u5230\u7b2c\u4e00\u95e8:\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9</li> <li>\u6bcf\u627e\u5230\u4e00\u4e2a\u70b9\u540e,\u5220\u9664\u8be5\u70b9.(\u6bcf\u6b21\u5904\u7406\u540e\u56fe\u53d1\u751f\u4e00\u70b9\u6539\u52a8.)\u4fee\u6539\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6.</li> <li>\u6bcf\u6b21\u968f\u673a\u9009\u53d6\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9,\u91cd\u590d\u524d\u4e24\u6b65.</li> </ol> <ul> <li>\u90e8\u5206\u6709\u5e8f(partial order)   \u6709\u4e9b\u70b9\u6709\u5e8f,\u6709\u4e9b\u70b9\u65e0\u5e8f</li> <li>\u4ee3\u7801:</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  for (int cnt = 0; cnt &lt; \u70b9\u7684\u603b\u6570; cnt++) {\n    int v = \u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9;\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w)\n      w\u7684\u5165\u5ea6--; // \u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1,\u6839\u636e\u8fd9\u4e2a\u70b9\u4fee\u6539\u5468\u56f4\u70b9\u7684\u4fe1\u606f\n  }\n}\n</code></pre> <ul> <li>\u600e\u4e48\u67e5\u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9?   \u6784\u5efa\u961f\u5217.\u6bcf\u6b21\u4fee\u6539\u5165\u5ea6\u65f6\u5982\u679c\u6539\u540e\u4e3a\u96f6,\u52a0\u5165\u961f\u5217.</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  \u961f\u5217 Q;\n  for (\u904d\u5386\u6240\u6709\u70b9v) {\n    if (v\u7684\u5165\u5ea6 == 0)\n      enqueue(v, Q);\n  }\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w) {\n      if (--w\u7684\u5165\u5ea6 == 0)\n        enqueue(w, Q);\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/8.%20%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E5%92%8CDijkstra/#_2","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898","text":"<p>\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898:Dijkstra</p> <ol> <li>\u521d\u59cb\u5316\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e3a\u65e0\u7a77\u5927</li> <li>\u627e\u51fa\u6ca1\u6709\u88ab\u62d3\u5c55\u8fc7\u4e14\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9</li> <li>\u5c06\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u5df2\u7ecf\u62d3\u5c55\u8fc7</li> <li>(\u5229\u7528\u8be5\u70b9\u4fee\u6539\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7684\u4fe1\u606f.)\u5224\u65ad\u65b0\u6dfb\u52a0\u7684\u8def\u5f84\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u539f\u6709\u957f\u5ea6,\u5982\u679c\u5c0f\u4e8e\u5219\u66f4\u65b0\u957f\u5ea6</li> </ol> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nconst int N = 1e3 + 5;\nconst ll inf = 4e18;\n\nstruct Node {\n    int x, w;  // x\u8868\u793a\u51fa\u70b9\uff0cw\u8868\u793a\u6743\u503c\n};\nvector&lt;Node&gt; g[N];\nll d[N], n, m;\n\nvoid dijkstra(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));  // \u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7,\u6bcf\u4e2a\u70b9\u53ea\u88ab\u62d3\u5c55\u4e00\u6b21\n\n    for (int i = 1; i &lt;= n; i++) {\n        // \u627e\u51fa\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9\n        int u = 1;\n        for (int j = 1; j &lt;= n; j++) {\n            if (vis[u] || (!vis[j] &amp;&amp; d[j] &lt; d[u]))\n                u = j;\n        }\n\n        vis[u] = true;  // \u8868\u793au\u5df2\u7ecf\u62d3\u5c55\u8fc7\n\n        // \u6b64\u65f6d[u]\u5df2\u7ecf\u4e3a\u6700\u4f18\n        for (auto&amp; [v, w] : g[u]) {\n            if (!vis[v] &amp;&amp; d[v] &gt; d[u] + w)\n                d[v] = d[u] + w;\n        }\n    }\n}\n\n// \u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5bfb\u627e\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\nvoid dijkstra1(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7\n\n    priority_queue&lt;Node&gt; pq;\n    pq.push((Node){st, d[st]});  // \u8d77\u70b9\u4f5c\u4e3a\u62d3\u5c55\u70b9\n\n    while (pq.size()) {\n        int x = pq.top().x;\n        pq.pop();\n\n        if (vis[x])\n            continue;\n        vis[x] = true;\n\n        for (auto&amp; [y, w] : g[x]) {\n            if (!vis[y] &amp;&amp; d[y] &gt; d[x] + w) {\n                d[y] = d[x] + w;\n                pq.push((Node){y, d[y]});\n            }\n        }\n    }\n}\n\nvoid solve() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, w;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        if (u != v)\n            g[u].push_back({v, w});\n    }\n\n    dijkstra1(1);\n\n    cout &lt;&lt; (d[n] &gt;= 4e18 ? -1 : d[n]) &lt;&lt; '\\n';\n}\n\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int _ = 1;\n    while (_--)\n        solve();\n    return 0;\n}\n</code></pre> <p>\u4e0d\u9002\u7528\u4e8e\u8d1f\u8fb9\u60c5\u51b5:\u88ab\u62d3\u5c55\u8fc7\u4e00\u6b21\u540e\u4e0d\u518d\u62d3\u5c55 \u8d1f\u8fb9\u4ee3\u7801:</p> C<pre><code>void dijkstra(\u56fe g) {\n  \u961f\u5217 Q;\n  enqueue(\u6e90\u70b9, Q);\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    for (v\u6307\u5411\u7684\u70b9w) {\n      if (v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6 &lt; w\u7684\u8ddd\u79bb) {\n        w\u7684\u8ddd\u79bb = v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6;\n        if (w\u4e0d\u5728Q\u4e2d)\n          enqueue(w, Q);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/9.%20Floyd%E5%92%8CAOE%E7%BD%91/","title":"9. Floyd\u548cAOE\u7f51","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 458 \u4e2a\u5b57\u00a0\u00a02 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#class-nine","title":"Class Nine","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#all-pairs-shortest-paths","title":"\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)","text":"<p>\u4e00\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1a\u7b97\u4e00\u884c\uff08n \u4e2a\u503c\uff09 \u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)\uff1a\u7b97\u4e00\u4e2a\u77e9\u9635\uff08n*n \u77e9\u9635\uff09</p> <p>\u52a8\u6001\u89c4\u5212\uff1a \u5927\u95ee\u9898\u5206\u89e3\u4e3a\u5c0f\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5206\u6cbb\u6cd5\u6216\u9012\u5f52\u65f6\u5c0f\u95ee\u9898\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\uff0c\u6548\u7387\u4f4e\uff08\u5206\u6cbb\u6cd5\u662f top-down\uff0c\u4ece\u4e0a\u5230\u4e0b\u8ba1\u7b97\uff09\u3002 \u52a8\u6001\u89c4\u5212\u4e3a botton-up\uff0c\u5148\u6c42\u57fa\u7840\u89e3\u518d\u6c42\u9ad8\u5c42\u89e3\u3002\u57fa\u7840\u89e3\u53ef\u80fd\u6709\u5f88\u591a\uff0c\u9700\u8981\u7528\u6570\u7ec4\u7b49\u7ed3\u6784\u5b58\u50a8\u3002 \u5206\u6790\u95ee\u9898\u7684\u601d\u8def\u662f top-down\uff0c\u89e3\u7b54\u95ee\u9898\u7684\u6d41\u7a0b\u662f botton-up\u3002</p> <p>\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff1a D(i,j)\u8868\u793a vi \u51fa\u53d1\u5230 vj \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e2d\u95f4\u53ef\u80fd\u7ecf\u8fc7\u70b9\u96c6\u3002 \u5982\u679c\u4e2d\u95f4\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u70b9\uff08\u4e3a\u7a7a\u96c6\uff09\uff0c\u7b54\u6848\u4e3a\u8fb9\u957f\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1 \u8fd9\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5230 vj\uff0c\u548c vi \u5230 v1 \u518d v1 \u5230 vj\uff08\u8fd9\u4e24\u6bb5\u4e4b\u95f4\u90fd\u662f\u7a7a\u96c6\uff09\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1\uff0cv2 \u4e24\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\uff0c\u548c vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 v2 \u518d\u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\u3002</p> <p>Floyd \u521d\u59cb\u5316\uff1a\u8fb9\u6216\u65e0\u7a77\u5927 \u72b6\u6001\u8f6c\u79fb\uff1a\u5141\u8bb8\u7ecf\u8fc7\u70b9 \u57fa\u672c\u6846\u67b6:</p> C<pre><code>for (\u4e2d\u8f6c\u70b9k)\n    for (\u8d77\u70b9i)\n        for (\u7ec8\u70b9j)\n        //\u5224\u65ad\u662f\u5426\u66f4\u65b0\n        d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/9.%20Floyd%E5%92%8CAOE%E7%BD%91/#aoe-activity-on-edge","title":"AOE \u7f51(Activity On Edge)","text":"<p>\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u6709\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u505a\u3002\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u65f6\u95f4\u70b9\uff0c\u6240\u6709\u5165\u8fb9\u7684\u4efb\u52a1\u90fd\u5b8c\u6210\u540e\u624d\u80fd\u505a\u8282\u70b9\u4ee5\u540e\u7684\u4efb\u52a1\u3002 \u4e3a\u4ec0\u4e48\u627e\u5173\u952e\u8def\u5f84\uff1f\u5982\u679c\u8981\u628a\u65f6\u95f4\u7f29\u77ed\uff0c\u9700\u8981\u52a0\u5feb\u54ea\u4e9b\u4efb\u52a1\u624d\u80fd\u4f7f\u6574\u4f53\u65f6\u95f4\u51cf\u5c11\u3002 \u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff1a\u6240\u6709\u4e4b\u524d\u7684\u652f\u8def\u6240\u9700\u65f6\u95f4\u7684\u6700\u5927\u503c \u53ef\u80fd\u5efa\u7acb dummy activity\uff08\u6240\u9700\u65f6\u95f4\u4e3a 0\uff09\uff0c\u5efa\u7acb\u4e0d\u540c\u4efb\u52a1\u4e4b\u95f4\u7684\u5173\u8054\u3002</p> <p>EC(Early Complete time)\uff1amax{\u6240\u6709\u5165\u70b9\u7684 EC + \u5165\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u6700\u5c11\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\uff09 LC(Last Complete time)\uff1amin{\u6240\u6709\u51fa\u70b9\u7684 LC - \u51fa\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u80fd\u5077\u61d2\u591a\u957f\u65f6\u95f4\uff0c\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u51fa\u53d1\uff09 \u5982\u679c\u8282\u70b9\u7684 EC == LC\uff0c\u8be5\u70b9\u662f\u5173\u952e\u70b9\u3002\u5173\u952e\u70b9\u7ec4\u6210\u5173\u952e\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/","title":"fdsNote","text":"<p>\u9605\u8bfb\u4fe1\u606f</p> <p> \u7ea6 4938 \u4e2a\u5b57\u00a0\u00a066 \u5206\u949f\u00a0\u00a0\u672c\u9875\u603b\u8bbf\u95ee\u91cf\uff1a\u52a0\u8f7d\u4e2d... \u6b21</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-one","title":"Class One","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(f(n))\\):\u4e0a\u754c \\(\\Omega(f(n))\\):\u4e0b\u754c \\(\\Theta(f(n))\\):\u6700\u597d\u6700\u574f\u60c5\u51b5\u7684\u5e73\u5747   \\(o(f(n))\\):\u771f\u4e0a\u754c(\u6700\u574f\u60c5\u51b5\u4e0b\u4e0a\u754c)  </p> <p>nlogn \u63a8\u5bfc: \uff08\u8fd9\u4e00\u6bb5\u663e\u793a\u653e\u5f03\u4fee\u6539\u4e86\u3002\u3002\uff09 \\(\\(\\begin{aligned} T(n) &amp;= 2T\\left(\\frac{n}{2}\\right) + Cn \\\\[1.5ex] T(\\frac{n}{2}) &amp;= 2T(\\frac{n}{4}) + Cn \\\\[1.5ex] &amp;\\ \\, \\vdots \\\\ \\end{aligned}\\)\\)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-two","title":"Class Two","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_2","title":"\u6700\u5927\u548c\u8fde\u7eed\u5b50\u6570\u7ec4","text":"<ol> <li>\u66b4\u529b\u6cd5:O(n^3)</li> <li>\u66b4\u529b\u6cd5\u4f18\u5316:O(n^2) \u786e\u5b9a i \u540e,\u904d\u5386 j \u65f6\u5373\u5b8c\u6210\u6c42\u548c</li> </ol> C<pre><code>int MaxSum(int a[],int len) {\n    int nsum,maxsum;\n    maxsum=0;\n    for (int i=0;i&lt;len;i++) {\n        nsum=0;\n        for (int j=1;j&lt;len;j++) {\n            nsum+=a[j]; //j\u53f3\u79fb\u65f6\u52a0\n            if (nsum&gt;maxsum) maxsum=nsum;\n        }\n    }\n    return maxsum;\n}\n</code></pre> <ol> <li>\u641c\u7d22\u533a\u95f4+\u524d\u7f00\u548c:O(n^2)</li> <li>\u5206\u6cbb\u6cd5:O(nlogn) \u5206\u6210\u5de6\u534a\u8fb9,\u53f3\u534a\u8fb9,\u4e2d\u95f4</li> </ol> C<pre><code>int MaxSum(int l,int r) {\n    if (l==r) return a[l]; //\u8fd4\u56de\u6761\u4ef6\n\n    int mid=(l+r)&gt;&gt;1;\n    int max1=MaxSum(l,mid); //\u8ba1\u7b97\u5de6\u534a\u8fb9\n    int max2=MaxSUm(mid,r); //\u8ba1\u7b97\u53f3\u534a\u8fb9\n\n    int max3,lmax=0,rmax=0,sum=0;\n    for (int i=mid;i&gt;=l;i--) {\n        sum+=a[i];\n        lmax=max(lmax,sum);\n    }\n    sum=0;\n    for (int i=mid+a;i&lt;=r;i++) {\n        sum+=a[i];\n        ramx=max(ramx,sum);\n    }\n    max3=lmax+rmax;\n\n    return max(max1,max2,max3);\n}\n</code></pre> <ol> <li>\u7ebf\u6027 dp:O(n) \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:<code>dp[i]=max(dp[i-1]+a[i],a[i])</code></li> <li>\u626b\u63cf\u6cd5:O(n)</li> </ol> C<pre><code>int MaxSum() {\n    int res=-INF,sum=0;\n    for (int i=1;i&lt;=len;i++) {\n        if (sum&lt;0) sum=a[i];\n        else sum+=a[i];\n\n        res=max(res,sum);\n    }\n    return res;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_3","title":"\u94fe\u8868(\u7565)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw2","title":"HW2","text":"<p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient? A.doubly linked list B.singly linked circular list C.doubly linked circular list with a dummy head node D.sequential list \u8bbf\u95ee\u968f\u673a\u8282\u70b9:\u76f8\u540c \u6700\u540e\u4f4d\u7f6e:\u5faa\u73af\u94fe\u8868\u53ef\u901a\u8fc7\u865a\u62df\u5934\u7ed3\u70b9\u540e\u79fb\u4e00\u4f4d\u76f4\u63a5\u627e\u5230\u6700\u540e\u4e00\u4f4d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-three","title":"Class Three","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_4","title":"\u5f15\u8a00","text":"<ul> <li>Taylor \u5c55\u5f00\u672c\u8d28\u662f\u591a\u9879\u5f0f\u903c\u8fd1\u590d\u6742\u51fd\u6570,\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u4e5f\u662f\u903c\u8fd1,\u7528\u6570\u636e\u8bad\u7ec3\u6c42\u51fa\u6743\u91cd,\u5f97\u5230\u6570\u636e\u7ed3\u6784.</li> <li>\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784(\u5173\u7cfb).\u901a\u8fc7\u4e0d\u65ad\u6539\u8fdb\u6570\u636e\u7ed3\u6784,\u83b7\u5f97\u667a\u80fd.</li> <li>\u5747\u644a\u4ee3\u4ef7\u5206\u6790:\u5c06\u4ee3\u4ef7\u4e0e\u7ed3\u6784\u7ed3\u5408.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_5","title":"\u6709\u5e8f\u7684\u5e8f\u5217\u662f\u7ebf\u6027\u8868","text":"<p>\u591a\u9879\u5f0f(The Polynomial ADT)</p> <ul> <li>\u7528\u6570\u7ec4\u8868\u793a\u591a\u9879\u5f0f.\u4e3a\u4e86\u9632\u6b62\u7a00\u758f\u6570\u7ec4\u6d6a\u8d39\u7a7a\u95f4,\u53ea\u8868\u793a\u975e\u96f6\u9879.\u4f7f\u7528\u7ed3\u6784\u6570\u7ec4\u6216\u94fe\u8868.</li> </ul> <p>\u591a\u91cd\u7ebf\u6027\u8868</p> <ul> <li>e.g. \u8868\u793a\u5f88\u591a\u5b66\u751f\u9009\u51e0\u95e8\u8bfe.\u5217\u51fa\u5b66\u751f\u4e3a\u5217,\u8bfe\u7a0b\u4e3a\u884c\u7684\u7a00\u758f\u77e9\u9635.\u53ea\u8868\u793a\u9009\u7684\u8282\u70b9\u5e76\u6309\u7eb5\u5411,\u6a2a\u5411\u8fde\u6210\u94fe\u8868.</li> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u7eb5\u5411,\u6a2a\u5411\u4e24\u4e2a\u94fe\u8868\u4e2d.</li> </ul> <p>\u5185\u5b58\u7ba1\u7406</p> <ul> <li>\u600e\u4e48\u7ba1\u7a7a\u95f2\u4f4d\u7f6e?\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u600e\u4e48\u5206\u914d,\u91ca\u653e\u5185\u5b58.\u7528\u94fe\u8868\u7ba1\u7406</li> <li>\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u5206\u914d\u76f8\u5bf9\u4f4d\u7f6e(\u76f8\u5bf9\u5730\u5740),\u7b49\u4ee3\u7801\u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4(\u7edd\u5bf9\u5730\u5740)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_6","title":"\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b","text":"<ol> <li>\u7406\u60f3\u60c5\u51b5\u4e0b,\u7533\u8bf7\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u90fd\u76f8\u540c,\u5185\u5b58\u4e2d\u5229\u7528\u4e00\u5c0f\u5757\u4f5c\u4e3a\u6307\u9488\u8868\u793a\u5730\u5740,\u5c06\u4e0d\u540c\u5730\u5740\u4e32\u6210\u94fe\u8868,\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4.</li> <li>malloc \u7533\u8bf7\u7a7a\u95f4\u65f6,\u5206\u914d\u5934\u4e0a\u7684\u7a7a\u95f2\u7a7a\u95f4\u7684\u6307\u9488.\u4fee\u6539\u94fe\u8868,\u5c06\u5934\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e.</li> <li>free \u91ca\u653e\u7a7a\u95f4\u65f6,\u5c06\u91ca\u653e\u7684\u7a7a\u95f4\u8fde\u5230\u5934\u6307\u9488.</li> <li>\u4f7f\u7528\u65f6\u95f4\u957f\u540e,\u5185\u5b58\u7684\u94fe\u8868\u66f4\u65e0\u5e8f,\u4f46\u5934\u8282\u70b9\u59cb\u7ec8\u7ef4\u6301\u5934.</li> <li>\u5b9e\u9645\u60c5\u51b5\u4e2d,\u7533\u8bf7\u548c\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u4efb\u610f,\u6bcf\u4e2a\u8282\u70b9\u5927\u5c0f\u4e0d\u540c.\u6b64\u65f6\u6bcf\u4e2a\u8282\u70b9\u4e2d\u5305\u542b\u8fd9\u4e2a\u8282\u70b9\u5927\u5c0f,\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4\u4f4d\u7f6e,\u6807\u8bb0\u8be5\u7a7a\u95f4\u662f\u5426\u88ab\u5360\u7528\u7684\u6807\u8bb0 flag \u8fd9\u4e09\u4e2a\u4fe1\u606f.</li> <li>\u6bcf\u6b21\u7533\u8bf7\u65f6,\u5148\u770b\u8be5\u8282\u70b9\u5927\u5c0f\u662f\u5426\u6ee1\u8db3.\u82e5\u8282\u70b9\u5c0f,\u770b\u4e0b\u4e00\u4e2a\u8282\u70b9;\u82e5\u8282\u70b9\u6ee1\u8db3,\u4ece\u8be5\u8282\u70b9\u4e2d\u5207\u4e00\u5757.</li> <li>\u9632\u6b62\u591a\u6b21\u4f7f\u7528\u540e\u5185\u5b58\u788e\u7247\u5316,\u91ca\u653e\u5185\u5b58\u65f6\u5c3d\u91cf\u4f7f\u4e0b\u4e00\u5757\u6216\u4e0a\u4e00\u5757\u8fde\u7eed.\u6839\u636e\u8be5\u8282\u70b9\u5927\u5c0f\u627e\u5230\u4e0b\u4e00\u8282\u70b9,\u68c0\u67e5\u4e0b\u4e00\u8282\u70b9\u7684 flag.</li> <li>\u4e3a\u4e86\u80fd\u548c\u524d\u4e00\u8282\u70b9,\u9700\u8981\u5728\u8282\u70b9\u672b\u5c3e\u52a0 size,next,flag \u4fe1\u606f.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#the-stack-adt","title":"\u5806\u6808(The Stack ADT)","text":"<p>\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97</p> <ul> <li>\u6bcf\u6b21\u9047\u5230\u8fd0\u7b97\u7b26\u53f7,\u8ba1\u7b97\u524d\u4e24\u4e2a\u6570,\u5e76\u538b\u5165\u8ba1\u7b97\u7ed3\u679c.</li> <li>\u600e\u4e48\u628a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53d8\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f?</li> <li>\u9047\u5230\u6570,\u653e\u5165;\u9047\u5230\u7b26\u53f7,\u8bb0\u4f4f.\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u9ad8,\u9ad8\u7684\u51fa\u53bb;\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u4f4e,\u8bb0\u4f4f\u65b0\u7b26\u53f7;\u5982\u679c\u5df2\u6709\u7684\u548c\u65b0\u7684\u4f18\u5148\u7ea7\u4e00\u6837,\u5148\u8bfb\u5230\u7684\u51fa\u53bb.</li> <li>\u7531\u62ec\u53f7\u600e\u4e48\u529e?\u5c06\u62ec\u53f7\u89c6\u4e3a\u8fd0\u7b97.\u5de6\u62ec\u53f7\u4f18\u5148\u7ea7\u4f4e.\u9047\u5230\u53f3\u62ec\u53f7\u629b\u51fa\u4e4b\u524d\u7684\u7b26\u53f7,\u76f4\u5230\u5de6\u62ec\u53f7.</li> </ul> <p>\u5806\u6808\u4e0e\u51fd\u6570\u8c03\u7528</p> <ul> <li>\u8fde\u7eed\u591a\u6b21\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u6267\u884c\u540e\u56de\u7b54\u4e0a\u4e00\u4e2a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u5229\u7528\u5806\u6808:\u5148\u653e main \u51fd\u6570,\u518d\u6bcf\u6b21\u8c03\u7528\u4e00\u6b21\u538b\u5165\u51fd\u6570\u540d.\u6bcf\u6b21\u8fd4\u56de\u65f6\u6808\u9876\u7684\u51fd\u6570\u4e3a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u89e3\u51b3\u9012\u5f52\u8c03\u7528\u7684\u95ee\u9898.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#the-queue-adt","title":"\u961f\u5217(The Queue ADT)","text":"<ul> <li>\u7528\u94fe\u8868\u5b9e\u73b0\u65f6,front \u5220\u9664\u5143\u7d20,rear \u63d2\u5165\u5143\u7d20(front \u6307\u5411 next,\u5220\u9664\u540e\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u4e0b\u4e00\u4e2a).</li> <li>\u6307\u9488\u6307\u5411\u53f3,\u5219\u4ece\u53f3\u63d2\u5165,\u4ece\u5de6\u5220\u9664</li> <li>\u961f\u5217\u7a7a\u95f4\u7528\u6ee1\u540e\u600e\u4e48\u529e?\u5faa\u73af\u961f\u5217.</li> <li>\u5faa\u73af\u961f\u5217\u7a7a\u548c\u6ee1:front==rear+1(\u53d6\u4f59)</li> <li>\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u5224\u65ad?\u961f\u5217\u4e2d n \u4e2a\u4f4d\u7f6e,\u5171\u6709 n+1 \u4e2d\u60c5\u51b5,\u4f46 front \u548c rear \u7684\u72b6\u6001\u5171\u6709 n \u79cd(\u4fe1\u606f\u91cf\u4e0d\u591f)</li> <li>\u600e\u4e48\u589e\u52a0\u4fe1\u606f?\u52a0\u5165 tag,\u63d2\u5165\u65f6\u8bbe\u7f6e\u4e3a 1,\u5220\u9664\u65f6\u8bbe\u7f6e\u4e3a 0.\u65e0\u6cd5\u5224\u65ad\u65f6\u770b tag.</li> <li>\u6216\u8005\u4f7f\u961f\u5217\u72b6\u6001\u4e00\u5171 n \u79cd.\u7a7a\u65f6 rear+1==front,\u4e00\u4e2a\u5143\u7d20\u65f6 front==rear,\u6ee1\u65f6 front==rear+2.</li> <li>\u4e00\u822c\u4f7f\u7528 rear \u4e0d\u6307\u5b9e\u9645\u7684\u4f4d\u7f6e,\u800c\u662f\u6307\u4e0b\u4e00\u4e2a\u8981\u653e\u7684\u4f4d\u7f6e.\u7a7a:<code>front\\==rear</code>,\u6ee1:<code>front\\==rear+1</code>.</li> <li>\u6216\u8005 front \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e(\u54d1\u5934),\u7a7a:front==rear,\u6ee1:front==rear+1.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-four","title":"Class Four","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_7","title":"\u535a\u5f08\u6811","text":"<ul> <li>\u7528\u6811\u89e3\u51b3\u96f6\u548c\u535a\u5f08\u7684\u95ee\u9898(e.g.\u68cb\u7c7b)</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8868\u793a\u4e0b\u4e00\u6b65\u6240\u6709\u53ef\u80fd\u7684\u8d70\u6cd5,\u4f7f\u7528 minmax \u7b97\u6cd5\u548c\\(\\alpha\\beta\\)\u526a\u679d</li> <li>\u6838\u5fc3 1:\u8bc4\u4f30\u6bcf\u4e2a\u8282\u70b9.AlphaGo:\u6839\u636e\u4e4b\u524d\u4eba\u7c7b\u68cb\u8c31\u5b66\u4e60,\u8ba1\u7b97\u5404\u79cd\u68cb\u5c40\u83b7\u80dc\u6982\u7387(\u6536\u76ca)</li> <li>\u6838\u5fc3 2:\u81ea\u5df1\u5c42\u53d6 max,\u5bf9\u624b\u5c42\u53d6 min</li> <li>\u5bf9\u56f4\u68cb\u800c\u8a00 minmax \u8ba1\u7b97\u91cf\u592a\u5927,\u5229\u7528\u8499\u7279\u5361\u6d1b\u6309\u6982\u7387\u9009\u62e9\u65b9\u5411</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_8","title":"\u6811\u7684\u6982\u5ff5","text":"<ul> <li>\u6811\u548c\u56fe\u7684\u533a\u522b:\u6811\u4e00\u5b9a\u8fde\u901a,\u6ca1\u6709\u56de\u8def.</li> <li>\u5bf9\u4e8e\u56fe\u800c\u8a00,\u8fde\u901a,\u6ca1\u56de\u8def,n \u4e2a\u70b9 n-1 \u6761\u8fb9,\u8fd9\u4e09\u4e2a\u6761\u4ef6\u77e5\u4e8c\u63a8\u4e00</li> <li>\u68ee\u6797:\u6811\u7684\u96c6\u5408</li> <li>degree of tree:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u4e2a\u513f\u5b50;degree of graph:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u6761\u51fa\u8fb9</li> <li>\u6811\u4e0a\u4efb\u4f55\u4e24\u70b9\u4e4b\u95f4\u7684 path \u4e00\u5b9a\u552f\u4e00</li> <li>depth:\u8be5\u70b9\u5230\u6839\u7684\u8ddd\u79bb</li> <li>height:\u8be5\u70b9\u5230\u6700\u4f4e\u70b9\u7684\u8ddd\u79bb</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_9","title":"\u6811\u7684\u5b9e\u73b0","text":"<ul> <li>\u7528\u94fe\u8868,\u600e\u4e48\u89e3\u51b3\u6bcf\u4e2a\u8282\u70b9\u513f\u5b50\u6570\u4e0d\u786e\u5b9a\u7684\u95ee\u9898?\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u4ec5\u6709 FirstChild,NextSibling \u4e24\u4e2a\u6307\u9488</li> <li>\u8fd9\u6837\u7684\u6811\u5373\u5316\u4e3a\u4e8c\u53c9\u6811</li> <li>\u5229\u7528\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6784\u5efa\u6811\uff1a</li> <li>\u8bfb\u5165\u6570,\u5b58\u50a8\u6307\u9488</li> <li>\u8bfb\u5165\u7b26\u53f7,\u629b\u51fa\u4e24\u4e2a\u6570,\u5c06\u7b26\u53f7\u7684\u6307\u9488\u538b\u5165,\u629b\u51fa\u7684\u6570\u4f5c\u4e3a\u8be5\u7b26\u53f7\u7684\u513f\u5b50</li> <li>\u8868\u8fbe\u5f0f\u524d\u5e8f\u904d\u5386\u5f97\u5230\u524d\u5e8f\u8868\u8fbe\u5f0f\uff0c\u540e\u5e8f\u904d\u5386\u5f97\u5230\u540e\u5e8f\u8868\u8fbe\u5f0f</li> <li>\u904d\u5386\u7684\u672c\u8d28:\u5c06\u4e8c\u7ef4\u7ed3\u6784\u53d8\u6210\u4e00\u7ef4\u7684\u5e8f\u5217</li> <li>\u7ebf\u7d22\u6811:\u6839\u8282\u70b9\u548c\u53f6\u8282\u70b9\u6d6a\u8d39\u7684\u6307\u9488\u6307\u5411\u904d\u5386\u65f6\u7684\u524d\u4e00\u4e2a\u70b9\u548c\u540e\u4e00\u4e2a\u70b9.\u9700\u8981\u6807\u8bb0\u662f\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fd8\u662f\u6839\u6216\u53f6\u7684\u6307\u9488.\u6bcf\u6b21\u5224\u65ad\u662f\u4e0d\u662f\u7ebf\u7d22.</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u53ef\u589e\u52a0\u54d1\u5934\u8282\u70b9.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw4","title":"HW4","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_10","title":"\u4e8c\u53c9\u6811\u6982\u5ff5","text":"<ul> <li>\u6811\u7684\u5ea6\uff1a\u4e00\u4e2a\u8282\u70b9\u6709 m \u4e2a\u5206\u53c9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u5c31\u4e3a m\u3002\u53f6\u5b50\u8282\u70b9\u7684\u5ea6\u4e3a 0\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5206\u53c9\u3002\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u5ea6\u53ea\u6709 0\uff0c1\uff0c2 \u8fd9\u4e09\u79cd\uff0c\u5176\u4e2d\u4e3a 0 \u7684\u80af\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\uff1amax(\u5de6\u5b50\u6811\u6df1\u5ea6\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6)+1\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u5206\u7c7b</li> <li>\u6ee1\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u4e14\u6709\u4e2a\\(2^k-1\\)\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u6ee1\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u7684\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3a i\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811(AVL \u6811)\uff1a\u5b83\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28</li> <li>\u5728\u4e8c\u53c9\u6811\u4e0a\u7684\u7b2c i \u5c42\u4e0a\u81f3\u591a\u6709\\(2^{i-1}\\)\u4e2a\u8282\u70b9(i&gt;=1)</li> <li>\u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u81f3\u591a\u6709\\(2^k-1\\)\u4e2a\u8282\u70b9(k &gt;= 1)</li> <li>\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u6761\u6027\u8d28\uff1an0\u3001n1\u3001n2 \u5206\u522b\u4ee3\u8868\u5ea6\u6570\u4e3a 0\u30011\u30012 \u7684\u8282\u70b9\u603b\u6570\u3002n \u4e3a\u603b\u7ed3\u70b9\u6570\uff0c\u5219\u6709\uff1a     n=\u6240\u6709\u8282\u70b9\u5ea6\u4e4b\u548c+1 (\u6240\u6709\u6811\u7684\u6027\u8d28)     \\(n_0=n_2+1;\\) (\u6ee1\u4e8c\u53c9\u6811\\(n_0=2^k,n_2=2^k-1\\),\u975e\u6ee1\u4e8c\u53c9\u6811\\(n_0,n_2\\)\u540c\u65f6\u51cf\u5c0f)     \\(n=n_0+n_1+n_2;\\) \\(\u5206\u652f\u603b\u7ebf=n-1=n_1+2n_2;\\) (\u8fde\u901a\u65e0\u56de\u8def\u56fe\u7684\u8fb9\u4e3a n-1\uff0c\u5c06 n0 \u7528 n2 \u4ee3\u5165)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_11","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ol> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> </li> <li> <p>\u5bf9\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6309\u7167\u67d0\u79cd\u904d\u5386\u65b9\u5f0f\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u53eb\u4f5c\u7ebf\u7d22\u5316\uff0c\u88ab\u7ebf\u7d22\u5316\u4e86\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u7ebf\u7d22\u4e8c\u53c9\u6811(Threaded binary tree)\u3002</p> </li> <li> <p>\u5f15\u5165\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u76ee\u7684\u662f\uff1a\u52a0\u5feb\u67e5\u627e\u7ed3\u70b9\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u6784\u9020</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784\uff1alchild ltag data rtag rchild</p> </li> <li>ltag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u5de6\u513f\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u524d\u9a71.rtag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u53f3\u5b69\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u540e\u7ee7.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-five","title":"Class Five","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_12","title":"\u524d\u5e8f,\u4e2d\u5e8f,\u540e\u5e8f\u548c\u6808","text":"<ul> <li>\u524d\u5e8f,\u4e2d\u5e8f\u63a8\u540e\u5e8f:\u524d\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u4e2d\u5e8f,\u540e\u5e8f\u63a8\u524d\u5e8f:\u540e\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u524d\u5e8f,\u540e\u5e8f\u63a8\u4e2d\u5e8f:\u4e0d\u80fd\u5b9e\u73b0,\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u5b50\u6811\u5728\u5de6\u8fd8\u662f\u5728\u53f3.</li> <li>e.g. \u524d\u5e8f AB,\u540e\u5e8f BA</li> <li>\u6811\u7684\u5806\u6808\u64cd\u4f5c:\u4e00\u76f4\u5411\u5de6 push \u5230\u5e95,\u5230\u53f6\u8282\u70b9\u65f6 pop \u4e00\u4e2a\u5143\u7d20,\u518d\u4ece pop \u51fa\u7684\u5143\u7d20\u5f00\u59cb\u5411\u53f3\u8d70.</li> <li>\u6808\u63a8\u524d\u5e8f:push \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u4e2d\u5e8f:pop \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u540e\u5e8f:</li> <li>\u7b2c\u4e00\u4e2a push \u7684\u662f\u6839.</li> <li>\u540e\u9762 push \u7684\u5143\u7d20,\u5982\u679c\u524d\u4e00\u4e2a\u662f push,\u5219\u662f\u5de6\u513f\u5b50;\u5982\u679c\u524d\u4e00\u4e2a\u662f pop,\u5219\u662f pop \u51fa\u5143\u7d20\u7684\u53f3\u513f\u5b50</li> <li>\u6811\u548c\u6808</li> <li>\u6bcf\u4e2a\u5408\u6cd5\u7684\u5806\u6808\u64cd\u4f5c\u5e8f\u5217,\u90fd\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u6811.</li> <li>m \u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811,\u5171\u6709 Catalan(n)\u79cd.\\(C_n=\\sum\\limits_{i=0}^{n-1}C_iC_{n-i-1}\\)</li> <li>Catalan \u6570\u9012\u63a8:m \u4e2a\u8282\u70b9\u5de6\u53f3\u5206\u914d</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_13","title":"\u51e0\u79cd\u7279\u6b8a\u7684\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#skewed-binary-trees","title":"Skewed Binary Trees \u504f\u659c\u4e8c\u53c9\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#complete-binary-trees","title":"Complete Binary Trees \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<ul> <li>\u4f18\u70b9:\u80fd\u7528\u6570\u7ec4\u5b58\u50a8</li> <li>\u7b2c k \u5c42,\u8fd9\u4e00\u5c42\u6700\u591a\u8282\u70b9\u6570\u4e3a\\(2^{k-1}\\),\u6240\u6709\u5c42\u6700\u591a\u8282\u70b9\u6570\\(2_k-1\\)</li> <li>\\(n_0=n_2+1\\)   Pf:\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n0+n1+n2;\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n1+2n2.\u8054\u7acb\u4e24\u5f0f\u5f97\u5230.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#binary-search-trees","title":"Binary Search Trees \u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u5de6\u5b50\u6811\u5747\u6bd4\u5176\u5c0f,\u53f3\u5b50\u6811\u90fd\u6bd4\u5176\u5927.</p> <ul> <li>find:\u6bcf\u6b21\u5411\u5de6\u6216\u5411\u53f3\u67e5\u627e   \u4f7f\u7528\u5c3e\u9012\u5f52\u5b9e\u73b0.\u6240\u6709\u5c3e\u9012\u5f52\u90fd\u80fd\u5316\u6210\u5faa\u73af.</li> <li>insert:\u5148\u5411\u5de6\u6216\u5411\u53f3\u627e\u5230\u5408\u9002\u4f4d\u7f6e,\u8d70\u5230 NULL \u65f6 malloc \u5185\u5b58,\u5c06 NULL \u53d8\u4e3a\u8282\u70b9.</li> <li>delete:</li> <li>\u6ca1\u6709\u513f\u5b50\u6216\u53ea\u6709 1 \u4e2a\u513f\u5b50:\u76f4\u63a5\u5220\u9664</li> <li>\u6709 2 \u4e2a\u513f\u5b50:\u4ece\u5de6\u5b50\u6811\u627e\u6700\u5927\u503c(\u6216\u53f3\u5b50\u6811\u627e\u6700\u5c0f\u503c),\u66ff\u6362\u8981\u5220\u9664\u7684\u8282\u70b9,\u518d\u5728\u5de6(\u6216\u53f3)\u5b50\u6811\u79cd\u5220\u9664\u76f8\u5e94\u503c.      PS:\u6bcf\u6b21\u5220\u9664\u64cd\u4f5c\u591a,\u53ef\u4f7f\u7528\u61d2\u6807\u8bb0(lazy tag).</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_14","title":"\u5e73\u8861\u6811","text":"<p>\u51e0\u79cd\u51b3\u5b9a\u662f\u5426\u5e73\u8861\u7684\u6307\u6807:</p> <ol> <li>AVL \u6811(\u5e73\u8861\u6811)    \u7531\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u51b3\u5b9a.\u4efb\u610f\u8282\u70b9,\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u76f8\u5dee\u4e3a 0 \u6216 1,\u8ba4\u4e3a\u6811\u5e73\u8861.</li> <li>\u7ea2\u9ed1\u6811    \u5c06\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u6216\u9ed1.\u4efb\u610f\u5206\u652f\u6ee1\u8db3: 1. \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e3a\u7ea2 2. \u7ea2\u8282\u70b9\u6570\u76f8\u540c 3. \u9ed1\u8282\u70b9\u4e0d\u76f8\u90bb    \u5219\u8ba4\u4e3a\u8be5\u6811\u5e73\u8861.    \u5e73\u8861\u7684\u7ea2\u9ed1\u6811\u6700\u957f\u5206\u652f\u548c\u6700\u77ed\u5206\u652f\u6700\u591a\u76f8\u5dee 1 \u500d.</li> <li>B+\u6811    \u6ee1\u8db3\u6240\u6709\u5206\u652f\u8282\u70b9\u6570\u6700\u591a\u4e3a m,\u6700\u5c11\u4e3a m/2,\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u6811,\u8ba4\u4e3a\u5e73\u8861.    B+\u6811\u5e94\u7528\u4e8e\u6570\u636e\u5e93\u7ba1\u7406.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_15","title":"\u4e00\u4e9b\u5224\u65ad\u9898","text":"<p>\uff08\u7c98\u8d34\u81ea csdn\uff0c\u4e0d\u786e\u4fdd\u6b63\u786e\uff09</p> <p>1-1 \u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F 1-2 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F 1-3 \u6570\u636e\u7ed3\u6784\u6982\u5ff5\u5305\u62ec\u6570\u636e\u4e4b\u95f4\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u6570\u636e\u7684\u8fd0\u7b97\u4e09\u4e2a\u65b9\u9762\u3002T 1-4 \u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u7c7b\u578b\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u636e\u9879\u6784\u6210\u3002T 1-5 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u8bf4\u660e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5b83\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u7ed3\u6784\u3002F 1-6 2N \u548c N \u5177\u6709\u76f8\u540c\u7684\u589e\u957f\u901f\u5ea6\u3002F 1-7 \u7b97\u6cd5\u5206\u6790\u7684\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002T 1-8 n! is O(n^n).T 1-9 O(N2) is the same as O(1+2+3+\u22ef+N).T 1-10 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002T 1-11 \u82e5\u67d0\u7ebf\u6027\u8868\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5b58\u53d6\u4efb\u4e00\u6307\u5b9a\u5e8f\u53f7\u7684\u5143\u7d20\u548c\u5728\u6700\u540e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u8fd0\u7b97\uff0c\u5219\u5229\u7528\u987a\u5e8f\u8868\u5b58\u50a8\u6700\u8282\u7701\u65f6\u95f4\u3002T 1-12 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u63d2\u5165\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-13 (neuDS)\u5728\u987a\u5e8f\u8868\u4e2d\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5176\u5bf9\u5e94\u7684\u7269\u7406\u4f4d\u7f6e\u4e5f\u662f\u76f8\u90bb\u7684\u3002T 1-14 (neuDS)\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T 1-15 (neuDS)\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\u3002F 1-16 (neuDS)\u5728\u987a\u5e8f\u8868\u4e0a\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u65f6\u9700\u8981\u79fb\u52a8\u5143\u7d20\u7684\u4e2a\u6570\u4e0e\u5f85\u63d2\u5165\u6216\u5f85\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\u65e0\u5173\u3002F 1-17 (neuDS)\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f\u53ea\u80fd\u7528\u4e8e\u5b58\u50a8\u7ebf\u6027\u7ed3\u6784\u3002F 1-18 \u5728\u5177\u6709 N \u4e2a\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-19 \u82e5\u7528\u94fe\u8868\u6765\u8868\u793a\u4e00\u4e2a\u7ebf\u6027\u8868\uff0c\u5219\u8868\u4e2d\u5143\u7d20\u7684\u5730\u5740\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002F 1-20 \u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F 1-21 \u901a\u8fc7\u5bf9\u5806\u6808 S \u64cd\u4f5c\uff1aPush(S,1), Push(S,2), Pop(S), Push(S,3), Pop(S), Pop(S)\u3002\u8f93\u51fa\u7684\u5e8f\u5217\u4e3a\uff1a123\u3002F 1-22 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\uff0c\u8f93\u51fa\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f i\uff0c\u5219\u7b2c j \u4e2a\u8f93\u51fa\u5143\u7d20\u662f j\u2212i\u22121\u3002F 1-23 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a{1, 2, 3, 4, 5}\uff0c\u5219\u4e0d\u53ef\u80fd\u5f97\u5230{3, 4, 1, 2, 5}\u8fd9\u6837\u7684\u51fa\u6808\u5e8f\u5217\u3002T 1-24 \u6808\u548c\u961f\u5217\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u65e2\u53ef\u4ee5\u662f\u987a\u5e8f\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u94fe\u5f0f\u65b9\u5f0f\u3002T 1-25 \u6808\u5e95\u5143\u7d20\u662f\u4e0d\u80fd\u5220\u9664\u7684\u5143\u7d20\u3002F 1-26 \u987a\u5e8f\u6808\u4e2d\u5143\u7d20\u503c\u7684\u5927\u5c0f\u662f\u6709\u5e8f\u7684\u3002F 1-27 \u5728 n \u4e2a\u5143\u7d20\u8fde\u7eed\u8fdb\u6808\u4ee5\u540e\uff0c\u5b83\u4eec\u7684\u51fa\u6808\u987a\u5e8f\u548c\u8fdb\u6808\u987a\u5e8f\u4e00\u5b9a\u6b63\u597d\u76f8\u53cd\u3002T 1-28 \u6808\u9876\u5143\u7d20\u548c\u6808\u5e95\u5143\u7d20\u6709\u53ef\u80fd\u662f\u518b\u4e00\u4e2a\u5143\u7d20\u3002T 1-29 \u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u5728\u8868\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u3002 T 1-30 \u94fe\u6808\u7684\u63d2\u5165\u5728\u6808\u9876\uff0c\u5220\u9664\u5728\u6808\u5e95\u3002F 1-31 \u6240\u8c13\u201c\u5faa\u73af\u961f\u5217\u201d\u662f\u6307\u7528\u5355\u5411\u5faa\u73af\u94fe\u8868\u6216\u8005\u5faa\u73af\u6570\u7ec4\u8868\u793a\u7684\u961f\u5217\u3002F 1-32 \u5728\u7528\u6570\u7ec4\u8868\u793a\u7684\u5faa\u73af\u961f\u5217\u4e2d\uff0cfront \u503c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e rear \u503c\u3002F 1-33 \u5faa\u73af\u961f\u5217\u6267\u884c\u51fa\u961f\u64cd\u4f5c\u65f6\u4f1a\u5f15\u8d77\u5927\u91cf\u5143\u7d20\u7684\u79fb\u52a8\u3002F 1-34 \u961f\u5217\u4e2d\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u53eb\u961f\u5934\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u53eb\u961f\u5c3e\u3002 F 1-35 \u961f\u5217\u7ed3\u6784\u7684\u987a\u5e8f\u5b58\u50a8\u4f1a\u4ea7\u751f\u5047\u6ea2\u51fa\u73b0\u8c61\u3002 T 1-36 \u4e8c\u53c9\u6811\u901a\u5e38\u6709\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002T 1-37 \u5728\u542b\u6709 n \u4e2a\u7ed3\u70b9\u7684\u6811\u4e2d\uff0c\u8fb9\u6570\u53ea\u80fd\u662f n-1 \u6761\u3002T 1-38 \u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u82e5\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5b83\u5fc5\u662f\u6811\u53f6\u3002T 1-39 \u4e00\u68f5\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7528\u81ea\u7136\u6570\u4f9d\u6b21\u7f16\u53f7\uff0c\u5219\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a 2i(2i&lt; n),\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u662f 2i+1(2i+1&lt; n)\u3002F 1-40 \u7528\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u5bfc\u51fa\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002F\uff1f 1-41 \u4e8c\u53c9\u6811\u53ea\u80fd\u7528\u4e8c\u53c9\u94fe\u8868\u8868\u793a\u3002F 1-42 \u6811\u5f62\u7ed3\u6784\u4e2d\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb\u3002T 1-43 \u5ea6\u4e3a\u4e8c\u7684\u6811\u5c31\u662f\u4e8c\u53c9\u6811\u3002F \u4e8c\u53c9\u6811\u8fd8\u8981\u6709\u533a\u5206\u5de6\u53f3\u513f\u5b50\u7684\u987a\u5e8f 1-44 \u67d0\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002T 1-45 \u67d0\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002F 1-46 \u4e00\u68f5\u6709 124 \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u53f6\u7ed3\u70b9\u4e2a\u6570\u662f\u786e\u5b9a\u7684\u3002T 1-47 \u4efb\u4f55\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u540c\u4e00\u5c42\u7684\u7ed3\u70b9\u4ece\u5de6\u5230\u53f3\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-48 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u67e5\u627e\u548c\u6298\u534a\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\u3002F 1-49 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002F 1-50 \u82e5\u4e00\u641c\u7d22\u6811\uff08\u67e5\u627e\u6811\uff09\u662f\u4e00\u4e2a\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5219\u8be5\u6811\u7684\u6700\u5927\u503c\u4e00\u5b9a\u5728\u53f6\u7ed3\u70b9\u4e0a F 1-51 N \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u6709\u591a\u79cd\uff0c\u5176\u4e2d\u6811\u9ad8\u6700\u5c0f\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u6700\u4f73\u7684\u3002 T \u6839\u8282\u70b9\u9009\u53d6\u4e0d\u540c\uff0cBST \u4e0d\u540c 1-52 \u4e2d\u6839\u904d\u5386\u4e8c\u53c9\u67e5\u627e\u6811\u6240\u5f97\u5e8f\u5217\u4e00\u5b9a\u662f\u6709\u5e8f\u5e8f\u5217\u3002T 1-53 \u5728\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u90fd\u6bd4\u5de6\u5b69\u5b50\u5173\u952e\u5b57\u5927\uff0c\u6bd4\u53f3\u5b69\u5b50\u5173\u952e\u5b57\u5c0f\u3002T 1-54 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u67e5\u627e\u6548\u7387\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u9ad9\u5ea6\u6709\u5173\u3002T 1-55 \u4efb\u4f55\u6700\u5c0f\u5806\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002F 1-56 \u4efb\u4f55\u6700\u5c0f\u5806\u4e2d\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u4e00\u53f6\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-57 \u5bf9 N\uff08\u22652\uff09\u4e2a\u6743\u503c\u5747\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6784\u9020\u54c8\u592b\u66fc\u6811\uff0c\u5219\u6811\u4e2d\u4efb\u4e00\u975e\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u4e0b\u4e00\u5c42\u4efb\u4e00\u7ed3\u70b9\u7684\u6743\u503c\u3002T 1-58 \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u6700\u4f18\u7684\u524d\u7f00\u7801\u3002\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u96c6\u53ca\u5176\u5b57\u7b26\u9891\u7387\uff0c\u5176\u54c8\u592b\u66fc\u7f16\u7801\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002F \u591a\u4e2a\u5b57\u7b26\u9891\u7387\u76f8\u540c\u65f6\uff0c\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\u53ef\u4ea4\u6362\uff0c\u53ef\u80fd\u5bfc\u81f4\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e0d\u552f\u4e00 1-59 \u54c8\u592b\u66fc\u6811\u662f\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u6811\uff0c\u8def\u5f84\u4e0a\u6743\u503c\u8f83\u5927\u7684\u7ed3\u70b9\u79bb\u6839\u8f83\u8fd1\u3002F\uff1f 1-60 \u65e0\u5411\u8fde\u901a\u56fe\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e4b\u548c\u4e3a\u5076\u6570\u3002T 1-61 \u65e0\u5411\u8fde\u901a\u56fe\u8fb9\u6570\u4e00\u5b9a\u5927\u4e8e\u9876\u70b9\u4e2a\u6570\u51cf 1\u3002F \u53ef\u4ee5\u7b49\u4e8e 1-62 \u7528\u90bb\u63a5\u8868\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002F 1-63 \u7528\u90bb\u63a5\u77e9\u9635\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002T 1-64 \u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u8fb9\u4e4b\u548c\u7684 2 \u500d\u3002T 1-65 \u5728\u4efb\u4e00\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u4e4b\u548c\u3002T 1-66 \u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u5806\u6808\u5b9e\u73b0\u3002F 1-67 \u5982\u679c\u65e0\u5411\u56fe G \u5fc5\u987b\u8fdb\u884c\u4e24\u6b21\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u624d\u80fd\u8bbf\u95ee\u5176\u6240\u6709\u9876\u70b9\uff0c\u5219 G \u4e2d\u4e00\u5b9a\u6709\u56de\u8def\u3002F 1-68 \u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56fe\uff0c\u5176\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u3002F 1-69 \u82e5\u6709\u5411\u56fe\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u5373\u4f7f\u4e0d\u7528\u8bbf\u95ee\u6807\u5fd7\u4f4d\u540c\u4e00\u7ed3\u70b9\u4e5f\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u4e24\u6b21\u3002F 1-70 \u5728\u4e00\u4e2a\u6709\u6743\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5 b \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u662f 12\uff0c\u4e14 c \u5230 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u4e3a 2 \u7684\u8fb9\uff0c\u5219 c \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u5c0f\u4e8e 10\u3002T 1-71 P \u662f\u9876\u70b9 S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c\u8be5\u56fe\u4e2d\u7684\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u90fd\u52a0 1\uff0cP \u4ecd\u7136\u662f S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\u3002F 1-72 \u5bf9\u4e8e\u5e26\u6743\u65e0\u5411\u56fe G = (V, E)\uff0cM \u662f G \u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219 M \u4e2d\u4efb\u610f\u4e24\u70b9 V1 \u5230 V2 \u7684\u8def\u5f84\u4e00\u5b9a\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002F 1-73 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u5f52\u5e76\u8d9f\u6570\u7684\u6570\u91cf\u7ea7\u662f O(NlogN)\u3002F 1-74 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u9700\u8981\u7684\u989d\u5916\u7a7a\u95f4\u4e3a O(N)\u3002F 1-75 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff0c\u6bd4\u8f83\u6b21\u6570\u548c\u79fb\u52a8\u6b21\u6570\u5206\u522b\u4e3a O(N2)\u548c O(N)\u3002T 1-76 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(NlogN)\u3002F 1-77 \u5e0c\u5c14\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-78 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-79 \u8981\u4ece 50 \u4e2a\u952e\u503c\u4e2d\u627e\u51fa\u6700\u5927\u7684 3 \u4e2a\u503c\uff0c\u9009\u62e9\u6392\u5e8f\u6bd4\u5806\u6392\u5e8f\u5feb\u3002T 1-80 \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u6216\u8005\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u6b21\u5e73\u65b9\u7ea7 O(N * logN)\uff0c\u5219\u8be5\u6392\u5e8f\u7b97\u6cd5\u4e00\u5b9a\u662f\u4e0d\u7a33\u5b9a\u7684\u3002F 1-81 \u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u82e5\u8981\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u9700\u8981\u5efa\u7acb\u5927\u6839\u5806\u3002T 1-82 \u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u5806\u3002T 1-83 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002F 1-84 \u5185\u6392\u5e8f\u8981\u6c42\u6570\u636e\u4e00\u5b9a\u8981\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8\u3002F 1-85 \u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u662f\u6307\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u6bd4\u8f83\u6b21\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e14\u7b97\u6cd5\u80fd\u591f\u7ec8\u6b62\u3002F 1-86 \u5f53\u5f85\u6392\u5e8f\u8bb0\u5f55\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u6216\u8005\u5df2\u7ecf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u65f6\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u6700\u7701\u3002F 1-87 \u5feb\u901f\u6392\u5e8f\u7684\u901f\u5ea6\u5728\u6240\u6709\u6392\u5e8f\u65b9\u6cd5\u4e2d\u4e3a\u6700\u5feb\uff0c\u800c\u4e14\u6240\u9700\u9644\u52a0\u7a7a\u95f4\u4e5f\u6700\u5c11\u3002F 1-88 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-89 \u5feb\u901f\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-90 \u7528\u5e0c\u5c14(shell)\u65b9\u6cd5\u6392\u5e8f\u65f6\uff0c\u82e5\u5173\u952e\u5b57\u7684\u521d\u59cb\u6392\u5e8f\u6742\u4e71\u65e0\u5e8f\uff0c\u5219\u6392\u5e8f\u6548\u7387\u5c31\u4f4e\u3002F 1-91 \u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n2)\uff0c\u4e0d\u53d7\u6570\u636e\u521d\u59cb\u6392\u5217\u7684\u5f71\u54cd\u3002T 1-92 \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(n2)\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(nlog2n)\uff0c\u6240\u4ee5\u5feb\u901f\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u6548\u7387\u597d\u3002F 1-93 \uff08101,88,46,70,34,39,45,58,66,10\uff09\u662f\u5806\u3002T 1-94 \u6709\u4e00\u5927\u6839\u5806\uff0c\u5806\u4e2d\u4efb\u610f\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u5747\u5927\u4e8e\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u5173\u952e\u5b57\uff0c\u5219\u5176\u5177\u6709\u6700\u5c0f\u503c\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5e76\u53ef\u80fd\u5728\u5806\u7684\u6700\u540e\u4e24\u5c42\u4e2d\u3002T 1-95 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5f52\u5e76\u6392\u5e8f\u90fd\u6bd4\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u5feb\u3002F 1-96 \u5728\u6563\u5217\u8868\u4e2d\uff0c\u6240\u8c13\u540c\u4e49\u8bcd\u5c31\u662f\u88ab\u4e0d\u540c\u6563\u5217\u51fd\u6570\u6620\u5c04\u5230\u540c\u4e00\u5730\u5740\u7684\u4e24\u4e2a\u5143\u7d20\u3002F 1-97 \u5c06 M \u4e2a\u5143\u7d20\u5b58\u5165\u7528\u957f\u5ea6\u4e3a S \u7684\u6570\u7ec4\u8868\u793a\u7684\u6563\u5217\u8868\uff0c\u5219\u8be5\u8868\u7684\u88c5\u586b\u56e0\u5b50\u4e3a M/S\u3002T 1-98 \u5728\u6563\u5217\u4e2d\uff0c\u51fd\u6570\u201c\u63d2\u5165\u201d\u548c\u201c\u67e5\u627e\u201d\u5177\u6709\u540c\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002T 1-99 \u5373\u4f7f\u628a 2 \u4e2a\u5143\u7d20\u6563\u5217\u5230\u6709 100 \u4e2a\u5355\u5143\u7684\u8868\u4e2d\uff0c\u4ecd\u7136\u6709\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002T 1-100 \u5c06 10 \u4e2a\u5143\u7d20\u6563\u5217\u5230 100 000 \u4e2a\u5355\u5143\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002F</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw","title":"HW \u603b\u7ed3","text":"<p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The time complexity of the function which calculates \\(F_N\\) recursively is \\(\\Theta(N!)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\\( T(N)=T(N-1)+T(N-2)+O(1)\\),\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(\\phi^n)\\).</p> <p>The Fibonacci number sequence \\(\\{F*N\\}\\) is defined as: \\(F_0 = 0\\), \\(F_1 = 1\\), \\(F_N = F*{N-1} + F\\_{N-2}\\), \\(N=2, 3, ...\\) The space complexity of the function which calculates \\(F_N\\) recursively is:</p> <ul> <li>[ ] A. \\(O(\\log N)\\)</li> <li>[x] B. \\(O(N)\\)</li> <li>[ ] C. \\(O(F_N)\\)</li> <li>[ ] D. \\(O(N!)\\)</li> </ul> <p>\u6bcf\u4e2a\\(F(N)\\)\u867d\u7136\u5728\u4e0d\u540c\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4ea7\u751f,\u4f46\u662f\u5b58\u50a8\u5728\u7edf\u4e00\u7a7a\u95f4,\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\).</p> <p>For a sequentially stored linear list of length \\(N\\), the time complexities for deleting the first element and inserting the last element are \\(O(1)\\) and \\(O(N)\\), respectively.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u901a\u5e38\u6307\u7684\u662f\u6570\u7ec4\uff08Array\uff09\u6216\u987a\u5e8f\u8868\uff08Sequential List\uff09\uff0c\u5176\u7279\u70b9\u662f\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u4e14\u5fc5\u987b\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u3002 \u5220\u9664\u7b2c\u4e00\u4e2a\u540e\uff0c\u540e\u9762\u7684\u6240\u6709\u5143\u7d20\u90fd\u9700\u8981\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u4ee5\u586b\u8865\u7a7a\u7f3a\uff0c\u65f6\u95f4\u4e3a\\(O(N)\\). \u5982\u679c\u6570\u7ec4\u7a7a\u95f4\u8db3\u591f\uff08\u672a\u6ee1\uff09\uff0c\u76f4\u63a5\u5728 A[N] \u7684\u4f4d\u7f6e\u5199\u5165\u65b0\u5143\u7d20\uff0c\u65e0\u9700\u79fb\u52a8\u5176\u4ed6\u5143\u7d20,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\).</p> <p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient?</p> <ul> <li>[ ] A. doubly linked list</li> <li>[ ] B. singly linked circular list</li> <li>[ ] C. doubly linked circular list with a dummy head node</li> <li>[x] D. sequential list</li> </ul> <p>\u94fe\u8868\u4e0d\u80fd\u5feb\u901f\u968f\u673a\u8bbf\u95ee \u800c\u63d2\u5165\u5220\u9664\u53ea\u9700\u8981\u5bf9\u672b\u5c3e\u8fdb\u884c,\u7ebf\u6027\u8868\u64cd\u4f5c\u65f6\u4e0d\u7528\u79fb\u52a8\u5176\u4ed6\u4f4d.</p> <p>It is always possible to represent a tree by a one-dimensional integer array.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u6811\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u7528\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u4e00\u7ef4\u6570\u7ec4\uff09\u8868\u793a\u3002\u5e38\u89c1\u7684\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u6811\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ol> <li>\u7236\u8282\u70b9\u8868\u793a\u6cd5\uff1a\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7d22\u5f15\u3002</li> <li>\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\uff1a\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5144\u5f1f\u3002\uff08\u8fd9\u91cc\u8981\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e0d\u7b26\u5408\uff09</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u8868\u793a\uff1a\u8865\u5168\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u7ec4\u6309\u5c42\u7ea7\u987a\u5e8f\u5b58\u50a8\u3002</li> </ol> <p>\u5173\u952e\u5728\u4e8e\u5b58\u50a8\u7684\u4e0d\u662f\u8282\u70b9\u7684\u6570\u503c\uff0c\u800c\u662f\u8282\u70b9\u7684\u7f16\u53f7\u3002</p> <p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>n=2016\uff0cn1=16 n=n0+n1+n2 \u603b\u8fb9\u6570\uff1a e=n-1 =n0+n1+n2 -1(\u6811\u7684\u6027\u8d28\uff1a\u8fb9\u6570=\u70b9\u6570-1) e=n1+2*n2 \u7ed3\u8bba: n2=n0 -1 n=n1+2*n2 -1 2*n2=1001,\u4e0d\u5b58\u5728</p> <p>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</p> <ul> <li>[ ] A. 5</li> <li>[ ] B. 6</li> <li>[ ] C. 7</li> <li>[x] D. 8</li> </ul> <p>\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u6307\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u76f4\u63a5\u540e\u4ee3\uff09\u7684\u6570\u91cf\u3002\u5b83\u7684\u201c\u5ea6\u201d\u5c31\u662f\u5b83\u62e5\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\uff08\u5373\u76f4\u63a5\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u6570\uff09\u3002 Given a tree of degree 3 \u4ec0\u4e48\u610f\u601d\uff1f\u6811\u7684 degree \u901a\u5e38\u6307\u8282\u70b9\u7684\u6700\u5927\u5ea6\u6570\uff08\u5373\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u5927\u5b50\u8282\u70b9\u6570\uff09\u3002\u8fd9\u91cc\"degree 3 \u7684\u6811\"\u53ef\u80fd\u6307\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u6700\u591a\u6709 3 \u4e2a\u5b50\u8282\u70b9\uff08\u5373 3 \u53c9\u6811\uff0cternary tree\uff09\u3002 n2=3, n3=2 n0+n1+n2+n3-1=n1+2*n2+3*n3 n0+n1+5-1=n1+12 n0=8</p> <p>If a general tree \\( T \\) is converted into a binary tree \\( BT \\), then which of the following \\( BT \\) traversals gives the same sequence as that of the post-order traversal of \\( T \\)?</p> <ul> <li>[ ] A. Pre-order traversal</li> <li>[x] B. In-order traversal</li> <li>[ ] C. Post-order traversal</li> <li>[ ] D. Level-order traversal</li> </ul> <p>\u600e\u4e48\u628a\u666e\u901a\u7684\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\uff1f</p> <ol> <li>\u9009\u62e9\u6839\u8282\u70b9\uff1a</li> <li>\u4fdd\u6301\u539f\u6811\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002</li> <li>\u5904\u7406\u5b50\u8282\u70b9\uff1a</li> <li>\u5c06\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u5176\u5de6\u5b69\u5b50\uff08left child\uff09\u3002</li> <li>\u5c06\u8be5\u8282\u70b9\u7684\u5176\u4ed6\u5b50\u8282\u70b9\uff08\u6309\u987a\u5e8f\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08right siblings\uff09\u3002</li> <li>\u9012\u5f52\u5e94\u7528\uff1a</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u8282\u70b9\u9012\u5f52\u5e94\u7528\u76f8\u540c\u7684\u89c4\u5219\u3002</li> </ol> <p>\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u540e\u7684\u4e2d\u5e8f\u904d\u5386\u7b49\u4ef7\u4e8e\u539f\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002</p> <p>In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u3002 \u540c\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u5de6\u8fb9\u7684\u4e00\u5b9a\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u7684\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002 \u6240\u4ee5\u4ece\u5de6\u5230\u53f3\u4e00\u5b9a\u5355\u8c03\u9012\u589e\u3002</p> <p>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u5982\u679c 4 \u548c 6 \u662f\u5144\u5f1f\uff0c5 \u4e00\u5b9a\u662f\u7236\u4eb2\uff1b \u5982\u679c 4 \u548c 6 \u5728\u540c\u4e00\u5c42\u4f46\u4e0d\u76f8\u90bb\uff0c5 \u4e00\u5b9a\u5728\u4e2d\u95f4\uff0c\u77db\u76fe\uff1b \u5982\u679c 4 \u548c 6 \u76f8\u90bb\u4f46\u4e0d\u662f\u5144\u5f1f\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b:</p> Text Only<pre><code>      5\n     / \\\n    3   7\n   / \\ / \\\n  1  4 6  8\n</code></pre> <p>In a max-heap with \\( n \\) (\\( &gt; 1 \\)) elements, the array index of the minimum key may be ____.</p> <ul> <li>[ ] A. 1</li> <li>[ ] B. \\(\\lfloor n/2 \\rfloor - 1\\)</li> <li>[ ] C. \\(\\lfloor n/2 \\rfloor\\)</li> <li>[x] D. \\(\\lfloor n/2 \\rfloor + 2\\)</li> </ul> <p>\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\u3002 \u4e00\u5171 n \u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6700\u540e\u4e00\u5c42\u7b2c\u4e00\u4e2a\u662f\\(2^{n-1}\\)\uff0c\u6700\u540e\u4e00\u4e2a\u662f\\(2^n-1\\)\uff0c \u603b\u8282\u70b9\u6570\\(2^{n-1} &lt; N &lt;2^n-1\\)\uff0c\\(\\lfloor N/2 \\rfloor + 1\\)\u5f97\u5230\u6700\u540e\u4e00\u884c\u7b2c\u4e00\u4e2a</p> <p>Using the linear algorithm to build a min-heap from the sequence {15, 26, 32, 8, 7, 20, 12, 13, 5, 19}, and then insert 6. Which one of the following statements is FALSE?</p> <ul> <li>[ ] A. The root is 5</li> <li>[ ] B. The path from the root to 26 is {5, 6, 8, 26}</li> <li>[x] C. 32 is the left child of 12</li> <li>[ ] D. 7 is the parent of 19 and 15</li> </ul> <p>Using the linear algorithm to build a min-heap \u662f\u600e\u4e48\u6837\u5efa\u5806\uff1f \u5efa\u5806\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u81ea\u5e95\u5411\u4e0a\uff08Bottom-up\uff0cLinear-time Heapify\uff09\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u548c\u5176\u5b50\u6811\u53d8\u4e3a\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> <li>\u9010\u4e2a\u63d2\u5165\uff08Top-down\uff0cIncremental Heap Construction\uff09\uff1a\u6392\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6570\u63d2\u5165\u5230\u6700\u540e\u518d\u8c03\u6574\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)\u3002</li> </ol> <p>If a \\(d\\)-heap is stored as an array, for an entry located in position \\(i\\), the parent, the first child and the last child are at:</p> <ul> <li>[ ] A. \\(\\lceil (i + d - 2) / d \\rceil\\), \\((i - 2)d + 2\\), and \\((i - 1)d + 1\\)</li> <li>[ ] B. \\(\\lceil (i + d - 1) / d \\rceil\\), \\((i - 2)d + 1\\), and \\((i - 1)d\\)</li> <li>[ ] C. \\(\\lfloor (i + d - 2) / d \\rfloor\\), \\((i - 1)d + 2\\), and \\(id + 1\\)</li> <li>[ ] D. \\(\\lfloor (i + d - 1) / d \\rfloor\\), \\((i - 1)d + 1\\), and \\(id\\)</li> </ul> <p>d-heap \u4ec0\u4e48\u610f\u601d? d-heap \u662f\u5806\uff08Heap\uff09\u7684\u4e00\u79cd\u6cdb\u5316\u5f62\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 d \u4e2a\u5b50\u8282\u70b9\uff08\u800c\u975e\u4e8c\u53c9\u5806\u7684 2 \u4e2a\u5b50\u8282\u70b9\uff09\u3002\u5b83\u662f\u5b8c\u5168 d \u53c9\u6811\uff08Complete d-ary Tree\uff09\u3002 \u53ef\u7528 d=3 \u4ee3\u5165\u9a8c\u8bc1\uff0c\u6392\u9664\u9519\u8bef\u9009\u9879</p> <p>If a binary search tree of \\(N\\) nodes is complete, which one of the following statements is FALSE?</p> <ul> <li>[ ] A. the average search time for all nodes is \\(O(\\log N)\\)</li> <li>[ ] B. the minimum key must be at a leaf node</li> <li>[x] C. the maximum key must be at a leaf node</li> <li>[ ] D. the median node must either be the root or in the left subtree</li> </ul> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u8981\u6c42\u4e0a\u9762\u5168\u6ee1\uff0c\u6700\u540e\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u586b\uff0c\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811\u3002 BST \u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\u6811\u7684\u9ad8\u5ea6\u3002\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f\\(log(N)\\),\u6545\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\\(O(\\log N)\\)\u3002 \u4e2d\u4f4d\u6570\uff08median node\uff09\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u5947\u6570\u4e2a\u8282\u70b9\uff1a\u6b63\u4e2d\u95f4\u7684\u8282\u70b9\uff08\u7b2c \\(\\lfloor(N/2)\\rfloor\\)\u4e2a\uff09\u3002</li> <li>\u5076\u6570\u4e2a\u8282\u70b9\uff1a\u4e2d\u95f4\u4e24\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c N/2 \u4e2a\u8282\u70b9\uff0c\u79f0\u4e3a\u4e0b\u4e2d\u4f4d\u6570\uff09\u3002</li> </ul> <p>N \u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u662f\u6839\uff1bN \u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5728\u5de6\u5b50\u6811\u4e2d\u3002</p> <p>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than \\(N/2\\), but not \\(O(\\log N)\\).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u901a\u8fc7\u6309\u5927\u5c0f\u5408\u5e76\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7\\(O(\\log N)\\)\uff08\u5176\u4e2d N \u662f\u603b\u5143\u7d20\u6570\uff09\u3002</p> <p>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</p> <ul> <li>[ ] A. 1 and -6</li> <li>[x] B. 4 and -5</li> <li>[ ] C. 8 and -5</li> <li>[ ] D. 8 and -6</li> </ul> <p>disjoint set \u662f\u4ec0\u4e48\uff1f \u5e76\u67e5\u96c6 \u4e60\u60ef\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1aroot \u548c merge\uff0c\u521d\u59cb\u5316\u4e3a\u81ea\u73af \u4e0a\u8bfe\u8bb2\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1a\u6240\u6709\u7684\u6839\u4e3a\u8d1f\u6570\uff0c\u7edd\u5bf9\u503c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f</p> <p>A relation \\( R \\) is defined on a set \\( S \\). If for every element \\( e \\) in \\( S \\), \"\\( e \\, R \\, e \\)\" is always true, then \\( R \\) is said to be ____ over \\( S \\).</p> <ul> <li>[ ] A. consistent</li> <li>[ ] B. symmetric</li> <li>[ ] C. transitive</li> <li>[x] D. reflexive</li> </ul> <p>\u5728\u6570\u5b66\u4e2d\uff0c\u5173\u7cfb \\( R \\) \u5728\u96c6\u5408 \\( S \\) \u4e0a\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u91cd\u8981\u6027\u8d28\uff1a</p> <ol> <li> <p>\u81ea\u53cd\u6027\uff08Reflexive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( e \\in S \\)\uff0c\u6709 \\( e \\, R \\, e \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u5b9e\u6570\u4e0a\u7684\u201c\u2264\u201d\u5173\u7cfb\u662f\u81ea\u53cd\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u5b9e\u6570 \\( x \\)\uff0c\\( x \\leq x \\) \u90fd\u6210\u7acb\u3002</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff08Symmetric\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\)\uff0c\u90a3\u4e48 \\( b \\, R \\, a \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c=\u201d\u5173\u7cfb\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a = b \\)\uff0c\u90a3\u4e48 \\( b = a \\)\u3002</p> </li> <li> <p>\u4f20\u9012\u6027\uff08Transitive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\( a, b, c \\in S \\)\uff0c\u5982\u679c \\( a \\, R \\, b \\) \u4e14 \\( b \\, R \\, c \\)\uff0c\u90a3\u4e48 \\( a \\, R \\, c \\)\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c\u2264\u201d\u5173\u7cfb\u662f\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u5982\u679c \\( a \\leq b \\) \u4e14 \\( b \\leq c \\)\uff0c\u90a3\u4e48 \\( a \\leq c \\)\u3002</p> </li> <li> <p>\u4e00\u81f4\u6027\uff08Consistent\uff09\uff1a</p> </li> <li>\u8fd9\u4e2a\u672f\u8bed\u5728\u5173\u7cfb\u7684\u6027\u8d28\u4e2d\u4e0d\u5e38\u89c1\uff0c\u901a\u5e38\u4e0d\u662f\u5173\u7cfb\u7684\u57fa\u672c\u6027\u8d28\u4e4b\u4e00\u3002\u53ef\u80fd\u662f\u6307\u5173\u7cfb\u5728\u67d0\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00\u81f4\u6027\uff0c\u4f46\u4e00\u822c\u4e0d\u4f5c\u4e3a\u5173\u7cfb\u7684\u6807\u51c6\u6027\u8d28\u3002</li> </ol> <p>\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F</p> <p>\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6570\u636e\u9879\uff08Data Item\uff09\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5143\u7d20\uff08Data Element\uff09\u3002</p> <ul> <li>\u6570\u636e\u9879\uff1a\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u6570\u636e\u5355\u4f4d\uff0c\u4e5f\u79f0\u4e3a\u5b57\u6bb5\u6216\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u5b66\u751f\u7684\u201c\u5b66\u53f7\u201d\u6216\u201c\u59d3\u540d\u201d\u662f\u4e00\u4e2a\u6570\u636e\u9879\u3002</li> <li>\u6570\u636e\u5143\u7d20\uff1a\u662f\u7531\u82e5\u5e72\u6570\u636e\u9879\u7ec4\u6210\u7684\uff0c\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b66\u751f\u7684\u5b8c\u6574\u8bb0\u5f55\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u3001\u5e74\u9f84\u7b49\u6570\u636e\u9879\uff09\u662f\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u9879\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> <li>\u6216\u201c\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F</p> <p>\u9519\u8bef\u539f\u56e0\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u7684\u5b9a\u4e49\u662f\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u975e\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u903b\u8f91\u7ed3\u6784\uff1a\u63cf\u8ff0\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u8054\u65b9\u5f0f\uff08\u5982\u7ebf\u6027\u7ed3\u6784\u3001\u6811\u5f62\u7ed3\u6784\u3001\u56fe\u7ed3\u6784\u7b49\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5b66\u751f\u8bb0\u5f55\uff08\u6570\u636e\u5143\u7d20\uff09\u6309\u5b66\u53f7\u987a\u5e8f\u6392\u5217\u662f\u7ebf\u6027\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5c5e\u4e8e\u6570\u636e\u5143\u7d20\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u662f\u7269\u7406\u5b58\u50a8\u6216\u5177\u4f53\u5b9e\u73b0\u7684\u8303\u7574\u3002</li> </ul> <p>\u6df7\u6dc6\u903b\u8f91\u7ed3\u6784\u4e0e\u7269\u7406\u7ed3\u6784\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u662f\u62bd\u8c61\u7684\uff08\u5982\u94fe\u8868\u3001\u6811\uff09\uff0c\u4e0e\u5b58\u50a8\u65e0\u5173\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u63a5\u8fd1\u7269\u7406\u5b58\u50a8\uff08\u5982\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u6392\u5217\uff09\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T</p> <p>\u968f\u673a\u5b58\u53d6\u662f\u6307\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b58\u50a8\u4ecb\u8d28\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u6309\u987a\u5e8f\u904d\u5386\u524d\u9762\u7684\u6570\u636e\u3002\u8fd9\u79cd\u8bbf\u95ee\u65b9\u5f0f\u7684\u7279\u70b9\u662f\u8bbf\u95ee\u65f6\u95f4\u4e0e\u6570\u636e\u4f4d\u7f6e\u65e0\u5173\uff0c\u65e0\u8bba\u6570\u636e\u5b58\u50a8\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u80fd\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u76f4\u63a5\u8bfb\u53d6\u6216\u5199\u5165\u3002</p> <p>\u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F</p> <p>1. \u4e8c\u5206\u67e5\u627e\u7684\u524d\u63d0\u662f\u201c\u968f\u673a\u5b58\u53d6\u201d \u4e8c\u5206\u67e5\u627e\uff08Binary Search\uff09\u7684\u6838\u5fc3\u64cd\u4f5c\u662f \u201c\u901a\u8fc7\u4e0b\u6807\u76f4\u63a5\u8bbf\u95ee\u4e2d\u95f4\u5143\u7d20\u201d\uff08\u5373 <code>arr[mid]</code>\uff09\uff0c\u8fd9\u8981\u6c42\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u652f\u6301 \u968f\u673a\u5b58\u53d6\uff08Random Access\uff09\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6570\u7ec4\uff1a\u901a\u8fc7\u4e0b\u6807\u53ef\u5728 \\( O(1) \\) \u65f6\u95f4\u5185\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\u3002</li> <li>\u652f\u6301\u968f\u673a\u5b58\u53d6\u7684\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u52a8\u6001\u6570\u7ec4\uff09\u3002</li> </ul> <p>\u4f46 \u5355\u5411\u94fe\u8868\uff08Singly Linked List\uff09 \u7684\u5b58\u50a8\u7279\u6027\u662f\uff1a</p> <ul> <li>\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\uff1a\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff08\u5982 <code>list[5]</code>\uff09\u3002</li> <li>\u5fc5\u987b\u987a\u5e8f\u904d\u5386\uff1a\u8981\u8bbf\u95ee\u7b2c \\( k \\) \u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u9010\u4e2a\u79fb\u52a8 \\( k-1 \\) \u6b21\u3002</li> </ul> <p>\u5728\u4efb\u610f\u4e00\u68f5\u975e\u7a7a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5220\u9664\u67d0\u7ed3\u70b9\u540e\u53c8\u5c06\u5176\u63d2\u5165\uff0c\u5219\u6240\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u5220\u9664\u524d\u539f\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\u3002 F</p> <p>\u5220\u9664\u975e\u53f6\u8282\u70b9\u540e\u8be5\u70b9\u88ab\u5176\u4ed6\u8282\u70b9\u4ee3\u66ff\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\u3002\u91cd\u65b0\u63d2\u5165\u540e\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\uff0c\u4e00\u5b9a\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_16","title":"\u4e00\u4e9b\u7b14\u8bb0","text":"<ul> <li>\u961f\u5217\u5047\u6ea2\u51fa\u662f\u4ec0\u4e48\uff1f\u961f\u5934\u5df2\u6ee1\uff0c\u961f\u5c3e\u7a7a\uff0c\u4f46\u4f1a\u8bef\u8ba4\u4e3a\u961f\u5217\u5df2\u6ee1\u3002\u53ef\u7528\u5faa\u73af\u961f\u5217\u89e3\u51b3\u3002</li> <li>\u5ea6\u4e3a 2 \u7684\u6811\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u6811\u3002\u4e8c\u53c9\u6811\u8981\u6c42\u6240\u6709\u8282\u70b9\u7684\u5ea6&lt;=2\uff0c\u4e14\u5b50\u8282\u70b9\u6709\u987a\u5e8f\u3002\u53ef\u80fd\u5b58\u5728\u6811\u7684\u5b50\u8282\u70b9\u65e0\u987a\u5e8f\uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u5b50\u8282\u70b9\u4e0d\u5f71\u54cd\u6811\u7684\u5b9a\u4e49\u3002</li> <li>\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u4e0d\u4e00\u5b9a\u80fd\u63a8\u51fa\u540e\u5e8f\u904d\u5386\u3002\u8981\u6c42\u4e3a\u4e8c\u53c9\u6811\uff08\u6216\u666e\u901a\u6811\u4f46\u5b50\u8282\u70b9\u6709\u987a\u5e8f\uff09\u3002</li> <li>\u81ea\u7136\u6570\u8ba4\u4e3a\u5305\u62ec\u96f6\u5417\uff1f\u5305\u62ec\u3002</li> <li>\u56fe\u4e2d\u9876\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u3002\u6709\u5411\u56fe\u5206\u5165\u5ea6\u548c\u51fa\u5ea6\u3002</li> <li>\u6df1\u5ea6\u4f18\u5148\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6570\u636e\u7ed3\u6784\uff1aDFS \u8c03\u7528\u5806\u6808\uff0c\u5b9e\u73b0\u6df1\u5ea6\u4f18\u5148\uff1bBFS \u8c03\u7528\u961f\u5217\uff0c\u4fdd\u8bc1\u6309\u5c42\u904d\u5386\u3002</li> <li>\u6709\u5411\u56fe\u4e2d\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u540c\u4e00\u8282\u70b9\u4e5f\u53ef\u80fd\u88ab\u591a\u6b21\u8bbf\u95ee\u3002\u56e0\u4e3a\u540c\u4e00\u8282\u70b9\u5165\u5ea6\u53ef\u80fd\u5927\u4e8e 1\uff0c\u5373\u53ef\u80fd\u88ab\u591a\u4e2a\u8282\u70b9\u6307\u5411\uff0c\u904d\u5386\u65f6\u53ef\u901a\u8fc7\u6bcf\u4e2a\u6307\u5411\u5b83\u7684\u8282\u70b9\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u3002</li> <li>\u5806\u6392\u5e8f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5927\u6839\u5806\uff1b\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5c0f\u6839\u5806\u3002\u56e0\u4e3a\u5806\u6392\u5e8f\u7684\u89c4\u5b9a\u64cd\u4f5c\u4e3a\u5806\u9876\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362\u3002</li> <li>\u867d\u7136\u7ed9\u51fa\u5173\u952e\u5b57\u5e8f\u5217\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u4f46\u4f9d\u6b21\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u80fd\u4e0d\u4e00\u6837\u3002</li> <li>\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u56fe\u4e2d\u662f\u5426\u6709\u73af\u3002\u6392\u5e8f\u65f6\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u52a0\u5165\uff0c\u5e76\u4f9d\u6b21\u4e3a\u57fa\u7840\u4fee\u6539\u5176\u4ed6\u70b9\u7684\u5165\u5ea6\u3002\u82e5\u6240\u6709\u70b9\u90fd\u88ab\u6392\u5e8f\uff0c\u5219\u6ca1\u6709\u73af\uff08DAG\uff09\uff1b\u82e5\u6709\u7684\u70b9\u6ca1\u6709\u88ab\u6392\u5e8f\uff0c\u5219\u6709\u73af\u3002</li> <li>Partial order is a precedence relation which is both transitive and irreflexive.\u504f\u5e8f\u5173\u7cfb\u662f\u4e00\u79cd\u4f18\u5148\u5173\u7cfb\uff0c\u6ee1\u8db3\u4f20\u9012\u6027\u548c\u975e\u81ea\u53cd\u6027\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#aoe-aov","title":"AOE \u7f51\u548c AOV \u7f51\u662f\u4ec0\u4e48","text":"<p>AOE \u7f51\uff08Activity On Edge network\uff09\uff0c\u5373\u8fb9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\u7edc\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u5de5\u7a0b\u9879\u76ee\u4e2d\u6d3b\u52a8\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u3002</p> <p>AOE \u7f51\u4e0e AOV \u7f51\u7684\u533a\u522b\uff1a</p> \u7279\u6027 AOE \u7f51 AOV \u7f51\uff08Activity On Vertex\uff09 \u8868\u793a\u65b9\u5f0f \u8fb9\u8868\u793a\u6d3b\u52a8\uff0c\u9876\u70b9\u8868\u793a\u4e8b\u4ef6 \u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u4f9d\u8d56\u5173\u7cfb \u6743\u503c \u8fb9\u6709\u6743\u503c\uff08\u6d3b\u52a8\u65f6\u95f4\uff09 \u8fb9\u65e0\u6743\u503c\uff08\u4ec5\u8868\u793a\u987a\u5e8f\uff09 \u5e94\u7528\u91cd\u70b9 \u8ba1\u7b97\u5173\u952e\u8def\u5f84\u548c\u5de5\u671f \u62d3\u6251\u6392\u5e8f\uff08\u786e\u5b9a\u6d3b\u52a8\u6267\u884c\u987a\u5e8f\uff09"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_17","title":"\u81ea\u5e95\u5411\u4e0a\u548c\u9010\u4e2a\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83","text":"<p>\u81ea\u5e95\u5411\u4e0a\u5efa\u5806\uff08Bottom-up Heap Construction\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u800c\u975e\u76f4\u89c2\u8ba4\u4e3a\u7684 O(n log n)\uff0c\u8fd9\u662f\u7531\u5806\u7684\u6811\u72b6\u7ed3\u6784\u7279\u6027\u548c\u6bcf\u5c42\u8282\u70b9\u6570\u4e0e\u8c03\u6574\u6210\u672c\u7684\u5e73\u8861\u51b3\u5b9a\u7684\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a</p> <p>1. \u590d\u6742\u5ea6\u5206\u6790\u7684\u6570\u5b66\u63a8\u5bfc \u5047\u8bbe\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6\u4e3a h = log\u2082n\uff0c\u5404\u5c42\u8282\u70b9\u6570\u548c\u8c03\u6574\u6210\u672c\u5982\u4e0b\uff1a</p> \u5c42\u7ea7\uff08\u4ece\u4e0b\u5230\u4e0a\uff09 \u8282\u70b9\u6570 \u6700\u591a\u4e0b\u6c89\u6b65\u6570\uff08\u9ad8\u5ea6\uff09 \u7b2c h \u5c42\uff08\u53f6\u5b50\uff09 \u2248 n/2 0\uff08\u65e0\u9700\u8c03\u6574\uff09 \u7b2c h-1 \u5c42 \u2248 n/4 1 \u7b2c h-2 \u5c42 \u2248 n/8 2 ... ... ... \u7b2c 0 \u5c42\uff08\u6839\uff09 1 h <p>\u603b\u8c03\u6574\u6b21\u6570 T(n) \u4e3a\u5404\u5c42\u8282\u70b9\u6570 \u00d7 \u5176\u4e0b\u6c89\u6b65\u6570\u4e4b\u548c\uff1a [ T(n) = \\sum{i=0}^{h-1} (\\text{\u7b2c } i \\text{ \u5c42\u8282\u70b9\u6570}) \\times (\\text{\u4e0b\u6c89\u6b65\u6570}) = \\sum \\cdot i ]}^{h-1} \\frac{n}{2^{i+1}</p> <p>\u7b80\u5316\u6c42\u548c\uff08\u4ee4 k = h - i\uff09\uff1a [ T(n) \\leq n \\sum{k=1}^{h} \\frac{k}{2^{k+1}} &lt; n \\sum = n \\cdot 2 = O(n) ]}^{\\infty} \\frac{k}{2^{k} \uff08\u6ce8\uff1a\u7ea7\u6570 \\(\\sum\\_{k=1}^{\\infty} \\frac{k}{2^k} = 2\\) \u662f\u6536\u655b\u7684\uff09</p> <p>2. \u76f4\u89c2\u7406\u89e3</p> <ul> <li>\u5927\u90e8\u5206\u8282\u70b9\u4f4d\u4e8e\u5e95\u5c42\uff1a\u7ea6 n/2 \u7684\u53f6\u5b50\u8282\u70b9\u65e0\u9700\u8c03\u6574\uff0cn/4 \u7684\u8282\u70b9\u53ea\u9700\u4e0b\u6c89 1 \u6b65\u3002</li> <li>\u9ad8\u5c42\u8282\u70b9\u5c11\u4f46\u4ee3\u4ef7\u9ad8\uff1a\u4ec5\u6709 1 \u4e2a\u6839\u8282\u70b9\u9700\u4e0b\u6c89 h \u6b65\uff0c\u4f46\u56e0\u5176\u6570\u91cf\u6781\u5c11\uff081 \u4e2a\uff09\uff0c\u5bf9\u603b\u590d\u6742\u5ea6\u7684\u8d21\u732e\u88ab\u4f4e\u5c42\u8282\u70b9\u5e73\u8861\u3002</li> </ul> <p>3. \u5bf9\u6bd4\u81ea\u9876\u5411\u4e0b\u5efa\u5806\uff08O(n log n)\uff09</p> <ul> <li>\u81ea\u9876\u5411\u4e0b\uff08\u63d2\u5165\u5f0f\u5efa\u5806\uff09\uff1a   \u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\u5e76\u6267\u884c \u4e0a\u6d6e\uff08Sift Up\uff09\uff0c\u5171 n \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6700\u574f O(log n)\uff0c\u603b\u590d\u6742\u5ea6 O(n log n)\u3002</li> <li>\u81ea\u5e95\u5411\u4e0a\uff1a   \u5229\u7528\u5df2\u6709\u5b50\u6811\u7ed3\u6784\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u8c03\u6574\uff0c\u8d8a\u4e0a\u5c42\u8282\u70b9\u8c03\u6574\u6b21\u6570\u8d8a\u591a\uff0c\u4f46\u8282\u70b9\u6570\u6307\u6570\u7ea7\u51cf\u5c11\uff0c\u603b\u548c\u6536\u655b\u4e3a O(n)\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_18","title":"\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6\u603b\u8868</p> \u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u4f18\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u9002\u7528\u573a\u666f \u5192\u6ce1\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u6559\u5b66\u3001\u5c0f\u89c4\u6a21\u6570\u636e \u9009\u62e9\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u7b80\u5355\u5b9e\u73b0\uff0c\u4ea4\u6362\u6b21\u6570\u5c11 \u63d2\u5165\u6392\u5e8f \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u7a33\u5b9a \u5c0f\u89c4\u6a21\u6216\u90e8\u5206\u6709\u5e8f\u6570\u636e \u5e0c\u5c14\u6392\u5e8f \\(O(n^{1.3})\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u4e2d\u7b49\u89c4\u6a21\u6570\u636e\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u5316\u7248 \u5f52\u5e76\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n)\\) \u7a33\u5b9a \u5927\u89c4\u6a21\u6570\u636e\uff0c\u5916\u90e8\u6392\u5e8f \u5feb\u901f\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n^2)\\) \\(O(n \\log n)\\) \\(O(\\log n)\\)~\\(O(n)\\) \u4e0d\u7a33\u5b9a \u901a\u7528\u9ad8\u6548\uff0c\u5185\u5b58\u6392\u5e8f \u5806\u6392\u5e8f \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(n \\log n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u9700\u8981\u539f\u5730\u6392\u5e8f \u8ba1\u6570\u6392\u5e8f \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u975e\u8d1f\u6574\u6570\uff0c\u8303\u56f4 k \u8f83\u5c0f \u6876\u6392\u5e8f \\(O(n + k)\\) \\(O(n^2)\\) \\(O(n)\\) \\(O(n + k)\\) \u7a33\u5b9a \u6570\u636e\u5747\u5300\u5206\u5e03 \u57fa\u6570\u6392\u5e8f \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n \\times k)\\) \\(O(n + k)\\) \u7a33\u5b9a \u591a\u5173\u952e\u5b57\u6392\u5e8f\uff08\u5982\u5b57\u7b26\u4e32\uff09 <p>\u5173\u952e\u8bf4\u660e</p> <ol> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u5e73\u5747\u6027\u80fd\u6700\u4f18\uff0c\u4f46\u6700\u574f\u60c5\u51b5\uff08\u5982\u5df2\u6392\u5e8f\u6570\u7ec4\uff09\u9000\u5316\u4e3a \\(O(n^2)\\)\uff0c\u53ef\u901a\u8fc7\u968f\u673a\u5316\u67a2\u8f74\u907f\u514d\u3002</p> </li> <li>\u5806\u6392\u5e8f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\uff0c\u4f46\u5e38\u6570\u56e0\u5b50\u8f83\u5927\uff0c\u5b9e\u9645\u6162\u4e8e\u5feb\u901f\u6392\u5e8f\u3002</li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a\u5747\u57fa\u4e8e\u975e\u6bd4\u8f83\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a81\u7834 \\(O(n \\log n)\\)\uff0c\u4f46\u9700\u7279\u5b9a\u6761\u4ef6\uff08\u5982\u6570\u636e\u8303\u56f4\u6709\u9650\uff09\u3002</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u539f\u5730\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\u3002</p> </li> <li> <p>\u9012\u5f52\u5f00\u9500\uff1a\u5feb\u901f\u6392\u5e8f\u5e73\u5747 \\(O(\\log n)\\)\uff08\u9012\u5f52\u6808\uff09\uff0c\u6700\u574f \\(O(n)\\)\uff1b\u5f52\u5e76\u6392\u5e8f\u9700 \\(O(n)\\) \u989d\u5916\u7a7a\u95f4\u3002</p> </li> <li> <p>\u7a33\u5b9a\u6027\uff1a</p> </li> <li>\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5f52\u5e76\u3001\u5192\u6ce1\uff09\u4fdd\u6301\u76f8\u7b49\u5143\u7d20\u7684\u539f\u59cb\u987a\u5e8f\uff0c\u9002\u7528\u4e8e\u591a\u5173\u952e\u5b57\u6392\u5e8f\u3002</li> <li>\u4e0d\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5feb\u901f\u3001\u5806\u6392\u5e8f\uff09\u53ef\u80fd\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002</li> </ol> <p>\u5404\u7b97\u6cd5\u7279\u70b9\u53ca\u9002\u7528\u573a\u666f</p> <ol> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u5e73\u5747\u6548\u7387\u6700\u9ad8\uff0c\u7f13\u5b58\u53cb\u597d\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u6700\u574f\u60c5\u51b5\u6027\u80fd\u5dee\uff0c\u9700\u4f18\u5316\u67a2\u8f74\u9009\u62e9\u3002</li> <li> <p>\u9002\u7528\uff1a\u901a\u7528\u573a\u666f\uff0c\u5185\u5b58\u6392\u5e8f\uff08\u5982 C++ <code>std::sort</code>\uff09\u3002</p> </li> <li> <p>\u5f52\u5e76\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u7a33\u5b9a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u9700\u989d\u5916\u7a7a\u95f4\u3002</li> <li> <p>\u9002\u7528\uff1a\u5916\u90e8\u6392\u5e8f\uff08\u5927\u6570\u636e\u6587\u4ef6\uff09\u3001\u94fe\u8868\u6392\u5e8f\u3002</p> </li> <li> <p>\u5806\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u539f\u5730\u6392\u5e8f\uff0c\u65e0\u6700\u574f\u60c5\u51b5\u98ce\u9669\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u7f13\u5b58\u4e0d\u53cb\u597d\uff0c\u5b9e\u9645\u901f\u5ea6\u8f83\u6162\u3002</li> <li> <p>\u9002\u7528\uff1a\u5185\u5b58\u53d7\u9650\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002</p> </li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a</p> </li> <li>\u4f18\u70b9\uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> <li>\u7f3a\u70b9\uff1a\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8981\u6c42\uff08\u5982\u8303\u56f4\u5c0f\u3001\u5747\u5300\u5206\u5e03\uff09\u3002</li> <li>\u9002\u7528\uff1a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\uff08\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\uff09\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_19","title":"\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u5404\u79cd\u57fa\u672c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u4e00\u3001\u6808\uff08Stack\uff09 \u6808\u901a\u5e38\u7528 \u6570\u7ec4 \u6216 \u94fe\u8868 \u5b9e\u73b0\uff0c\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff1a</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u6808 <code>push</code> \\(O(1)\\) \u76f4\u63a5\u6dfb\u52a0\u5230\u6808\u9876 \u51fa\u6808 <code>pop</code> \\(O(1)\\) \u76f4\u63a5\u79fb\u9664\u6808\u9876\u5143\u7d20 \u67e5\u770b\u6808\u9876 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u6808\u9876\u5143\u7d20\uff0c\u4e0d\u5220\u9664 \u5224\u7a7a <code>isEmpty</code> \\(O(1)\\) \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a \u641c\u7d22\u5143\u7d20 \\(O(n)\\) \u9700\u8981\u904d\u5386\u6240\u6709\u5143\u7d20 <p>\u4e8c\u3001\u961f\u5217\uff08Queue\uff09 1. \u666e\u901a\u961f\u5217\uff08\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u961f <code>enqueue</code> \\(O(1)\\) \u6dfb\u52a0\u5230\u961f\u5c3e \u51fa\u961f <code>dequeue</code> \\(O(1)\\) \u79fb\u9664\u961f\u5934\u5143\u7d20\uff08\u94fe\u8868\u5b9e\u73b0\uff09 \\(O(n)\\) \u6570\u7ec4\u5b9e\u73b0\u9700\u79fb\u52a8\u5143\u7d20\uff08\u82e5\u7528\u5faa\u73af\u6570\u7ec4\u4f18\u5316\u4e3a \\(O(1)\\)\uff09 \u67e5\u770b\u961f\u5934 <code>peek</code> \\(O(1)\\) \u8bbf\u95ee\u961f\u5934\u5143\u7d20 <p>2. \u4f18\u5148\u961f\u5217\uff08Priority Queue\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u57fa\u4e8e\u5806\uff08Heap\uff09\u5b9e\u73b0 \u5220\u9664\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(\\log n)\\) \u5806\u8c03\u6574 \u67e5\u770b\u6700\u5927\u503c/\u6700\u5c0f\u503c \\(O(1)\\) \u8bbf\u95ee\u5806\u9876\u5143\u7d20 <p>\u4e09\u3001\u6811\uff08Tree\uff09 1. \u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff0c\u672a\u5e73\u8861\uff09</p> \u64cd\u4f5c \u5e73\u5747 \u6700\u574f\uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \\(O(n)\\) \u4f9d\u8d56\u6811\u7684\u9ad8\u5ea6 \u5220\u9664 \\(O(\\log n)\\) \\(O(n)\\) \u67e5\u627e \\(O(\\log n)\\) \\(O(n)\\) <p>2. \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff08AVL/\u7ea2\u9ed1\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 \\(O(\\log n)\\) \u65cb\u8f6c\u64cd\u4f5c\u4fdd\u6301\u5e73\u8861 \u5220\u9664 \\(O(\\log n)\\) \u67e5\u627e \\(O(\\log n)\\) <p>3. \u5806\uff08Heap\uff0c\u4ee5\u4e8c\u53c9\u5806\u4e3a\u4f8b\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 <code>push</code> \\(O(\\log n)\\) \u4e0a\u6d6e\u8c03\u6574 \u5220\u9664\u5806\u9876 <code>pop</code> \\(O(\\log n)\\) \u4e0b\u6c89\u8c03\u6574 \u67e5\u770b\u5806\u9876 <code>peek</code> \\(O(1)\\) \u6784\u5efa\u5806 <code>heapify</code> \\(O(n)\\) \u4ece\u65e0\u5e8f\u6570\u7ec4\u6784\u5efa\u5806 <p>4. Trie\uff08\u5b57\u5178\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165/\u5220\u9664 \\(O(L)\\) \\(L\\) \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6 \u67e5\u627e \\(O(L)\\) <p>\u56db\u3001\u56fe\uff08Graph\uff09 1. \u56fe\u7684\u8868\u793a\u65b9\u5f0f</p> <ul> <li> <p>\u90bb\u63a5\u77e9\u9635\uff1a</p> </li> <li> <p>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(1)\\)</p> </li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(V)\\)\uff08\\(V\\) \u4e3a\u9876\u70b9\u6570\uff09</li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V^2)\\)</p> </li> <li> <p>\u90bb\u63a5\u8868\uff1a</p> </li> <li>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a\\(O(k)\\)\uff08\\(k\\) \u4e3a\u76f8\u90bb\u8282\u70b9\u6570\uff09</li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a\\(O(k)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V + E)\\)\uff08\\(E\\) \u4e3a\u8fb9\u6570\uff09</li> </ul> <p>2. \u5e38\u89c1\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6</p> \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \\(O(V + E)\\) \u90bb\u63a5\u8868\u8868\u793a \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 \\(O(V + E)\\) Dijkstra\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O((V + E) \\log V)\\) \u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u65e0\u8d1f\u6743\u8fb9\uff09 Bellman-Ford \\(O(VE)\\) \u5141\u8bb8\u8d1f\u6743\u8fb9 Floyd-Warshall \\(O(V^3)\\) \u591a\u6e90\u6700\u77ed\u8def\u5f84 \u62d3\u6251\u6392\u5e8f \\(O(V + E)\\) \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09 Kruskal\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09 \\(O(E \\log E)\\) \u57fa\u4e8e\u5e76\u67e5\u96c6\u4f18\u5316 Prim\uff08\u4f18\u5148\u961f\u5217\uff09 \\(O(E \\log V)\\)"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_20","title":"\u6808,\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808","text":"<p>\u6808\u5206\u4e3a\u987a\u5e8f\u6808(\u6570\u7ec4\u5b58\u50a8)\u548c\u94fe\u5f0f\u6808(\u94fe\u8868\u5b58\u50a8)\u4e24\u79cd.</p> \u7279\u6027 \u987a\u5e8f\u6808 \u666e\u901a\u6808\uff08\u6cdb\u6307\uff09 \u5b9e\u73b0\u65b9\u5f0f \u6570\u7ec4\uff08\u8fde\u7eed\u5185\u5b58\uff09 \u4e0d\u9650\u5b9a\uff08\u53ef\u80fd\u662f\u94fe\u5f0f\u6808\u3001\u987a\u5e8f\u6808\u7b49\uff09 \u5b58\u50a8\u7ed3\u6784 \u5185\u5b58\u8fde\u7eed \u53ef\u80fd\u8fde\u7eed\uff08\u987a\u5e8f\u6808\uff09\u6216\u975e\u8fde\u7eed\uff08\u94fe\u5f0f\u6808\uff09 \u5bb9\u91cf \u56fa\u5b9a\u5927\u5c0f\uff08\u9700\u9884\u5206\u914d\uff09 \u53ef\u56fa\u5b9a\uff08\u987a\u5e8f\u6808\uff09\u6216\u52a8\u6001\uff08\u94fe\u5f0f\u6808\uff09 \u6269\u5bb9\u6210\u672c \u9700\u590d\u5236\u5168\u90e8\u5143\u7d20\uff08\u9ad8\u6210\u672c\uff09 \u94fe\u5f0f\u6808\u52a8\u6001\u6269\u5c55\uff08\u4f4e\u6210\u672c\uff09 \u64cd\u4f5c\u901f\u5ea6 \u6240\u6709\u64cd\u4f5c \\( O(1) \\)\uff08\u65e0\u6307\u9488\u5f00\u9500\uff09 \u94fe\u5f0f\u6808\u64cd\u4f5c\u9700\u7ef4\u62a4\u6307\u9488\uff08\u4ecd\u4e3a \\( O(1) \\)\uff09 \u9002\u7528\u573a\u666f \u5143\u7d20\u6570\u91cf\u5df2\u77e5\u3001\u9ad8\u9891\u64cd\u4f5c \u5143\u7d20\u6570\u91cf\u4e0d\u786e\u5b9a\u6216\u9700\u9891\u7e41\u589e\u5220"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_21","title":"\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868","text":"<p>\u4e0d\u53cd\u8f6c\u94fe\u8868\uff0c\u9012\u5f52\u5012\u5e8f\u8f93\u51fa:</p> <ol> <li>\u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9</li> <li>\u5728\u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u503c</li> </ol> <p>\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868:</p> C<pre><code>void printReverse(Node* head) {\n  if (head == NULL) // \u8fd4\u56de\u6761\u4ef6:\u7a7a\u94fe\u8868\n   return;\n\n  printReverse(head-&gt;next); // \u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9\n  printf(\"%d \", head-&gt;data); // \u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u6570\u636e\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_22","title":"\u4e2d\u7f00\u8f6c\u540e\u7f00","text":"<p>\u6570\u636e\u7ed3\u6784:stack,\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7b26;output,\u7528\u4e8e\u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f \u6b65\u9aa4:</p> <ol> <li>\u8f93\u5165\u53d8\u91cf:\u76f4\u63a5\u653e\u5165 output</li> <li>\u8f93\u5165(:\u653e\u5165 stack</li> <li>\u8f93\u5165):\u5c06 stack \u4e2d(\u4e4b\u524d\u7684\u7b26\u53f7\u5168\u90e8\u5f39\u51fa,\u653e\u5165 output</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u9ad8\u7684\u8fd0\u7b97\u7b26:\u653e\u5165 stack</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u4f4e\u7684\u8fd0\u7b97\u7b26:\u5f39\u51fa\u4f18\u5148\u7ea7\u9ad8\u7684\u6808\u9876\u7b26\u53f7,\u518d\u5c06\u8be5\u7b26\u53f7\u653e\u5165 stack</li> <li>\u8f93\u5165\u7ed3\u675f:\u5c06 stack \u4e2d\u5269\u4f59\u7b26\u53f7\u4f9d\u6b21\u5f39\u51fa,\u653e\u5165 output    \u4ee3\u7801:</li> </ol> C<pre><code>char postfix[N]; // \u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f\nchar stk[N];     // \u5b58\u653e\u8fd0\u7b97\u7b26\n\nvoid infixToPostfix (char* infix, char* postfix) {\n  for (int i = 0; i &lt; \u8868\u8fbe\u5f0f\u957f\u5ea6; i++) {\n    char ch = infix[i];\n    int j = 0; // \u8ddf\u8e2apostfix\u4e2d\u4f4d\u7f6e\n    if (ch\u662f\u6570\u5b57\u6216\u53d8\u91cf) {\n      postfix[j++] = ch;\n    } else if (ch == '(') {\n      push(stk, ch);\n    } else if (ch == ')') {\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876 != '(') {\n        postfix[j++] = pop(stk);\n      }\n      pop(stk); // \u5f39\u51fa\u5de6\u62ec\u53f7\n    } else {    // \u8fd0\u7b97\u7b26\u5904\u7406\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876\u5143\u7d20\u4f18\u5148\u7ea7 &gt;= ch\u7684\u4f18\u5148\u7ea7) {\n        postfix[j++] = pop(stk);\n      }\n      push(stk, ch);\n    }\n  }\n  while (\u6808\u975e\u7a7a) { // \u5f39\u51fa\u5269\u4f59\u8fd0\u7b97\u7b26\n    postfix[j++] = pop(stk);\n  }\n  postfix[j] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#bst","title":"BST \u6811\u64cd\u4f5c","text":"<p>\u7279\u70b9:\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5c0f,\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5927. BST \u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9 BST \u6811\u63d2\u5165:</p> <ol> <li>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e:\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5927,\u5f80\u5de6\u8d70;\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5c0f,\u5f80\u53f3\u8d70</li> <li>\u65b0\u5efa\u8282\u70b9\u5e76\u8fde\u63a5(\u63d2\u5165\u5f62\u6210\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u53f6\u8282\u70b9)    BST \u6811\u5220\u9664:</li> <li>\u53f6\u8282\u70b9:\u76f4\u63a5\u5220\u9664</li> <li>\u6709\u4e00\u4e2a\u513f\u5b50:\u5220\u9664\u7236\u4eb2,\u7528\u513f\u5b50\u4ee3\u66ff</li> <li>\u6709\u4e24\u4e2a\u513f\u5b50:\u627e\u5230\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u5e76\u5220\u9664,\u5220\u9664\u6839,\u7528\u8be5\u8282\u70b9\u4ee3\u66ff</li> </ol> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* insert(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return \u5efa\u7acb\u65b0\u8282\u70b9; // \u8fd4\u56de\u6761\u4ef6\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = insert(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = insert(rt\u7684\u53f3\u5b50\u6811, val);\n  }\n  return rt;\n}\n</code></pre> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u5faa\u73af,\u6570\u7ec4):</p> C<pre><code>void insert(int* bst, int val) {\n  if (bst[1]\u4e3a\u521d\u59cb\u503c) {\n    bst[1] = val; // val\u662f\u6839\n    return;\n  }\n\n  int cur = 1; // \u4ece\u6839\u5f00\u59cb\n  if (val &lt; bst[cur]) {\n    if (cur\u5de6\u5b50\u6811\u7a7a) {\n      bst[cur * 2] = val;\n      break;\n    } else {\n      cur = cur * 2;   // \u4e0b\u79fbcur\n    }\n  } else if (val &gt; bst[cur]) {\n    if (cur\u53f3\u5b50\u6811\u7a7a) {\n      bst[cur * 2 + 1] = val;\n      break;\n    } else {\n      cur = cur *2 + 1; // \u4e0b\u79fbcur\n    }\n  } else { // val\u5df2\u5b58\u5728\n    break;\n  }\n}\n</code></pre> <p>BST \u6811\u5220\u9664\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>BSTNode* delete(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return rt;\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = delete(rt\u7684\u53f3\u5b50\u6811, val);\n  } else { // \u8981\u5220\u9664rt\n    // \u60c5\u51b51:\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\n    if (rt\u7684\u5de6\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u53f3\u513f\u5b50;\n      free(rt);\n      return tmp;\n    } else if (rt\u7684\u53f3\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u5de6\u513f\u5b50;\n      free(rt);\n      return tmp;\n    }\n    // \u60c5\u51b52:rt\u6709\u4e24\u4e2a\u513f\u5b50\n    BSTNode* tmp = rt\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9;\n    rt\u7684\u503c = tmp\u7684\u503c;\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, tmp\u7684\u503c);\n  }\n  return rt;\n}\n</code></pre> <p>\u8f85\u52a9\u51fd\u6570,\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u8282\u70b9:</p> C<pre><code>BSTNode* findMax(BSTNode* node) {\n  while (node\u7684\u5de6\u5b50\u6811\u975e\u7a7a) {\n    node = node\u7684\u5de6\u513f\u5b50;\n  }\n  return node;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#avl","title":"AVL \u6811\u5e73\u8861","text":"<p>\u5e73\u8861\u56e0\u5b50 BF:\u5de6\u5b50\u6811\u9ad8\u5ea6-\u53f3\u5b50\u6811\u9ad8\u5ea6 \u5e73\u8861\u56e0\u5b50\u7edd\u5bf9\u503c\u9700\u8981&lt;=1 \u6bcf\u6b21\u63d2\u5165\u6216\u5220\u9664\u540e\u901a\u8fc7\u65cb\u8f6c\u4fdd\u6301\u5e73\u8861</p> \u5931\u8861\u7c7b\u578b \u5931\u8861\u8282\u70b9 BF \u5931\u8861\u8282\u70b9\u513f\u5b50 BF \u65cb\u8f6c\u65b9\u5f0f LL \u578b 2 \u5de6 1 \u53f3\u65cb RR \u578b -2 \u53f3 -1 \u5de6\u65cb LR \u578b 2 \u5de6 -1 \u5de6\u65cb\u5de6\u513f\u5b50,\u7136\u540e\u53f3\u65cb RL \u578b -2 \u53f3 1 \u53f3\u65cb\u53f3\u513f\u5b50,\u7136\u540e\u5de6\u65cb <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* leftRotate(AVLNode *y) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *x = y-&gt;right;\n    AVLNode *B = x-&gt;left;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    x-&gt;left = y;\n    y-&gt;right = B; // \u51b2\u7a81\u7684\u5de6\u513f\u5b50\u53d8\u4e3a\u53f3\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0y\uff0c\u518d\u66f4\u65b0x\uff09\n    updateHeight(y);\n    updateHeight(x);\n\n    return x; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: y x  / \\  x -- \u5de6\u65cb(y) \u2192 y C /  \\  B C B</p> <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> C<pre><code>AVLNode* rightRotate(AVLNode *x) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *y = x-&gt;left;\n    AVLNode *B = y-&gt;right;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    y-&gt;right = x;\n    x-&gt;left = B; // \u51b2\u7a81\u7684\u53f3\u513f\u5b50\u53d8\u4e3a\u5de6\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0x\uff0c\u518d\u66f4\u65b0y\uff09\n    updateHeight(x);\n    updateHeight(y);\n\n    return y; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: x y / / \\  y -- \u53f3\u65cb(x) \u2192 A x /  / A B B</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_23","title":"\u5806\u7684\u64cd\u4f5c(\u5927\u6839\u5806\u4e3a\u4f8b)","text":"<p>\u5927\u6839\u5806\u7684\u7279\u70b9:\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9,\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6240\u6709\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u503c \u5806\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5c06\u666e\u901a\u5b8c\u5168\u4e8c\u53c9\u6811\u6539\u4e3a\u5927\u6839\u5806:</p> <p>\u4ece\u7b2c\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\u5012\u7740\u904d\u5386,\u5c06\u6bcf\u4e2a\u5b50\u6811\u6539\u4e3a\u5806 (1) \u5982\u679c\u6839\u7684\u503c\u5927\u4e8e\u5de6\u53f3\u513f\u5b50,continue (2) \u5982\u679c\u6839\u7684\u503c\u5c0f\u4e8e\u4e00\u4e2a\u513f\u5b50,\u7528\u8be5\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb (3) \u5982\u679c\u6839\u6bd4\u4e24\u4e2a\u513f\u5b50\u90fd\u5c0f,\u7528\u8f83\u5927\u7684\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb</p> <p>\u5927\u6839\u5806\u4e2d\u63d2\u5165\u5143\u7d20:</p> <ol> <li>\u63d2\u5165\u672b\u5c3e</li> <li>\u4e0a\u6d6e\u5230\u6b63\u786e\u4f4d\u7f6e</li> </ol> <p>\u5927\u6839\u5806\u6392\u5e8f:</p> <ol> <li>\u5efa\u7acb\u5927\u6839\u5806</li> <li>\u5c06\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362,\u8c03\u6574\u672a\u6392\u5e8f\u7684\u90e8\u5206,\u76f4\u5230\u5168\u90e8\u6392\u5e8f</li> </ol> <p>\u5806\u5316:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u5c06i\u4e3a\u6839\u7684\u5b50\u6811\u5806\u5316\nvoid heapify(int* arr, int n, int i) {\n  int largest = i;\n  if (\u5de6\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u5de6\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u5de6\u513f\u5b50\u4f4d\u7f6e;\n  }\n  if (\u53f3\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u53f3\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u53f3\u513f\u5b50\u4f4d\u7f6e;\n  }\n\n  if (largest != i) {\n    \u4ea4\u6362arr[i]\u548carr[largest];\n    heapify(arr, n, largest);  // \u9012\u5f52\u8c03\u6574\u53d7\u5f71\u54cd\u7684\u5b50\u6811\n  }\n}\n\n// \u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u8f6c\u6362\u4e3a\u5927\u6839\u5806\nvoid buildMaxHeap(int arr[], int n) {\n    // \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u524d\u904d\u5386\u5230\u6839\u8282\u70b9\n    for (int i = n / 2 - 1; i &gt;= 0; i--) {\n        heapify(arr, n, i);\n    }\n}\n</code></pre> <p>\u5806\u4e2d\u63d2\u5165\u8282\u70b9:</p> C<pre><code>// \u8f85\u52a9\u51fd\u6570,\u4e0a\u6d6e\nvoid siftUp(int* heap, int idx) {\n  while (idx &gt; 0) {\n    int pa = idx\u7236\u4eb2\u7684\u7d22\u5f15;\n  }\n  if (heap[idx] &gt; heap[pa]) {\n    \u4ea4\u6362heap[idx]\u548cheap[pa];\n    idx = pa; // \u66f4\u65b0\u7d22\u5f15,\u5411\u4e0a\u68c0\u67e5\n  } else {\n    break;\n  }\n}\n\n// \u5411\u5927\u6839\u5806\u4e2d\u63d2\u5165\u65b0\u5143\u7d20\nvoid insertMaxHeap(int* heap, int size, int capacity, int val) {\n  if (size &gt; capacity)\n    return;\n\n  heap[size++] = val; // \u6dfb\u52a0\u5230\u672b\u5c3e\n  siftUp(heap, size-1);\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-six","title":"Class Six","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_24","title":"\u4f18\u5148\u961f\u5217(\u5806)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_25","title":"\u76ee\u6807\u529f\u80fd","text":"<p>insert \u548c delete,\u4e14\u6bcf\u6b21 delete \u5220\u9664\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_26","title":"\u5b9e\u73b0(\u5c0f\u6839\u5806\u4e3a\u4f8b)","text":"<ul> <li>\u51e0\u79cd\u4f20\u7edf\u65b9\u6cd5:\u6570\u7ec4,\u94fe\u8868,\u6709\u5e8f\u6570\u7ec4,\u6709\u5e8f\u94fe\u8868...</li> <li>\u5c0f\u6839\u5806:\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5b83\u6240\u5728\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9(order property).</li> <li>\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u662f\u4ece\u5c0f\u5230\u5927.\u6bcf\u6b21\u63d2\u5165\u65b0\u8282\u70b9\u65f6,\u5728\u5f53\u524d\u8282\u70b9\u8c03\u6210\u4ece\u5c0f\u5230\u5927\u5373\u53ef.(\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f,\u7531 i \u8ddf i-1 \u6bd4\u6362\u6210 i \u8ddf i/2 \u6bd4)</li> <li>\u4e00\u5c42\u4e00\u5c42\u63d2\u5165,\u5f97\u5230\u5b8c\u5168\u4e8c\u53c9\u6811(structure property).</li> <li>\u591a\u53c9\u5806?\u6811\u7684\u9ad8\u5ea6\u964d\u4f4e,\u4f46\u603b\u65f6\u95f4\u4e0d\u53d8.</li> <li>\u63d2\u5165:</li> </ul> C<pre><code>// \u63d2\u5165\u5143\u7d20\nbool Insert(Heap H, int x){\n  if (\u5806\u5df2\u6ee1) return false\n\n  i\u8868\u793a\u5f53\u524d\u5806\u7684\u5927\u5c0f(\u539f\u5148\u5927\u5c0f+1)\n  for (i\u7684\u7236\u4eb2\u6bd4i\u5904\u7684\u503c\u5927,i/2) {\n    i\u7684\u7236\u4eb2\u4e0b\u79fb\u5230i\u5904\n  }\n  // \u6b64\u65f6i\u7684\u7236\u4eb2\u6bd4i\u5c0f,i\u8868\u793a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u7b2ci\u4f4d\u7684\u503c\u8d4b\u4e3ax\n}\n\n// \u5220\u9664(\u5c0f\u6839\u5806)\nint DeleteMin(Heap H) {\n  if (\u5806\u662f\u7a7a\u7684)\n    return ERROR\n\n  min\u8868\u793a\u6700\u5c0f\u503c(\u6839)\n  x\u8868\u793a\u5f53\u524d\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20(\u5806\u7684\u5927\u5c0f\u4e3a\u539f\u5148\u5927\u5c0f-1)\n  pa\u8868\u793a\u904d\u5386\u7684\u8282\u70b9,child\u8868\u793a\u8f83\u5c0f\u7684\u5b50\u8282\u70b9\n\n  for (pa\u4ece\u6839\u5f00\u59cb,pa\u7684\u513f\u5b50\u4e0d\u8d85\u8fc7\u5806\u7684\u5927\u5c0f,pa\u66f4\u65b0\u4e3achild) {\n    \u5047\u8bbe\u8f83\u5c0f\u7684child\u662fpa\u7684\u5de6\u513f\u5b50\n    if (child\u4e0d\u662f\u6700\u540e\u4e00\u4e2a,\u800c\u4e14\u53f3\u513f\u5b50\u7684\u503c\u66f4\u5c0f) {\n      child\u66f4\u65b0\u4e3apa\u7684\u53f3\u513f\u5b50\n    }\n\n    if (child\u7684\u503c\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5927)\n      break\n    else\n      pa\u7684\u503c\u4e0b\u79fb\u5230child\n  }\n\n  // \u6b64\u65f6pa\u8868\u793ax\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u5c06\u7b2cpa\u4f4d\u8d4b\u4e3ax\n\n  return min\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_27","title":"\u52a8\u6001\u7b49\u4ef7\u5173\u7cfb","text":"<p>\u7ed9\u5b9a\u5143\u7d20\u548c\u51e0\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb,\u6c42\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u662f\u5426\u7b49\u4ef7.</p> Text Only<pre><code>// \u6784\u5efa\nwhile (\u8bfb\u5165a\u548cb\u7b49\u4ef7) {\n  if (a\u7684\u96c6\u5408!=b\u7684\u96c6\u5408) {\n    \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n  }\n}\n\n// \u67e5\u8be2\n\u8bfb\u5165\u4e24\u4e2a\u8981\u67e5\u8be2\u7684\u5143\u7d20\nif (a\u7684\u96c6\u5408==b\u7684\u96c6\u5408) {\n  print (true)\n}\n</code></pre> <p>\u7528\u6570\u7ec4\u8868\u793a:\u4e0b\u6807\u4ee3\u8868\u5143\u7d20,\u503c\u4ee3\u8868\u6839</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#cloud_with_lightning_and_rainclass-seven","title":":cloud_with_lightning_and_rain:Class Seven","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_28","title":"\u8003\u8bd5\u9898\u578b","text":"<p>\u9009\u62e9\u9898,\u51fd\u6570\u586b\u7a7a,\u51fd\u6570\u7f16\u7a0b\u9898(1 \u9898)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_29","title":"\u7b49\u4ef7\u7c7b\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u96c6\u5408,\u7ed9\u5b9a\u8c01\u548c\u8c01\u7b49\u4ef7,\u6839\u636e\u6b64\u7b49\u4ef7\u5212\u5206\u96c6\u5408. e.g.\u8c01\u548c\u8c01\u662f\u4e00\u7ec4,\u56fe\u4e2d\u6700\u5c0f\u751f\u6210\u6811(\u57ce\u5e02\u4e4b\u95f4\u8fde\u901a\u9053\u8def\u7684\u6700\u5c0f\u957f\u5ea6) \u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u79cd\u65b9\u6cd5:</p> <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\u751f\u6210\u7684\u56fe\u68c0\u9a8c. \u5f53\u653e\u5165\u8fb9\u540e\u5f62\u6210\u56de\u8def\u65f6,\u8be5\u8fb9\u4e0d\u6b63\u786e. \u6838\u5fc3\u662f\u7ed9\u5b9a\u4e00\u6761\u8fb9,\u5224\u5b9a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u5c5e\u4e8e\u4ec0\u4e48\u96c6\u5408.\u5982\u679c\u5728\u540c\u4e00\u7ec4,\u653e\u5165;\u5728\u4e0d\u540c\u7ec4,\u4e0d\u653e\u5165. \u7528<code>find</code>\u51fd\u6570\u5b9e\u73b0,\u540c\u4e00\u7ec4\u7684\u70b9\u7528<code>union</code>\u8fde\u63a5.</p> <ul> <li>\u7528\u6811\u8868\u793a:\u8fd9\u6837\u7684\u6811\u4e0d\u9700\u8981\u627e\u513f\u5b50,\u53ea\u9700\u8981\u627e\u7236\u4eb2.\u56e0\u6b64\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u7236\u4eb2.</li> <li>\u7528\u6570\u7ec4\u8868\u793a:\u7d22\u5f15\u4ee3\u8868\u5f53\u524d\u8282\u70b9,\u6570\u503c\u4ee3\u8868\u4e0a\u4e00\u4e2a\u7236\u4eb2.\u5982\u679c<code>s[i]==0</code>,\u8868\u793a\u662f\u6839.   \u96c6\u5408\u7684\u5e76:<code>s[rt1]=rt2</code>.</li> </ul> <p>\u627e\u5230 parent \u7684\u4ee3\u7801:</p> Text Only<pre><code>  while (s[i]&gt;0) {\n    i=s[i];\n  }\n  return i;\n</code></pre> <ul> <li>\u5408\u5e76\u65b9\u6cd5:union by height,union by size(\u53ef\u63a8\u5bfc\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7\\(log_2 N\\)),\u6bcf\u6b21\u8c03\u6574\u8f83\u5c0f\u7684\u6811</li> <li>\u600e\u4e48\u5224\u65ad\u6811\u7684\u5927\u5c0f?\u4e4b\u524d\u6811\u6839\u7528 0 \u8868\u793a,\u53ef\u4ee5\u7528\u8d1f\u6570\u8868\u793a\u6811\u6839,\u6570\u503c\u7684\u7edd\u5bf9\u503c\u8868\u793a\u6811\u7684\u5927\u5c0f.<code>s[root]=-size</code>.</li> <li>\u8def\u5f84\u538b\u7f29:\u627e\u5230\u6811\u6839\u65f6,\u8fd9\u4e00\u6761\u8def\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u7ecf\u8fc7.\u5c06\u8fd9\u6761\u8def\u4e0a\u7684\u8282\u70b9\u90fd\u76f4\u63a5\u6307\u5411\u6811\u6839.</li> </ul> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  if (s[x]&lt;=0)               // \u662f\u6811\u6839\n    return\n  else\n    return s[x]=find(s[x],s) // \u627ex\u4e0a\u4e00\u4e2a\u7236\u4eb2\u7684\u6839,\u5e76\u7528\u6839\u66f4\u65b0s[x]\n}\n</code></pre> <p>\u6216\u4f7f\u7528\u4e24\u5c42\u5faa\u73af:</p> Text Only<pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  for (root=x;s[root]&gt;0;root=s[root]); // \u4e0d\u65ad\u66f4\u65b0root,\u5148\u627e\u5230\u6839\n\n  for (trail=x;trail!=root;trail=lead) {\n    lead=s[trail]; // \u7528\u4e8e\u4fdd\u5b58\u8def\u5f84\u4e0a\u7684\u503c\n    s[trail]=root; // \u5c06\u8def\u5f84\u4e0a\u7684\u503c\u66f4\u65b0\u4e3a\u6839\n  }\n\n  return root;\n}\n</code></pre> <p>\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\u8fd1\u4f3c\u5e38\u91cf.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_30","title":"\u56fe","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_31","title":"\u4eba\u5de5\u667a\u80fd\u539f\u7406","text":"<p>\u7528\u7b80\u7b54\u7684\u6a21\u578b\u5b9e\u73b0\u590d\u6742\u7684\u6620\u5c04.\u5176\u4e2d\u7684\u53d8\u91cf\u662f\u6743\u91cd. \u8bbe\u8ba1\u8bc4\u4f30\u51fd\u6570\u5224\u65ad\u8bbe\u8ba1\u7684\u6a21\u578b\u548c\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u8ddd,\u6210\u4e3a\u8bef\u5dee\u51fd\u6570\\(L(w_i)\\).\u8be5\u51fd\u6570\u662f\u6743\u91cd\\(w_i\\)\u7684\u51fd\u6570.\u4e0d\u65ad\u8c03\u6574\u6743\u91cd\u4f7f\u8be5\u51fd\u6570\u7684\u503c\u6700\u5c0f. \u76f8\u5f53\u4e8e\u6c42\u51fd\u6570\u7684\u6781\u5c0f\u503c.\u5411\u5bfc\u6570\u4e3a\u96f6\u7684\u65b9\u5411\u8c03\u6574.\u5229\u7528\u7684\u65b9\u6cd5\u4e3a\u68af\u5ea6\u9012\u964d\u6cd5. \u795e\u7ecf\u7f51\u7edc\u7684\u672c\u8d28\u662f\u56fe.\u5927\u6a21\u578b\u8bad\u7ec3\u7684\u672c\u8d28\u662f\u5c06\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_32","title":"\u56fe\u7684\u63cf\u8ff0","text":"<ul> <li>G(V,E)\u5206\u522b\u8868\u793a\u70b9,\u8fb9</li> <li>\u4e00\u822c\u8003\u8651:\u6ca1\u6709\u81ea\u73af,\u6ca1\u6709\u91cd\u8fb9</li> <li>\u5b8c\u5168\u56fe:\u6240\u6709\u80fd\u8fde\u7684\u8fb9\u90fd\u8fde\u63a5.\u65e0\u5411\u56fe\u8fb9\u7684\u6761\u6570\u4e3a\\(C_n^2\\).</li> <li>\u5b50\u56fe:\u70b9\u548c\u8fb9\u90fd\u662f\u5b50\u96c6</li> <li>\u8def\u5f84:\u70b9\u7684\u5e8f\u5217,\u4efb\u4f55\u524d\u540e\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5</li> <li>\u8def\u5f84\u957f\u5ea6:\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u6761\u8fb9</li> <li>\u7b80\u5355\u8def\u5f84:\u8def\u5f84\u4e0a\u7684\u70b9\u6ca1\u6709\u91cd\u53e0</li> <li>\u73af:\u7b80\u5355\u8def\u5f84,\u4e14\u5934\u5c3e\u8fde\u63a5</li> <li>\u8fde\u901a\u56fe:\u65e0\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u90fd\u662f\u8fde\u901a\u7684;\u6709\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u80fd\u8d70\u5230.</li> <li>\u8fde\u901a\u5b50\u56fe(component):\u6700\u5927\u7684\u8fde\u901a\u7684\u5b50\u56fe</li> <li>\u6811:\u8fde\u901a\u7684,\u6ca1\u6709\u56de\u8def\u7684\u56fe</li> <li>DAG(directed acyclic graph):\u6709\u5411\u65e0\u73af\u56fe,\u8282\u70b9\u524d\u540e\u6709\u4f9d\u8d56\u5173\u7cfb</li> <li>\u5f3a\u8fde\u901a\u56fe(strong connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u6709\u5411\u56fe</li> <li>\u5f31\u8fde\u901a\u56fe(weakly connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u65e0\u5411\u56fe</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component)</li> <li>\u5ea6(degree):\u6bcf\u4e2a\u70b9\u6709\u51e0\u4e2a\u70b9\u548c\u5b83\u8fde\u901a</li> <li>\u5165\u5ea6(in-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u6709\u591a\u5c11\u5176\u4ed6\u70b9\u6307\u5411\u5b83</li> <li>\u51fa\u5ea6(out-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u5b83\u6307\u5411\u51e0\u4e2a\u5176\u4ed6\u70b9</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_33","title":"\u56fe\u7684\u8868\u793a(\u6709\u5411\u56fe)","text":"<p>\u90bb\u63a5\u8868:\u628a\u6240\u6709\u8be5\u70b9\u51fa\u53bb\u7684\u8fb9\u90fd\u7528\u94fe\u8868\u4e32\u5728\u4e00\u8d77 \u9006\u90bb\u63a5\u8868:\u5c06\u6307\u5411\u8be5\u70b9\u7684\u70b9\u4e32\u5728\u4e00\u8d77. \u90bb\u63a5\u8868\u548c\u9006\u90bb\u63a5\u8868\u5b8c\u6574\u5730\u8868\u793a\u6574\u4e2a\u56fe</p> <p>\u5341\u5b57\u94fe\u8868(\u53ea\u7528\u4e8e\u6709\u5411\u56fe):\u7528\u8282\u70b9\u8868\u793a\u8fb9,\u6bcf\u4e2a\u8282\u70b9\u6709 4 \u4e2a\u5206\u91cf,\u5206\u522b\u4e3a 2 \u4e2a\u6570\u636e\u548c 2 \u4e2a\u6307\u9488.\u7528\u6570\u7ec4\u8868\u793a\u6240\u6709\u8282\u70b9.\u6570\u7ec4\u4e2d vi \u6307\u5411 vi \u5f00\u5934\u7684\u8282\u70b9. \u524d\u9762\u7684\u6307\u9488\u8868\u793a\u7b2c\u4e00\u4e2a\u6570\u636e\u6307\u5411\u8c01,\u7b2c\u4e8c\u4e2a\u6307\u9488\u8868\u793a\u4ec0\u4e48\u6570\u636e\u6307\u5411\u7b2c\u4e8c\u4e2a\u6570\u636e.</p> <p>\u591a\u91cd\u94fe\u8868 multilist(\u53ea\u7528\u4e8e\u65e0\u5411\u56fe):\u6570\u7ec4\u51fa\u53d1\u7684\u6bcf\u4e2a\u70b9\u5c06\u542b\u6709\u8be5\u70b9\u7684\u8282\u70b9\u4e32\u5728\u4e00\u8d77.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_34","title":"\u56fe\u7684\u4f5c\u7528","text":"<ol> <li>\u793e\u7fa4\u6316\u6398:\u5c06\u4e0d\u540c\u4eba\u4e4b\u95f4\u7684\u8054\u7cfb\u8868\u793a\u6210\u56fe.\u6839\u636e\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u5212\u5206\u793e\u7fa4.</li> <li>\u4e00\u79cd\u5224\u65ad\u793e\u7fa4\u662f\u5426\u7d27\u5bc6\u7684\u65b9\u6cd5:\u91cc\u9762\u7684\u8fb9\u548c\u5916\u9762\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6bd4\u503c</li> <li>\u53ef\u4ee5\u6839\u636e\u70b9\u7684\u5165\u5ea6,\u51fa\u5ea6\u7684\u6743\u91cd\u5224\u65ad\u70b9\u7684\u6027\u8d28</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-eight","title":"Class Eight","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_35","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>\u4f8b\u5b50:   \u4e0d\u540c\u8bfe\u7a0b\u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb,\u6709\u4e9b\u8bfe\u7a0b\u9700\u8981\u5176\u4ed6\u8bfe\u4f5c\u4e3a\u524d\u7f6e\u8bfe\u7a0b.\u7528\u56fe\u8868\u793a\u4f9d\u8d56\u5173\u7cfb,\u6709\u4ee5\u4e0b\u5173\u7cfb:</li> <li>\u5f62\u6210\u65e0\u56de\u8def\u7684\u6709\u5411\u56fe(DAG,\u6709\u5411\u65e0\u73af\u56fe)</li> <li>\u7528\u70b9\u6216\u8fb9\u8868\u793a\u8981\u7d20(AOV)</li> <li>\u76ee\u6807:   \u6839\u636e\u8bfe\u7a0b\u7684\u4f9d\u8d56\u5173\u7cfb,\u5217\u51fa\u4e0d\u77db\u76fe\u7684\u9009\u8bfe\u7684\u987a\u5e8f.</li> <li>\u62d3\u6251\u6392\u5e8f\u65b9\u6cd5:</li> </ul> <ol> <li>\u627e\u5230\u7b2c\u4e00\u95e8:\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9</li> <li>\u6bcf\u627e\u5230\u4e00\u4e2a\u70b9\u540e,\u5220\u9664\u8be5\u70b9.(\u6bcf\u6b21\u5904\u7406\u540e\u56fe\u53d1\u751f\u4e00\u70b9\u6539\u52a8.)\u4fee\u6539\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6.</li> <li>\u6bcf\u6b21\u968f\u673a\u9009\u53d6\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9,\u91cd\u590d\u524d\u4e24\u6b65.</li> </ol> <ul> <li>\u90e8\u5206\u6709\u5e8f(partial order)   \u6709\u4e9b\u70b9\u6709\u5e8f,\u6709\u4e9b\u70b9\u65e0\u5e8f</li> <li>\u4ee3\u7801:</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  for (int cnt = 0; cnt &lt; \u70b9\u7684\u603b\u6570; cnt++) {\n    int v = \u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9;\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w)\n      w\u7684\u5165\u5ea6--; // \u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1,\u6839\u636e\u8fd9\u4e2a\u70b9\u4fee\u6539\u5468\u56f4\u70b9\u7684\u4fe1\u606f\n  }\n}\n</code></pre> <ul> <li>\u600e\u4e48\u67e5\u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9?   \u6784\u5efa\u961f\u5217.\u6bcf\u6b21\u4fee\u6539\u5165\u5ea6\u65f6\u5982\u679c\u6539\u540e\u4e3a\u96f6,\u52a0\u5165\u961f\u5217.</li> </ul> C<pre><code>void topSort(\u56fe g) {\n  \u961f\u5217 Q;\n  for (\u904d\u5386\u6240\u6709\u70b9v) {\n    if (v\u7684\u5165\u5ea6 == 0)\n      enqueue(v, Q);\n  }\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w) {\n      if (--w\u7684\u5165\u5ea6 == 0)\n        enqueue(w, Q);\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_36","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898","text":"<p>\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898:Dijkstra</p> <ol> <li>\u521d\u59cb\u5316\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e3a\u65e0\u7a77\u5927</li> <li>\u627e\u51fa\u6ca1\u6709\u88ab\u62d3\u5c55\u8fc7\u4e14\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9</li> <li>\u5c06\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u5df2\u7ecf\u62d3\u5c55\u8fc7</li> <li>(\u5229\u7528\u8be5\u70b9\u4fee\u6539\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7684\u4fe1\u606f.)\u5224\u65ad\u65b0\u6dfb\u52a0\u7684\u8def\u5f84\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u539f\u6709\u957f\u5ea6,\u5982\u679c\u5c0f\u4e8e\u5219\u66f4\u65b0\u957f\u5ea6</li> </ol> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nconst int N = 1e3 + 5;\nconst ll inf = 4e18;\n\nstruct Node {\n    int x, w;  // x\u8868\u793a\u51fa\u70b9\uff0cw\u8868\u793a\u6743\u503c\n};\nvector&lt;Node&gt; g[N];\nll d[N], n, m;\n\nvoid dijkstra(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));  // \u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7,\u6bcf\u4e2a\u70b9\u53ea\u88ab\u62d3\u5c55\u4e00\u6b21\n\n    for (int i = 1; i &lt;= n; i++) {\n        // \u627e\u51fa\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9\n        int u = 1;\n        for (int j = 1; j &lt;= n; j++) {\n            if (vis[u] || (!vis[j] &amp;&amp; d[j] &lt; d[u]))\n                u = j;\n        }\n\n        vis[u] = true;  // \u8868\u793au\u5df2\u7ecf\u62d3\u5c55\u8fc7\n\n        // \u6b64\u65f6d[u]\u5df2\u7ecf\u4e3a\u6700\u4f18\n        for (auto&amp; [v, w] : g[u]) {\n            if (!vis[v] &amp;&amp; d[v] &gt; d[u] + w)\n                d[v] = d[u] + w;\n        }\n    }\n}\n\n// \u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5bfb\u627e\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\nvoid dijkstra1(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7\n\n    priority_queue&lt;Node&gt; pq;\n    pq.push((Node){st, d[st]});  // \u8d77\u70b9\u4f5c\u4e3a\u62d3\u5c55\u70b9\n\n    while (pq.size()) {\n        int x = pq.top().x;\n        pq.pop();\n\n        if (vis[x])\n            continue;\n        vis[x] = true;\n\n        for (auto&amp; [y, w] : g[x]) {\n            if (!vis[y] &amp;&amp; d[y] &gt; d[x] + w) {\n                d[y] = d[x] + w;\n                pq.push((Node){y, d[y]});\n            }\n        }\n    }\n}\n\nvoid solve() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, w;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        if (u != v)\n            g[u].push_back({v, w});\n    }\n\n    dijkstra1(1);\n\n    cout &lt;&lt; (d[n] &gt;= 4e18 ? -1 : d[n]) &lt;&lt; '\\n';\n}\n\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int _ = 1;\n    while (_--)\n        solve();\n    return 0;\n}\n</code></pre> <p>\u4e0d\u9002\u7528\u4e8e\u8d1f\u8fb9\u60c5\u51b5:\u88ab\u62d3\u5c55\u8fc7\u4e00\u6b21\u540e\u4e0d\u518d\u62d3\u5c55 \u8d1f\u8fb9\u4ee3\u7801:</p> C<pre><code>void dijkstra(\u56fe g) {\n  \u961f\u5217 Q;\n  enqueue(\u6e90\u70b9, Q);\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    for (v\u6307\u5411\u7684\u70b9w) {\n      if (v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6 &lt; w\u7684\u8ddd\u79bb) {\n        w\u7684\u8ddd\u79bb = v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6;\n        if (w\u4e0d\u5728Q\u4e2d)\n          enqueue(w, Q);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-nine","title":"Class Nine","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#all-pairs-shortest-paths","title":"\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)","text":"<p>\u4e00\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1a\u7b97\u4e00\u884c\uff08n \u4e2a\u503c\uff09 \u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)\uff1a\u7b97\u4e00\u4e2a\u77e9\u9635\uff08n*n \u77e9\u9635\uff09</p> <p>\u52a8\u6001\u89c4\u5212\uff1a \u5927\u95ee\u9898\u5206\u89e3\u4e3a\u5c0f\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5206\u6cbb\u6cd5\u6216\u9012\u5f52\u65f6\u5c0f\u95ee\u9898\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\uff0c\u6548\u7387\u4f4e\uff08\u5206\u6cbb\u6cd5\u662f top-down\uff0c\u4ece\u4e0a\u5230\u4e0b\u8ba1\u7b97\uff09\u3002 \u52a8\u6001\u89c4\u5212\u4e3a botton-up\uff0c\u5148\u6c42\u57fa\u7840\u89e3\u518d\u6c42\u9ad8\u5c42\u89e3\u3002\u57fa\u7840\u89e3\u53ef\u80fd\u6709\u5f88\u591a\uff0c\u9700\u8981\u7528\u6570\u7ec4\u7b49\u7ed3\u6784\u5b58\u50a8\u3002 \u5206\u6790\u95ee\u9898\u7684\u601d\u8def\u662f top-down\uff0c\u89e3\u7b54\u95ee\u9898\u7684\u6d41\u7a0b\u662f botton-up\u3002</p> <p>\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff1a D(i,j)\u8868\u793a vi \u51fa\u53d1\u5230 vj \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e2d\u95f4\u53ef\u80fd\u7ecf\u8fc7\u70b9\u96c6\u3002 \u5982\u679c\u4e2d\u95f4\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u70b9\uff08\u4e3a\u7a7a\u96c6\uff09\uff0c\u7b54\u6848\u4e3a\u8fb9\u957f\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1 \u8fd9\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5230 vj\uff0c\u548c vi \u5230 v1 \u518d v1 \u5230 vj\uff08\u8fd9\u4e24\u6bb5\u4e4b\u95f4\u90fd\u662f\u7a7a\u96c6\uff09\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1\uff0cv2 \u4e24\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\uff0c\u548c vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 v2 \u518d\u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\u3002</p> <p>Floyd \u521d\u59cb\u5316\uff1a\u8fb9\u6216\u65e0\u7a77\u5927 \u72b6\u6001\u8f6c\u79fb\uff1a\u5141\u8bb8\u7ecf\u8fc7\u70b9 \u57fa\u672c\u6846\u67b6:</p> C<pre><code>for (\u4e2d\u8f6c\u70b9k)\n    for (\u8d77\u70b9i)\n        for (\u7ec8\u70b9j)\n        //\u5224\u65ad\u662f\u5426\u66f4\u65b0\n        d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#aoe-activity-on-edge","title":"AOE \u7f51(Activity On Edge)","text":"<p>\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u6709\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u505a\u3002\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u65f6\u95f4\u70b9\uff0c\u6240\u6709\u5165\u8fb9\u7684\u4efb\u52a1\u90fd\u5b8c\u6210\u540e\u624d\u80fd\u505a\u8282\u70b9\u4ee5\u540e\u7684\u4efb\u52a1\u3002 \u4e3a\u4ec0\u4e48\u627e\u5173\u952e\u8def\u5f84\uff1f\u5982\u679c\u8981\u628a\u65f6\u95f4\u7f29\u77ed\uff0c\u9700\u8981\u52a0\u5feb\u54ea\u4e9b\u4efb\u52a1\u624d\u80fd\u4f7f\u6574\u4f53\u65f6\u95f4\u51cf\u5c11\u3002 \u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff1a\u6240\u6709\u4e4b\u524d\u7684\u652f\u8def\u6240\u9700\u65f6\u95f4\u7684\u6700\u5927\u503c \u53ef\u80fd\u5efa\u7acb dummy activity\uff08\u6240\u9700\u65f6\u95f4\u4e3a 0\uff09\uff0c\u5efa\u7acb\u4e0d\u540c\u4efb\u52a1\u4e4b\u95f4\u7684\u5173\u8054\u3002</p> <p>EC(Early Complete time)\uff1amax{\u6240\u6709\u5165\u70b9\u7684 EC + \u5165\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u6700\u5c11\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\uff09 LC(Last Complete time)\uff1amin{\u6240\u6709\u51fa\u70b9\u7684 LC - \u51fa\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u80fd\u5077\u61d2\u591a\u957f\u65f6\u95f4\uff0c\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u51fa\u53d1\uff09 \u5982\u679c\u8282\u70b9\u7684 EC == LC\uff0c\u8be5\u70b9\u662f\u5173\u952e\u70b9\u3002\u5173\u952e\u70b9\u7ec4\u6210\u5173\u952e\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#compassclass-ten","title":":compass:Class Ten","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#network-flow-problems","title":"Network Flow Problems \u7f51\u7edc\u6d41\u95ee\u9898","text":"<p>\u57ce\u5e02\u6539\u9020\u6d89\u53ca\u5730\u4e0b\u7ba1\u7f51\u5de5\u7a0b\u3002\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6709\u4e0d\u540c\u7ba1\u9053\uff0c\u4e0d\u540c\u7ba1\u9053\u7684\u6d41\u91cf\u4e0d\u540c\uff0c\u7528\u6709\u5411\u56fe\u8868\u793a\u3002\u8981\u6c42\u8ba1\u7b97\u51fa\u6700\u5927\u6d41\u91cf\u3002 \u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p>\u904d\u5386\u56fe\uff0c\u627e\u5230\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5927\u6d41\u91cf\u4e3a\u7ba1\u9053\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002 \u7136\u540e\u6bcf\u6761\u8fb9\u51cf\u53bb\u53d6\u5230\u7684\u8def\u5f84\u6700\u5927\u6d41\u91cf\uff0c\u5269\u4f59\u56fe\u91cd\u65b0\u904d\u5386\u3002 \u76f4\u5230\u6ca1\u6709\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u65f6\uff0c\u5f97\u5230\u7684\u6d41\u91cf\u548c\u4e3a\u6700\u5927\u6d41\u91cf\u3002</p> <p>\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u9009\u62e9\u8def\u5f84\u65f6\u53ef\u80fd\u4e0e\u5176\u4ed6\u8def\u5f84\u51b2\u7a81\uff0c\u5bfc\u81f4\u5176\u4ed6\u8def\u5f84\u4e0a\u8def\u5f84\u88ab\u5220\u9664\u3002 \u4fee\u6539\uff1a\u5efa\u7acb\u53cd\u6094\u673a\u5236\uff0c\u67d0\u6761\u7ebf\u6bb5\u6d41\u5411\u53ef\u6539\u53d8\u3002 \u5177\u4f53\u64cd\u4f5c\uff1a</p> <p>\u5728\u67d0\u6761\u8def\u5f84\u5220\u9664\u540e\uff0c\u6dfb\u52a0\u6d41\u91cf\u76f8\u540c\u7684\u53cd\u5411\u8fb9\u3002\u76f8\u5f53\u4e8e\u5c06\u6765\u53ef\u4ee5\u53cd\u6094\uff0c\u91cd\u65b0\u7ecf\u8fc7\u88ab\u5220\u9664\u7684\u8fb9\u3002 \u76f4\u5230\u6240\u6709\u548c\u8d77\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u6307\u5411\u8d77\u70b9\uff0c\u7ec8\u6b62\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T=O(f\\cdot \\left| E\\right|)\\)\uff0cf \u662f\u6700\u5927\u6d41\u91cf \u6539\u8fdb\uff1a</p> <ol> <li>\u4e0b\u4e00\u6b65\u6709\u4e0d\u540c\u9009\u62e9\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u6d41\u91cf\u5927\u7684\u8fb9\u3002</li> <li>\u6bcf\u6b21\u9009\u62e9\u8fb9\u6700\u5c11\u3002</li> </ol> <p>\u8fdb\u4e00\u6b65\u5f3a\u5316\uff1a\u6700\u5927\u6d41\u91cf\u53ef\u80fd\u6709\u4e0d\u540c\u8def\u5f84\uff0c\u5404\u4e2a\u8def\u5f84\u901a\u8fc7\u65f6\u6709\u4ee3\u4ef7\u3002\u9700\u8981\u627e\u5230\u6700\u5927\u6d41\u91cf\u4e14\u6700\u4f4e\u4ee3\u4ef7\u7684\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#mininum-spanning-tree","title":"\u6700\u5c0f\u751f\u6210\u6811(Mininum Spanning Tree)","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u6743\u91cd\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002 \u8d2a\u5fc3\u7b97\u6cd5(Greedy Method) \u6570\u5b66\u4f18\u5316\uff1a\u7ed9\u5b9a\u51fd\u6570\u548c\u533a\u95f4\uff0c\u6c42\u51fd\u6570\u5728\u533a\u95f4\u4e0a\u7684\u6700\u5927\u503c\u3002\u968f\u673a\u9009\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u8fd9\u4e2a\u70b9\u7684\u503c f(x0)\u3002\u5230\u5de6\u53f3 x0+d\uff0cx0-d\uff0c\u53d6\u4e09\u4e2a\u503c\u4e2d\u6700\u5927\u503c\u3002\u6bcf\u6b21\u627e\u5de6\u53f3 d \u7684\u8ddd\u79bb\u3002\u5f53\u5de6\u53f3\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u503c\u65f6\u505c\u6b62\u3002 \u8fd9\u79cd\u65b9\u6cd5\u53d6\u5230\u5c40\u90e8\u6700\u4f18\u89e3\u3002 \u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6bcf\u6b21\u79fb\u52a8\u65f6\u6709\u4e00\u5b9a\u6982\u7387\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002</p> <p>\u5982\u4f55\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff1f</p> <ol> <li>prim\uff1a\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\u3002 <p>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\uff0c\u627e\u548c\u5b83\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\u52a0\u5165\u3002 \u518d\u627e\u548c\u8fd9\u4e2a\u5c40\u90e8\u7684\u6811\u548c\u5916\u90e8\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\uff08\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u5c40\u90e8\u7684\u6811\u4e2d\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\u5728\u6811\u5916\uff09\uff0c\u52a0\u5165\u3002 \u91cd\u590d\u627e\u6700\u77ed\u8fb9\u3001\u52a0\u5165\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5728\u6811\u5185\u3002</p> </li> <li>kruskal\uff1a\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff08\u9009\u62e9 n-1 \u6761\u8fb9\uff0c\u4f7f\u5f97\u5b83\u6784\u6210\u6811\u4e14\u6743\u503c\u548c\u6700\u5c0f\uff09\u3002 <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\u4ece\u6700\u77ed\u8fb9\u5f00\u59cb\uff0c\u6bcf\u6b21\u653e\u4e00\u6761\u8fb9\u8fdb\u53bb \u68c0\u67e5\u662f\u5426\u6784\u6210\u56de\u8def\uff08\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u8fde\u901a\uff09\uff0c\u5982\u679c\u6784\u6210\u56de\u8def\u5219\u8df3\u8fc7\u3002 \u5f53\u653e\u5165\u7684\u8fb9\u6570\u5230\u8fbe n-1 \u65f6\u505c\u6b62\u3002</p> </li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#dfs","title":"DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"C<pre><code>void dfs(\u70b9 v) {\n  vis[v] = true;\n  for (\u4e0ev\u76f8\u8fde\u7684\u70b9w) {\n    if (!vis[w]) {\n      dfs(w);\n    }\n  }\n}\n</code></pre> <p>\u5982\u679c\u6574\u4f53\u4e0d\u8fde\u901a\uff0c\u5728\u5916\u9762\u5957 for \u5faa\u73af\u904d\u5386\u56fe\u4e2d\u6240\u6709\u70b9\u3002</p> C<pre><code>void dfsConn(\u56fe g) {\n  for (g\u4e2d\u7684\u70b9v) {\n    if (!vis[v]) {\n      dfs(v);\n      // ????\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-eleven","title":"Class Eleven","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_37","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"C<pre><code>void dfs(\u70b9v) {\n    for (\u4e0ev\u76f8\u90bb\u7684\u70b9w) {\n        if (w\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7) {\n            dfs(w);\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_38","title":"\u5224\u65ad\u8fde\u901a\u5757","text":"C<pre><code>void solve(\u56fe g) {\n    for (g\u4e2d\u7684\u70b9v) {\n        if (\u6ca1\u8bbf\u95ee\u8fc7v) {\n            dfs(v);\n            cnt++;\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_39","title":"\u53cc\u8fde\u901a\u56fe\u95ee\u9898","text":"<p>\u53cc\u8fde\u901a\uff1a\u4efb\u610f\u5220\u9664\u8282\u70b9\u540e\uff0c\u56fe\u4e0d\u5206\u88c2\u6210\u4e24\u4e2a \u5220\u9664\u540e\u56fe\u5206\u88c2\u7684\u70b9\u6210\u4e3a articulation\uff08\u5173\u8282\u70b9\uff09\uff0c\u6ca1\u6709 articulation \u7684\u56fe\u662f biconnected\u3002 \u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e2d\u95f4\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\uff0c\u4e5f\u662f\u53cc\u8fde\u901a\u56fe\u3002 biconnected component: a maximum biconnected subgraph. \u5173\u952e\u662f\u627e\u5230\u5173\u8282\u70b9</p> <p>dfs \u5bf9\u56fe\u8fdb\u884c\u6574\u7406\uff0c\u6839\u636e dfs \u987a\u5e8f\u5f62\u6210\u6811\u3002\u8d77\u70b9\u662f\u6839\u7ed3\u70b9\uff0c\u901a\u8fc7 v \u627e\u5230 w\uff0c\u5219 v \u662f w \u7684\u7236\u8282\u70b9\u3002 \u8f6c\u5316\u540e\u7f3a\u5c11\u90e8\u5206\u8fb9\uff0c\u5728\u6811\u4e2d\u8865\u4e0a\u3002 \u8fd9\u4e9b\u65b0\u6dfb\u52a0\u7684\u8fb9\u4e00\u5b9a\u8fde\u63a5\u7956\u5148\u548c\u540e\u88d4\uff0c\u6210\u4e3a back edge\u3002\uff08\u5982\u679c\u8fde\u63a5\u4e0d\u540c\u5206\u652f\u7684\u8fb9\uff0c\u4e00\u5b9a\u901a\u8fc7\u8fd9\u6761\u8fb9 dfs \u65f6\u76f4\u63a5\u8bbf\u95ee\u5230\u3002\uff09</p> <p>\u4ec0\u4e48\u70b9\u662f\u5173\u8282\u70b9\uff1f</p> <ol> <li>\u81f3\u5c11\u542b\u4e24\u4e2a\u513f\u5b50\u7684\u6839\u8282\u70b9</li> <li>\u6240\u6709\u513f\u5b50\u90fd\u6ca1\u6709\u5411\u4e0a\u7684\u56de\u8fb9\u3002</li> </ol> <p>\u540c\u4e00\u5206\u652f\u4e0a\u7528\u6570\u5b57\u8868\u793a\u5c42\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u5c42\u7ea7\u8d8a\u5927\u3002\u56de\u8fb9\u5c06\u4f4e\u5c42\u6b21\u4e0e\u9ad8\u5c42\u6b21\u7684\u5173\u7cfb\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u7684\u5c42\u7ea7 num\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u548c\u6240\u6709\u513f\u5b50\u7684\u6700\u9ad8\u5c42\u7ea7 low\u3002 \u5f53\u5b58\u5728\u4e00\u4e2a\u5206\u652f\u7684 low&lt; num\uff0c\u8be5\u70b9\u4e3a\u5173\u8282\u70b9\u3002</p> Text Only<pre><code>low(u) = min{num(u),\n             min{low(w) | w is a child of u},\n             min{num(w) | (u,w) is a back edge} }\n</code></pre> <p>u is an articulation point iff:</p> <ol> <li>u is the root and has et least 2 children</li> <li>u is not the root, and has at least 1 child such that low(child) &gt;= num(u)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_40","title":"\u6b27\u62c9\u56de\u8def\u95ee\u9898","text":"<p>\u6b27\u62c9\u56de\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u5c06\u6240\u6709\u8fb9\u8d70\u4e00\u904d\u5e76\u56de\u5230\u8d77\u70b9\u3002 \u7ed3\u8bba\uff1a\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002 \u6240\u6709\u70b9\u7684\u5ea6\u4e4b\u548c\u4e00\u5b9a\u662f\u5076\u6570\u3002 \u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u6709\u4e24\u4e2a\uff0c\u4e00\u5b9a\u80fd\u4ece\u5176\u4e2d\u4e00\u4e2a\u70b9\u51fa\u53d1\u8d70\u8fc7\u6240\u6709\u8fb9\u5230\u8fbe\u53e6\u5916\u4e00\u4e2a\u70b9\u3002</p> <p>\u600e\u4e48\u6784\u9020\u89e3\uff1f</p> <p>\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1 dfs\uff0c\u6700\u540e\u4e00\u5b9a\u56de\u5230\u8d77\u70b9\uff0c\u4f46\u4e0d\u4e00\u5b9a\u628a\u6240\u6709\u8fb9\u8d70\u5b8c\u3002 \uff08\u6bcf\u4e2a\u70b9\u5165\u548c\u51fa\u7684\u6b21\u6570\u4e00\u5b9a\u76f8\u7b49\uff09 \u5220\u9664 dfs \u56de\u5230\u8d77\u70b9\u540e\u7ecf\u8fc7\u7684\u8def\uff0c\u5269\u4e0b\u7684\u6240\u6709\u70b9\u7684\u5ea6\u8fd8\u662f\u90fd\u4e3a\u5076\u6570\u3002 \u5728\u8def\u5f84\u4e0a\u9009\u53d6\u8fd8\u6709\u8fb9\u7684\u70b9\u7ee7\u7eed dfs\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u8d70\u5b8c\u3002</p> <p>\u54c8\u5bc6\u5c14\u987f\u56de\u8def\u95ee\u9898\uff08\u65c5\u884c\u5546\u95ee\u9898\uff09 \u5c06\u6240\u6709\u70b9\u90fd\u8d70\u4e00\u904d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#banjoclass-twelve","title":":banjo:Class Twelve","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_41","title":"\u6392\u5e8f","text":"<p>\u7b80\u5355\u6392\u5e8f\uff1a</p> <ol> <li>\u9009\u62e9\u6392\u5e8f seection\uff1a\u6bcf\u6b21\u627e\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5728\u672b\u5c3e</li> <li>\u4ea4\u6362\u6392\u5e8f exchange\uff1a\u4ece\u5934\u5230\u5c3e\u904d\u5386\uff0c\u770b\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u662f\u5426\u7b26\u5408\uff0c\u4f4d\u7f6e\u4e0d\u5bf9\u5219\u4ea4\u6362\uff08\u5192\u6ce1\uff09</li> <li>\u63d2\u5165\u6392\u5e8f insertion\uff1a\u6bcf\u6b21\u4e4b\u524d\u7684\u5143\u7d20\u90fd\u6392\u597d\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4f7f\u5176\u4fdd\u6301\u6392\u5e8f\u7684\u7279\u6027\u3002    \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n^2)    \u4f46\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u540c\uff0c\u9009\u62e9\u6392\u5e8f\u4e3a O(n^2)\uff0c\u5192\u6ce1\u6392\u5e8f\u53ef\u901a\u8fc7\u6807\u7b7e\u4f18\u5316\uff0c\u63d2\u5165\u6392\u5e8f\u6700\u4f18\u4e3a O(n)\u3002</li> </ol> <p>inversion \u9006\u5e8f\u5bf9\uff1a\u5927\u7684\u5728\u524d\u5c0f\u7684\u5728\u540e\uff0c\u6210\u4e3a\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002 \u5982\u679c\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217\uff0c\u6700\u591a n(n-1)/2 \u4e2a\u9006\u5e8f\u5bf9\uff0c\u5e73\u5747\u7ea6 nn/4 \u4e2a\u9006\u5e8f\u3002 \u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u5bf9\u8c03\uff0c\u6539\u53d8\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002 \u6392\u5e8f\u7b97\u6cd5\u7a81\u7834\uff1a\u8df3\u7740\u6bd4\u8f83 \u5e0c\u5c14\u6392\u5e8f\uff1a\u5206\u7ec4\u6bd4\u8f83+\u63d2\u5165\u6392\u5e8f</p> <p>\u5206\u6cbb\u6cd5\uff1a\u5f52\u5e76\u6392\u5e8f T(n)=2T(n/2)+Cn =&gt; T(n)=O(nlogn)</p> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u9009\u62e9 pivot\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002</p> <p>\u5806\u6392\u5e8f\uff1a\u6784\u5efa\u6811\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5927\u540e\u3002\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u662f\u7b2c\u4e8c\u5927\u3002</p> <p>\u6876\u6392\u5e8f\uff1a</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5148\u6309\u4e2a\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u6392\u6210\u5e8f\u5217\u3002\u518d\u6309\u5341\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u518d\u6309\u767e\u4f4d\u6570\u2026\u2026\u6700\u540e\u6392\u6210\u4ece\u5c0f\u5230\u5927\u7684\u5e8f\u5217\u3002 \u5faa\u73af\u7684\u6b21\u6570\u7b49\u4e8e\u4f4d\u6570\u3002</p> <p>\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\uff1a\u76f8\u7b49\u7684\u5143\u7d20\u6392\u5e8f\u524d\u540e\u987a\u5e8f\u662f\u4e0d\u662f\u76f8\u540c\u3002</p> <p>\u63d2\u5165\u6392\u5e8f\u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f.\u5982\u679c\u8f93\u5165\u6570\u636e\u57fa\u672c\u6392\u597d,\u5219\u6392\u5e8f\u65f6\u95f4\u77ed.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_42","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u8de8\u533a\u57df\u6bd4\u8f83:\u5206\u7ec4</p> <p>\u5c06\u6570\u636e\u95f4\u9694\u5206\u7ec4,\u6bcf\u7ec4\u6392\u5e8f \u51cf\u5c11\u7ec4\u6570,\u518d\u5c06\u6bcf\u7ec4\u6392\u5e8f \u7ee7\u7eed\u51cf\u5c11\u5206\u7ec4,\u76f4\u5230\u53ea\u5206\u4e00\u7ec4,\u5b8c\u6210\u6392\u5e8f</p> <p>\u82e5\u6570\u636e\u57fa\u672c\u6709\u5e8f,\u63d2\u5165\u6392\u5e8f\u65f6\u95f4\u63a5\u8fd1\u7ebf\u6027. \u5206\u7ec4\u591a,\u5355\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e;\u5206\u7ec4\u5c11\u65f6,\u6570\u636e\u63a5\u8fd1\u6709\u5e8f,\u65f6\u95f4\u7ebf\u6027. \u5f00\u59cb\u65f6\u5206 k \u7ec4,\u7ec4\u5185\u6709\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5168\u90e8\u6709\u5e8f\u7684 1/k.</p> C<pre><code>void shellsort(int arr[], int n) {\n    for (int step = n / 2; step &gt; 0; step /= 2) {  // step\u8868\u793a\u6b65\u957f\n        for (int i = step; i &lt; n; i++) {\n            int tmp = arr[i];\n            int j;\n            for (j = i; j &gt;= step; j -= step) {  // \u63d2\u5165\u6392\u5e8f\n                if (tmp &lt; arr[j - step])\n                    arr[j] = arr[j - step];\n                else\n                    break;\n            }\n            arr[j] = tmp;\n        }\n    }\n}\n</code></pre> <p>\u6309<code>step = n / 2; step &gt; 0; step /= 2</code>\u5206\u7ec4,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6:\\(O(N^2)\\) Hibbard's Increment Sequence: \u6309\\(step=2^k-1\\)\u5206\u7ec4</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_43","title":"\u5806\u6392\u5e8f","text":"<p>\u65b9\u6cd5 1(\u4e0d\u597d)</p> C<pre><code>void heapsort(int arr[]) {\n    BuildHeap(H);\n    for (int i = 0; i &lt; n; i++)\n        tmpH[i] = DeleteMin(H);\n    for (int i = 0; i &lt; n; i++)\n        H[i] = tmpH[i];\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> C<pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6:\\(N\\log N-N\\log\\log N\\)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_44","title":"\u5f52\u5e76\u6392\u5e8f(\u5206\u6cbb\u6cd5)","text":"<p>\u5148\u5206\u522b\u6392\u5e8f,\u518d merge. \u65f6\u95f4\u590d\u6742\u5ea6: \u5206\u6210\u4e24\u7ec4:\\(O(1)\\) \u9012\u5f52\u5c06\u4e24\u7ec4\u5206\u522b\u6392\u5e8f:\\(2T(N/2)\\) merge: \\(O(N)\\)</p> <p>quicksort: merge \u7684\u6b65\u9aa4\u51cf\u5c0f\u65f6\u95f4.\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4. \u8fd9\u6837\u5206\u7ec4\u4e0d\u4e00\u5b9a\u662f n/2 \u7684\u4e24\u7ec4,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(i)+T(N-i)\\)</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u907f\u514d\u6bcf\u6b21\u8c03\u7528\u751f\u6210temp\u4e34\u65f6\u6570\u7ec4,\u5728\u5916\u90e8\u540c\u4e00\u7533\u8bf7temp,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid merge(int a[],\n           int left,\n           int leftend,\n           int right,\n           int temp[]) {  // \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\n    int i, j, k;\n    i = left;\n    j = leftend + 1;\n    k = left;\n\n    while (i &lt;= leftend &amp;&amp; j &lt;= right) {\n        if (a[i] &lt;= a[j])\n            temp[k++] = a[i++];\n        else\n            temp[k++] = a[j++];\n    }\n    while (i &lt;= leftend)\n        temp[k++] = a[i++];\n    while (j &lt;= right)\n        temp[k++] = a[j++];\n}\n\n// \u8bbe\u8ba1\u6210\u9012\u5f52\u51fd\u6570,\u5fc5\u987b\u5c06\u8fb9\u754c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid mergesort(int a[],\n               int left,\n               int right,\n               int temp[]) {  // \u6392\u5e8f\uff0c\u7528temp\u4e34\u65f6\u5b58\u50a8\n    if (left &gt;= right)\n        return;\n\n    int mid = (left + right) / 2;\n    mergesort(a, left, mid, temp);\n    mergesort(a, mid + 1, right, temp);\n    merge(a, left, mid, right, temp);\n    for (int i = left; i &lt;= right; i++) {\n        a[i] = temp[i];\n    }\n}\n\nint main() {\n    int a[101], tempa[101];\n    int n;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;a[i]);\n    }\n    mergesort(a, 0, n - 1, tempa);\n\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"%d \", a[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83 \u548c\\(T(n)=2T(n/2)+Cn\\)\u6bd4\u8f83 \\(T(n)=3T(n/2)+Cn\\): \u66f4\u590d\u6742 \\(T(n)=2T(n/3)+Cn\\): \u66f4\u7b80\u5355</p> <p>\u4e34\u65f6\u6570\u7ec4</p> <ol> <li>\u5916\u90e8\u7edf\u4e00\u7533\u8bf7,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165</li> <li>\u6bcf\u6b21\u5408\u5e76\u65b0\u7533\u8bf7\u7a7a\u95f4</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u7a7a\u95f4(\u590d\u6742)</li> <li>\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u6570\u7ec4,\u4e00\u4e2a\u6392\u5e8f\u65f6\u5360\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4</li> <li>\u4e09\u4e2a\u5df2\u6392\u5e8f\u6570\u7ec4\u5408\u5e76,\u7528\u5806(??)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_45","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5173\u952e:\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4.</p> <p>\u96be\u70b9:</p> <ol> <li>\u600e\u4e48\u9009\u62e9 pivot</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u6570\u7ec4</li> </ol> <p>\u9009\u62e9 pivot \u7684\u65b9\u6cd5:</p> <ol> <li>\u9009\u7b2c\u4e00\u4e2a(\u4e0d\u597d)</li> <li>\u968f\u673a\u9009\u62e9(\u4ecd\u4e0d\u597d)</li> <li>\u5934,\u5c3e,\u4e2d\u95f4\u503c\u4e09\u4e2a\u4e2d\u9009\u4e2d\u95f4\u503c</li> <li>\u4e94\u7b49\u5206\u70b9\u9009\u4e2d\u95f4\u503c</li> <li>\u968f\u4fbf\u9009\u4e00\u4e2a\u5206\u7ec4,\u770b\u4e24\u7ec4\u662f\u5426\u5747\u5300(\u53ef \u00bc \u4e3a\u754c),\u82e5\u5747\u5300\u5219\u7ee7\u7eed\u8fdb\u884c,\u82e5\u4e0d\u5747\u5300\u5219\u91cd\u6765(\u6309\u671f\u671b\u4e3a\u505a\u4e24\u6b21)</li> </ol> <p>\u8499\u5854\u5361\u6d1b:\u505a\u7279\u5b9a\u6b21\u6570,\u505a\u5b8c\u540e\u505c\u6b62,\u4e0d\u7ba1\u662f\u5426\u7b26\u5408\u6700\u4f73\u6761\u4ef6 \u62c9\u65af\u7ef4\u52a0\u65af:\u6309\u7279\u5b9a\u8981\u6c42,\u82e5\u4e00\u76f4\u4e0d\u7b26\u5408\u8981\u6c42\u5219\u4e00\u76f4\u8fdb\u884c</p> <p>\u4f46\u662f,\u6570\u7ec4\u5c0f\u65f6\u9009 pivot \u5feb\u6392\u6548\u7387\u4f4e. \u5728\u6570\u7ec4\u89c4\u6a21\u5c0f\u4e8e\u9608\u503c\u65f6,\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u6392\u5e8f.</p> <p>\u600e\u4e48\u539f\u5730\u5206\u7c7b?</p> <p>\u4e24\u8fb9\u626b\u63cf</p> <p>\u57fa\u51c6\u5143\u7d20\u653e\u5728\u6700\u540e \u6307\u9488 i \u653e\u5728\u5f00\u5934,\u6bd4 pivot \u5c0f\u65f6\u5411\u53f3\u8d70,&gt;=\u65f6\u505c\u4e0b \u6307\u9488 j \u653e\u5728\u7ed3\u5c3e,\u6bd4 pivot \u5927\u65f6\u5411\u5de6\u8d70,&lt;=\u65f6\u505c\u4e0b \u90fd\u505c\u4e0b\u65f6\u4ea4\u6362 i \u548c j \u7684\u503c \u76f4\u5230 i==j \u6216 i&gt;j,\u5c06 pivot \u653e\u5728\u6700\u7ec8\u4f4d\u7f6e</p> <p>\u4e00\u8fb9\u626b\u63cf</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f\u5c0f\u7684\u4e00\u5806\u548c\u5927\u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u5927,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u5c0f,\u548c\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362(\u9700\u8981\u6807\u8bb0\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e)</p> <p>\u8377\u5170\u65d7\u95ee\u9898 \u4e09\u79cd\u6570\u636e\u6392\u5e8f</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f R \u7684\u4e00\u5806,G \u7684\u4e00\u5806,B \u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u662f B,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u662f G,\u548c B \u5806\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6362 \u5982\u679c\u6307\u9488\u5904\u662f R,\u6307\u9488\u5904\u5143\u7d20\u653e\u5728 G \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,G \u5806\u7b2c\u4e00\u4e2a\u653e\u5728 B \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,B \u5806\u7b2c\u4e00\u4e2a\u653e\u5728\u6307\u9488\u4f4d\u7f6e</p> <p>\u6307\u9488\u79fb\u52a8\u8981\u6c42:\u7ef4\u62a4\u626b\u8fc7\u7684\u533a\u57df\u7b26\u5408\u8981\u6c42. \u53cc\u8fb9\u626b\u63cf:\u5de6\u6307\u9488\u5de6\u4fa7\u90fd\u5c0f,\u53f3\u6307\u9488\u53f3\u4fa7\u90fd\u5927 \u4e00\u8fb9\u626b\u63cf:\u6307\u9488\u5de6\u4fa7\u662f\u5206\u597d\u7684\u5806</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-thirteen","title":"Class Thirteen","text":"<p>\u5faa\u73af\u4e0d\u53d8\u5f0f</p> <p>cutoff\uff1a\u5f53\u6570\u7ec4\u4e2d\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u8be5\u503c\u65f6\uff0c\u4e0d\u518d\u8c03\u7528\u9012\u5f52\uff08\u9632\u6b62\u5c0f\u6570\u7ec4\u65f6\u6548\u7387\u4f4e\uff09</p> Text Only<pre><code>int median3(int a[], int left, int right) {\n    if (a[left] &lt; a[mid])\n        \u4ea4\u6362\u5de6\uff0c\u4e2d\uff1b\n    if (a[left] &lt; a[right])\n        \u4ea4\u6362\u5de6\uff0c\u53f3\uff1b\n    if (a[mid] &lt; a[right])\n        \u4ea4\u6362\u4e2d\uff0c\u53f3\uff1b\n    // \u6b64\u65f6\u5df2\u8fbe\u5230\u5de6 &lt; \u4e2d &lt; \u53f3\n    \u4ea4\u6362\u4e2d\uff0c\u53f3-1\uff1b // \u5c06pivot \u653e\u5728\u7aef\u4f4d\n    return a[right - 1];\n}\n</code></pre> Text Only<pre><code>void Qsort(int a[], int let, int right) {\n    if (left + cutoff &lt;= right) {\n        for ( ; ; ) {\n            while (a[++i] &lt; pivot) ;\n            while (a[- -j] &gt; pivot) ;\n            if (i &lt; j) swap(i, j);\n            else break;\n        }\n    } else {\n        InsertionSort(a);\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a T(N) = T(i) + T(N-i-1) + cN \u6700\u574f\uff1aT(N) = T(N-1) + cN, T(N) = O(N^2) \u6700\u597d\uff1aT(N) = 2T(N/2) +cN, T(N) = O(N logN)</p> <p>\u95ee\u9898\uff1a\u7ed9 n \u4e2a\u6574\u6570\uff0c\u6c42\u7b2c k \u5927\u7684\u6570</p> <ol> <li>\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53d6\u7b2c k \u4e2a -&gt; O(N logN)</li> <li>\u627e\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002\u5982\u679c\u5927\u7684\u5143\u7d20\u6709 k-1 \u4e2a\uff0c\u5219\u7b2c k \u4f4d\u57fa\u51c6\u5143\u7d20\uff1b\u5982\u679c\u5c0f\u4e8e k-1 \u4e2a\uff0c\u4ece\u5927\u7684\u5143\u7d20\u4e2d\u627e\uff1b\u2026\u2026\u5c0f\uff0c\u4ece\u5c0f\u7684\u5143\u7d20\u4e2d\u627e -&gt; O(1+\u00bd+\u00bc+\u2026N)=O(N)</li> </ol> <p>\u5927\u7ed3\u6784\u7684\u6392\u5e8f\u95ee\u9898 \u548c\u6570\u7ec4\u6392\u5e8f\u4e0d\u540c\uff0c\u5927\u7ed3\u6784\u4ea4\u6362\u7684\u4ee3\u4ef7\u9ad8\u3002\u7528 keyword \u4ee3\u66ff\uff0c\u6839\u636e\u5927\u7ed3\u6784\u7684\u6027\u8d28\u5bf9 keyword \u6392\u5e8f\u3002 \u5173\u952e\u95ee\u9898\uff1a\u7ed9\u5b9a\u7b2c\u51e0\u4e2a\u5143\u7d20\u653e\u5230\u7f16\u53f7\u51e0\u7684\u4f4d\u7f6e\uff0c\u600e\u4e48\u91cd\u65b0\u7f16\u6392\u6570\u7ec4\uff1f\uff1f</p> <p>\u8bc1\u660e\uff1a\u901a\u8fc7\u6bd4\u8f83\u3001\u4ea4\u6362\uff0c\u4e0d\u53ef\u80fd\u627e\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e O(N logN)\u7684\u7b97\u6cd5 \u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5\uff0c\u90fd\u5bf9\u5e94\u4e00\u4e2a\u51b3\u7b56\u6811\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u6bd4\u8f83\u8bed\u53e5\uff0c\u5206\u652f\u8868\u793a T \u6216 F \u7684\u60c5\u5f62\uff0c\u53f6\u8282\u70b9\u4e3a\u6700\u7ec8\u6392\u5e8f\u7ed3\u679c\u3002 \u53f6\u8282\u70b9\u603b\u6570\u4e3a n\uff01\uff0c\u5219\u6811\u7684\u9ad8\u5ea6\u81f3\u5c11 log N\uff01\u3002 O(log N!) = O(N logN)</p> <p>\u4e0d\u7528\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u5c0f\u4e8e O(N logN)\uff1a\u5982\u6876\u6392\u5e8f\u3002</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5206\u522b\u6309\u4e2a\u4f4d\u6570\u3001\u5341\u4f4d\u6570\u2026\u2026\u8fdb\u884c\u6876\u6392\u5e8f\u3002\uff08\u6700\u4e0d\u91cd\u8981\u7684\u6570\u5f00\u59cb\uff09 \u6bcf\u6b21\u6392\u5e8f\u65f6\u6309\u4e0a\u4e00\u6b21\u6392\u5e8f\u7ed3\u679c\u904d\u5386\u3002\u5148\u628a\u4e00\u4e2a\u6876\u4e2d\u7684\u6570\u4f9d\u6b21\u904d\u5386\u5b8c\uff0c\u518d\u904d\u5386\u4e0b\u4e00\u4e2a\u6876\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u9700\u8981 O(logN)\u7684\u7a7a\u95f4\u3002\uff08\u9012\u5f52\u9700\u8981\u4e0d\u65ad\u538b\u6808\uff09</p> <p>\u7a33\u5b9a\u6027\uff1a \u63d2\u5165\u6392\u5e8f \u7a33\u5b9a \u5806\u6392\u5e8f \u4e0d\u7a33\u5b9a\uff08\u6ca1\u6709\u4f9d\u6b21\u6bd4\u8f83\uff09 \u5206\u7ec4\u6392\u5e8f \u4e0d\u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \u4e0d\u7a33\u5b9a</p> <p>\u8fd8\u53ef\u80fd\u8003\uff1a\u7ecf\u8fc7\u51e0\u8f6e\u540e\u6570\u636e\u5e8f\u5217\uff0c\u5224\u65ad\u662f\u4ec0\u4e48\u6392\u5e8f\u65b9\u6cd5</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_46","title":"\u54c8\u5e0c","text":"<p>\u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\uff0c\u5bf9\u6bcf\u4e2a x \u751f\u6210 y\uff0c\u4e14\u4e0d\u540c x \u5f97\u5230\u4e0d\u540c\u7684 y\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_47","title":"\u533a\u5757\u94fe\u5e94\u7528","text":"<p>\u76ee\u7684\uff1a\u8ba9\u6570\u7ec4\u4e0d\u53ef\u7be1\u6539\u4e0d\u53ef\u66ff\u4ee3 \u6570\u636e\u7ec4\u7ec7\u548c\u7ba1\u7406\u6280\u672f\uff1a\u6570\u636e\u5e93\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u533a\u5757\u94fe\uff08\u589e\u67e5\uff09 \u6838\u5fc3\u601d\u60f3\uff1a</p> <ol> <li>\u628a\u6570\u636e\u653e\u5728\u591a\u4e2a\u5730\u65b9\uff08\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f\uff09\uff0c\u591a\u4e2a\u5907\u4efd</li> <li>\u628a\u6570\u636e\u524d\u540e\u5173\u8054</li> </ol> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u8bb0\u5f55\u7684\u6240\u6709\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u533a\u5757\u3002 \u5c06\u5404\u4e2a\u533a\u5757\u4e32\u8054\uff0c\u5f62\u6210\u533a\u5757\u94fe\u3002 \u600e\u4e48\u5c06\u6570\u636e\u4e32\u8054\uff1f\u7528\u54c8\u5e0c\u51fd\u6570\u3002 \u7ed9\u6bcf\u4e2a\u533a\u5757\u7f16\u53f7\uff0c\u524d\u4e00\u4e2a\u7f16\u53f7\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e0b\u4e00\u4e2a\u7f16\u53f7\u3002 \uff08\u54c8\u5e0c\u503c\u53ef\u4ee5\u4f5c\u4e3a index\uff0c\u8fd9\u91cc\u4f5c\u4e3a\u6570\u636e\u7684\u6307\u7eb9\uff09</p> <p>\u4f5c\u7528\uff1a\u5efa\u7acb\u53ef\u4fe1\u673a\u5236</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-fourteen","title":"Class Fourteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_48","title":"\u6bd4\u7279\u5e01","text":"<p>\u53d1\u884c:\u6bd4\u7279\u5e01\u603b\u91cf\u4e00\u5b9a,\u6bcf\u5341\u5206\u949f\u53d1\u884c,\u6bcf\u56db\u5e74\u6bcf\u5341\u5206\u949f\u53d1\u884c\u91cf\u51cf\u534a \u6d41\u901a</p> <ul> <li>\u600e\u4e48\u8bc1\u660e\u662f\u81ea\u5df1\u7684? \u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93,\u6bcf\u4e2a\u4eba\u6709\u8d26\u53f7\u548c\u5bc6\u7801</li> <li>\u600e\u4e48\u9632\u6b62\"\u53cc\u82b1\"? \u6bcf\u4e2a\u8d26\u53f7\u8bb0\u5f55\u4f59\u989d</li> </ul> <p>\u6bd4\u7279\u5e01\u4e0d\u53d7\u7edf\u4e00\u63a7\u5236,\u4e0d\u80fd\u5efa\u7acb\u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93.\u91c7\u7528\u5206\u5e03\u5f0f\u8d26\u672c. \u89e3\u51b3\u5206\u5e03\u5f0f\u8d26\u672c\u4e4b\u95f4\u53ef\u80fd\u4e0d\u540c\u7684\u95ee\u9898:\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u9009\u62e9\u4e00\u4e2a\u4eba\u8bb0\u5f55,\u5c06\u8d26\u672c\u590d\u5236\u540e\u5206\u53d1,\u540e\u7eed\u53ef\u8865\u5145</p> <p>\u65b0\u4ea4\u6613\u521b\u5efa -&gt; \u4ea4\u6613\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u9a8c\u8bc1 -&gt; \u9a8c\u8bc1\u7ed3\u679c\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u5199\u5165\u8d26\u672c</p> <p>\u8bb0\u8d26\u6709\u597d\u5904,\u7ade\u4e89\u8ba1\u7b97\u901f\u5ea6.\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u503c,\u8ba1\u7b97\u8f93\u5165\u503c.(\u5bb9\u6613\u5f62\u6210\u5171\u8bc6) \u77ff\u673a:\u4e13\u95e8\u8ba1\u7b97\u8f93\u5165\u503c\u7684\u8ba1\u7b97\u673a \u77ff\u6c60:\u591a\u53f0\u77ff\u673a \u6316\u77ff:\u731c\u8f93\u5165\u503c</p> <p>\u600e\u4e48\u63a7\u5236\u8f93\u51fa\u503c y? y \u6709 128 \u4f4d.\u5982\u679c 128 \u4f4d\u5168\u90e8\u968f\u673a\u751f\u6210,\u6700\u5927\u6709 2^128 \u79cd,\u8ba1\u7b97\u65f6\u95f4\u5f88\u957f. \u6839\u636e\u6700\u8fd1\u6316\u77ff\u7684\u8ba1\u7b97\u673a\u6570\u91cf,\u9650\u5236 y \u4e2d 0 \u7684\u4e2a\u6570,\u4fdd\u8bc1 10 \u5206\u949f\u5de6\u53f3\u80fd\u6316\u5230.</p> <p>\u667a\u80fd\u5408\u7ea6:\u666e\u901a\u7a0b\u5e8f,\u7528\u6765\u6267\u884c\u5408\u540c\u89c4\u5b9a\u7684\u67d0\u4e9b\u6761\u6b3e. \u95ee\u9898:\u7a0b\u5e8f\u5728\u4fe1\u606f\u7a7a\u95f4,\u600e\u4e48\u5224\u65ad\u7269\u7406\u7a7a\u95f4\u4e2d\u662f\u5426\u5b8c\u6210\u4e1a\u52a1? \u89e3\u51b3:\u627e\u4e2d\u95f4\u5a92\u4ecb,\u8bc1\u660e\u4e1a\u52a1\u5b8c\u6210. \u9632\u6b62\u4e2d\u95f4\u5a92\u4ecb\u9020\u5047:\u5c06\u6570\u636e\u4f20\u5165\u533a\u5757\u94fe</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_49","title":"\u54c8\u5e0c","text":"<p>\u54c8\u5e0c\u51fd\u6570:\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4,\u54c8\u5e0c\u503c\u4ee3\u8868\u4f4d\u7f6e(\u533a\u5757\u94fe\u4e2d\u4ee3\u8868\u6307\u7eb9) \u5e94\u7528: \u5b57\u5178,\u641c\u7d22\u5f15\u64ce({\u952e:\u503c}) \u641c\u7d22\u5f15\u64ce:\u7528\u722c\u866b\u722c\u53d6\u6240\u6709\u7f51\u9875\u4fe1\u606f,\u5c06\u9875\u9762\u770b\u6210\u8282\u70b9,\u6784\u6210\u5de8\u5927\u7684\u56fe -&gt; \u53ef\u80fd\u7531\u4e0d\u540c\u8def\u5f84\u5230\u8fbe\u540c\u4e00\u4e2a\u7f51\u9875,\u9700\u8981\u5bf9\u7f51\u9875\u505a\u6807\u8bb0(URL \u5730\u5740),\u5b58\u50a8\u5230 URL \u96c6\u5408 -&gt; \u76f4\u63a5\u6bd4\u8f83 URL \u5219\u65f6\u95f4\u957f,\u5229\u7528\u54c8\u5e0c\u51fd\u6570,\u8ba1\u7b97 URL \u7684\u54c8\u5e0c\u503c</p> <p>\u5012\u6392\u7d22\u5f15:\u6309\u5173\u952e\u8bcd\u5b58\u50a8. \u67e5\u8be2\u65f6\u627e\u4e0d\u540c\u5173\u952e\u8bcd\u7684\u4ea4\u96c6</p> <p>\u54c8\u5e0c\u8868:\u8ba1\u7b97\u51fa f(x)\u653e\u5230\u4e00\u884c identifier density : n/T (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u7b97\u51fa\u7684\u503c\u7684\u6240\u6709\u53ef\u80fd\u503c\u7684\u603b\u6570) loading density : n/(sb) (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / (slots * buckets))</p> <p>collision : \u4e0d\u540c\u8f93\u5165\u503c\u6709\u76f8\u540c\u8f93\u51fa overflow : \u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570\u5927\u4e8e\u7a7a\u95f4\u603b\u6570(\u540c\u4e00\u8f93\u51fa\u503c\u5bf9\u5e94\u7684\u8f93\u5165\u503c\u6570\u91cf &gt; slots)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_50","title":"\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1","text":"<p>\u8981\u6c42:: \u5bb9\u6613\u8ba1\u7b97,\u8f93\u51fa\u5747\u5300</p> <p>\u6574\u6570:</p> <ol> <li>\u6c42\u4f59\u6cd5: x -&gt; x%p,\u4e00\u822c\u53d6 p \u4e3a\u7d20\u6570</li> <li>\u6298\u53e0\u6cd5: \u5c06\u957f\u6574\u6570\u6620\u5c04\u4e3a\u4e24\u4f4d\u6570,\u5219\u4e24\u4f4d\u4e00\u6bb5\u518d\u76f8\u52a0,\u4e2d\u95f4\u53ef\u4ee5\u98a0\u5012\u7b49</li> <li>\u5e73\u65b9\u53d6\u4e2d: \u5e73\u65b9\u540e\u53d6\u4e2d\u95f4\u7684\u4e00\u6bb5,\u4f7f\u7ed3\u679c\u80fd\u88ab\u591a\u4f4d\u5f71\u54cd</li> <li>\u5206\u6790\u6cd5</li> </ol> <p>\u5b57\u7b26\u4e32: \u5b57\u7b26\u4e32\u600e\u4e48\u53d8\u6210\u6570\u636e?</p> <ol> <li>\u76f8\u52a0\u6c42\u4f59\u6570. \u9632\u6b62\u8f93\u51fa\u503c\u96c6\u4e2d\u5728\u8f83\u5c0f\u503c,\u53ef\u4ee5<code>str[0]+str[1]*27+str[2]*27*27...</code>.(\u7528 32 \u4ee3\u66ff 27 \u53ef\u52a0\u5feb\u8ba1\u7b97,\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u4e58\u4e00\u6b21,\u6bcf\u6b21\u52a0\u65b0\u7684\u503c\u518d\u79fb\u4f4d)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_51","title":"\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","text":"<ol> <li>seperate chaining \u94fe\u5730\u5740\u6cd5</li> </ol> C<pre><code>struct HashTbl {\n  int tableSize;\n  List *theList;\n};\n</code></pre> <p><code>theList</code>\u4e2d\u5b58\u50a8\u5e26\u5934\u94fe\u8868</p> <ol> <li>open address \u5f00\u653e\u5730\u5740\u6cd5 <code>h(k) + f(i)</code>,\u51b2\u7a81\u65f6<code>i++</code>\u6216<code>+-i</code>,f(i)\u4e3a\u7ebf\u6027\u65f6\u79f0\u4e3a\u7ebf\u6027\u63a2\u6d4b    \u5220\u9664\u65f6\u53ef\u80fd\u5224\u65ad\u9519\u8bef,\u6545\u5220\u9664\u65f6\u8981\u505a\u6807\u8bb0    average search time \u5e73\u5747\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6240\u6709 search time \u76f8\u52a0\u6c42\u5e73\u5747    \u5e73\u5747\u4e0d\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6309\u5165\u53e3\u5206\u7c7b</li> </ol> <p>\u7ebf\u6027\u63a2\u6d4b\u51b2\u7a81\u591a,\u6362\u6210\u4e8c\u6b21\u63a2\u6d4b,\u4f9d\u6b21\u8c03\u6574\u4e3a<code>f(i)=i^2</code>, <code>f(i)=i^3</code>..., \u8d85\u51fa\u8303\u56f4\u65f6\u6c42\u6a21\u8fd4\u56de    \u4e8c\u6b21\u63a2\u6d4b\u53ef\u80fd\u53d1\u751f\u4e8c\u6b21\u805a\u96c6    \u7f3a\u70b9:\u4e0d\u4e00\u5b9a\u80fd\u63a2\u6d4b\u5230\u7a7a\u4f4d</p> <ol> <li>\u516c\u5171\u533a\u57df    \u51b2\u7a81\u65f6\u5f00\u8f9f\u7edf\u4e00\u7684\u65b0\u533a\u57df\uff0c\u5b58\u653e\u51b2\u7a81\u503c\u3002\u6bcf\u6b21\u8bbf\u95ee\u65f6\u5148\u770b\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u7a7a\u8868\u793a\u8981\u8bbf\u95ee\u7684\u6570\u4e0d\u5728\uff1b\u6709\u6570\u518d\u770b\u65b0\u533a\u57df\uff0c\u8bbf\u95ee\u8981\u8bbf\u95ee\u7684\u503c\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_52","title":"\u8865\u5145","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#loading-density","title":"Loading Density \u662f\u4ec0\u4e48","text":"<p>1. \u5b9a\u4e49 Loading Density\uff08\u4e5f\u79f0\u4e3a Load Factor\uff0c\u88c5\u8f7d\u56e0\u5b50\uff09\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5df2\u5b58\u50a8\u5143\u7d20\u6570\u91cf\u4e0e\u54c8\u5e0c\u8868\u603b\u5bb9\u91cf\u7684\u6bd4\u503c\uff1a [ \\text{Loading Density} = \\frac{\\text{\u5df2\u63d2\u5165\u7684\u5143\u7d20\u6570\u91cf}}{\\text{\u54c8\u5e0c\u8868\u7684\u603b\u69fd\u4f4d\u6570\uff08Size\uff09}} ]</p> <p>2. \u4f5c\u7528</p> <ul> <li>\u8861\u91cf\u7a7a\u95f4\u5229\u7528\u7387\uff1a\u503c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u54c8\u5e0c\u8868\u8d8a\u201c\u6ee1\u201d\u3002</li> <li>\u5f71\u54cd\u6027\u80fd\uff1a</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\u8d8a\u9ad8\uff0c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u8d8a\u5927\uff0c\u67e5\u627e/\u63d2\u5165\u64cd\u4f5c\u53ef\u80fd\u53d8\u6162\u3002</li> <li>\u901a\u5e38\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff08\u5982 0.7\uff09\uff0c\u8d85\u8fc7\u65f6\u89e6\u53d1\u6269\u5bb9\uff08Rehashing\uff09\u3002</li> </ul> <p>3. \u4e0e\u51b2\u7a81\u7684\u5173\u7cfb</p> <ul> <li>\u4f4e\u88c5\u8f7d\u5bc6\u5ea6\uff08&lt;0.5\uff09\uff1a\u51b2\u7a81\u6982\u7387\u4f4e\uff0c\u4f46\u7a7a\u95f4\u6d6a\u8d39\u8f83\u591a\u3002</li> <li>\u9ad8\u88c5\u8f7d\u5bc6\u5ea6\uff08&gt;0.7\uff09\uff1a\u51b2\u7a81\u6982\u7387\u663e\u8457\u589e\u52a0\uff0c\u7ebf\u6027\u63a2\u6d4b\u7b49\u65b9\u6cd5\u7684\u6027\u80fd\u4e0b\u964d\u3002</li> </ul> <p>\u5e38\u89c1\u7b56\u7565\uff1a</p> <ul> <li>\u5f53\u88c5\u8f7d\u5bc6\u5ea6\u8d85\u8fc7\u9608\u503c\uff08\u5982 0.75\uff09\uff0c\u54c8\u5e0c\u8868\u4f1a\u6269\u5bb9\uff08\u901a\u5e38\u52a0\u500d\u5927\u5c0f\uff09\uff0c\u5e76\u91cd\u65b0\u54c8\u5e0c\u6240\u6709\u5143\u7d20\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-fifteen","title":"Class Fifteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_53","title":"\u54c8\u5e0c\u52a8\u6001\u67e5\u627e\u95ee\u9898","text":"<ol> <li>\u67e5\u627e\u6811\uff0c\u53ea\u8981\u89e3\u51b3\u6811\u7684\u5e73\u8861\u7684\u95ee\u9898</li> <li>\u8ba1\u7b97\uff0c\u8bbe\u8ba1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09</li> </ol> <p>\u907f\u514d\u51b2\u7a81\uff1a</p> <ol> <li>\u727a\u7272\u7a7a\u95f4\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</li> </ol> <p>\u5f00\u653e\u5730\u5740\u6cd5,\u4e8c\u6b21\u63a2\u6d4b Thm. \u5982\u679c\u6ee1\u8db3:</p> <ol> <li>\u6c42\u4f59\u65f6\u7528\u7d20\u6570</li> <li>\u81f3\u5c11\u6709\u4e00\u534a\u4f4d\u7f6e\u7a7a    \u5219\u53ef\u4ee5\u8bc1\u660e\u6709\u65b0\u7684\u5143\u7d20,\u5219\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e.</li> </ol> <p>Pf:\u9996\u5148\u8bc1\u660e,\u5982\u679c i,j \u6ee1\u8db3\\(0&lt;i\\neq j\\le tablesize/2\\), \u5219</p> <p>$(h(x)+i^2)\\% tablesize \\neq (h(x)+j^2)\\%tablesize $.</p> C<pre><code>position find (int key, hash H) {\n  position pos;\n  int colliNum;\n  pos = hash(key, H.size());\n  while (H[pos]\u975e\u7a7a &amp;&amp; H[pos].Element != key) {\n    pos += 2 * ++colliNum - 1;   // \u5c06\u5e73\u65b9\u53d8\u4e3a\u4e582\uff0c\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\n    if (pos &gt; H.size())\n      pos -= H.size();\n  }\n  return pos;\n}\n</code></pre> <p>f(i)\u4e5f\u53ef\u4ee5\u65f6\u54c8\u5e0c\u51fd\u6570(double hash \u65b9\u6cd5) \u793a\u4f8b\uff1a<code>f(i) = i * hash(key)</code>, <code>f(i) = R - i * hash(key)</code></p> <p>Rehashing \u65b9\u6cd5 \u5c06\u539f\u6765\u7684\u54c8\u5e0c\u8868\u6269\u5927\u4e00\u500d\uff0c\u5c06\u539f\u6765\u5176\u4e2d\u6240\u6709\u5143\u7d20\u91cd\u65b0\u7b97\u4e00\u904d \u4ec0\u4e48\u65f6\u5019\u9700\u8981 rehash\uff1f\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u63d2\u5165\u65f6\u51b2\u7a81\u591a\uff0c\u8bbe\u7f6e\u51e0\u6b21\u63d2\u5165\u4e2d\u51b2\u7a81\u5728\u51e0\u6b21\u4ee5\u4e0a\uff0c\u8fdb\u884c rehash</li> <li>\u8868\u7684\u88c5\u8f7d\u7387\u8d85\u8fc7\u8bbe\u5b9a\u65f6 rehash</li> <li>\u63d2\u5165\u65f6\u627e\u4e0d\u5230\u4f4d\u7f6e</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_54","title":"\u53e6\u5916","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_55","title":"\u5806\u5408\u5e76","text":"<p>\u6bcf\u6b21\u53d6\u4e24\u6811\u9876\u70b9\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u5408\u6210\u540e\u9876\u70b9\uff0c\u4e00\u9897\u5b50\u6811\u76f4\u63a5\u4f5c\u4e3a\u5408\u5e76\u540e\u9876\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u548c\u5408\u5e76\u524d\u7684\u53e6\u4e00\u4e2a\u6811\u5408\u5e76\uff08\u9012\u5f52\uff09 \u6700\u5de6\u5806\uff1a\u4e0d\u7ef4\u62a4\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u6027\uff0c\u5168\u90e8\u504f\u5411\u5de6\u8fb9</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_56","title":"\u9700\u8981\u719f\u7ec3\u638c\u63e1\u7684\u7a0b\u5e8f","text":"<p>\u51fa\u5165\u6808\uff0c\u51fa\u5165\u961f\u5217\uff0c\u4e8c\u53c9\u6811\u7684\u5de6\u4e2d\u53f3\u5c42\u6b21\u904d\u5386\uff0c\u975e\u9012\u5f52\u904d\u5386\uff0c\u5806\u7684\u63d2\u5165\u5220\u9664\uff0c\u67e5\u627e\u6811\u7684\u67e5\u627e\u63d2\u5165\u5220\u9664\uff0c \u56fe\u7684 bfs dfs\uff0c\u6700\u77ed\u8def\u5f84\uff0c\u62d3\u6251\u6392\u5e8f\uff0c \uff08\u68ee\u6797\u7684\u904d\u5386\uff09</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_57","title":"\u8bfe\u4e0a\u590d\u4e60","text":"<p>\u7ebf\u6027\u8868 \u987a\u5e8f\u5b58\u50a8\uff1a\u6570\u7ec4 \u94fe\u5f0f\u5b58\u50a8\uff1a\u94fe\u8868 \u6570\u7ec4\u4e0e\u94fe\u8868\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9 \u94fe\u8868\u7684\u64cd\u4f5c \u5178\u578b\u4e60\u9898\uff1a\u5b9e\u73b0\u5355\u94fe\u8868\u7684\u539f\u5730\u9006\u8f6c\uff08\u5faa\u73af\u4e0d\u53d8\u5f0f\uff09\uff0c \u5206\u522b\u7528\u4e00\u5143\u591a\u9879\u5f0f\u7684\u4e24\u79cd\u8868\u793a\u5b9e\u73b0\u591a\u9879\u5f0f\u52a0\u6cd5</p> <p>\u5806\u6808 \u987a\u5e8f\u6808\uff1a\u6570\u7ec4\uff0ctop++, top-- lianzhan\uff1a\u94fe\u8868\uff0ctop \u5373\u5934\u6307\u9488 \u5e94\u7528\uff1a\u62ec\u53f7\u5339\u914d\u68c0\u9a8c\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0cn \u8282\u6c49\u8bfa\u5854\u95ee\u9898\uff08\u5178\u578b\u9012\u5f52\uff09\uff0c\u8ff7\u5bab\u95ee\u9898 \u5feb\u901f\u6392\u5e8f\u9012\u5f52\u7528\u5806\u6808\u600e\u4e48\u5b9e\u73b0\uff1f\u6bcf\u6b21\u9012\u5f52\u5076\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4ee3\u8868\u8d77\u70b9\u7ec8\u70b9\u5927\u5c0f\uff0c\u4e00\u79cd\u65b9\u6cd5\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\u4ece\u5806\u6808\u4e2d\u629b\u51fa\u5143\u7d20\uff0c\u62c6\u6210\u4e24\u4e2a\u518d\u538b\u5230\u5806\u6808\u4e2d \u53ef\u4ee5\u628a\u6240\u6709\u9012\u5f52\u7528\u5faa\u73af\u5b9e\u73b0\uff0c\u6838\u5fc3\u662f\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d \u8ff7\u5bab\u95ee\u9898\uff1a\u7528\u6570\u7ec4\u8868\u793a\u8ff7\u5bab\uff0c0 \u8868\u793a\u901a\u8def\uff0c1 \u8868\u793a\u5899\u3002\u4e00\u76f4\u6cbf\u7740\u67d0\u4e2a\u65b9\u5411\u8d70\u3002\u6bcf\u6b21\u5c06\uff08\u4f4d\u7f6e\u5750\u6807\uff0c\u65b9\u5411\u9009\u62e9\uff09\u538b\u6808\uff0c\u56de\u5934\u8868\u793a\u5148\u4e0d\u65ad\u538b\u6808\u518d\u4e0d\u65ad\u629b\u51fa\u3002\u56de\u6eaf\u6cd5\u3002</p> <p>\u4e24\u4e2a\u5806\u6808\u5b9e\u73b0\u961f\u5217 \u5165\u961f\uff1a \u5982\u679c\u6808 1 \u6ee1\u4f46\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u4e2d\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u5c06\u65b0\u5143\u7d20\u653e\u5165\u6808 1 \u5982\u679c\u6808 1 \u6709\u5143\u7d20\u4f46\u6ca1\u6ee1\uff0c\u5c06\u6808 2 \u5012\u56de\u6808 1\uff0c\u518d\u65b0\u5143\u7d20\u5165\u6808 \u51fa\u961f\uff1a \u5982\u679c\u6808 2 \u6709\u5143\u7d20\uff0c\u76f4\u63a5\u629b\u51fa \u5982\u679c\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u6240\u6709\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u629b\u51fa</p> <p>\u518d\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u5b9e\u73b0\u7a7a\u95f4\u5171\u4eab\uff1a \u4e24\u5934\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u653e\u3002\u6ee1\u7684\u5224\u5b9a\uff1a<code>top_right == top_left + 1</code></p> <p>\u6811\uff0clevel \u548c degree \u4e2d\u5e8f\u904d\u5386\u65f6\uff0cn \u5728 m \u524d\u7684\u6761\u4ef6\u662f\uff1an \u5728 m \u7684\u5de6\u65b9 \u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u5b9a\u4e49\u672a\u6811\u7684\u76f4\u5f84\u3002\u7ed9\u5b9a\u6811\u6c42\u76f4\u5f84</p> <p>\u7ed9\u5b9a\u94fe\u8868\u8868\u793a\u7684\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811</p> <p>\u5de6\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u53f3\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u6839\u8282\u70b9\u6bd4\u5de6\u513f\u5b50\u6253\uff0c\u6bd4\u53f3\u513f\u5b50\u5c0f\uff0c\u662f\u4e0d\u662f\u67e5\u627e\u6811\uff1f \u4e0d\u662f \u5de6\u8fb9\u662f\u5806\uff0c\u53f3\u8fb9\u662f\u5806\uff0c\u6839\u6bd4\u5de6\u53f3\u513f\u5b50\u5927\uff0c\u662f\u4e0d\u662f\u5806\uff1f \u662f</p> <p>\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u53ef\u4e0d\u53ef\u80fd\u662f\u67e5\u627e\u987a\u5e8f \u521d\u59cb\u4e3a\u8d1f\u65e0\u7a77\u5230\u6b63\u65e0\u7a77\u3002\u6bcf\u6b21\u78b0\u5230\u5c0f\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u5de6\u8fb9\u754c\uff1b\u78b0\u5230\u5927\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u53f3\u8fb9\u754c\u3002</p> <p>\u6811\u7684\u53cc\u4eb2\u8868\u793a\u6cd5\u548c\u5b69\u5b50\u8868\u793a\u6cd5\uff0c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\u3002</p> <p>\u56fe\u7684\u8868\u793a\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u90bb\u63a5\u8868\uff0c\u9006\u90bb\u63a5\u8868\uff0c\u5341\u5b57\u94fe\u8868\uff08\u6709\u5411\u56fe\uff09</p> <p>\u7528 Floyd \u7b97\u6cd5\u5224\u65ad\u56fe\u662f\u5426\u6709\u56de\u8def\uff1f Floyd\uff1a\u90bb\u63a5\u77e9\u9635\u7684\u5e42\u76f8\u52a0\u3002\u68c0\u67e5\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\uff0c\u5982\u679c\u5bf9\u89d2\u7ebf\u4e0a\u6709\u975e\u96f6\u5143\uff0c\u5219\u6709\u73af\u3002</p> <p>\u7ed9\u5b9a\u6751\u5e84\u548c\u4e0d\u540c\u6751\u5e84\u95f4\u9053\u8def\u7684\u957f\u5ea6\u3002\u5bfb\u627e\u4f4d\u7f6e\uff0c\u4f7f\u5176\u5230\u5404\u4e2a\u6751\u5e84\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u3002</p> <p>\u54c8\u5e0c\uff0c\u6c42\u7b49\u6982\u7387\u6210\u529f\u4e0e\u4e0d\u6210\u529f\u67e5\u627e\u7684\u5e73\u5747\u67e5\u627e\u6b21\u6570\u3002</p> <p>\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u548c\u54c8\u5e0c\u7ed3\u679c\uff0c\u6c42\u6700\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff1a\u6784\u5efa\u6709\u5411\u56fe\uff0c\u6c42\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\u5217</p> <p>\u6392\u5e8f\u7684\u8f85\u52a9\u7a7a\u95f4 \u5806\u6392\u5e8f\uff1a\u65e0\u8f85\u52a9\u7a7a\u95f4 \u5feb\u901f\u6392\u5e8f\uff1a\u9012\u5f52\u9700\u8981\u6808\u7a7a\u95f4 \u5f52\u5e76\u6392\u5e8f\uff1a\u989d\u5916\u9700\u8981\u6570\u7ec4</p> <p>\u6392\u5e8f\u7b97\u6cd5\u662f\u5426\u7a33\u5b9a\uff1a\u9700\u8981\u4ea4\u6362\u7684\u80af\u5b9a\u4e0d\u7a33\u5b9a</p> <p>\u5f88\u5927\u7684\u6570\u636e\uff0c\u5728\u4e0d\u5b8c\u5168\u6392\u5e8f\u7684\u524d\u63d0\u4e0b\u627e\u51fa\u524d m \u5c0f\u7684\u5143\u7d20\uff1a \u5efa\u7acb\u5927\u5c0f\u4e3a m \u7684\u5806\uff0c\u5c06\u6240\u6709\u5143\u7d20\u4f9d\u6b21\u63d2\u5165</p> <p>\u7528\u5feb\u901f\u6392\u5e8f\u627e\u5230\u7b2c k \u5927\u7684\u5143\u7d20</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u975e\u9012\u5f52\u7b97\u6cd5\uff1f \u5c06\u9012\u5f52\u8f6c\u5316\u4e3a\u5faa\u73af\uff1f</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_58","title":"\u4e00\u4e9b\u4ee3\u7801","text":"<p>BST.c</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElementType;\ntypedef struct TNode* Position;\ntypedef Position BinTree; /* \u4e8c\u53c9\u6811\u7c7b\u578b */\nstruct TNode {            /* \u6811\u7ed3\u70b9\u5b9a\u4e49 */\n    ElementType Data;     /* \u7ed3\u70b9\u6570\u636e */\n    BinTree Left;         /* \u6307\u5411\u5de6\u5b50\u6811 */\n    BinTree Right;        /* \u6307\u5411\u53f3\u5b50\u6811 */\n};\n\nPosition Find(ElementType X, BinTree BST) {\n    if (!BST)\n        return NULL; /*\u67e5\u627e\u5931\u8d25*/\n    if (X &gt; BST-&gt;Data)\n        return Find(X, BST-&gt;Right); /*\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else if (X &lt; BST-&gt;Data)\n        return Find(X, BST-&gt;Left); /*\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else                           /* X == BST-&gt;Data */\n        return BST;                /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n}\n\nPosition IterFind(ElementType X, BinTree BST) {\n    while (BST) {\n        if (X &gt; BST-&gt;Data)\n            BST = BST-&gt;Right; /*\u5411\u53f3\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else if (X &lt; BST-&gt;Data)\n            BST = BST-&gt;Left; /*\u5411\u5de6\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else                 /* X == BST-&gt;Data */\n            return BST;      /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n    }\n    return NULL; /*\u67e5\u627e\u5931\u8d25*/\n}\n\nPosition FindMin(BinTree BST) {\n    if (!BST)\n        return NULL; /*\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd4\u56deNULL*/\n    else if (!BST-&gt;Left)\n        return BST; /*\u627e\u5230\u6700\u5de6\u53f6\u7ed3\u70b9\u5e76\u8fd4\u56de*/\n    else\n        return FindMin(BST-&gt;Left); /*\u6cbf\u5de6\u5206\u652f\u7ee7\u7eed\u67e5\u627e*/\n}\n\nPosition FindMax(BinTree BST) {\n    if (BST)\n        while (BST-&gt;Right) /*\u6cbf\u53f3\u5206\u652f\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u6700\u53f3\u53f6\u7ed3\u70b9*/\n            BST = BST-&gt;Right;\n    return BST;\n}\n\nBinTree Insert(BinTree BST, ElementType X) {\n    if (!BST) { /* \u82e5\u539f\u6811\u4e3a\u7a7a\uff0c\u751f\u6210\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u641c\u7d22\u6811 */\n        BST = (BinTree)malloc(sizeof(struct TNode));\n        BST-&gt;Data = X;\n        BST-&gt;Left = BST-&gt;Right = NULL;\n    } else { /* \u5f00\u59cb\u627e\u8981\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e */\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Insert(BST-&gt;Left, X); /*\u9012\u5f52\u63d2\u5165\u5de6\u5b50\u6811*/\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Insert(BST-&gt;Right, X); /*\u9012\u5f52\u63d2\u5165\u53f3\u5b50\u6811*/\n        /* else X\u5df2\u7ecf\u5b58\u5728\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a */\n    }\n    return BST;\n}\n\nBinTree Delete(BinTree BST, ElementType X) {\n    Position Tmp;\n    if (!BST)\n        printf(\"\u8981\u5220\u9664\u7684\u5143\u7d20\u672a\u627e\u5230\");\n    else {\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Delete(BST-&gt;Left, X); /* \u4ece\u5de6\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Delete(BST-&gt;Right, X); /* \u4ece\u53f3\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else {                                  /* BST\u5c31\u662f\u8981\u5220\u9664\u7684\u7ed3\u70b9 */\n            /* \u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u6709\u5de6\u53f3\u4e24\u4e2a\u5b50\u7ed3\u70b9 */\n            if (BST-&gt;Left &amp;&amp; BST-&gt;Right) {\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5c0f\u7684\u5143\u7d20\u586b\u5145\u5220\u9664\u7ed3\u70b9 */\n                Tmp = FindMin(BST-&gt;Right);\n                BST-&gt;Data = Tmp-&gt;Data;\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u6700\u5c0f\u5143\u7d20 */\n                BST-&gt;Right = Delete(BST-&gt;Right, BST-&gt;Data);\n            } else { /* \u88ab\u5220\u9664\u7ed3\u70b9\u6709\u4e00\u4e2a\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                Tmp = BST;\n                if (!BST-&gt;Left) /* \u53ea\u6709\u53f3\u5b69\u5b50\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                    BST = BST-&gt;Right;\n                else /* \u53ea\u6709\u5de6\u5b69\u5b50 */\n                    BST = BST-&gt;Left;\n                free(Tmp);\n            }\n        }\n    }\n    return BST;\n}\n</code></pre> <p>\u8868\u8fbe\u5f0f\u6811</p> C<pre><code>/*\n\u4e8c\u5143\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8054\u7cfb\u5230\u4e8c\u53c9\u6811:\n\u4ee5\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\u4f5c\u4e3a\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u4ee5\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u975e\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u5176\u4e24\u68f5\u5b50\u6811\u662f\u5b83\u7684\u8fd0\u7b97\u5bf9\u8c61,\n\u5b50\u6811\u53ef\u4ee5\u662f\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u590d\u6742\u8868\u8fbe\u5f0f.\n\n\u7b97\u5f0f\u8868\u8fbe\u5f0f\u548c\u8868\u8fbe\u5f0f\u6811\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\n    \u8868\u8fbe\u5f0f\u6811\u7684\u5148\u6839\u904d\u5386\uff1a\u524d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u4e2d\u6839\u904d\u5386\uff1a\u4e2d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u540e\u6839\u904d\u5386\uff1a\u540e\u7f00\u8868\u8fbe\u5f0f\n\n\u6784\u5efa\u8868\u8fbe\u5f0f\u6811:\n1. \u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u4e2d\u7f00\u5f62\u5f0f\uff1a(4+1*(5-2))-6/3\n2. \u9996\u5148\u5c06\u6bcf\u4e2a\u8fd0\u7b97\u52a0\u4e0a\u62ec\u53f7\uff0c\u533a\u5206\u4f18\u5148\u7ea7\uff0c\u5f97\u5230(4+(1*(5-2)))-(6/3)\n3. \u62ec\u53f7\u5916\u7684-\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c(4+(1*(5-2)))\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c(6/3)\u4f5c\u4e3a\u53f3\u5b50\u6811\uff1b\n4. \u9012\u5f52\u7684\u8f6c\u63624+(1*(5-2))\uff0c+\u6700\u4e3a\u6839\u8282\u70b9\uff0c4\u662f\u5de6\u5b50\u6811\uff0c\n    (1*(5-2))\u662f\u53f3\u5b50\u6811\u3002*\u662f\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c1\u662f\u5de6\u5b50\u6811\uff0c(5-2)\u662f\u53f3\u5b50\u6811\u3002\n    \u6700\u540e\u8ba1\u7b97(5-2)\uff0c-\u662f\u6839\u8282\u70b9\uff0c5\u662f\u5de6\u5b50\u6811\uff0c2\u662f\u53f3\u5b50\u6811\u3002\n\u6784\u9020\u597d\u8868\u8fbe\u5f0f\u6811\u4e4b\u540e\uff0c\u524d\u7f00\u8868\u8fbe\u5f0f\u548c\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53ef\u6839\u636e\u5148\u6839\u904d\u5386\u548c\u540e\u6839\u904d\u5386\u5f97\u5230\u3002\n    \u524d\u7f00\u8868\u8fbe\u5f0f\uff1a- + 4 * 1 - 5 2 / 6 3\n    \u540e\u7f00\u8868\u8fbe\u5f0f\uff1a4 1 5 2 - * + 6 3 / -\n*/\n\n#include &lt;stdio.h&gt;\n#define MAXN 1000\n\nint lch[MAXN], rch[MAXN];\nchar op[MAXN];\nint nc = 0;  // \u7ed3\u70b9\u6570\n\nint build_tree(char* s, int x, int y) {\n    int i, c1 = -1, c2 = -1, p = 0;\n    int u;\n    if (y - x == 1)  // \u4ec5\u4e00\u4e2a\u5b57\u7b26\uff0c\u5efa\u7acb\u5355\u72ec\u7ed3\u70b9\n    {\n        u = ++nc;\n        lch[u] = rch[u] = 0;\n        op[u] = s[x];\n        return u;\n    }\n    for (i = x; i &lt; y; i++) {\n        switch (s[i]) {\n            case '(':\n                p++;\n                break;\n            case ')':\n                p--;\n                break;\n            case '+':\n            case '-':\n                if (!p)\n                    c1 = i;\n                break;\n            case '*':\n            case '/':\n                if (!p)\n                    c2 = i;\n                break;\n        }\n    }\n    if (c1 &lt; 0)\n        c1 = c2;  // \u627e\u4e0d\u5230\u62ec\u53f7\u5916\u7684\u52a0\u51cf\u53f7\uff0c\u5c31\u7528\u4e58\u9664\u53f7\n    if (c1 &lt; 0)\n        return build_tree(s, x + 1, y - 1);  // \u6574\u4e2a\u8868\u8fbe\u5f0f\u88ab\u4e00\u5bf9\u62ec\u53f7\u62ec\u8d77\u6765\n    u = ++nc;\n    lch[u] = build_tree(s, x, c1);\n    rch[u] = build_tree(s, c1 + 1, y);\n    op[u] = s[c1];\n    return u;\n}\n</code></pre> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811</p> C<pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u7ebf\u7d22\u4e8c\u53c9\u6811\ntypedef struct ThreadNode {\n    int data;\n    struct ThreadNode *left, *right;\n    int ltag, rtag;  // tag\u4e3a0\u8868\u793a\u6709\u5b69\u5b50\n} ThreadNode;\n\n// \u6307\u5411\u5f53\u524d\u8bbf\u95ee\u53d8\u91cf\u7684\u524d\u9a71\nThreadNode* pre = NULL;\n\nvoid visit(ThreadNode* node);\n\n// \u521d\u59cb\u5316\u8282\u70b9\nThreadNode* initNode() {\n    ThreadNode* Node = (ThreadNode*)malloc(sizeof(ThreadNode));\n    Node-&gt;left = NULL;\n    Node-&gt;right = NULL;\n    Node-&gt;ltag = 0;  // \u9ed8\u8ba4\u8282\u70b9\u6709\u5de6\u53f3\u5b69\u5b50\n    Node-&gt;rtag = 0;\n    return Node;\n}\n\n// \u63d2\u5165\u65b0\u8282\u70b9\u5e76\u8d4b\u503c\nbool insertNode(ThreadNode* node, int data, int contain) {\n    ThreadNode* newNode = initNode();\n    // contain\u4e3a0\u65f6\u5411\u5de6\u63d2\u5165,\u4e3a1\u65f6\u5411\u53f3\u63d2\u5165\n    if (node-&gt;left == NULL &amp;&amp; contain == 0) {\n        node-&gt;left = newNode;\n        newNode-&gt;data = data;\n        return true;\n    } else if (node-&gt;right == NULL &amp;&amp; contain == 1) {\n        node-&gt;right = newNode;\n        newNode-&gt;data = data;\n        return true;\n    }\n    free(newNode);\n    return false;\n}\n\n// \u8fb9\u4e2d\u5e8f\u904d\u5386\u8fb9\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid InThread(ThreadNode* node) {\n    if (node != NULL) {\n        InThread(node-&gt;left);   // \u904d\u5386\u5de6\u5b50\u6811\n        visit(node);            // \u8bbf\u95ee\u6839\u8282\u70b9\n        InThread(node-&gt;right);  // \u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n\n// \u521b\u5efa\u4e2d\u5e8f\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid createInThread(ThreadNode* node) {\n    // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf\n    pre = NULL;\n    InThread(node);\n    // \u6700\u540e\u4e00\u4e2a\u904d\u5386\u7684\u8282\u70b9\u7684\u540e\u7ee7\u8bbe\u7f6e\u4e3aNULL\n    pre-&gt;right = NULL;\n    pre-&gt;rtag = 1;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u5148\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* FirstNode(ThreadNode* node) {\n    // \u5f53\u4e3a\u7a7a\u65f6\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;ltag == 0) {\n        node = node-&gt;left;\n    }\n    return node;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u540e\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* LastNode(ThreadNode* node) {\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;rtag == 0) {\n        node = node-&gt;right;\n    }\n    return node;\n}\n\n// \u8bbf\u95ee\u6839\u8282\u70b9\nvoid visit(ThreadNode* node) {\n    if (node-&gt;left == NULL) {\n        node-&gt;left = pre;\n        node-&gt;ltag = 1;\n    }\n\n    if (pre != NULL &amp;&amp; pre-&gt;right == NULL) {\n        pre-&gt;right = node;\n        pre-&gt;rtag = 1;\n    }\n    pre = node;\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u540e\u7ee7\u8282\u70b9\nThreadNode* NextNode(ThreadNode* p) {\n    if (p-&gt;rtag == 0) {\n        return FirstNode(p-&gt;right);\n    }\n    return p-&gt;right;\n}\n\nvoid visit0(ThreadNode* thread_node) {\n    printf(\"%d  \", thread_node-&gt;data);\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u904d\u5386\nvoid Inorder(ThreadNode* rootNode) {\n    for (ThreadNode* p = FirstNode(rootNode); p != NULL; p = NextNode(p)) {\n        visit0(p);\n    }\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u524d\u9a71\u8282\u70b9\nThreadNode* BeforeNode(ThreadNode* p) {\n    if (p-&gt;ltag == 0) {\n        return LastNode(p-&gt;left);\n    }\n    return p-&gt;left;\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u9006\u5e8f\u904d\u5386\nvoid InorderNi(ThreadNode* rootNode) {\n    for (ThreadNode* p = LastNode(rootNode); p != NULL; p = BeforeNode(p)) {\n        visit0(p);\n    }\n}\n\nint main(void) {\n    // \u521d\u59cb\u5316\u4e8c\u53c9\u6811\n    ThreadNode* rootNode = initNode();\n    // \u6d4b\u8bd5\u6839\u8282\u70b9\u63d2\u5165\u6570\u636e\n    rootNode-&gt;data = 1;\n    printf(\"\u6839\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;data);\n    // \u6d4b\u8bd5\u5f80\u4e8c\u53c9\u6811\u521b\u5efa\u8282\u70b9\n    insertNode(rootNode, 2, 0);\n    insertNode(rootNode, 3, 1);\n    printf(\"\u7b2c\u4e8c\u5c42\u5de6\u8282\u70b9\u6570\u636e:%d\\n\u7b2c\u4e8c\u5c42\u53f3\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;left-&gt;data,\n           rootNode-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left, 4, 1);\n    insertNode(rootNode-&gt;right, 5, 1);\n    printf(\"\u7b2c\u4e09\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\u7b2c\u4e09\u5c42\u7b2c\u4e8c\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;data, rootNode-&gt;right-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left-&gt;right, 6, 0);\n    printf(\"\u7b2c\u56db\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u5de6\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;left-&gt;data);\n\n    createInThread(rootNode);\n\n    printf(\"\u4e2d\u5e8f\u904d\u5386:\\n\");\n    Inorder(rootNode);\n    printf(\"\\n\u9006\u4e2d\u5e8f\u904d\u5386:\\n\");\n    InorderNi(rootNode);\n}\n</code></pre>"},{"location":"notices/archive/2025/","title":"2025","text":""},{"location":"notices/category/%E8%A7%84%E8%8C%83/","title":"#\u89c4\u8303","text":""},{"location":"notices/category/%E6%8C%87%E5%8D%97/","title":"#\u6307\u5357","text":""}]}