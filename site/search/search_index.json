{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Abies's Notebook ~","text":"<ul> <li> <p>\u5feb\u901f\u5bfc\u822a</p> <ul> <li>Notebook\u7684\u4ecb\u7ecd </li> <li>Git\u81ea\u5b66\u7b14\u8bb0</li> </ul> </li> </ul> <ul> <li> <p>\u6d4b\u8bd5\u5361\u7247</p> <ul> <li>1</li> <li>2</li> </ul> </li> </ul>"},{"location":"%E4%BB%8B%E7%BB%8D/Notebook%E4%BB%8B%E7%BB%8D/","title":"Notebook\u4ecb\u7ecd","text":"<p>\u6765\u65e9\u5566\uff0c\u8fd8\u6ca1\u6709\u4ecb\u7ecd</p>"},{"location":"%E4%BB%8B%E7%BB%8D/Notebook%E4%BB%8B%E7%BB%8D/#1","title":"\u6807\u9898 1","text":""},{"location":"%E4%BB%8B%E7%BB%8D/Notebook%E4%BB%8B%E7%BB%8D/#2","title":"\u6807\u9898 2","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/","title":"Git","text":""},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#myproject","title":"\u7b80\u5316\u7248\u672c\uff1a\u4e0a\u4f20 MyProject \u9879\u76ee","text":"<ol> <li>\u5728\u672c\u5730\u521b\u5efa\u9879\u76ee\u5e76\u521d\u59cb\u5316 Git \u4ed3\u5e93</li> </ol> <pre><code>mkdir MyProject          # \u521b\u5efa\u9879\u76ee\u6587\u4ef6\u5939\ncd MyProject             # \u8fdb\u5165\u76ee\u5f55\ngit init                 # \u521d\u59cb\u5316 Git \u4ed3\u5e93\n</code></pre> <ol> <li>\u521b\u5efa\u6587\u4ef6\u5e76\u63d0\u4ea4</li> </ol> <pre><code>git add .                # \u6dfb\u52a0\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit commit -m \"&lt;comment&gt;\"\n</code></pre> <ol> <li>\u5728 GitHub \u4e0a\u65b0\u5efa\u4e00\u4e2a\u7a7a\u4ed3\u5e93</li> <li>\u5c06\u672c\u5730\u4ed3\u5e93\u8fde\u63a5\u5230 GitHub \u4ed3\u5e93</li> </ol> <pre><code>git remote add origin &lt;URL&gt;\n</code></pre> <ol> <li>\u63a8\u9001\u672c\u5730\u5185\u5bb9\u5230 GitHub</li> </ol> <pre><code>git branch -M main             # \u786e\u4fdd\u5206\u652f\u53eb main\uff08GitHub \u9ed8\u8ba4\u4e3b\u5206\u652f\uff09\ngit push -u origin main        # \u63a8\u9001\u5230 GitHub \u5e76\u7ed1\u5b9a\u8fdc\u7a0b\u4e3b\u5206\u652f\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_1","title":"\u63d0\u4ea4","text":"<ul> <li><code>git commit</code> \u521b\u5efa\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_2","title":"\u5206\u652f","text":"<ul> <li><code>git branch &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f</li> <li><code>git branch A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A</li> <li><code>git checkout &lt;BranchName&gt;</code> \u5207\u6362\u5206\u652f</li> <li><code>git checkout -b &lt;BranchName&gt;</code> \u521b\u5efa\u5206\u652f\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f</li> <li> <p><code>git checkout -b A C</code> \u5728\u63d0\u4ea4 C \u7684\u4f4d\u7f6e\u4e0a\u521b\u5efa\u5206\u652f A\uff0c\u5e76\u5207\u6362\u5230\u5206\u652f A</p> </li> <li> <p><code>git merge &lt;BranchName&gt;</code> \u5c06 BranchName \u5408\u5e76\u5230 main\uff08\u5f53\u524d checkout \u7684\u5206\u652f\uff09\uff0c\u6b64\u65f6 main \u6709\u591a\u4e2a parent\uff0c\u5305\u542b\u4e86\u4e24\u4e2a\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55</p> </li> <li><code>git checkout A; git merge main</code> \u5c06 main \u5408\u5e76\u5230 A</li> <li><code>git rebase &lt;BranchName&gt;</code> \u5c06\u5f53\u524d checkout \u7684\u5206\u652f\u7684\u63d0\u4ea4\u642c\u8fd0\u5230 BranchName</li> </ul> <p>\u5c06 A \u5408\u5e76\u5230 main:  </p> <p><code>git checkout A   git rebase main</code> </p>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_3","title":"\u79fb\u52a8","text":"<p>HEAD \u603b\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u4e0a\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55\u3002\u5206\u79bb\u7684 HEAD \u5c31\u662f\u8ba9\u5176\u6307\u5411\u4e86\u67d0\u4e2a\u5177\u4f53\u7684\u63d0\u4ea4\u8bb0\u5f55\u800c\u4e0d\u662f\u5206\u652f\u540d\u3002</p> <ul> <li><code>git checkout &lt;Name&gt;</code> \u4f7f HEAD \u6307\u5411 Name\uff08\u53ef\u4ee5\u662f\u67d0\u4e2a\u63d0\u4ea4\uff0c\u57fa\u4e8e\u54c8\u5e0c\u503c\u6307\u5b9a\u63d0\u4ea4\u8bb0\u5f55\uff09</li> </ul> <p>\u76f8\u5bf9\u5f15\u7528\uff1a \u4f7f\u7528<code>^</code>\u5411\u4e0a\u79fb\u52a8 1 \u4e2a\u63d0\u4ea4\u8bb0\u5f55 \u4f7f\u7528<code>~&lt;num&gt;</code>\u5411\u4e0a\u79fb\u52a8\u591a\u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5982<code>~3</code></p> <ul> <li><code>git checkout HEAD^</code> \u4f7f HEAD \u6307\u5411\u5f53\u524d HEAD\uff08\u4e00\u822c\u662f\u6700\u8fd1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff09\u7684 parent</li> <li> <p><code>git checkout HEAD~3</code> \u4f7f HEAD \u540e\u9000 3 \u6b65</p> </li> <li> <p><code>git branch -f A</code> \u5f3a\u5236\u5c06\u5206\u652f A \u6307\u5411\u5f53\u524d HEAD</p> </li> <li><code>git branch -f A B</code> \u5f3a\u5236\u8ba9\u5206\u652f A \u6307\u5411\u63d0\u4ea4 B \u6240\u5728\u7684\u4f4d\u7f6e</li> <li> <p><code>git branch -f main HEAD~3</code> \u5c06 main \u5206\u652f\u5f3a\u5236\u6307\u5411 HEAD \u7684\u7b2c 3 \u7ea7 parent \u63d0\u4ea4</p> </li> <li> <p><code>git cherry-pick &lt;CommitName&gt;</code> \u5c06\u5176\u4ed6\u5206\u652f\u4e0a\u7684\u63d0\u4ea4 CommitName \u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git cherry-pick c2 c4</code> \u5c06 c2\uff0cc4 \u4f9d\u6b21\u590d\u5236\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p><code>git rebase -i &lt;CommitName&gt;</code> \u4ece CommitName \u7684\u4e0b\u4e00\u4e2a\u63d0\u4ea4\u5f00\u59cb\uff08\u4e0d\u5305\u62ec\u5b83\uff09\uff0c\u5217\u51fa\u76f4\u5230\u5f53\u524d\u5206\u652f HEAD \u7684\u6240\u6709\u63d0\u4ea4\uff0c\u4f9b\u4f60\u5728\u4ea4\u4e92\u5f0f\u754c\u9762\uff08interactive\uff09\u4e2d\u7f16\u8f91\u3001\u5408\u5e76\u3001\u91cd\u6392\u3001\u6539\u5199\u7b49</p> </li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_4","title":"\u64a4\u9500","text":"<ul> <li><code>git reset HEAD~2</code> \u56de\u9000 2 \u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4f46\u5bf9\u8fdc\u7a0b\u5206\u652f\u65e0\u6548</li> <li><code>git revert HEAD</code> \u521b\u5efa\u66f4\u6539\u7684\u63d0\u4ea4</li> </ul>"},{"location":"%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/Git/git/#_5","title":"\u8fdc\u7a0b\u64cd\u4f5c","text":"<p>\u8fdc\u7a0b\u5206\u652f\u547d\u540d\uff1a<code>\u8fdc\u7a0b\u4ed3\u5e93\u540d/\u5206\u652f\u540d</code>\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u540d\u9ed8\u8ba4\u4e3a<code>origin</code>\u3002\u5207\u6362\u5230\u8fdc\u7a0b\u5206\u652f\u65f6\uff0c\u81ea\u52a8\u8fdb\u5165\u5206\u79bb HEAD \u72b6\u6001\u3002</p> <ul> <li><code>git clone</code> \u590d\u5236\u6574\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u5206\u652f\uff0c\u5e76\u8ddf\u8e2a\u8fdc\u7a0b\u7684\u540c\u540d\u5206\u652f\u3002</li> <li><code>git fetch</code> \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\u672c\u5730\u4ed3\u5e93\u4e2d\u7f3a\u5931\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u5e76\u66f4\u65b0\u8fdc\u7a0b\u5206\u652f\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u5c06\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\u66f4\u65b0\u6210\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u76f8\u5e94\u5206\u652f\u6700\u65b0\u7684\u72b6\u6001\uff0c\u4f46\u4e0d\u4f1a\u6539\u53d8\u672c\u5730\u4ed3\u5e93\u7684\u72b6\u6001\uff09</li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e\u5148<code>git fetch</code>\u518d<code>git merge</code></li> <li><code>git push</code> \u5c06\u53d8\u66f4\u4e0a\u4f20\u5230\u6307\u5b9a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e0a\u5408\u5e76\u65b0\u63d0\u4ea4\u8bb0\u5f55</li> <li><code>git push origin A</code> \u628a\u672c\u5730\u7684\u5206\u652f A \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 origin\uff08\u9ed8\u8ba4\uff09\uff0c\u5728\u8fdc\u7a0b\u4e5f\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u5206\u652f A</li> </ul> <p>\u5f53\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0\u540e\uff0c\u76f4\u63a5<code>git push</code>\u4f1a\u7531\u4e8e\u5386\u53f2\u504f\u79fb\u800c\u5931\u8d25\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5148\u4f7f\u5de5\u4f5c\u57fa\u4e8e\u6700\u65b0\u7684\u8fdc\u7a0b\u5206\u652f</p> <ul> <li><code>git fetch; git rebase o/main; git push</code> \u7528<code>git fetch</code>\u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u7528 <code>rebase</code> \u5c06\u6211\u4eec\u7684\u5de5\u4f5c\u79fb\u52a8\u5230\u6700\u65b0\u7684\u63d0\u4ea4\u8bb0\u5f55\u4e0b\uff0c\u6700\u540e\u518d\u7528 - <code>git push</code> \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git fetch; git merge o/main; git push</code> \u7528 <code>git fetch</code> \u66f4\u65b0\u4e86\u672c\u5730\u4ed3\u5e93\u4e2d\u7684\u8fdc\u7a0b\u5206\u652f\uff0c\u7136\u540e\u5408\u5e76\u4e86\u65b0\u53d8\u66f4\u5230\u6211\u4eec\u7684\u672c\u5730\u5206\u652f\uff08\u4e3a\u4e86\u5305\u542b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u66f4\uff09\uff0c\u6700\u540e\u6211\u4eec\u7528 <code>git push</code> \u628a\u5de5\u4f5c\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git pull --rebase</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git rebase o/main</code></li> <li><code>git pull</code> \u7b49\u4ef7\u4e8e<code>git fetch</code>\u548c<code>git merge o/main</code></li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/CNote/","title":"C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1(\u672a\u6574\u7406)","text":"<p>CNote</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840(\u672a\u6574\u7406)","text":"<ul> <li>:rocket:Class One<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6</li> </ul> </li> <li>:smiley:Class Two<ul> <li>\u6700\u5927\u548c\u8fde\u7eed\u5b50\u6570\u7ec4</li> <li>\u94fe\u8868(\u7565)</li> <li>HW2</li> </ul> </li> <li>:star2:Class Three<ul> <li>\u5f15\u8a00</li> <li>\u6709\u5e8f\u7684\u5e8f\u5217\u662f\u7ebf\u6027\u8868</li> <li>\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b</li> <li>\u5806\u6808(The Stack ADT)</li> <li>\u961f\u5217(The Queue ADT)</li> </ul> </li> <li>:fire:Class Three<ul> <li>\u535a\u5f08\u6811</li> <li>\u6811\u7684\u6982\u5ff5</li> <li>\u6811\u7684\u5b9e\u73b0</li> <li>HW4<ul> <li>\u4e8c\u53c9\u6811\u6982\u5ff5</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811</li> </ul> </li> </ul> </li> <li>:sunglasses:Class Four<ul> <li>\u524d\u5e8f,\u4e2d\u5e8f,\u540e\u5e8f\u548c\u6808</li> <li>\u51e0\u79cd\u7279\u6b8a\u7684\u6811<ul> <li>Skewed Binary Trees \u504f\u659c\u4e8c\u53c9\u6811</li> <li>Complete Binary Trees \u5b8c\u5168\u4e8c\u53c9\u6811</li> <li>Binary Search Trees \u4e8c\u53c9\u641c\u7d22\u6811</li> <li>\u5e73\u8861\u6811</li> </ul> </li> </ul> </li> <li>\u4e00\u4e9b\u5224\u65ad\u9898</li> <li>HW \u603b\u7ed3</li> <li>\u4e00\u4e9b\u7b14\u8bb0<ul> <li>AOE \u7f51\u548c AOV \u7f51\u662f\u4ec0\u4e48</li> <li>\u81ea\u5e95\u5411\u4e0a\u548c\u9010\u4e2a\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83</li> <li>\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6</li> <li>\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u5404\u79cd\u57fa\u672c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6</li> <li>\u6808,\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808</li> <li>\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868</li> <li>\u4e2d\u7f00\u8f6c\u540e\u7f00</li> <li>BST \u6811\u64cd\u4f5c</li> <li>AVL \u6811\u5e73\u8861</li> <li>\u5806\u7684\u64cd\u4f5c(\u5927\u6839\u5806\u4e3a\u4f8b)</li> </ul> </li> <li>:smile:Class Five<ul> <li>\u4f18\u5148\u961f\u5217(\u5806)<ul> <li>\u76ee\u6807\u529f\u80fd</li> <li>\u5b9e\u73b0(\u5c0f\u6839\u5806\u4e3a\u4f8b)</li> </ul> </li> <li>\u52a8\u6001\u7b49\u4ef7\u5173\u7cfb</li> </ul> </li> <li>:cloud_with_lightning_and_rain:Class Six<ul> <li>\u8003\u8bd5\u9898\u578b</li> <li>\u7b49\u4ef7\u7c7b\u95ee\u9898</li> <li>\u56fe<ul> <li>\u4eba\u5de5\u667a\u80fd\u539f\u7406</li> <li>\u56fe\u7684\u63cf\u8ff0</li> <li>\u56fe\u7684\u8868\u793a(\u6709\u5411\u56fe)</li> <li>\u56fe\u7684\u4f5c\u7528</li> </ul> </li> </ul> </li> <li>:crystal_ball:Class Seven<ul> <li>\u62d3\u6251\u6392\u5e8f</li> <li>\u6700\u77ed\u8def\u5f84\u95ee\u9898</li> </ul> </li> <li>:milky_way:Class Eight<ul> <li>\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)</li> <li>AOE \u7f51(Activity On Edge)</li> </ul> </li> <li>:compass:Class Nine<ul> <li>Network Flow Problems \u7f51\u7edc\u6d41\u95ee\u9898</li> <li>\u6700\u5c0f\u751f\u6210\u6811(Mininum Spanning Tree)</li> <li>DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22</li> </ul> </li> <li>:wind_chime:Class Ten<ul> <li>\u6df1\u5ea6\u4f18\u5148\u904d\u5386</li> <li>\u5224\u65ad\u8fde\u901a\u5757</li> <li>\u53cc\u8fde\u901a\u56fe\u95ee\u9898</li> <li>\u6b27\u62c9\u56de\u8def\u95ee\u9898</li> <li>\u6392\u5e8f</li> </ul> </li> <li>:banjo:Class Eleven<ul> <li>\u5e0c\u5c14\u6392\u5e8f</li> <li>\u5806\u6392\u5e8f</li> <li>\u5f52\u5e76\u6392\u5e8f(\u5206\u6cbb\u6cd5)</li> <li>\u5feb\u901f\u6392\u5e8f</li> </ul> </li> <li>Class Twelve<ul> <li>\u54c8\u5e0c</li> <li>\u533a\u5757\u94fe\u5e94\u7528</li> </ul> </li> <li>Class Thriteen<ul> <li>\u6bd4\u7279\u5e01</li> <li>\u54c8\u5e0c</li> <li>\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1</li> <li>\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5</li> </ul> </li> <li>\u8865\u5145<ul> <li>Loading Density \u662f\u4ec0\u4e48</li> </ul> </li> <li>Class Fourteen<ul> <li>\u54c8\u5e0c\u52a8\u6001\u67e5\u627e\u95ee\u9898</li> </ul> </li> <li>\u53e6\u5916<ul> <li>\u5806\u5408\u5e76</li> <li>\u9700\u8981\u719f\u7ec3\u638c\u63e1\u7684\u7a0b\u5e8f</li> <li>\u8bfe\u4e0a\u590d\u4e60</li> <li>\u4e00\u4e9b\u4ee3\u7801</li> </ul> </li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#rocketclass-one","title":":rocket:Class One","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>$O(f(n))$:\u4e0a\u754c $\\Omega(f(n))$:\u4e0b\u754c $\\Theta(f(n))$:\u6700\u597d\u6700\u574f\u60c5\u51b5\u7684\u5e73\u5747 $o(f(n))$:\u771f\u4e0a\u754c(\u6700\u574f\u60c5\u51b5\u4e0b\u4e0a\u754c)</p> <p>nlogn \u63a8\u5bfc: [ \\left{ \\begin{aligned} T(n) &amp;= 2T\\left(\\frac{n}{2}\\right) + Cn \\[1.5ex] T\\left(\\frac{n}{2}\\right) &amp;= 2T\\left(\\frac{n}{4}\\right) + Cn \\[1.5ex] &amp;\\ \\, \\vdots \\ \\end{aligned} \\right. ]</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#smileyclass-two","title":":smiley:Class Two","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_2","title":"\u6700\u5927\u548c\u8fde\u7eed\u5b50\u6570\u7ec4","text":"<ol> <li>\u66b4\u529b\u6cd5:O(n^3)</li> <li>\u66b4\u529b\u6cd5\u4f18\u5316:O(n^2) \u786e\u5b9a i \u540e,\u904d\u5386 j \u65f6\u5373\u5b8c\u6210\u6c42\u548c</li> </ol> <pre><code>int MaxSum(int a[],int len) {\n    int nsum,maxsum;\n    maxsum=0;\n    for (int i=0;i&lt;len;i++) {\n        nsum=0;\n        for (int j=1;j&lt;len;j++) {\n            nsum+=a[j]; //j\u53f3\u79fb\u65f6\u52a0\n            if (nsum&gt;maxsum) maxsum=nsum;\n        }\n    }\n    return maxsum;\n}\n</code></pre> <ol> <li>\u641c\u7d22\u533a\u95f4+\u524d\u7f00\u548c:O(n^2)</li> <li>\u5206\u6cbb\u6cd5:O(nlogn) \u5206\u6210\u5de6\u534a\u8fb9,\u53f3\u534a\u8fb9,\u4e2d\u95f4</li> </ol> <pre><code>int MaxSum(int l,int r) {\n    if (l==r) return a[l]; //\u8fd4\u56de\u6761\u4ef6\n\n    int mid=(l+r)&gt;&gt;1;\n    int max1=MaxSum(l,mid); //\u8ba1\u7b97\u5de6\u534a\u8fb9\n    int max2=MaxSUm(mid,r); //\u8ba1\u7b97\u53f3\u534a\u8fb9\n\n    int max3,lmax=0,rmax=0,sum=0;\n    for (int i=mid;i&gt;=l;i--) {\n        sum+=a[i];\n        lmax=max(lmax,sum);\n    }\n    sum=0;\n    for (int i=mid+a;i&lt;=r;i++) {\n        sum+=a[i];\n        ramx=max(ramx,sum);\n    }\n    max3=lmax+rmax;\n\n    return max(max1,max2,max3);\n}\n</code></pre> <ol> <li>\u7ebf\u6027 dp:O(n) \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:<code>dp[i]=max(dp[i-1]+a[i],a[i])</code></li> <li>\u626b\u63cf\u6cd5:O(n)</li> </ol> <pre><code>int MaxSum() {\n    int res=-INF,sum=0;\n    for (int i=1;i&lt;=len;i++) {\n        if (sum&lt;0) sum=a[i];\n        else sum+=a[i];\n\n        res=max(res,sum);\n    }\n    return res;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_3","title":"\u94fe\u8868(\u7565)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw2","title":"HW2","text":"<p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient? A.doubly linked list B.singly linked circular list C.doubly linked circular list with a dummy head node D.sequential list \u8bbf\u95ee\u968f\u673a\u8282\u70b9:\u76f8\u540c \u6700\u540e\u4f4d\u7f6e:\u5faa\u73af\u94fe\u8868\u53ef\u901a\u8fc7\u865a\u62df\u5934\u7ed3\u70b9\u540e\u79fb\u4e00\u4f4d\u76f4\u63a5\u627e\u5230\u6700\u540e\u4e00\u4f4d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#star2class-three","title":":star2:Class Three","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_4","title":"\u5f15\u8a00","text":"<ul> <li>Taylor \u5c55\u5f00\u672c\u8d28\u662f\u591a\u9879\u5f0f\u903c\u8fd1\u590d\u6742\u51fd\u6570,\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u4e5f\u662f\u903c\u8fd1,\u7528\u6570\u636e\u8bad\u7ec3\u6c42\u51fa\u6743\u91cd,\u5f97\u5230\u6570\u636e\u7ed3\u6784.</li> <li>\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784(\u5173\u7cfb).\u901a\u8fc7\u4e0d\u65ad\u6539\u8fdb\u6570\u636e\u7ed3\u6784,\u83b7\u5f97\u667a\u80fd.</li> <li>\u5747\u644a\u4ee3\u4ef7\u5206\u6790:\u5c06\u4ee3\u4ef7\u4e0e\u7ed3\u6784\u7ed3\u5408.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_5","title":"\u6709\u5e8f\u7684\u5e8f\u5217\u662f\u7ebf\u6027\u8868","text":"<p>\u591a\u9879\u5f0f(The Polynomial ADT)</p> <ul> <li>\u7528\u6570\u7ec4\u8868\u793a\u591a\u9879\u5f0f.\u4e3a\u4e86\u9632\u6b62\u7a00\u758f\u6570\u7ec4\u6d6a\u8d39\u7a7a\u95f4,\u53ea\u8868\u793a\u975e\u96f6\u9879.\u4f7f\u7528\u7ed3\u6784\u6570\u7ec4\u6216\u94fe\u8868.</li> </ul> <p>\u591a\u91cd\u7ebf\u6027\u8868</p> <ul> <li>e.g. \u8868\u793a\u5f88\u591a\u5b66\u751f\u9009\u51e0\u95e8\u8bfe.\u5217\u51fa\u5b66\u751f\u4e3a\u5217,\u8bfe\u7a0b\u4e3a\u884c\u7684\u7a00\u758f\u77e9\u9635.\u53ea\u8868\u793a\u9009\u7684\u8282\u70b9\u5e76\u6309\u7eb5\u5411,\u6a2a\u5411\u8fde\u6210\u94fe\u8868.</li> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u7eb5\u5411,\u6a2a\u5411\u4e24\u4e2a\u94fe\u8868\u4e2d.</li> </ul> <p>\u5185\u5b58\u7ba1\u7406</p> <ul> <li>\u600e\u4e48\u7ba1\u7a7a\u95f2\u4f4d\u7f6e?\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u600e\u4e48\u5206\u914d,\u91ca\u653e\u5185\u5b58.\u7528\u94fe\u8868\u7ba1\u7406</li> <li>\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u5206\u914d\u76f8\u5bf9\u4f4d\u7f6e(\u76f8\u5bf9\u5730\u5740),\u7b49\u4ee3\u7801\u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4(\u7edd\u5bf9\u5730\u5740)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_6","title":"\u5185\u5b58\u7ba1\u7406\u8fc7\u7a0b","text":"<ol> <li>\u7406\u60f3\u60c5\u51b5\u4e0b,\u7533\u8bf7\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u90fd\u76f8\u540c,\u5185\u5b58\u4e2d\u5229\u7528\u4e00\u5c0f\u5757\u4f5c\u4e3a\u6307\u9488\u8868\u793a\u5730\u5740,\u5c06\u4e0d\u540c\u5730\u5740\u4e32\u6210\u94fe\u8868,\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4.</li> <li>malloc \u7533\u8bf7\u7a7a\u95f4\u65f6,\u5206\u914d\u5934\u4e0a\u7684\u7a7a\u95f2\u7a7a\u95f4\u7684\u6307\u9488.\u4fee\u6539\u94fe\u8868,\u5c06\u5934\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e.</li> <li>free \u91ca\u653e\u7a7a\u95f4\u65f6,\u5c06\u91ca\u653e\u7684\u7a7a\u95f4\u8fde\u5230\u5934\u6307\u9488.</li> <li>\u4f7f\u7528\u65f6\u95f4\u957f\u540e,\u5185\u5b58\u7684\u94fe\u8868\u66f4\u65e0\u5e8f,\u4f46\u5934\u8282\u70b9\u59cb\u7ec8\u7ef4\u6301\u5934.</li> <li>\u5b9e\u9645\u60c5\u51b5\u4e2d,\u7533\u8bf7\u548c\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f\u4efb\u610f,\u6bcf\u4e2a\u8282\u70b9\u5927\u5c0f\u4e0d\u540c.\u6b64\u65f6\u6bcf\u4e2a\u8282\u70b9\u4e2d\u5305\u542b\u8fd9\u4e2a\u8282\u70b9\u5927\u5c0f,\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7a7a\u95f4\u4f4d\u7f6e,\u6807\u8bb0\u8be5\u7a7a\u95f4\u662f\u5426\u88ab\u5360\u7528\u7684\u6807\u8bb0 flag \u8fd9\u4e09\u4e2a\u4fe1\u606f.</li> <li>\u6bcf\u6b21\u7533\u8bf7\u65f6,\u5148\u770b\u8be5\u8282\u70b9\u5927\u5c0f\u662f\u5426\u6ee1\u8db3.\u82e5\u8282\u70b9\u5c0f,\u770b\u4e0b\u4e00\u4e2a\u8282\u70b9;\u82e5\u8282\u70b9\u6ee1\u8db3,\u4ece\u8be5\u8282\u70b9\u4e2d\u5207\u4e00\u5757.</li> <li>\u9632\u6b62\u591a\u6b21\u4f7f\u7528\u540e\u5185\u5b58\u788e\u7247\u5316,\u91ca\u653e\u5185\u5b58\u65f6\u5c3d\u91cf\u4f7f\u4e0b\u4e00\u5757\u6216\u4e0a\u4e00\u5757\u8fde\u7eed.\u6839\u636e\u8be5\u8282\u70b9\u5927\u5c0f\u627e\u5230\u4e0b\u4e00\u8282\u70b9,\u68c0\u67e5\u4e0b\u4e00\u8282\u70b9\u7684 flag.</li> <li>\u4e3a\u4e86\u80fd\u548c\u524d\u4e00\u8282\u70b9,\u9700\u8981\u5728\u8282\u70b9\u672b\u5c3e\u52a0 size,next,flag \u4fe1\u606f.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#the-stack-adt","title":"\u5806\u6808(The Stack ADT)","text":"<p>\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97</p> <ul> <li>\u6bcf\u6b21\u9047\u5230\u8fd0\u7b97\u7b26\u53f7,\u8ba1\u7b97\u524d\u4e24\u4e2a\u6570,\u5e76\u538b\u5165\u8ba1\u7b97\u7ed3\u679c.</li> <li>\u600e\u4e48\u628a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53d8\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f?</li> <li>\u9047\u5230\u6570,\u653e\u5165;\u9047\u5230\u7b26\u53f7,\u8bb0\u4f4f.\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u9ad8,\u9ad8\u7684\u51fa\u53bb;\u5982\u679c\u5df2\u6709\u7684\u7b26\u53f7\u4f18\u5148\u7ea7\u4f4e,\u8bb0\u4f4f\u65b0\u7b26\u53f7;\u5982\u679c\u5df2\u6709\u7684\u548c\u65b0\u7684\u4f18\u5148\u7ea7\u4e00\u6837,\u5148\u8bfb\u5230\u7684\u51fa\u53bb.</li> <li>\u7531\u62ec\u53f7\u600e\u4e48\u529e?\u5c06\u62ec\u53f7\u89c6\u4e3a\u8fd0\u7b97.\u5de6\u62ec\u53f7\u4f18\u5148\u7ea7\u4f4e.\u9047\u5230\u53f3\u62ec\u53f7\u629b\u51fa\u4e4b\u524d\u7684\u7b26\u53f7,\u76f4\u5230\u5de6\u62ec\u53f7.</li> </ul> <p>\u5806\u6808\u4e0e\u51fd\u6570\u8c03\u7528</p> <ul> <li>\u8fde\u7eed\u591a\u6b21\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u6267\u884c\u540e\u56de\u7b54\u4e0a\u4e00\u4e2a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u5229\u7528\u5806\u6808:\u5148\u653e main \u51fd\u6570,\u518d\u6bcf\u6b21\u8c03\u7528\u4e00\u6b21\u538b\u5165\u51fd\u6570\u540d.\u6bcf\u6b21\u8fd4\u56de\u65f6\u6808\u9876\u7684\u51fd\u6570\u4e3a\u8c03\u7528\u5b83\u7684\u51fd\u6570.</li> <li>\u89e3\u51b3\u9012\u5f52\u8c03\u7528\u7684\u95ee\u9898.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#the-queue-adt","title":"\u961f\u5217(The Queue ADT)","text":"<ul> <li>\u7528\u94fe\u8868\u5b9e\u73b0\u65f6,front \u5220\u9664\u5143\u7d20,rear \u63d2\u5165\u5143\u7d20(front \u6307\u5411 next,\u5220\u9664\u540e\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u4e0b\u4e00\u4e2a).</li> <li>\u6307\u9488\u6307\u5411\u53f3,\u5219\u4ece\u53f3\u63d2\u5165,\u4ece\u5de6\u5220\u9664</li> <li>\u961f\u5217\u7a7a\u95f4\u7528\u6ee1\u540e\u600e\u4e48\u529e?\u5faa\u73af\u961f\u5217.</li> <li>\u5faa\u73af\u961f\u5217\u7a7a\u548c\u6ee1:front==rear+1(\u53d6\u4f59)</li> <li>\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u5224\u65ad?\u961f\u5217\u4e2d n \u4e2a\u4f4d\u7f6e,\u5171\u6709 n+1 \u4e2d\u60c5\u51b5,\u4f46 front \u548c rear \u7684\u72b6\u6001\u5171\u6709 n \u79cd(\u4fe1\u606f\u91cf\u4e0d\u591f)</li> <li>\u600e\u4e48\u589e\u52a0\u4fe1\u606f?\u52a0\u5165 tag,\u63d2\u5165\u65f6\u8bbe\u7f6e\u4e3a 1,\u5220\u9664\u65f6\u8bbe\u7f6e\u4e3a 0.\u65e0\u6cd5\u5224\u65ad\u65f6\u770b tag.</li> <li>\u6216\u8005\u4f7f\u961f\u5217\u72b6\u6001\u4e00\u5171 n \u79cd.\u7a7a\u65f6 rear+1\\==front,\u4e00\u4e2a\u5143\u7d20\u65f6 front\\==rear,\u6ee1\u65f6 front\\==rear+2.</li> <li>\u4e00\u822c\u4f7f\u7528 rear \u4e0d\u6307\u5b9e\u9645\u7684\u4f4d\u7f6e,\u800c\u662f\u6307\u4e0b\u4e00\u4e2a\u8981\u653e\u7684\u4f4d\u7f6e.\u7a7a:<code>front\\==rear</code>,\u6ee1:<code>front\\==rear+1</code>.</li> <li>\u6216\u8005 front \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e(\u54d1\u5934),\u7a7a:front\\==rear,\u6ee1:front\\==rear+1.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#fireclass-three","title":":fire:Class Three","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_7","title":"\u535a\u5f08\u6811","text":"<ul> <li>\u7528\u6811\u89e3\u51b3\u96f6\u548c\u535a\u5f08\u7684\u95ee\u9898(e.g.\u68cb\u7c7b)</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8868\u793a\u4e0b\u4e00\u6b65\u6240\u6709\u53ef\u80fd\u7684\u8d70\u6cd5,\u4f7f\u7528 minmax \u7b97\u6cd5\u548c$\\alpha\\beta$\u526a\u679d</li> <li>\u6838\u5fc3 1:\u8bc4\u4f30\u6bcf\u4e2a\u8282\u70b9.AlphaGo:\u6839\u636e\u4e4b\u524d\u4eba\u7c7b\u68cb\u8c31\u5b66\u4e60,\u8ba1\u7b97\u5404\u79cd\u68cb\u5c40\u83b7\u80dc\u6982\u7387(\u6536\u76ca)</li> <li>\u6838\u5fc3 2:\u81ea\u5df1\u5c42\u53d6 max,\u5bf9\u624b\u5c42\u53d6 min</li> <li>\u5bf9\u56f4\u68cb\u800c\u8a00 minmax \u8ba1\u7b97\u91cf\u592a\u5927,\u5229\u7528\u8499\u7279\u5361\u6d1b\u6309\u6982\u7387\u9009\u62e9\u65b9\u5411</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_8","title":"\u6811\u7684\u6982\u5ff5","text":"<ul> <li>\u6811\u548c\u56fe\u7684\u533a\u522b:\u6811\u4e00\u5b9a\u8fde\u901a,\u6ca1\u6709\u56de\u8def.</li> <li>\u5bf9\u4e8e\u56fe\u800c\u8a00,\u8fde\u901a,\u6ca1\u56de\u8def,n \u4e2a\u70b9 n-1 \u6761\u8fb9,\u8fd9\u4e09\u4e2a\u6761\u4ef6\u77e5\u4e8c\u63a8\u4e00</li> <li>\u68ee\u6797:\u6811\u7684\u96c6\u5408</li> <li>degree of tree:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u4e2a\u513f\u5b50;degree of graph:\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u6761\u51fa\u8fb9</li> <li>\u6811\u4e0a\u4efb\u4f55\u4e24\u70b9\u4e4b\u95f4\u7684 path \u4e00\u5b9a\u552f\u4e00</li> <li>depth:\u8be5\u70b9\u5230\u6839\u7684\u8ddd\u79bb</li> <li>height:\u8be5\u70b9\u5230\u6700\u4f4e\u70b9\u7684\u8ddd\u79bb</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_9","title":"\u6811\u7684\u5b9e\u73b0","text":"<ul> <li>\u7528\u94fe\u8868,\u600e\u4e48\u89e3\u51b3\u6bcf\u4e2a\u8282\u70b9\u513f\u5b50\u6570\u4e0d\u786e\u5b9a\u7684\u95ee\u9898?\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u4ec5\u6709 FirstChild,NextSibling \u4e24\u4e2a\u6307\u9488</li> <li>\u8fd9\u6837\u7684\u6811\u5373\u5316\u4e3a\u4e8c\u53c9\u6811</li> <li>\u5229\u7528\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6784\u5efa\u6811\uff1a</li> <li>\u8bfb\u5165\u6570,\u5b58\u50a8\u6307\u9488</li> <li>\u8bfb\u5165\u7b26\u53f7,\u629b\u51fa\u4e24\u4e2a\u6570,\u5c06\u7b26\u53f7\u7684\u6307\u9488\u538b\u5165,\u629b\u51fa\u7684\u6570\u4f5c\u4e3a\u8be5\u7b26\u53f7\u7684\u513f\u5b50</li> <li>\u8868\u8fbe\u5f0f\u524d\u5e8f\u904d\u5386\u5f97\u5230\u524d\u5e8f\u8868\u8fbe\u5f0f\uff0c\u540e\u5e8f\u904d\u5386\u5f97\u5230\u540e\u5e8f\u8868\u8fbe\u5f0f</li> <li>\u904d\u5386\u7684\u672c\u8d28:\u5c06\u4e8c\u7ef4\u7ed3\u6784\u53d8\u6210\u4e00\u7ef4\u7684\u5e8f\u5217</li> <li>\u7ebf\u7d22\u6811:\u6839\u8282\u70b9\u548c\u53f6\u8282\u70b9\u6d6a\u8d39\u7684\u6307\u9488\u6307\u5411\u904d\u5386\u65f6\u7684\u524d\u4e00\u4e2a\u70b9\u548c\u540e\u4e00\u4e2a\u70b9.\u9700\u8981\u6807\u8bb0\u662f\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fd8\u662f\u6839\u6216\u53f6\u7684\u6307\u9488.\u6bcf\u6b21\u5224\u65ad\u662f\u4e0d\u662f\u7ebf\u7d22.</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u53ef\u589e\u52a0\u54d1\u5934\u8282\u70b9.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw4","title":"HW4","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_10","title":"\u4e8c\u53c9\u6811\u6982\u5ff5","text":"<ul> <li>\u6811\u7684\u5ea6\uff1a\u4e00\u4e2a\u8282\u70b9\u6709 m \u4e2a\u5206\u53c9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u5c31\u4e3a m\u3002\u53f6\u5b50\u8282\u70b9\u7684\u5ea6\u4e3a 0\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5206\u53c9\u3002\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u5ea6\u53ea\u6709 0\uff0c1\uff0c2 \u8fd9\u4e09\u79cd\uff0c\u5176\u4e2d\u4e3a 0 \u7684\u80af\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\uff1amax(\u5de6\u5b50\u6811\u6df1\u5ea6\uff0c\u53f3\u5b50\u6811\u6df1\u5ea6)+1\u3002</li> <li>\u4e8c\u53c9\u6811\u7684\u5206\u7c7b</li> <li>\u6ee1\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u4e14\u6709\u4e2a$2^k-1$\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u6ee1\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3a k \u7684\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3a i\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u5e73\u8861\u4e8c\u53c9\u6811(AVL \u6811)\uff1a\u5b83\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28</li> <li>\u5728\u4e8c\u53c9\u6811\u4e0a\u7684\u7b2c i \u5c42\u4e0a\u81f3\u591a\u6709$2^{i-1}$\u4e2a\u8282\u70b9(i&gt;=1)</li> <li>\u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u81f3\u591a\u6709$2^k-1$\u4e2a\u8282\u70b9(k &gt;= 1)</li> <li>\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u6761\u6027\u8d28\uff1an0\u3001n1\u3001n2 \u5206\u522b\u4ee3\u8868\u5ea6\u6570\u4e3a 0\u30011\u30012 \u7684\u8282\u70b9\u603b\u6570\u3002n \u4e3a\u603b\u7ed3\u70b9\u6570\uff0c\u5219\u6709\uff1a     n=\u6240\u6709\u8282\u70b9\u5ea6\u4e4b\u548c+1 (\u6240\u6709\u6811\u7684\u6027\u8d28)     $n_0=n_2+1;$ (\u6ee1\u4e8c\u53c9\u6811$n_0=2^k,n_2=2^k-1$,\u975e\u6ee1\u4e8c\u53c9\u6811$n_0,n_2$\u540c\u65f6\u51cf\u5c0f)     $n=n_0+n_1+n_2;$     $\u5206\u652f\u603b\u7ebf=n-1=n_1+2n_2;$ (\u8fde\u901a\u65e0\u56de\u8def\u56fe\u7684\u8fb9\u4e3a n-1\uff0c\u5c06 n0 \u7528 n2 \u4ee3\u5165)</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_11","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ol> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> </li> <li> <p>\u5bf9\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u7a7a\u6307\u9488\u57df\u6309\u7167\u67d0\u79cd\u904d\u5386\u65b9\u5f0f\u52a0\u7ebf\u7d22\u7684\u8fc7\u7a0b\u53eb\u4f5c\u7ebf\u7d22\u5316\uff0c\u88ab\u7ebf\u7d22\u5316\u4e86\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u7ebf\u7d22\u4e8c\u53c9\u6811(Threaded binary tree)\u3002</p> </li> <li> <p>\u5f15\u5165\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u76ee\u7684\u662f\uff1a\u52a0\u5feb\u67e5\u627e\u7ed3\u70b9\u524d\u9a71\u548c\u540e\u7ee7\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u6784\u9020</p> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784\uff1alchild ltag data rtag rchild</p> </li> <li>ltag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u5de6\u513f\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u524d\u9a71.rtag=0,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u53f3\u5b69\u5b50;ltag=1,\u8868\u793a\u6307\u793a\u8282\u70b9\u7684\u540e\u7ee7.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#sunglassesclass-four","title":":sunglasses:Class Four","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_12","title":"\u524d\u5e8f,\u4e2d\u5e8f,\u540e\u5e8f\u548c\u6808","text":"<ul> <li>\u524d\u5e8f,\u4e2d\u5e8f\u63a8\u540e\u5e8f:\u524d\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u4e2d\u5e8f,\u540e\u5e8f\u63a8\u524d\u5e8f:\u540e\u5e8f\u786e\u5b9a\u6839,\u4e2d\u5e8f\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u96c6\u5408</li> <li>\u524d\u5e8f,\u540e\u5e8f\u63a8\u4e2d\u5e8f:\u4e0d\u80fd\u5b9e\u73b0,\u56e0\u4e3a\u4e0d\u80fd\u786e\u5b9a\u5b50\u6811\u5728\u5de6\u8fd8\u662f\u5728\u53f3.</li> <li>e.g. \u524d\u5e8f AB,\u540e\u5e8f BA</li> <li>\u6811\u7684\u5806\u6808\u64cd\u4f5c:\u4e00\u76f4\u5411\u5de6 push \u5230\u5e95,\u5230\u53f6\u8282\u70b9\u65f6 pop \u4e00\u4e2a\u5143\u7d20,\u518d\u4ece pop \u51fa\u7684\u5143\u7d20\u5f00\u59cb\u5411\u53f3\u8d70.</li> <li>\u6808\u63a8\u524d\u5e8f:push \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u4e2d\u5e8f:pop \u7684\u987a\u5e8f</li> <li>\u6808\u63a8\u540e\u5e8f:</li> <li>\u7b2c\u4e00\u4e2a push \u7684\u662f\u6839.</li> <li>\u540e\u9762 push \u7684\u5143\u7d20,\u5982\u679c\u524d\u4e00\u4e2a\u662f push,\u5219\u662f\u5de6\u513f\u5b50;\u5982\u679c\u524d\u4e00\u4e2a\u662f pop,\u5219\u662f pop \u51fa\u5143\u7d20\u7684\u53f3\u513f\u5b50</li> <li>\u6811\u548c\u6808</li> <li>\u6bcf\u4e2a\u5408\u6cd5\u7684\u5806\u6808\u64cd\u4f5c\u5e8f\u5217,\u90fd\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u6811.</li> <li>m \u4e2a\u8282\u70b9\u6784\u6210\u7684\u6811,\u5171\u6709 Catalan(n)\u79cd.$C_n=\\sum\\limits_{i=0}^{n-1}C_iC_{n-i-1}$</li> <li>Catalan \u6570\u9012\u63a8:m \u4e2a\u8282\u70b9\u5de6\u53f3\u5206\u914d</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_13","title":"\u51e0\u79cd\u7279\u6b8a\u7684\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#skewed-binary-trees","title":"Skewed Binary Trees \u504f\u659c\u4e8c\u53c9\u6811","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#complete-binary-trees","title":"Complete Binary Trees \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<ul> <li>\u4f18\u70b9:\u80fd\u7528\u6570\u7ec4\u5b58\u50a8</li> <li>\u7b2c k \u5c42,\u8fd9\u4e00\u5c42\u6700\u591a\u8282\u70b9\u6570\u4e3a$2^{k-1}$,\u6240\u6709\u5c42\u6700\u591a\u8282\u70b9\u6570$2_k-1$</li> <li>$n_0=n_2+1$   Pf:\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n0+n1+n2;\u4ece\u4e0b\u5f80\u4e0a,\u603b\u8fb9\u6570\u4e3a n1+2n2.\u8054\u7acb\u4e24\u5f0f\u5f97\u5230.</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#binary-search-trees","title":"Binary Search Trees \u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u5de6\u5b50\u6811\u5747\u6bd4\u5176\u5c0f,\u53f3\u5b50\u6811\u90fd\u6bd4\u5176\u5927.</p> <ul> <li>find:\u6bcf\u6b21\u5411\u5de6\u6216\u5411\u53f3\u67e5\u627e   \u4f7f\u7528\u5c3e\u9012\u5f52\u5b9e\u73b0.\u6240\u6709\u5c3e\u9012\u5f52\u90fd\u80fd\u5316\u6210\u5faa\u73af.</li> <li>insert:\u5148\u5411\u5de6\u6216\u5411\u53f3\u627e\u5230\u5408\u9002\u4f4d\u7f6e,\u8d70\u5230 NULL \u65f6 malloc \u5185\u5b58,\u5c06 NULL \u53d8\u4e3a\u8282\u70b9.</li> <li>delete:</li> <li>\u6ca1\u6709\u513f\u5b50\u6216\u53ea\u6709 1 \u4e2a\u513f\u5b50:\u76f4\u63a5\u5220\u9664</li> <li>\u6709 2 \u4e2a\u513f\u5b50:\u4ece\u5de6\u5b50\u6811\u627e\u6700\u5927\u503c(\u6216\u53f3\u5b50\u6811\u627e\u6700\u5c0f\u503c),\u66ff\u6362\u8981\u5220\u9664\u7684\u8282\u70b9,\u518d\u5728\u5de6(\u6216\u53f3)\u5b50\u6811\u79cd\u5220\u9664\u76f8\u5e94\u503c.      PS:\u6bcf\u6b21\u5220\u9664\u64cd\u4f5c\u591a,\u53ef\u4f7f\u7528\u61d2\u6807\u8bb0(lazy tag).</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_14","title":"\u5e73\u8861\u6811","text":"<p>\u51e0\u79cd\u51b3\u5b9a\u662f\u5426\u5e73\u8861\u7684\u6307\u6807:</p> <ol> <li>AVL \u6811(\u5e73\u8861\u6811)    \u7531\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u51b3\u5b9a.\u4efb\u610f\u8282\u70b9,\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u76f8\u5dee\u4e3a 0 \u6216 1,\u8ba4\u4e3a\u6811\u5e73\u8861.</li> <li>\u7ea2\u9ed1\u6811    \u5c06\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u6216\u9ed1.\u4efb\u610f\u5206\u652f\u6ee1\u8db3: 1. \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e3a\u7ea2 2. \u7ea2\u8282\u70b9\u6570\u76f8\u540c 3. \u9ed1\u8282\u70b9\u4e0d\u76f8\u90bb    \u5219\u8ba4\u4e3a\u8be5\u6811\u5e73\u8861.    \u5e73\u8861\u7684\u7ea2\u9ed1\u6811\u6700\u957f\u5206\u652f\u548c\u6700\u77ed\u5206\u652f\u6700\u591a\u76f8\u5dee 1 \u500d.</li> <li>B+\u6811    \u6ee1\u8db3\u6240\u6709\u5206\u652f\u8282\u70b9\u6570\u6700\u591a\u4e3a m,\u6700\u5c11\u4e3a m/2,\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\u7684\u6811,\u8ba4\u4e3a\u5e73\u8861.    B+\u6811\u5e94\u7528\u4e8e\u6570\u636e\u5e93\u7ba1\u7406.</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_15","title":"\u4e00\u4e9b\u5224\u65ad\u9898","text":"<p>\uff08\u7c98\u8d34\u81eacsdn\uff0c\u4e0d\u786e\u4fdd\u6b63\u786e\uff09</p> <p>1-1 \u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F 1-2 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F 1-3 \u6570\u636e\u7ed3\u6784\u6982\u5ff5\u5305\u62ec\u6570\u636e\u4e4b\u95f4\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u6570\u636e\u7684\u8fd0\u7b97\u4e09\u4e2a\u65b9\u9762\u3002T 1-4 \u6570\u636e\u5143\u7d20\u53ef\u4ee5\u7531\u7c7b\u578b\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u636e\u9879\u6784\u6210\u3002T 1-5 \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u8bf4\u660e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5b83\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u7ed3\u6784\u3002F 1-6 2N \u548c N \u5177\u6709\u76f8\u540c\u7684\u589e\u957f\u901f\u5ea6\u3002F 1-7 \u7b97\u6cd5\u5206\u6790\u7684\u4e24\u4e2a\u4e3b\u8981\u65b9\u9762\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002T 1-8 n! is O(n^n).T 1-9 O(N2) is the same as O(1+2+3+\u22ef+N).T 1-10 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002T 1-11 \u82e5\u67d0\u7ebf\u6027\u8868\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5b58\u53d6\u4efb\u4e00\u6307\u5b9a\u5e8f\u53f7\u7684\u5143\u7d20\u548c\u5728\u6700\u540e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u8fd0\u7b97\uff0c\u5219\u5229\u7528\u987a\u5e8f\u8868\u5b58\u50a8\u6700\u8282\u7701\u65f6\u95f4\u3002T 1-12 \u5bf9\u4e8e\u987a\u5e8f\u5b58\u50a8\u7684\u957f\u5ea6\u4e3a N \u7684\u7ebf\u6027\u8868\uff0c\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u63d2\u5165\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-13 (neuDS)\u5728\u987a\u5e8f\u8868\u4e2d\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5176\u5bf9\u5e94\u7684\u7269\u7406\u4f4d\u7f6e\u4e5f\u662f\u76f8\u90bb\u7684\u3002T 1-14 (neuDS)\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T  1-15 (neuDS)\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\u3002F 1-16 (neuDS)\u5728\u987a\u5e8f\u8868\u4e0a\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u65f6\u9700\u8981\u79fb\u52a8\u5143\u7d20\u7684\u4e2a\u6570\u4e0e\u5f85\u63d2\u5165\u6216\u5f85\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\u65e0\u5173\u3002F 1-17 (neuDS)\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f\u53ea\u80fd\u7528\u4e8e\u5b58\u50a8\u7ebf\u6027\u7ed3\u6784\u3002F 1-18 \u5728\u5177\u6709 N \u4e2a\u7ed3\u70b9\u7684\u5355\u94fe\u8868\u4e2d\uff0c\u8bbf\u95ee\u7ed3\u70b9\u548c\u589e\u52a0\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u5bf9\u5e94\u4e3a O(1)\u548c O(N)\u3002F 1-19 \u82e5\u7528\u94fe\u8868\u6765\u8868\u793a\u4e00\u4e2a\u7ebf\u6027\u8868\uff0c\u5219\u8868\u4e2d\u5143\u7d20\u7684\u5730\u5740\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002F 1-20 \u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F 1-21 \u901a\u8fc7\u5bf9\u5806\u6808 S \u64cd\u4f5c\uff1aPush(S,1), Push(S,2), Pop(S), Push(S,3), Pop(S), Pop(S)\u3002\u8f93\u51fa\u7684\u5e8f\u5217\u4e3a\uff1a123\u3002F 1-22 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\uff0c\u8f93\u51fa\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f i\uff0c\u5219\u7b2c j \u4e2a\u8f93\u51fa\u5143\u7d20\u662f j\u2212i\u22121\u3002F 1-23 \u82e5\u4e00\u4e2a\u6808\u7684\u8f93\u5165\u5e8f\u5217\u4e3a{1, 2, 3, 4, 5}\uff0c\u5219\u4e0d\u53ef\u80fd\u5f97\u5230{3, 4, 1, 2, 5}\u8fd9\u6837\u7684\u51fa\u6808\u5e8f\u5217\u3002T 1-24 \u6808\u548c\u961f\u5217\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u65e2\u53ef\u4ee5\u662f\u987a\u5e8f\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u94fe\u5f0f\u65b9\u5f0f\u3002T 1-25 \u6808\u5e95\u5143\u7d20\u662f\u4e0d\u80fd\u5220\u9664\u7684\u5143\u7d20\u3002F 1-26 \u987a\u5e8f\u6808\u4e2d\u5143\u7d20\u503c\u7684\u5927\u5c0f\u662f\u6709\u5e8f\u7684\u3002F 1-27 \u5728 n \u4e2a\u5143\u7d20\u8fde\u7eed\u8fdb\u6808\u4ee5\u540e\uff0c\u5b83\u4eec\u7684\u51fa\u6808\u987a\u5e8f\u548c\u8fdb\u6808\u987a\u5e8f\u4e00\u5b9a\u6b63\u597d\u76f8\u53cd\u3002T 1-28 \u6808\u9876\u5143\u7d20\u548c\u6808\u5e95\u5143\u7d20\u6709\u53ef\u80fd\u662f\u518b\u4e00\u4e2a\u5143\u7d20\u3002T 1-29  \u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u5728\u8868\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u3002 T 1-30 \u94fe\u6808\u7684\u63d2\u5165\u5728\u6808\u9876\uff0c\u5220\u9664\u5728\u6808\u5e95\u3002F 1-31 \u6240\u8c13\u201c\u5faa\u73af\u961f\u5217\u201d\u662f\u6307\u7528\u5355\u5411\u5faa\u73af\u94fe\u8868\u6216\u8005\u5faa\u73af\u6570\u7ec4\u8868\u793a\u7684\u961f\u5217\u3002F 1-32 \u5728\u7528\u6570\u7ec4\u8868\u793a\u7684\u5faa\u73af\u961f\u5217\u4e2d\uff0cfront \u503c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e rear \u503c\u3002F 1-33 \u5faa\u73af\u961f\u5217\u6267\u884c\u51fa\u961f\u64cd\u4f5c\u65f6\u4f1a\u5f15\u8d77\u5927\u91cf\u5143\u7d20\u7684\u79fb\u52a8\u3002F 1-34 \u961f\u5217\u4e2d\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u53eb\u961f\u5934\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u53eb\u961f\u5c3e\u3002 F 1-35 \u961f\u5217\u7ed3\u6784\u7684\u987a\u5e8f\u5b58\u50a8\u4f1a\u4ea7\u751f\u5047\u6ea2\u51fa\u73b0\u8c61\u3002 T 1-36 \u4e8c\u53c9\u6811\u901a\u5e38\u6709\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002T 1-37 \u5728\u542b\u6709 n \u4e2a\u7ed3\u70b9\u7684\u6811\u4e2d\uff0c\u8fb9\u6570\u53ea\u80fd\u662f n-1 \u6761\u3002T 1-38 \u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u82e5\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5b83\u5fc5\u662f\u6811\u53f6\u3002T 1-39 \u4e00\u68f5\u6709 n \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0a\u81f3\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7528\u81ea\u7136\u6570\u4f9d\u6b21\u7f16\u53f7\uff0c\u5219\u7f16\u53f7\u4e3a i \u7684\u7ed3\u70b9\u7684\u5de6\u513f\u5b50\u7684\u7f16\u53f7\u4e3a 2i(2i&lt; n),\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u662f 2i+1(2i+1&lt; n)\u3002F 1-40 \u7528\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u5bfc\u51fa\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002F\uff1f 1-41 \u4e8c\u53c9\u6811\u53ea\u80fd\u7528\u4e8c\u53c9\u94fe\u8868\u8868\u793a\u3002F 1-42 \u6811\u5f62\u7ed3\u6784\u4e2d\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u5bf9\u591a\u4e2a\u7684\u5173\u7cfb\u3002T 1-43 \u5ea6\u4e3a\u4e8c\u7684\u6811\u5c31\u662f\u4e8c\u53c9\u6811\u3002F \u4e8c\u53c9\u6811\u8fd8\u8981\u6709\u533a\u5206\u5de6\u53f3\u513f\u5b50\u7684\u987a\u5e8f 1-44 \u67d0\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002T 1-45 \u67d0\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6b63\u597d\u4e00\u6837\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u4f55\u7ed3\u70b9\u4e00\u5b9a\u90fd\u65e0\u53f3\u5b69\u5b50\u3002F 1-46 \u4e00\u68f5\u6709 124 \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u53f6\u7ed3\u70b9\u4e2a\u6570\u662f\u786e\u5b9a\u7684\u3002T 1-47 \u4efb\u4f55\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u540c\u4e00\u5c42\u7684\u7ed3\u70b9\u4ece\u5de6\u5230\u53f3\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-48 \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u67e5\u627e\u548c\u6298\u534a\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\u3002F 1-49 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002F 1-50 \u82e5\u4e00\u641c\u7d22\u6811\uff08\u67e5\u627e\u6811\uff09\u662f\u4e00\u4e2a\u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5219\u8be5\u6811\u7684\u6700\u5927\u503c\u4e00\u5b9a\u5728\u53f6\u7ed3\u70b9\u4e0a F 1-51 N \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u6709\u591a\u79cd\uff0c\u5176\u4e2d\u6811\u9ad8\u6700\u5c0f\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u6700\u4f73\u7684\u3002 T \u6839\u8282\u70b9\u9009\u53d6\u4e0d\u540c\uff0cBST \u4e0d\u540c 1-52 \u4e2d\u6839\u904d\u5386\u4e8c\u53c9\u67e5\u627e\u6811\u6240\u5f97\u5e8f\u5217\u4e00\u5b9a\u662f\u6709\u5e8f\u5e8f\u5217\u3002T 1-53 \u5728\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u90fd\u6bd4\u5de6\u5b69\u5b50\u5173\u952e\u5b57\u5927\uff0c\u6bd4\u53f3\u5b69\u5b50\u5173\u952e\u5b57\u5c0f\u3002T 1-54 \u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u67e5\u627e\u6548\u7387\u548c\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u9ad9\u5ea6\u6709\u5173\u3002T 1-55 \u4efb\u4f55\u6700\u5c0f\u5806\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002F 1-56 \u4efb\u4f55\u6700\u5c0f\u5806\u4e2d\u4ece\u6839\u7ed3\u70b9\u5230\u4efb\u4e00\u53f6\u7ed3\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5c0f\u5230\u5927\uff09\u3002T 1-57 \u5bf9 N\uff08\u22652\uff09\u4e2a\u6743\u503c\u5747\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6784\u9020\u54c8\u592b\u66fc\u6811\uff0c\u5219\u6811\u4e2d\u4efb\u4e00\u975e\u53f6\u7ed3\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u4e0b\u4e00\u5c42\u4efb\u4e00\u7ed3\u70b9\u7684\u6743\u503c\u3002T 1-58 \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u6700\u4f18\u7684\u524d\u7f00\u7801\u3002\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u96c6\u53ca\u5176\u5b57\u7b26\u9891\u7387\uff0c\u5176\u54c8\u592b\u66fc\u7f16\u7801\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002F \u591a\u4e2a\u5b57\u7b26\u9891\u7387\u76f8\u540c\u65f6\uff0c\u5728\u6811\u4e2d\u7684\u4f4d\u7f6e\u53ef\u4ea4\u6362\uff0c\u53ef\u80fd\u5bfc\u81f4\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e0d\u552f\u4e00 1-59 \u54c8\u592b\u66fc\u6811\u662f\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u6811\uff0c\u8def\u5f84\u4e0a\u6743\u503c\u8f83\u5927\u7684\u7ed3\u70b9\u79bb\u6839\u8f83\u8fd1\u3002F\uff1f 1-60 \u65e0\u5411\u8fde\u901a\u56fe\u6240\u6709\u9876\u70b9\u7684\u5ea6\u4e4b\u548c\u4e3a\u5076\u6570\u3002T 1-61 \u65e0\u5411\u8fde\u901a\u56fe\u8fb9\u6570\u4e00\u5b9a\u5927\u4e8e\u9876\u70b9\u4e2a\u6570\u51cf 1\u3002F \u53ef\u4ee5\u7b49\u4e8e 1-62 \u7528\u90bb\u63a5\u8868\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002F 1-63 \u7528\u90bb\u63a5\u77e9\u9635\u6cd5\u5b58\u50a8\u56fe\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6570\u53ea\u4e0e\u56fe\u4e2d\u7ed3\u70b9\u4e2a\u6570\u6709\u5173\uff0c\u800c\u4e0e\u8fb9\u6570\u65e0\u5173\u3002T 1-64 \u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e0e\u51fa\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u8fb9\u4e4b\u548c\u7684 2 \u500d\u3002T 1-65 \u5728\u4efb\u4e00\u6709\u5411\u56fe\u4e2d\uff0c\u6240\u6709\u9876\u70b9\u7684\u5165\u5ea6\u4e4b\u548c\u7b49\u4e8e\u6240\u6709\u9876\u70b9\u7684\u51fa\u5ea6\u4e4b\u548c\u3002T 1-66 \u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u901a\u5e38\u91c7\u7528\u5806\u6808\u5b9e\u73b0\u3002F 1-67 \u5982\u679c\u65e0\u5411\u56fe G \u5fc5\u987b\u8fdb\u884c\u4e24\u6b21\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u624d\u80fd\u8bbf\u95ee\u5176\u6240\u6709\u9876\u70b9\uff0c\u5219 G \u4e2d\u4e00\u5b9a\u6709\u56de\u8def\u3002F 1-68 \u91c7\u7528\u90bb\u63a5\u8868\u5b58\u50a8\u7684\u56fe\uff0c\u5176\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u3002F 1-69 \u82e5\u6709\u5411\u56fe\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u5373\u4f7f\u4e0d\u7528\u8bbf\u95ee\u6807\u5fd7\u4f4d\u540c\u4e00\u7ed3\u70b9\u4e5f\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u4e24\u6b21\u3002F 1-70 \u5728\u4e00\u4e2a\u6709\u6743\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5 b \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u662f 12\uff0c\u4e14 c \u5230 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u4e3a 2 \u7684\u8fb9\uff0c\u5219 c \u5230 a \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u5c0f\u4e8e 10\u3002T 1-71 P \u662f\u9876\u70b9 S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c\u8be5\u56fe\u4e2d\u7684\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u90fd\u52a0 1\uff0cP \u4ecd\u7136\u662f S \u5230 T \u7684\u6700\u77ed\u8def\u5f84\u3002F 1-72 \u5bf9\u4e8e\u5e26\u6743\u65e0\u5411\u56fe G = (V, E)\uff0cM \u662f G \u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219 M \u4e2d\u4efb\u610f\u4e24\u70b9 V1 \u5230 V2 \u7684\u8def\u5f84\u4e00\u5b9a\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002F 1-73 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff0c\u5f52\u5e76\u8d9f\u6570\u7684\u6570\u91cf\u7ea7\u662f O(NlogN)\u3002F 1-74 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u9700\u8981\u7684\u989d\u5916\u7a7a\u95f4\u4e3a O(N)\u3002F 1-75 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff0c\u6bd4\u8f83\u6b21\u6570\u548c\u79fb\u52a8\u6b21\u6570\u5206\u522b\u4e3a O(N2)\u548c O(N)\u3002T 1-76 \u5bf9 N \u4e2a\u8bb0\u5f55\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(NlogN)\u3002F 1-77 \u5e0c\u5c14\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-78 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-79 \u8981\u4ece 50 \u4e2a\u952e\u503c\u4e2d\u627e\u51fa\u6700\u5927\u7684 3 \u4e2a\u503c\uff0c\u9009\u62e9\u6392\u5e8f\u6bd4\u5806\u6392\u5e8f\u5feb\u3002T 1-80 \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u6216\u8005\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u6b21\u5e73\u65b9\u7ea7 O(N * logN)\uff0c\u5219\u8be5\u6392\u5e8f\u7b97\u6cd5\u4e00\u5b9a\u662f\u4e0d\u7a33\u5b9a\u7684\u3002F 1-81 \u5728\u5806\u6392\u5e8f\u4e2d\uff0c\u82e5\u8981\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u9700\u8981\u5efa\u7acb\u5927\u6839\u5806\u3002T 1-82 \u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u5806\u3002T 1-83 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002F 1-84 \u5185\u6392\u5e8f\u8981\u6c42\u6570\u636e\u4e00\u5b9a\u8981\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8\u3002F 1-85 \u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u662f\u6307\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u6bd4\u8f83\u6b21\u6570\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e14\u7b97\u6cd5\u80fd\u591f\u7ec8\u6b62\u3002F 1-86 \u5f53\u5f85\u6392\u5e8f\u8bb0\u5f55\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u6216\u8005\u5df2\u7ecf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u65f6\uff0c\u5feb\u901f\u6392\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u6700\u7701\u3002F 1-87 \u5feb\u901f\u6392\u5e8f\u7684\u901f\u5ea6\u5728\u6240\u6709\u6392\u5e8f\u65b9\u6cd5\u4e2d\u4e3a\u6700\u5feb\uff0c\u800c\u4e14\u6240\u9700\u9644\u52a0\u7a7a\u95f4\u4e5f\u6700\u5c11\u3002F 1-88 \u5bf9 N \u4e2a\u4e0d\u540c\u7684\u6570\u636e\u91c7\u7528\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\uff0c\u5f53\u5143\u7d20\u57fa\u672c\u6709\u5e8f\u65f6\u4ea4\u6362\u5143\u7d20\u6b21\u6570\u80af\u5b9a\u6700\u591a\u3002F 1-89 \u5feb\u901f\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b97\u6cd5\u3002F 1-90 \u7528\u5e0c\u5c14(shell)\u65b9\u6cd5\u6392\u5e8f\u65f6\uff0c\u82e5\u5173\u952e\u5b57\u7684\u521d\u59cb\u6392\u5e8f\u6742\u4e71\u65e0\u5e8f\uff0c\u5219\u6392\u5e8f\u6548\u7387\u5c31\u4f4e\u3002F 1-91 \u76f4\u63a5\u9009\u62e9\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n2)\uff0c\u4e0d\u53d7\u6570\u636e\u521d\u59cb\u6392\u5217\u7684\u5f71\u54cd\u3002T 1-92 \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(n2)\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u6027\u662f O(nlog2n)\uff0c\u6240\u4ee5\u5feb\u901f\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u6548\u7387\u597d\u3002F 1-93 \uff08101,88,46,70,34,39,45,58,66,10\uff09\u662f\u5806\u3002T 1-94 \u6709\u4e00\u5927\u6839\u5806\uff0c\u5806\u4e2d\u4efb\u610f\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u5747\u5927\u4e8e\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u5173\u952e\u5b57\uff0c\u5219\u5176\u5177\u6709\u6700\u5c0f\u503c\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5e76\u53ef\u80fd\u5728\u5806\u7684\u6700\u540e\u4e24\u5c42\u4e2d\u3002T 1-95 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5f52\u5e76\u6392\u5e8f\u90fd\u6bd4\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u5feb\u3002F 1-96 \u5728\u6563\u5217\u8868\u4e2d\uff0c\u6240\u8c13\u540c\u4e49\u8bcd\u5c31\u662f\u88ab\u4e0d\u540c\u6563\u5217\u51fd\u6570\u6620\u5c04\u5230\u540c\u4e00\u5730\u5740\u7684\u4e24\u4e2a\u5143\u7d20\u3002F 1-97 \u5c06 M \u4e2a\u5143\u7d20\u5b58\u5165\u7528\u957f\u5ea6\u4e3a S \u7684\u6570\u7ec4\u8868\u793a\u7684\u6563\u5217\u8868\uff0c\u5219\u8be5\u8868\u7684\u88c5\u586b\u56e0\u5b50\u4e3a M/S\u3002T 1-98 \u5728\u6563\u5217\u4e2d\uff0c\u51fd\u6570\u201c\u63d2\u5165\u201d\u548c\u201c\u67e5\u627e\u201d\u5177\u6709\u540c\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002T 1-99 \u5373\u4f7f\u628a 2 \u4e2a\u5143\u7d20\u6563\u5217\u5230\u6709 100 \u4e2a\u5355\u5143\u7684\u8868\u4e2d\uff0c\u4ecd\u7136\u6709\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002T 1-100 \u5c06 10 \u4e2a\u5143\u7d20\u6563\u5217\u5230 100 000 \u4e2a\u5355\u5143\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002F  </p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#hw","title":"HW \u603b\u7ed3","text":"<p>The Fibonacci number sequence ({FN}) is defined as: (F_0 = 0), (F_1 = 1), (F_N = F), (N=2, 3, ...) The time complexity of the function which calculates (F_N) recursively is (\\Theta(N!)).} + F_{N-2</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>( T(N)=T(N-1)+T(N-2)+O(1)),\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a(\\Theta(\\phi^n)).</p> <p>The Fibonacci number sequence ({FN}) is defined as: (F_0 = 0), (F_1 = 1), (F_N = F), (N=2, 3, ...) The space complexity of the function which calculates (F_N) recursively is:} + F_{N-2</p> <ul> <li>[ ] A. (O(\\log N))</li> <li>[x] B. (O(N))</li> <li>[ ] C. (O(F_N))</li> <li>[ ] D. (O(N!))</li> </ul> <p>\u6bcf\u4e2a(F(N))\u867d\u7136\u5728\u4e0d\u540c\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4ea7\u751f,\u4f46\u662f\u5b58\u50a8\u5728\u7edf\u4e00\u7a7a\u95f4,\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a(O(N)).</p> <p>For a sequentially stored linear list of length (N), the time complexities for deleting the first element and inserting the last element are (O(1)) and (O(N)), respectively.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\u901a\u5e38\u6307\u7684\u662f\u6570\u7ec4\uff08Array\uff09\u6216\u987a\u5e8f\u8868\uff08Sequential List\uff09\uff0c\u5176\u7279\u70b9\u662f\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u4e14\u5fc5\u987b\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u3002 \u5220\u9664\u7b2c\u4e00\u4e2a\u540e\uff0c\u540e\u9762\u7684\u6240\u6709\u5143\u7d20\u90fd\u9700\u8981\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u4ee5\u586b\u8865\u7a7a\u7f3a\uff0c\u65f6\u95f4\u4e3a(O(N)). \u5982\u679c\u6570\u7ec4\u7a7a\u95f4\u8db3\u591f\uff08\u672a\u6ee1\uff09\uff0c\u76f4\u63a5\u5728 A[N] \u7684\u4f4d\u7f6e\u5199\u5165\u65b0\u5143\u7d20\uff0c\u65e0\u9700\u79fb\u52a8\u5176\u4ed6\u5143\u7d20,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a(O(1)).</p> <p>If the most commonly used operations are to visit a random position and to insert and delete the last element in a linear list, then which of the following data structures is the most efficient?</p> <ul> <li>[ ] A. doubly linked list</li> <li>[ ] B. singly linked circular list</li> <li>[ ] C. doubly linked circular list with a dummy head node</li> <li>[x] D. sequential list</li> </ul> <p>\u94fe\u8868\u4e0d\u80fd\u5feb\u901f\u968f\u673a\u8bbf\u95ee \u800c\u63d2\u5165\u5220\u9664\u53ea\u9700\u8981\u5bf9\u672b\u5c3e\u8fdb\u884c,\u7ebf\u6027\u8868\u64cd\u4f5c\u65f6\u4e0d\u7528\u79fb\u52a8\u5176\u4ed6\u4f4d.</p> <p>It is always possible to represent a tree by a one-dimensional integer array.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u6811\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u7528\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u4e00\u7ef4\u6570\u7ec4\uff09\u8868\u793a\u3002\u5e38\u89c1\u7684\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u6811\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ol> <li>\u7236\u8282\u70b9\u8868\u793a\u6cd5\uff1a\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7d22\u5f15\u3002</li> <li>\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\uff1a\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5144\u5f1f\u3002\uff08\u8fd9\u91cc\u8981\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e0d\u7b26\u5408\uff09</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u8868\u793a\uff1a\u8865\u5168\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u7ec4\u6309\u5c42\u7ea7\u987a\u5e8f\u5b58\u50a8\u3002</li> </ol> <p>\u5173\u952e\u5728\u4e8e\u5b58\u50a8\u7684\u4e0d\u662f\u8282\u70b9\u7684\u6570\u503c\uff0c\u800c\u662f\u8282\u70b9\u7684\u7f16\u53f7\u3002</p> <p>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>n=2016\uff0cn1=16 n=n0+n1+n2 \u603b\u8fb9\u6570\uff1a e=n-1 =n0+n1+n2 -1(\u6811\u7684\u6027\u8d28\uff1a\u8fb9\u6570=\u70b9\u6570-1) e=n1+2*n2 \u7ed3\u8bba: n2=n0 -1 n=n1+2*n2 -1 2*n2=1001,\u4e0d\u5b58\u5728</p> <p>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</p> <ul> <li>[ ] A. 5</li> <li>[ ] B. 6</li> <li>[ ] C. 7</li> <li>[x] D. 8</li> </ul> <p>\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u6811\u4e2d\u8282\u70b9\u7684\u5ea6\u662f\u6307\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u76f4\u63a5\u540e\u4ee3\uff09\u7684\u6570\u91cf\u3002\u5b83\u7684\u201c\u5ea6\u201d\u5c31\u662f\u5b83\u62e5\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570\uff08\u5373\u76f4\u63a5\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u6570\uff09\u3002 Given a tree of degree 3 \u4ec0\u4e48\u610f\u601d\uff1f\u6811\u7684 degree \u901a\u5e38\u6307\u8282\u70b9\u7684\u6700\u5927\u5ea6\u6570\uff08\u5373\u67d0\u4e2a\u8282\u70b9\u7684\u6700\u5927\u5b50\u8282\u70b9\u6570\uff09\u3002\u8fd9\u91cc\"degree 3 \u7684\u6811\"\u53ef\u80fd\u6307\u6bcf\u4e2a\u975e\u53f6\u8282\u70b9\u6700\u591a\u6709 3 \u4e2a\u5b50\u8282\u70b9\uff08\u5373 3 \u53c9\u6811\uff0cternary tree\uff09\u3002 n2=3, n3=2 n0+n1+n2+n3-1=n1+2*n2+3*n3 n0+n1+5-1=n1+12 n0=8</p> <p>If a general tree ( T ) is converted into a binary tree ( BT ), then which of the following ( BT ) traversals gives the same sequence as that of the post-order traversal of ( T )?</p> <ul> <li>[ ] A. Pre-order traversal</li> <li>[x] B. In-order traversal</li> <li>[ ] C. Post-order traversal</li> <li>[ ] D. Level-order traversal</li> </ul> <p>\u600e\u4e48\u628a\u666e\u901a\u7684\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\uff1f</p> <ol> <li>\u9009\u62e9\u6839\u8282\u70b9\uff1a</li> <li>\u4fdd\u6301\u539f\u6811\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u3002</li> <li>\u5904\u7406\u5b50\u8282\u70b9\uff1a</li> <li>\u5c06\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u5176\u5de6\u5b69\u5b50\uff08left child\uff09\u3002</li> <li>\u5c06\u8be5\u8282\u70b9\u7684\u5176\u4ed6\u5b50\u8282\u70b9\uff08\u6309\u987a\u5e8f\uff09\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08right siblings\uff09\u3002</li> <li>\u9012\u5f52\u5e94\u7528\uff1a</li> <li>\u5bf9\u6bcf\u4e2a\u5b50\u8282\u70b9\u9012\u5f52\u5e94\u7528\u76f8\u540c\u7684\u89c4\u5219\u3002</li> </ol> <p>\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u540e\u7684\u4e2d\u5e8f\u904d\u5386\u7b49\u4ef7\u4e8e\u539f\u6811\u7684\u540e\u5e8f\u904d\u5386\u3002</p> <p>In a binary search tree, the keys on the same level from left to right must be in sorted (non-decreasing) order.</p> <ul> <li>[x] T</li> <li>[ ] F</li> </ul> <p>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u503c\u3002 \u540c\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u5de6\u8fb9\u7684\u4e00\u5b9a\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u7684\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002 \u6240\u4ee5\u4ece\u5de6\u5230\u53f3\u4e00\u5b9a\u5355\u8c03\u9012\u589e\u3002</p> <p>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u5982\u679c 4 \u548c 6 \u662f\u5144\u5f1f\uff0c5 \u4e00\u5b9a\u662f\u7236\u4eb2\uff1b \u5982\u679c 4 \u548c 6 \u5728\u540c\u4e00\u5c42\u4f46\u4e0d\u76f8\u90bb\uff0c5 \u4e00\u5b9a\u5728\u4e2d\u95f4\uff0c\u77db\u76fe\uff1b \u5982\u679c 4 \u548c 6 \u76f8\u90bb\u4f46\u4e0d\u662f\u5144\u5f1f\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b:</p> <pre><code>      5\n     / \\\n    3   7\n   / \\ / \\\n  1  4 6  8\n</code></pre> <p>In a max-heap with ( n ) (( &gt; 1 )) elements, the array index of the minimum key may be ____.</p> <ul> <li>[ ] A. 1</li> <li>[ ] B. (\\lfloor n/2 \\rfloor - 1)</li> <li>[ ] C. (\\lfloor n/2 \\rfloor)</li> <li>[x] D. (\\lfloor n/2 \\rfloor + 2)</li> </ul> <p>\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\u3002 \u4e00\u5171 n \u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6700\u540e\u4e00\u5c42\u7b2c\u4e00\u4e2a\u662f(2^{n-1})\uff0c\u6700\u540e\u4e00\u4e2a\u662f(2^n-1)\uff0c \u603b\u8282\u70b9\u6570(2^{n-1} &lt; N &lt;2^n-1)\uff0c(\\lfloor N/2 \\rfloor + 1)\u5f97\u5230\u6700\u540e\u4e00\u884c\u7b2c\u4e00\u4e2a</p> <p>Using the linear algorithm to build a min-heap from the sequence {15, 26, 32, 8, 7, 20, 12, 13, 5, 19}, and then insert 6. Which one of the following statements is FALSE?</p> <ul> <li>[ ] A. The root is 5</li> <li>[ ] B. The path from the root to 26 is {5, 6, 8, 26}</li> <li>[x] C. 32 is the left child of 12</li> <li>[ ] D. 7 is the parent of 19 and 15</li> </ul> <p>Using the linear algorithm to build a min-heap \u662f\u600e\u4e48\u6837\u5efa\u5806\uff1f \u5efa\u5806\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u81ea\u5e95\u5411\u4e0a\uff08Bottom-up\uff0cLinear-time Heapify\uff09\uff1a\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u548c\u5176\u5b50\u6811\u53d8\u4e3a\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002</li> <li>\u9010\u4e2a\u63d2\u5165\uff08Top-down\uff0cIncremental Heap Construction\uff09\uff1a\u6392\u6210\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u6570\u63d2\u5165\u5230\u6700\u540e\u518d\u8c03\u6574\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\u3002</li> </ol> <p>If a (d)-heap is stored as an array, for an entry located in position (i), the parent, the first child and the last child are at:</p> <ul> <li>[ ] A. (\\lceil (i + d - 2) / d \\rceil), ((i - 2)d + 2), and ((i - 1)d + 1)</li> <li>[ ] B. (\\lceil (i + d - 1) / d \\rceil), ((i - 2)d + 1), and ((i - 1)d)</li> <li>[ ] C. (\\lfloor (i + d - 2) / d \\rfloor), ((i - 1)d + 2), and (id + 1)</li> <li>[ ] D. (\\lfloor (i + d - 1) / d \\rfloor), ((i - 1)d + 1), and (id)</li> </ul> <p>d-heap \u4ec0\u4e48\u610f\u601d? d-heap \u662f\u5806\uff08Heap\uff09\u7684\u4e00\u79cd\u6cdb\u5316\u5f62\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 d \u4e2a\u5b50\u8282\u70b9\uff08\u800c\u975e\u4e8c\u53c9\u5806\u7684 2 \u4e2a\u5b50\u8282\u70b9\uff09\u3002\u5b83\u662f\u5b8c\u5168 d \u53c9\u6811\uff08Complete d-ary Tree\uff09\u3002 \u53ef\u7528 d=3 \u4ee3\u5165\u9a8c\u8bc1\uff0c\u6392\u9664\u9519\u8bef\u9009\u9879</p> <p>If a binary search tree of (N) nodes is complete, which one of the following statements is FALSE?</p> <ul> <li>[ ] A. the average search time for all nodes is (O(\\log N))</li> <li>[ ] B. the minimum key must be at a leaf node</li> <li>[x] C. the maximum key must be at a leaf node</li> <li>[ ] D. the median node must either be the root or in the left subtree</li> </ul> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u8981\u6c42\u4e0a\u9762\u5168\u6ee1\uff0c\u6700\u540e\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\u586b\uff0c\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811\u3002 BST \u7684\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f\u6811\u7684\u9ad8\u5ea6\u3002\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f$log(N)$,\u6545\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u662f(O(\\log N))\u3002 \u4e2d\u4f4d\u6570\uff08median node\uff09\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u5947\u6570\u4e2a\u8282\u70b9\uff1a\u6b63\u4e2d\u95f4\u7684\u8282\u70b9\uff08\u7b2c $\\lfloor(N/2)\\rfloor$\u4e2a\uff09\u3002</li> <li>\u5076\u6570\u4e2a\u8282\u70b9\uff1a\u4e2d\u95f4\u4e24\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\uff08\u5373\u7b2c N/2 \u4e2a\u8282\u70b9\uff0c\u79f0\u4e3a\u4e0b\u4e2d\u4f4d\u6570\uff09\u3002</li> </ul> <p>N \u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u662f\u6839\uff1bN \u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5728\u5de6\u5b50\u6811\u4e2d\u3002</p> <p>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than (N/2), but not (O(\\log N)).</p> <ul> <li>[ ] T</li> <li>[x] F</li> </ul> <p>\u901a\u8fc7\u6309\u5927\u5c0f\u5408\u5e76\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7(O(\\log N))\uff08\u5176\u4e2d N \u662f\u603b\u5143\u7d20\u6570\uff09\u3002</p> <p>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</p> <ul> <li>[ ] A. 1 and -6</li> <li>[x] B. 4 and -5</li> <li>[ ] C. 8 and -5</li> <li>[ ] D. 8 and -6</li> </ul> <p>disjoint set \u662f\u4ec0\u4e48\uff1f \u5e76\u67e5\u96c6 \u4e60\u60ef\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1aroot \u548c merge\uff0c\u521d\u59cb\u5316\u4e3a\u81ea\u73af \u4e0a\u8bfe\u8bb2\u7684\u5e76\u67e5\u96c6\u5199\u6cd5\uff1a\u6240\u6709\u7684\u6839\u4e3a\u8d1f\u6570\uff0c\u7edd\u5bf9\u503c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f</p> <p>A relation ( R ) is defined on a set ( S ). If for every element ( e ) in ( S ), \"( e \\, R \\, e )\" is always true, then ( R ) is said to be ____ over ( S ).</p> <ul> <li>[ ] A. consistent</li> <li>[ ] B. symmetric</li> <li>[ ] C. transitive</li> <li>[x] D. reflexive</li> </ul> <p>\u5728\u6570\u5b66\u4e2d\uff0c\u5173\u7cfb ( R ) \u5728\u96c6\u5408 ( S ) \u4e0a\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u91cd\u8981\u6027\u8d28\uff1a</p> <ol> <li> <p>\u81ea\u53cd\u6027\uff08Reflexive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 ( e \\in S )\uff0c\u6709 ( e \\, R \\, e )\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u5b9e\u6570\u4e0a\u7684\u201c\u2264\u201d\u5173\u7cfb\u662f\u81ea\u53cd\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u5b9e\u6570 ( x )\uff0c( x \\leq x ) \u90fd\u6210\u7acb\u3002</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff08Symmetric\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 ( a, b \\in S )\uff0c\u5982\u679c ( a \\, R \\, b )\uff0c\u90a3\u4e48 ( b \\, R \\, a )\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c=\u201d\u5173\u7cfb\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u4e3a\u5982\u679c ( a = b )\uff0c\u90a3\u4e48 ( b = a )\u3002</p> </li> <li> <p>\u4f20\u9012\u6027\uff08Transitive\uff09\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 ( a, b, c \\in S )\uff0c\u5982\u679c ( a \\, R \\, b ) \u4e14 ( b \\, R \\, c )\uff0c\u90a3\u4e48 ( a \\, R \\, c )\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u201c\u2264\u201d\u5173\u7cfb\u662f\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u5982\u679c ( a \\leq b ) \u4e14 ( b \\leq c )\uff0c\u90a3\u4e48 ( a \\leq c )\u3002</p> </li> <li> <p>\u4e00\u81f4\u6027\uff08Consistent\uff09\uff1a</p> </li> <li>\u8fd9\u4e2a\u672f\u8bed\u5728\u5173\u7cfb\u7684\u6027\u8d28\u4e2d\u4e0d\u5e38\u89c1\uff0c\u901a\u5e38\u4e0d\u662f\u5173\u7cfb\u7684\u57fa\u672c\u6027\u8d28\u4e4b\u4e00\u3002\u53ef\u80fd\u662f\u6307\u5173\u7cfb\u5728\u67d0\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00\u81f4\u6027\uff0c\u4f46\u4e00\u822c\u4e0d\u4f5c\u4e3a\u5173\u7cfb\u7684\u6807\u51c6\u6027\u8d28\u3002</li> </ol> <p>\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002F</p> <p>\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6570\u636e\u9879\uff08Data Item\uff09\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5143\u7d20\uff08Data Element\uff09\u3002</p> <ul> <li>\u6570\u636e\u9879\uff1a\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u6570\u636e\u5355\u4f4d\uff0c\u4e5f\u79f0\u4e3a\u5b57\u6bb5\u6216\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u5b66\u751f\u7684\u201c\u5b66\u53f7\u201d\u6216\u201c\u59d3\u540d\u201d\u662f\u4e00\u4e2a\u6570\u636e\u9879\u3002</li> <li>\u6570\u636e\u5143\u7d20\uff1a\u662f\u7531\u82e5\u5e72\u6570\u636e\u9879\u7ec4\u6210\u7684\uff0c\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5b66\u751f\u7684\u5b8c\u6574\u8bb0\u5f55\uff08\u5305\u62ec\u5b66\u53f7\u3001\u59d3\u540d\u3001\u5e74\u9f84\u7b49\u6570\u636e\u9879\uff09\u662f\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u9879\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> <li>\u6216\u201c\u6570\u636e\u5143\u7d20\u662f\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u7684\u5404\u6570\u636e\u9879\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002F</p> <p>\u9519\u8bef\u539f\u56e0\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u7684\u5b9a\u4e49\u662f\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u975e\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u903b\u8f91\u7ed3\u6784\uff1a\u63cf\u8ff0\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u8054\u65b9\u5f0f\uff08\u5982\u7ebf\u6027\u7ed3\u6784\u3001\u6811\u5f62\u7ed3\u6784\u3001\u56fe\u7ed3\u6784\u7b49\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5b66\u751f\u8bb0\u5f55\uff08\u6570\u636e\u5143\u7d20\uff09\u6309\u5b66\u53f7\u987a\u5e8f\u6392\u5217\u662f\u7ebf\u6027\u7ed3\u6784\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5c5e\u4e8e\u6570\u636e\u5143\u7d20\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u662f\u7269\u7406\u5b58\u50a8\u6216\u5177\u4f53\u5b9e\u73b0\u7684\u8303\u7574\u3002</li> </ul> <p>\u6df7\u6dc6\u903b\u8f91\u7ed3\u6784\u4e0e\u7269\u7406\u7ed3\u6784\uff1a</p> <ul> <li>\u903b\u8f91\u7ed3\u6784\u662f\u62bd\u8c61\u7684\uff08\u5982\u94fe\u8868\u3001\u6811\uff09\uff0c\u4e0e\u5b58\u50a8\u65e0\u5173\u3002</li> <li>\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u63a5\u8fd1\u7269\u7406\u5b58\u50a8\uff08\u5982\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u6392\u5217\uff09\u3002</li> </ul> <p>\u4fee\u6b63\u8bf4\u6cd5\uff1a</p> <ul> <li>\u201c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u662f\u6307\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u3002\u201d\uff08T\uff09</li> </ul> <p>\u6240\u8c13\u968f\u673a\u5b58\u53d6\uff0c\u5c31\u662f\u901a\u8fc7\u9996\u5730\u5740\u548c\u5143\u7d20\u7684\u4f4d\u5e8f\u53f7\u503c\u53ef\u4ee5\u5728 O(1)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002T</p> <p>\u968f\u673a\u5b58\u53d6\u662f\u6307\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b58\u50a8\u4ecb\u8d28\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u6309\u987a\u5e8f\u904d\u5386\u524d\u9762\u7684\u6570\u636e\u3002\u8fd9\u79cd\u8bbf\u95ee\u65b9\u5f0f\u7684\u7279\u70b9\u662f\u8bbf\u95ee\u65f6\u95f4\u4e0e\u6570\u636e\u4f4d\u7f6e\u65e0\u5173\uff0c\u65e0\u8bba\u6570\u636e\u5b58\u50a8\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u80fd\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u76f4\u63a5\u8bfb\u53d6\u6216\u5199\u5165\u3002</p> <p>\u5c06 N \u4e2a\u6570\u636e\u6309\u7167\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\u3002\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u90a3\u4e48\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logN)\u3002F</p> <p>1. \u4e8c\u5206\u67e5\u627e\u7684\u524d\u63d0\u662f\u201c\u968f\u673a\u5b58\u53d6\u201d \u4e8c\u5206\u67e5\u627e\uff08Binary Search\uff09\u7684\u6838\u5fc3\u64cd\u4f5c\u662f \u201c\u901a\u8fc7\u4e0b\u6807\u76f4\u63a5\u8bbf\u95ee\u4e2d\u95f4\u5143\u7d20\u201d\uff08\u5373 <code>arr[mid]</code>\uff09\uff0c\u8fd9\u8981\u6c42\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u652f\u6301 \u968f\u673a\u5b58\u53d6\uff08Random Access\uff09\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u6570\u7ec4\uff1a\u901a\u8fc7\u4e0b\u6807\u53ef\u5728 ( O(1) ) \u65f6\u95f4\u5185\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\u3002</li> <li>\u652f\u6301\u968f\u673a\u5b58\u53d6\u7684\u7ebf\u6027\u7ed3\u6784\uff08\u5982\u52a8\u6001\u6570\u7ec4\uff09\u3002</li> </ul> <p>\u4f46 \u5355\u5411\u94fe\u8868\uff08Singly Linked List\uff09 \u7684\u5b58\u50a8\u7279\u6027\u662f\uff1a</p> <ul> <li>\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\uff1a\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff08\u5982 <code>list[5]</code>\uff09\u3002</li> <li>\u5fc5\u987b\u987a\u5e8f\u904d\u5386\uff1a\u8981\u8bbf\u95ee\u7b2c ( k ) \u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u9010\u4e2a\u79fb\u52a8 ( k-1 ) \u6b21\u3002</li> </ul> <p>\u5728\u4efb\u610f\u4e00\u68f5\u975e\u7a7a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5220\u9664\u67d0\u7ed3\u70b9\u540e\u53c8\u5c06\u5176\u63d2\u5165\uff0c\u5219\u6240\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u5220\u9664\u524d\u539f\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u540c\u3002 F</p> <p>\u5220\u9664\u975e\u53f6\u8282\u70b9\u540e\u8be5\u70b9\u88ab\u5176\u4ed6\u8282\u70b9\u4ee3\u66ff\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\u3002\u91cd\u65b0\u63d2\u5165\u540e\u4e00\u5b9a\u662f\u53f6\u8282\u70b9\uff0c\u4e00\u5b9a\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_16","title":"\u4e00\u4e9b\u7b14\u8bb0","text":"<ul> <li>\u961f\u5217\u5047\u6ea2\u51fa\u662f\u4ec0\u4e48\uff1f\u961f\u5934\u5df2\u6ee1\uff0c\u961f\u5c3e\u7a7a\uff0c\u4f46\u4f1a\u8bef\u8ba4\u4e3a\u961f\u5217\u5df2\u6ee1\u3002\u53ef\u7528\u5faa\u73af\u961f\u5217\u89e3\u51b3\u3002</li> <li>\u5ea6\u4e3a 2 \u7684\u6811\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u6811\u3002\u4e8c\u53c9\u6811\u8981\u6c42\u6240\u6709\u8282\u70b9\u7684\u5ea6&lt;=2\uff0c\u4e14\u5b50\u8282\u70b9\u6709\u987a\u5e8f\u3002\u53ef\u80fd\u5b58\u5728\u6811\u7684\u5b50\u8282\u70b9\u65e0\u987a\u5e8f\uff0c\u5373\u4ea4\u6362\u4e24\u4e2a\u5b50\u8282\u70b9\u4e0d\u5f71\u54cd\u6811\u7684\u5b9a\u4e49\u3002</li> <li>\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u4e0d\u4e00\u5b9a\u80fd\u63a8\u51fa\u540e\u5e8f\u904d\u5386\u3002\u8981\u6c42\u4e3a\u4e8c\u53c9\u6811\uff08\u6216\u666e\u901a\u6811\u4f46\u5b50\u8282\u70b9\u6709\u987a\u5e8f\uff09\u3002</li> <li>\u81ea\u7136\u6570\u8ba4\u4e3a\u5305\u62ec\u96f6\u5417\uff1f\u5305\u62ec\u3002</li> <li>\u56fe\u4e2d\u9876\u70b9\u7684\u5ea6\u662f\u4ec0\u4e48\uff1f\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6570\u91cf\u3002\u6709\u5411\u56fe\u5206\u5165\u5ea6\u548c\u51fa\u5ea6\u3002</li> <li>\u6df1\u5ea6\u4f18\u5148\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6570\u636e\u7ed3\u6784\uff1aDFS \u8c03\u7528\u5806\u6808\uff0c\u5b9e\u73b0\u6df1\u5ea6\u4f18\u5148\uff1bBFS \u8c03\u7528\u961f\u5217\uff0c\u4fdd\u8bc1\u6309\u5c42\u904d\u5386\u3002</li> <li>\u6709\u5411\u56fe\u4e2d\u4e0d\u5b58\u5728\u56de\u8def\uff0c\u540c\u4e00\u8282\u70b9\u4e5f\u53ef\u80fd\u88ab\u591a\u6b21\u8bbf\u95ee\u3002\u56e0\u4e3a\u540c\u4e00\u8282\u70b9\u5165\u5ea6\u53ef\u80fd\u5927\u4e8e 1\uff0c\u5373\u53ef\u80fd\u88ab\u591a\u4e2a\u8282\u70b9\u6307\u5411\uff0c\u904d\u5386\u65f6\u53ef\u901a\u8fc7\u6bcf\u4e2a\u6307\u5411\u5b83\u7684\u8282\u70b9\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u3002</li> <li>\u5806\u6392\u5e8f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5927\u6839\u5806\uff1b\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5efa\u5c0f\u6839\u5806\u3002\u56e0\u4e3a\u5806\u6392\u5e8f\u7684\u89c4\u5b9a\u64cd\u4f5c\u4e3a\u5806\u9876\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362\u3002</li> <li>\u867d\u7136\u7ed9\u51fa\u5173\u952e\u5b57\u5e8f\u5217\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u4f46\u4f9d\u6b21\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u80fd\u4e0d\u4e00\u6837\u3002</li> <li>\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u56fe\u4e2d\u662f\u5426\u6709\u73af\u3002\u6392\u5e8f\u65f6\u5165\u5ea6\u4e3a\u96f6\u7684\u8282\u70b9\u52a0\u5165\uff0c\u5e76\u4f9d\u6b21\u4e3a\u57fa\u7840\u4fee\u6539\u5176\u4ed6\u70b9\u7684\u5165\u5ea6\u3002\u82e5\u6240\u6709\u70b9\u90fd\u88ab\u6392\u5e8f\uff0c\u5219\u6ca1\u6709\u73af\uff08DAG\uff09\uff1b\u82e5\u6709\u7684\u70b9\u6ca1\u6709\u88ab\u6392\u5e8f\uff0c\u5219\u6709\u73af\u3002</li> <li>Partial order is a precedence relation which is both transitive and irreflexive.\u504f\u5e8f\u5173\u7cfb\u662f\u4e00\u79cd\u4f18\u5148\u5173\u7cfb\uff0c\u6ee1\u8db3\u4f20\u9012\u6027\u548c\u975e\u81ea\u53cd\u6027\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#aoe-aov","title":"AOE \u7f51\u548c AOV \u7f51\u662f\u4ec0\u4e48","text":"<p>AOE \u7f51\uff08Activity On Edge network\uff09\uff0c\u5373\u8fb9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\u7edc\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u5de5\u7a0b\u9879\u76ee\u4e2d\u6d3b\u52a8\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u3002</p> <p>AOE \u7f51\u4e0e AOV \u7f51\u7684\u533a\u522b\uff1a</p> \u7279\u6027 AOE \u7f51 AOV \u7f51\uff08Activity On Vertex\uff09 \u8868\u793a\u65b9\u5f0f \u8fb9\u8868\u793a\u6d3b\u52a8\uff0c\u9876\u70b9\u8868\u793a\u4e8b\u4ef6 \u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u4f9d\u8d56\u5173\u7cfb \u6743\u503c \u8fb9\u6709\u6743\u503c\uff08\u6d3b\u52a8\u65f6\u95f4\uff09 \u8fb9\u65e0\u6743\u503c\uff08\u4ec5\u8868\u793a\u987a\u5e8f\uff09 \u5e94\u7528\u91cd\u70b9 \u8ba1\u7b97\u5173\u952e\u8def\u5f84\u548c\u5de5\u671f \u62d3\u6251\u6392\u5e8f\uff08\u786e\u5b9a\u6d3b\u52a8\u6267\u884c\u987a\u5e8f\uff09"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_17","title":"\u81ea\u5e95\u5411\u4e0a\u548c\u9010\u4e2a\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83","text":"<p>\u81ea\u5e95\u5411\u4e0a\u5efa\u5806\uff08Bottom-up Heap Construction\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u800c\u975e\u76f4\u89c2\u8ba4\u4e3a\u7684 O(n log n)\uff0c\u8fd9\u662f\u7531\u5806\u7684\u6811\u72b6\u7ed3\u6784\u7279\u6027\u548c\u6bcf\u5c42\u8282\u70b9\u6570\u4e0e\u8c03\u6574\u6210\u672c\u7684\u5e73\u8861\u51b3\u5b9a\u7684\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\uff1a</p> <p>1. \u590d\u6742\u5ea6\u5206\u6790\u7684\u6570\u5b66\u63a8\u5bfc \u5047\u8bbe\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u9ad8\u5ea6\u4e3a h = log\u2082n\uff0c\u5404\u5c42\u8282\u70b9\u6570\u548c\u8c03\u6574\u6210\u672c\u5982\u4e0b\uff1a</p> \u5c42\u7ea7\uff08\u4ece\u4e0b\u5230\u4e0a\uff09 \u8282\u70b9\u6570 \u6700\u591a\u4e0b\u6c89\u6b65\u6570\uff08\u9ad8\u5ea6\uff09 \u7b2c h \u5c42\uff08\u53f6\u5b50\uff09 \u2248 n/2 0\uff08\u65e0\u9700\u8c03\u6574\uff09 \u7b2c h-1 \u5c42 \u2248 n/4 1 \u7b2c h-2 \u5c42 \u2248 n/8 2 ... ... ... \u7b2c 0 \u5c42\uff08\u6839\uff09 1 h <p>\u603b\u8c03\u6574\u6b21\u6570 T(n) \u4e3a\u5404\u5c42\u8282\u70b9\u6570 \u00d7 \u5176\u4e0b\u6c89\u6b65\u6570\u4e4b\u548c\uff1a [ T(n) = \\sum{i=0}^{h-1} (\\text{\u7b2c } i \\text{ \u5c42\u8282\u70b9\u6570}) \\times (\\text{\u4e0b\u6c89\u6b65\u6570}) = \\sum \\cdot i ]}^{h-1} \\frac{n}{2^{i+1}</p> <p>\u7b80\u5316\u6c42\u548c\uff08\u4ee4 k = h - i\uff09\uff1a [ T(n) \\leq n \\sum{k=1}^{h} \\frac{k}{2^{k+1}} &lt; n \\sum = n \\cdot 2 = O(n) ]}^{\\infty} \\frac{k}{2^{k} \uff08\u6ce8\uff1a\u7ea7\u6570 (\\sum_{k=1}^{\\infty} \\frac{k}{2^k} = 2) \u662f\u6536\u655b\u7684\uff09</p> <p>2. \u76f4\u89c2\u7406\u89e3</p> <ul> <li>\u5927\u90e8\u5206\u8282\u70b9\u4f4d\u4e8e\u5e95\u5c42\uff1a\u7ea6 n/2 \u7684\u53f6\u5b50\u8282\u70b9\u65e0\u9700\u8c03\u6574\uff0cn/4 \u7684\u8282\u70b9\u53ea\u9700\u4e0b\u6c89 1 \u6b65\u3002</li> <li>\u9ad8\u5c42\u8282\u70b9\u5c11\u4f46\u4ee3\u4ef7\u9ad8\uff1a\u4ec5\u6709 1 \u4e2a\u6839\u8282\u70b9\u9700\u4e0b\u6c89 h \u6b65\uff0c\u4f46\u56e0\u5176\u6570\u91cf\u6781\u5c11\uff081 \u4e2a\uff09\uff0c\u5bf9\u603b\u590d\u6742\u5ea6\u7684\u8d21\u732e\u88ab\u4f4e\u5c42\u8282\u70b9\u5e73\u8861\u3002</li> </ul> <p>3. \u5bf9\u6bd4\u81ea\u9876\u5411\u4e0b\u5efa\u5806\uff08O(n log n)\uff09</p> <ul> <li>\u81ea\u9876\u5411\u4e0b\uff08\u63d2\u5165\u5f0f\u5efa\u5806\uff09\uff1a   \u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\u5e76\u6267\u884c \u4e0a\u6d6e\uff08Sift Up\uff09\uff0c\u5171 n \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6700\u574f O(log n)\uff0c\u603b\u590d\u6742\u5ea6 O(n log n)\u3002</li> <li>\u81ea\u5e95\u5411\u4e0a\uff1a   \u5229\u7528\u5df2\u6709\u5b50\u6811\u7ed3\u6784\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u8c03\u6574\uff0c\u8d8a\u4e0a\u5c42\u8282\u70b9\u8c03\u6574\u6b21\u6570\u8d8a\u591a\uff0c\u4f46\u8282\u70b9\u6570\u6307\u6570\u7ea7\u51cf\u5c11\uff0c\u603b\u548c\u6536\u655b\u4e3a O(n)\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_18","title":"\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6\u603b\u8868</p> \u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u4f18\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u9002\u7528\u573a\u666f \u5192\u6ce1\u6392\u5e8f (O(n^2)) (O(n^2)) (O(n)) (O(1)) \u7a33\u5b9a \u6559\u5b66\u3001\u5c0f\u89c4\u6a21\u6570\u636e \u9009\u62e9\u6392\u5e8f (O(n^2)) (O(n^2)) (O(n^2)) (O(1)) \u4e0d\u7a33\u5b9a \u7b80\u5355\u5b9e\u73b0\uff0c\u4ea4\u6362\u6b21\u6570\u5c11 \u63d2\u5165\u6392\u5e8f (O(n^2)) (O(n^2)) (O(n)) (O(1)) \u7a33\u5b9a \u5c0f\u89c4\u6a21\u6216\u90e8\u5206\u6709\u5e8f\u6570\u636e \u5e0c\u5c14\u6392\u5e8f (O(n^{1.3})) (O(n^2)) (O(n)) (O(1)) \u4e0d\u7a33\u5b9a \u4e2d\u7b49\u89c4\u6a21\u6570\u636e\uff0c\u63d2\u5165\u6392\u5e8f\u4f18\u5316\u7248 \u5f52\u5e76\u6392\u5e8f (O(n \\log n)) (O(n \\log n)) (O(n \\log n)) (O(n)) \u7a33\u5b9a \u5927\u89c4\u6a21\u6570\u636e\uff0c\u5916\u90e8\u6392\u5e8f \u5feb\u901f\u6392\u5e8f (O(n \\log n)) (O(n^2)) (O(n \\log n)) (O(\\log n))~(O(n)) \u4e0d\u7a33\u5b9a \u901a\u7528\u9ad8\u6548\uff0c\u5185\u5b58\u6392\u5e8f \u5806\u6392\u5e8f (O(n \\log n)) (O(n \\log n)) (O(n \\log n)) (O(1)) \u4e0d\u7a33\u5b9a \u9700\u8981\u539f\u5730\u6392\u5e8f \u8ba1\u6570\u6392\u5e8f (O(n + k)) (O(n + k)) (O(n + k)) (O(n + k)) \u7a33\u5b9a \u975e\u8d1f\u6574\u6570\uff0c\u8303\u56f4 k \u8f83\u5c0f \u6876\u6392\u5e8f (O(n + k)) (O(n^2)) (O(n)) (O(n + k)) \u7a33\u5b9a \u6570\u636e\u5747\u5300\u5206\u5e03 \u57fa\u6570\u6392\u5e8f (O(n \\times k)) (O(n \\times k)) (O(n \\times k)) (O(n + k)) \u7a33\u5b9a \u591a\u5173\u952e\u5b57\u6392\u5e8f\uff08\u5982\u5b57\u7b26\u4e32\uff09 <p>\u5173\u952e\u8bf4\u660e</p> <ol> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u5e73\u5747\u6027\u80fd\u6700\u4f18\uff0c\u4f46\u6700\u574f\u60c5\u51b5\uff08\u5982\u5df2\u6392\u5e8f\u6570\u7ec4\uff09\u9000\u5316\u4e3a (O(n^2))\uff0c\u53ef\u901a\u8fc7\u968f\u673a\u5316\u67a2\u8f74\u907f\u514d\u3002</p> </li> <li>\u5806\u6392\u5e8f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\uff0c\u4f46\u5e38\u6570\u56e0\u5b50\u8f83\u5927\uff0c\u5b9e\u9645\u6162\u4e8e\u5feb\u901f\u6392\u5e8f\u3002</li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a\u5747\u57fa\u4e8e\u975e\u6bd4\u8f83\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a81\u7834 (O(n \\log n))\uff0c\u4f46\u9700\u7279\u5b9a\u6761\u4ef6\uff08\u5982\u6570\u636e\u8303\u56f4\u6709\u9650\uff09\u3002</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u539f\u5730\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a (O(1))\u3002</p> </li> <li> <p>\u9012\u5f52\u5f00\u9500\uff1a\u5feb\u901f\u6392\u5e8f\u5e73\u5747 (O(\\log n))\uff08\u9012\u5f52\u6808\uff09\uff0c\u6700\u574f (O(n))\uff1b\u5f52\u5e76\u6392\u5e8f\u9700 (O(n)) \u989d\u5916\u7a7a\u95f4\u3002</p> </li> <li> <p>\u7a33\u5b9a\u6027\uff1a</p> </li> <li>\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5f52\u5e76\u3001\u5192\u6ce1\uff09\u4fdd\u6301\u76f8\u7b49\u5143\u7d20\u7684\u539f\u59cb\u987a\u5e8f\uff0c\u9002\u7528\u4e8e\u591a\u5173\u952e\u5b57\u6392\u5e8f\u3002</li> <li>\u4e0d\u7a33\u5b9a\u7b97\u6cd5\uff08\u5982\u5feb\u901f\u3001\u5806\u6392\u5e8f\uff09\u53ef\u80fd\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002</li> </ol> <p>\u5404\u7b97\u6cd5\u7279\u70b9\u53ca\u9002\u7528\u573a\u666f</p> <ol> <li> <p>\u5feb\u901f\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u5e73\u5747\u6548\u7387\u6700\u9ad8\uff0c\u7f13\u5b58\u53cb\u597d\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u6700\u574f\u60c5\u51b5\u6027\u80fd\u5dee\uff0c\u9700\u4f18\u5316\u67a2\u8f74\u9009\u62e9\u3002</li> <li> <p>\u9002\u7528\uff1a\u901a\u7528\u573a\u666f\uff0c\u5185\u5b58\u6392\u5e8f\uff08\u5982 C++ <code>std::sort</code>\uff09\u3002</p> </li> <li> <p>\u5f52\u5e76\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u7a33\u5b9a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u9700\u989d\u5916\u7a7a\u95f4\u3002</li> <li> <p>\u9002\u7528\uff1a\u5916\u90e8\u6392\u5e8f\uff08\u5927\u6570\u636e\u6587\u4ef6\uff09\u3001\u94fe\u8868\u6392\u5e8f\u3002</p> </li> <li> <p>\u5806\u6392\u5e8f\uff1a</p> </li> <li> <p>\u4f18\u70b9\uff1a\u539f\u5730\u6392\u5e8f\uff0c\u65e0\u6700\u574f\u60c5\u51b5\u98ce\u9669\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u7f13\u5b58\u4e0d\u53cb\u597d\uff0c\u5b9e\u9645\u901f\u5ea6\u8f83\u6162\u3002</li> <li> <p>\u9002\u7528\uff1a\u5185\u5b58\u53d7\u9650\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002</p> </li> <li> <p>\u8ba1\u6570/\u6876/\u57fa\u6570\u6392\u5e8f\uff1a</p> </li> <li>\u4f18\u70b9\uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li> <li>\u7f3a\u70b9\uff1a\u5bf9\u6570\u636e\u5206\u5e03\u6709\u8981\u6c42\uff08\u5982\u8303\u56f4\u5c0f\u3001\u5747\u5300\u5206\u5e03\uff09\u3002</li> <li>\u9002\u7528\uff1a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\uff08\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\uff09\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_19","title":"\u6808\u3001\u961f\u5217\u3001\u6811\u3001\u56fe\u5404\u79cd\u57fa\u672c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u4e00\u3001\u6808\uff08Stack\uff09 \u6808\u901a\u5e38\u7528 \u6570\u7ec4 \u6216 \u94fe\u8868 \u5b9e\u73b0\uff0c\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff1a</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u6808 <code>push</code> (O(1)) \u76f4\u63a5\u6dfb\u52a0\u5230\u6808\u9876 \u51fa\u6808 <code>pop</code> (O(1)) \u76f4\u63a5\u79fb\u9664\u6808\u9876\u5143\u7d20 \u67e5\u770b\u6808\u9876 <code>peek</code> (O(1)) \u8bbf\u95ee\u6808\u9876\u5143\u7d20\uff0c\u4e0d\u5220\u9664 \u5224\u7a7a <code>isEmpty</code> (O(1)) \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a \u641c\u7d22\u5143\u7d20 (O(n)) \u9700\u8981\u904d\u5386\u6240\u6709\u5143\u7d20 <p>\u4e8c\u3001\u961f\u5217\uff08Queue\uff09 1. \u666e\u901a\u961f\u5217\uff08\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u5165\u961f <code>enqueue</code> (O(1)) \u6dfb\u52a0\u5230\u961f\u5c3e \u51fa\u961f <code>dequeue</code> (O(1)) \u79fb\u9664\u961f\u5934\u5143\u7d20\uff08\u94fe\u8868\u5b9e\u73b0\uff09 (O(n)) \u6570\u7ec4\u5b9e\u73b0\u9700\u79fb\u52a8\u5143\u7d20\uff08\u82e5\u7528\u5faa\u73af\u6570\u7ec4\u4f18\u5316\u4e3a (O(1))\uff09 \u67e5\u770b\u961f\u5934 <code>peek</code> (O(1)) \u8bbf\u95ee\u961f\u5934\u5143\u7d20 <p>2. \u4f18\u5148\u961f\u5217\uff08Priority Queue\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 (O(\\log n)) \u57fa\u4e8e\u5806\uff08Heap\uff09\u5b9e\u73b0 \u5220\u9664\u6700\u5927\u503c/\u6700\u5c0f\u503c (O(\\log n)) \u5806\u8c03\u6574 \u67e5\u770b\u6700\u5927\u503c/\u6700\u5c0f\u503c (O(1)) \u8bbf\u95ee\u5806\u9876\u5143\u7d20 <p>\u4e09\u3001\u6811\uff08Tree\uff09 1. \u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff0c\u672a\u5e73\u8861\uff09</p> \u64cd\u4f5c \u5e73\u5747 \u6700\u574f\uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09 \u8bf4\u660e \u63d2\u5165 (O(\\log n)) (O(n)) \u4f9d\u8d56\u6811\u7684\u9ad8\u5ea6 \u5220\u9664 (O(\\log n)) (O(n)) \u67e5\u627e (O(\\log n)) (O(n)) <p>2. \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff08AVL/\u7ea2\u9ed1\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 (O(\\log n)) \u65cb\u8f6c\u64cd\u4f5c\u4fdd\u6301\u5e73\u8861 \u5220\u9664 (O(\\log n)) \u67e5\u627e (O(\\log n)) <p>3. \u5806\uff08Heap\uff0c\u4ee5\u4e8c\u53c9\u5806\u4e3a\u4f8b\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165 <code>push</code> (O(\\log n)) \u4e0a\u6d6e\u8c03\u6574 \u5220\u9664\u5806\u9876 <code>pop</code> (O(\\log n)) \u4e0b\u6c89\u8c03\u6574 \u67e5\u770b\u5806\u9876 <code>peek</code> (O(1)) \u6784\u5efa\u5806 <code>heapify</code> (O(n)) \u4ece\u65e0\u5e8f\u6570\u7ec4\u6784\u5efa\u5806 <p>4. Trie\uff08\u5b57\u5178\u6811\uff09</p> \u64cd\u4f5c \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u63d2\u5165/\u5220\u9664 (O(L)) (L) \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6 \u67e5\u627e (O(L)) <p>\u56db\u3001\u56fe\uff08Graph\uff09 1. \u56fe\u7684\u8868\u793a\u65b9\u5f0f</p> <ul> <li> <p>\u90bb\u63a5\u77e9\u9635\uff1a</p> </li> <li> <p>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a(O(1))</p> </li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a(O(V))\uff08(V) \u4e3a\u9876\u70b9\u6570\uff09</li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a(O(V^2))</p> </li> <li> <p>\u90bb\u63a5\u8868\uff1a</p> </li> <li>\u67e5\u8be2\u8fb9\u662f\u5426\u5b58\u5728\uff1a(O(k))\uff08(k) \u4e3a\u76f8\u90bb\u8282\u70b9\u6570\uff09</li> <li>\u904d\u5386\u76f8\u90bb\u8282\u70b9\uff1a(O(k))</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a(O(V + E))\uff08(E) \u4e3a\u8fb9\u6570\uff09</li> </ul> <p>2. \u5e38\u89c1\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6</p> \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u8bf4\u660e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 (O(V + E)) \u90bb\u63a5\u8868\u8868\u793a \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 (O(V + E)) Dijkstra\uff08\u4f18\u5148\u961f\u5217\uff09 (O((V + E) \\log V)) \u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u65e0\u8d1f\u6743\u8fb9\uff09 Bellman-Ford (O(VE)) \u5141\u8bb8\u8d1f\u6743\u8fb9 Floyd-Warshall (O(V^3)) \u591a\u6e90\u6700\u77ed\u8def\u5f84 \u62d3\u6251\u6392\u5e8f (O(V + E)) \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09 Kruskal\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09 (O(E \\log E)) \u57fa\u4e8e\u5e76\u67e5\u96c6\u4f18\u5316 Prim\uff08\u4f18\u5148\u961f\u5217\uff09 (O(E \\log V))"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_20","title":"\u6808,\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808","text":"<p>\u6808\u5206\u4e3a\u987a\u5e8f\u6808(\u6570\u7ec4\u5b58\u50a8)\u548c\u94fe\u5f0f\u6808(\u94fe\u8868\u5b58\u50a8)\u4e24\u79cd.</p> \u7279\u6027 \u987a\u5e8f\u6808 \u666e\u901a\u6808\uff08\u6cdb\u6307\uff09 \u5b9e\u73b0\u65b9\u5f0f \u6570\u7ec4\uff08\u8fde\u7eed\u5185\u5b58\uff09 \u4e0d\u9650\u5b9a\uff08\u53ef\u80fd\u662f\u94fe\u5f0f\u6808\u3001\u987a\u5e8f\u6808\u7b49\uff09 \u5b58\u50a8\u7ed3\u6784 \u5185\u5b58\u8fde\u7eed \u53ef\u80fd\u8fde\u7eed\uff08\u987a\u5e8f\u6808\uff09\u6216\u975e\u8fde\u7eed\uff08\u94fe\u5f0f\u6808\uff09 \u5bb9\u91cf \u56fa\u5b9a\u5927\u5c0f\uff08\u9700\u9884\u5206\u914d\uff09 \u53ef\u56fa\u5b9a\uff08\u987a\u5e8f\u6808\uff09\u6216\u52a8\u6001\uff08\u94fe\u5f0f\u6808\uff09 \u6269\u5bb9\u6210\u672c \u9700\u590d\u5236\u5168\u90e8\u5143\u7d20\uff08\u9ad8\u6210\u672c\uff09 \u94fe\u5f0f\u6808\u52a8\u6001\u6269\u5c55\uff08\u4f4e\u6210\u672c\uff09 \u64cd\u4f5c\u901f\u5ea6 \u6240\u6709\u64cd\u4f5c ( O(1) )\uff08\u65e0\u6307\u9488\u5f00\u9500\uff09 \u94fe\u5f0f\u6808\u64cd\u4f5c\u9700\u7ef4\u62a4\u6307\u9488\uff08\u4ecd\u4e3a ( O(1) )\uff09 \u9002\u7528\u573a\u666f \u5143\u7d20\u6570\u91cf\u5df2\u77e5\u3001\u9ad8\u9891\u64cd\u4f5c \u5143\u7d20\u6570\u91cf\u4e0d\u786e\u5b9a\u6216\u9700\u9891\u7e41\u589e\u5220"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_21","title":"\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868","text":"<p>\u4e0d\u53cd\u8f6c\u94fe\u8868\uff0c\u9012\u5f52\u5012\u5e8f\u8f93\u51fa:</p> <ol> <li>\u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9</li> <li>\u5728\u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u503c</li> </ol> <p>\u5012\u5e8f\u8f93\u51fa\u5355\u94fe\u8868:</p> <pre><code>void printReverse(Node* head) {\n  if (head == NULL) // \u8fd4\u56de\u6761\u4ef6:\u7a7a\u94fe\u8868\n   return;\n\n  printReverse(head-&gt;next); // \u5148\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8282\u70b9\n  printf(\"%d \", head-&gt;data); // \u9012\u5f52\u8fd4\u56de\u540e\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u6570\u636e\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_22","title":"\u4e2d\u7f00\u8f6c\u540e\u7f00","text":"<p>\u6570\u636e\u7ed3\u6784:stack,\u7528\u4e8e\u5b58\u653e\u8fd0\u7b97\u7b26;output,\u7528\u4e8e\u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f \u6b65\u9aa4:</p> <ol> <li>\u8f93\u5165\u53d8\u91cf:\u76f4\u63a5\u653e\u5165 output</li> <li>\u8f93\u5165(:\u653e\u5165 stack</li> <li>\u8f93\u5165):\u5c06 stack \u4e2d(\u4e4b\u524d\u7684\u7b26\u53f7\u5168\u90e8\u5f39\u51fa,\u653e\u5165 output</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u9ad8\u7684\u8fd0\u7b97\u7b26:\u653e\u5165 stack</li> <li>\u8f93\u5165\u6bd4\u6808\u9876\u4f18\u5148\u7ea7\u4f4e\u7684\u8fd0\u7b97\u7b26:\u5f39\u51fa\u4f18\u5148\u7ea7\u9ad8\u7684\u6808\u9876\u7b26\u53f7,\u518d\u5c06\u8be5\u7b26\u53f7\u653e\u5165 stack</li> <li>\u8f93\u5165\u7ed3\u675f:\u5c06 stack \u4e2d\u5269\u4f59\u7b26\u53f7\u4f9d\u6b21\u5f39\u51fa,\u653e\u5165 output    \u4ee3\u7801:</li> </ol> <pre><code>char postfix[N]; // \u5b58\u653e\u540e\u7f00\u8868\u8fbe\u5f0f\nchar stk[N];     // \u5b58\u653e\u8fd0\u7b97\u7b26\n\nvoid infixToPostfix (char* infix, char* postfix) {\n  for (int i = 0; i &lt; \u8868\u8fbe\u5f0f\u957f\u5ea6; i++) {\n    char ch = infix[i];\n    int j = 0; // \u8ddf\u8e2apostfix\u4e2d\u4f4d\u7f6e\n    if (ch\u662f\u6570\u5b57\u6216\u53d8\u91cf) {\n      postfix[j++] = ch;\n    } else if (ch == '(') {\n      push(stk, ch);\n    } else if (ch == ')') {\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876 != '(') {\n        postfix[j++] = pop(stk);\n      }\n      pop(stk); // \u5f39\u51fa\u5de6\u62ec\u53f7\n    } else {    // \u8fd0\u7b97\u7b26\u5904\u7406\n      while (\u6808\u975e\u7a7a &amp;&amp; \u6808\u9876\u5143\u7d20\u4f18\u5148\u7ea7 &gt;= ch\u7684\u4f18\u5148\u7ea7) {\n        postfix[j++] = pop(stk);\n      }\n      push(stk, ch);\n    }\n  }\n  while (\u6808\u975e\u7a7a) { // \u5f39\u51fa\u5269\u4f59\u8fd0\u7b97\u7b26\n    postfix[j++] = pop(stk);\n  }\n  postfix[j] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#bst","title":"BST \u6811\u64cd\u4f5c","text":"<p>\u7279\u70b9:\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5c0f,\u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u90fd\u6bd4\u6839\u5927. BST \u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 \u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9 BST \u6811\u63d2\u5165:</p> <ol> <li>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e:\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5927,\u5f80\u5de6\u8d70;\u5982\u679c\u63d2\u5165\u7684\u6570\u6bd4\u6839\u5c0f,\u5f80\u53f3\u8d70</li> <li>\u65b0\u5efa\u8282\u70b9\u5e76\u8fde\u63a5(\u63d2\u5165\u5f62\u6210\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u53f6\u8282\u70b9)    BST \u6811\u5220\u9664:</li> <li>\u53f6\u8282\u70b9:\u76f4\u63a5\u5220\u9664</li> <li>\u6709\u4e00\u4e2a\u513f\u5b50:\u5220\u9664\u7236\u4eb2,\u7528\u513f\u5b50\u4ee3\u66ff</li> <li>\u6709\u4e24\u4e2a\u513f\u5b50:\u627e\u5230\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u5e76\u5220\u9664,\u5220\u9664\u6839,\u7528\u8be5\u8282\u70b9\u4ee3\u66ff</li> </ol> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> <pre><code>BSTNode* insert(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return \u5efa\u7acb\u65b0\u8282\u70b9; // \u8fd4\u56de\u6761\u4ef6\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = insert(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = insert(rt\u7684\u53f3\u5b50\u6811, val);\n  }\n  return rt;\n}\n</code></pre> <p>BST \u6811\u63d2\u5165\u8282\u70b9(\u5faa\u73af,\u6570\u7ec4):</p> <pre><code>void insert(int* bst, int val) {\n  if (bst[1]\u4e3a\u521d\u59cb\u503c) {\n    bst[1] = val; // val\u662f\u6839\n    return;\n  }\n\n  int cur = 1; // \u4ece\u6839\u5f00\u59cb\n  if (val &lt; bst[cur]) {\n    if (cur\u5de6\u5b50\u6811\u7a7a) {\n      bst[cur * 2] = val;\n      break;\n    } else {\n      cur = cur * 2;   // \u4e0b\u79fbcur\n    }\n  } else if (val &gt; bst[cur]) {\n    if (cur\u53f3\u5b50\u6811\u7a7a) {\n      bst[cur * 2 + 1] = val;\n      break;\n    } else {\n      cur = cur *2 + 1; // \u4e0b\u79fbcur\n    }\n  } else { // val\u5df2\u5b58\u5728\n    break;\n  }\n}\n</code></pre> <p>BST \u6811\u5220\u9664\u8282\u70b9(\u9012\u5f52,\u94fe\u8868):</p> <pre><code>BSTNode* delete(BSTNode* rt, int val) {\n  if (rt\u4e3a\u7a7a)\n    return rt;\n\n  if (val &lt; rt\u7684\u503c) {\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, val);\n  } else if (val &gt; rt\u7684\u503c) {\n    rt\u7684\u53f3\u513f\u5b50 = delete(rt\u7684\u53f3\u5b50\u6811, val);\n  } else { // \u8981\u5220\u9664rt\n    // \u60c5\u51b51:\u662f\u53f6\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\n    if (rt\u7684\u5de6\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u53f3\u513f\u5b50;\n      free(rt);\n      return tmp;\n    } else if (rt\u7684\u53f3\u513f\u5b50 == NULL) {\n      BSTNode* tmp = rt\u7684\u5de6\u513f\u5b50;\n      free(rt);\n      return tmp;\n    }\n    // \u60c5\u51b52:rt\u6709\u4e24\u4e2a\u513f\u5b50\n    BSTNode* tmp = rt\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9;\n    rt\u7684\u503c = tmp\u7684\u503c;\n    rt\u7684\u5de6\u513f\u5b50 = delete(rt\u7684\u5de6\u5b50\u6811, tmp\u7684\u503c);\n  }\n  return rt;\n}\n</code></pre> <p>\u8f85\u52a9\u51fd\u6570,\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u8282\u70b9:</p> <pre><code>BSTNode* findMax(BSTNode* node) {\n  while (node\u7684\u5de6\u5b50\u6811\u975e\u7a7a) {\n    node = node\u7684\u5de6\u513f\u5b50;\n  }\n  return node;\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#avl","title":"AVL \u6811\u5e73\u8861","text":"<p>\u5e73\u8861\u56e0\u5b50 BF:\u5de6\u5b50\u6811\u9ad8\u5ea6-\u53f3\u5b50\u6811\u9ad8\u5ea6 \u5e73\u8861\u56e0\u5b50\u7edd\u5bf9\u503c\u9700\u8981&lt;=1 \u6bcf\u6b21\u63d2\u5165\u6216\u5220\u9664\u540e\u901a\u8fc7\u65cb\u8f6c\u4fdd\u6301\u5e73\u8861</p> \u5931\u8861\u7c7b\u578b \u5931\u8861\u8282\u70b9 BF \u5931\u8861\u8282\u70b9\u513f\u5b50 BF \u65cb\u8f6c\u65b9\u5f0f LL \u578b 2 \u5de6 1 \u53f3\u65cb RR \u578b -2 \u53f3 -1 \u5de6\u65cb LR \u578b 2 \u5de6 -1 \u5de6\u65cb\u5de6\u513f\u5b50,\u7136\u540e\u53f3\u65cb RL \u578b -2 \u53f3 1 \u53f3\u65cb\u53f3\u513f\u5b50,\u7136\u540e\u5de6\u65cb <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> <pre><code>AVLNode* leftRotate(AVLNode *y) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *x = y-&gt;right;\n    AVLNode *B = x-&gt;left;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    x-&gt;left = y;\n    y-&gt;right = B; // \u51b2\u7a81\u7684\u5de6\u513f\u5b50\u53d8\u4e3a\u53f3\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0y\uff0c\u518d\u66f4\u65b0x\uff09\n    updateHeight(y);\n    updateHeight(x);\n\n    return x; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: y x \\ / \\  x -- \u5de6\u65cb(y) --&gt; y C / \\ \\  B C B</p> <p>AVL \u6811\u5de6\u65cb(\u9012\u5f52,\u94fe\u8868):</p> <pre><code>AVLNode* rightRotate(AVLNode *x) {\n    // \u4fdd\u5b58\u8282\u70b9\u6307\u9488\n    AVLNode *y = x-&gt;left;\n    AVLNode *B = y-&gt;right;\n\n    // \u65cb\u8f6c\u64cd\u4f5c\n    y-&gt;right = x;\n    x-&gt;left = B; // \u51b2\u7a81\u7684\u53f3\u513f\u5b50\u53d8\u4e3a\u5de6\u513f\u5b50\n\n    // \u66f4\u65b0\u9ad8\u5ea6\uff08\u5fc5\u987b\u5148\u66f4\u65b0x\uff0c\u518d\u66f4\u65b0y\uff09\n    updateHeight(x);\n    updateHeight(y);\n\n    return y; // \u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre> <p>\u56fe\u793a: x y / / \\  y -- \u53f3\u65cb(x) --&gt; A x / \\ / A B B</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_23","title":"\u5806\u7684\u64cd\u4f5c(\u5927\u6839\u5806\u4e3a\u4f8b)","text":"<p>\u5927\u6839\u5806\u7684\u7279\u70b9:\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9,\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6240\u6709\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u503c \u5806\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5c06\u666e\u901a\u5b8c\u5168\u4e8c\u53c9\u6811\u6539\u4e3a\u5927\u6839\u5806:</p> <p>\u4ece\u7b2c\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\u5012\u7740\u904d\u5386,\u5c06\u6bcf\u4e2a\u5b50\u6811\u6539\u4e3a\u5806 (1) \u5982\u679c\u6839\u7684\u503c\u5927\u4e8e\u5de6\u53f3\u513f\u5b50,continue (2) \u5982\u679c\u6839\u7684\u503c\u5c0f\u4e8e\u4e00\u4e2a\u513f\u5b50,\u7528\u8be5\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb (3) \u5982\u679c\u6839\u6bd4\u4e24\u4e2a\u513f\u5b50\u90fd\u5c0f,\u7528\u8f83\u5927\u7684\u513f\u5b50\u4ee3\u66ff\u6839,\u5c06\u6839\u4e0b\u79fb</p> <p>\u5927\u6839\u5806\u4e2d\u63d2\u5165\u5143\u7d20:</p> <ol> <li>\u63d2\u5165\u672b\u5c3e</li> <li>\u4e0a\u6d6e\u5230\u6b63\u786e\u4f4d\u7f6e</li> </ol> <p>\u5927\u6839\u5806\u6392\u5e8f:</p> <ol> <li>\u5efa\u7acb\u5927\u6839\u5806</li> <li>\u5c06\u5806\u9876\u548c\u6700\u540e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u5143\u7d20\u4ea4\u6362,\u8c03\u6574\u672a\u6392\u5e8f\u7684\u90e8\u5206,\u76f4\u5230\u5168\u90e8\u6392\u5e8f</li> </ol> <p>\u5806\u5316:</p> <pre><code>// \u8f85\u52a9\u51fd\u6570,\u5c06i\u4e3a\u6839\u7684\u5b50\u6811\u5806\u5316\nvoid heapify(int* arr, int n, int i) {\n  int largest = i;\n  if (\u5de6\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u5de6\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u5de6\u513f\u5b50\u4f4d\u7f6e;\n  }\n  if (\u53f3\u513f\u5b50\u4f4d\u7f6e &lt; n &amp;&amp; arr[\u53f3\u513f\u5b50] &gt; arr[largest]) {\n    largest = \u53f3\u513f\u5b50\u4f4d\u7f6e;\n  }\n\n  if (largest != i) {\n    \u4ea4\u6362arr[i]\u548carr[largest];\n    heapify(arr, n, largest);  // \u9012\u5f52\u8c03\u6574\u53d7\u5f71\u54cd\u7684\u5b50\u6811\n  }\n}\n\n// \u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u8f6c\u6362\u4e3a\u5927\u6839\u5806\nvoid buildMaxHeap(int arr[], int n) {\n    // \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u524d\u904d\u5386\u5230\u6839\u8282\u70b9\n    for (int i = n / 2 - 1; i &gt;= 0; i--) {\n        heapify(arr, n, i);\n    }\n}\n</code></pre> <p>\u5806\u4e2d\u63d2\u5165\u8282\u70b9:</p> <pre><code>// \u8f85\u52a9\u51fd\u6570,\u4e0a\u6d6e\nvoid siftUp(int* heap, int idx) {\n  while (idx &gt; 0) {\n    int pa = idx\u7236\u4eb2\u7684\u7d22\u5f15;\n  }\n  if (heap[idx] &gt; heap[pa]) {\n    \u4ea4\u6362heap[idx]\u548cheap[pa];\n    idx = pa; // \u66f4\u65b0\u7d22\u5f15,\u5411\u4e0a\u68c0\u67e5\n  } else {\n    break;\n  }\n}\n\n// \u5411\u5927\u6839\u5806\u4e2d\u63d2\u5165\u65b0\u5143\u7d20\nvoid insertMaxHeap(int* heap, int size, int capacity, int val) {\n  if (size &gt; capacity)\n    return;\n\n  heap[size++] = val; // \u6dfb\u52a0\u5230\u672b\u5c3e\n  siftUp(heap, size-1);\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> <pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#smileclass-five","title":":smile:Class Five","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_24","title":"\u4f18\u5148\u961f\u5217(\u5806)","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_25","title":"\u76ee\u6807\u529f\u80fd","text":"<p>insert \u548c delete,\u4e14\u6bcf\u6b21 delete \u5220\u9664\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_26","title":"\u5b9e\u73b0(\u5c0f\u6839\u5806\u4e3a\u4f8b)","text":"<ul> <li>\u51e0\u79cd\u4f20\u7edf\u65b9\u6cd5:\u6570\u7ec4,\u94fe\u8868,\u6709\u5e8f\u6570\u7ec4,\u6709\u5e8f\u94fe\u8868...</li> <li>\u5c0f\u6839\u5806:\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5b83\u6240\u5728\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9(order property).</li> <li>\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u662f\u4ece\u5c0f\u5230\u5927.\u6bcf\u6b21\u63d2\u5165\u65b0\u8282\u70b9\u65f6,\u5728\u5f53\u524d\u8282\u70b9\u8c03\u6210\u4ece\u5c0f\u5230\u5927\u5373\u53ef.(\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f,\u7531 i \u8ddf i-1 \u6bd4\u6362\u6210 i \u8ddf i/2 \u6bd4)</li> <li>\u4e00\u5c42\u4e00\u5c42\u63d2\u5165,\u5f97\u5230\u5b8c\u5168\u4e8c\u53c9\u6811(structure property).</li> <li>\u591a\u53c9\u5806?\u6811\u7684\u9ad8\u5ea6\u964d\u4f4e,\u4f46\u603b\u65f6\u95f4\u4e0d\u53d8.</li> <li>\u63d2\u5165:</li> </ul> <pre><code>// \u63d2\u5165\u5143\u7d20\nbool Insert(Heap H, int x){\n  if (\u5806\u5df2\u6ee1) return false\n\n  i\u8868\u793a\u5f53\u524d\u5806\u7684\u5927\u5c0f(\u539f\u5148\u5927\u5c0f+1)\n  for (i\u7684\u7236\u4eb2\u6bd4i\u5904\u7684\u503c\u5927,i/2) {\n    i\u7684\u7236\u4eb2\u4e0b\u79fb\u5230i\u5904\n  }\n  // \u6b64\u65f6i\u7684\u7236\u4eb2\u6bd4i\u5c0f,i\u8868\u793a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u7b2ci\u4f4d\u7684\u503c\u8d4b\u4e3ax\n}\n\n// \u5220\u9664(\u5c0f\u6839\u5806)\nint DeleteMin(Heap H) {\n  if (\u5806\u662f\u7a7a\u7684)\n    return ERROR\n\n  min\u8868\u793a\u6700\u5c0f\u503c(\u6839)\n  x\u8868\u793a\u5f53\u524d\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20(\u5806\u7684\u5927\u5c0f\u4e3a\u539f\u5148\u5927\u5c0f-1)\n  pa\u8868\u793a\u904d\u5386\u7684\u8282\u70b9,child\u8868\u793a\u8f83\u5c0f\u7684\u5b50\u8282\u70b9\n\n  for (pa\u4ece\u6839\u5f00\u59cb,pa\u7684\u513f\u5b50\u4e0d\u8d85\u8fc7\u5806\u7684\u5927\u5c0f,pa\u66f4\u65b0\u4e3achild) {\n    \u5047\u8bbe\u8f83\u5c0f\u7684child\u662fpa\u7684\u5de6\u513f\u5b50\n    if (child\u4e0d\u662f\u6700\u540e\u4e00\u4e2a,\u800c\u4e14\u53f3\u513f\u5b50\u7684\u503c\u66f4\u5c0f) {\n      child\u66f4\u65b0\u4e3apa\u7684\u53f3\u513f\u5b50\n    }\n\n    if (child\u7684\u503c\u6bd4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5927)\n      break\n    else\n      pa\u7684\u503c\u4e0b\u79fb\u5230child\n  }\n\n  // \u6b64\u65f6pa\u8868\u793ax\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\n  \u5c06\u7b2cpa\u4f4d\u8d4b\u4e3ax\n\n  return min\n}\n\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_27","title":"\u52a8\u6001\u7b49\u4ef7\u5173\u7cfb","text":"<p>\u7ed9\u5b9a\u5143\u7d20\u548c\u51e0\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb,\u6c42\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u662f\u5426\u7b49\u4ef7.</p> <pre><code>// \u6784\u5efa\nwhile (\u8bfb\u5165a\u548cb\u7b49\u4ef7) {\n  if (a\u7684\u96c6\u5408!=b\u7684\u96c6\u5408) {\n    \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n  }\n}\n\n// \u67e5\u8be2\n\u8bfb\u5165\u4e24\u4e2a\u8981\u67e5\u8be2\u7684\u5143\u7d20\nif (a\u7684\u96c6\u5408==b\u7684\u96c6\u5408) {\n  print (true)\n}\n</code></pre> <p>\u7528\u6570\u7ec4\u8868\u793a:\u4e0b\u6807\u4ee3\u8868\u5143\u7d20,\u503c\u4ee3\u8868\u6839</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#cloud_with_lightning_and_rainclass-six","title":":cloud_with_lightning_and_rain:Class Six","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_28","title":"\u8003\u8bd5\u9898\u578b","text":"<p>\u9009\u62e9\u9898,\u51fd\u6570\u586b\u7a7a,\u51fd\u6570\u7f16\u7a0b\u9898(1 \u9898)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_29","title":"\u7b49\u4ef7\u7c7b\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u96c6\u5408,\u7ed9\u5b9a\u8c01\u548c\u8c01\u7b49\u4ef7,\u6839\u636e\u6b64\u7b49\u4ef7\u5212\u5206\u96c6\u5408. e.g.\u8c01\u548c\u8c01\u662f\u4e00\u7ec4,\u56fe\u4e2d\u6700\u5c0f\u751f\u6210\u6811(\u57ce\u5e02\u4e4b\u95f4\u8fde\u901a\u9053\u8def\u7684\u6700\u5c0f\u957f\u5ea6) \u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u79cd\u65b9\u6cd5:</p> <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\u751f\u6210\u7684\u56fe\u68c0\u9a8c. \u5f53\u653e\u5165\u8fb9\u540e\u5f62\u6210\u56de\u8def\u65f6,\u8be5\u8fb9\u4e0d\u6b63\u786e. \u6838\u5fc3\u662f\u7ed9\u5b9a\u4e00\u6761\u8fb9,\u5224\u5b9a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u5c5e\u4e8e\u4ec0\u4e48\u96c6\u5408.\u5982\u679c\u5728\u540c\u4e00\u7ec4,\u653e\u5165;\u5728\u4e0d\u540c\u7ec4,\u4e0d\u653e\u5165. \u7528<code>find</code>\u51fd\u6570\u5b9e\u73b0,\u540c\u4e00\u7ec4\u7684\u70b9\u7528<code>union</code>\u8fde\u63a5.</p> <ul> <li>\u7528\u6811\u8868\u793a:\u8fd9\u6837\u7684\u6811\u4e0d\u9700\u8981\u627e\u513f\u5b50,\u53ea\u9700\u8981\u627e\u7236\u4eb2.\u56e0\u6b64\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u7236\u4eb2.</li> <li>\u7528\u6570\u7ec4\u8868\u793a:\u7d22\u5f15\u4ee3\u8868\u5f53\u524d\u8282\u70b9,\u6570\u503c\u4ee3\u8868\u4e0a\u4e00\u4e2a\u7236\u4eb2.\u5982\u679c<code>s[i]==0</code>,\u8868\u793a\u662f\u6839.   \u96c6\u5408\u7684\u5e76:<code>s[rt1]=rt2</code>.</li> </ul> <p>\u627e\u5230 parent \u7684\u4ee3\u7801:</p> <pre><code>  while (s[i]&gt;0) {\n    i=s[i];\n  }\n  return i;\n</code></pre> <ul> <li>\u5408\u5e76\u65b9\u6cd5:union by height,union by size(\u53ef\u63a8\u5bfc\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7$log_2 N$),\u6bcf\u6b21\u8c03\u6574\u8f83\u5c0f\u7684\u6811</li> <li>\u600e\u4e48\u5224\u65ad\u6811\u7684\u5927\u5c0f?\u4e4b\u524d\u6811\u6839\u7528 0 \u8868\u793a,\u53ef\u4ee5\u7528\u8d1f\u6570\u8868\u793a\u6811\u6839,\u6570\u503c\u7684\u7edd\u5bf9\u503c\u8868\u793a\u6811\u7684\u5927\u5c0f.<code>s[root]=-size</code>.</li> <li>\u8def\u5f84\u538b\u7f29:\u627e\u5230\u6811\u6839\u65f6,\u8fd9\u4e00\u6761\u8def\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u7ecf\u8fc7.\u5c06\u8fd9\u6761\u8def\u4e0a\u7684\u8282\u70b9\u90fd\u76f4\u63a5\u6307\u5411\u6811\u6839.</li> </ul> <pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  if (s[x]&lt;=0)               // \u662f\u6811\u6839\n    return\n  else\n    return s[x]=find(s[x],s) // \u627ex\u4e0a\u4e00\u4e2a\u7236\u4eb2\u7684\u6839,\u5e76\u7528\u6839\u66f4\u65b0s[x]\n}\n</code></pre> <p>\u6216\u4f7f\u7528\u4e24\u5c42\u5faa\u73af:</p> <pre><code>\u6570\u503c find(\u4f4d\u7f6ex,\u6570\u7ec4s) {\n  for (root=x;s[root]&gt;0;root=s[root]); // \u4e0d\u65ad\u66f4\u65b0root,\u5148\u627e\u5230\u6839\n\n  for (trail=x;trail!=root;trail=lead) {\n    lead=s[trail]; // \u7528\u4e8e\u4fdd\u5b58\u8def\u5f84\u4e0a\u7684\u503c\n    s[trail]=root; // \u5c06\u8def\u5f84\u4e0a\u7684\u503c\u66f4\u65b0\u4e3a\u6839\n  }\n\n  return root;\n}\n</code></pre> <p>\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\u8fd1\u4f3c\u5e38\u91cf.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_30","title":"\u56fe","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_31","title":"\u4eba\u5de5\u667a\u80fd\u539f\u7406","text":"<p>\u7528\u7b80\u7b54\u7684\u6a21\u578b\u5b9e\u73b0\u590d\u6742\u7684\u6620\u5c04.\u5176\u4e2d\u7684\u53d8\u91cf\u662f\u6743\u91cd. \u8bbe\u8ba1\u8bc4\u4f30\u51fd\u6570\u5224\u65ad\u8bbe\u8ba1\u7684\u6a21\u578b\u548c\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u8ddd,\u6210\u4e3a\u8bef\u5dee\u51fd\u6570$L(w_i)$.\u8be5\u51fd\u6570\u662f\u6743\u91cd$w_i$\u7684\u51fd\u6570.\u4e0d\u65ad\u8c03\u6574\u6743\u91cd\u4f7f\u8be5\u51fd\u6570\u7684\u503c\u6700\u5c0f. \u76f8\u5f53\u4e8e\u6c42\u51fd\u6570\u7684\u6781\u5c0f\u503c.\u5411\u5bfc\u6570\u4e3a\u96f6\u7684\u65b9\u5411\u8c03\u6574.\u5229\u7528\u7684\u65b9\u6cd5\u4e3a\u68af\u5ea6\u9012\u964d\u6cd5. \u795e\u7ecf\u7f51\u7edc\u7684\u672c\u8d28\u662f\u56fe.\u5927\u6a21\u578b\u8bad\u7ec3\u7684\u672c\u8d28\u662f\u5c06\u80fd\u91cf\u8f6c\u5316\u4e3a\u7ed3\u6784.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_32","title":"\u56fe\u7684\u63cf\u8ff0","text":"<ul> <li>G(V,E)\u5206\u522b\u8868\u793a\u70b9,\u8fb9</li> <li>\u4e00\u822c\u8003\u8651:\u6ca1\u6709\u81ea\u73af,\u6ca1\u6709\u91cd\u8fb9</li> <li>\u5b8c\u5168\u56fe:\u6240\u6709\u80fd\u8fde\u7684\u8fb9\u90fd\u8fde\u63a5.\u65e0\u5411\u56fe\u8fb9\u7684\u6761\u6570\u4e3a$C_n^2$.</li> <li>\u5b50\u56fe:\u70b9\u548c\u8fb9\u90fd\u662f\u5b50\u96c6</li> <li>\u8def\u5f84:\u70b9\u7684\u5e8f\u5217,\u4efb\u4f55\u524d\u540e\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5</li> <li>\u8def\u5f84\u957f\u5ea6:\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u6761\u8fb9</li> <li>\u7b80\u5355\u8def\u5f84:\u8def\u5f84\u4e0a\u7684\u70b9\u6ca1\u6709\u91cd\u53e0</li> <li>\u73af:\u7b80\u5355\u8def\u5f84,\u4e14\u5934\u5c3e\u8fde\u63a5</li> <li>\u8fde\u901a\u56fe:\u65e0\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u90fd\u662f\u8fde\u901a\u7684;\u6709\u5411\u56fe:\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u80fd\u8d70\u5230.</li> <li>\u8fde\u901a\u5b50\u56fe(component):\u6700\u5927\u7684\u8fde\u901a\u7684\u5b50\u56fe</li> <li>\u6811:\u8fde\u901a\u7684,\u6ca1\u6709\u56de\u8def\u7684\u56fe</li> <li>DAG(directed acyclic graph):\u6709\u5411\u65e0\u73af\u56fe,\u8282\u70b9\u524d\u540e\u6709\u4f9d\u8d56\u5173\u7cfb</li> <li>\u5f3a\u8fde\u901a\u56fe(strong connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u6709\u5411\u56fe</li> <li>\u5f31\u8fde\u901a\u56fe(weakly connected directed graph):\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u8fde\u63a5\u7684\u65e0\u5411\u56fe</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component)</li> <li>\u5ea6(degree):\u6bcf\u4e2a\u70b9\u6709\u51e0\u4e2a\u70b9\u548c\u5b83\u8fde\u901a</li> <li>\u5165\u5ea6(in-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u6709\u591a\u5c11\u5176\u4ed6\u70b9\u6307\u5411\u5b83</li> <li>\u51fa\u5ea6(out-degree):\u6709\u5411\u56fe\u4e2d,\u5bf9\u4e8e\u4e00\u4e2a\u70b9,\u5b83\u6307\u5411\u51e0\u4e2a\u5176\u4ed6\u70b9</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_33","title":"\u56fe\u7684\u8868\u793a(\u6709\u5411\u56fe)","text":"<p>\u90bb\u63a5\u8868:\u628a\u6240\u6709\u8be5\u70b9\u51fa\u53bb\u7684\u8fb9\u90fd\u7528\u94fe\u8868\u4e32\u5728\u4e00\u8d77 \u9006\u90bb\u63a5\u8868:\u5c06\u6307\u5411\u8be5\u70b9\u7684\u70b9\u4e32\u5728\u4e00\u8d77. \u90bb\u63a5\u8868\u548c\u9006\u90bb\u63a5\u8868\u5b8c\u6574\u5730\u8868\u793a\u6574\u4e2a\u56fe</p> <p>\u5341\u5b57\u94fe\u8868(\u53ea\u7528\u4e8e\u6709\u5411\u56fe):\u7528\u8282\u70b9\u8868\u793a\u8fb9,\u6bcf\u4e2a\u8282\u70b9\u6709 4 \u4e2a\u5206\u91cf,\u5206\u522b\u4e3a 2 \u4e2a\u6570\u636e\u548c 2 \u4e2a\u6307\u9488.\u7528\u6570\u7ec4\u8868\u793a\u6240\u6709\u8282\u70b9.\u6570\u7ec4\u4e2d vi \u6307\u5411 vi \u5f00\u5934\u7684\u8282\u70b9. \u524d\u9762\u7684\u6307\u9488\u8868\u793a\u7b2c\u4e00\u4e2a\u6570\u636e\u6307\u5411\u8c01,\u7b2c\u4e8c\u4e2a\u6307\u9488\u8868\u793a\u4ec0\u4e48\u6570\u636e\u6307\u5411\u7b2c\u4e8c\u4e2a\u6570\u636e.</p> <p>\u591a\u91cd\u94fe\u8868 multilist(\u53ea\u7528\u4e8e\u65e0\u5411\u56fe):\u6570\u7ec4\u51fa\u53d1\u7684\u6bcf\u4e2a\u70b9\u5c06\u542b\u6709\u8be5\u70b9\u7684\u8282\u70b9\u4e32\u5728\u4e00\u8d77.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_34","title":"\u56fe\u7684\u4f5c\u7528","text":"<ol> <li>\u793e\u7fa4\u6316\u6398:\u5c06\u4e0d\u540c\u4eba\u4e4b\u95f4\u7684\u8054\u7cfb\u8868\u793a\u6210\u56fe.\u6839\u636e\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u5212\u5206\u793e\u7fa4.</li> <li>\u4e00\u79cd\u5224\u65ad\u793e\u7fa4\u662f\u5426\u7d27\u5bc6\u7684\u65b9\u6cd5:\u91cc\u9762\u7684\u8fb9\u548c\u5916\u9762\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u7684\u6bd4\u503c</li> <li>\u53ef\u4ee5\u6839\u636e\u70b9\u7684\u5165\u5ea6,\u51fa\u5ea6\u7684\u6743\u91cd\u5224\u65ad\u70b9\u7684\u6027\u8d28</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#crystal_ballclass-seven","title":":crystal_ball:Class Seven","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_35","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>\u4f8b\u5b50:   \u4e0d\u540c\u8bfe\u7a0b\u4e4b\u95f4\u6709\u4f9d\u8d56\u5173\u7cfb,\u6709\u4e9b\u8bfe\u7a0b\u9700\u8981\u5176\u4ed6\u8bfe\u4f5c\u4e3a\u524d\u7f6e\u8bfe\u7a0b.\u7528\u56fe\u8868\u793a\u4f9d\u8d56\u5173\u7cfb,\u6709\u4ee5\u4e0b\u5173\u7cfb:</li> <li>\u5f62\u6210\u65e0\u56de\u8def\u7684\u6709\u5411\u56fe(DAG,\u6709\u5411\u65e0\u73af\u56fe)</li> <li>\u7528\u70b9\u6216\u8fb9\u8868\u793a\u8981\u7d20(AOV)</li> <li>\u76ee\u6807:   \u6839\u636e\u8bfe\u7a0b\u7684\u4f9d\u8d56\u5173\u7cfb,\u5217\u51fa\u4e0d\u77db\u76fe\u7684\u9009\u8bfe\u7684\u987a\u5e8f.</li> <li>\u62d3\u6251\u6392\u5e8f\u65b9\u6cd5:</li> </ul> <ol> <li>\u627e\u5230\u7b2c\u4e00\u95e8:\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9</li> <li>\u6bcf\u627e\u5230\u4e00\u4e2a\u70b9\u540e,\u5220\u9664\u8be5\u70b9.(\u6bcf\u6b21\u5904\u7406\u540e\u56fe\u53d1\u751f\u4e00\u70b9\u6539\u52a8.)\u4fee\u6539\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6.</li> <li>\u6bcf\u6b21\u968f\u673a\u9009\u53d6\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9,\u91cd\u590d\u524d\u4e24\u6b65.</li> </ol> <ul> <li>\u90e8\u5206\u6709\u5e8f(partial order)   \u6709\u4e9b\u70b9\u6709\u5e8f,\u6709\u4e9b\u70b9\u65e0\u5e8f</li> <li>\u4ee3\u7801:</li> </ul> <pre><code>void topSort(\u56fe g) {\n  for (int cnt = 0; cnt &lt; \u70b9\u7684\u603b\u6570; cnt++) {\n    int v = \u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9;\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w)\n      w\u7684\u5165\u5ea6--; // \u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1,\u6839\u636e\u8fd9\u4e2a\u70b9\u4fee\u6539\u5468\u56f4\u70b9\u7684\u4fe1\u606f\n  }\n}\n</code></pre> <ul> <li>\u600e\u4e48\u67e5\u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9?   \u6784\u5efa\u961f\u5217.\u6bcf\u6b21\u4fee\u6539\u5165\u5ea6\u65f6\u5982\u679c\u6539\u540e\u4e3a\u96f6,\u52a0\u5165\u961f\u5217.</li> </ul> <pre><code>void topSort(\u56fe g) {\n  \u961f\u5217 Q;\n  for (\u904d\u5386\u6240\u6709\u70b9v) {\n    if (v\u7684\u5165\u5ea6 == 0)\n      enqueue(v, Q);\n  }\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    print(v);\n    for (\u6240\u6709v\u6307\u5411\u7684\u70b9w) {\n      if (--w\u7684\u5165\u5ea6 == 0)\n        enqueue(w, Q);\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_36","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898","text":"<p>\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898:Dijkstra</p> <ol> <li>\u521d\u59cb\u5316\u6240\u6709\u70b9\u7684\u8def\u5f84\u4e3a\u65e0\u7a77\u5927</li> <li>\u627e\u51fa\u6ca1\u6709\u88ab\u62d3\u5c55\u8fc7\u4e14\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9</li> <li>\u5c06\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e3a\u5df2\u7ecf\u62d3\u5c55\u8fc7</li> <li>(\u5229\u7528\u8be5\u70b9\u4fee\u6539\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7684\u4fe1\u606f.)\u5224\u65ad\u65b0\u6dfb\u52a0\u7684\u8def\u5f84\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u539f\u6709\u957f\u5ea6,\u5982\u679c\u5c0f\u4e8e\u5219\u66f4\u65b0\u957f\u5ea6</li> </ol> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nconst int N = 1e3 + 5;\nconst ll inf = 4e18;\n\nstruct Node {\n    int x, w;  // x\u8868\u793a\u51fa\u70b9\uff0cw\u8868\u793a\u6743\u503c\n};\nvector&lt;Node&gt; g[N];\nll d[N], n, m;\n\nvoid dijkstra(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));  // \u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7,\u6bcf\u4e2a\u70b9\u53ea\u88ab\u62d3\u5c55\u4e00\u6b21\n\n    for (int i = 1; i &lt;= n; i++) {\n        // \u627e\u51fa\u8ddd\u79bb\u6e90\u70b9\u6700\u8fd1\u7684\u70b9\n        int u = 1;\n        for (int j = 1; j &lt;= n; j++) {\n            if (vis[u] || (!vis[j] &amp;&amp; d[j] &lt; d[u]))\n                u = j;\n        }\n\n        vis[u] = true;  // \u8868\u793au\u5df2\u7ecf\u62d3\u5c55\u8fc7\n\n        // \u6b64\u65f6d[u]\u5df2\u7ecf\u4e3a\u6700\u4f18\n        for (auto&amp; [v, w] : g[u]) {\n            if (!vis[v] &amp;&amp; d[v] &gt; d[u] + w)\n                d[v] = d[u] + w;\n        }\n    }\n}\n\n// \u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5bfb\u627e\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\nvoid dijkstra1(int st) {\n    memset(d, 0x3f, sizeof(ll) * (n + 1));\n    d[st] = 0;\n    bitset&lt;N&gt; vis;  // vis\u8868\u793a\u662f\u5426\u62d3\u5c55\u8fc7\n\n    priority_queue&lt;Node&gt; pq;\n    pq.push((Node){st, d[st]});  // \u8d77\u70b9\u4f5c\u4e3a\u62d3\u5c55\u70b9\n\n    while (pq.size()) {\n        int x = pq.top().x;\n        pq.pop();\n\n        if (vis[x])\n            continue;\n        vis[x] = true;\n\n        for (auto&amp; [y, w] : g[x]) {\n            if (!vis[y] &amp;&amp; d[y] &gt; d[x] + w) {\n                d[y] = d[x] + w;\n                pq.push((Node){y, d[y]});\n            }\n        }\n    }\n}\n\nvoid solve() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        int u, v, w;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\n        if (u != v)\n            g[u].push_back({v, w});\n    }\n\n    dijkstra1(1);\n\n    cout &lt;&lt; (d[n] &gt;= 4e18 ? -1 : d[n]) &lt;&lt; '\\n';\n}\n\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    int _ = 1;\n    while (_--)\n        solve();\n    return 0;\n}\n</code></pre> <p>\u4e0d\u9002\u7528\u4e8e\u8d1f\u8fb9\u60c5\u51b5:\u88ab\u62d3\u5c55\u8fc7\u4e00\u6b21\u540e\u4e0d\u518d\u62d3\u5c55 \u8d1f\u8fb9\u4ee3\u7801:</p> <pre><code>void dijkstra(\u56fe g) {\n  \u961f\u5217 Q;\n  enqueue(\u6e90\u70b9, Q);\n  while (Q\u975e\u7a7a) {\n    v = dequeue(Q);\n    for (v\u6307\u5411\u7684\u70b9w) {\n      if (v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6 &lt; w\u7684\u8ddd\u79bb) {\n        w\u7684\u8ddd\u79bb = v\u7684\u8ddd\u79bb + \u8fb9\u957f\u5ea6;\n        if (w\u4e0d\u5728Q\u4e2d)\n          enqueue(w, Q);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#milky_wayclass-eight","title":":milky_way:Class Eight","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#all-pairs-shortest-paths","title":"\u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)","text":"<p>\u4e00\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff1a\u7b97\u4e00\u884c\uff08n \u4e2a\u503c\uff09 \u6240\u6709\u70b9\u5bf9\u7684\u6700\u77ed\u8def\u5f84(All-Pairs Shortest Paths)\uff1a\u7b97\u4e00\u4e2a\u77e9\u9635\uff08n*n \u77e9\u9635\uff09</p> <p>\u52a8\u6001\u89c4\u5212\uff1a \u5927\u95ee\u9898\u5206\u89e3\u4e3a\u5c0f\u95ee\u9898\u3002\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5206\u6cbb\u6cd5\u6216\u9012\u5f52\u65f6\u5c0f\u95ee\u9898\u53ef\u80fd\u91cd\u590d\u8ba1\u7b97\uff0c\u6548\u7387\u4f4e\uff08\u5206\u6cbb\u6cd5\u662f top-down\uff0c\u4ece\u4e0a\u5230\u4e0b\u8ba1\u7b97\uff09\u3002 \u52a8\u6001\u89c4\u5212\u4e3a botton-up\uff0c\u5148\u6c42\u57fa\u7840\u89e3\u518d\u6c42\u9ad8\u5c42\u89e3\u3002\u57fa\u7840\u89e3\u53ef\u80fd\u6709\u5f88\u591a\uff0c\u9700\u8981\u7528\u6570\u7ec4\u7b49\u7ed3\u6784\u5b58\u50a8\u3002 \u5206\u6790\u95ee\u9898\u7684\u601d\u8def\u662f top-down\uff0c\u89e3\u7b54\u95ee\u9898\u7684\u6d41\u7a0b\u662f botton-up\u3002</p> <p>\u52a8\u6001\u89c4\u5212\u5b9e\u73b0\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff1a D(i,j)\u8868\u793a vi \u51fa\u53d1\u5230 vj \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e2d\u95f4\u53ef\u80fd\u7ecf\u8fc7\u70b9\u96c6\u3002 \u5982\u679c\u4e2d\u95f4\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u70b9\uff08\u4e3a\u7a7a\u96c6\uff09\uff0c\u7b54\u6848\u4e3a\u8fb9\u957f\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1 \u8fd9\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5230 vj\uff0c\u548c vi \u5230 v1 \u518d v1 \u5230 vj\uff08\u8fd9\u4e24\u6bb5\u4e4b\u95f4\u90fd\u662f\u7a7a\u96c6\uff09\u3002 \u5982\u679c\u5141\u8bb8\u7ecf\u8fc7 v1\uff0cv2 \u4e24\u4e2a\u70b9\uff0c\u5206\u4e3a vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\uff0c\u548c vi \u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 v2 \u518d\u5141\u8bb8\u7ecf\u8fc7 v1 \u5230 vj\u3002</p> <p>Floyd \u521d\u59cb\u5316\uff1a\u8fb9\u6216\u65e0\u7a77\u5927 \u72b6\u6001\u8f6c\u79fb\uff1a\u5141\u8bb8\u7ecf\u8fc7\u70b9 \u57fa\u672c\u6846\u67b6:</p> <pre><code>for (\u4e2d\u8f6c\u70b9k)\n    for (\u8d77\u70b9i)\n        for (\u7ec8\u70b9j)\n        //\u5224\u65ad\u662f\u5426\u66f4\u65b0\n        d[i][j]=min(d[i][j],d[i][k]+d[k][j]);\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#aoe-activity-on-edge","title":"AOE \u7f51(Activity On Edge)","text":"<p>\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u6709\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u505a\u3002\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u65f6\u95f4\u70b9\uff0c\u6240\u6709\u5165\u8fb9\u7684\u4efb\u52a1\u90fd\u5b8c\u6210\u540e\u624d\u80fd\u505a\u8282\u70b9\u4ee5\u540e\u7684\u4efb\u52a1\u3002 \u4e3a\u4ec0\u4e48\u627e\u5173\u952e\u8def\u5f84\uff1f\u5982\u679c\u8981\u628a\u65f6\u95f4\u7f29\u77ed\uff0c\u9700\u8981\u52a0\u5feb\u54ea\u4e9b\u4efb\u52a1\u624d\u80fd\u4f7f\u6574\u4f53\u65f6\u95f4\u51cf\u5c11\u3002 \u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff1a\u6240\u6709\u4e4b\u524d\u7684\u652f\u8def\u6240\u9700\u65f6\u95f4\u7684\u6700\u5927\u503c \u53ef\u80fd\u5efa\u7acb dummy activity\uff08\u6240\u9700\u65f6\u95f4\u4e3a 0\uff09\uff0c\u5efa\u7acb\u4e0d\u540c\u4efb\u52a1\u4e4b\u95f4\u7684\u5173\u8054\u3002</p> <p>EC(Early Complete time)\uff1amax{\u6240\u6709\u5165\u70b9\u7684 EC + \u5165\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u6700\u5c11\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\uff09 LC(Last Complete time)\uff1amin{\u6240\u6709\u51fa\u70b9\u7684 LC - \u51fa\u8fb9\u7684\u65f6\u95f4} \uff08\u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u80fd\u5077\u61d2\u591a\u957f\u65f6\u95f4\uff0c\u6700\u665a\u4ec0\u4e48\u65f6\u5019\u51fa\u53d1\uff09 \u5982\u679c\u8282\u70b9\u7684 EC == LC\uff0c\u8be5\u70b9\u662f\u5173\u952e\u70b9\u3002\u5173\u952e\u70b9\u7ec4\u6210\u5173\u952e\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#compassclass-nine","title":":compass:Class Nine","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#network-flow-problems","title":"Network Flow Problems \u7f51\u7edc\u6d41\u95ee\u9898","text":"<p>\u57ce\u5e02\u6539\u9020\u6d89\u53ca\u5730\u4e0b\u7ba1\u7f51\u5de5\u7a0b\u3002\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6709\u4e0d\u540c\u7ba1\u9053\uff0c\u4e0d\u540c\u7ba1\u9053\u7684\u6d41\u91cf\u4e0d\u540c\uff0c\u7528\u6709\u5411\u56fe\u8868\u793a\u3002\u8981\u6c42\u8ba1\u7b97\u51fa\u6700\u5927\u6d41\u91cf\u3002 \u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p>\u904d\u5386\u56fe\uff0c\u627e\u5230\u4e00\u6761\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5927\u6d41\u91cf\u4e3a\u7ba1\u9053\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002 \u7136\u540e\u6bcf\u6761\u8fb9\u51cf\u53bb\u53d6\u5230\u7684\u8def\u5f84\u6700\u5927\u6d41\u91cf\uff0c\u5269\u4f59\u56fe\u91cd\u65b0\u904d\u5386\u3002 \u76f4\u5230\u6ca1\u6709\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u65f6\uff0c\u5f97\u5230\u7684\u6d41\u91cf\u548c\u4e3a\u6700\u5927\u6d41\u91cf\u3002</p> <p>\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u9009\u62e9\u8def\u5f84\u65f6\u53ef\u80fd\u4e0e\u5176\u4ed6\u8def\u5f84\u51b2\u7a81\uff0c\u5bfc\u81f4\u5176\u4ed6\u8def\u5f84\u4e0a\u8def\u5f84\u88ab\u5220\u9664\u3002 \u4fee\u6539\uff1a\u5efa\u7acb\u53cd\u6094\u673a\u5236\uff0c\u67d0\u6761\u7ebf\u6bb5\u6d41\u5411\u53ef\u6539\u53d8\u3002 \u5177\u4f53\u64cd\u4f5c\uff1a</p> <p>\u5728\u67d0\u6761\u8def\u5f84\u5220\u9664\u540e\uff0c\u6dfb\u52a0\u6d41\u91cf\u76f8\u540c\u7684\u53cd\u5411\u8fb9\u3002\u76f8\u5f53\u4e8e\u5c06\u6765\u53ef\u4ee5\u53cd\u6094\uff0c\u91cd\u65b0\u7ecf\u8fc7\u88ab\u5220\u9664\u7684\u8fb9\u3002 \u76f4\u5230\u6240\u6709\u548c\u8d77\u70b9\u76f8\u8fde\u7684\u8fb9\u90fd\u6307\u5411\u8d77\u70b9\uff0c\u7ec8\u6b62\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$T=O(f\\cdot \\left| E\\right|)$\uff0cf \u662f\u6700\u5927\u6d41\u91cf \u6539\u8fdb\uff1a</p> <ol> <li>\u4e0b\u4e00\u6b65\u6709\u4e0d\u540c\u9009\u62e9\u65f6\uff0c\u4f18\u5148\u9009\u62e9\u6d41\u91cf\u5927\u7684\u8fb9\u3002</li> <li>\u6bcf\u6b21\u9009\u62e9\u8fb9\u6700\u5c11\u3002</li> </ol> <p>\u8fdb\u4e00\u6b65\u5f3a\u5316\uff1a\u6700\u5927\u6d41\u91cf\u53ef\u80fd\u6709\u4e0d\u540c\u8def\u5f84\uff0c\u5404\u4e2a\u8def\u5f84\u901a\u8fc7\u65f6\u6709\u4ee3\u4ef7\u3002\u9700\u8981\u627e\u5230\u6700\u5927\u6d41\u91cf\u4e14\u6700\u4f4e\u4ee3\u4ef7\u7684\u8def\u5f84\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#mininum-spanning-tree","title":"\u6700\u5c0f\u751f\u6210\u6811(Mininum Spanning Tree)","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u627e\u5230\u6743\u91cd\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002 \u8d2a\u5fc3\u7b97\u6cd5(Greedy Method) \u6570\u5b66\u4f18\u5316\uff1a\u7ed9\u5b9a\u51fd\u6570\u548c\u533a\u95f4\uff0c\u6c42\u51fd\u6570\u5728\u533a\u95f4\u4e0a\u7684\u6700\u5927\u503c\u3002\u968f\u673a\u9009\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u8fd9\u4e2a\u70b9\u7684\u503c f(x0)\u3002\u5230\u5de6\u53f3 x0+d\uff0cx0-d\uff0c\u53d6\u4e09\u4e2a\u503c\u4e2d\u6700\u5927\u503c\u3002\u6bcf\u6b21\u627e\u5de6\u53f3 d \u7684\u8ddd\u79bb\u3002\u5f53\u5de6\u53f3\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u503c\u65f6\u505c\u6b62\u3002 \u8fd9\u79cd\u65b9\u6cd5\u53d6\u5230\u5c40\u90e8\u6700\u4f18\u89e3\u3002 \u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6bcf\u6b21\u79fb\u52a8\u65f6\u6709\u4e00\u5b9a\u6982\u7387\u8df3\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002</p> <p>\u5982\u4f55\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff1f</p> <ol> <li>prim\uff1a\u4ee5\u70b9\u4e3a\u4e2d\u5fc3\u3002 <p>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\uff0c\u627e\u548c\u5b83\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\u52a0\u5165\u3002 \u518d\u627e\u548c\u8fd9\u4e2a\u5c40\u90e8\u7684\u6811\u548c\u5916\u90e8\u8fde\u63a5\u7684\u6700\u77ed\u7684\u8fb9\uff08\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u5c40\u90e8\u7684\u6811\u4e2d\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\u5728\u6811\u5916\uff09\uff0c\u52a0\u5165\u3002 \u91cd\u590d\u627e\u6700\u77ed\u8fb9\u3001\u52a0\u5165\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5728\u6811\u5185\u3002</p> </li> <li>kruskal\uff1a\u4ee5\u8fb9\u4e3a\u4e2d\u5fc3\uff08\u9009\u62e9 n-1 \u6761\u8fb9\uff0c\u4f7f\u5f97\u5b83\u6784\u6210\u6811\u4e14\u6743\u503c\u548c\u6700\u5c0f\uff09\u3002 <p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002\u4ece\u6700\u77ed\u8fb9\u5f00\u59cb\uff0c\u6bcf\u6b21\u653e\u4e00\u6761\u8fb9\u8fdb\u53bb \u68c0\u67e5\u662f\u5426\u6784\u6210\u56de\u8def\uff08\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u8fde\u901a\uff09\uff0c\u5982\u679c\u6784\u6210\u56de\u8def\u5219\u8df3\u8fc7\u3002 \u5f53\u653e\u5165\u7684\u8fb9\u6570\u5230\u8fbe n-1 \u65f6\u505c\u6b62\u3002</p> </li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#dfs","title":"DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<pre><code>void dfs(\u70b9 v) {\n  vis[v] = true;\n  for (\u4e0ev\u76f8\u8fde\u7684\u70b9w) {\n    if (!vis[w]) {\n      dfs(w);\n    }\n  }\n}\n</code></pre> <p>\u5982\u679c\u6574\u4f53\u4e0d\u8fde\u901a\uff0c\u5728\u5916\u9762\u5957 for \u5faa\u73af\u904d\u5386\u56fe\u4e2d\u6240\u6709\u70b9\u3002</p> <pre><code>void dfsConn(\u56fe g) {\n  for (g\u4e2d\u7684\u70b9v) {\n    if (!vis[v]) {\n      dfs(v);\n      // ????\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#wind_chimeclass-ten","title":":wind_chime:Class Ten","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_37","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"<pre><code>void dfs(\u70b9v) {\n    for (\u4e0ev\u76f8\u90bb\u7684\u70b9w) {\n        if (w\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7) {\n            dfs(w);\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_38","title":"\u5224\u65ad\u8fde\u901a\u5757","text":"<pre><code>void solve(\u56fe g) {\n    for (g\u4e2d\u7684\u70b9v) {\n        if (\u6ca1\u8bbf\u95ee\u8fc7v) {\n            dfs(v);\n            cnt++;\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_39","title":"\u53cc\u8fde\u901a\u56fe\u95ee\u9898","text":"<p>\u53cc\u8fde\u901a\uff1a\u4efb\u610f\u5220\u9664\u8282\u70b9\u540e\uff0c\u56fe\u4e0d\u5206\u88c2\u6210\u4e24\u4e2a \u5220\u9664\u540e\u56fe\u5206\u88c2\u7684\u70b9\u6210\u4e3a articulation\uff08\u5173\u8282\u70b9\uff09\uff0c\u6ca1\u6709 articulation \u7684\u56fe\u662f biconnected\u3002 \u53ea\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e2d\u95f4\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\uff0c\u4e5f\u662f\u53cc\u8fde\u901a\u56fe\u3002 biconnected component: a maximum biconnected subgraph. \u5173\u952e\u662f\u627e\u5230\u5173\u8282\u70b9</p> <p>dfs \u5bf9\u56fe\u8fdb\u884c\u6574\u7406\uff0c\u6839\u636e dfs \u987a\u5e8f\u5f62\u6210\u6811\u3002\u8d77\u70b9\u662f\u6839\u7ed3\u70b9\uff0c\u901a\u8fc7 v \u627e\u5230 w\uff0c\u5219 v \u662f w \u7684\u7236\u8282\u70b9\u3002 \u8f6c\u5316\u540e\u7f3a\u5c11\u90e8\u5206\u8fb9\uff0c\u5728\u6811\u4e2d\u8865\u4e0a\u3002 \u8fd9\u4e9b\u65b0\u6dfb\u52a0\u7684\u8fb9\u4e00\u5b9a\u8fde\u63a5\u7956\u5148\u548c\u540e\u88d4\uff0c\u6210\u4e3a back edge\u3002\uff08\u5982\u679c\u8fde\u63a5\u4e0d\u540c\u5206\u652f\u7684\u8fb9\uff0c\u4e00\u5b9a\u901a\u8fc7\u8fd9\u6761\u8fb9 dfs \u65f6\u76f4\u63a5\u8bbf\u95ee\u5230\u3002\uff09</p> <p>\u4ec0\u4e48\u70b9\u662f\u5173\u8282\u70b9\uff1f</p> <ol> <li>\u81f3\u5c11\u542b\u4e24\u4e2a\u513f\u5b50\u7684\u6839\u8282\u70b9</li> <li>\u6240\u6709\u513f\u5b50\u90fd\u6ca1\u6709\u5411\u4e0a\u7684\u56de\u8fb9\u3002</li> </ol> <p>\u540c\u4e00\u5206\u652f\u4e0a\u7528\u6570\u5b57\u8868\u793a\u5c42\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u5c42\u7ea7\u8d8a\u5927\u3002\u56de\u8fb9\u5c06\u4f4e\u5c42\u6b21\u4e0e\u9ad8\u5c42\u6b21\u7684\u5173\u7cfb\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u7684\u5c42\u7ea7 num\uff0c\u4e00\u4e2a\u8868\u793a\u81ea\u5df1\u548c\u6240\u6709\u513f\u5b50\u7684\u6700\u9ad8\u5c42\u7ea7 low\u3002 \u5f53\u5b58\u5728\u4e00\u4e2a\u5206\u652f\u7684 low&lt; num\uff0c\u8be5\u70b9\u4e3a\u5173\u8282\u70b9\u3002</p> <pre><code>low(u) = min{num(u),\n             min{low(w) | w is a child of u},\n             min{num(w) | (u,w) is a back edge} }\n</code></pre> <p>u is an articulation point iff:</p> <ol> <li>u is the root and has et least 2 children</li> <li>u is not the root, and has at least 1 child such that low(child) &gt;= num(u)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_40","title":"\u6b27\u62c9\u56de\u8def\u95ee\u9898","text":"<p>\u6b27\u62c9\u56de\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u5c06\u6240\u6709\u8fb9\u8d70\u4e00\u904d\u5e76\u56de\u5230\u8d77\u70b9\u3002 \u7ed3\u8bba\uff1a\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002 \u6240\u6709\u70b9\u7684\u5ea6\u4e4b\u548c\u4e00\u5b9a\u662f\u5076\u6570\u3002 \u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u6709\u4e24\u4e2a\uff0c\u4e00\u5b9a\u80fd\u4ece\u5176\u4e2d\u4e00\u4e2a\u70b9\u51fa\u53d1\u8d70\u8fc7\u6240\u6709\u8fb9\u5230\u8fbe\u53e6\u5916\u4e00\u4e2a\u70b9\u3002</p> <p>\u600e\u4e48\u6784\u9020\u89e3\uff1f</p> <p>\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1 dfs\uff0c\u6700\u540e\u4e00\u5b9a\u56de\u5230\u8d77\u70b9\uff0c\u4f46\u4e0d\u4e00\u5b9a\u628a\u6240\u6709\u8fb9\u8d70\u5b8c\u3002 \uff08\u6bcf\u4e2a\u70b9\u5165\u548c\u51fa\u7684\u6b21\u6570\u4e00\u5b9a\u76f8\u7b49\uff09 \u5220\u9664 dfs \u56de\u5230\u8d77\u70b9\u540e\u7ecf\u8fc7\u7684\u8def\uff0c\u5269\u4e0b\u7684\u6240\u6709\u70b9\u7684\u5ea6\u8fd8\u662f\u90fd\u4e3a\u5076\u6570\u3002 \u5728\u8def\u5f84\u4e0a\u9009\u53d6\u8fd8\u6709\u8fb9\u7684\u70b9\u7ee7\u7eed dfs\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u8d70\u5b8c\u3002</p> <p>\u54c8\u5bc6\u5c14\u987f\u56de\u8def\u95ee\u9898\uff08\u65c5\u884c\u5546\u95ee\u9898\uff09 \u5c06\u6240\u6709\u70b9\u90fd\u8d70\u4e00\u904d</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_41","title":"\u6392\u5e8f","text":"<p>\u7b80\u5355\u6392\u5e8f\uff1a</p> <ol> <li>\u9009\u62e9\u6392\u5e8f seection\uff1a\u6bcf\u6b21\u627e\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5728\u672b\u5c3e</li> <li>\u4ea4\u6362\u6392\u5e8f exchange\uff1a\u4ece\u5934\u5230\u5c3e\u904d\u5386\uff0c\u770b\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u662f\u5426\u7b26\u5408\uff0c\u4f4d\u7f6e\u4e0d\u5bf9\u5219\u4ea4\u6362\uff08\u5192\u6ce1\uff09</li> <li>\u63d2\u5165\u6392\u5e8f insertion\uff1a\u6bcf\u6b21\u4e4b\u524d\u7684\u5143\u7d20\u90fd\u6392\u597d\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4f7f\u5176\u4fdd\u6301\u6392\u5e8f\u7684\u7279\u6027\u3002    \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n^2)    \u4f46\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u540c\uff0c\u9009\u62e9\u6392\u5e8f\u4e3a O(n^2)\uff0c\u5192\u6ce1\u6392\u5e8f\u53ef\u901a\u8fc7\u6807\u7b7e\u4f18\u5316\uff0c\u63d2\u5165\u6392\u5e8f\u6700\u4f18\u4e3a O(n)\u3002</li> </ol> <p>inversion \u9006\u5e8f\u5bf9\uff1a\u5927\u7684\u5728\u524d\u5c0f\u7684\u5728\u540e\uff0c\u6210\u4e3a\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002 \u5982\u679c\u957f\u5ea6\u4e3a n \u7684\u5e8f\u5217\uff0c\u6700\u591a n(n-1)/2 \u4e2a\u9006\u5e8f\u5bf9\uff0c\u5e73\u5747\u7ea6 nn/4 \u4e2a\u9006\u5e8f\u3002 \u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u5bf9\u8c03\uff0c\u6539\u53d8\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002 \u6392\u5e8f\u7b97\u6cd5\u7a81\u7834\uff1a\u8df3\u7740\u6bd4\u8f83 \u5e0c\u5c14\u6392\u5e8f\uff1a\u5206\u7ec4\u6bd4\u8f83+\u63d2\u5165\u6392\u5e8f</p> <p>\u5206\u6cbb\u6cd5\uff1a\u5f52\u5e76\u6392\u5e8f T(n)=2T(n/2)+Cn =&gt; T(n)=O(nlogn)</p> <p>\u5feb\u901f\u6392\u5e8f\uff1a\u9009\u62e9 pivot\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002</p> <p>\u5806\u6392\u5e8f\uff1a\u6784\u5efa\u6811\uff0c\u6bcf\u6b21\u9009\u51fa\u6700\u5927\u540e\u3002\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u662f\u7b2c\u4e8c\u5927\u3002</p> <p>\u6876\u6392\u5e8f\uff1a</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5148\u6309\u4e2a\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u6392\u6210\u5e8f\u5217\u3002\u518d\u6309\u5341\u4f4d\u6570\u653e\u5165\u4e0d\u540c\u7684\u6876\uff0c\u518d\u6309\u767e\u4f4d\u6570\u2026\u2026\u6700\u540e\u6392\u6210\u4ece\u5c0f\u5230\u5927\u7684\u5e8f\u5217\u3002 \u5faa\u73af\u7684\u6b21\u6570\u7b49\u4e8e\u4f4d\u6570\u3002</p> <p>\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\uff1a\u76f8\u7b49\u7684\u5143\u7d20\u6392\u5e8f\u524d\u540e\u987a\u5e8f\u662f\u4e0d\u662f\u76f8\u540c\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#banjoclass-eleven","title":":banjo:Class Eleven","text":"<p>\u63d2\u5165\u6392\u5e8f\u5bf9\u8f93\u5165\u987a\u5e8f\u654f\u611f.\u5982\u679c\u8f93\u5165\u6570\u636e\u57fa\u672c\u6392\u597d,\u5219\u6392\u5e8f\u65f6\u95f4\u77ed.</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_42","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u8de8\u533a\u57df\u6bd4\u8f83:\u5206\u7ec4</p> <p>\u5c06\u6570\u636e\u95f4\u9694\u5206\u7ec4,\u6bcf\u7ec4\u6392\u5e8f \u51cf\u5c11\u7ec4\u6570,\u518d\u5c06\u6bcf\u7ec4\u6392\u5e8f \u7ee7\u7eed\u51cf\u5c11\u5206\u7ec4,\u76f4\u5230\u53ea\u5206\u4e00\u7ec4,\u5b8c\u6210\u6392\u5e8f</p> <p>\u82e5\u6570\u636e\u57fa\u672c\u6709\u5e8f,\u63d2\u5165\u6392\u5e8f\u65f6\u95f4\u63a5\u8fd1\u7ebf\u6027. \u5206\u7ec4\u591a,\u5355\u7ec4\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e;\u5206\u7ec4\u5c11\u65f6,\u6570\u636e\u63a5\u8fd1\u6709\u5e8f,\u65f6\u95f4\u7ebf\u6027. \u5f00\u59cb\u65f6\u5206 k \u7ec4,\u7ec4\u5185\u6709\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5168\u90e8\u6709\u5e8f\u7684 1/k.</p> <pre><code>void shellsort(int arr[], int n) {\n    for (int step = n / 2; step &gt; 0; step /= 2) {  // step\u8868\u793a\u6b65\u957f\n        for (int i = step; i &lt; n; i++) {\n            int tmp = arr[i];\n            int j;\n            for (j = i; j &gt;= step; j -= step) {  // \u63d2\u5165\u6392\u5e8f\n                if (tmp &lt; arr[j - step])\n                    arr[j] = arr[j - step];\n                else\n                    break;\n            }\n            arr[j] = tmp;\n        }\n    }\n}\n</code></pre> <p>\u6309<code>step = n / 2; step &gt; 0; step /= 2</code>\u5206\u7ec4,\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6:$O(N^2)$ Hibbard's Increment Sequence: \u6309$step=2^k-1$\u5206\u7ec4</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_43","title":"\u5806\u6392\u5e8f","text":"<p>\u65b9\u6cd5 1(\u4e0d\u597d)</p> <pre><code>void heapsort(int arr[]) {\n    BuildHeap(H);\n    for (int i = 0; i &lt; n; i++)\n        tmpH[i] = DeleteMin(H);\n    for (int i = 0; i &lt; n; i++)\n        H[i] = tmpH[i];\n}\n</code></pre> <p>\u5806\u6392\u5e8f:</p> <pre><code>void heapSort(int* arr, int n) {\n    // 1. \u6784\u5efa\u5927\u6839\u5806\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff09\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // 2. \u9010\u4e2a\u63d0\u53d6\u5143\u7d20\n    for (int i = n - 1; i &gt; 0; i--) {\n        \u4ea4\u6362arr[0]\u548carr[i]; // \u5c06\u5f53\u524d\u6839\uff08\u6700\u5927\u503c\uff09\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\n        heapify(arr, i, 0); // \u5bf9\u7f29\u51cf\u540e\u7684\u5806\u8fdb\u884c\u8c03\u6574\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6:$N\\log N-N\\log\\log N$</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_44","title":"\u5f52\u5e76\u6392\u5e8f(\u5206\u6cbb\u6cd5)","text":"<p>\u5148\u5206\u522b\u6392\u5e8f,\u518d merge. \u65f6\u95f4\u590d\u6742\u5ea6: \u5206\u6210\u4e24\u7ec4:$O(1)$ \u9012\u5f52\u5c06\u4e24\u7ec4\u5206\u522b\u6392\u5e8f:$2T(N/2)$ merge: $O(N)$</p> <p>quicksort: merge \u7684\u6b65\u9aa4\u51cf\u5c0f\u65f6\u95f4.\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4. \u8fd9\u6837\u5206\u7ec4\u4e0d\u4e00\u5b9a\u662f n/2 \u7684\u4e24\u7ec4,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$T(i)+T(N-i)$</p> <pre><code>#include &lt;stdio.h&gt;\n\n// \u907f\u514d\u6bcf\u6b21\u8c03\u7528\u751f\u6210temp\u4e34\u65f6\u6570\u7ec4,\u5728\u5916\u90e8\u540c\u4e00\u7533\u8bf7temp,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid merge(int a[],\n           int left,\n           int leftend,\n           int right,\n           int temp[]) {  // \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\n    int i, j, k;\n    i = left;\n    j = leftend + 1;\n    k = left;\n\n    while (i &lt;= leftend &amp;&amp; j &lt;= right) {\n        if (a[i] &lt;= a[j])\n            temp[k++] = a[i++];\n        else\n            temp[k++] = a[j++];\n    }\n    while (i &lt;= leftend)\n        temp[k++] = a[i++];\n    while (j &lt;= right)\n        temp[k++] = a[j++];\n}\n\n// \u8bbe\u8ba1\u6210\u9012\u5f52\u51fd\u6570,\u5fc5\u987b\u5c06\u8fb9\u754c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\nvoid mergesort(int a[],\n               int left,\n               int right,\n               int temp[]) {  // \u6392\u5e8f\uff0c\u7528temp\u4e34\u65f6\u5b58\u50a8\n    if (left &gt;= right)\n        return;\n\n    int mid = (left + right) / 2;\n    mergesort(a, left, mid, temp);\n    mergesort(a, mid + 1, right, temp);\n    merge(a, left, mid, right, temp);\n    for (int i = left; i &lt;= right; i++) {\n        a[i] = temp[i];\n    }\n}\n\nint main() {\n    int a[101], tempa[101];\n    int n;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;a[i]);\n    }\n    mergesort(a, 0, n - 1, tempa);\n\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"%d \", a[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83 \u548c$T(n)=2T(n/2)+Cn$\u6bd4\u8f83 $T(n)=3T(n/2)+Cn$: \u66f4\u590d\u6742 $T(n)=2T(n/3)+Cn$: \u66f4\u7b80\u5355</p> <p>\u4e34\u65f6\u6570\u7ec4</p> <ol> <li>\u5916\u90e8\u7edf\u4e00\u7533\u8bf7,\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165</li> <li>\u6bcf\u6b21\u5408\u5e76\u65b0\u7533\u8bf7\u7a7a\u95f4</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u7a7a\u95f4(\u590d\u6742)</li> <li>\u4e24\u4e2a\u76f8\u540c\u957f\u5ea6\u7684\u6570\u7ec4,\u4e00\u4e2a\u6392\u5e8f\u65f6\u5360\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4</li> <li>\u4e09\u4e2a\u5df2\u6392\u5e8f\u6570\u7ec4\u5408\u5e76,\u7528\u5806(??)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_45","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5173\u952e:\u5206\u7ec4\u65f6\u9009\u62e9 pivot,\u5c06\u6240\u6709\u5143\u7d20\u5206\u6210\u6bd4 pivot \u5c0f\u548c\u6bd4 pivot \u5927\u7684\u4e24\u7ec4.</p> <p>\u96be\u70b9:</p> <ol> <li>\u600e\u4e48\u9009\u62e9 pivot</li> <li>\u539f\u5730\u6392\u5e8f,\u4e0d\u989d\u5916\u7533\u8bf7\u6570\u7ec4</li> </ol> <p>\u9009\u62e9 pivot \u7684\u65b9\u6cd5:</p> <ol> <li>\u9009\u7b2c\u4e00\u4e2a(\u4e0d\u597d)</li> <li>\u968f\u673a\u9009\u62e9(\u4ecd\u4e0d\u597d)</li> <li>\u5934,\u5c3e,\u4e2d\u95f4\u503c\u4e09\u4e2a\u4e2d\u9009\u4e2d\u95f4\u503c</li> <li>\u4e94\u7b49\u5206\u70b9\u9009\u4e2d\u95f4\u503c</li> <li>\u968f\u4fbf\u9009\u4e00\u4e2a\u5206\u7ec4,\u770b\u4e24\u7ec4\u662f\u5426\u5747\u5300(\u53ef 1/4 \u4e3a\u754c),\u82e5\u5747\u5300\u5219\u7ee7\u7eed\u8fdb\u884c,\u82e5\u4e0d\u5747\u5300\u5219\u91cd\u6765(\u6309\u671f\u671b\u4e3a\u505a\u4e24\u6b21)</li> </ol> <p>\u8499\u5854\u5361\u6d1b:\u505a\u7279\u5b9a\u6b21\u6570,\u505a\u5b8c\u540e\u505c\u6b62,\u4e0d\u7ba1\u662f\u5426\u7b26\u5408\u6700\u4f73\u6761\u4ef6 \u62c9\u65af\u7ef4\u52a0\u65af:\u6309\u7279\u5b9a\u8981\u6c42,\u82e5\u4e00\u76f4\u4e0d\u7b26\u5408\u8981\u6c42\u5219\u4e00\u76f4\u8fdb\u884c</p> <p>\u4f46\u662f,\u6570\u7ec4\u5c0f\u65f6\u9009 pivot \u5feb\u6392\u6548\u7387\u4f4e. \u5728\u6570\u7ec4\u89c4\u6a21\u5c0f\u4e8e\u9608\u503c\u65f6,\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u6392\u5e8f.</p> <p>\u600e\u4e48\u539f\u5730\u5206\u7c7b?</p> <p>\u4e24\u8fb9\u626b\u63cf</p> <p>\u57fa\u51c6\u5143\u7d20\u653e\u5728\u6700\u540e \u6307\u9488 i \u653e\u5728\u5f00\u5934,\u6bd4 pivot \u5c0f\u65f6\u5411\u53f3\u8d70,&gt;=\u65f6\u505c\u4e0b \u6307\u9488 j \u653e\u5728\u7ed3\u5c3e,\u6bd4 pivot \u5927\u65f6\u5411\u5de6\u8d70,&lt;=\u65f6\u505c\u4e0b \u90fd\u505c\u4e0b\u65f6\u4ea4\u6362 i \u548c j \u7684\u503c \u76f4\u5230 i==j \u6216 i&gt;j,\u5c06 pivot \u653e\u5728\u6700\u7ec8\u4f4d\u7f6e</p> <p>\u4e00\u8fb9\u626b\u63cf</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f\u5c0f\u7684\u4e00\u5806\u548c\u5927\u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u5927,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u5c0f,\u548c\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362(\u9700\u8981\u6807\u8bb0\u5927\u7684\u90a3\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e)</p> <p>\u8377\u5170\u65d7\u95ee\u9898 \u4e09\u79cd\u6570\u636e\u6392\u5e8f</p> <p>\u4e00\u4e2a\u6307\u9488\u5411\u53f3\u8d70,\u5de6\u8fb9\u662f R \u7684\u4e00\u5806,G \u7684\u4e00\u5806,B \u7684\u4e00\u5806 \u5982\u679c\u6307\u9488\u5904\u662f B,\u7ee7\u7eed\u5411\u53f3\u8d70 \u5982\u679c\u6307\u9488\u5904\u662f G,\u548c B \u5806\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6362 \u5982\u679c\u6307\u9488\u5904\u662f R,\u6307\u9488\u5904\u5143\u7d20\u653e\u5728 G \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,G \u5806\u7b2c\u4e00\u4e2a\u653e\u5728 B \u5806\u7b2c\u4e00\u4e2a\u4f4d\u7f6e,B \u5806\u7b2c\u4e00\u4e2a\u653e\u5728\u6307\u9488\u4f4d\u7f6e</p> <p>\u6307\u9488\u79fb\u52a8\u8981\u6c42:\u7ef4\u62a4\u626b\u8fc7\u7684\u533a\u57df\u7b26\u5408\u8981\u6c42. \u53cc\u8fb9\u626b\u63cf:\u5de6\u6307\u9488\u5de6\u4fa7\u90fd\u5c0f,\u53f3\u6307\u9488\u53f3\u4fa7\u90fd\u5927 \u4e00\u8fb9\u626b\u63cf:\u6307\u9488\u5de6\u4fa7\u662f\u5206\u597d\u7684\u5806</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-twelve","title":"Class Twelve","text":"<p>\u5faa\u73af\u4e0d\u53d8\u5f0f</p> <p>cutoff\uff1a\u5f53\u6570\u7ec4\u4e2d\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u8be5\u503c\u65f6\uff0c\u4e0d\u518d\u8c03\u7528\u9012\u5f52\uff08\u9632\u6b62\u5c0f\u6570\u7ec4\u65f6\u6548\u7387\u4f4e\uff09</p> <pre><code>int median3(int a[], int left, int right) {\n    if (a[left] &lt; a[mid])\n        \u4ea4\u6362\u5de6\uff0c\u4e2d\uff1b\n    if (a[left] &lt; a[right])\n        \u4ea4\u6362\u5de6\uff0c\u53f3\uff1b\n    if (a[mid] &lt; a[right])\n        \u4ea4\u6362\u4e2d\uff0c\u53f3\uff1b\n    // \u6b64\u65f6\u5df2\u8fbe\u5230\u5de6 &lt; \u4e2d &lt; \u53f3\n    \u4ea4\u6362\u4e2d\uff0c\u53f3-1\uff1b // \u5c06pivot \u653e\u5728\u7aef\u4f4d\n    return a[right - 1];\n}\n</code></pre> <pre><code>void Qsort(int a[], int let, int right) {\n    if (left + cutoff &lt;= right) {\n        for ( ; ; ) {\n            while (a[++i] &lt; pivot) ;\n            while (a[- -j] &gt; pivot) ;\n            if (i &lt; j) swap(i, j);\n            else break;\n        }\n    } else {\n        InsertionSort(a);\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a T(N) = T(i) + T(N-i-1) + cN \u6700\u574f\uff1aT(N) = T(N-1) + cN, T(N) = O(N^2) \u6700\u597d\uff1aT(N) = 2T(N/2) +cN, T(N) = O(N logN)</p> <p>\u95ee\u9898\uff1a\u7ed9 n \u4e2a\u6574\u6570\uff0c\u6c42\u7b2c k \u5927\u7684\u6570</p> <ol> <li>\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u53d6\u7b2c k \u4e2a -&gt; O(N logN)</li> <li>\u627e\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6240\u6709\u5143\u7d20\u5206\u4e3a\u6bd4\u5b83\u5c0f\u548c\u6bd4\u5b83\u5927\u3002\u5982\u679c\u5927\u7684\u5143\u7d20\u6709 k-1 \u4e2a\uff0c\u5219\u7b2c k \u4f4d\u57fa\u51c6\u5143\u7d20\uff1b\u5982\u679c\u5c0f\u4e8e k-1 \u4e2a\uff0c\u4ece\u5927\u7684\u5143\u7d20\u4e2d\u627e\uff1b\u2026\u2026\u5c0f\uff0c\u4ece\u5c0f\u7684\u5143\u7d20\u4e2d\u627e -&gt; O(1+1/2+1/4+\u2026N)=O(N)</li> </ol> <p>\u5927\u7ed3\u6784\u7684\u6392\u5e8f\u95ee\u9898 \u548c\u6570\u7ec4\u6392\u5e8f\u4e0d\u540c\uff0c\u5927\u7ed3\u6784\u4ea4\u6362\u7684\u4ee3\u4ef7\u9ad8\u3002\u7528 keyword \u4ee3\u66ff\uff0c\u6839\u636e\u5927\u7ed3\u6784\u7684\u6027\u8d28\u5bf9 keyword \u6392\u5e8f\u3002 \u5173\u952e\u95ee\u9898\uff1a\u7ed9\u5b9a\u7b2c\u51e0\u4e2a\u5143\u7d20\u653e\u5230\u7f16\u53f7\u51e0\u7684\u4f4d\u7f6e\uff0c\u600e\u4e48\u91cd\u65b0\u7f16\u6392\u6570\u7ec4\uff1f\uff1f</p> <p>\u8bc1\u660e\uff1a\u901a\u8fc7\u6bd4\u8f83\u3001\u4ea4\u6362\uff0c\u4e0d\u53ef\u80fd\u627e\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e O(N logN)\u7684\u7b97\u6cd5 \u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u7684\u7b97\u6cd5\uff0c\u90fd\u5bf9\u5e94\u4e00\u4e2a\u51b3\u7b56\u6811\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u6bd4\u8f83\u8bed\u53e5\uff0c\u5206\u652f\u8868\u793a T \u6216 F \u7684\u60c5\u5f62\uff0c\u53f6\u8282\u70b9\u4e3a\u6700\u7ec8\u6392\u5e8f\u7ed3\u679c\u3002 \u53f6\u8282\u70b9\u603b\u6570\u4e3a n\uff01\uff0c\u5219\u6811\u7684\u9ad8\u5ea6\u81f3\u5c11 log N\uff01\u3002 O(log N!) = O(N logN)</p> <p>\u4e0d\u7528\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u5c0f\u4e8e O(N logN)\uff1a\u5982\u6876\u6392\u5e8f\u3002</p> <p>\u57fa\u6570\u6392\u5e8f\uff1a\u5206\u522b\u6309\u4e2a\u4f4d\u6570\u3001\u5341\u4f4d\u6570\u2026\u2026\u8fdb\u884c\u6876\u6392\u5e8f\u3002\uff08\u6700\u4e0d\u91cd\u8981\u7684\u6570\u5f00\u59cb\uff09 \u6bcf\u6b21\u6392\u5e8f\u65f6\u6309\u4e0a\u4e00\u6b21\u6392\u5e8f\u7ed3\u679c\u904d\u5386\u3002\u5148\u628a\u4e00\u4e2a\u6876\u4e2d\u7684\u6570\u4f9d\u6b21\u904d\u5386\u5b8c\uff0c\u518d\u904d\u5386\u4e0b\u4e00\u4e2a\u6876\u3002</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u9700\u8981 O(logN)\u7684\u7a7a\u95f4\u3002\uff08\u9012\u5f52\u9700\u8981\u4e0d\u65ad\u538b\u6808\uff09</p> <p>\u7a33\u5b9a\u6027\uff1a \u63d2\u5165\u6392\u5e8f \u7a33\u5b9a \u5806\u6392\u5e8f \u4e0d\u7a33\u5b9a\uff08\u6ca1\u6709\u4f9d\u6b21\u6bd4\u8f83\uff09 \u5206\u7ec4\u6392\u5e8f \u4e0d\u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \u4e0d\u7a33\u5b9a</p> <p>\u8fd8\u53ef\u80fd\u8003\uff1a\u7ecf\u8fc7\u51e0\u8f6e\u540e\u6570\u636e\u5e8f\u5217\uff0c\u5224\u65ad\u662f\u4ec0\u4e48\u6392\u5e8f\u65b9\u6cd5</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_46","title":"\u54c8\u5e0c","text":"<p>\u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\uff0c\u5bf9\u6bcf\u4e2a x \u751f\u6210 y\uff0c\u4e14\u4e0d\u540c x \u5f97\u5230\u4e0d\u540c\u7684 y\u3002</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_47","title":"\u533a\u5757\u94fe\u5e94\u7528","text":"<p>\u76ee\u7684\uff1a\u8ba9\u6570\u7ec4\u4e0d\u53ef\u7be1\u6539\u4e0d\u53ef\u66ff\u4ee3 \u6570\u636e\u7ec4\u7ec7\u548c\u7ba1\u7406\u6280\u672f\uff1a\u6570\u636e\u5e93\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u533a\u5757\u94fe\uff08\u589e\u67e5\uff09 \u6838\u5fc3\u601d\u60f3\uff1a</p> <ol> <li>\u628a\u6570\u636e\u653e\u5728\u591a\u4e2a\u5730\u65b9\uff08\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f\uff09\uff0c\u591a\u4e2a\u5907\u4efd</li> <li>\u628a\u6570\u636e\u524d\u540e\u5173\u8054</li> </ol> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u8bb0\u5f55\u7684\u6240\u6709\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u533a\u5757\u3002 \u5c06\u5404\u4e2a\u533a\u5757\u4e32\u8054\uff0c\u5f62\u6210\u533a\u5757\u94fe\u3002 \u600e\u4e48\u5c06\u6570\u636e\u4e32\u8054\uff1f\u7528\u54c8\u5e0c\u51fd\u6570\u3002 \u7ed9\u6bcf\u4e2a\u533a\u5757\u7f16\u53f7\uff0c\u524d\u4e00\u4e2a\u7f16\u53f7\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u4e0b\u4e00\u4e2a\u7f16\u53f7\u3002 \uff08\u54c8\u5e0c\u503c\u53ef\u4ee5\u4f5c\u4e3a index\uff0c\u8fd9\u91cc\u4f5c\u4e3a\u6570\u636e\u7684\u6307\u7eb9\uff09</p> <p>\u4f5c\u7528\uff1a\u5efa\u7acb\u53ef\u4fe1\u673a\u5236</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-thriteen","title":"Class Thriteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_48","title":"\u6bd4\u7279\u5e01","text":"<p>\u53d1\u884c:\u6bd4\u7279\u5e01\u603b\u91cf\u4e00\u5b9a,\u6bcf\u5341\u5206\u949f\u53d1\u884c,\u6bcf\u56db\u5e74\u6bcf\u5341\u5206\u949f\u53d1\u884c\u91cf\u51cf\u534a \u6d41\u901a</p> <ul> <li>\u600e\u4e48\u8bc1\u660e\u662f\u81ea\u5df1\u7684? \u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93,\u6bcf\u4e2a\u4eba\u6709\u8d26\u53f7\u548c\u5bc6\u7801</li> <li>\u600e\u4e48\u9632\u6b62\"\u53cc\u82b1\"? \u6bcf\u4e2a\u8d26\u53f7\u8bb0\u5f55\u4f59\u989d</li> </ul> <p>\u6bd4\u7279\u5e01\u4e0d\u53d7\u7edf\u4e00\u63a7\u5236,\u4e0d\u80fd\u5efa\u7acb\u4e2d\u5fc3\u5f0f\u6570\u636e\u5e93.\u91c7\u7528\u5206\u5e03\u5f0f\u8d26\u672c. \u89e3\u51b3\u5206\u5e03\u5f0f\u8d26\u672c\u4e4b\u95f4\u53ef\u80fd\u4e0d\u540c\u7684\u95ee\u9898:\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u9009\u62e9\u4e00\u4e2a\u4eba\u8bb0\u5f55,\u5c06\u8d26\u672c\u590d\u5236\u540e\u5206\u53d1,\u540e\u7eed\u53ef\u8865\u5145</p> <p>\u65b0\u4ea4\u6613\u521b\u5efa -&gt; \u4ea4\u6613\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u9a8c\u8bc1 -&gt; \u9a8c\u8bc1\u7ed3\u679c\u901a\u8fc7 P2P \u7f51\u7edc\u4f20\u64ad -&gt; \u4ea4\u6613\u5199\u5165\u8d26\u672c</p> <p>\u8bb0\u8d26\u6709\u597d\u5904,\u7ade\u4e89\u8ba1\u7b97\u901f\u5ea6.\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u751f\u6210\u503c,\u8ba1\u7b97\u8f93\u5165\u503c.(\u5bb9\u6613\u5f62\u6210\u5171\u8bc6) \u77ff\u673a:\u4e13\u95e8\u8ba1\u7b97\u8f93\u5165\u503c\u7684\u8ba1\u7b97\u673a \u77ff\u6c60:\u591a\u53f0\u77ff\u673a \u6316\u77ff:\u731c\u8f93\u5165\u503c</p> <p>\u600e\u4e48\u63a7\u5236\u8f93\u51fa\u503c y? y \u6709 128 \u4f4d.\u5982\u679c 128 \u4f4d\u5168\u90e8\u968f\u673a\u751f\u6210,\u6700\u5927\u6709 2^128 \u79cd,\u8ba1\u7b97\u65f6\u95f4\u5f88\u957f. \u6839\u636e\u6700\u8fd1\u6316\u77ff\u7684\u8ba1\u7b97\u673a\u6570\u91cf,\u9650\u5236 y \u4e2d 0 \u7684\u4e2a\u6570,\u4fdd\u8bc1 10 \u5206\u949f\u5de6\u53f3\u80fd\u6316\u5230.</p> <p>\u667a\u80fd\u5408\u7ea6:\u666e\u901a\u7a0b\u5e8f,\u7528\u6765\u6267\u884c\u5408\u540c\u89c4\u5b9a\u7684\u67d0\u4e9b\u6761\u6b3e. \u95ee\u9898:\u7a0b\u5e8f\u5728\u4fe1\u606f\u7a7a\u95f4,\u600e\u4e48\u5224\u65ad\u7269\u7406\u7a7a\u95f4\u4e2d\u662f\u5426\u5b8c\u6210\u4e1a\u52a1? \u89e3\u51b3:\u627e\u4e2d\u95f4\u5a92\u4ecb,\u8bc1\u660e\u4e1a\u52a1\u5b8c\u6210. \u9632\u6b62\u4e2d\u95f4\u5a92\u4ecb\u9020\u5047:\u5c06\u6570\u636e\u4f20\u5165\u533a\u5757\u94fe</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_49","title":"\u54c8\u5e0c","text":"<p>\u54c8\u5e0c\u51fd\u6570:\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4,\u54c8\u5e0c\u503c\u4ee3\u8868\u4f4d\u7f6e(\u533a\u5757\u94fe\u4e2d\u4ee3\u8868\u6307\u7eb9) \u5e94\u7528: \u5b57\u5178,\u641c\u7d22\u5f15\u64ce({\u952e:\u503c}) \u641c\u7d22\u5f15\u64ce:\u7528\u722c\u866b\u722c\u53d6\u6240\u6709\u7f51\u9875\u4fe1\u606f,\u5c06\u9875\u9762\u770b\u6210\u8282\u70b9,\u6784\u6210\u5de8\u5927\u7684\u56fe -&gt; \u53ef\u80fd\u7531\u4e0d\u540c\u8def\u5f84\u5230\u8fbe\u540c\u4e00\u4e2a\u7f51\u9875,\u9700\u8981\u5bf9\u7f51\u9875\u505a\u6807\u8bb0(URL \u5730\u5740),\u5b58\u50a8\u5230 URL \u96c6\u5408 -&gt; \u76f4\u63a5\u6bd4\u8f83 URL \u5219\u65f6\u95f4\u957f,\u5229\u7528\u54c8\u5e0c\u51fd\u6570,\u8ba1\u7b97 URL \u7684\u54c8\u5e0c\u503c</p> <p>\u5012\u6392\u7d22\u5f15:\u6309\u5173\u952e\u8bcd\u5b58\u50a8. \u67e5\u8be2\u65f6\u627e\u4e0d\u540c\u5173\u952e\u8bcd\u7684\u4ea4\u96c6</p> <p>\u54c8\u5e0c\u8868:\u8ba1\u7b97\u51fa f(x)\u653e\u5230\u4e00\u884c identifier density : n/T (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u7b97\u51fa\u7684\u503c\u7684\u6240\u6709\u53ef\u80fd\u503c\u7684\u603b\u6570) loading density : n/(sb) (\u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570 / (slots * buckets))</p> <p>collision : \u4e0d\u540c\u8f93\u5165\u503c\u6709\u76f8\u540c\u8f93\u51fa overflow : \u8981\u5b58\u50a8\u7684\u6570\u636e\u603b\u6570\u5927\u4e8e\u7a7a\u95f4\u603b\u6570(\u540c\u4e00\u8f93\u51fa\u503c\u5bf9\u5e94\u7684\u8f93\u5165\u503c\u6570\u91cf &gt; slots)</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_50","title":"\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1","text":"<p>\u8981\u6c42:: \u5bb9\u6613\u8ba1\u7b97,\u8f93\u51fa\u5747\u5300</p> <p>\u6574\u6570:</p> <ol> <li>\u6c42\u4f59\u6cd5: x -&gt; x%p,\u4e00\u822c\u53d6 p \u4e3a\u7d20\u6570</li> <li>\u6298\u53e0\u6cd5: \u5c06\u957f\u6574\u6570\u6620\u5c04\u4e3a\u4e24\u4f4d\u6570,\u5219\u4e24\u4f4d\u4e00\u6bb5\u518d\u76f8\u52a0,\u4e2d\u95f4\u53ef\u4ee5\u98a0\u5012\u7b49</li> <li>\u5e73\u65b9\u53d6\u4e2d: \u5e73\u65b9\u540e\u53d6\u4e2d\u95f4\u7684\u4e00\u6bb5,\u4f7f\u7ed3\u679c\u80fd\u88ab\u591a\u4f4d\u5f71\u54cd</li> <li>\u5206\u6790\u6cd5</li> </ol> <p>\u5b57\u7b26\u4e32: \u5b57\u7b26\u4e32\u600e\u4e48\u53d8\u6210\u6570\u636e?</p> <ol> <li>\u76f8\u52a0\u6c42\u4f59\u6570. \u9632\u6b62\u8f93\u51fa\u503c\u96c6\u4e2d\u5728\u8f83\u5c0f\u503c,\u53ef\u4ee5<code>str[0]+str[1]*27+str[2]*27*27...</code>.(\u7528 32 \u4ee3\u66ff 27 \u53ef\u52a0\u5feb\u8ba1\u7b97,\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u4e58\u4e00\u6b21,\u6bcf\u6b21\u52a0\u65b0\u7684\u503c\u518d\u79fb\u4f4d)</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_51","title":"\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","text":"<ol> <li>seperate chaining \u94fe\u5730\u5740\u6cd5</li> </ol> <p><code>c    struct HashTbl {      int tableSize;      List *theList;    };</code></p> <p><code>theList</code>\u4e2d\u5b58\u50a8\u5e26\u5934\u94fe\u8868</p> <ol> <li>open address \u5f00\u653e\u5730\u5740\u6cd5 <code>h(k) + f(i)</code>,\u51b2\u7a81\u65f6<code>i++</code>\u6216<code>+-i</code>,f(i)\u4e3a\u7ebf\u6027\u65f6\u79f0\u4e3a\u7ebf\u6027\u63a2\u6d4b    \u5220\u9664\u65f6\u53ef\u80fd\u5224\u65ad\u9519\u8bef,\u6545\u5220\u9664\u65f6\u8981\u505a\u6807\u8bb0    average search time \u5e73\u5747\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6240\u6709 search time \u76f8\u52a0\u6c42\u5e73\u5747    \u5e73\u5747\u4e0d\u6210\u529f\u67e5\u627e\u6b21\u6570: \u6309\u5165\u53e3\u5206\u7c7b</li> </ol> <p>\u7ebf\u6027\u63a2\u6d4b\u51b2\u7a81\u591a,\u6362\u6210\u4e8c\u6b21\u63a2\u6d4b,\u4f9d\u6b21\u8c03\u6574\u4e3a<code>f(i)=i^2</code>, <code>f(i)=i^3</code>..., \u8d85\u51fa\u8303\u56f4\u65f6\u6c42\u6a21\u8fd4\u56de    \u4e8c\u6b21\u63a2\u6d4b\u53ef\u80fd\u53d1\u751f\u4e8c\u6b21\u805a\u96c6    \u7f3a\u70b9:\u4e0d\u4e00\u5b9a\u80fd\u63a2\u6d4b\u5230\u7a7a\u4f4d</p> <ol> <li>\u516c\u5171\u533a\u57df    \u51b2\u7a81\u65f6\u5f00\u8f9f\u7edf\u4e00\u7684\u65b0\u533a\u57df\uff0c\u5b58\u653e\u51b2\u7a81\u503c\u3002\u6bcf\u6b21\u8bbf\u95ee\u65f6\u5148\u770b\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u7a7a\u8868\u793a\u8981\u8bbf\u95ee\u7684\u6570\u4e0d\u5728\uff1b\u6709\u6570\u518d\u770b\u65b0\u533a\u57df\uff0c\u8bbf\u95ee\u8981\u8bbf\u95ee\u7684\u503c\u3002</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_52","title":"\u8865\u5145","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#loading-density","title":"Loading Density \u662f\u4ec0\u4e48","text":"<p>1. \u5b9a\u4e49 Loading Density\uff08\u4e5f\u79f0\u4e3a Load Factor\uff0c\u88c5\u8f7d\u56e0\u5b50\uff09\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u5df2\u5b58\u50a8\u5143\u7d20\u6570\u91cf\u4e0e\u54c8\u5e0c\u8868\u603b\u5bb9\u91cf\u7684\u6bd4\u503c\uff1a [ \\text{Loading Density} = \\frac{\\text{\u5df2\u63d2\u5165\u7684\u5143\u7d20\u6570\u91cf}}{\\text{\u54c8\u5e0c\u8868\u7684\u603b\u69fd\u4f4d\u6570\uff08Size\uff09}} ]</p> <p>2. \u4f5c\u7528</p> <ul> <li>\u8861\u91cf\u7a7a\u95f4\u5229\u7528\u7387\uff1a\u503c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u54c8\u5e0c\u8868\u8d8a\u201c\u6ee1\u201d\u3002</li> <li>\u5f71\u54cd\u6027\u80fd\uff1a</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\u8d8a\u9ad8\uff0c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u8d8a\u5927\uff0c\u67e5\u627e/\u63d2\u5165\u64cd\u4f5c\u53ef\u80fd\u53d8\u6162\u3002</li> <li>\u901a\u5e38\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff08\u5982 0.7\uff09\uff0c\u8d85\u8fc7\u65f6\u89e6\u53d1\u6269\u5bb9\uff08Rehashing\uff09\u3002</li> </ul> <p>3. \u4e0e\u51b2\u7a81\u7684\u5173\u7cfb</p> <ul> <li>\u4f4e\u88c5\u8f7d\u5bc6\u5ea6\uff08&lt;0.5\uff09\uff1a\u51b2\u7a81\u6982\u7387\u4f4e\uff0c\u4f46\u7a7a\u95f4\u6d6a\u8d39\u8f83\u591a\u3002</li> <li>\u9ad8\u88c5\u8f7d\u5bc6\u5ea6\uff08&gt;0.7\uff09\uff1a\u51b2\u7a81\u6982\u7387\u663e\u8457\u589e\u52a0\uff0c\u7ebf\u6027\u63a2\u6d4b\u7b49\u65b9\u6cd5\u7684\u6027\u80fd\u4e0b\u964d\u3002</li> </ul> <p>\u5e38\u89c1\u7b56\u7565\uff1a</p> <ul> <li>\u5f53\u88c5\u8f7d\u5bc6\u5ea6\u8d85\u8fc7\u9608\u503c\uff08\u5982 0.75\uff09\uff0c\u54c8\u5e0c\u8868\u4f1a\u6269\u5bb9\uff08\u901a\u5e38\u52a0\u500d\u5927\u5c0f\uff09\uff0c\u5e76\u91cd\u65b0\u54c8\u5e0c\u6240\u6709\u5143\u7d20\u3002</li> </ul>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#class-fourteen","title":"Class Fourteen","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_53","title":"\u54c8\u5e0c\u52a8\u6001\u67e5\u627e\u95ee\u9898","text":"<ol> <li>\u67e5\u627e\u6811\uff0c\u53ea\u8981\u89e3\u51b3\u6811\u7684\u5e73\u8861\u7684\u95ee\u9898</li> <li>\u8ba1\u7b97\uff0c\u8bbe\u8ba1\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09</li> </ol> <p>\u907f\u514d\u51b2\u7a81\uff1a</p> <ol> <li>\u727a\u7272\u7a7a\u95f4\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff09</li> </ol> <p>\u5f00\u653e\u5730\u5740\u6cd5,\u4e8c\u6b21\u63a2\u6d4b Thm. \u5982\u679c\u6ee1\u8db3:</p> <ol> <li>\u6c42\u4f59\u65f6\u7528\u7d20\u6570</li> <li>\u81f3\u5c11\u6709\u4e00\u534a\u4f4d\u7f6e\u7a7a    \u5219\u53ef\u4ee5\u8bc1\u660e\u6709\u65b0\u7684\u5143\u7d20,\u5219\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e.</li> </ol> <p>Pf:\u9996\u5148\u8bc1\u660e,\u5982\u679c i,j \u6ee1\u8db3$0&lt;i\\neq j\\le tablesize/2$, \u5219</p> <p>$(h(x)+i^2)\\% tablesize \\neq (h(x)+j^2)\\%tablesize $.</p> <pre><code>position find (int key, hash H) {\n  position pos;\n  int colliNum;\n  pos = hash(key, H.size());\n  while (H[pos]\u975e\u7a7a &amp;&amp; H[pos].Element != key) {\n    pos += 2 * ++colliNum - 1;   // \u5c06\u5e73\u65b9\u53d8\u4e3a\u4e582\uff0c\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\n    if (pos &gt; H.size())\n      pos -= H.size();\n  }\n  return pos;\n}\n</code></pre> <p>f(i)\u4e5f\u53ef\u4ee5\u65f6\u54c8\u5e0c\u51fd\u6570(double hash \u65b9\u6cd5) \u793a\u4f8b\uff1a<code>f(i) = i * hash(key)</code>, <code>f(i) = R - i * hash(key)</code></p> <p>Rehashing \u65b9\u6cd5 \u5c06\u539f\u6765\u7684\u54c8\u5e0c\u8868\u6269\u5927\u4e00\u500d\uff0c\u5c06\u539f\u6765\u5176\u4e2d\u6240\u6709\u5143\u7d20\u91cd\u65b0\u7b97\u4e00\u904d \u4ec0\u4e48\u65f6\u5019\u9700\u8981 rehash\uff1f\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u63d2\u5165\u65f6\u51b2\u7a81\u591a\uff0c\u8bbe\u7f6e\u51e0\u6b21\u63d2\u5165\u4e2d\u51b2\u7a81\u5728\u51e0\u6b21\u4ee5\u4e0a\uff0c\u8fdb\u884c rehash</li> <li>\u8868\u7684\u88c5\u8f7d\u7387\u8d85\u8fc7\u8bbe\u5b9a\u65f6 rehash</li> <li>\u63d2\u5165\u65f6\u627e\u4e0d\u5230\u4f4d\u7f6e</li> </ol>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_54","title":"\u53e6\u5916","text":""},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_55","title":"\u5806\u5408\u5e76","text":"<p>\u6bcf\u6b21\u53d6\u4e24\u6811\u9876\u70b9\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u5408\u6210\u540e\u9876\u70b9\uff0c\u4e00\u9897\u5b50\u6811\u76f4\u63a5\u4f5c\u4e3a\u5408\u5e76\u540e\u9876\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\uff0c\u53e6\u4e00\u4e2a\u5b50\u6811\u548c\u5408\u5e76\u524d\u7684\u53e6\u4e00\u4e2a\u6811\u5408\u5e76\uff08\u9012\u5f52\uff09 \u6700\u5de6\u5806\uff1a\u4e0d\u7ef4\u62a4\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u6027\uff0c\u5168\u90e8\u504f\u5411\u5de6\u8fb9</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_56","title":"\u9700\u8981\u719f\u7ec3\u638c\u63e1\u7684\u7a0b\u5e8f","text":"<p>\u51fa\u5165\u6808\uff0c\u51fa\u5165\u961f\u5217\uff0c\u4e8c\u53c9\u6811\u7684\u5de6\u4e2d\u53f3\u5c42\u6b21\u904d\u5386\uff0c\u975e\u9012\u5f52\u904d\u5386\uff0c\u5806\u7684\u63d2\u5165\u5220\u9664\uff0c\u67e5\u627e\u6811\u7684\u67e5\u627e\u63d2\u5165\u5220\u9664\uff0c \u56fe\u7684 bfs dfs\uff0c\u6700\u77ed\u8def\u5f84\uff0c\u62d3\u6251\u6392\u5e8f\uff0c \uff08\u68ee\u6797\u7684\u904d\u5386\uff09</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_57","title":"\u8bfe\u4e0a\u590d\u4e60","text":"<p>\u7ebf\u6027\u8868 \u987a\u5e8f\u5b58\u50a8\uff1a\u6570\u7ec4 \u94fe\u5f0f\u5b58\u50a8\uff1a\u94fe\u8868 \u6570\u7ec4\u4e0e\u94fe\u8868\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9 \u94fe\u8868\u7684\u64cd\u4f5c \u5178\u578b\u4e60\u9898\uff1a\u5b9e\u73b0\u5355\u94fe\u8868\u7684\u539f\u5730\u9006\u8f6c\uff08\u5faa\u73af\u4e0d\u53d8\u5f0f\uff09\uff0c \u5206\u522b\u7528\u4e00\u5143\u591a\u9879\u5f0f\u7684\u4e24\u79cd\u8868\u793a\u5b9e\u73b0\u591a\u9879\u5f0f\u52a0\u6cd5</p> <p>\u5806\u6808 \u987a\u5e8f\u6808\uff1a\u6570\u7ec4\uff0ctop++, top-- lianzhan\uff1a\u94fe\u8868\uff0ctop \u5373\u5934\u6307\u9488 \u5e94\u7528\uff1a\u62ec\u53f7\u5339\u914d\u68c0\u9a8c\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0cn \u8282\u6c49\u8bfa\u5854\u95ee\u9898\uff08\u5178\u578b\u9012\u5f52\uff09\uff0c\u8ff7\u5bab\u95ee\u9898 \u5feb\u901f\u6392\u5e8f\u9012\u5f52\u7528\u5806\u6808\u600e\u4e48\u5b9e\u73b0\uff1f\u6bcf\u6b21\u9012\u5f52\u5076\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4ee3\u8868\u8d77\u70b9\u7ec8\u70b9\u5927\u5c0f\uff0c\u4e00\u79cd\u65b9\u6cd5\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\u4ece\u5806\u6808\u4e2d\u629b\u51fa\u5143\u7d20\uff0c\u62c6\u6210\u4e24\u4e2a\u518d\u538b\u5230\u5806\u6808\u4e2d \u53ef\u4ee5\u628a\u6240\u6709\u9012\u5f52\u7528\u5faa\u73af\u5b9e\u73b0\uff0c\u6838\u5fc3\u662f\u5c06\u53c2\u6570\u538b\u5230\u5806\u6808\u4e2d \u8ff7\u5bab\u95ee\u9898\uff1a\u7528\u6570\u7ec4\u8868\u793a\u8ff7\u5bab\uff0c0 \u8868\u793a\u901a\u8def\uff0c1 \u8868\u793a\u5899\u3002\u4e00\u76f4\u6cbf\u7740\u67d0\u4e2a\u65b9\u5411\u8d70\u3002\u6bcf\u6b21\u5c06\uff08\u4f4d\u7f6e\u5750\u6807\uff0c\u65b9\u5411\u9009\u62e9\uff09\u538b\u6808\uff0c\u56de\u5934\u8868\u793a\u5148\u4e0d\u65ad\u538b\u6808\u518d\u4e0d\u65ad\u629b\u51fa\u3002\u56de\u6eaf\u6cd5\u3002</p> <p>\u4e24\u4e2a\u5806\u6808\u5b9e\u73b0\u961f\u5217 \u5165\u961f\uff1a \u5982\u679c\u6808 1 \u6ee1\u4f46\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u4e2d\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u5c06\u65b0\u5143\u7d20\u653e\u5165\u6808 1 \u5982\u679c\u6808 1 \u6709\u5143\u7d20\u4f46\u6ca1\u6ee1\uff0c\u5c06\u6808 2 \u5012\u56de\u6808 1\uff0c\u518d\u65b0\u5143\u7d20\u5165\u6808 \u51fa\u961f\uff1a \u5982\u679c\u6808 2 \u6709\u5143\u7d20\uff0c\u76f4\u63a5\u629b\u51fa \u5982\u679c\u6808 2 \u7a7a\uff0c\u5c06\u6808 1 \u6240\u6709\u5143\u7d20\u5012\u5165\u6808 2\uff0c\u518d\u629b\u51fa</p> <p>\u518d\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u5b9e\u73b0\u7a7a\u95f4\u5171\u4eab\uff1a \u4e24\u5934\u8868\u793a\u4e24\u4e2a\u5806\u6808\uff0c\u4ece\u4e24\u8fb9\u5411\u4e2d\u95f4\u653e\u3002\u6ee1\u7684\u5224\u5b9a\uff1a<code>top_right == top_left + 1</code></p> <p>\u6811\uff0clevel \u548c degree \u4e2d\u5e8f\u904d\u5386\u65f6\uff0cn \u5728 m \u524d\u7684\u6761\u4ef6\u662f\uff1an \u5728 m \u7684\u5de6\u65b9 \u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\u5b9a\u4e49\u672a\u6811\u7684\u76f4\u5f84\u3002\u7ed9\u5b9a\u6811\u6c42\u76f4\u5f84</p> <p>\u7ed9\u5b9a\u94fe\u8868\u8868\u793a\u7684\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811</p> <p>\u5de6\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u53f3\u8fb9\u662f\u67e5\u627e\u6811\uff0c\u6839\u8282\u70b9\u6bd4\u5de6\u513f\u5b50\u6253\uff0c\u6bd4\u53f3\u513f\u5b50\u5c0f\uff0c\u662f\u4e0d\u662f\u67e5\u627e\u6811\uff1f \u4e0d\u662f \u5de6\u8fb9\u662f\u5806\uff0c\u53f3\u8fb9\u662f\u5806\uff0c\u6839\u6bd4\u5de6\u53f3\u513f\u5b50\u5927\uff0c\u662f\u4e0d\u662f\u5806\uff1f \u662f</p> <p>\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u53ef\u4e0d\u53ef\u80fd\u662f\u67e5\u627e\u987a\u5e8f \u521d\u59cb\u4e3a\u8d1f\u65e0\u7a77\u5230\u6b63\u65e0\u7a77\u3002\u6bcf\u6b21\u78b0\u5230\u5c0f\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u5de6\u8fb9\u754c\uff1b\u78b0\u5230\u5927\u7684\u5143\u7d20\uff0c\u66f4\u65b0\u53f3\u8fb9\u754c\u3002</p> <p>\u6811\u7684\u53cc\u4eb2\u8868\u793a\u6cd5\u548c\u5b69\u5b50\u8868\u793a\u6cd5\uff0c\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u8868\u793a\u6cd5\u3002</p> <p>\u56fe\u7684\u8868\u793a\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u90bb\u63a5\u8868\uff0c\u9006\u90bb\u63a5\u8868\uff0c\u5341\u5b57\u94fe\u8868\uff08\u6709\u5411\u56fe\uff09</p> <p>\u7528 Floyd \u7b97\u6cd5\u5224\u65ad\u56fe\u662f\u5426\u6709\u56de\u8def\uff1f Floyd\uff1a\u90bb\u63a5\u77e9\u9635\u7684\u5e42\u76f8\u52a0\u3002\u68c0\u67e5\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\uff0c\u5982\u679c\u5bf9\u89d2\u7ebf\u4e0a\u6709\u975e\u96f6\u5143\uff0c\u5219\u6709\u73af\u3002</p> <p>\u7ed9\u5b9a\u6751\u5e84\u548c\u4e0d\u540c\u6751\u5e84\u95f4\u9053\u8def\u7684\u957f\u5ea6\u3002\u5bfb\u627e\u4f4d\u7f6e\uff0c\u4f7f\u5176\u5230\u5404\u4e2a\u6751\u5e84\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u3002</p> <p>\u54c8\u5e0c\uff0c\u6c42\u7b49\u6982\u7387\u6210\u529f\u4e0e\u4e0d\u6210\u529f\u67e5\u627e\u7684\u5e73\u5747\u67e5\u627e\u6b21\u6570\u3002</p> <p>\u7ed9\u5b9a\u54c8\u5e0c\u51fd\u6570\u548c\u54c8\u5e0c\u7ed3\u679c\uff0c\u6c42\u6700\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff1a\u6784\u5efa\u6709\u5411\u56fe\uff0c\u6c42\u6700\u5c0f\u7684\u62d3\u6251\u5e8f\u5217</p> <p>\u6392\u5e8f\u7684\u8f85\u52a9\u7a7a\u95f4 \u5806\u6392\u5e8f\uff1a\u65e0\u8f85\u52a9\u7a7a\u95f4 \u5feb\u901f\u6392\u5e8f\uff1a\u9012\u5f52\u9700\u8981\u6808\u7a7a\u95f4 \u5f52\u5e76\u6392\u5e8f\uff1a\u989d\u5916\u9700\u8981\u6570\u7ec4</p> <p>\u6392\u5e8f\u7b97\u6cd5\u662f\u5426\u7a33\u5b9a\uff1a\u9700\u8981\u4ea4\u6362\u7684\u80af\u5b9a\u4e0d\u7a33\u5b9a</p> <p>\u5f88\u5927\u7684\u6570\u636e\uff0c\u5728\u4e0d\u5b8c\u5168\u6392\u5e8f\u7684\u524d\u63d0\u4e0b\u627e\u51fa\u524d m \u5c0f\u7684\u5143\u7d20\uff1a \u5efa\u7acb\u5927\u5c0f\u4e3a m \u7684\u5806\uff0c\u5c06\u6240\u6709\u5143\u7d20\u4f9d\u6b21\u63d2\u5165</p> <p>\u7528\u5feb\u901f\u6392\u5e8f\u627e\u5230\u7b2c k \u5927\u7684\u5143\u7d20</p> <p>\u5feb\u901f\u6392\u5e8f\u7684\u975e\u9012\u5f52\u7b97\u6cd5\uff1f \u5c06\u9012\u5f52\u8f6c\u5316\u4e3a\u5faa\u73af\uff1f</p>"},{"location":"%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/fdsNote/#_58","title":"\u4e00\u4e9b\u4ee3\u7801","text":"<p>BST.c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElementType;\ntypedef struct TNode* Position;\ntypedef Position BinTree; /* \u4e8c\u53c9\u6811\u7c7b\u578b */\nstruct TNode {            /* \u6811\u7ed3\u70b9\u5b9a\u4e49 */\n    ElementType Data;     /* \u7ed3\u70b9\u6570\u636e */\n    BinTree Left;         /* \u6307\u5411\u5de6\u5b50\u6811 */\n    BinTree Right;        /* \u6307\u5411\u53f3\u5b50\u6811 */\n};\n\nPosition Find(ElementType X, BinTree BST) {\n    if (!BST)\n        return NULL; /*\u67e5\u627e\u5931\u8d25*/\n    if (X &gt; BST-&gt;Data)\n        return Find(X, BST-&gt;Right); /*\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else if (X &lt; BST-&gt;Data)\n        return Find(X, BST-&gt;Left); /*\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e*/\n    else                           /* X == BST-&gt;Data */\n        return BST;                /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n}\n\nPosition IterFind(ElementType X, BinTree BST) {\n    while (BST) {\n        if (X &gt; BST-&gt;Data)\n            BST = BST-&gt;Right; /*\u5411\u53f3\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else if (X &lt; BST-&gt;Data)\n            BST = BST-&gt;Left; /*\u5411\u5de6\u5b50\u6811\u4e2d\u79fb\u52a8\uff0c\u7ee7\u7eed\u67e5\u627e*/\n        else                 /* X == BST-&gt;Data */\n            return BST;      /*\u67e5\u627e\u6210\u529f\uff0c\u8fd4\u56de\u7ed3\u70b9\u7684\u627e\u5230\u7ed3\u70b9\u7684\u5730\u5740*/\n    }\n    return NULL; /*\u67e5\u627e\u5931\u8d25*/\n}\n\nPosition FindMin(BinTree BST) {\n    if (!BST)\n        return NULL; /*\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd4\u56deNULL*/\n    else if (!BST-&gt;Left)\n        return BST; /*\u627e\u5230\u6700\u5de6\u53f6\u7ed3\u70b9\u5e76\u8fd4\u56de*/\n    else\n        return FindMin(BST-&gt;Left); /*\u6cbf\u5de6\u5206\u652f\u7ee7\u7eed\u67e5\u627e*/\n}\n\nPosition FindMax(BinTree BST) {\n    if (BST)\n        while (BST-&gt;Right) /*\u6cbf\u53f3\u5206\u652f\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u6700\u53f3\u53f6\u7ed3\u70b9*/\n            BST = BST-&gt;Right;\n    return BST;\n}\n\nBinTree Insert(BinTree BST, ElementType X) {\n    if (!BST) { /* \u82e5\u539f\u6811\u4e3a\u7a7a\uff0c\u751f\u6210\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u641c\u7d22\u6811 */\n        BST = (BinTree)malloc(sizeof(struct TNode));\n        BST-&gt;Data = X;\n        BST-&gt;Left = BST-&gt;Right = NULL;\n    } else { /* \u5f00\u59cb\u627e\u8981\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e */\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Insert(BST-&gt;Left, X); /*\u9012\u5f52\u63d2\u5165\u5de6\u5b50\u6811*/\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Insert(BST-&gt;Right, X); /*\u9012\u5f52\u63d2\u5165\u53f3\u5b50\u6811*/\n        /* else X\u5df2\u7ecf\u5b58\u5728\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a */\n    }\n    return BST;\n}\n\nBinTree Delete(BinTree BST, ElementType X) {\n    Position Tmp;\n    if (!BST)\n        printf(\"\u8981\u5220\u9664\u7684\u5143\u7d20\u672a\u627e\u5230\");\n    else {\n        if (X &lt; BST-&gt;Data)\n            BST-&gt;Left = Delete(BST-&gt;Left, X); /* \u4ece\u5de6\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else if (X &gt; BST-&gt;Data)\n            BST-&gt;Right = Delete(BST-&gt;Right, X); /* \u4ece\u53f3\u5b50\u6811\u9012\u5f52\u5220\u9664 */\n        else {                                  /* BST\u5c31\u662f\u8981\u5220\u9664\u7684\u7ed3\u70b9 */\n            /* \u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u6709\u5de6\u53f3\u4e24\u4e2a\u5b50\u7ed3\u70b9 */\n            if (BST-&gt;Left &amp;&amp; BST-&gt;Right) {\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5c0f\u7684\u5143\u7d20\u586b\u5145\u5220\u9664\u7ed3\u70b9 */\n                Tmp = FindMin(BST-&gt;Right);\n                BST-&gt;Data = Tmp-&gt;Data;\n                /* \u4ece\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u6700\u5c0f\u5143\u7d20 */\n                BST-&gt;Right = Delete(BST-&gt;Right, BST-&gt;Data);\n            } else { /* \u88ab\u5220\u9664\u7ed3\u70b9\u6709\u4e00\u4e2a\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                Tmp = BST;\n                if (!BST-&gt;Left) /* \u53ea\u6709\u53f3\u5b69\u5b50\u6216\u65e0\u5b50\u7ed3\u70b9 */\n                    BST = BST-&gt;Right;\n                else /* \u53ea\u6709\u5de6\u5b69\u5b50 */\n                    BST = BST-&gt;Left;\n                free(Tmp);\n            }\n        }\n    }\n    return BST;\n}\n</code></pre> <p>\u8868\u8fbe\u5f0f\u6811</p> <pre><code>/*\n\u4e8c\u5143\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8054\u7cfb\u5230\u4e8c\u53c9\u6811:\n\u4ee5\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\u4f5c\u4e3a\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u4ee5\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u975e\u53f6\u8282\u70b9\u4e2d\u7684\u6570\u636e,\n\u5176\u4e24\u68f5\u5b50\u6811\u662f\u5b83\u7684\u8fd0\u7b97\u5bf9\u8c61,\n\u5b50\u6811\u53ef\u4ee5\u662f\u57fa\u672c\u8fd0\u7b97\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u590d\u6742\u8868\u8fbe\u5f0f.\n\n\u7b97\u5f0f\u8868\u8fbe\u5f0f\u548c\u8868\u8fbe\u5f0f\u6811\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\n    \u8868\u8fbe\u5f0f\u6811\u7684\u5148\u6839\u904d\u5386\uff1a\u524d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u4e2d\u6839\u904d\u5386\uff1a\u4e2d\u7f00\u8868\u8fbe\u5f0f\n    \u8868\u8fbe\u5f0f\u6811\u7684\u540e\u6839\u904d\u5386\uff1a\u540e\u7f00\u8868\u8fbe\u5f0f\n\n\u6784\u5efa\u8868\u8fbe\u5f0f\u6811:\n1. \u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u4e2d\u7f00\u5f62\u5f0f\uff1a(4+1*(5-2))-6/3\n2. \u9996\u5148\u5c06\u6bcf\u4e2a\u8fd0\u7b97\u52a0\u4e0a\u62ec\u53f7\uff0c\u533a\u5206\u4f18\u5148\u7ea7\uff0c\u5f97\u5230(4+(1*(5-2)))-(6/3)\n3. \u62ec\u53f7\u5916\u7684-\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c(4+(1*(5-2)))\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c(6/3)\u4f5c\u4e3a\u53f3\u5b50\u6811\uff1b\n4. \u9012\u5f52\u7684\u8f6c\u63624+(1*(5-2))\uff0c+\u6700\u4e3a\u6839\u8282\u70b9\uff0c4\u662f\u5de6\u5b50\u6811\uff0c\n    (1*(5-2))\u662f\u53f3\u5b50\u6811\u3002*\u662f\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c1\u662f\u5de6\u5b50\u6811\uff0c(5-2)\u662f\u53f3\u5b50\u6811\u3002\n    \u6700\u540e\u8ba1\u7b97(5-2)\uff0c-\u662f\u6839\u8282\u70b9\uff0c5\u662f\u5de6\u5b50\u6811\uff0c2\u662f\u53f3\u5b50\u6811\u3002\n\u6784\u9020\u597d\u8868\u8fbe\u5f0f\u6811\u4e4b\u540e\uff0c\u524d\u7f00\u8868\u8fbe\u5f0f\u548c\u4e2d\u7f00\u8868\u8fbe\u5f0f\u53ef\u6839\u636e\u5148\u6839\u904d\u5386\u548c\u540e\u6839\u904d\u5386\u5f97\u5230\u3002\n    \u524d\u7f00\u8868\u8fbe\u5f0f\uff1a- + 4 * 1 - 5 2 / 6 3\n    \u540e\u7f00\u8868\u8fbe\u5f0f\uff1a4 1 5 2 - * + 6 3 / -\n*/\n\n#include &lt;stdio.h&gt;\n#define MAXN 1000\n\nint lch[MAXN], rch[MAXN];\nchar op[MAXN];\nint nc = 0;  // \u7ed3\u70b9\u6570\n\nint build_tree(char* s, int x, int y) {\n    int i, c1 = -1, c2 = -1, p = 0;\n    int u;\n    if (y - x == 1)  // \u4ec5\u4e00\u4e2a\u5b57\u7b26\uff0c\u5efa\u7acb\u5355\u72ec\u7ed3\u70b9\n    {\n        u = ++nc;\n        lch[u] = rch[u] = 0;\n        op[u] = s[x];\n        return u;\n    }\n    for (i = x; i &lt; y; i++) {\n        switch (s[i]) {\n            case '(':\n                p++;\n                break;\n            case ')':\n                p--;\n                break;\n            case '+':\n            case '-':\n                if (!p)\n                    c1 = i;\n                break;\n            case '*':\n            case '/':\n                if (!p)\n                    c2 = i;\n                break;\n        }\n    }\n    if (c1 &lt; 0)\n        c1 = c2;  // \u627e\u4e0d\u5230\u62ec\u53f7\u5916\u7684\u52a0\u51cf\u53f7\uff0c\u5c31\u7528\u4e58\u9664\u53f7\n    if (c1 &lt; 0)\n        return build_tree(s, x + 1, y - 1);  // \u6574\u4e2a\u8868\u8fbe\u5f0f\u88ab\u4e00\u5bf9\u62ec\u53f7\u62ec\u8d77\u6765\n    u = ++nc;\n    lch[u] = build_tree(s, x, c1);\n    rch[u] = build_tree(s, c1 + 1, y);\n    op[u] = s[c1];\n    return u;\n}\n\n</code></pre> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811</p> <pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u7ebf\u7d22\u4e8c\u53c9\u6811\ntypedef struct ThreadNode {\n    int data;\n    struct ThreadNode *left, *right;\n    int ltag, rtag;  // tag\u4e3a0\u8868\u793a\u6709\u5b69\u5b50\n} ThreadNode;\n\n// \u6307\u5411\u5f53\u524d\u8bbf\u95ee\u53d8\u91cf\u7684\u524d\u9a71\nThreadNode* pre = NULL;\n\nvoid visit(ThreadNode* node);\n\n// \u521d\u59cb\u5316\u8282\u70b9\nThreadNode* initNode() {\n    ThreadNode* Node = (ThreadNode*)malloc(sizeof(ThreadNode));\n    Node-&gt;left = NULL;\n    Node-&gt;right = NULL;\n    Node-&gt;ltag = 0;  // \u9ed8\u8ba4\u8282\u70b9\u6709\u5de6\u53f3\u5b69\u5b50\n    Node-&gt;rtag = 0;\n    return Node;\n}\n\n// \u63d2\u5165\u65b0\u8282\u70b9\u5e76\u8d4b\u503c\nbool insertNode(ThreadNode* node, int data, int contain) {\n    ThreadNode* newNode = initNode();\n    // contain\u4e3a0\u65f6\u5411\u5de6\u63d2\u5165,\u4e3a1\u65f6\u5411\u53f3\u63d2\u5165\n    if (node-&gt;left == NULL &amp;&amp; contain == 0) {\n        node-&gt;left = newNode;\n        newNode-&gt;data = data;\n        return true;\n    } else if (node-&gt;right == NULL &amp;&amp; contain == 1) {\n        node-&gt;right = newNode;\n        newNode-&gt;data = data;\n        return true;\n    }\n    free(newNode);\n    return false;\n}\n\n// \u8fb9\u4e2d\u5e8f\u904d\u5386\u8fb9\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid InThread(ThreadNode* node) {\n    if (node != NULL) {\n        InThread(node-&gt;left);   // \u904d\u5386\u5de6\u5b50\u6811\n        visit(node);            // \u8bbf\u95ee\u6839\u8282\u70b9\n        InThread(node-&gt;right);  // \u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n\n// \u521b\u5efa\u4e2d\u5e8f\u7ebf\u7d22\u5316\u4e8c\u53c9\u6811\nvoid createInThread(ThreadNode* node) {\n    // \u91cd\u7f6e\u5168\u5c40\u53d8\u91cf\n    pre = NULL;\n    InThread(node);\n    // \u6700\u540e\u4e00\u4e2a\u904d\u5386\u7684\u8282\u70b9\u7684\u540e\u7ee7\u8bbe\u7f6e\u4e3aNULL\n    pre-&gt;right = NULL;\n    pre-&gt;rtag = 1;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u5148\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* FirstNode(ThreadNode* node) {\n    // \u5f53\u4e3a\u7a7a\u65f6\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;ltag == 0) {\n        node = node-&gt;left;\n    }\n    return node;\n}\n\n// \u627e\u5230\u4ee5node\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u540e\u88ab\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\nThreadNode* LastNode(ThreadNode* node) {\n    if (node == NULL) {\n        return NULL;\n    }\n    while (node-&gt;rtag == 0) {\n        node = node-&gt;right;\n    }\n    return node;\n}\n\n// \u8bbf\u95ee\u6839\u8282\u70b9\nvoid visit(ThreadNode* node) {\n    if (node-&gt;left == NULL) {\n        node-&gt;left = pre;\n        node-&gt;ltag = 1;\n    }\n\n    if (pre != NULL &amp;&amp; pre-&gt;right == NULL) {\n        pre-&gt;right = node;\n        pre-&gt;rtag = 1;\n    }\n    pre = node;\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u540e\u7ee7\u8282\u70b9\nThreadNode* NextNode(ThreadNode* p) {\n    if (p-&gt;rtag == 0) {\n        return FirstNode(p-&gt;right);\n    }\n    return p-&gt;right;\n}\n\nvoid visit0(ThreadNode* thread_node) {\n    printf(\"%d  \", thread_node-&gt;data);\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u904d\u5386\nvoid Inorder(ThreadNode* rootNode) {\n    for (ThreadNode* p = FirstNode(rootNode); p != NULL; p = NextNode(p)) {\n        visit0(p);\n    }\n}\n\n// \u5728\u4e2d\u5e8f\u4e8c\u53c9\u6811\u4e2d\u627e\u5230p\u7684\u524d\u9a71\u8282\u70b9\nThreadNode* BeforeNode(ThreadNode* p) {\n    if (p-&gt;ltag == 0) {\n        return LastNode(p-&gt;left);\n    }\n    return p-&gt;left;\n}\n\n// \u5229\u7528\u7ebf\u7d22\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u975e\u9012\u5f52\u9006\u5e8f\u904d\u5386\nvoid InorderNi(ThreadNode* rootNode) {\n    for (ThreadNode* p = LastNode(rootNode); p != NULL; p = BeforeNode(p)) {\n        visit0(p);\n    }\n}\n\nint main(void) {\n    // \u521d\u59cb\u5316\u4e8c\u53c9\u6811\n    ThreadNode* rootNode = initNode();\n    // \u6d4b\u8bd5\u6839\u8282\u70b9\u63d2\u5165\u6570\u636e\n    rootNode-&gt;data = 1;\n    printf(\"\u6839\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;data);\n    // \u6d4b\u8bd5\u5f80\u4e8c\u53c9\u6811\u521b\u5efa\u8282\u70b9\n    insertNode(rootNode, 2, 0);\n    insertNode(rootNode, 3, 1);\n    printf(\"\u7b2c\u4e8c\u5c42\u5de6\u8282\u70b9\u6570\u636e:%d\\n\u7b2c\u4e8c\u5c42\u53f3\u8282\u70b9\u6570\u636e:%d\\n\", rootNode-&gt;left-&gt;data,\n           rootNode-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left, 4, 1);\n    insertNode(rootNode-&gt;right, 5, 1);\n    printf(\"\u7b2c\u4e09\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\u7b2c\u4e09\u5c42\u7b2c\u4e8c\u4e2a\u8282\u70b9\u53f3\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;data, rootNode-&gt;right-&gt;right-&gt;data);\n    insertNode(rootNode-&gt;left-&gt;right, 6, 0);\n    printf(\"\u7b2c\u56db\u5c42\u7b2c\u4e00\u4e2a\u8282\u70b9\u5de6\u6307\u9488\u6570\u636e:%d\\n\",\n           rootNode-&gt;left-&gt;right-&gt;left-&gt;data);\n\n    createInThread(rootNode);\n\n    printf(\"\u4e2d\u5e8f\u904d\u5386:\\n\");\n    Inorder(rootNode);\n    printf(\"\\n\u9006\u4e2d\u5e8f\u904d\u5386:\\n\");\n    InorderNi(rootNode);\n}\n</code></pre>"}]}